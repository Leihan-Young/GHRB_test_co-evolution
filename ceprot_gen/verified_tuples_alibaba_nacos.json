{
  "1": {
    "commit_src": "cdb11448ac09b2a4f83efb96b971e88ee717657c",
    "commit_tgt": "b8bd1cb90d3722d91c8f9cd830e7ebd289258fc7",
    "changed_tests": [
      "common/src/test/java/com/alibaba/nacos/common/remote/client/RpcClientTest.java"
    ],
    "refer_PR": "alibaba_nacos-9080",
    "test_src": ".com.alibaba.nacos.common.remote.client.RpcClientTest#testHealthCheck",
    "test_tgt": [
      ".com.alibaba.nacos.common.remote.client.RpcClientTest#testHealthCheck"
    ],
    "test_src_code": "    @Test\n    public void testHealthCheck() throws IllegalAccessException, NacosException {\n        healthCheckRetryTimes.set(rpcClient, 3);\n        healthCheckTimeOut.set(rpcClient, 3000L);\n        rpcClient.rpcClientStatus.set(RpcClientStatus.RUNNING);\n        rpcClient.currentConnection = connection;\n        doThrow(new NacosException()).when(connection).request(any(), anyLong());\n        try {\n            healthCheck.invoke(rpcClient);\n        } catch (InvocationTargetException e) {\n            e.printStackTrace();\n        }\n        verify(connection, times(3)).request(any(), anyLong());\n    }\n",
    "focal_path": "common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java#healthCheck",
    "focal_src": "    private boolean healthCheck() {\n        HealthCheckRequest healthCheckRequest = new HealthCheckRequest();\n        if (this.currentConnection == null) {\n            return false;\n        }\n        int reTryTimes = healthCheckRetryTimes;\n        while (reTryTimes > 0) {\n            reTryTimes--;\n            try {\n                Response response = this.currentConnection.request(healthCheckRequest, healthCheckTimeOut);\n                // not only check server is ok, also check connection is register.\n                return response != null && response.isSuccess();\n            } catch (NacosException e) {\n                // ignore\n            }\n        }\n        return false;\n    }\n",
    "focal_tgt": "    private boolean healthCheck() {\n        HealthCheckRequest healthCheckRequest = new HealthCheckRequest();\n        if (this.currentConnection == null) {\n            return false;\n        }\n        int reTryTimes = healthCheckRetryTimes;\n        while (reTryTimes >= 0) {\n            reTryTimes--;\n            try {\n                Response response = this.currentConnection.request(healthCheckRequest, healthCheckTimeOut);\n                // not only check server is ok, also check connection is register.\n                return response != null && response.isSuccess();\n            } catch (NacosException e) {\n                // ignore\n            }\n        }\n        return false;\n    }\n",
    "test_id": 1,
    "edit_seq": [
      [
        "private",
        "private",
        "equal"
      ],
      [
        "boolean",
        "boolean",
        "equal"
      ],
      [
        "health",
        "health",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Check",
        "Check",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "Health",
        "Health",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Check",
        "Check",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Request",
        "Request",
        "equal"
      ],
      [
        "health",
        "health",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Check",
        "Check",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Request",
        "Request",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Health",
        "Health",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Check",
        "Check",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Request",
        "Request",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "current",
        "current",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Connection",
        "Connection",
        "equal"
      ],
      [
        "==",
        "==",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "int",
        "int",
        "equal"
      ],
      [
        "re",
        "re",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Try",
        "Try",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Times",
        "Times",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "health",
        "health",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Check",
        "Check",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Retry",
        "Retry",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Times",
        "Times",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "while",
        "while",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "re",
        "re",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Try",
        "Try",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Times",
        "Times",
        "equal"
      ],
      [
        ">",
        ">=",
        "replace"
      ],
      [
        "0",
        "0",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "re",
        "re",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Try",
        "Try",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Times",
        "Times",
        "equal"
      ],
      [
        "--",
        "--",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "current",
        "current",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Connection",
        "Connection",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "request",
        "request",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "health",
        "health",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Check",
        "Check",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Request",
        "Request",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "health",
        "health",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Check",
        "Check",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Time",
        "Time",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Out",
        "Out",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "!=",
        "!=",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        "&&",
        "&&",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Success",
        "Success",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "e",
        "e",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    public void testHealthCheck() throws IllegalAccessException, NacosException { healthCheckRetryTimes.set(rpcClient, 3);\n        healthCheckTimeOut.set(rpcClient, 3000L);\n        rpcClient.rpcClientStatus.set(RpcClientStatus.RUNNING);\n        rpcClient.currentConnection = connection;\n        doThrow(new NacosException()).when(connection).request(any(), anyLong());\n        try {\n            healthCheck.invoke(rpcClient);\n        } catch (InvocationTargetException e) {\n            e.printStackTrace();\n        }\n        verify(connection, times(3)).request(any(), anyLong());\n"
  },
  "2": {
    "commit_src": "04fe7eab2fa20423e09d2019da18fba3fa4b6191",
    "commit_tgt": "45165f7c065ff33f6a875b6c7babf2b09cb9a752",
    "changed_tests": [
      "core/src/test/java/com/alibaba/nacos/core/cluster/MemberUtilTest.java",
      "core/src/test/java/com/alibaba/nacos/core/cluster/ServerMemberManagerTest.java",
      "core/src/test/java/com/alibaba/nacos/core/controller/NacosClusterControllerTest.java"
    ],
    "refer_PR": "alibaba_nacos-9228",
    "test_src": ".com.alibaba.nacos.core.controller.NacosClusterControllerTest#testReport",
    "test_tgt": [
      ".com.alibaba.nacos.core.controller.NacosClusterControllerTest#testReport"
    ],
    "test_src_code": "    @Test\n    public void testReport() {\n        Mockito.when(serverMemberManager.update(Mockito.any())).thenReturn(true);\n        \n        Member member = new Member();\n        member.setIp(\"1.1.1.1\");\n        member.setPort(8848);\n        member.setAddress(\"test\");\n        RestResult<String> result = nacosClusterController.report(member);\n        Assert.assertTrue(Boolean.parseBoolean(result.getData()));\n    }\n",
    "focal_path": "core/src/main/java/com/alibaba/nacos/core/controller/NacosClusterController.java#report",
    "focal_src": "    /**\n     * Other nodes return their own metadata information.\n     *\n     * @param node {@link Member}\n     * @return {@link RestResult}\n     */\n    @PostMapping(value = {\"/report\"})\n    public RestResult<String> report(@RequestBody Member node) {\n        if (!node.check()) {\n            return RestResultUtils.failedWithMsg(400, \"Node information is illegal\");\n        }\n        LoggerUtils.printIfDebugEnabled(Loggers.CLUSTER, \"node state report, receive info : {}\", node);\n        node.setState(NodeState.UP);\n        node.setFailAccessCnt(0);\n        \n        boolean result = memberManager.update(node);\n        \n        return RestResultUtils.success(Boolean.toString(result));\n    }\n",
    "focal_tgt": "    /**\n     * Other nodes return their own metadata information.\n     *\n     * @param node {@link Member}\n     * @return {@link RestResult}\n     */\n    @PostMapping(value = {\"/report\"})\n    public RestResult<String> report(@RequestBody Member node) {\n        if (!node.check()) {\n            return RestResultUtils.failedWithMsg(400, \"Node information is illegal\");\n        }\n        LoggerUtils.printIfDebugEnabled(Loggers.CLUSTER, \"node state report, receive info : {}\", node);\n        node.setState(NodeState.UP);\n        node.setFailAccessCnt(0);\n        memberManager.update(node);\n        return RestResultUtils.success(JacksonUtils.toJson(memberManager.getSelf()));\n    }\n",
    "test_id": 2,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Post",
        "Post",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Mapping",
        "Mapping",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "value",
        "value",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "/",
        "/",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "report",
        "report",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "public",
        "public",
        "equal"
      ],
      [
        "Rest",
        "Rest",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Result",
        "Result",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "report",
        "report",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Request",
        "Request",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Body",
        "Body",
        "equal"
      ],
      [
        "Member",
        "Member",
        "equal"
      ],
      [
        "node",
        "node",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "!",
        "!",
        "equal"
      ],
      [
        "node",
        "node",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "check",
        "check",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "Rest",
        "Rest",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Result",
        "Result",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "failed",
        "failed",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "With",
        "With",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Msg",
        "Msg",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "400",
        "400",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "Node",
        "Node",
        "equal"
      ],
      [
        "information",
        "information",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "illegal",
        "illegal",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "Logger",
        "Logger",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "print",
        "print",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "If",
        "If",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Debug",
        "Debug",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Enabled",
        "Enabled",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Loggers",
        "Loggers",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLUSTER",
        "CLUSTER",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "node",
        "node",
        "equal"
      ],
      [
        "state",
        "state",
        "equal"
      ],
      [
        "report",
        "report",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "receive",
        "receive",
        "equal"
      ],
      [
        "info",
        "info",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "node",
        "node",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "node",
        "node",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "set",
        "set",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "State",
        "State",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Node",
        "Node",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "State",
        "State",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "UP",
        "UP",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "node",
        "node",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "set",
        "set",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Fail",
        "Fail",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Access",
        "Access",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Cnt",
        "Cnt",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "0",
        "0",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "boolean",
        "",
        "delete"
      ],
      [
        "result",
        "",
        "delete"
      ],
      [
        "=",
        "",
        "delete"
      ],
      [
        "member",
        "member",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Manager",
        "Manager",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "update",
        "update",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "node",
        "node",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "Rest",
        "Rest",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Result",
        "Result",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "success",
        "success",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Boolean",
        "Jackson",
        "replace"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Utils",
        "insert"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "to",
        "to",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "String",
        "Json",
        "replace"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "result",
        "member",
        "replace"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Manager",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "get",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Self",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    public void testReport() { Mockito.when(serverMemberManager.update(Mockito.any())).thenReturn(true);\n        \n        Member member = new Member();\n        member.setIp(\"1.1.1.1\");\n        member.setPort(8848);\n        member.setAddress(\"test\");RestResult<String> result = nacosClusterController.report(member);\n        Assert.assertTrue(Boolean.parseBoolean(result.getData()));\n        }\n"
  },
  "3": {
    "commit_src": "86cf2082a9eb7ad2f63a339238deff5d1c344369",
    "commit_tgt": "37d45ad8b62eb8733dd18adc4187d2e1bff65220",
    "changed_tests": [
      "common/src/test/java/com/alibaba/nacos/common/remote/client/RpcClientTest.java"
    ],
    "refer_PR": "alibaba_nacos-10958",
    "test_src": ".com.alibaba.nacos.common.remote.client.RpcClientTest#testRequestFutureWhenRetryReachMaxRetryTimesThenSwitchServer",
    "test_tgt": [
      ".com.alibaba.nacos.common.remote.client.RpcClientTest#testRequestFutureWhenRetryReachMaxRetryTimesThenSwitchServer"
    ],
    "test_src_code": "    @Test\n    public void testRequestFutureWhenRetryReachMaxRetryTimesThenSwitchServer()\n            throws NacosException, IllegalAccessException {\n        when(rpcClientConfig.timeOutMills()).thenReturn(5000L);\n        when(rpcClientConfig.retryTimes()).thenReturn(3);\n        rpcClient.rpcClientStatus.set(RpcClientStatus.RUNNING);\n        rpcClient.currentConnection = connection;\n        doThrow(NacosException.class).when(connection).requestFuture(any());\n        Exception exception = null;\n        \n        try {\n            rpcClient.requestFuture(null);\n        } catch (NacosException e) {\n            exception = e;\n        }\n        \n        verify(connection, times(3)).requestFuture(any());\n        verify(rpcClient).switchServerAsyncOnRequestFail();\n        Assert.assertNotNull(exception);\n        assertEquals(RpcClientStatus.UNHEALTHY, rpcClient.rpcClientStatus.get());\n    }\n",
    "focal_path": "common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java#requestFuture",
    "focal_src": "    /**\n     * send async request.\n     *\n     * @param request request.\n     * @return request future.\n     */\n    public RequestFuture requestFuture(Request request) throws NacosException {\n        int retryTimes = 0;\n        long start = System.currentTimeMillis();\n        Exception exceptionToThrow = null;\n        while (retryTimes < rpcClientConfig.retryTimes()\n                && System.currentTimeMillis() < start + rpcClientConfig.timeOutMills()) {\n            boolean waitReconnect = false;\n            try {\n                if (this.currentConnection == null || !isRunning()) {\n                    waitReconnect = true;\n                    throw new NacosException(NacosException.CLIENT_DISCONNECT, \"Client not connected.\");\n                }\n                return this.currentConnection.requestFuture(request);\n            } catch (Exception e) {\n                if (waitReconnect) {\n                    try {\n                        // wait client to reconnect.\n                        Thread.sleep(100L);\n                    } catch (Exception exception) {\n                        // Do nothing.\n                    }\n                }\n                LoggerUtils.printIfErrorEnabled(LOGGER,\n                        \"[{}] Send request fail, request = {}, retryTimes = {}, errorMessage = {}\",\n                        rpcClientConfig.name(), request, retryTimes, e.getMessage());\n                exceptionToThrow = e;\n                \n            }\n            retryTimes++;\n        }\n        \n        if (rpcClientStatus.compareAndSet(RpcClientStatus.RUNNING, RpcClientStatus.UNHEALTHY)) {\n            switchServerAsyncOnRequestFail();\n        }\n        \n        if (exceptionToThrow != null) {\n            throw (exceptionToThrow instanceof NacosException) ? (NacosException) exceptionToThrow\n                    : new NacosException(SERVER_ERROR, exceptionToThrow);\n        } else {\n            throw new NacosException(SERVER_ERROR, \"Request future fail, unknown error\");\n        }\n        \n    }\n",
    "focal_tgt": "    /**\n     * send async request.\n     *\n     * @param request request.\n     * @return request future.\n     */\n    public RequestFuture requestFuture(Request request) throws NacosException {\n        int retryTimes = 0;\n        long start = System.currentTimeMillis();\n        Exception exceptionToThrow = null;\n        while (retryTimes <= rpcClientConfig.retryTimes()\n                && System.currentTimeMillis() < start + rpcClientConfig.timeOutMills()) {\n            boolean waitReconnect = false;\n            try {\n                if (this.currentConnection == null || !isRunning()) {\n                    waitReconnect = true;\n                    throw new NacosException(NacosException.CLIENT_DISCONNECT, \"Client not connected.\");\n                }\n                return this.currentConnection.requestFuture(request);\n            } catch (Exception e) {\n                if (waitReconnect) {\n                    try {\n                        // wait client to reconnect.\n                        Thread.sleep(100L);\n                    } catch (Exception exception) {\n                        // Do nothing.\n                    }\n                }\n                LoggerUtils.printIfErrorEnabled(LOGGER,\n                        \"[{}] Send request fail, request = {}, retryTimes = {}, errorMessage = {}\",\n                        rpcClientConfig.name(), request, retryTimes, e.getMessage());\n                exceptionToThrow = e;\n                \n            }\n            retryTimes++;\n        }\n        \n        if (rpcClientStatus.compareAndSet(RpcClientStatus.RUNNING, RpcClientStatus.UNHEALTHY)) {\n            switchServerAsyncOnRequestFail();\n        }\n        \n        if (exceptionToThrow != null) {\n            throw (exceptionToThrow instanceof NacosException) ? (NacosException) exceptionToThrow\n                    : new NacosException(SERVER_ERROR, exceptionToThrow);\n        } else {\n            throw new NacosException(SERVER_ERROR, \"Request future fail, unknown error\");\n        }\n        \n    }\n",
    "test_id": 3,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "Request",
        "Request",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "request",
        "request",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Request",
        "Request",
        "equal"
      ],
      [
        "request",
        "request",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "int",
        "int",
        "equal"
      ],
      [
        "retry",
        "retry",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Times",
        "Times",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "0",
        "0",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "long",
        "long",
        "equal"
      ],
      [
        "start",
        "start",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "System",
        "System",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "current",
        "current",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Time",
        "Time",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Millis",
        "Millis",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "To",
        "To",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Throw",
        "Throw",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "while",
        "while",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "retry",
        "retry",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Times",
        "Times",
        "equal"
      ],
      [
        "<",
        "<=",
        "replace"
      ],
      [
        "rpc",
        "rpc",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Client",
        "Client",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Config",
        "Config",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "retry",
        "retry",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Times",
        "Times",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "&&",
        "&&",
        "equal"
      ],
      [
        "System",
        "System",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "current",
        "current",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Time",
        "Time",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Millis",
        "Millis",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "start",
        "start",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "rpc",
        "rpc",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Client",
        "Client",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Config",
        "Config",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "time",
        "time",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Out",
        "Out",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Mills",
        "Mills",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "boolean",
        "boolean",
        "equal"
      ],
      [
        "wait",
        "wait",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Reconnect",
        "Reconnect",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "current",
        "current",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Connection",
        "Connection",
        "equal"
      ],
      [
        "==",
        "==",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        "||",
        "||",
        "equal"
      ],
      [
        "!",
        "!",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Running",
        "Running",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "wait",
        "wait",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Reconnect",
        "Reconnect",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "true",
        "true",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "throw",
        "throw",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLIENT",
        "CLIENT",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "DISCONNECT",
        "DISCONNECT",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "Client",
        "Client",
        "equal"
      ],
      [
        "not",
        "not",
        "equal"
      ],
      [
        "connected",
        "connected",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "current",
        "current",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Connection",
        "Connection",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "request",
        "request",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "request",
        "request",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "e",
        "e",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "wait",
        "wait",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Reconnect",
        "Reconnect",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "Thread",
        "Thread",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "sleep",
        "sleep",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "100L",
        "100L",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "Logger",
        "Logger",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "print",
        "print",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "If",
        "If",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Error",
        "Error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Enabled",
        "Enabled",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "LOGGER",
        "LOGGER",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "[",
        "[",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "]",
        "]",
        "equal"
      ],
      [
        "Send",
        "Send",
        "equal"
      ],
      [
        "request",
        "request",
        "equal"
      ],
      [
        "fail",
        "fail",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "request",
        "request",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "retry",
        "retry",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Times",
        "Times",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Message",
        "Message",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "rpc",
        "rpc",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Client",
        "Client",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Config",
        "Config",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "name",
        "name",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "request",
        "request",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "retry",
        "retry",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Times",
        "Times",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "e",
        "e",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Message",
        "Message",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "To",
        "To",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Throw",
        "Throw",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "e",
        "e",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "retry",
        "retry",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Times",
        "Times",
        "equal"
      ],
      [
        "++",
        "++",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "rpc",
        "rpc",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Client",
        "Client",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Status",
        "Status",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "compare",
        "compare",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Set",
        "Set",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Rpc",
        "Rpc",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Client",
        "Client",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Status",
        "Status",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "RUNNING",
        "RUNNING",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Rpc",
        "Rpc",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Client",
        "Client",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Status",
        "Status",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "UNHEALTHY",
        "UNHEALTHY",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "switch",
        "switch",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Server",
        "Server",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Async",
        "Async",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "On",
        "On",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Request",
        "Request",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Fail",
        "Fail",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "To",
        "To",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Throw",
        "Throw",
        "equal"
      ],
      [
        "!=",
        "!=",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "throw",
        "throw",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "To",
        "To",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Throw",
        "Throw",
        "equal"
      ],
      [
        "instanceof",
        "instanceof",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "?",
        "?",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "To",
        "To",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Throw",
        "Throw",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "SERVER",
        "SERVER",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "ERROR",
        "ERROR",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "To",
        "To",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Throw",
        "Throw",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "throw",
        "throw",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "SERVER",
        "SERVER",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "ERROR",
        "ERROR",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "Request",
        "Request",
        "equal"
      ],
      [
        "future",
        "future",
        "equal"
      ],
      [
        "fail",
        "fail",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "unknown",
        "unknown",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    public void testRequestFutureWhenRetryReachMaxRetryTimesThenSwitchServer()\n            throws NacosException, IllegalAccessException {\n        when(rpcClientConfig.timeOutMills()).thenReturn(5000L);\n        when(rpcClientConfig.retryTimes()).thenReturn(3);\n        rpcClient.currentConnection = connection;\n        doThrow(NacosException.class).when(connection).requestFuture(any());\n        verify(connection, times(3)).requestFuture(any());\n        Assert.assertNotNull(exception);\n        assertEquals(RpcClientStatus.UNHEALTHY, rpcClient.rpcClientStatus.get());\n    }\n"
  },
  "4": {
    "commit_src": "7911eb03dbe3f2616edf8b4accd9dcb1d6eef3d7",
    "commit_tgt": "d85e3f7f314d532825d0d942d1598d633eddc3e1",
    "changed_tests": [
      "sys/src/test/java/com/alibaba/nacos/sys/utils/PropertiesUtilTest.java"
    ],
    "refer_PR": "alibaba_nacos-11240",
    "test_src": ".com.alibaba.nacos.sys.utils.PropertiesUtilTest#testGetPropertiesWithPrefixForMap",
    "test_tgt": [
      ".com.alibaba.nacos.sys.utils.PropertiesUtilTest#testGetPropertiesWithPrefixForMap",
      ".com.alibaba.nacos.sys.utils.PropertiesUtilTest#testHandleSpringBinder"
    ],
    "test_src_code": "    @Test\n    @SuppressWarnings(\"unchecked\")\n    public void testGetPropertiesWithPrefixForMap()\n            throws ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InvocationTargetException {\n        Map<String, Object> actual = PropertiesUtil.getPropertiesWithPrefixForMap(environment, \"nacos.prefix\");\n        assertEquals(3, actual.size());\n        for (Map.Entry<String, Object> entry : actual.entrySet()) {\n            String key = entry.getKey();\n            Map<String, Object> subMap = (Map<String, Object>) entry.getValue();\n            switch (key) {\n                case \"one\":\n                    assertEquals(\"1\", subMap.get(\"value\"));\n                    break;\n                case \"two\":\n                    assertEquals(\"2\", subMap.get(\"value\"));\n                    break;\n                case \"three\":\n                    assertEquals(\"3\", subMap.get(\"value\"));\n                    break;\n                default:\n                    throw new RuntimeException();\n            }\n        }\n    }\n",
    "focal_path": "sys/src/main/java/com/alibaba/nacos/sys/utils/PropertiesUtil.java#getPropertiesWithPrefixForMap",
    "focal_src": "    public static Map<String, Object> getPropertiesWithPrefixForMap(Environment environment, String prefix)\n            throws ClassNotFoundException, NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n        return handleSpringBinder(environment, prefix, Map.class);\n    }\n",
    "focal_tgt": "    public static Map<String, Object> getPropertiesWithPrefixForMap(Environment environment, String prefix) {\n        return handleSpringBinder(environment, prefix, Map.class);\n    }\n",
    "test_id": 4,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "static",
        "static",
        "equal"
      ],
      [
        "Map",
        "Map",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Object",
        "Object",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Properties",
        "Properties",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "With",
        "With",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Prefix",
        "Prefix",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "For",
        "For",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Map",
        "Map",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Environment",
        "Environment",
        "equal"
      ],
      [
        "environment",
        "environment",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "prefix",
        "prefix",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "",
        "delete"
      ],
      [
        "Class",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Not",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Found",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Exception",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "No",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Such",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Method",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Exception",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "Invocation",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Target",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Exception",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "Illegal",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Access",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Exception",
        "",
        "delete"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "handle",
        "handle",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Spring",
        "Spring",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Binder",
        "Binder",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "environment",
        "environment",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "prefix",
        "prefix",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Map",
        "Map",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "class",
        "class",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    public void testGetPropertiesWithPrefixForMap()throws ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InvocationTargetException {\n        Map<String, Object> actual = PropertiesUtil.getPropertiesWithPrefixForMap(environment, \"nacos.prefix\");\n        assertEquals(3, actual.size());\n        for (Map.Entry<String, Object> entry : actual.entrySet()) {\n            String key = entry.getKey();\n            Map<String, Object> subMap = (Map<String, Object>) entry.getValue();\n            switch (key) {\n                case \"one\":\n                    assertEquals(\"1\", subMap.get(\"value\"));\n                    break;\n               "
  },
  "5": {
    "commit_src": "7911eb03dbe3f2616edf8b4accd9dcb1d6eef3d7",
    "commit_tgt": "d85e3f7f314d532825d0d942d1598d633eddc3e1",
    "changed_tests": [
      "sys/src/test/java/com/alibaba/nacos/sys/utils/PropertiesUtilTest.java"
    ],
    "refer_PR": "alibaba_nacos-11240",
    "test_src": ".com.alibaba.nacos.sys.utils.PropertiesUtilTest#testGetPropertiesWithPrefix",
    "test_tgt": [
      ".com.alibaba.nacos.sys.utils.PropertiesUtilTest#testGetPropertiesWithPrefix",
      ".com.alibaba.nacos.sys.utils.PropertiesUtilTest#testHandleSpringBinder"
    ],
    "test_src_code": "    @Test\n    public void testGetPropertiesWithPrefix()\n            throws ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InvocationTargetException {\n        Properties actual = PropertiesUtil.getPropertiesWithPrefix(environment, \"nacos.prefix\");\n        assertEquals(3, actual.size());\n    }\n",
    "focal_path": "sys/src/main/java/com/alibaba/nacos/sys/utils/PropertiesUtil.java#getPropertiesWithPrefix",
    "focal_src": "    public static Properties getPropertiesWithPrefix(Environment environment, String prefix)\n            throws ClassNotFoundException, NoSuchMethodException, InvocationTargetException, IllegalAccessException {\n        return handleSpringBinder(environment, prefix, Properties.class);\n    }\n",
    "focal_tgt": "    public static Properties getPropertiesWithPrefix(Environment environment, String prefix) {\n        return handleSpringBinder(environment, prefix, Properties.class);\n    }\n",
    "test_id": 5,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "static",
        "static",
        "equal"
      ],
      [
        "Properties",
        "Properties",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Properties",
        "Properties",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "With",
        "With",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Prefix",
        "Prefix",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Environment",
        "Environment",
        "equal"
      ],
      [
        "environment",
        "environment",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "prefix",
        "prefix",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "",
        "delete"
      ],
      [
        "Class",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Not",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Found",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Exception",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "No",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Such",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Method",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Exception",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "Invocation",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Target",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Exception",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "Illegal",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Access",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Exception",
        "",
        "delete"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "handle",
        "handle",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Spring",
        "Spring",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Binder",
        "Binder",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "environment",
        "environment",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "prefix",
        "prefix",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Properties",
        "Properties",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "class",
        "class",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    public void testGetPropertiesWithPrefix()throws ClassNotFoundException, NoSuchMethodException, IllegalAccessException, InvocationTargetException {\n        Properties actual = PropertiesUtil.getPropertiesWithPrefix(environment, \"nacos.prefix\");\n        assertEquals(3, actual.size());\n    }\n'use strict'; "
  },
  "6": {
    "commit_src": "3a1f0c297e37608035514a98ebc51133daad7863",
    "commit_tgt": "6461aeb719ceb4ee0fb3cb7c4fbcff6b56ce539a",
    "changed_tests": [
      "api/src/test/java/com/alibaba/nacos/api/remote/response/ErrorResponseTest.java"
    ],
    "refer_PR": "alibaba_nacos-11893",
    "test_src": ".com.alibaba.nacos.api.remote.response.ErrorResponseTest#testBuildWithErrorCode",
    "test_tgt": [
      ".com.alibaba.nacos.api.remote.response.ErrorResponseTest#testBuildWithErrorCode"
    ],
    "test_src_code": "    @Test\n    public void testBuildWithErrorCode() {\n        int errorCode = 500;\n        String msg = \"err msg\";\n        \n        Response response = ErrorResponse.build(errorCode, msg);\n        \n        Assert.assertEquals(errorCode, response.getErrorCode());\n        Assert.assertEquals(msg, response.getMessage());\n    }\n",
    "focal_path": "api/src/main/java/com/alibaba/nacos/api/remote/response/ErrorResponse.java#build",
    "focal_src": "    /**\n     * build an error response.\n     *\n     * @param exception exception\n     * @return response\n     */\n    public static Response build(Throwable exception) {\n        int errorCode;\n        if (exception instanceof NacosException) {\n            errorCode = ((NacosException) exception).getErrCode();\n        } else if (exception instanceof NacosRuntimeException) {\n            errorCode = ((NacosRuntimeException) exception).getErrCode();\n        } else {\n            errorCode = ResponseCode.FAIL.getCode();\n        }\n        ErrorResponse response = new ErrorResponse();\n        response.setErrorInfo(errorCode, exception.getMessage());\n        return response;\n    }\n",
    "focal_tgt": "    /**\n     * build an error response.\n     *\n     * @param exception exception\n     * @return response\n     */\n    public static Response build(Throwable exception) {\n        int errorCode;\n        if (exception instanceof NacosException) {\n            errorCode = ((NacosException) exception).getErrCode();\n        } else if (exception instanceof NacosRuntimeException) {\n            errorCode = ((NacosRuntimeException) exception).getErrCode();\n        } else {\n            errorCode = ResponseCode.FAIL.getCode();\n        }\n        ErrorResponse response = new ErrorResponse();\n        response.setErrorInfo(errorCode, exception.getMessage());\n        response.setResultCode(errorCode);\n        return response;\n    }\n",
    "test_id": 6,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "static",
        "static",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "build",
        "build",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Throwable",
        "Throwable",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "int",
        "int",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "instanceof",
        "instanceof",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Err",
        "Err",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "instanceof",
        "instanceof",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Runtime",
        "Runtime",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Runtime",
        "Runtime",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Err",
        "Err",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "FAIL",
        "FAIL",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "Error",
        "Error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Error",
        "Error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "set",
        "set",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Error",
        "Error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Info",
        "Info",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Message",
        "Message",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "",
        "response",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "set",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Result",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Code",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "error",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Code",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    public void testBuildWithErrorCode() { int errorCode = 500;\n        String msg = \"err msg\";\n        \n Response response = ErrorResponse.build(errorCode, msg);\n        \n assertEquals(errorCode, response.getErrorCode());\n assertEquals(msg, response.getMessage());\n    }\n} "
  },
  "7": {
    "commit_src": "3a1f0c297e37608035514a98ebc51133daad7863",
    "commit_tgt": "6461aeb719ceb4ee0fb3cb7c4fbcff6b56ce539a",
    "changed_tests": [
      "api/src/test/java/com/alibaba/nacos/api/remote/response/ErrorResponseTest.java"
    ],
    "refer_PR": "alibaba_nacos-11893",
    "test_src": ".com.alibaba.nacos.api.remote.response.ErrorResponseTest#testBuildWithThrowable",
    "test_tgt": [
      ".com.alibaba.nacos.api.remote.response.ErrorResponseTest#testBuildWithThrowable"
    ],
    "test_src_code": "    @Test\n    public void testBuildWithThrowable() {\n        String errMsg = \"exception msg\";\n        RuntimeException runtimeException = new RuntimeException(errMsg);\n        \n        Response response = ErrorResponse.build(runtimeException);\n        \n        Assert.assertEquals(ResponseCode.FAIL.getCode(), response.getErrorCode());\n        Assert.assertEquals(errMsg, response.getMessage());\n    }\n",
    "focal_path": "api/src/main/java/com/alibaba/nacos/api/remote/response/ErrorResponse.java#build",
    "focal_src": "    /**\n     * build an error response.\n     *\n     * @param exception exception\n     * @return response\n     */\n    public static Response build(Throwable exception) {\n        int errorCode;\n        if (exception instanceof NacosException) {\n            errorCode = ((NacosException) exception).getErrCode();\n        } else if (exception instanceof NacosRuntimeException) {\n            errorCode = ((NacosRuntimeException) exception).getErrCode();\n        } else {\n            errorCode = ResponseCode.FAIL.getCode();\n        }\n        ErrorResponse response = new ErrorResponse();\n        response.setErrorInfo(errorCode, exception.getMessage());\n        return response;\n    }\n",
    "focal_tgt": "    /**\n     * build an error response.\n     *\n     * @param exception exception\n     * @return response\n     */\n    public static Response build(Throwable exception) {\n        int errorCode;\n        if (exception instanceof NacosException) {\n            errorCode = ((NacosException) exception).getErrCode();\n        } else if (exception instanceof NacosRuntimeException) {\n            errorCode = ((NacosRuntimeException) exception).getErrCode();\n        } else {\n            errorCode = ResponseCode.FAIL.getCode();\n        }\n        ErrorResponse response = new ErrorResponse();\n        response.setErrorInfo(errorCode, exception.getMessage());\n        response.setResultCode(errorCode);\n        return response;\n    }\n",
    "test_id": 7,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "static",
        "static",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "build",
        "build",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Throwable",
        "Throwable",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "int",
        "int",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "instanceof",
        "instanceof",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Err",
        "Err",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "instanceof",
        "instanceof",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Runtime",
        "Runtime",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Runtime",
        "Runtime",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Err",
        "Err",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "FAIL",
        "FAIL",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "Error",
        "Error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Error",
        "Error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "set",
        "set",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Error",
        "Error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Info",
        "Info",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Message",
        "Message",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "",
        "response",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "set",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Result",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Code",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "error",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Code",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    public void testBuildWithThrowable() { String errMsg = \"exception msg\";\n Throwable runtimeException = new RuntimeException(errMsg); \n        Response response = ErrorResponse.build(runtimeException);\n        \n        Assert.assertEquals(ResponseCode.FAIL.getCode(), response.getErrorCode()); \n        Assert.assertEquals(errMsg, response.getMessage());\n    }\n"
  },
  "8": {
    "commit_src": "3a1f0c297e37608035514a98ebc51133daad7863",
    "commit_tgt": "6461aeb719ceb4ee0fb3cb7c4fbcff6b56ce539a",
    "changed_tests": [
      "api/src/test/java/com/alibaba/nacos/api/remote/response/ErrorResponseTest.java"
    ],
    "refer_PR": "alibaba_nacos-11893",
    "test_src": ".com.alibaba.nacos.api.remote.response.ErrorResponseTest#testBuildWithNacosException",
    "test_tgt": [
      ".com.alibaba.nacos.api.remote.response.ErrorResponseTest#testBuildWithNacosException"
    ],
    "test_src_code": "    @Test\n    public void testBuildWithNacosException() {\n        int errCode = 500;\n        String errMsg = \"nacos exception msg\";\n        NacosException nacosException = new NacosException(errCode, errMsg);\n        \n        Response response = ErrorResponse.build(nacosException);\n        \n        Assert.assertEquals(errCode, response.getErrorCode());\n        Assert.assertEquals(errMsg, response.getMessage());\n    }\n",
    "focal_path": "api/src/main/java/com/alibaba/nacos/api/remote/response/ErrorResponse.java#build",
    "focal_src": "    /**\n     * build an error response.\n     *\n     * @param exception exception\n     * @return response\n     */\n    public static Response build(Throwable exception) {\n        int errorCode;\n        if (exception instanceof NacosException) {\n            errorCode = ((NacosException) exception).getErrCode();\n        } else if (exception instanceof NacosRuntimeException) {\n            errorCode = ((NacosRuntimeException) exception).getErrCode();\n        } else {\n            errorCode = ResponseCode.FAIL.getCode();\n        }\n        ErrorResponse response = new ErrorResponse();\n        response.setErrorInfo(errorCode, exception.getMessage());\n        return response;\n    }\n",
    "focal_tgt": "    /**\n     * build an error response.\n     *\n     * @param exception exception\n     * @return response\n     */\n    public static Response build(Throwable exception) {\n        int errorCode;\n        if (exception instanceof NacosException) {\n            errorCode = ((NacosException) exception).getErrCode();\n        } else if (exception instanceof NacosRuntimeException) {\n            errorCode = ((NacosRuntimeException) exception).getErrCode();\n        } else {\n            errorCode = ResponseCode.FAIL.getCode();\n        }\n        ErrorResponse response = new ErrorResponse();\n        response.setErrorInfo(errorCode, exception.getMessage());\n        response.setResultCode(errorCode);\n        return response;\n    }\n",
    "test_id": 8,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "static",
        "static",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "build",
        "build",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Throwable",
        "Throwable",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "int",
        "int",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "instanceof",
        "instanceof",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Err",
        "Err",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "instanceof",
        "instanceof",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Runtime",
        "Runtime",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Runtime",
        "Runtime",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Err",
        "Err",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "FAIL",
        "FAIL",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "Error",
        "Error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Error",
        "Error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "set",
        "set",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Error",
        "Error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Info",
        "Info",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Message",
        "Message",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "",
        "response",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "set",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Result",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Code",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "error",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Code",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    public void testBuildWithNacosException() { int errCode = 500;\n        String errMsg = \"nacos exception msg\";\n        NacosException nacosException = new NacosException(errCode, errMsg);\n        \n Response response = ErrorResponse.build(nacosException);\n        \n        Assert.assertEquals(errCode, response.getErrorCode());\n        Assert.assertEquals(errMsg, response.getMessage());\n    }\n    @Test\n    public void testBuildWithNacosException() { int errCode = 500;\n        String errMsg = \"nacos exception msg\";\n"
  },
  "9": {
    "commit_src": "3a1f0c297e37608035514a98ebc51133daad7863",
    "commit_tgt": "6461aeb719ceb4ee0fb3cb7c4fbcff6b56ce539a",
    "changed_tests": [
      "api/src/test/java/com/alibaba/nacos/api/remote/response/ErrorResponseTest.java"
    ],
    "refer_PR": "alibaba_nacos-11893",
    "test_src": ".com.alibaba.nacos.api.remote.response.ErrorResponseTest#testBuildWithNacosRuntimeException",
    "test_tgt": [
      ".com.alibaba.nacos.api.remote.response.ErrorResponseTest#testBuildWithNacosRuntimeException"
    ],
    "test_src_code": "    @Test\n    public void testBuildWithNacosRuntimeException() {\n        int errCode = 500;\n        String errMsg = \"nacos runtime exception msg\";\n        NacosRuntimeException nacosRuntimeException = new NacosRuntimeException(errCode, errMsg);\n        \n        Response response = ErrorResponse.build(nacosRuntimeException);\n        \n        Assert.assertEquals(errCode, response.getErrorCode());\n        Assert.assertEquals(\"errCode: \" + errCode + \", errMsg: \" + errMsg + \" \", response.getMessage());\n    }\n",
    "focal_path": "api/src/main/java/com/alibaba/nacos/api/remote/response/ErrorResponse.java#build",
    "focal_src": "    /**\n     * build an error response.\n     *\n     * @param exception exception\n     * @return response\n     */\n    public static Response build(Throwable exception) {\n        int errorCode;\n        if (exception instanceof NacosException) {\n            errorCode = ((NacosException) exception).getErrCode();\n        } else if (exception instanceof NacosRuntimeException) {\n            errorCode = ((NacosRuntimeException) exception).getErrCode();\n        } else {\n            errorCode = ResponseCode.FAIL.getCode();\n        }\n        ErrorResponse response = new ErrorResponse();\n        response.setErrorInfo(errorCode, exception.getMessage());\n        return response;\n    }\n",
    "focal_tgt": "    /**\n     * build an error response.\n     *\n     * @param exception exception\n     * @return response\n     */\n    public static Response build(Throwable exception) {\n        int errorCode;\n        if (exception instanceof NacosException) {\n            errorCode = ((NacosException) exception).getErrCode();\n        } else if (exception instanceof NacosRuntimeException) {\n            errorCode = ((NacosRuntimeException) exception).getErrCode();\n        } else {\n            errorCode = ResponseCode.FAIL.getCode();\n        }\n        ErrorResponse response = new ErrorResponse();\n        response.setErrorInfo(errorCode, exception.getMessage());\n        response.setResultCode(errorCode);\n        return response;\n    }\n",
    "test_id": 9,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "static",
        "static",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "build",
        "build",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Throwable",
        "Throwable",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "int",
        "int",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "instanceof",
        "instanceof",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Err",
        "Err",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "instanceof",
        "instanceof",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Runtime",
        "Runtime",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Nacos",
        "Nacos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Runtime",
        "Runtime",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Err",
        "Err",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "FAIL",
        "FAIL",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "Error",
        "Error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Error",
        "Error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "set",
        "set",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Error",
        "Error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Info",
        "Info",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Message",
        "Message",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "",
        "response",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "set",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Result",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Code",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "error",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Code",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    public void testBuildWithNacosRuntimeException() { int errCode = 500;\n        String errMsg = \"nacos runtime exception msg\";\n        NacosRuntimeException nacosRuntimeException = new NacosRuntimeException(errCode, errMsg);\n        \n Response response = ErrorResponse.build(nacosRuntimeException);\n        \n Assert.assertEquals(errCode, response.getErrorCode());\n        Assert.assertEquals(\"errCode: \" + errCode + \", errMsg: \" + errMsg + \" \", response.getMessage());\n    }\n"
  }
}