{
  "1": {
    "commit_src": "d07d89159f80740d5a79fdb6242d978378d78b58",
    "commit_tgt": "850f719927962ad983e93bbbee391471b1bd2cf7",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/LocalHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11051",
    "test_src": ".org.apache.dubbo.qos.server.handler.QosProcessHandlerTest#testDecodeHttp",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.QosProcessHandlerTest#testDecodeHttp"
    ],
    "test_src_code": "    @Test\n    void testDecodeHttp() throws Exception {\n        ByteBuf buf = Unpooled.wrappedBuffer(new byte[] {'G'});\n        ChannelHandlerContext context = Mockito.mock(ChannelHandlerContext.class);\n        ChannelPipeline pipeline = Mockito.mock(ChannelPipeline.class);\n        Mockito.when(context.pipeline()).thenReturn(pipeline);\n        QosProcessHandler handler = new QosProcessHandler(FrameworkModel.defaultModel(), \"welcome\", false);\n        handler.decode(context, buf, Collections.emptyList());\n        verify(pipeline).addLast(any(HttpServerCodec.class));\n        verify(pipeline).addLast(any(HttpObjectAggregator.class));\n        verify(pipeline).addLast(any(HttpProcessHandler.class));\n        verify(pipeline).remove(handler);\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/QosProcessHandler.java#decode",
    "focal_src": "    @Override\n    protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {\n        if (in.readableBytes() < 1) {\n            return;\n        }\n\n        // read one byte to guess protocol\n        final int magic = in.getByte(in.readerIndex());\n\n        ChannelPipeline p = ctx.pipeline();\n        p.addLast(new LocalHostPermitHandler(acceptForeignIp));\n        if (isHttp(magic)) {\n            // no welcome output for http protocol\n            if (welcomeFuture != null && welcomeFuture.isCancellable()) {\n                welcomeFuture.cancel(false);\n            }\n            p.addLast(new HttpServerCodec());\n            p.addLast(new HttpObjectAggregator(1048576));\n            p.addLast(new HttpProcessHandler(frameworkModel));\n            p.remove(this);\n        } else {\n            p.addLast(new LineBasedFrameDecoder(2048));\n            p.addLast(new StringDecoder(CharsetUtil.UTF_8));\n            p.addLast(new StringEncoder(CharsetUtil.UTF_8));\n            p.addLast(new IdleStateHandler(0, 0, 5 * 60));\n            p.addLast(new TelnetIdleEventHandler());\n            p.addLast(new TelnetProcessHandler(frameworkModel));\n            p.remove(this);\n        }\n    }\n",
    "focal_tgt": "    @Override\n    protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {\n        if (in.readableBytes() < 1) {\n            return;\n        }\n\n        // read one byte to guess protocol\n        final int magic = in.getByte(in.readerIndex());\n\n        ChannelPipeline p = ctx.pipeline();\n        p.addLast(new ForeignHostPermitHandler(acceptForeignIp, acceptForeignIpWhitelist));\n        if (isHttp(magic)) {\n            // no welcome output for http protocol\n            if (welcomeFuture != null && welcomeFuture.isCancellable()) {\n                welcomeFuture.cancel(false);\n            }\n            p.addLast(new HttpServerCodec());\n            p.addLast(new HttpObjectAggregator(1048576));\n            p.addLast(new HttpProcessHandler(frameworkModel));\n            p.remove(this);\n        } else {\n            p.addLast(new LineBasedFrameDecoder(2048));\n            p.addLast(new StringDecoder(CharsetUtil.UTF_8));\n            p.addLast(new StringEncoder(CharsetUtil.UTF_8));\n            p.addLast(new IdleStateHandler(0, 0, 5 * 60));\n            p.addLast(new TelnetIdleEventHandler());\n            p.addLast(new TelnetProcessHandler(frameworkModel));\n            p.remove(this);\n        }\n    }\n",
    "test_id": 1,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "protected",
        "protected",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "decode",
        "decode",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Byte",
        "Byte",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Buf",
        "Buf",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "Object",
        "Object",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "out",
        "out",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "readable",
        "readable",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bytes",
        "Bytes",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "1",
        "1",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "final",
        "final",
        "equal"
      ],
      [
        "int",
        "int",
        "equal"
      ],
      [
        "magic",
        "magic",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Byte",
        "Byte",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "reader",
        "reader",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Index",
        "Index",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Pipeline",
        "Pipeline",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "pipeline",
        "pipeline",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Local",
        "Foreign",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Host",
        "Host",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Permit",
        "Permit",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "accept",
        "accept",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Foreign",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Ip",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Whitelist",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "magic",
        "magic",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "welcome",
        "welcome",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "!=",
        "!=",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        "&&",
        "&&",
        "equal"
      ],
      [
        "welcome",
        "welcome",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Cancellable",
        "Cancellable",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "welcome",
        "welcome",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "cancel",
        "cancel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Server",
        "Server",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Codec",
        "Codec",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Object",
        "Object",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Aggregator",
        "Aggregator",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "1048576",
        "1048576",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "remove",
        "remove",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Line",
        "Line",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Based",
        "Based",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Frame",
        "Frame",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "2048",
        "2048",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Charset",
        "Charset",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Util",
        "Util",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "UTF",
        "UTF",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "8",
        "8",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Encoder",
        "Encoder",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Charset",
        "Charset",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Util",
        "Util",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "UTF",
        "UTF",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "8",
        "8",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Idle",
        "Idle",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "State",
        "State",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "0",
        "0",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "0",
        "0",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "5",
        "5",
        "equal"
      ],
      [
        "*",
        "*",
        "equal"
      ],
      [
        "60",
        "60",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Idle",
        "Idle",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Event",
        "Event",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "remove",
        "remove",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testDecodeHttp()throws Exception {        ByteBuf buf = Unpooled.wrappedBuffer(new byte[] {\\'G\\'});\n        ChannelHandlerContext context = Mockito.mock(ChannelHandlerContext.class);\n        ChannelPipeline pipeline = Mockito.mock(ChannelPipeline.class);\n        Mockito.when(context.pipeline()).thenReturn(pipeline);\n        QosProcessHandler handler = new QosProcessHandler(FrameworkModel.defaultModel(), \"welcome\", false);\n        handler.decode(context, buf, Collections.emptyList());\n        verify(pipeline).addLast(any(HttpServerCodec.class));\n        verify("
  },
  "2": {
    "commit_src": "d07d89159f80740d5a79fdb6242d978378d78b58",
    "commit_tgt": "850f719927962ad983e93bbbee391471b1bd2cf7",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/LocalHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11051",
    "test_src": ".org.apache.dubbo.qos.server.handler.QosProcessHandlerTest#testDecodeTelnet",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.QosProcessHandlerTest#testDecodeTelnet"
    ],
    "test_src_code": "    @Test\n    void testDecodeTelnet() throws Exception {\n        ByteBuf buf = Unpooled.wrappedBuffer(new byte[] {'A'});\n        ChannelHandlerContext context = Mockito.mock(ChannelHandlerContext.class);\n        ChannelPipeline pipeline = Mockito.mock(ChannelPipeline.class);\n        Mockito.when(context.pipeline()).thenReturn(pipeline);\n        QosProcessHandler handler = new QosProcessHandler(FrameworkModel.defaultModel(), \"welcome\", false);\n        handler.decode(context, buf, Collections.emptyList());\n        verify(pipeline).addLast(any(LineBasedFrameDecoder.class));\n        verify(pipeline).addLast(any(StringDecoder.class));\n        verify(pipeline).addLast(any(StringEncoder.class));\n        verify(pipeline).addLast(any(TelnetProcessHandler.class));\n        verify(pipeline).remove(handler);\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/QosProcessHandler.java#decode",
    "focal_src": "    @Override\n    protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {\n        if (in.readableBytes() < 1) {\n            return;\n        }\n\n        // read one byte to guess protocol\n        final int magic = in.getByte(in.readerIndex());\n\n        ChannelPipeline p = ctx.pipeline();\n        p.addLast(new LocalHostPermitHandler(acceptForeignIp));\n        if (isHttp(magic)) {\n            // no welcome output for http protocol\n            if (welcomeFuture != null && welcomeFuture.isCancellable()) {\n                welcomeFuture.cancel(false);\n            }\n            p.addLast(new HttpServerCodec());\n            p.addLast(new HttpObjectAggregator(1048576));\n            p.addLast(new HttpProcessHandler(frameworkModel));\n            p.remove(this);\n        } else {\n            p.addLast(new LineBasedFrameDecoder(2048));\n            p.addLast(new StringDecoder(CharsetUtil.UTF_8));\n            p.addLast(new StringEncoder(CharsetUtil.UTF_8));\n            p.addLast(new IdleStateHandler(0, 0, 5 * 60));\n            p.addLast(new TelnetIdleEventHandler());\n            p.addLast(new TelnetProcessHandler(frameworkModel));\n            p.remove(this);\n        }\n    }\n",
    "focal_tgt": "    @Override\n    protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {\n        if (in.readableBytes() < 1) {\n            return;\n        }\n\n        // read one byte to guess protocol\n        final int magic = in.getByte(in.readerIndex());\n\n        ChannelPipeline p = ctx.pipeline();\n        p.addLast(new ForeignHostPermitHandler(acceptForeignIp, acceptForeignIpWhitelist));\n        if (isHttp(magic)) {\n            // no welcome output for http protocol\n            if (welcomeFuture != null && welcomeFuture.isCancellable()) {\n                welcomeFuture.cancel(false);\n            }\n            p.addLast(new HttpServerCodec());\n            p.addLast(new HttpObjectAggregator(1048576));\n            p.addLast(new HttpProcessHandler(frameworkModel));\n            p.remove(this);\n        } else {\n            p.addLast(new LineBasedFrameDecoder(2048));\n            p.addLast(new StringDecoder(CharsetUtil.UTF_8));\n            p.addLast(new StringEncoder(CharsetUtil.UTF_8));\n            p.addLast(new IdleStateHandler(0, 0, 5 * 60));\n            p.addLast(new TelnetIdleEventHandler());\n            p.addLast(new TelnetProcessHandler(frameworkModel));\n            p.remove(this);\n        }\n    }\n",
    "test_id": 2,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "protected",
        "protected",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "decode",
        "decode",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Byte",
        "Byte",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Buf",
        "Buf",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "Object",
        "Object",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "out",
        "out",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "readable",
        "readable",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bytes",
        "Bytes",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "1",
        "1",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "final",
        "final",
        "equal"
      ],
      [
        "int",
        "int",
        "equal"
      ],
      [
        "magic",
        "magic",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Byte",
        "Byte",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "reader",
        "reader",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Index",
        "Index",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Pipeline",
        "Pipeline",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "pipeline",
        "pipeline",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Local",
        "Foreign",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Host",
        "Host",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Permit",
        "Permit",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "accept",
        "accept",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Foreign",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Ip",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Whitelist",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "magic",
        "magic",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "welcome",
        "welcome",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "!=",
        "!=",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        "&&",
        "&&",
        "equal"
      ],
      [
        "welcome",
        "welcome",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Cancellable",
        "Cancellable",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "welcome",
        "welcome",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "cancel",
        "cancel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Server",
        "Server",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Codec",
        "Codec",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Object",
        "Object",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Aggregator",
        "Aggregator",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "1048576",
        "1048576",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "remove",
        "remove",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Line",
        "Line",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Based",
        "Based",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Frame",
        "Frame",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "2048",
        "2048",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Charset",
        "Charset",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Util",
        "Util",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "UTF",
        "UTF",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "8",
        "8",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Encoder",
        "Encoder",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Charset",
        "Charset",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Util",
        "Util",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "UTF",
        "UTF",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "8",
        "8",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Idle",
        "Idle",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "State",
        "State",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "0",
        "0",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "0",
        "0",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "5",
        "5",
        "equal"
      ],
      [
        "*",
        "*",
        "equal"
      ],
      [
        "60",
        "60",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Idle",
        "Idle",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Event",
        "Event",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "remove",
        "remove",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testDecodeTelnet() throws Exception { \n        ByteBuf buf = Unpooled.wrappedBuffer(new byte[] {\\'A\\'});\n        ChannelHandlerContext context = Mockito.mock(ChannelHandlerContext.class);\n        ChannelPipeline pipeline = Mockito.mock(ChannelPipeline.class);\n        Mockito.when(context.pipeline()).thenReturn(pipeline);\n        QosProcessHandler handler = new QosProcessHandler(FrameworkModel.defaultModel(), \"welcome\", false);\n        handler.decode(context, buf, Collections.emptyList());\n        verify(pipeline).addLast(any(LineBasedFrameDecoder.class));"
  },
  "3": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.command.DefaultCommandExecutorTest#testExecute2",
    "test_tgt": [
      ".org.apache.dubbo.qos.command.DefaultCommandExecutorTest#testExecute2",
      ".org.apache.dubbo.qos.command.DefaultCommandExecutorTest#shouldNotThrowPermissionDenyException_GivenPermissionConfigAndMatchDefaultPUBLICCmdPermissionLevel",
      ".org.apache.dubbo.qos.command.DefaultCommandExecutorTest#shouldNotThrowPermissionDenyException_GivenPermissionConfigAndNotMatchCmdPermissionLevel"
    ],
    "test_src_code": "    @Test\n    void testExecute2() throws Exception {\n        DefaultCommandExecutor executor = new DefaultCommandExecutor(FrameworkModel.defaultModel());\n        String result = executor.execute(CommandContextFactory.newInstance(\"greeting\", new String[]{\"dubbo\"}, false));\n        assertThat(result, equalTo(\"greeting dubbo\"));\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/command/DefaultCommandExecutor.java#execute",
    "focal_src": "    @Override\n    public String execute(CommandContext commandContext) throws NoSuchCommandException {\n        BaseCommand command = null;\n        try {\n            command = frameworkModel.getExtensionLoader(BaseCommand.class).getExtension(commandContext.getCommandName());\n        } catch (Throwable throwable) {\n                //can't find command\n        }\n        if (command == null) {\n            throw new NoSuchCommandException(commandContext.getCommandName());\n        }\n        return command.execute(commandContext, commandContext.getArgs());\n    }\n",
    "focal_tgt": "    @Override\n    public String execute(CommandContext commandContext) throws NoSuchCommandException, PermissionDenyException {\n        BaseCommand command = null;\n        try {\n            command = frameworkModel.getExtensionLoader(BaseCommand.class).getExtension(commandContext.getCommandName());\n        } catch (Throwable throwable) {\n                //can't find command\n        }\n        if (command == null) {\n            throw new NoSuchCommandException(commandContext.getCommandName());\n        }\n\n        // check permission when configs allow anonymous access\n        if (commandContext.isAllowAnonymousAccess()) {\n            PermissionChecker permissionChecker = DefaultAnonymousAccessPermissionChecker.INSTANCE;\n            try {\n                permissionChecker = frameworkModel.getExtensionLoader(PermissionChecker.class).getExtension(QosConstants.QOS_PERMISSION_CHECKER);\n            } catch (Throwable throwable) {\n                //can't find valid custom permissionChecker\n            }\n\n            final Cmd cmd = command.getClass().getAnnotation(Cmd.class);\n            final PermissionLevel cmdRequiredPermissionLevel = cmd.requiredPermissionLevel();\n\n            if (!permissionChecker.access(commandContext, cmdRequiredPermissionLevel)) {\n                throw new PermissionDenyException(commandContext.getCommandName());\n            }\n        }\n\n        return command.execute(commandContext, commandContext.getArgs());\n    }\n",
    "test_id": 3,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "public",
        "public",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "No",
        "No",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Such",
        "Such",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Deny",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Exception",
        "insert"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "Base",
        "Base",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Extension",
        "Extension",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Loader",
        "Loader",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Base",
        "Base",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "class",
        "class",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Extension",
        "Extension",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Name",
        "Name",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Throwable",
        "Throwable",
        "equal"
      ],
      [
        "throwable",
        "throwable",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "==",
        "==",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "throw",
        "throw",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "No",
        "No",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Such",
        "Such",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Name",
        "Name",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "",
        "if",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "is",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Allow",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Anonymous",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Access",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Checker",
        "insert"
      ],
      [
        "",
        "permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Checker",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "Default",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Anonymous",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Access",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Checker",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "INSTANCE",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "try",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Checker",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "framework",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Model",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "get",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Extension",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Loader",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Checker",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "class",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "get",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Extension",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Constants",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "QOS",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "PERMISSION",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "CHECKER",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "catch",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Throwable",
        "insert"
      ],
      [
        "",
        "throwable",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "final",
        "insert"
      ],
      [
        "",
        "Cmd",
        "insert"
      ],
      [
        "",
        "cmd",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "get",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Class",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "get",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Annotation",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Cmd",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "class",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "final",
        "insert"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Level",
        "insert"
      ],
      [
        "",
        "cmd",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Required",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Level",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "cmd",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "required",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Level",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "if",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "!",
        "insert"
      ],
      [
        "",
        "permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Checker",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "access",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "cmd",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Required",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Level",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "throw",
        "insert"
      ],
      [
        "",
        "new",
        "insert"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Deny",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Exception",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "get",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Name",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Args",
        "Args",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testExecute2() throws Exception { \n        DefaultCommandExecutor executor = new DefaultCommandExecutor(FrameworkModel.defaultModel());\n        String result = executor.execute(CommandContextFactory.newInstance(\"greeting\", new String[]{\"dubbo\"}, false));\n        assertThat(result, equalTo(\"greeting dubbo\"));\n    }\n\n        // check permission when configs allow anonymous access\n        if (commandContext.isAllowAnonymousAccess()) {\n        PermissionChecker permissionChecker = DefaultCommandExecutor.getInstance(FrameworkModel.defaultModel());\n        String result = executor.execute(CommandContextFactory.newInstance"
  },
  "4": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndEmptyWhiteList",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndEmptyWhiteList",
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteListAndPermissionConfig"
    ],
    "test_src_code": "    @Test\n    void shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndEmptyWhiteList() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn(address);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(ByteBuf.class))).thenReturn(future);\n        ForeignHostPermitHandler handler = new ForeignHostPermitHandler(false, StringUtils.EMPTY_STRING);\n        handler.handlerAdded(context);\n        ArgumentCaptor<ByteBuf> captor = ArgumentCaptor.forClass(ByteBuf.class);\n        verify(context).writeAndFlush(captor.capture());\n        assertThat(new String(captor.getValue().array()), containsString(\"Foreign Ip Not Permitted, Consider Config It In Whitelist\"));\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandler.java#ForeignHostPermitHandler",
    "focal_src": "    public ForeignHostPermitHandler(boolean acceptForeignIp, String foreignIpWhitelist) {\n        this.acceptForeignIp = acceptForeignIp;\n        this.acceptForeignIpWhitelist = foreignIpWhitelist;\n        if (StringUtils.isNotEmpty(foreignIpWhitelist)) {\n            whitelistPredicate = Arrays.stream(foreignIpWhitelist.split(\",\"))\n                .map(String::trim)\n                .filter(StringUtils::isNotEmpty)\n                .map(foreignIpPattern -> (Predicate<String>) foreignIp -> {\n                    try {\n                        // hard code port to -1\n                        return NetUtils.matchIpExpression(foreignIpPattern, foreignIp, -1);\n                    } catch (UnknownHostException ignore) {\n                        // ignore illegal CIDR specification\n                    }\n                    return false;\n                })\n                .reduce(Predicate::or).orElse(s -> false);\n        }\n    }\n",
    "focal_tgt": "    public ForeignHostPermitHandler(QosConfiguration qosConfiguration) {\n        this.qosConfiguration = qosConfiguration;\n        this.acceptForeignIp = qosConfiguration.isAcceptForeignIp();\n        this.acceptForeignIpWhitelist = qosConfiguration.getAcceptForeignIpWhitelist();\n        if (StringUtils.isNotEmpty(acceptForeignIpWhitelist)) {\n            whitelistPredicate = Arrays.stream(acceptForeignIpWhitelist.split(\",\"))\n                .map(String::trim)\n                .filter(StringUtils::isNotEmpty)\n                .map(foreignIpPattern -> (Predicate<String>) foreignIp -> {\n                    try {\n                        // hard code port to -1\n                        return NetUtils.matchIpExpression(foreignIpPattern, foreignIp, -1);\n                    } catch (UnknownHostException ignore) {\n                        // ignore illegal CIDR specification\n                    }\n                    return false;\n                })\n                .reduce(Predicate::or).orElse(s -> false);\n        }\n    }\n",
    "test_id": 4,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Host",
        "Host",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Permit",
        "Permit",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "boolean",
        "",
        "delete"
      ],
      [
        "accept",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Foreign",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "String",
        "Configuration",
        "replace"
      ],
      [
        "foreign",
        "qos",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Whitelist",
        "Configuration",
        "replace"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "this",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "accept",
        "accept",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "accept",
        "qos",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Configuration",
        "replace"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "is",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Foreign",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Ip",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "accept",
        "accept",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "foreign",
        "qos",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Whitelist",
        "Configuration",
        "replace"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "get",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Foreign",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Ip",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Whitelist",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Not",
        "Not",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Empty",
        "Empty",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "foreign",
        "Foreign",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "whitelist",
        "whitelist",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Predicate",
        "Predicate",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Arrays",
        "Arrays",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "stream",
        "stream",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "foreign",
        "Foreign",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "split",
        "split",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "map",
        "map",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "::",
        "::",
        "equal"
      ],
      [
        "trim",
        "trim",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "filter",
        "filter",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        "::",
        "::",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Not",
        "Not",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Empty",
        "Empty",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "map",
        "map",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Pattern",
        "Pattern",
        "equal"
      ],
      [
        "->",
        "->",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Predicate",
        "Predicate",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "->",
        "->",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "Net",
        "Net",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "match",
        "match",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Expression",
        "Expression",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Pattern",
        "Pattern",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "-",
        "-",
        "equal"
      ],
      [
        "1",
        "1",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Unknown",
        "Unknown",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Host",
        "Host",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ignore",
        "ignore",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "reduce",
        "reduce",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Predicate",
        "Predicate",
        "equal"
      ],
      [
        "::",
        "::",
        "equal"
      ],
      [
        "or",
        "or",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "or",
        "or",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Else",
        "Else",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "s",
        "s",
        "equal"
      ],
      [
        "->",
        "->",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndEmptyWhiteList() throws Exception { \n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn(address);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush("
  },
  "5": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndEmptyWhiteList",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndEmptyWhiteList",
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteListAndPermissionConfig"
    ],
    "test_src_code": "    @Test\n    void shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndEmptyWhiteList() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn(address);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(ByteBuf.class))).thenReturn(future);\n        ForeignHostPermitHandler handler = new ForeignHostPermitHandler(false, StringUtils.EMPTY_STRING);\n        handler.handlerAdded(context);\n        ArgumentCaptor<ByteBuf> captor = ArgumentCaptor.forClass(ByteBuf.class);\n        verify(context).writeAndFlush(captor.capture());\n        assertThat(new String(captor.getValue().array()), containsString(\"Foreign Ip Not Permitted, Consider Config It In Whitelist\"));\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandler.java#handlerAdded",
    "focal_src": "    @Override\n    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {\n        if (acceptForeignIp) {\n            return;\n        }\n\n        final InetAddress inetAddress = ((InetSocketAddress) ctx.channel().remoteAddress()).getAddress();\n        // loopback address, return\n        if (inetAddress.isLoopbackAddress()) {\n            return;\n        }\n\n        // the ip is in the whitelist, return\n        if (checkForeignIpInWhiteList(inetAddress)) {\n            return;\n        }\n\n        ByteBuf cb = Unpooled.wrappedBuffer((QosConstants.BR_STR + \"Foreign Ip Not Permitted, Consider Config It In Whitelist.\"\n            + QosConstants.BR_STR).getBytes());\n        ctx.writeAndFlush(cb).addListener(ChannelFutureListener.CLOSE);\n    }\n",
    "focal_tgt": "    @Override\n    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {\n        if (acceptForeignIp) {\n            return;\n        }\n\n        // the anonymous access is enabled by default, permission level is PUBLIC\n        // if allow anonymous access, return\n        if (qosConfiguration.isAllowAnonymousAccess()) {\n            return;\n        }\n\n        final InetAddress inetAddress = ((InetSocketAddress) ctx.channel().remoteAddress()).getAddress();\n        // loopback address, return\n        if (inetAddress.isLoopbackAddress()) {\n            return;\n        }\n\n        // the ip is in the whitelist, return\n        if (checkForeignIpInWhiteList(inetAddress)) {\n            return;\n        }\n\n\n        ByteBuf cb = Unpooled.wrappedBuffer((QosConstants.BR_STR + \"Foreign Ip Not Permitted, Consider Config It In Whitelist.\"\n            + QosConstants.BR_STR).getBytes());\n        ctx.writeAndFlush(cb).addListener(ChannelFutureListener.CLOSE);\n    }\n",
    "test_id": 5,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "public",
        "public",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "handler",
        "handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Added",
        "Added",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "accept",
        "accept",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "return",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "if",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "is",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Allow",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Anonymous",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Access",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "final",
        "final",
        "equal"
      ],
      [
        "Inet",
        "Inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "inet",
        "inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Inet",
        "Inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Socket",
        "Socket",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "remote",
        "remote",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "inet",
        "inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Loopback",
        "Loopback",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "check",
        "check",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "In",
        "In",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "White",
        "White",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "inet",
        "inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "Byte",
        "Byte",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Buf",
        "Buf",
        "equal"
      ],
      [
        "cb",
        "cb",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Unpooled",
        "Unpooled",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "wrapped",
        "wrapped",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Buffer",
        "Buffer",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "Not",
        "Not",
        "equal"
      ],
      [
        "Permitted",
        "Permitted",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Consider",
        "Consider",
        "equal"
      ],
      [
        "Config",
        "Config",
        "equal"
      ],
      [
        "It",
        "It",
        "equal"
      ],
      [
        "In",
        "In",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bytes",
        "Bytes",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "cb",
        "cb",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndEmptyWhiteList()throws Exception { \n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn(address);\n \n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAnd"
  },
  "6": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteList",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteList",
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteListAndPermissionConfig"
    ],
    "test_src_code": "    @Test\n    void shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteList() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        when(addr.getHostAddress()).thenReturn(\"179.23.44.1\");\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn(address);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(ByteBuf.class))).thenReturn(future);\n        ForeignHostPermitHandler handler = new ForeignHostPermitHandler(false, \"175.23.44.1 ,  192.168.1.192/26\");\n        handler.handlerAdded(context);\n        ArgumentCaptor<ByteBuf> captor = ArgumentCaptor.forClass(ByteBuf.class);\n        verify(context).writeAndFlush(captor.capture());\n        assertThat(new String(captor.getValue().array()), containsString(\"Foreign Ip Not Permitted, Consider Config It In Whitelist\"));\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandler.java#ForeignHostPermitHandler",
    "focal_src": "    public ForeignHostPermitHandler(boolean acceptForeignIp, String foreignIpWhitelist) {\n        this.acceptForeignIp = acceptForeignIp;\n        this.acceptForeignIpWhitelist = foreignIpWhitelist;\n        if (StringUtils.isNotEmpty(foreignIpWhitelist)) {\n            whitelistPredicate = Arrays.stream(foreignIpWhitelist.split(\",\"))\n                .map(String::trim)\n                .filter(StringUtils::isNotEmpty)\n                .map(foreignIpPattern -> (Predicate<String>) foreignIp -> {\n                    try {\n                        // hard code port to -1\n                        return NetUtils.matchIpExpression(foreignIpPattern, foreignIp, -1);\n                    } catch (UnknownHostException ignore) {\n                        // ignore illegal CIDR specification\n                    }\n                    return false;\n                })\n                .reduce(Predicate::or).orElse(s -> false);\n        }\n    }\n",
    "focal_tgt": "    public ForeignHostPermitHandler(QosConfiguration qosConfiguration) {\n        this.qosConfiguration = qosConfiguration;\n        this.acceptForeignIp = qosConfiguration.isAcceptForeignIp();\n        this.acceptForeignIpWhitelist = qosConfiguration.getAcceptForeignIpWhitelist();\n        if (StringUtils.isNotEmpty(acceptForeignIpWhitelist)) {\n            whitelistPredicate = Arrays.stream(acceptForeignIpWhitelist.split(\",\"))\n                .map(String::trim)\n                .filter(StringUtils::isNotEmpty)\n                .map(foreignIpPattern -> (Predicate<String>) foreignIp -> {\n                    try {\n                        // hard code port to -1\n                        return NetUtils.matchIpExpression(foreignIpPattern, foreignIp, -1);\n                    } catch (UnknownHostException ignore) {\n                        // ignore illegal CIDR specification\n                    }\n                    return false;\n                })\n                .reduce(Predicate::or).orElse(s -> false);\n        }\n    }\n",
    "test_id": 6,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Host",
        "Host",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Permit",
        "Permit",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "boolean",
        "",
        "delete"
      ],
      [
        "accept",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Foreign",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "String",
        "Configuration",
        "replace"
      ],
      [
        "foreign",
        "qos",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Whitelist",
        "Configuration",
        "replace"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "this",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "accept",
        "accept",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "accept",
        "qos",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Configuration",
        "replace"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "is",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Foreign",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Ip",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "accept",
        "accept",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "foreign",
        "qos",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Whitelist",
        "Configuration",
        "replace"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "get",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Foreign",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Ip",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Whitelist",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Not",
        "Not",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Empty",
        "Empty",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "foreign",
        "Foreign",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "whitelist",
        "whitelist",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Predicate",
        "Predicate",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Arrays",
        "Arrays",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "stream",
        "stream",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "foreign",
        "Foreign",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "split",
        "split",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "map",
        "map",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "::",
        "::",
        "equal"
      ],
      [
        "trim",
        "trim",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "filter",
        "filter",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        "::",
        "::",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Not",
        "Not",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Empty",
        "Empty",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "map",
        "map",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Pattern",
        "Pattern",
        "equal"
      ],
      [
        "->",
        "->",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Predicate",
        "Predicate",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "->",
        "->",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "Net",
        "Net",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "match",
        "match",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Expression",
        "Expression",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Pattern",
        "Pattern",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "-",
        "-",
        "equal"
      ],
      [
        "1",
        "1",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Unknown",
        "Unknown",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Host",
        "Host",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ignore",
        "ignore",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "reduce",
        "reduce",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Predicate",
        "Predicate",
        "equal"
      ],
      [
        "::",
        "::",
        "equal"
      ],
      [
        "or",
        "or",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "or",
        "or",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Else",
        "Else",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "s",
        "s",
        "equal"
      ],
      [
        "->",
        "->",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteList() throws Exception { \n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        when(addr.getHostAddress()).thenReturn(\"179.23.44.1\");\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn(address"
  },
  "7": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteList",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteList",
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteListAndPermissionConfig"
    ],
    "test_src_code": "    @Test\n    void shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteList() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        when(addr.getHostAddress()).thenReturn(\"179.23.44.1\");\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn(address);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(ByteBuf.class))).thenReturn(future);\n        ForeignHostPermitHandler handler = new ForeignHostPermitHandler(false, \"175.23.44.1 ,  192.168.1.192/26\");\n        handler.handlerAdded(context);\n        ArgumentCaptor<ByteBuf> captor = ArgumentCaptor.forClass(ByteBuf.class);\n        verify(context).writeAndFlush(captor.capture());\n        assertThat(new String(captor.getValue().array()), containsString(\"Foreign Ip Not Permitted, Consider Config It In Whitelist\"));\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandler.java#handlerAdded",
    "focal_src": "    @Override\n    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {\n        if (acceptForeignIp) {\n            return;\n        }\n\n        final InetAddress inetAddress = ((InetSocketAddress) ctx.channel().remoteAddress()).getAddress();\n        // loopback address, return\n        if (inetAddress.isLoopbackAddress()) {\n            return;\n        }\n\n        // the ip is in the whitelist, return\n        if (checkForeignIpInWhiteList(inetAddress)) {\n            return;\n        }\n\n        ByteBuf cb = Unpooled.wrappedBuffer((QosConstants.BR_STR + \"Foreign Ip Not Permitted, Consider Config It In Whitelist.\"\n            + QosConstants.BR_STR).getBytes());\n        ctx.writeAndFlush(cb).addListener(ChannelFutureListener.CLOSE);\n    }\n",
    "focal_tgt": "    @Override\n    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {\n        if (acceptForeignIp) {\n            return;\n        }\n\n        // the anonymous access is enabled by default, permission level is PUBLIC\n        // if allow anonymous access, return\n        if (qosConfiguration.isAllowAnonymousAccess()) {\n            return;\n        }\n\n        final InetAddress inetAddress = ((InetSocketAddress) ctx.channel().remoteAddress()).getAddress();\n        // loopback address, return\n        if (inetAddress.isLoopbackAddress()) {\n            return;\n        }\n\n        // the ip is in the whitelist, return\n        if (checkForeignIpInWhiteList(inetAddress)) {\n            return;\n        }\n\n\n        ByteBuf cb = Unpooled.wrappedBuffer((QosConstants.BR_STR + \"Foreign Ip Not Permitted, Consider Config It In Whitelist.\"\n            + QosConstants.BR_STR).getBytes());\n        ctx.writeAndFlush(cb).addListener(ChannelFutureListener.CLOSE);\n    }\n",
    "test_id": 7,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "public",
        "public",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "handler",
        "handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Added",
        "Added",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "accept",
        "accept",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "return",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "if",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "is",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Allow",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Anonymous",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Access",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "final",
        "final",
        "equal"
      ],
      [
        "Inet",
        "Inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "inet",
        "inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Inet",
        "Inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Socket",
        "Socket",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "remote",
        "remote",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "inet",
        "inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Loopback",
        "Loopback",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "check",
        "check",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "In",
        "In",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "White",
        "White",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "inet",
        "inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "Byte",
        "Byte",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Buf",
        "Buf",
        "equal"
      ],
      [
        "cb",
        "cb",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Unpooled",
        "Unpooled",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "wrapped",
        "wrapped",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Buffer",
        "Buffer",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "Not",
        "Not",
        "equal"
      ],
      [
        "Permitted",
        "Permitted",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Consider",
        "Consider",
        "equal"
      ],
      [
        "Config",
        "Config",
        "equal"
      ],
      [
        "It",
        "It",
        "equal"
      ],
      [
        "In",
        "In",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bytes",
        "Bytes",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "cb",
        "cb",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void shouldShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteList()throws Exception { \n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        when(addr.getHostAddress()).thenReturn(\"179.23.44.1\");\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn(address"
  },
  "8": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteList",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteList",
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteListAndPermissionConfig"
    ],
    "test_src_code": "    @Test\n    void shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteList() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        when(addr.getHostAddress()).thenReturn(\"175.23.44.1\");\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn(address);\n\n        ForeignHostPermitHandler handler = new ForeignHostPermitHandler(false, \"175.23.44.1, 192.168.1.192/26  \");\n        handler.handlerAdded(context);\n        verify(context, never()).writeAndFlush(any());\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandler.java#ForeignHostPermitHandler",
    "focal_src": "    public ForeignHostPermitHandler(boolean acceptForeignIp, String foreignIpWhitelist) {\n        this.acceptForeignIp = acceptForeignIp;\n        this.acceptForeignIpWhitelist = foreignIpWhitelist;\n        if (StringUtils.isNotEmpty(foreignIpWhitelist)) {\n            whitelistPredicate = Arrays.stream(foreignIpWhitelist.split(\",\"))\n                .map(String::trim)\n                .filter(StringUtils::isNotEmpty)\n                .map(foreignIpPattern -> (Predicate<String>) foreignIp -> {\n                    try {\n                        // hard code port to -1\n                        return NetUtils.matchIpExpression(foreignIpPattern, foreignIp, -1);\n                    } catch (UnknownHostException ignore) {\n                        // ignore illegal CIDR specification\n                    }\n                    return false;\n                })\n                .reduce(Predicate::or).orElse(s -> false);\n        }\n    }\n",
    "focal_tgt": "    public ForeignHostPermitHandler(QosConfiguration qosConfiguration) {\n        this.qosConfiguration = qosConfiguration;\n        this.acceptForeignIp = qosConfiguration.isAcceptForeignIp();\n        this.acceptForeignIpWhitelist = qosConfiguration.getAcceptForeignIpWhitelist();\n        if (StringUtils.isNotEmpty(acceptForeignIpWhitelist)) {\n            whitelistPredicate = Arrays.stream(acceptForeignIpWhitelist.split(\",\"))\n                .map(String::trim)\n                .filter(StringUtils::isNotEmpty)\n                .map(foreignIpPattern -> (Predicate<String>) foreignIp -> {\n                    try {\n                        // hard code port to -1\n                        return NetUtils.matchIpExpression(foreignIpPattern, foreignIp, -1);\n                    } catch (UnknownHostException ignore) {\n                        // ignore illegal CIDR specification\n                    }\n                    return false;\n                })\n                .reduce(Predicate::or).orElse(s -> false);\n        }\n    }\n",
    "test_id": 8,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Host",
        "Host",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Permit",
        "Permit",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "boolean",
        "",
        "delete"
      ],
      [
        "accept",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Foreign",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "String",
        "Configuration",
        "replace"
      ],
      [
        "foreign",
        "qos",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Whitelist",
        "Configuration",
        "replace"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "this",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "accept",
        "accept",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "accept",
        "qos",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Configuration",
        "replace"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "is",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Foreign",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Ip",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "accept",
        "accept",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "foreign",
        "qos",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Whitelist",
        "Configuration",
        "replace"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "get",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Foreign",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Ip",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Whitelist",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Not",
        "Not",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Empty",
        "Empty",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "foreign",
        "Foreign",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "whitelist",
        "whitelist",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Predicate",
        "Predicate",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Arrays",
        "Arrays",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "stream",
        "stream",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "foreign",
        "Foreign",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "split",
        "split",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "map",
        "map",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "::",
        "::",
        "equal"
      ],
      [
        "trim",
        "trim",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "filter",
        "filter",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        "::",
        "::",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Not",
        "Not",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Empty",
        "Empty",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "map",
        "map",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Pattern",
        "Pattern",
        "equal"
      ],
      [
        "->",
        "->",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Predicate",
        "Predicate",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "->",
        "->",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "Net",
        "Net",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "match",
        "match",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Expression",
        "Expression",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Pattern",
        "Pattern",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "-",
        "-",
        "equal"
      ],
      [
        "1",
        "1",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Unknown",
        "Unknown",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Host",
        "Host",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ignore",
        "ignore",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "reduce",
        "reduce",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Predicate",
        "Predicate",
        "equal"
      ],
      [
        "::",
        "::",
        "equal"
      ],
      [
        "or",
        "or",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "or",
        "or",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Else",
        "Else",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "s",
        "s",
        "equal"
      ],
      [
        "->",
        "->",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteList() throws Exception { \n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        when(addr.getHostAddress()).thenReturn(\"175.23.44.1\");\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn("
  },
  "9": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteList",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteList",
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteListAndPermissionConfig"
    ],
    "test_src_code": "    @Test\n    void shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteList() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        when(addr.getHostAddress()).thenReturn(\"175.23.44.1\");\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn(address);\n\n        ForeignHostPermitHandler handler = new ForeignHostPermitHandler(false, \"175.23.44.1, 192.168.1.192/26  \");\n        handler.handlerAdded(context);\n        verify(context, never()).writeAndFlush(any());\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandler.java#handlerAdded",
    "focal_src": "    @Override\n    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {\n        if (acceptForeignIp) {\n            return;\n        }\n\n        final InetAddress inetAddress = ((InetSocketAddress) ctx.channel().remoteAddress()).getAddress();\n        // loopback address, return\n        if (inetAddress.isLoopbackAddress()) {\n            return;\n        }\n\n        // the ip is in the whitelist, return\n        if (checkForeignIpInWhiteList(inetAddress)) {\n            return;\n        }\n\n        ByteBuf cb = Unpooled.wrappedBuffer((QosConstants.BR_STR + \"Foreign Ip Not Permitted, Consider Config It In Whitelist.\"\n            + QosConstants.BR_STR).getBytes());\n        ctx.writeAndFlush(cb).addListener(ChannelFutureListener.CLOSE);\n    }\n",
    "focal_tgt": "    @Override\n    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {\n        if (acceptForeignIp) {\n            return;\n        }\n\n        // the anonymous access is enabled by default, permission level is PUBLIC\n        // if allow anonymous access, return\n        if (qosConfiguration.isAllowAnonymousAccess()) {\n            return;\n        }\n\n        final InetAddress inetAddress = ((InetSocketAddress) ctx.channel().remoteAddress()).getAddress();\n        // loopback address, return\n        if (inetAddress.isLoopbackAddress()) {\n            return;\n        }\n\n        // the ip is in the whitelist, return\n        if (checkForeignIpInWhiteList(inetAddress)) {\n            return;\n        }\n\n\n        ByteBuf cb = Unpooled.wrappedBuffer((QosConstants.BR_STR + \"Foreign Ip Not Permitted, Consider Config It In Whitelist.\"\n            + QosConstants.BR_STR).getBytes());\n        ctx.writeAndFlush(cb).addListener(ChannelFutureListener.CLOSE);\n    }\n",
    "test_id": 9,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "public",
        "public",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "handler",
        "handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Added",
        "Added",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "accept",
        "accept",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "return",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "if",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "is",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Allow",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Anonymous",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Access",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "final",
        "final",
        "equal"
      ],
      [
        "Inet",
        "Inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "inet",
        "inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Inet",
        "Inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Socket",
        "Socket",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "remote",
        "remote",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "inet",
        "inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Loopback",
        "Loopback",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "check",
        "check",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "In",
        "In",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "White",
        "White",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "inet",
        "inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "Byte",
        "Byte",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Buf",
        "Buf",
        "equal"
      ],
      [
        "cb",
        "cb",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Unpooled",
        "Unpooled",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "wrapped",
        "wrapped",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Buffer",
        "Buffer",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "Not",
        "Not",
        "equal"
      ],
      [
        "Permitted",
        "Permitted",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Consider",
        "Consider",
        "equal"
      ],
      [
        "Config",
        "Config",
        "equal"
      ],
      [
        "It",
        "It",
        "equal"
      ],
      [
        "In",
        "In",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bytes",
        "Bytes",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "cb",
        "cb",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteList()throws Exception { \n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        when(addr.getHostAddress()).thenReturn(\"175.23.44.1\");\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn("
  },
  "10": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteListRange",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteListRange",
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteListAndPermissionConfig"
    ],
    "test_src_code": "    @Test\n    void shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteListRange() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        when(addr.getHostAddress()).thenReturn(\"192.168.1.199\");\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn(address);\n\n        ForeignHostPermitHandler handler = new ForeignHostPermitHandler(false, \"175.23.44.1, 192.168.1.192/26\");\n        handler.handlerAdded(context);\n        verify(context, never()).writeAndFlush(any());\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandler.java#ForeignHostPermitHandler",
    "focal_src": "    public ForeignHostPermitHandler(boolean acceptForeignIp, String foreignIpWhitelist) {\n        this.acceptForeignIp = acceptForeignIp;\n        this.acceptForeignIpWhitelist = foreignIpWhitelist;\n        if (StringUtils.isNotEmpty(foreignIpWhitelist)) {\n            whitelistPredicate = Arrays.stream(foreignIpWhitelist.split(\",\"))\n                .map(String::trim)\n                .filter(StringUtils::isNotEmpty)\n                .map(foreignIpPattern -> (Predicate<String>) foreignIp -> {\n                    try {\n                        // hard code port to -1\n                        return NetUtils.matchIpExpression(foreignIpPattern, foreignIp, -1);\n                    } catch (UnknownHostException ignore) {\n                        // ignore illegal CIDR specification\n                    }\n                    return false;\n                })\n                .reduce(Predicate::or).orElse(s -> false);\n        }\n    }\n",
    "focal_tgt": "    public ForeignHostPermitHandler(QosConfiguration qosConfiguration) {\n        this.qosConfiguration = qosConfiguration;\n        this.acceptForeignIp = qosConfiguration.isAcceptForeignIp();\n        this.acceptForeignIpWhitelist = qosConfiguration.getAcceptForeignIpWhitelist();\n        if (StringUtils.isNotEmpty(acceptForeignIpWhitelist)) {\n            whitelistPredicate = Arrays.stream(acceptForeignIpWhitelist.split(\",\"))\n                .map(String::trim)\n                .filter(StringUtils::isNotEmpty)\n                .map(foreignIpPattern -> (Predicate<String>) foreignIp -> {\n                    try {\n                        // hard code port to -1\n                        return NetUtils.matchIpExpression(foreignIpPattern, foreignIp, -1);\n                    } catch (UnknownHostException ignore) {\n                        // ignore illegal CIDR specification\n                    }\n                    return false;\n                })\n                .reduce(Predicate::or).orElse(s -> false);\n        }\n    }\n",
    "test_id": 10,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Host",
        "Host",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Permit",
        "Permit",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "boolean",
        "",
        "delete"
      ],
      [
        "accept",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Foreign",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "String",
        "Configuration",
        "replace"
      ],
      [
        "foreign",
        "qos",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Whitelist",
        "Configuration",
        "replace"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "this",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "accept",
        "accept",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "accept",
        "qos",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Configuration",
        "replace"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "is",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Foreign",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Ip",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "accept",
        "accept",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "foreign",
        "qos",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Whitelist",
        "Configuration",
        "replace"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "get",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Foreign",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Ip",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Whitelist",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Not",
        "Not",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Empty",
        "Empty",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "foreign",
        "Foreign",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "whitelist",
        "whitelist",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Predicate",
        "Predicate",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Arrays",
        "Arrays",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "stream",
        "stream",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "accept",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "foreign",
        "Foreign",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "split",
        "split",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "map",
        "map",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "::",
        "::",
        "equal"
      ],
      [
        "trim",
        "trim",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "filter",
        "filter",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        "::",
        "::",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Not",
        "Not",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Empty",
        "Empty",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "map",
        "map",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Pattern",
        "Pattern",
        "equal"
      ],
      [
        "->",
        "->",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Predicate",
        "Predicate",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "->",
        "->",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "Net",
        "Net",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "match",
        "match",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Expression",
        "Expression",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Pattern",
        "Pattern",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "foreign",
        "foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "-",
        "-",
        "equal"
      ],
      [
        "1",
        "1",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Unknown",
        "Unknown",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Host",
        "Host",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ignore",
        "ignore",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "reduce",
        "reduce",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Predicate",
        "Predicate",
        "equal"
      ],
      [
        "::",
        "::",
        "equal"
      ],
      [
        "or",
        "or",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "or",
        "or",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Else",
        "Else",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "s",
        "s",
        "equal"
      ],
      [
        "->",
        "->",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteListRange() throws Exception { \n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        when(addr.getHostAddress()).thenReturn(\"192.168.1.199\");\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn("
  },
  "11": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteListRange",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteListRange",
      ".org.apache.dubbo.qos.server.handler.ForeignHostPermitHandlerTest#shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndNotMatchWhiteListAndPermissionConfig"
    ],
    "test_src_code": "    @Test\n    void shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteListRange() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        when(addr.getHostAddress()).thenReturn(\"192.168.1.199\");\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn(address);\n\n        ForeignHostPermitHandler handler = new ForeignHostPermitHandler(false, \"175.23.44.1, 192.168.1.192/26\");\n        handler.handlerAdded(context);\n        verify(context, never()).writeAndFlush(any());\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandler.java#handlerAdded",
    "focal_src": "    @Override\n    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {\n        if (acceptForeignIp) {\n            return;\n        }\n\n        final InetAddress inetAddress = ((InetSocketAddress) ctx.channel().remoteAddress()).getAddress();\n        // loopback address, return\n        if (inetAddress.isLoopbackAddress()) {\n            return;\n        }\n\n        // the ip is in the whitelist, return\n        if (checkForeignIpInWhiteList(inetAddress)) {\n            return;\n        }\n\n        ByteBuf cb = Unpooled.wrappedBuffer((QosConstants.BR_STR + \"Foreign Ip Not Permitted, Consider Config It In Whitelist.\"\n            + QosConstants.BR_STR).getBytes());\n        ctx.writeAndFlush(cb).addListener(ChannelFutureListener.CLOSE);\n    }\n",
    "focal_tgt": "    @Override\n    public void handlerAdded(ChannelHandlerContext ctx) throws Exception {\n        if (acceptForeignIp) {\n            return;\n        }\n\n        // the anonymous access is enabled by default, permission level is PUBLIC\n        // if allow anonymous access, return\n        if (qosConfiguration.isAllowAnonymousAccess()) {\n            return;\n        }\n\n        final InetAddress inetAddress = ((InetSocketAddress) ctx.channel().remoteAddress()).getAddress();\n        // loopback address, return\n        if (inetAddress.isLoopbackAddress()) {\n            return;\n        }\n\n        // the ip is in the whitelist, return\n        if (checkForeignIpInWhiteList(inetAddress)) {\n            return;\n        }\n\n\n        ByteBuf cb = Unpooled.wrappedBuffer((QosConstants.BR_STR + \"Foreign Ip Not Permitted, Consider Config It In Whitelist.\"\n            + QosConstants.BR_STR).getBytes());\n        ctx.writeAndFlush(cb).addListener(ChannelFutureListener.CLOSE);\n    }\n",
    "test_id": 11,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "public",
        "public",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "handler",
        "handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Added",
        "Added",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "accept",
        "accept",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "return",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "if",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "is",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Allow",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Anonymous",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Access",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "final",
        "final",
        "equal"
      ],
      [
        "Inet",
        "Inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "inet",
        "inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Inet",
        "Inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Socket",
        "Socket",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "remote",
        "remote",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "inet",
        "inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Loopback",
        "Loopback",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "check",
        "check",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "In",
        "In",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "White",
        "White",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "inet",
        "inet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Address",
        "Address",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "Byte",
        "Byte",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Buf",
        "Buf",
        "equal"
      ],
      [
        "cb",
        "cb",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Unpooled",
        "Unpooled",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "wrapped",
        "wrapped",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Buffer",
        "Buffer",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "Ip",
        "Ip",
        "equal"
      ],
      [
        "Not",
        "Not",
        "equal"
      ],
      [
        "Permitted",
        "Permitted",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Consider",
        "Consider",
        "equal"
      ],
      [
        "Config",
        "Config",
        "equal"
      ],
      [
        "It",
        "It",
        "equal"
      ],
      [
        "In",
        "In",
        "equal"
      ],
      [
        "Whitelist",
        "Whitelist",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bytes",
        "Bytes",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "cb",
        "cb",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void shouldNotShowIpNotPermittedMsg_GivenAcceptForeignIpFalseAndMatchWhiteListRange()throws Exception {        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        Channel channel = mock(Channel.class);\n        when(context.channel()).thenReturn(channel);\n        InetAddress addr = mock(InetAddress.class);\n        when(addr.isLoopbackAddress()).thenReturn(false);\n        when(addr.getHostAddress()).thenReturn(\"192.168.1.199\");\n        InetSocketAddress address = new InetSocketAddress(addr, 12345);\n        when(channel.remoteAddress()).thenReturn("
  },
  "12": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test1",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test1"
    ],
    "test_src_code": "    @Test\n    void test1() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(FullHttpResponse.class))).thenReturn(future);\n        HttpRequest message = Mockito.mock(HttpRequest.class);\n        when(message.uri()).thenReturn(\"test\");\n        HttpProcessHandler handler = new HttpProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, message);\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n        ArgumentCaptor<FullHttpResponse> captor = ArgumentCaptor.forClass(FullHttpResponse.class);\n        verify(context).writeAndFlush(captor.capture());\n        FullHttpResponse response = captor.getValue();\n        assertThat(response.status().code(), equalTo(404));\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/HttpProcessHandler.java#HttpProcessHandler",
    "focal_src": "    public HttpProcessHandler(FrameworkModel frameworkModel) {\n        this.commandExecutor = new DefaultCommandExecutor(frameworkModel);\n    }\n",
    "focal_tgt": "    public HttpProcessHandler(FrameworkModel frameworkModel, QosConfiguration qosConfiguration) {\n        this.commandExecutor = new DefaultCommandExecutor(frameworkModel);\n        this.qosConfiguration = qosConfiguration;\n    }\n",
    "test_id": 12,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Framework",
        "Framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Default",
        "Default",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "",
        "this",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void test1() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(FullHttpResponse.class))).thenReturn(future);\n        HttpRequest message = Mockito.mock(HttpRequest.class);\n        when(message.uri()).thenReturn(\"test\");\n        HttpProcessHandler handler = new HttpProcessHandler(FrameworkModel.defaultModel(), QosConfiguration.defaultConfiguration());\n        handler.channelRead0(context, message);\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n        Argument"
  },
  "13": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test1",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test1"
    ],
    "test_src_code": "    @Test\n    void test1() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(FullHttpResponse.class))).thenReturn(future);\n        HttpRequest message = Mockito.mock(HttpRequest.class);\n        when(message.uri()).thenReturn(\"test\");\n        HttpProcessHandler handler = new HttpProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, message);\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n        ArgumentCaptor<FullHttpResponse> captor = ArgumentCaptor.forClass(FullHttpResponse.class);\n        verify(context).writeAndFlush(captor.capture());\n        FullHttpResponse response = captor.getValue();\n        assertThat(response.status().code(), equalTo(404));\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/HttpProcessHandler.java#channelRead0",
    "focal_src": "    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, HttpRequest msg) throws Exception {\n        CommandContext commandContext = HttpCommandDecoder.decode(msg);\n        // return 404 when fail to construct command context\n        if (commandContext == null) {\n            log.warn(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"can not found commandContext, url: \" + msg.uri());\n            FullHttpResponse response = http404();\n            ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n        } else {\n            commandContext.setRemote(ctx.channel());\n            try {\n                String result = commandExecutor.execute(commandContext);\n                int httpCode = commandContext.getHttpCode();\n                FullHttpResponse response = http(httpCode, result);\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (NoSuchCommandException ex) {\n                log.error(QOS_COMMAND_NOT_FOUND, \"\", \"\", \"can not find command: \" + commandContext, ex);\n                FullHttpResponse response = http404();\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (Exception qosEx) {\n                log.error(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"execute commandContext: \" + commandContext + \" got exception\", qosEx);\n                FullHttpResponse response = http(500, qosEx.getMessage());\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            }\n        }\n    }\n",
    "focal_tgt": "    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, HttpRequest msg) throws Exception {\n        CommandContext commandContext = HttpCommandDecoder.decode(msg);\n        // return 404 when fail to construct command context\n        if (commandContext == null) {\n            log.warn(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"can not found commandContext, url: \" + msg.uri());\n            FullHttpResponse response = http(404);\n            ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n        } else {\n            commandContext.setRemote(ctx.channel());\n            commandContext.setQosConfiguration(qosConfiguration);\n            try {\n                String result = commandExecutor.execute(commandContext);\n                int httpCode = commandContext.getHttpCode();\n                FullHttpResponse response = http(httpCode, result);\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (NoSuchCommandException ex) {\n                log.error(QOS_COMMAND_NOT_FOUND, \"\", \"\", \"can not find command: \" + commandContext, ex);\n                FullHttpResponse response = http(404);\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (PermissionDenyException ex) {\n                log.error(QOS_PERMISSION_DENY_EXCEPTION, \"\", \"\", \"permission deny to access command: \" + commandContext, ex);\n                FullHttpResponse response = http(403);\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (Exception qosEx) {\n                log.error(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"execute commandContext: \" + commandContext + \" got exception\", qosEx);\n                FullHttpResponse response = http(500, qosEx.getMessage());\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            }\n        }\n    }\n",
    "test_id": 13,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "protected",
        "protected",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Read0",
        "Read0",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Request",
        "Request",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "decode",
        "decode",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "==",
        "==",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "warn",
        "warn",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "UNEXPECTED",
        "UNEXPECTED",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "EXCEPTION",
        "EXCEPTION",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "can",
        "can",
        "equal"
      ],
      [
        "not",
        "not",
        "equal"
      ],
      [
        "found",
        "found",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "url",
        "url",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "uri",
        "uri",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Full",
        "Full",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "http404",
        "http",
        "replace"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "404",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "set",
        "set",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Remote",
        "Remote",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "set",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "int",
        "int",
        "equal"
      ],
      [
        "http",
        "http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Full",
        "Full",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "http",
        "http",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "http",
        "http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "No",
        "No",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Such",
        "Such",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "COMMAND",
        "COMMAND",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "NOT",
        "NOT",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "FOUND",
        "FOUND",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "can",
        "can",
        "equal"
      ],
      [
        "not",
        "not",
        "equal"
      ],
      [
        "find",
        "find",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Full",
        "Full",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "http404",
        "http",
        "replace"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "404",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "ctx",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "write",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "And",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Flush",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "response",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "add",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Listener",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Channel",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Future",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Listener",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "CLOSE",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "catch",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Deny",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Exception",
        "insert"
      ],
      [
        "",
        "ex",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "log",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "error",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "QOS",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "PERMISSION",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "DENY",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "EXCEPTION",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "permission",
        "insert"
      ],
      [
        "",
        "deny",
        "insert"
      ],
      [
        "",
        "to",
        "insert"
      ],
      [
        "",
        "access",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        ":",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "ex",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "Full",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Http",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Response",
        "insert"
      ],
      [
        "",
        "response",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "http",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "403",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "qos",
        "qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ex",
        "Ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "UNEXPECTED",
        "UNEXPECTED",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "EXCEPTION",
        "EXCEPTION",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "got",
        "got",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "qos",
        "qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ex",
        "Ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Full",
        "Full",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "http",
        "http",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "500",
        "500",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "qos",
        "qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ex",
        "Ex",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Message",
        "Message",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void test1() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(FullHttpResponse.class))).thenReturn(future);\n        HttpRequest message = Mockito.mock(HttpRequest.class);\n        when(message.uri()).thenReturn(\"test\");\n        HttpProcessHandler handler = new HttpProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, message);\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n        ArgumentCaptor<FullHttpResponse>"
  },
  "14": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test2",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test2"
    ],
    "test_src_code": "    @Test\n    void test2() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(FullHttpResponse.class))).thenReturn(future);\n        HttpRequest message = Mockito.mock(HttpRequest.class);\n        when(message.uri()).thenReturn(\"localhost:80/greeting\");\n        when(message.method()).thenReturn(HttpMethod.GET);\n        HttpProcessHandler handler = new HttpProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, message);\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n        ArgumentCaptor<FullHttpResponse> captor = ArgumentCaptor.forClass(FullHttpResponse.class);\n        verify(context).writeAndFlush(captor.capture());\n        FullHttpResponse response = captor.getValue();\n        assertThat(response.status().code(), equalTo(200));\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/HttpProcessHandler.java#HttpProcessHandler",
    "focal_src": "    public HttpProcessHandler(FrameworkModel frameworkModel) {\n        this.commandExecutor = new DefaultCommandExecutor(frameworkModel);\n    }\n",
    "focal_tgt": "    public HttpProcessHandler(FrameworkModel frameworkModel, QosConfiguration qosConfiguration) {\n        this.commandExecutor = new DefaultCommandExecutor(frameworkModel);\n        this.qosConfiguration = qosConfiguration;\n    }\n",
    "test_id": 14,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Framework",
        "Framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Default",
        "Default",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "",
        "this",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void test2() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(FullHttpResponse.class))).thenReturn(future);\n        HttpRequest message = Mockito.mock(HttpRequest.class);\n        when(message.uri()).thenReturn(\"localhost:80/greeting\");\n        when(message.method()).thenReturn(HttpMethod.GET);\n        HttpProcessHandler handler = new HttpProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, message);\n"
  },
  "15": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test2",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test2"
    ],
    "test_src_code": "    @Test\n    void test2() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(FullHttpResponse.class))).thenReturn(future);\n        HttpRequest message = Mockito.mock(HttpRequest.class);\n        when(message.uri()).thenReturn(\"localhost:80/greeting\");\n        when(message.method()).thenReturn(HttpMethod.GET);\n        HttpProcessHandler handler = new HttpProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, message);\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n        ArgumentCaptor<FullHttpResponse> captor = ArgumentCaptor.forClass(FullHttpResponse.class);\n        verify(context).writeAndFlush(captor.capture());\n        FullHttpResponse response = captor.getValue();\n        assertThat(response.status().code(), equalTo(200));\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/HttpProcessHandler.java#channelRead0",
    "focal_src": "    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, HttpRequest msg) throws Exception {\n        CommandContext commandContext = HttpCommandDecoder.decode(msg);\n        // return 404 when fail to construct command context\n        if (commandContext == null) {\n            log.warn(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"can not found commandContext, url: \" + msg.uri());\n            FullHttpResponse response = http404();\n            ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n        } else {\n            commandContext.setRemote(ctx.channel());\n            try {\n                String result = commandExecutor.execute(commandContext);\n                int httpCode = commandContext.getHttpCode();\n                FullHttpResponse response = http(httpCode, result);\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (NoSuchCommandException ex) {\n                log.error(QOS_COMMAND_NOT_FOUND, \"\", \"\", \"can not find command: \" + commandContext, ex);\n                FullHttpResponse response = http404();\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (Exception qosEx) {\n                log.error(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"execute commandContext: \" + commandContext + \" got exception\", qosEx);\n                FullHttpResponse response = http(500, qosEx.getMessage());\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            }\n        }\n    }\n",
    "focal_tgt": "    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, HttpRequest msg) throws Exception {\n        CommandContext commandContext = HttpCommandDecoder.decode(msg);\n        // return 404 when fail to construct command context\n        if (commandContext == null) {\n            log.warn(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"can not found commandContext, url: \" + msg.uri());\n            FullHttpResponse response = http(404);\n            ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n        } else {\n            commandContext.setRemote(ctx.channel());\n            commandContext.setQosConfiguration(qosConfiguration);\n            try {\n                String result = commandExecutor.execute(commandContext);\n                int httpCode = commandContext.getHttpCode();\n                FullHttpResponse response = http(httpCode, result);\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (NoSuchCommandException ex) {\n                log.error(QOS_COMMAND_NOT_FOUND, \"\", \"\", \"can not find command: \" + commandContext, ex);\n                FullHttpResponse response = http(404);\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (PermissionDenyException ex) {\n                log.error(QOS_PERMISSION_DENY_EXCEPTION, \"\", \"\", \"permission deny to access command: \" + commandContext, ex);\n                FullHttpResponse response = http(403);\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (Exception qosEx) {\n                log.error(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"execute commandContext: \" + commandContext + \" got exception\", qosEx);\n                FullHttpResponse response = http(500, qosEx.getMessage());\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            }\n        }\n    }\n",
    "test_id": 15,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "protected",
        "protected",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Read0",
        "Read0",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Request",
        "Request",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "decode",
        "decode",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "==",
        "==",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "warn",
        "warn",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "UNEXPECTED",
        "UNEXPECTED",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "EXCEPTION",
        "EXCEPTION",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "can",
        "can",
        "equal"
      ],
      [
        "not",
        "not",
        "equal"
      ],
      [
        "found",
        "found",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "url",
        "url",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "uri",
        "uri",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Full",
        "Full",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "http404",
        "http",
        "replace"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "404",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "set",
        "set",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Remote",
        "Remote",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "set",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "int",
        "int",
        "equal"
      ],
      [
        "http",
        "http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Full",
        "Full",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "http",
        "http",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "http",
        "http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "No",
        "No",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Such",
        "Such",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "COMMAND",
        "COMMAND",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "NOT",
        "NOT",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "FOUND",
        "FOUND",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "can",
        "can",
        "equal"
      ],
      [
        "not",
        "not",
        "equal"
      ],
      [
        "find",
        "find",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Full",
        "Full",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "http404",
        "http",
        "replace"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "404",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "ctx",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "write",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "And",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Flush",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "response",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "add",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Listener",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Channel",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Future",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Listener",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "CLOSE",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "catch",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Deny",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Exception",
        "insert"
      ],
      [
        "",
        "ex",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "log",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "error",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "QOS",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "PERMISSION",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "DENY",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "EXCEPTION",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "permission",
        "insert"
      ],
      [
        "",
        "deny",
        "insert"
      ],
      [
        "",
        "to",
        "insert"
      ],
      [
        "",
        "access",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        ":",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "ex",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "Full",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Http",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Response",
        "insert"
      ],
      [
        "",
        "response",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "http",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "403",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "qos",
        "qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ex",
        "Ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "UNEXPECTED",
        "UNEXPECTED",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "EXCEPTION",
        "EXCEPTION",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "got",
        "got",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "qos",
        "qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ex",
        "Ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Full",
        "Full",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "http",
        "http",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "500",
        "500",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "qos",
        "qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ex",
        "Ex",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Message",
        "Message",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void test2() throws Exception {        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(FullHttpResponse.class))).thenReturn(future);\n        HttpRequest message = Mockito.mock(HttpRequest.class);\n        when(message.uri()).thenReturn(\"localhost:80/greeting\");\n        when(message.method()).thenReturn(HttpMethod.GET);\n        HttpProcessHandler handler = new HttpProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, message);\n"
  },
  "16": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test3",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test3"
    ],
    "test_src_code": "    @Test\n    void test3() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(FullHttpResponse.class))).thenReturn(future);\n        HttpRequest message = Mockito.mock(HttpRequest.class);\n        when(message.uri()).thenReturn(\"localhost:80/test\");\n        when(message.method()).thenReturn(HttpMethod.GET);\n        HttpProcessHandler handler = new HttpProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, message);\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n        ArgumentCaptor<FullHttpResponse> captor = ArgumentCaptor.forClass(FullHttpResponse.class);\n        verify(context).writeAndFlush(captor.capture());\n        FullHttpResponse response = captor.getValue();\n        assertThat(response.status().code(), equalTo(404));\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/HttpProcessHandler.java#HttpProcessHandler",
    "focal_src": "    public HttpProcessHandler(FrameworkModel frameworkModel) {\n        this.commandExecutor = new DefaultCommandExecutor(frameworkModel);\n    }\n",
    "focal_tgt": "    public HttpProcessHandler(FrameworkModel frameworkModel, QosConfiguration qosConfiguration) {\n        this.commandExecutor = new DefaultCommandExecutor(frameworkModel);\n        this.qosConfiguration = qosConfiguration;\n    }\n",
    "test_id": 16,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Framework",
        "Framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Default",
        "Default",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "",
        "this",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void test3() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(FullHttpResponse.class))).thenReturn(future);\n        HttpRequest message = Mockito.mock(HttpRequest.class);\n        when(message.uri()).thenReturn(\"localhost:80/test\");\n        when(message.method()).thenReturn(HttpMethod.GET);\n        HttpProcessHandler handler = new HttpProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, message);\n        verify"
  },
  "17": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test3",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.HttpProcessHandlerTest#test3"
    ],
    "test_src_code": "    @Test\n    void test3() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(FullHttpResponse.class))).thenReturn(future);\n        HttpRequest message = Mockito.mock(HttpRequest.class);\n        when(message.uri()).thenReturn(\"localhost:80/test\");\n        when(message.method()).thenReturn(HttpMethod.GET);\n        HttpProcessHandler handler = new HttpProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, message);\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n        ArgumentCaptor<FullHttpResponse> captor = ArgumentCaptor.forClass(FullHttpResponse.class);\n        verify(context).writeAndFlush(captor.capture());\n        FullHttpResponse response = captor.getValue();\n        assertThat(response.status().code(), equalTo(404));\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/HttpProcessHandler.java#channelRead0",
    "focal_src": "    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, HttpRequest msg) throws Exception {\n        CommandContext commandContext = HttpCommandDecoder.decode(msg);\n        // return 404 when fail to construct command context\n        if (commandContext == null) {\n            log.warn(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"can not found commandContext, url: \" + msg.uri());\n            FullHttpResponse response = http404();\n            ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n        } else {\n            commandContext.setRemote(ctx.channel());\n            try {\n                String result = commandExecutor.execute(commandContext);\n                int httpCode = commandContext.getHttpCode();\n                FullHttpResponse response = http(httpCode, result);\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (NoSuchCommandException ex) {\n                log.error(QOS_COMMAND_NOT_FOUND, \"\", \"\", \"can not find command: \" + commandContext, ex);\n                FullHttpResponse response = http404();\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (Exception qosEx) {\n                log.error(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"execute commandContext: \" + commandContext + \" got exception\", qosEx);\n                FullHttpResponse response = http(500, qosEx.getMessage());\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            }\n        }\n    }\n",
    "focal_tgt": "    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, HttpRequest msg) throws Exception {\n        CommandContext commandContext = HttpCommandDecoder.decode(msg);\n        // return 404 when fail to construct command context\n        if (commandContext == null) {\n            log.warn(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"can not found commandContext, url: \" + msg.uri());\n            FullHttpResponse response = http(404);\n            ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n        } else {\n            commandContext.setRemote(ctx.channel());\n            commandContext.setQosConfiguration(qosConfiguration);\n            try {\n                String result = commandExecutor.execute(commandContext);\n                int httpCode = commandContext.getHttpCode();\n                FullHttpResponse response = http(httpCode, result);\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (NoSuchCommandException ex) {\n                log.error(QOS_COMMAND_NOT_FOUND, \"\", \"\", \"can not find command: \" + commandContext, ex);\n                FullHttpResponse response = http(404);\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (PermissionDenyException ex) {\n                log.error(QOS_PERMISSION_DENY_EXCEPTION, \"\", \"\", \"permission deny to access command: \" + commandContext, ex);\n                FullHttpResponse response = http(403);\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            } catch (Exception qosEx) {\n                log.error(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"execute commandContext: \" + commandContext + \" got exception\", qosEx);\n                FullHttpResponse response = http(500, qosEx.getMessage());\n                ctx.writeAndFlush(response).addListener(ChannelFutureListener.CLOSE);\n            }\n        }\n    }\n",
    "test_id": 17,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "protected",
        "protected",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Read0",
        "Read0",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Request",
        "Request",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "decode",
        "decode",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "==",
        "==",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "warn",
        "warn",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "UNEXPECTED",
        "UNEXPECTED",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "EXCEPTION",
        "EXCEPTION",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "can",
        "can",
        "equal"
      ],
      [
        "not",
        "not",
        "equal"
      ],
      [
        "found",
        "found",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "url",
        "url",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "uri",
        "uri",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Full",
        "Full",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "http404",
        "http",
        "replace"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "404",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "set",
        "set",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Remote",
        "Remote",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "set",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "int",
        "int",
        "equal"
      ],
      [
        "http",
        "http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Full",
        "Full",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "http",
        "http",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "http",
        "http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Code",
        "Code",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "No",
        "No",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Such",
        "Such",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "COMMAND",
        "COMMAND",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "NOT",
        "NOT",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "FOUND",
        "FOUND",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "can",
        "can",
        "equal"
      ],
      [
        "not",
        "not",
        "equal"
      ],
      [
        "find",
        "find",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Full",
        "Full",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "http404",
        "http",
        "replace"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "404",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "ctx",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "write",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "And",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Flush",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "response",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "add",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Listener",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Channel",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Future",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Listener",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "CLOSE",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "catch",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Deny",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Exception",
        "insert"
      ],
      [
        "",
        "ex",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "log",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "error",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "QOS",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "PERMISSION",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "DENY",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "EXCEPTION",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "permission",
        "insert"
      ],
      [
        "",
        "deny",
        "insert"
      ],
      [
        "",
        "to",
        "insert"
      ],
      [
        "",
        "access",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        ":",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "ex",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "Full",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Http",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Response",
        "insert"
      ],
      [
        "",
        "response",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "http",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "403",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "qos",
        "qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ex",
        "Ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "UNEXPECTED",
        "UNEXPECTED",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "EXCEPTION",
        "EXCEPTION",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "got",
        "got",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "qos",
        "qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ex",
        "Ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Full",
        "Full",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Response",
        "Response",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "http",
        "http",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "500",
        "500",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "qos",
        "qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Ex",
        "Ex",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Message",
        "Message",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "response",
        "response",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void test3() throws Exception {        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(any(FullHttpResponse.class))).thenReturn(future);\n        HttpRequest message = Mockito.mock(HttpRequest.class);\n        when(message.uri()).thenReturn(\"localhost:80/test\");\n        when(message.method()).thenReturn(HttpMethod.GET);\n        HttpProcessHandler handler = new HttpProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, message);\n        verify"
  },
  "18": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.QosProcessHandlerTest#testDecodeHttp",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.QosProcessHandlerTest#testDecodeHttp"
    ],
    "test_src_code": "    @Test\n    void testDecodeHttp() throws Exception {\n        ByteBuf buf = Unpooled.wrappedBuffer(new byte[] {'G'});\n        ChannelHandlerContext context = Mockito.mock(ChannelHandlerContext.class);\n        ChannelPipeline pipeline = Mockito.mock(ChannelPipeline.class);\n        Mockito.when(context.pipeline()).thenReturn(pipeline);\n        QosProcessHandler handler = new QosProcessHandler(FrameworkModel.defaultModel(), \"welcome\", false, StringUtils.EMPTY_STRING);\n        handler.decode(context, buf, Collections.emptyList());\n        verify(pipeline).addLast(any(HttpServerCodec.class));\n        verify(pipeline).addLast(any(HttpObjectAggregator.class));\n        verify(pipeline).addLast(any(HttpProcessHandler.class));\n        verify(pipeline).remove(handler);\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/QosProcessHandler.java#decode",
    "focal_src": "    @Override\n    protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {\n        if (in.readableBytes() < 1) {\n            return;\n        }\n\n        // read one byte to guess protocol\n        final int magic = in.getByte(in.readerIndex());\n\n        ChannelPipeline p = ctx.pipeline();\n        p.addLast(new ForeignHostPermitHandler(acceptForeignIp, acceptForeignIpWhitelist));\n        if (isHttp(magic)) {\n            // no welcome output for http protocol\n            if (welcomeFuture != null && welcomeFuture.isCancellable()) {\n                welcomeFuture.cancel(false);\n            }\n            p.addLast(new HttpServerCodec());\n            p.addLast(new HttpObjectAggregator(1048576));\n            p.addLast(new HttpProcessHandler(frameworkModel));\n            p.remove(this);\n        } else {\n            p.addLast(new LineBasedFrameDecoder(2048));\n            p.addLast(new StringDecoder(CharsetUtil.UTF_8));\n            p.addLast(new StringEncoder(CharsetUtil.UTF_8));\n            p.addLast(new IdleStateHandler(0, 0, 5 * 60));\n            p.addLast(new TelnetIdleEventHandler());\n            p.addLast(new TelnetProcessHandler(frameworkModel));\n            p.remove(this);\n        }\n    }\n",
    "focal_tgt": "    @Override\n    protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {\n        if (in.readableBytes() < 1) {\n            return;\n        }\n\n        // read one byte to guess protocol\n        final int magic = in.getByte(in.readerIndex());\n\n        ChannelPipeline p = ctx.pipeline();\n        p.addLast(new ForeignHostPermitHandler(qosConfiguration));\n        if (isHttp(magic)) {\n            // no welcome output for http protocol\n            if (welcomeFuture != null && welcomeFuture.isCancellable()) {\n                welcomeFuture.cancel(false);\n            }\n            p.addLast(new HttpServerCodec());\n            p.addLast(new HttpObjectAggregator(1048576));\n            p.addLast(new HttpProcessHandler(frameworkModel, qosConfiguration));\n            p.remove(this);\n        } else {\n            p.addLast(new LineBasedFrameDecoder(2048));\n            p.addLast(new StringDecoder(CharsetUtil.UTF_8));\n            p.addLast(new StringEncoder(CharsetUtil.UTF_8));\n            p.addLast(new IdleStateHandler(0, 0, 5 * 60));\n            p.addLast(new TelnetIdleEventHandler());\n            p.addLast(new TelnetProcessHandler(frameworkModel, qosConfiguration));\n            p.remove(this);\n        }\n    }\n",
    "test_id": 18,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "protected",
        "protected",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "decode",
        "decode",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Byte",
        "Byte",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Buf",
        "Buf",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "Object",
        "Object",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "out",
        "out",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "readable",
        "readable",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bytes",
        "Bytes",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "1",
        "1",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "final",
        "final",
        "equal"
      ],
      [
        "int",
        "int",
        "equal"
      ],
      [
        "magic",
        "magic",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Byte",
        "Byte",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "reader",
        "reader",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Index",
        "Index",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Pipeline",
        "Pipeline",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "pipeline",
        "pipeline",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Host",
        "Host",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Permit",
        "Permit",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "accept",
        "qos",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Configuration",
        "replace"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "accept",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Foreign",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Whitelist",
        "",
        "delete"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "magic",
        "magic",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "welcome",
        "welcome",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "!=",
        "!=",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        "&&",
        "&&",
        "equal"
      ],
      [
        "welcome",
        "welcome",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Cancellable",
        "Cancellable",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "welcome",
        "welcome",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "cancel",
        "cancel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Server",
        "Server",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Codec",
        "Codec",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Object",
        "Object",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Aggregator",
        "Aggregator",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "1048576",
        "1048576",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "remove",
        "remove",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Line",
        "Line",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Based",
        "Based",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Frame",
        "Frame",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "2048",
        "2048",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Charset",
        "Charset",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Util",
        "Util",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "UTF",
        "UTF",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "8",
        "8",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Encoder",
        "Encoder",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Charset",
        "Charset",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Util",
        "Util",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "UTF",
        "UTF",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "8",
        "8",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Idle",
        "Idle",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "State",
        "State",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "0",
        "0",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "0",
        "0",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "5",
        "5",
        "equal"
      ],
      [
        "*",
        "*",
        "equal"
      ],
      [
        "60",
        "60",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Idle",
        "Idle",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Event",
        "Event",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "remove",
        "remove",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testDecodeHttp()throws Exception {        ByteBuf buf = Unpooled.wrappedBuffer(new byte[] {\\'G\\'});\n        ChannelHandlerContext context = Mockito.mock(ChannelHandlerContext.class);\n        ChannelPipeline pipeline = Mockito.mock(ChannelPipeline.class);\n        Mockito.when(context.pipeline()).thenReturn(pipeline);\n        QosProcessHandler handler = new QosProcessHandler(FrameworkModel.defaultModel(), \"welcome\", false, StringUtils.EMPTY_STRING);\n        handler.decode(context, buf, Collections.emptyList());\n        verify(pipeline).addLast(any(HttpServerCodec"
  },
  "19": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.QosProcessHandlerTest#testDecodeTelnet",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.QosProcessHandlerTest#testDecodeTelnet"
    ],
    "test_src_code": "    @Test\n    void testDecodeTelnet() throws Exception {\n        ByteBuf buf = Unpooled.wrappedBuffer(new byte[] {'A'});\n        ChannelHandlerContext context = Mockito.mock(ChannelHandlerContext.class);\n        ChannelPipeline pipeline = Mockito.mock(ChannelPipeline.class);\n        Mockito.when(context.pipeline()).thenReturn(pipeline);\n        QosProcessHandler handler = new QosProcessHandler(FrameworkModel.defaultModel(), \"welcome\", false, StringUtils.EMPTY_STRING);\n        handler.decode(context, buf, Collections.emptyList());\n        verify(pipeline).addLast(any(LineBasedFrameDecoder.class));\n        verify(pipeline).addLast(any(StringDecoder.class));\n        verify(pipeline).addLast(any(StringEncoder.class));\n        verify(pipeline).addLast(any(TelnetProcessHandler.class));\n        verify(pipeline).remove(handler);\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/QosProcessHandler.java#decode",
    "focal_src": "    @Override\n    protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {\n        if (in.readableBytes() < 1) {\n            return;\n        }\n\n        // read one byte to guess protocol\n        final int magic = in.getByte(in.readerIndex());\n\n        ChannelPipeline p = ctx.pipeline();\n        p.addLast(new ForeignHostPermitHandler(acceptForeignIp, acceptForeignIpWhitelist));\n        if (isHttp(magic)) {\n            // no welcome output for http protocol\n            if (welcomeFuture != null && welcomeFuture.isCancellable()) {\n                welcomeFuture.cancel(false);\n            }\n            p.addLast(new HttpServerCodec());\n            p.addLast(new HttpObjectAggregator(1048576));\n            p.addLast(new HttpProcessHandler(frameworkModel));\n            p.remove(this);\n        } else {\n            p.addLast(new LineBasedFrameDecoder(2048));\n            p.addLast(new StringDecoder(CharsetUtil.UTF_8));\n            p.addLast(new StringEncoder(CharsetUtil.UTF_8));\n            p.addLast(new IdleStateHandler(0, 0, 5 * 60));\n            p.addLast(new TelnetIdleEventHandler());\n            p.addLast(new TelnetProcessHandler(frameworkModel));\n            p.remove(this);\n        }\n    }\n",
    "focal_tgt": "    @Override\n    protected void decode(ChannelHandlerContext ctx, ByteBuf in, List<Object> out) throws Exception {\n        if (in.readableBytes() < 1) {\n            return;\n        }\n\n        // read one byte to guess protocol\n        final int magic = in.getByte(in.readerIndex());\n\n        ChannelPipeline p = ctx.pipeline();\n        p.addLast(new ForeignHostPermitHandler(qosConfiguration));\n        if (isHttp(magic)) {\n            // no welcome output for http protocol\n            if (welcomeFuture != null && welcomeFuture.isCancellable()) {\n                welcomeFuture.cancel(false);\n            }\n            p.addLast(new HttpServerCodec());\n            p.addLast(new HttpObjectAggregator(1048576));\n            p.addLast(new HttpProcessHandler(frameworkModel, qosConfiguration));\n            p.remove(this);\n        } else {\n            p.addLast(new LineBasedFrameDecoder(2048));\n            p.addLast(new StringDecoder(CharsetUtil.UTF_8));\n            p.addLast(new StringEncoder(CharsetUtil.UTF_8));\n            p.addLast(new IdleStateHandler(0, 0, 5 * 60));\n            p.addLast(new TelnetIdleEventHandler());\n            p.addLast(new TelnetProcessHandler(frameworkModel, qosConfiguration));\n            p.remove(this);\n        }\n    }\n",
    "test_id": 19,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "protected",
        "protected",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "decode",
        "decode",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Byte",
        "Byte",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Buf",
        "Buf",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "Object",
        "Object",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "out",
        "out",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "readable",
        "readable",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bytes",
        "Bytes",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "1",
        "1",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "final",
        "final",
        "equal"
      ],
      [
        "int",
        "int",
        "equal"
      ],
      [
        "magic",
        "magic",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Byte",
        "Byte",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "in",
        "in",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "reader",
        "reader",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Index",
        "Index",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Pipeline",
        "Pipeline",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "pipeline",
        "pipeline",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Foreign",
        "Foreign",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Host",
        "Host",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Permit",
        "Permit",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "accept",
        "qos",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Foreign",
        "Configuration",
        "replace"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "accept",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Foreign",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Ip",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Whitelist",
        "",
        "delete"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "magic",
        "magic",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "welcome",
        "welcome",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "!=",
        "!=",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        "&&",
        "&&",
        "equal"
      ],
      [
        "welcome",
        "welcome",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Cancellable",
        "Cancellable",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "welcome",
        "welcome",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "cancel",
        "cancel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "false",
        "false",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Server",
        "Server",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Codec",
        "Codec",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Object",
        "Object",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Aggregator",
        "Aggregator",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "1048576",
        "1048576",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Http",
        "Http",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "remove",
        "remove",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Line",
        "Line",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Based",
        "Based",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Frame",
        "Frame",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "2048",
        "2048",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Charset",
        "Charset",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Util",
        "Util",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "UTF",
        "UTF",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "8",
        "8",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Encoder",
        "Encoder",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Charset",
        "Charset",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Util",
        "Util",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "UTF",
        "UTF",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "8",
        "8",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Idle",
        "Idle",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "State",
        "State",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "0",
        "0",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "0",
        "0",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "5",
        "5",
        "equal"
      ],
      [
        "*",
        "*",
        "equal"
      ],
      [
        "60",
        "60",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Idle",
        "Idle",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Event",
        "Event",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Last",
        "Last",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "p",
        "p",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "remove",
        "remove",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testDecodeTelnet() throws Exception {        ByteBuf buf = Unpooled.wrappedBuffer(new byte[] {\\'A\\'});\n        ChannelHandlerContext context = Mockito.mock(ChannelHandlerContext.class);\n        ChannelPipeline pipeline = Mockito.mock(ChannelPipeline.class);\n        Mockito.when(context.pipeline()).thenReturn(pipeline);\n        QosProcessHandler handler = new QosProcessHandler(FrameworkModel.defaultModel(), \"welcome\", false, StringUtils.EMPTY_STRING);\n        handler.decode(context, buf, Collections.emptyList());\n        verify(pipeline).addLast(any(Line"
  },
  "20": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testPrompt",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testPrompt"
    ],
    "test_src_code": "    @Test\n    void testPrompt() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, \"\");\n        verify(context).writeAndFlush(QosProcessHandler.PROMPT);\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandler.java#TelnetProcessHandler",
    "focal_src": "    public TelnetProcessHandler(FrameworkModel frameworkModel) {\n        this.commandExecutor = new DefaultCommandExecutor(frameworkModel);\n    }\n",
    "focal_tgt": "    public TelnetProcessHandler(FrameworkModel frameworkModel, QosConfiguration qosConfiguration) {\n        this.commandExecutor = new DefaultCommandExecutor(frameworkModel);\n        this.qosConfiguration = qosConfiguration;\n    }\n",
    "test_id": 20,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Framework",
        "Framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Default",
        "Default",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "",
        "this",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testPrompt() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel(), QosConfiguration.getDefaultInstance());\n        handler.channelRead0(context, \"\");\n        verify(context).writeAndFlush(QosProcessHandler.PROMPT);\n    }\n    "
  },
  "21": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testPrompt",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testPrompt"
    ],
    "test_src_code": "    @Test\n    void testPrompt() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, \"\");\n        verify(context).writeAndFlush(QosProcessHandler.PROMPT);\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandler.java#channelRead0",
    "focal_src": "    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, String msg) throws Exception {\n\n        if (StringUtils.isBlank(msg)) {\n            ctx.writeAndFlush(QosProcessHandler.PROMPT);\n        } else {\n            CommandContext commandContext = TelnetCommandDecoder.decode(msg);\n            commandContext.setRemote(ctx.channel());\n\n            try {\n                String result = commandExecutor.execute(commandContext);\n                if (StringUtils.isEquals(QosConstants.CLOSE, result)) {\n                    ctx.writeAndFlush(getByeLabel()).addListener(ChannelFutureListener.CLOSE);\n                } else {\n                    ctx.writeAndFlush(result + QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                }\n            } catch (NoSuchCommandException ex) {\n                ctx.writeAndFlush(msg + \" :no such command\");\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_COMMAND_NOT_FOUND, \"\", \"\", \"can not found command \" + commandContext, ex);\n            } catch (Exception ex) {\n                ctx.writeAndFlush(msg + \" :fail to execute commandContext by \" + ex.getMessage());\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"execute commandContext got exception \" + commandContext, ex);\n            }\n        }\n    }\n",
    "focal_tgt": "    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, String msg) throws Exception {\n\n        if (StringUtils.isBlank(msg)) {\n            ctx.writeAndFlush(QosProcessHandler.PROMPT);\n        } else {\n            CommandContext commandContext = TelnetCommandDecoder.decode(msg);\n            commandContext.setQosConfiguration(qosConfiguration);\n            commandContext.setRemote(ctx.channel());\n\n            try {\n                String result = commandExecutor.execute(commandContext);\n                if (StringUtils.isEquals(QosConstants.CLOSE, result)) {\n                    ctx.writeAndFlush(getByeLabel()).addListener(ChannelFutureListener.CLOSE);\n                } else {\n                    ctx.writeAndFlush(result + QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                }\n            } catch (NoSuchCommandException ex) {\n                ctx.writeAndFlush(msg + \" :no such command\");\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_COMMAND_NOT_FOUND, \"\", \"\", \"can not found command \" + commandContext, ex);\n            } catch (PermissionDenyException ex) {\n                ctx.writeAndFlush(msg + \" :permission deny\");\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_PERMISSION_DENY_EXCEPTION, \"\", \"\", \"permission deny to access command \" + commandContext, ex);\n            } catch (Exception ex) {\n                ctx.writeAndFlush(msg + \" :fail to execute commandContext by \" + ex.getMessage());\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"execute commandContext got exception \" + commandContext, ex);\n            }\n        }\n    }\n",
    "test_id": 21,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "protected",
        "protected",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Read0",
        "Read0",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Blank",
        "Blank",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "decode",
        "decode",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "",
        "set",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "set",
        "set",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Remote",
        "Remote",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Equals",
        "Equals",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bye",
        "Bye",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Label",
        "Label",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "No",
        "No",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Such",
        "Such",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "no",
        "no",
        "equal"
      ],
      [
        "such",
        "such",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "COMMAND",
        "COMMAND",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "NOT",
        "NOT",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "FOUND",
        "FOUND",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "can",
        "can",
        "equal"
      ],
      [
        "not",
        "not",
        "equal"
      ],
      [
        "found",
        "found",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Deny",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Exception",
        "insert"
      ],
      [
        "",
        "ex",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "ctx",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "write",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "And",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Flush",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "msg",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ":",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "permission",
        "insert"
      ],
      [
        "",
        "deny",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "ctx",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "write",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "And",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Flush",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Constants",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "BR",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "STR",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Process",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Handler",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "PROMPT",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "log",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "error",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "QOS",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "PERMISSION",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "DENY",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "EXCEPTION",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "permission",
        "insert"
      ],
      [
        "",
        "deny",
        "insert"
      ],
      [
        "",
        "to",
        "insert"
      ],
      [
        "",
        "access",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "ex",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "catch",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "fail",
        "fail",
        "equal"
      ],
      [
        "to",
        "to",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "by",
        "by",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Message",
        "Message",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "UNEXPECTED",
        "UNEXPECTED",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "EXCEPTION",
        "EXCEPTION",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "got",
        "got",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testPrompt()throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, \"\");\n        verify(context).writeAndFlush(QosProcessHandler.PROMPT);\n    }\n    }\n"
  },
  "22": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testBye",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testBye"
    ],
    "test_src_code": "    @Test\n    void testBye() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel());\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(\"BYE!\\n\")).thenReturn(future);\n        handler.channelRead0(context, \"quit\");\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandler.java#TelnetProcessHandler",
    "focal_src": "    public TelnetProcessHandler(FrameworkModel frameworkModel) {\n        this.commandExecutor = new DefaultCommandExecutor(frameworkModel);\n    }\n",
    "focal_tgt": "    public TelnetProcessHandler(FrameworkModel frameworkModel, QosConfiguration qosConfiguration) {\n        this.commandExecutor = new DefaultCommandExecutor(frameworkModel);\n        this.qosConfiguration = qosConfiguration;\n    }\n",
    "test_id": 22,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Framework",
        "Framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Default",
        "Default",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "",
        "this",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testBye() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel(), QosConfiguration.getDefaultInstance());\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(\"BYE!\\\n\")).thenReturn(future);\n        handler.channelRead0(context, \"quit\");\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n    }\n"
  },
  "23": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testBye",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testBye"
    ],
    "test_src_code": "    @Test\n    void testBye() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel());\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(\"BYE!\\n\")).thenReturn(future);\n        handler.channelRead0(context, \"quit\");\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandler.java#channelRead0",
    "focal_src": "    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, String msg) throws Exception {\n\n        if (StringUtils.isBlank(msg)) {\n            ctx.writeAndFlush(QosProcessHandler.PROMPT);\n        } else {\n            CommandContext commandContext = TelnetCommandDecoder.decode(msg);\n            commandContext.setRemote(ctx.channel());\n\n            try {\n                String result = commandExecutor.execute(commandContext);\n                if (StringUtils.isEquals(QosConstants.CLOSE, result)) {\n                    ctx.writeAndFlush(getByeLabel()).addListener(ChannelFutureListener.CLOSE);\n                } else {\n                    ctx.writeAndFlush(result + QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                }\n            } catch (NoSuchCommandException ex) {\n                ctx.writeAndFlush(msg + \" :no such command\");\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_COMMAND_NOT_FOUND, \"\", \"\", \"can not found command \" + commandContext, ex);\n            } catch (Exception ex) {\n                ctx.writeAndFlush(msg + \" :fail to execute commandContext by \" + ex.getMessage());\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"execute commandContext got exception \" + commandContext, ex);\n            }\n        }\n    }\n",
    "focal_tgt": "    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, String msg) throws Exception {\n\n        if (StringUtils.isBlank(msg)) {\n            ctx.writeAndFlush(QosProcessHandler.PROMPT);\n        } else {\n            CommandContext commandContext = TelnetCommandDecoder.decode(msg);\n            commandContext.setQosConfiguration(qosConfiguration);\n            commandContext.setRemote(ctx.channel());\n\n            try {\n                String result = commandExecutor.execute(commandContext);\n                if (StringUtils.isEquals(QosConstants.CLOSE, result)) {\n                    ctx.writeAndFlush(getByeLabel()).addListener(ChannelFutureListener.CLOSE);\n                } else {\n                    ctx.writeAndFlush(result + QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                }\n            } catch (NoSuchCommandException ex) {\n                ctx.writeAndFlush(msg + \" :no such command\");\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_COMMAND_NOT_FOUND, \"\", \"\", \"can not found command \" + commandContext, ex);\n            } catch (PermissionDenyException ex) {\n                ctx.writeAndFlush(msg + \" :permission deny\");\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_PERMISSION_DENY_EXCEPTION, \"\", \"\", \"permission deny to access command \" + commandContext, ex);\n            } catch (Exception ex) {\n                ctx.writeAndFlush(msg + \" :fail to execute commandContext by \" + ex.getMessage());\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"execute commandContext got exception \" + commandContext, ex);\n            }\n        }\n    }\n",
    "test_id": 23,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "protected",
        "protected",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Read0",
        "Read0",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Blank",
        "Blank",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "decode",
        "decode",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "",
        "set",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "set",
        "set",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Remote",
        "Remote",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Equals",
        "Equals",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bye",
        "Bye",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Label",
        "Label",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "No",
        "No",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Such",
        "Such",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "no",
        "no",
        "equal"
      ],
      [
        "such",
        "such",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "COMMAND",
        "COMMAND",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "NOT",
        "NOT",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "FOUND",
        "FOUND",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "can",
        "can",
        "equal"
      ],
      [
        "not",
        "not",
        "equal"
      ],
      [
        "found",
        "found",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Deny",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Exception",
        "insert"
      ],
      [
        "",
        "ex",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "ctx",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "write",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "And",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Flush",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "msg",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ":",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "permission",
        "insert"
      ],
      [
        "",
        "deny",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "ctx",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "write",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "And",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Flush",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Constants",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "BR",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "STR",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Process",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Handler",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "PROMPT",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "log",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "error",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "QOS",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "PERMISSION",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "DENY",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "EXCEPTION",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "permission",
        "insert"
      ],
      [
        "",
        "deny",
        "insert"
      ],
      [
        "",
        "to",
        "insert"
      ],
      [
        "",
        "access",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "ex",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "catch",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "fail",
        "fail",
        "equal"
      ],
      [
        "to",
        "to",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "by",
        "by",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Message",
        "Message",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "UNEXPECTED",
        "UNEXPECTED",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "EXCEPTION",
        "EXCEPTION",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "got",
        "got",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testBye()throws Exception {        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel());\n        ChannelFuture future = mock(ChannelFuture.class);\n        when(context.writeAndFlush(\"BYE!\\\n\")).thenReturn(future);\n        handler.channelRead0(context, \"quit\");\n        verify(future).addListener(ChannelFutureListener.CLOSE);\n    }\n        }\n"
  },
  "24": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testUnknownCommand",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testUnknownCommand"
    ],
    "test_src_code": "    @Test\n    void testUnknownCommand() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, \"unknown\");\n        ArgumentCaptor<String> captor = ArgumentCaptor.forClass(String.class);\n        verify(context, Mockito.atLeastOnce()).writeAndFlush(captor.capture());\n        assertThat(captor.getAllValues(), contains(\"unknown :no such command\", \"\\r\\ndubbo>\"));\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandler.java#TelnetProcessHandler",
    "focal_src": "    public TelnetProcessHandler(FrameworkModel frameworkModel) {\n        this.commandExecutor = new DefaultCommandExecutor(frameworkModel);\n    }\n",
    "focal_tgt": "    public TelnetProcessHandler(FrameworkModel frameworkModel, QosConfiguration qosConfiguration) {\n        this.commandExecutor = new DefaultCommandExecutor(frameworkModel);\n        this.qosConfiguration = qosConfiguration;\n    }\n",
    "test_id": 24,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Framework",
        "Framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Default",
        "Default",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "",
        "this",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testUnknownCommand() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel(), QosConfiguration.getDefaultInstance());\n        handler.channelRead0(context, \"unknown\");\n        ArgumentCaptor<String> captor = ArgumentCaptor.forClass(String.class);\n        verify(context, Mockito.atLeastOnce()).writeAndFlush(captor.capture());\n        assertThat(captor.getAllValues(), contains(\"unknown :no such command\", \"\\\\r\\\ndubbo>\""
  },
  "25": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testUnknownCommand",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testUnknownCommand"
    ],
    "test_src_code": "    @Test\n    void testUnknownCommand() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, \"unknown\");\n        ArgumentCaptor<String> captor = ArgumentCaptor.forClass(String.class);\n        verify(context, Mockito.atLeastOnce()).writeAndFlush(captor.capture());\n        assertThat(captor.getAllValues(), contains(\"unknown :no such command\", \"\\r\\ndubbo>\"));\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandler.java#channelRead0",
    "focal_src": "    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, String msg) throws Exception {\n\n        if (StringUtils.isBlank(msg)) {\n            ctx.writeAndFlush(QosProcessHandler.PROMPT);\n        } else {\n            CommandContext commandContext = TelnetCommandDecoder.decode(msg);\n            commandContext.setRemote(ctx.channel());\n\n            try {\n                String result = commandExecutor.execute(commandContext);\n                if (StringUtils.isEquals(QosConstants.CLOSE, result)) {\n                    ctx.writeAndFlush(getByeLabel()).addListener(ChannelFutureListener.CLOSE);\n                } else {\n                    ctx.writeAndFlush(result + QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                }\n            } catch (NoSuchCommandException ex) {\n                ctx.writeAndFlush(msg + \" :no such command\");\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_COMMAND_NOT_FOUND, \"\", \"\", \"can not found command \" + commandContext, ex);\n            } catch (Exception ex) {\n                ctx.writeAndFlush(msg + \" :fail to execute commandContext by \" + ex.getMessage());\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"execute commandContext got exception \" + commandContext, ex);\n            }\n        }\n    }\n",
    "focal_tgt": "    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, String msg) throws Exception {\n\n        if (StringUtils.isBlank(msg)) {\n            ctx.writeAndFlush(QosProcessHandler.PROMPT);\n        } else {\n            CommandContext commandContext = TelnetCommandDecoder.decode(msg);\n            commandContext.setQosConfiguration(qosConfiguration);\n            commandContext.setRemote(ctx.channel());\n\n            try {\n                String result = commandExecutor.execute(commandContext);\n                if (StringUtils.isEquals(QosConstants.CLOSE, result)) {\n                    ctx.writeAndFlush(getByeLabel()).addListener(ChannelFutureListener.CLOSE);\n                } else {\n                    ctx.writeAndFlush(result + QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                }\n            } catch (NoSuchCommandException ex) {\n                ctx.writeAndFlush(msg + \" :no such command\");\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_COMMAND_NOT_FOUND, \"\", \"\", \"can not found command \" + commandContext, ex);\n            } catch (PermissionDenyException ex) {\n                ctx.writeAndFlush(msg + \" :permission deny\");\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_PERMISSION_DENY_EXCEPTION, \"\", \"\", \"permission deny to access command \" + commandContext, ex);\n            } catch (Exception ex) {\n                ctx.writeAndFlush(msg + \" :fail to execute commandContext by \" + ex.getMessage());\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"execute commandContext got exception \" + commandContext, ex);\n            }\n        }\n    }\n",
    "test_id": 25,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "protected",
        "protected",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Read0",
        "Read0",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Blank",
        "Blank",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "decode",
        "decode",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "",
        "set",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "set",
        "set",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Remote",
        "Remote",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Equals",
        "Equals",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bye",
        "Bye",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Label",
        "Label",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "No",
        "No",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Such",
        "Such",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "no",
        "no",
        "equal"
      ],
      [
        "such",
        "such",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "COMMAND",
        "COMMAND",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "NOT",
        "NOT",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "FOUND",
        "FOUND",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "can",
        "can",
        "equal"
      ],
      [
        "not",
        "not",
        "equal"
      ],
      [
        "found",
        "found",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Deny",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Exception",
        "insert"
      ],
      [
        "",
        "ex",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "ctx",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "write",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "And",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Flush",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "msg",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ":",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "permission",
        "insert"
      ],
      [
        "",
        "deny",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "ctx",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "write",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "And",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Flush",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Constants",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "BR",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "STR",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Process",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Handler",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "PROMPT",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "log",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "error",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "QOS",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "PERMISSION",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "DENY",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "EXCEPTION",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "permission",
        "insert"
      ],
      [
        "",
        "deny",
        "insert"
      ],
      [
        "",
        "to",
        "insert"
      ],
      [
        "",
        "access",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "ex",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "catch",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "fail",
        "fail",
        "equal"
      ],
      [
        "to",
        "to",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "by",
        "by",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Message",
        "Message",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "UNEXPECTED",
        "UNEXPECTED",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "EXCEPTION",
        "EXCEPTION",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "got",
        "got",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testUnknownCommand()throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, \"unknown\");\n        ArgumentCaptor<String> captor = ArgumentCaptor.forClass(String.class);\n        verify(context, Mockito.atLeastOnce()).writeAndFlush(captor.capture());\n        assertThat(captor.getAllValues(), contains(\"unknown :no such command\", \"\\\\r\\\ndubbo>\"));\n    }\n"
  },
  "26": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testGreeting",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testGreeting"
    ],
    "test_src_code": "    @Test\n    void testGreeting() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, \"greeting\");\n        ArgumentCaptor<String> captor = ArgumentCaptor.forClass(String.class);\n        verify(context).writeAndFlush(captor.capture());\n        assertThat(captor.getValue(), containsString(\"greeting\"));\n        assertThat(captor.getValue(), containsString(\"dubbo>\"));\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandler.java#TelnetProcessHandler",
    "focal_src": "    public TelnetProcessHandler(FrameworkModel frameworkModel) {\n        this.commandExecutor = new DefaultCommandExecutor(frameworkModel);\n    }\n",
    "focal_tgt": "    public TelnetProcessHandler(FrameworkModel frameworkModel, QosConfiguration qosConfiguration) {\n        this.commandExecutor = new DefaultCommandExecutor(frameworkModel);\n        this.qosConfiguration = qosConfiguration;\n    }\n",
    "test_id": 26,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Framework",
        "Framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Default",
        "Default",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "",
        "this",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testGreeting() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel(), QosConfiguration.getDefaultInstance());\n        handler.channelRead0(context, \"greeting\");\n        ArgumentCaptor<String> captor = ArgumentCaptor.forClass(String.class);\n        verify(context).writeAndFlush(captor.capture());\n        assertThat(captor.getValue(), containsString(\"greeting\"));\n        assertThat(captor.getValue(), containsString(\""
  },
  "27": {
    "commit_src": "ee9a3d53d4d8dcad17498747e92d15da42357e12",
    "commit_tgt": "ab5d95f46b9bd63ff60d926f031903b3ac171126",
    "changed_tests": [
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/command/DefaultCommandExecutorTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/pu/QosWireProtocolTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/ForeignHostPermitHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/HttpProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/QosProcessHandlerTest.java",
      "dubbo-plugin/dubbo-qos/src/test/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandlerTest.java"
    ],
    "refer_PR": "apache_dubbo-11076",
    "test_src": ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testGreeting",
    "test_tgt": [
      ".org.apache.dubbo.qos.server.handler.TelnetProcessHandlerTest#testGreeting"
    ],
    "test_src_code": "    @Test\n    void testGreeting() throws Exception {\n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, \"greeting\");\n        ArgumentCaptor<String> captor = ArgumentCaptor.forClass(String.class);\n        verify(context).writeAndFlush(captor.capture());\n        assertThat(captor.getValue(), containsString(\"greeting\"));\n        assertThat(captor.getValue(), containsString(\"dubbo>\"));\n    }\n",
    "focal_path": "dubbo-plugin/dubbo-qos/src/main/java/org/apache/dubbo/qos/server/handler/TelnetProcessHandler.java#channelRead0",
    "focal_src": "    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, String msg) throws Exception {\n\n        if (StringUtils.isBlank(msg)) {\n            ctx.writeAndFlush(QosProcessHandler.PROMPT);\n        } else {\n            CommandContext commandContext = TelnetCommandDecoder.decode(msg);\n            commandContext.setRemote(ctx.channel());\n\n            try {\n                String result = commandExecutor.execute(commandContext);\n                if (StringUtils.isEquals(QosConstants.CLOSE, result)) {\n                    ctx.writeAndFlush(getByeLabel()).addListener(ChannelFutureListener.CLOSE);\n                } else {\n                    ctx.writeAndFlush(result + QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                }\n            } catch (NoSuchCommandException ex) {\n                ctx.writeAndFlush(msg + \" :no such command\");\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_COMMAND_NOT_FOUND, \"\", \"\", \"can not found command \" + commandContext, ex);\n            } catch (Exception ex) {\n                ctx.writeAndFlush(msg + \" :fail to execute commandContext by \" + ex.getMessage());\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"execute commandContext got exception \" + commandContext, ex);\n            }\n        }\n    }\n",
    "focal_tgt": "    @Override\n    protected void channelRead0(ChannelHandlerContext ctx, String msg) throws Exception {\n\n        if (StringUtils.isBlank(msg)) {\n            ctx.writeAndFlush(QosProcessHandler.PROMPT);\n        } else {\n            CommandContext commandContext = TelnetCommandDecoder.decode(msg);\n            commandContext.setQosConfiguration(qosConfiguration);\n            commandContext.setRemote(ctx.channel());\n\n            try {\n                String result = commandExecutor.execute(commandContext);\n                if (StringUtils.isEquals(QosConstants.CLOSE, result)) {\n                    ctx.writeAndFlush(getByeLabel()).addListener(ChannelFutureListener.CLOSE);\n                } else {\n                    ctx.writeAndFlush(result + QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                }\n            } catch (NoSuchCommandException ex) {\n                ctx.writeAndFlush(msg + \" :no such command\");\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_COMMAND_NOT_FOUND, \"\", \"\", \"can not found command \" + commandContext, ex);\n            } catch (PermissionDenyException ex) {\n                ctx.writeAndFlush(msg + \" :permission deny\");\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_PERMISSION_DENY_EXCEPTION, \"\", \"\", \"permission deny to access command \" + commandContext, ex);\n            } catch (Exception ex) {\n                ctx.writeAndFlush(msg + \" :fail to execute commandContext by \" + ex.getMessage());\n                ctx.writeAndFlush(QosConstants.BR_STR + QosProcessHandler.PROMPT);\n                log.error(QOS_UNEXPECTED_EXCEPTION, \"\", \"\", \"execute commandContext got exception \" + commandContext, ex);\n            }\n        }\n    }\n",
    "test_id": 27,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "protected",
        "protected",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Read0",
        "Read0",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Blank",
        "Blank",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Telnet",
        "Telnet",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Decoder",
        "Decoder",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "decode",
        "decode",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "",
        "set",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Configuration",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "set",
        "set",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Remote",
        "Remote",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "channel",
        "channel",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "try",
        "try",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Executor",
        "Executor",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Equals",
        "Equals",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bye",
        "Bye",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Label",
        "Label",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Channel",
        "Channel",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Future",
        "Future",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Listener",
        "Listener",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "CLOSE",
        "CLOSE",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "result",
        "result",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "No",
        "No",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Such",
        "Such",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Command",
        "Command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "no",
        "no",
        "equal"
      ],
      [
        "such",
        "such",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "COMMAND",
        "COMMAND",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "NOT",
        "NOT",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "FOUND",
        "FOUND",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "can",
        "can",
        "equal"
      ],
      [
        "not",
        "not",
        "equal"
      ],
      [
        "found",
        "found",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "catch",
        "catch",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "Permission",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Deny",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Exception",
        "insert"
      ],
      [
        "",
        "ex",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "ctx",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "write",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "And",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Flush",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "msg",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ":",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "permission",
        "insert"
      ],
      [
        "",
        "deny",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "ctx",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "write",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "And",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Flush",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Constants",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "BR",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "STR",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "Qos",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Process",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Handler",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "PROMPT",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "log",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "error",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "QOS",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "PERMISSION",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "DENY",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "_",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "EXCEPTION",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "permission",
        "insert"
      ],
      [
        "",
        "deny",
        "insert"
      ],
      [
        "",
        "to",
        "insert"
      ],
      [
        "",
        "access",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "\"",
        "insert"
      ],
      [
        "",
        "+",
        "insert"
      ],
      [
        "",
        "command",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Context",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "ex",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "catch",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "msg",
        "msg",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "fail",
        "fail",
        "equal"
      ],
      [
        "to",
        "to",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "by",
        "by",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Message",
        "Message",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "ctx",
        "ctx",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "write",
        "write",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "And",
        "And",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Flush",
        "Flush",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Constants",
        "Constants",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "BR",
        "BR",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "STR",
        "STR",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "Qos",
        "Qos",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Process",
        "Process",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Handler",
        "Handler",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "PROMPT",
        "PROMPT",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "log",
        "log",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "error",
        "error",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "QOS",
        "QOS",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "UNEXPECTED",
        "UNEXPECTED",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "_",
        "_",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "EXCEPTION",
        "EXCEPTION",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "execute",
        "execute",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        "got",
        "got",
        "equal"
      ],
      [
        "exception",
        "exception",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "command",
        "command",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Context",
        "Context",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "ex",
        "ex",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testGreeting()throws Exception { \n        ChannelHandlerContext context = mock(ChannelHandlerContext.class);\n        TelnetProcessHandler handler = new TelnetProcessHandler(FrameworkModel.defaultModel());\n        handler.channelRead0(context, \"greeting\");\n        ArgumentCaptor<String> captor = ArgumentCaptor.forClass(String.class);\n        verify(context).writeAndFlush(captor.capture());\n        assertThat(captor.getValue(), containsString(\"greeting\"));\n        assertThat(captor.getValue(), containsString(\"dubbo>\"));\n"
  },
  "28": {
    "commit_src": "e3ee0cc6894a35d64c24de2ebf98c70f58619d93",
    "commit_tgt": "c768ad8f13186320de71a0df5e78acb08205106c",
    "changed_tests": [
      "dubbo-rpc/dubbo-rpc-triple/src/test/java/org/apache/dubbo/rpc/protocol/tri/TripleCustomerProtocolWapperTest.java",
      "dubbo-rpc/dubbo-rpc-triple/src/test/java/org/apache/dubbo/rpc/protocol/tri/service/TriBuiltinServiceTest.java"
    ],
    "refer_PR": "apache_dubbo-11084",
    "test_src": ".org.apache.dubbo.rpc.protocol.tri.service.TriBuiltinServiceTest#test",
    "test_tgt": [
      ".org.apache.dubbo.rpc.protocol.tri.service.TriBuiltinServiceTest#testDefaultNotEnable",
      ".org.apache.dubbo.rpc.protocol.tri.service.TriBuiltinServiceTest#testForceEnable"
    ],
    "test_src_code": "    @Test\n    void test() {\n        FrameworkModel frameworkModel = new FrameworkModel();\n        TriBuiltinService triBuiltinService = new TriBuiltinService(frameworkModel);\n        String serviceName = DubboHealthTriple.SERVICE_NAME;\n        Assertions.assertNotNull(triBuiltinService.getHealthStatusManager());\n        PathResolver pathResolver = frameworkModel.getExtensionLoader(PathResolver.class)\n            .getDefaultExtension();\n        Assertions.assertNotNull(pathResolver.resolve(serviceName));\n        ModuleServiceRepository repository = frameworkModel.getInternalApplicationModel()\n            .getInternalModule().getServiceRepository();\n        Assertions.assertFalse(repository.getAllServices().isEmpty());\n        Assertions.assertNotNull(StubSuppliers.getServiceDescriptor(serviceName));\n    }\n",
    "focal_path": "dubbo-rpc/dubbo-rpc-triple/src/main/java/org/apache/dubbo/rpc/protocol/tri/service/TriBuiltinService.java#TriBuiltinService",
    "focal_src": "    public TriBuiltinService(FrameworkModel frameworkModel) {\n        healthStatusManager = new HealthStatusManager(new TriHealthImpl());\n        healthService = healthStatusManager.getHealthService();\n        reflectionServiceV1Alpha = new ReflectionV1AlphaService();\n        proxyFactory = frameworkModel.getExtensionLoader(ProxyFactory.class).getAdaptiveExtension();\n        pathResolver = frameworkModel.getExtensionLoader(PathResolver.class).getDefaultExtension();\n        init();\n    }\n",
    "focal_tgt": "    public TriBuiltinService(FrameworkModel frameworkModel) {\n        this.frameworkModel = frameworkModel;\n        if (enable()) {\n            init();\n        }\n    }\n",
    "test_id": 28,
    "edit_seq": [
      [
        "public",
        "public",
        "equal"
      ],
      [
        "Tri",
        "Tri",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Builtin",
        "Builtin",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Service",
        "Service",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Framework",
        "Framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        "framework",
        "framework",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Model",
        "Model",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "",
        "this",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "health",
        "framework",
        "replace"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Status",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Manager",
        "Model",
        "replace"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "framework",
        "replace"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Model",
        "insert"
      ],
      [
        "Health",
        ";",
        "replace"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Status",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Manager",
        "",
        "delete"
      ],
      [
        "",
        "if",
        "insert"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "new",
        "enable",
        "replace"
      ],
      [
        "Tri",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Health",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Impl",
        "",
        "delete"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        "{",
        "replace"
      ],
      [
        "health",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Service",
        "",
        "delete"
      ],
      [
        "=",
        "",
        "delete"
      ],
      [
        "health",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Status",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Manager",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "get",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Health",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Service",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ";",
        "",
        "delete"
      ],
      [
        "reflection",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Service",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "V1",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Alpha",
        "",
        "delete"
      ],
      [
        "=",
        "",
        "delete"
      ],
      [
        "new",
        "",
        "delete"
      ],
      [
        "Reflection",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "V1",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Alpha",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Service",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ";",
        "",
        "delete"
      ],
      [
        "proxy",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Factory",
        "",
        "delete"
      ],
      [
        "=",
        "",
        "delete"
      ],
      [
        "framework",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Model",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "get",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Extension",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Loader",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        "Proxy",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Factory",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "class",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "get",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Adaptive",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Extension",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ";",
        "",
        "delete"
      ],
      [
        "path",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Resolver",
        "",
        "delete"
      ],
      [
        "=",
        "",
        "delete"
      ],
      [
        "framework",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Model",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "get",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Extension",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Loader",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        "Path",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Resolver",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "class",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "get",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Default",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Extension",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ";",
        "",
        "delete"
      ],
      [
        "init",
        "init",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "",
        "}",
        "insert"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void test() { frameworkModel = new FrameworkModel();\n        TriBuiltinService triBuiltinService = new TriBuiltinService(frameworkModel); \n        String serviceName = DubboHealthTriple.SERVICE_NAME;\n        Assertions.assertNotNull(triBuiltinService.getHealthService());\n        PathResolver pathResolver = frameworkModel.getExtensionLoader(PathResolver.class)\n           .getAdaptiveExtension();\n        Assertions.assertNotNull(pathResolver.resolve(serviceName));\n        ModuleServiceRepository repository = frameworkModel.getInternalApplicationModel()\n           .getInternalModule().getServiceRepository();\n        Assertions.assertNotNull(repository"
  },
  "29": {
    "commit_src": "10870708eb99a10fcfb25f71138e8d43cde566c4",
    "commit_tgt": "0add70e3f5a530766bfacf65392190afe3fd2a85",
    "changed_tests": [
      "dubbo-metrics/dubbo-metrics-registry/src/test/java/org/apache/dubbo/metrics/registry/metrics/collector/RegistryMetricsCollectorTest.java",
      "dubbo-metrics/dubbo-metrics-registry/src/test/java/org/apache/dubbo/metrics/registry/metrics/collector/RegistryMetricsTest.java",
      "dubbo-metrics/dubbo-metrics-registry/src/test/java/org/apache/dubbo/metrics/registry/metrics/collector/RegistryStatCompositeTest.java"
    ],
    "refer_PR": "apache_dubbo-12582",
    "test_src": ".org.apache.dubbo.metrics.registry.metrics.collector.RegistryMetricsCollectorTest#testRegisterMetrics",
    "test_tgt": [
      ".org.apache.dubbo.metrics.registry.metrics.collector.RegistryMetricsCollectorTest#testRegisterMetrics"
    ],
    "test_src_code": "    @Test\n    void testRegisterMetrics() {\n\n        RegistryEvent registryEvent = RegistryEvent.toRegisterEvent(applicationModel);\n        MetricsEventBus.post(registryEvent,\n            () -> {\n                List<MetricSample> metricSamples = collector.collect();\n                // push success +1 -> other default 0 = RegistryMetricsConstants.APP_LEVEL_KEYS.size()\n                Assertions.assertEquals(RegistryMetricsConstants.APP_LEVEL_KEYS.size(), metricSamples.size());\n                Assertions.assertTrue(metricSamples.stream().allMatch(metricSample -> metricSample instanceof GaugeMetricSample));\n                Assertions.assertTrue(metricSamples.stream().anyMatch(metricSample -> ((GaugeMetricSample) metricSample).applyAsDouble() == 1));\n                return null;\n            }\n        );\n\n        // push finish rt +1\n        List<MetricSample> metricSamples = collector.collect();\n        // RegistryMetricsConstants.APP_LEVEL_KEYS.size() + rt(5) = 12\n        Assertions.assertEquals(RegistryMetricsConstants.APP_LEVEL_KEYS.size() + 5, metricSamples.size());\n        long c1 = registryEvent.getTimePair().calc();\n\n\n        registryEvent = RegistryEvent.toRegisterEvent(applicationModel);\n        TimePair lastTimePair = registryEvent.getTimePair();\n        MetricsEventBus.post(registryEvent,\n            () -> {\n                try {\n                    Thread.sleep(50);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                return null;\n            }, Objects::nonNull\n        );\n        // push error rt +1\n        long c2 = lastTimePair.calc();\n\n        metricSamples = collector.collect();\n\n        // num(total+success+error) + rt(5)\n        Assertions.assertEquals(RegistryMetricsConstants.APP_LEVEL_KEYS.size() + 5, metricSamples.size());\n\n        // calc rt\n        for (MetricSample sample : metricSamples) {\n            Map<String, String> tags = sample.getTags();\n            Assertions.assertEquals(tags.get(TAG_APPLICATION_NAME), applicationModel.getApplicationName());\n        }\n\n        @SuppressWarnings(\"rawtypes\")\n        Map<String, Long> sampleMap = metricSamples.stream().collect(Collectors.toMap(MetricSample::getName, k -> ((GaugeMetricSample) k).applyAsLong()));\n\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_LAST, OP_TYPE_REGISTER).targetKey()), lastTimePair.calc());\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_MIN, OP_TYPE_REGISTER).targetKey()), Math.min(c1, c2));\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_MAX, OP_TYPE_REGISTER).targetKey()), Math.max(c1, c2));\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_AVG, OP_TYPE_REGISTER).targetKey()), (c1 + c2) / 2);\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_SUM, OP_TYPE_REGISTER).targetKey()), c1 + c2);\n    }\n",
    "focal_path": "dubbo-metrics/dubbo-metrics-registry/src/main/java/org/apache/dubbo/metrics/registry/collector/RegistryMetricsCollector.java#collect",
    "focal_src": "    @Override\n    public List<MetricSample> collect() {\n        List<MetricSample> list = new ArrayList<>();\n        if (!isCollectEnabled()) {\n            return list;\n        }\n        list.addAll(super.export(MetricsCategory.REGISTRY));\n        return list;\n    }\n",
    "focal_tgt": "    @Override\n    public List<MetricSample> collect() {\n        List<MetricSample> list = new ArrayList<>();\n        if (!isCollectEnabled()) {\n            return list;\n        }\n        list.addAll(super.export(MetricsCategory.REGISTRY));\n        list.addAll(internalStat.export(MetricsCategory.REGISTRY));\n        return list;\n    }\n",
    "test_id": 29,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "public",
        "public",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "Metric",
        "Metric",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Sample",
        "Sample",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "collect",
        "collect",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "Metric",
        "Metric",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Sample",
        "Sample",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "list",
        "list",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Array",
        "Array",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "!",
        "!",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Collect",
        "Collect",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Enabled",
        "Enabled",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "list",
        "list",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "list",
        "list",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "All",
        "All",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "super",
        "super",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "export",
        "export",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Metrics",
        "Metrics",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Category",
        "Category",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "REGISTRY",
        "REGISTRY",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "",
        "list",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "add",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "All",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "internal",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Stat",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "export",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Metrics",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Category",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "REGISTRY",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "list",
        "list",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testRegisterMetrics() {\n\n        RegistryEvent registryEvent = RegistryEvent.toRegisterEvent(applicationModel);\n        MetricsEventBus.post(registryEvent,\n            () -> {\n                List<MetricSample> metricSamples = collector.collect();\n                // push success +1 -> other default 0 = RegistryMetricsConstants.APP_LEVEL_KEYS.size()\n                Assertions.assertEquals(RegistryMetricsConstants.APP_LEVEL_KEYS.size(), metricSamples.size());\n                Assertions.assertTrue(metricSamples.stream().allMatch(metricSample -> metricSample instanceof GaugeMetricSample));\n                Assertions.assertTrue("
  },
  "30": {
    "commit_src": "10870708eb99a10fcfb25f71138e8d43cde566c4",
    "commit_tgt": "0add70e3f5a530766bfacf65392190afe3fd2a85",
    "changed_tests": [
      "dubbo-metrics/dubbo-metrics-registry/src/test/java/org/apache/dubbo/metrics/registry/metrics/collector/RegistryMetricsCollectorTest.java",
      "dubbo-metrics/dubbo-metrics-registry/src/test/java/org/apache/dubbo/metrics/registry/metrics/collector/RegistryMetricsTest.java",
      "dubbo-metrics/dubbo-metrics-registry/src/test/java/org/apache/dubbo/metrics/registry/metrics/collector/RegistryStatCompositeTest.java"
    ],
    "refer_PR": "apache_dubbo-12582",
    "test_src": ".org.apache.dubbo.metrics.registry.metrics.collector.RegistryMetricsCollectorTest#testServicePushMetrics",
    "test_tgt": [
      ".org.apache.dubbo.metrics.registry.metrics.collector.RegistryMetricsCollectorTest#testServicePushMetrics"
    ],
    "test_src_code": "    @Test\n    void testServicePushMetrics() {\n\n        String serviceName = \"demo.gameService\";\n\n        RegistryEvent registryEvent = RegistryEvent.toRsEvent(applicationModel, serviceName, 2);\n        MetricsEventBus.post(registryEvent,\n            () -> {\n                List<MetricSample> metricSamples = collector.collect();\n\n                // push success +1\n                Assertions.assertEquals(RegistryMetricsConstants.APP_LEVEL_KEYS.size() + 1, metricSamples.size());\n                // Service num only 1 and contains tag of interface\n                Assertions.assertEquals(1, metricSamples.stream().filter(metricSample -> serviceName.equals(metricSample.getTags().get(\"interface\"))).count());\n                return null;\n            }\n        );\n\n        // push finish rt +1\n        List<MetricSample> metricSamples = collector.collect();\n        // App(7) + rt(5) + service(total/success) = 14\n        Assertions.assertEquals(RegistryMetricsConstants.APP_LEVEL_KEYS.size() + 5 + 2, metricSamples.size());\n\n        long c1 = registryEvent.getTimePair().calc();\n        registryEvent = RegistryEvent.toRsEvent(applicationModel, serviceName, 2);\n        TimePair lastTimePair = registryEvent.getTimePair();\n        MetricsEventBus.post(registryEvent,\n            () -> {\n                try {\n                    Thread.sleep(50);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                return null;\n            }, Objects::nonNull\n        );\n        // push error rt +1\n        long c2 = lastTimePair.calc();\n\n        metricSamples = collector.collect();\n\n        // App(7) + rt(5) + service(total/success/failed) = 15\n        Assertions.assertEquals(RegistryMetricsConstants.APP_LEVEL_KEYS.size() + 5 + 3, metricSamples.size());\n\n        // calc rt\n        for (MetricSample sample : metricSamples) {\n            Map<String, String> tags = sample.getTags();\n            Assertions.assertEquals(tags.get(TAG_APPLICATION_NAME), applicationModel.getApplicationName());\n        }\n\n        @SuppressWarnings(\"rawtypes\")\n        Map<String, Long> sampleMap = metricSamples.stream().collect(Collectors.toMap(MetricSample::getName, k -> ((GaugeMetricSample) k).applyAsLong()));\n\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_LAST, OP_TYPE_REGISTER_SERVICE).targetKey()), lastTimePair.calc());\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_MIN, OP_TYPE_REGISTER_SERVICE).targetKey()), Math.min(c1, c2));\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_MAX, OP_TYPE_REGISTER_SERVICE).targetKey()), Math.max(c1, c2));\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_AVG, OP_TYPE_REGISTER_SERVICE).targetKey()), (c1 + c2) / 2);\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_SUM, OP_TYPE_REGISTER_SERVICE).targetKey()), c1 + c2);\n    }\n",
    "focal_path": "dubbo-metrics/dubbo-metrics-registry/src/main/java/org/apache/dubbo/metrics/registry/collector/RegistryMetricsCollector.java#collect",
    "focal_src": "    @Override\n    public List<MetricSample> collect() {\n        List<MetricSample> list = new ArrayList<>();\n        if (!isCollectEnabled()) {\n            return list;\n        }\n        list.addAll(super.export(MetricsCategory.REGISTRY));\n        return list;\n    }\n",
    "focal_tgt": "    @Override\n    public List<MetricSample> collect() {\n        List<MetricSample> list = new ArrayList<>();\n        if (!isCollectEnabled()) {\n            return list;\n        }\n        list.addAll(super.export(MetricsCategory.REGISTRY));\n        list.addAll(internalStat.export(MetricsCategory.REGISTRY));\n        return list;\n    }\n",
    "test_id": 30,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "public",
        "public",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "Metric",
        "Metric",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Sample",
        "Sample",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "collect",
        "collect",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "Metric",
        "Metric",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Sample",
        "Sample",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "list",
        "list",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Array",
        "Array",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "!",
        "!",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Collect",
        "Collect",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Enabled",
        "Enabled",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "list",
        "list",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "list",
        "list",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "All",
        "All",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "super",
        "super",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "export",
        "export",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Metrics",
        "Metrics",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Category",
        "Category",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "REGISTRY",
        "REGISTRY",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "",
        "list",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "add",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "All",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "internal",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Stat",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "export",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Metrics",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Category",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "REGISTRY",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "list",
        "list",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testServicePushMetrics() {\n\n        String serviceName = \"demo.gameService\";\n\n        RegistryEvent registryEvent = RegistryEvent.toRsEvent(applicationModel, serviceName, 2);\n        MetricsEventBus.post(registryEvent,\n            () -> {\n                List<MetricSample> metricSamples = collector.collect();\n\n                // push success +1\n                Assertions.assertEquals(RegistryMetricsConstants.APP_LEVEL_KEYS.size() + 1, metricSamples.size());\n                // Service num only 1 and contains tag of interface\n                Assertions.assertEquals(1, metricSamples.stream().find"
  },
  "31": {
    "commit_src": "10870708eb99a10fcfb25f71138e8d43cde566c4",
    "commit_tgt": "0add70e3f5a530766bfacf65392190afe3fd2a85",
    "changed_tests": [
      "dubbo-metrics/dubbo-metrics-registry/src/test/java/org/apache/dubbo/metrics/registry/metrics/collector/RegistryMetricsCollectorTest.java",
      "dubbo-metrics/dubbo-metrics-registry/src/test/java/org/apache/dubbo/metrics/registry/metrics/collector/RegistryMetricsTest.java",
      "dubbo-metrics/dubbo-metrics-registry/src/test/java/org/apache/dubbo/metrics/registry/metrics/collector/RegistryStatCompositeTest.java"
    ],
    "refer_PR": "apache_dubbo-12582",
    "test_src": ".org.apache.dubbo.metrics.registry.metrics.collector.RegistryMetricsCollectorTest#testServiceSubscribeMetrics",
    "test_tgt": [
      ".org.apache.dubbo.metrics.registry.metrics.collector.RegistryMetricsCollectorTest#testServiceSubscribeMetrics"
    ],
    "test_src_code": "    @Test\n    void testServiceSubscribeMetrics() {\n\n        String serviceName = \"demo.gameService\";\n\n        RegistryEvent subscribeEvent = RegistryEvent.toSsEvent(applicationModel, serviceName);\n        MetricsEventBus.post(subscribeEvent,\n            () -> {\n                List<MetricSample> metricSamples = collector.collect();\n                Assertions.assertTrue(metricSamples.stream().allMatch(metricSample -> metricSample instanceof GaugeMetricSample));\n                Assertions.assertTrue(metricSamples.stream().anyMatch(metricSample -> ((GaugeMetricSample) metricSample).applyAsDouble() == 1));\n                // App(default=7) + (service success +1)\n                Assertions.assertEquals(RegistryMetricsConstants.APP_LEVEL_KEYS.size() + 1, metricSamples.size());\n                // Service num only 1 and contains tag of interface\n                Assertions.assertEquals(1, metricSamples.stream().filter(metricSample -> serviceName.equals(metricSample.getTags().get(\"interface\"))).count());\n                return null;\n            }\n        );\n\n        // push finish rt +1\n        List<MetricSample> metricSamples = collector.collect();\n        // App(7) + rt(5) + service(total/success) = 14\n        Assertions.assertEquals(RegistryMetricsConstants.APP_LEVEL_KEYS.size() + 5 + 2, metricSamples.size());\n\n        long c1 = subscribeEvent.getTimePair().calc();\n        subscribeEvent = RegistryEvent.toSsEvent(applicationModel, serviceName);\n        TimePair lastTimePair = subscribeEvent.getTimePair();\n        MetricsEventBus.post(subscribeEvent,\n            () -> {\n                try {\n                    Thread.sleep(50);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                return null;\n            }, Objects::nonNull\n        );\n        // push error rt +1\n        long c2 = lastTimePair.calc();\n\n        metricSamples = collector.collect();\n\n        // App(7) + rt(5) + service(total/success/failed) = 15\n        Assertions.assertEquals(RegistryMetricsConstants.APP_LEVEL_KEYS.size() + 5 + 3, metricSamples.size());\n\n        // calc rt\n        for (MetricSample sample : metricSamples) {\n            Map<String, String> tags = sample.getTags();\n            Assertions.assertEquals(tags.get(TAG_APPLICATION_NAME), applicationModel.getApplicationName());\n        }\n\n        @SuppressWarnings(\"rawtypes\")\n        Map<String, Long> sampleMap = metricSamples.stream().collect(Collectors.toMap(MetricSample::getName, k -> ((GaugeMetricSample) k).applyAsLong()));\n\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_LAST, OP_TYPE_SUBSCRIBE_SERVICE).targetKey()), lastTimePair.calc());\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_MIN, OP_TYPE_SUBSCRIBE_SERVICE).targetKey()), Math.min(c1, c2));\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_MAX, OP_TYPE_SUBSCRIBE_SERVICE).targetKey()), Math.max(c1, c2));\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_AVG, OP_TYPE_SUBSCRIBE_SERVICE).targetKey()), (c1 + c2) / 2);\n        Assertions.assertEquals(sampleMap.get(new MetricsKeyWrapper(MetricsKey.METRIC_RT_SUM, OP_TYPE_SUBSCRIBE_SERVICE).targetKey()), c1 + c2);\n    }\n",
    "focal_path": "dubbo-metrics/dubbo-metrics-registry/src/main/java/org/apache/dubbo/metrics/registry/collector/RegistryMetricsCollector.java#collect",
    "focal_src": "    @Override\n    public List<MetricSample> collect() {\n        List<MetricSample> list = new ArrayList<>();\n        if (!isCollectEnabled()) {\n            return list;\n        }\n        list.addAll(super.export(MetricsCategory.REGISTRY));\n        return list;\n    }\n",
    "focal_tgt": "    @Override\n    public List<MetricSample> collect() {\n        List<MetricSample> list = new ArrayList<>();\n        if (!isCollectEnabled()) {\n            return list;\n        }\n        list.addAll(super.export(MetricsCategory.REGISTRY));\n        list.addAll(internalStat.export(MetricsCategory.REGISTRY));\n        return list;\n    }\n",
    "test_id": 31,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "public",
        "public",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "Metric",
        "Metric",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Sample",
        "Sample",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "collect",
        "collect",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "Metric",
        "Metric",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Sample",
        "Sample",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "list",
        "list",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Array",
        "Array",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "!",
        "!",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Collect",
        "Collect",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Enabled",
        "Enabled",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "list",
        "list",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "list",
        "list",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "All",
        "All",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "super",
        "super",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "export",
        "export",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Metrics",
        "Metrics",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Category",
        "Category",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "REGISTRY",
        "REGISTRY",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "",
        "list",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "add",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "All",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "internal",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Stat",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "export",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Metrics",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Category",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "REGISTRY",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "return",
        "return",
        "equal"
      ],
      [
        "list",
        "list",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testServiceSubscribeMetrics() {\n\n        String serviceName = \"demo.gameService\";\n\n        RegistryEvent subscribeEvent = RegistryEvent.toSsEvent(applicationModel, serviceName);\n        MetricsEventBus.post(subscribeEvent,\n            () -> {\n                List<MetricSample> metricSamples = collector.collect();\n                Assertions.assertTrue(metricSamples.stream().allMatch(metricSample -> ((GaugeMetricSample) metricSample).applyAsDouble() == 1));\n                // App(default)"
  },
  "32": {
    "commit_src": "d9db031469c27eb2e1c7438cf92e217b7f6817c4",
    "commit_tgt": "8a509e9601fab4af278859c9d947fca8f5f0fa27",
    "changed_tests": [
      "dubbo-filter/dubbo-filter-validation/src/test/java/org/apache/dubbo/validation/support/jvalidation/JValidatorTest.java",
      "dubbo-filter/dubbo-filter-validation/src/test/java/org/apache/dubbo/validation/support/jvalidation/mock/JValidatorTestTarget.java"
    ],
    "refer_PR": "apache_dubbo-13029",
    "test_src": ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithCollectionArg",
    "test_tgt": [
      ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithCollectionArg",
      ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithPrimitiveArg",
      ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithPrimitiveArgWithProvidedMessage",
      ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithPartialParameterValidation",
      ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithNestedParameterValidationWithNullParam",
      ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithNestedParameterValidationWithNullNestedParam",
      ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithNestedParameterValidationWithNullNestedParams"
    ],
    "test_src_code": "    @Test\n    void testItWithCollectionArg() throws Exception {\n        URL url = URL.valueOf(\"test://test:11/org.apache.dubbo.validation.support.jvalidation.mock.JValidatorTestTarget\");\n        JValidator jValidator = new JValidator(url);\n        jValidator.validate(\"someMethod4\", new Class<?>[]{List.class}, new Object[]{Arrays.asList(\"parameter\")});\n    }\n",
    "focal_path": "dubbo-filter/dubbo-filter-validation/src/main/java/org/apache/dubbo/validation/support/jvalidation/JValidator.java#JValidator",
    "focal_src": "    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public JValidator(URL url) {\n        this.clazz = ReflectUtils.forName(url.getServiceInterface());\n        String jvalidation = url.getParameter(\"jvalidation\");\n        ValidatorFactory factory;\n        if (jvalidation != null && jvalidation.length() > 0) {\n            factory = Validation.byProvider((Class) ReflectUtils.forName(jvalidation)).configure().buildValidatorFactory();\n        } else {\n            factory = Validation.buildDefaultValidatorFactory();\n        }\n        this.validator = factory.getValidator();\n        this.methodClassMap = new ConcurrentHashMap<>();\n    }\n",
    "focal_tgt": "    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public JValidator(URL url) {\n        this.clazz = ReflectUtils.forName(url.getServiceInterface());\n        String jvalidation = url.getParameter(\"jvalidation\");\n        ValidatorFactory factory;\n        if (StringUtils.isNotEmpty(jvalidation)) {\n            factory = Validation.byProvider((Class) ReflectUtils.forName(jvalidation)).configure().buildValidatorFactory();\n        } else {\n            factory = Validation.buildDefaultValidatorFactory();\n        }\n        this.validator = factory.getValidator();\n        this.methodClassMap = new ConcurrentHashMap<>();\n    }\n",
    "test_id": 32,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Suppress",
        "Suppress",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Warnings",
        "Warnings",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "unchecked",
        "unchecked",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "rawtypes",
        "rawtypes",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "public",
        "public",
        "equal"
      ],
      [
        "J",
        "J",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Validator",
        "Validator",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "URL",
        "URL",
        "equal"
      ],
      [
        "url",
        "url",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "clazz",
        "clazz",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Reflect",
        "Reflect",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "for",
        "for",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Name",
        "Name",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "url",
        "url",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Service",
        "Service",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Interface",
        "Interface",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "jvalidation",
        "jvalidation",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "url",
        "url",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Parameter",
        "Parameter",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "jvalidation",
        "jvalidation",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Validator",
        "Validator",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Factory",
        "Factory",
        "equal"
      ],
      [
        "factory",
        "factory",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "",
        "String",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Utils",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "is",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Not",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Empty",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "jvalidation",
        "jvalidation",
        "equal"
      ],
      [
        "!=",
        "",
        "delete"
      ],
      [
        "null",
        "",
        "delete"
      ],
      [
        "&&",
        "",
        "delete"
      ],
      [
        "jvalidation",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "length",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ">",
        "",
        "delete"
      ],
      [
        "0",
        "",
        "delete"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "factory",
        "factory",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Validation",
        "Validation",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "by",
        "by",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Provider",
        "Provider",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Class",
        "Class",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "Reflect",
        "Reflect",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Utils",
        "Utils",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "for",
        "for",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Name",
        "Name",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "jvalidation",
        "jvalidation",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "configure",
        "configure",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "build",
        "build",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Validator",
        "Validator",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Factory",
        "Factory",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "else",
        "else",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "factory",
        "factory",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "Validation",
        "Validation",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "build",
        "build",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Default",
        "Default",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Validator",
        "Validator",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Factory",
        "Factory",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "validator",
        "validator",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "factory",
        "factory",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Validator",
        "Validator",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "this",
        "this",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "method",
        "method",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Class",
        "Class",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Map",
        "Map",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Concurrent",
        "Concurrent",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Hash",
        "Hash",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Map",
        "Map",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testItWithCollectionArg() throws Exception {\n        URL url = URL.valueOf(\"test://test:11/org.apache.dubbo.validation.support.jvalidation.mock.JValidatorTestTarget\");\n        JValidator jValidator = new JValidator(url);\n        jValidator.validate(\"someMethod4\", new Class<?>[]{List.class}, new Object[]{Arrays.asList(\"parameter\")});\n    }\n    @Test\n    void testItWithCollectionArg() throws Exception {\n        URL url = URL.valueOf(\"test://test:11/org.apache.dubbo.validation.support"
  },
  "33": {
    "commit_src": "d9db031469c27eb2e1c7438cf92e217b7f6817c4",
    "commit_tgt": "8a509e9601fab4af278859c9d947fca8f5f0fa27",
    "changed_tests": [
      "dubbo-filter/dubbo-filter-validation/src/test/java/org/apache/dubbo/validation/support/jvalidation/JValidatorTest.java",
      "dubbo-filter/dubbo-filter-validation/src/test/java/org/apache/dubbo/validation/support/jvalidation/mock/JValidatorTestTarget.java"
    ],
    "refer_PR": "apache_dubbo-13029",
    "test_src": ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithCollectionArg",
    "test_tgt": [
      ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithCollectionArg",
      ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithPrimitiveArg",
      ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithPrimitiveArgWithProvidedMessage",
      ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithPartialParameterValidation",
      ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithNestedParameterValidationWithNullParam",
      ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithNestedParameterValidationWithNullNestedParam",
      ".org.apache.dubbo.validation.support.jvalidation.JValidatorTest#testItWithNestedParameterValidationWithNullNestedParams"
    ],
    "test_src_code": "    @Test\n    void testItWithCollectionArg() throws Exception {\n        URL url = URL.valueOf(\"test://test:11/org.apache.dubbo.validation.support.jvalidation.mock.JValidatorTestTarget\");\n        JValidator jValidator = new JValidator(url);\n        jValidator.validate(\"someMethod4\", new Class<?>[]{List.class}, new Object[]{Arrays.asList(\"parameter\")});\n    }\n",
    "focal_path": "dubbo-filter/dubbo-filter-validation/src/main/java/org/apache/dubbo/validation/support/jvalidation/JValidator.java#validate",
    "focal_src": "    @Override\n    public void validate(String methodName, Class<?>[] parameterTypes, Object[] arguments) throws Exception {\n        List<Class<?>> groups = new ArrayList<>();\n        Class<?> methodClass = methodClass(methodName);\n        if (methodClass != null) {\n            groups.add(methodClass);\n        }\n        Set<ConstraintViolation<?>> violations = new HashSet<>();\n        Method method = clazz.getMethod(methodName, parameterTypes);\n        Class<?>[] methodClasses;\n        if (method.isAnnotationPresent(MethodValidated.class)) {\n            methodClasses = method.getAnnotation(MethodValidated.class).value();\n            groups.addAll(Arrays.asList(methodClasses));\n        }\n        // add into default group\n        groups.add(0, Default.class);\n        groups.add(1, clazz);\n\n        // convert list to array\n        Class<?>[] classgroups = groups.toArray(new Class[groups.size()]);\n\n        Object parameterBean = getMethodParameterBean(clazz, method, arguments);\n        if (parameterBean != null) {\n            violations.addAll(validator.validate(parameterBean, classgroups));\n        }\n\n        for (Object arg : arguments) {\n            validate(violations, arg, classgroups);\n        }\n\n        if (!violations.isEmpty()) {\n            logger.info(\"Failed to validate service: \" + clazz.getName() + \", method: \" + methodName + \", cause: \" + violations);\n            throw new ConstraintViolationException(\"Failed to validate service: \" + clazz.getName() + \", method: \" + methodName + \", cause: \" + violations, violations);\n        }\n    }\n",
    "focal_tgt": "    @Override\n    public void validate(String methodName, Class<?>[] parameterTypes, Object[] arguments) throws Exception {\n        List<Class<?>> groups = new ArrayList<>();\n        Class<?> methodClass = methodClass(methodName);\n        if (methodClass != null) {\n            groups.add(methodClass);\n        }\n\n        Method method = clazz.getMethod(methodName, parameterTypes);\n        Class<?>[] methodClasses;\n        if (method.isAnnotationPresent(MethodValidated.class)) {\n            methodClasses = method.getAnnotation(MethodValidated.class).value();\n            groups.addAll(Arrays.asList(methodClasses));\n        }\n        // add into default group\n        groups.add(0, Default.class);\n        groups.add(1, clazz);\n\n        // convert list to array\n        Class<?>[] classGroups = groups.toArray(new Class[0]);\n\n        Set<ConstraintViolation<?>> violations = new HashSet<>();\n        Object parameterBean = getMethodParameterBean(clazz, method, arguments);\n        if (parameterBean != null) {\n            violations.addAll(validator.validate(parameterBean, classGroups));\n        }\n\n        for (Object arg : arguments) {\n            validate(violations, arg, classGroups);\n        }\n\n        if (!violations.isEmpty()) {\n            logger.info(\"Failed to validate service: \" + clazz.getName() + \", method: \" + methodName + \", cause: \" + violations);\n            throw new ConstraintViolationException(\"Failed to validate service: \" + clazz.getName() + \", method: \" + methodName + \", cause: \" + violations, violations);\n        }\n    }\n",
    "test_id": 33,
    "edit_seq": [
      [
        "@",
        "@",
        "equal"
      ],
      [
        "Override",
        "Override",
        "equal"
      ],
      [
        "public",
        "public",
        "equal"
      ],
      [
        "void",
        "void",
        "equal"
      ],
      [
        "validate",
        "validate",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "String",
        "String",
        "equal"
      ],
      [
        "method",
        "method",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Name",
        "Name",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Class",
        "Class",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "?",
        "?",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "[",
        "[",
        "equal"
      ],
      [
        "]",
        "]",
        "equal"
      ],
      [
        "parameter",
        "parameter",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Types",
        "Types",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "Object",
        "Object",
        "equal"
      ],
      [
        "[",
        "[",
        "equal"
      ],
      [
        "]",
        "]",
        "equal"
      ],
      [
        "arguments",
        "arguments",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "throws",
        "throws",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "Class",
        "Class",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "?",
        "?",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "groups",
        "groups",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Array",
        "Array",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "List",
        "List",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Class",
        "Class",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "?",
        "?",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "method",
        "method",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Class",
        "Class",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "method",
        "method",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Class",
        "Class",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "method",
        "method",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Name",
        "Name",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "method",
        "method",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Class",
        "Class",
        "equal"
      ],
      [
        "!=",
        "!=",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "groups",
        "groups",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "method",
        "method",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Class",
        "Class",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "",
        "Method",
        "insert"
      ],
      [
        "",
        "method",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "clazz",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "get",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Method",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "method",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Name",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "parameter",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Types",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "Class",
        "insert"
      ],
      [
        "",
        "<",
        "insert"
      ],
      [
        "",
        "?",
        "insert"
      ],
      [
        "",
        ">",
        "insert"
      ],
      [
        "",
        "[",
        "insert"
      ],
      [
        "",
        "]",
        "insert"
      ],
      [
        "",
        "method",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Classes",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "if",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "method",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "is",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Annotation",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Present",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Method",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Validated",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "class",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        "{",
        "insert"
      ],
      [
        "",
        "method",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Classes",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "method",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "get",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Annotation",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Method",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Validated",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "class",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "value",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "groups",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "add",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "All",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "Arrays",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "as",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "List",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "method",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Classes",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "}",
        "insert"
      ],
      [
        "",
        "groups",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "add",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "0",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "Default",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "class",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "groups",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "add",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "1",
        "insert"
      ],
      [
        "",
        ",",
        "insert"
      ],
      [
        "",
        "clazz",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "",
        "Class",
        "insert"
      ],
      [
        "",
        "<",
        "insert"
      ],
      [
        "",
        "?",
        "insert"
      ],
      [
        "",
        ">",
        "insert"
      ],
      [
        "",
        "[",
        "insert"
      ],
      [
        "",
        "]",
        "insert"
      ],
      [
        "",
        "class",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Groups",
        "insert"
      ],
      [
        "",
        "=",
        "insert"
      ],
      [
        "",
        "groups",
        "insert"
      ],
      [
        "",
        ".",
        "insert"
      ],
      [
        "",
        "to",
        "insert"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Array",
        "insert"
      ],
      [
        "",
        "(",
        "insert"
      ],
      [
        "",
        "new",
        "insert"
      ],
      [
        "",
        "Class",
        "insert"
      ],
      [
        "",
        "[",
        "insert"
      ],
      [
        "",
        "0",
        "insert"
      ],
      [
        "",
        "]",
        "insert"
      ],
      [
        "",
        ")",
        "insert"
      ],
      [
        "",
        ";",
        "insert"
      ],
      [
        "Set",
        "Set",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "Constraint",
        "Constraint",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Violation",
        "Violation",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        "?",
        "?",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "violations",
        "violations",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Hash",
        "Hash",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Set",
        "Set",
        "equal"
      ],
      [
        "<",
        "<",
        "equal"
      ],
      [
        ">",
        ">",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ";",
        "",
        "delete"
      ],
      [
        "Method",
        "",
        "delete"
      ],
      [
        "method",
        "",
        "delete"
      ],
      [
        "=",
        "",
        "delete"
      ],
      [
        "clazz",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "get",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Method",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        "method",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Name",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "parameter",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Types",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ";",
        "",
        "delete"
      ],
      [
        "Class",
        "",
        "delete"
      ],
      [
        "<",
        "",
        "delete"
      ],
      [
        "?",
        "",
        "delete"
      ],
      [
        ">",
        "",
        "delete"
      ],
      [
        "[",
        "",
        "delete"
      ],
      [
        "]",
        "",
        "delete"
      ],
      [
        "method",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Classes",
        "",
        "delete"
      ],
      [
        ";",
        "",
        "delete"
      ],
      [
        "if",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        "method",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "is",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Annotation",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Present",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        "Method",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Validated",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "class",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        "{",
        "",
        "delete"
      ],
      [
        "method",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Classes",
        "",
        "delete"
      ],
      [
        "=",
        "",
        "delete"
      ],
      [
        "method",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "get",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Annotation",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        "Method",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Validated",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "class",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "value",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ";",
        "",
        "delete"
      ],
      [
        "groups",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "add",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "All",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        "Arrays",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "as",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "List",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        "method",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Classes",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ";",
        "",
        "delete"
      ],
      [
        "}",
        "",
        "delete"
      ],
      [
        "groups",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "add",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        "0",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "Default",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "class",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ";",
        "",
        "delete"
      ],
      [
        "groups",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "add",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        "1",
        "",
        "delete"
      ],
      [
        ",",
        "",
        "delete"
      ],
      [
        "clazz",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        ";",
        "",
        "delete"
      ],
      [
        "Class",
        "",
        "delete"
      ],
      [
        "<",
        "",
        "delete"
      ],
      [
        "?",
        "",
        "delete"
      ],
      [
        ">",
        "",
        "delete"
      ],
      [
        "[",
        "",
        "delete"
      ],
      [
        "]",
        "",
        "delete"
      ],
      [
        "classgroups",
        "",
        "delete"
      ],
      [
        "=",
        "",
        "delete"
      ],
      [
        "groups",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "to",
        "",
        "delete"
      ],
      [
        "<con>",
        "",
        "delete"
      ],
      [
        "Array",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        "new",
        "",
        "delete"
      ],
      [
        "Class",
        "",
        "delete"
      ],
      [
        "[",
        "",
        "delete"
      ],
      [
        "groups",
        "",
        "delete"
      ],
      [
        ".",
        "",
        "delete"
      ],
      [
        "size",
        "",
        "delete"
      ],
      [
        "(",
        "",
        "delete"
      ],
      [
        ")",
        "",
        "delete"
      ],
      [
        "]",
        "",
        "delete"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "Object",
        "Object",
        "equal"
      ],
      [
        "parameter",
        "parameter",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bean",
        "Bean",
        "equal"
      ],
      [
        "=",
        "=",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Method",
        "Method",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Parameter",
        "Parameter",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bean",
        "Bean",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "clazz",
        "clazz",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "method",
        "method",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "arguments",
        "arguments",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "parameter",
        "parameter",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bean",
        "Bean",
        "equal"
      ],
      [
        "!=",
        "!=",
        "equal"
      ],
      [
        "null",
        "null",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "violations",
        "violations",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "add",
        "add",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "All",
        "All",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "validator",
        "validator",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "validate",
        "validate",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "parameter",
        "parameter",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Bean",
        "Bean",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "classgroups",
        "class",
        "replace"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Groups",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "for",
        "for",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "Object",
        "Object",
        "equal"
      ],
      [
        "arg",
        "arg",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "arguments",
        "arguments",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "validate",
        "validate",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "violations",
        "violations",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "arg",
        "arg",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "classgroups",
        "class",
        "replace"
      ],
      [
        "",
        "<con>",
        "insert"
      ],
      [
        "",
        "Groups",
        "insert"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "if",
        "if",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "!",
        "!",
        "equal"
      ],
      [
        "violations",
        "violations",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "is",
        "is",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Empty",
        "Empty",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "{",
        "{",
        "equal"
      ],
      [
        "logger",
        "logger",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "info",
        "info",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "Failed",
        "Failed",
        "equal"
      ],
      [
        "to",
        "to",
        "equal"
      ],
      [
        "validate",
        "validate",
        "equal"
      ],
      [
        "service",
        "service",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "clazz",
        "clazz",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Name",
        "Name",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "method",
        "method",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "method",
        "method",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Name",
        "Name",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "cause",
        "cause",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "violations",
        "violations",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "throw",
        "throw",
        "equal"
      ],
      [
        "new",
        "new",
        "equal"
      ],
      [
        "Constraint",
        "Constraint",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Violation",
        "Violation",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Exception",
        "Exception",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "Failed",
        "Failed",
        "equal"
      ],
      [
        "to",
        "to",
        "equal"
      ],
      [
        "validate",
        "validate",
        "equal"
      ],
      [
        "service",
        "service",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "clazz",
        "clazz",
        "equal"
      ],
      [
        ".",
        ".",
        "equal"
      ],
      [
        "get",
        "get",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Name",
        "Name",
        "equal"
      ],
      [
        "(",
        "(",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "method",
        "method",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "method",
        "method",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        "Name",
        "Name",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "cause",
        "cause",
        "equal"
      ],
      [
        "<con>",
        "<con>",
        "equal"
      ],
      [
        ":",
        ":",
        "equal"
      ],
      [
        "\"",
        "\"",
        "equal"
      ],
      [
        "+",
        "+",
        "equal"
      ],
      [
        "violations",
        "violations",
        "equal"
      ],
      [
        ",",
        ",",
        "equal"
      ],
      [
        "violations",
        "violations",
        "equal"
      ],
      [
        ")",
        ")",
        "equal"
      ],
      [
        ";",
        ";",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ],
      [
        "}",
        "}",
        "equal"
      ]
    ],
    "CEPROT_gen_test_tgt": "@Test\n    void testItWithCollectionArg()throws Exception {\n        URL url = URL.valueOf(\"test://test:11/org.apache.dubbo.validation.support.jvalidation.mock.JValidatorTestTarget\");\n        JValidator jValidator = new JValidator(url);\n        jValidator.validate(\"someMethod4\", new Class<?>[]{List.class}, new Object[]{Arrays.asList(\"parameter\")});\n    }\n    void testItWithCollectionArg()throws Exception {\n        URL url = URL.valueOf(\"test://test:11/org.apache.dubbo.validation.support.jvalidation.mock"
  }
}