{
  "1": {
    "commit_src": "2934f5ac511261e4499ff5681e0dde1ac55ea97f",
    "commit_tgt": "4b2c045a53576c05d791e924fe0bfebc85484a03",
    "changed_tests": [
      "modules/openapi-generator/src/test/java/org/openapitools/codegen/java/AbstractJavaCodegenTest.java"
    ],
    "refer_PR": "OpenAPITools_openapi-generator-17278",
    "test_src": ".org.openapitools.codegen.java.AbstractJavaCodegenTest#toEnumVarNameShouldNotResultInSingleUnderscore",
    "test_tgt": [
      ".org.openapitools.codegen.java.AbstractJavaCodegenTest#toEnumVarNameShouldNotResultInSingleUnderscore"
    ],
    "focal_path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractJavaCodegen.java#toEnumVarName",
    "focal_src": "    @Override\n    public String toEnumVarName(String value, String datatype) {\n        if (enumNameMapping.containsKey(value)) {\n            return enumNameMapping.get(value);\n        }\n\n        if (value.length() == 0) {\n            return \"EMPTY\";\n        }\n\n        // for symbol, e.g. $, #\n        if (getSymbolName(value) != null) {\n            return getSymbolName(value).toUpperCase(Locale.ROOT);\n        }\n\n        if (\" \".equals(value)) {\n            return \"SPACE\";\n        }\n\n        // number\n        if (\"Integer\".equals(datatype) || \"Long\".equals(datatype) ||\n                \"Float\".equals(datatype) || \"Double\".equals(datatype) || \"BigDecimal\".equals(datatype)) {\n            String varName = \"NUMBER_\" + value;\n            varName = varName.replaceAll(\"-\", \"MINUS_\");\n            varName = varName.replaceAll(\"\\\\+\", \"PLUS_\");\n            varName = varName.replaceAll(\"\\\\.\", \"_DOT_\");\n            return varName;\n        }\n\n        // string\n        String var = value.replaceAll(\"\\\\W+\", \"_\").toUpperCase(Locale.ROOT);\n        if (var.matches(\"\\\\d.*\")) {\n            return \"_\" + var;\n        } else {\n            return var;\n        }\n    }\n",
    "focal_tgt": "    @Override\n    public String toEnumVarName(String value, String datatype) {\n        if (enumNameMapping.containsKey(value)) {\n            return enumNameMapping.get(value);\n        }\n\n        if (value.length() == 0) {\n            return \"EMPTY\";\n        }\n\n        // for symbol, e.g. $, #\n        if (getSymbolName(value) != null) {\n            return getSymbolName(value).toUpperCase(Locale.ROOT);\n        }\n\n        if (\" \".equals(value)) {\n            return \"SPACE\";\n        }\n\n        // number\n        if (\"Integer\".equals(datatype) || \"Long\".equals(datatype) ||\n                \"Float\".equals(datatype) || \"Double\".equals(datatype) || \"BigDecimal\".equals(datatype)) {\n            String varName = \"NUMBER_\" + value;\n            varName = varName.replaceAll(\"-\", \"MINUS_\");\n            varName = varName.replaceAll(\"\\\\+\", \"PLUS_\");\n            varName = varName.replaceAll(\"\\\\.\", \"_DOT_\");\n            return varName;\n        }\n\n        // string\n        String var = value.replaceAll(\"\\\\W+\", \"_\").toUpperCase(Locale.ROOT);\n        if (var.matches(\"\\\\d.*\")) {\n            var = \"_\" + var;\n        }\n        return this.toVarName(var);\n    }\n",
    "test_id": 1
  }
}