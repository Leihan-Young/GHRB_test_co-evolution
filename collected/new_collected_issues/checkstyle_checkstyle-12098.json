{
  "issue_id": 12100,
  "issue_url": "https://github.com/checkstyle/checkstyle/issues/12100",
  "title": "Review usages of `BeforeAll` in tests",
  "description": "<p dir=\"auto\">We have discovered that <code class=\"notranslate\">BeforeAll</code> used in conjunction with production static field modifications has allowed some surviving mutations that are false positives. From <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1348917595\" data-permission-text=\"Title is private\" data-url=\"https://github.com/hcoles/pitest/issues/1081\" data-hovercard-type=\"issue\" data-hovercard-url=\"/hcoles/pitest/issues/1081/hovercard?comment_id=1225447257&comment_type=issue_comment\" href=\"https://github.com/hcoles/pitest/issues/1081#issuecomment-1225447257\">hcoles/pitest#1081 (comment)</a>:</p>\n<blockquote>\n<p dir=\"auto\">From a quick scan through the code I think this is \"working as expected\", as the test suite has hit a wrinkle with how static state works with coverage based mutation systems.</p>\n</blockquote>\n<blockquote>\n<p dir=\"auto\">Because this code is only run if there is no entry in the static BUNDLE_CACHE, the result of mutation testing will be highly dependent on the order in which tests are run. Adding or removing a test may completely change the order.</p>\n</blockquote>\n<blockquote>\n<p dir=\"auto\">If 20 tests could execute the line of code, only the first one to run (and the first ones to run after each time the cache is cleared) will actually execute the code. Only these tests will be linked by coverage to the mutation, so pitest will only select from this reduced set when the mutant is active.</p>\n</blockquote>\n<p dir=\"auto\">In <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1336226104\" data-permission-text=\"Title is private\" data-url=\"https://github.com/checkstyle/checkstyle/issues/12053\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/checkstyle/checkstyle/pull/12053/hovercard\" href=\"https://github.com/checkstyle/checkstyle/pull/12053\">#12053</a> , we worked around this issue by using <code class=\"notranslate\">BeforeEach</code>:</p>\n<blockquote>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ZuevKirill95/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ZuevKirill95\">@ZuevKirill95</a> Strangely using <code class=\"notranslate\">@BeforeEach</code> instead of <code class=\"notranslate\">@BeforeAll</code> kills the mutation, the issue for the same has been opened at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1348917595\" data-permission-text=\"Title is private\" data-url=\"https://github.com/hcoles/pitest/issues/1081\" data-hovercard-type=\"issue\" data-hovercard-url=\"/hcoles/pitest/issues/1081/hovercard\" href=\"https://github.com/hcoles/pitest/issues/1081\">hcoles/pitest#1081</a>.</p>\n</blockquote>\n<blockquote>\n<p dir=\"auto\">For now, you can use <code class=\"notranslate\">@BeforeEach</code> to kill the mutation.</p>\n</blockquote>\n<p dir=\"auto\">We should review all usages of <code class=\"notranslate\">BeforeAll</code> to see if we have surviving mutations from this issue, and see if we can use <code class=\"notranslate\">BeforeEach</code> instead. We should also consider forbidding usage of <code class=\"notranslate\">BeforeAll</code> based on our findings, and probably at least restrict future usage of it.</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\u279c  checkstyle git:(master) ag -Q \"@BeforeAll\"      \nsrc/test/java/com/puppycrawl/tools/checkstyle/internal/CommitValidationTest.java\n97:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java\n148:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/internal/ArchUnitTest.java\n35:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/meta/XmlMetaReaderTest.java\n37:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/AbstractGuiTestSupport.java\n38:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/XpathFileGeneratorAuditListenerTest.java\n67:    @BeforeAll\n\nsrc/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/MethodTypeParameterNameTest.java\n41:    @BeforeAll\n\n\"><pre class=\"notranslate\">\u279c  checkstyle git:(master) ag -Q <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>@BeforeAll<span class=\"pl-pds\">\"</span></span>      \nsrc/test/java/com/puppycrawl/tools/checkstyle/internal/CommitValidationTest.java\n97:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java\n148:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/internal/ArchUnitTest.java\n35:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/meta/XmlMetaReaderTest.java\n37:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/AbstractGuiTestSupport.java\n38:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/XpathFileGeneratorAuditListenerTest.java\n67:    @BeforeAll\n\nsrc/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/MethodTypeParameterNameTest.java\n41:    @BeforeAll\n\n</pre></div>",
  "description_text": "We have discovered that BeforeAll used in conjunction with production static field modifications has allowed some surviving mutations that are false positives. From hcoles/pitest#1081 (comment):\n\nFrom a quick scan through the code I think this is \"working as expected\", as the test suite has hit a wrinkle with how static state works with coverage based mutation systems.\n\n\nBecause this code is only run if there is no entry in the static BUNDLE_CACHE, the result of mutation testing will be highly dependent on the order in which tests are run. Adding or removing a test may completely change the order.\n\n\nIf 20 tests could execute the line of code, only the first one to run (and the first ones to run after each time the cache is cleared) will actually execute the code. Only these tests will be linked by coverage to the mutation, so pitest will only select from this reduced set when the mutant is active.\n\nIn #12053 , we worked around this issue by using BeforeEach:\n\n@ZuevKirill95 Strangely using @BeforeEach instead of @BeforeAll kills the mutation, the issue for the same has been opened at hcoles/pitest#1081.\n\n\nFor now, you can use @BeforeEach to kill the mutation.\n\nWe should review all usages of BeforeAll to see if we have surviving mutations from this issue, and see if we can use BeforeEach instead. We should also consider forbidding usage of BeforeAll based on our findings, and probably at least restrict future usage of it.\n\u279c  checkstyle git:(master) ag -Q \"@BeforeAll\"      \nsrc/test/java/com/puppycrawl/tools/checkstyle/internal/CommitValidationTest.java\n97:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/internal/XpathRegressionTest.java\n148:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/internal/ArchUnitTest.java\n35:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/meta/XmlMetaReaderTest.java\n37:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/AbstractGuiTestSupport.java\n38:    @BeforeAll\n\nsrc/test/java/com/puppycrawl/tools/checkstyle/XpathFileGeneratorAuditListenerTest.java\n67:    @BeforeAll\n\nsrc/it/java/com/google/checkstyle/test/chapter5naming/rule528typevariablenames/MethodTypeParameterNameTest.java\n41:    @BeforeAll\n\n"
}