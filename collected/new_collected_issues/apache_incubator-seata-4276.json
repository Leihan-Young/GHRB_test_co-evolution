{
  "issue_id": 4275,
  "issue_url": "https://github.com/apache/incubator-seata/issues/4275",
  "title": "bugfix: fix seata-test module UT not work",
  "description": "<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I have searched the <a href=\"https://github.com/seata/seata/issues\">issues</a> of this repository and believe that this is not a duplicate.</li>\n</ul>\n<h3 dir=\"auto\">\u2160. Issue Description</h3>\n<p dir=\"auto\">seata-test module's UT run failed after server module support springboot-auto-configuration<br>\nseata-test \u6a21\u5757\u7684\u5355\u6d4b\u7528\u4f8b\u65e0\u6cd5\u8fd0\u884c\uff0c\u770b\u4e0a\u53bb\u5931\u8d25\u539f\u56e0\u662f\u7531\u4e8eserver\u6a21\u5757\u652f\u6301\u4e86springboot-auto-configuration</p>\n<h3 dir=\"auto\">\u2161. Describe what happened</h3>\n<p dir=\"auto\">If there is an exception, please attach the exception trace:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[SEATA] [Thread-1] INFO  io.seata.config.ConfigurationFactory - load Configuration from :Spring Configuration\nException in thread \"Thread-1\" java.lang.ExceptionInInitializerError\n\tat io.seata.saga.engine.db.AbstractServerTest$1.run(AbstractServerTest.java:55)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: io.seata.common.exception.ShouldNeverHappenException: PropertyClass for prefix: [seata.config] should not be null.\n\tat io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:99)\n\tat io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:46)\n\tat io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:59)\n\tat io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)\n\tat io.seata.config.ConfigurationFactory.buildConfiguration(ConfigurationFactory.java:102)\n\tat io.seata.config.ConfigurationFactory.getInstance(ConfigurationFactory.java:94)\n\tat io.seata.server.ParameterParser.<clinit>(ParameterParser.java:40)\n\t... 2 more\"><pre class=\"notranslate\"><code class=\"notranslate\">[SEATA] [Thread-1] INFO  io.seata.config.ConfigurationFactory - load Configuration from :Spring Configuration\nException in thread \"Thread-1\" java.lang.ExceptionInInitializerError\n\tat io.seata.saga.engine.db.AbstractServerTest$1.run(AbstractServerTest.java:55)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: io.seata.common.exception.ShouldNeverHappenException: PropertyClass for prefix: [seata.config] should not be null.\n\tat io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:99)\n\tat io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:46)\n\tat io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:59)\n\tat io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig(<generated>)\n\tat io.seata.config.ConfigurationFactory.buildConfiguration(ConfigurationFactory.java:102)\n\tat io.seata.config.ConfigurationFactory.getInstance(ConfigurationFactory.java:94)\n\tat io.seata.server.ParameterParser.<clinit>(ParameterParser.java:40)\n\t... 2 more\n</code></pre></div>\n<h3 dir=\"auto\">\u2162. Describe what you expected to happen</h3>\n<h3 dir=\"auto\">\u2163. How to reproduce it (as minimally and precisely as possible)</h3>\n<p dir=\"auto\">run any test in seata-test module can reproduce it</p>\n<h3 dir=\"auto\">\u2164. Anything else we need to know?</h3>\n<h3 dir=\"auto\">\u2165. Environment:</h3>\n<ul dir=\"auto\">\n<li>JDK version : 8</li>\n<li>Seata version:  latest on develop</li>\n<li>OS : MacOSX</li>\n<li>Others:</li>\n</ul>",
  "description_text": "\n I have searched the issues of this repository and believe that this is not a duplicate.\n\n\u2160. Issue Description\nseata-test module's UT run failed after server module support springboot-auto-configuration\nseata-test \u6a21\u5757\u7684\u5355\u6d4b\u7528\u4f8b\u65e0\u6cd5\u8fd0\u884c\uff0c\u770b\u4e0a\u53bb\u5931\u8d25\u539f\u56e0\u662f\u7531\u4e8eserver\u6a21\u5757\u652f\u6301\u4e86springboot-auto-configuration\n\u2161. Describe what happened\nIf there is an exception, please attach the exception trace:\n)\n\tat io.seata.config.ConfigurationFactory.buildConfiguration(ConfigurationFactory.java:102)\n\tat io.seata.config.ConfigurationFactory.getInstance(ConfigurationFactory.java:94)\n\tat io.seata.server.ParameterParser.(ParameterParser.java:40)\n\t... 2 more\">[SEATA] [Thread-1] INFO  io.seata.config.ConfigurationFactory - load Configuration from :Spring Configuration\nException in thread \"Thread-1\" java.lang.ExceptionInInitializerError\n\tat io.seata.saga.engine.db.AbstractServerTest$1.run(AbstractServerTest.java:55)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: io.seata.common.exception.ShouldNeverHappenException: PropertyClass for prefix: [seata.config] should not be null.\n\tat io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.get(SpringBootConfigurationProvider.java:99)\n\tat io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider.access$100(SpringBootConfigurationProvider.java:46)\n\tat io.seata.spring.boot.autoconfigure.provider.SpringBootConfigurationProvider$1.intercept(SpringBootConfigurationProvider.java:59)\n\tat io.seata.config.FileConfiguration$$EnhancerByCGLIB$$862af1eb.getConfig()\n\tat io.seata.config.ConfigurationFactory.buildConfiguration(ConfigurationFactory.java:102)\n\tat io.seata.config.ConfigurationFactory.getInstance(ConfigurationFactory.java:94)\n\tat io.seata.server.ParameterParser.(ParameterParser.java:40)\n\t... 2 more\n\n\u2162. Describe what you expected to happen\n\u2163. How to reproduce it (as minimally and precisely as possible)\nrun any test in seata-test module can reproduce it\n\u2164. Anything else we need to know?\n\u2165. Environment:\n\nJDK version : 8\nSeata version:  latest on develop\nOS : MacOSX\nOthers:\n"
}