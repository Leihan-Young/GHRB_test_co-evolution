{
  "issue_id": 7222,
  "issue_url": "https://github.com/apache/rocketmq/issues/7222",
  "title": "[Bug] Bug fix and refactoring of the Indexfile in tiered storage",
  "description": "<h3 dir=\"auto\">Before Creating the Bug Report</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I found a bug, not just asking a question, which should be created in <a href=\"https://github.com/apache/rocketmq/discussions\">GitHub Discussions</a>.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I have searched the <a href=\"https://github.com/apache/rocketmq/issues\">GitHub Issues</a> and <a href=\"https://github.com/apache/rocketmq/discussions\">GitHub Discussions</a>  of this repository and believe that this is not a duplicate.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I have confirmed that this bug belongs to the current repository, not other repositories of RocketMQ.</li>\n</ul>\n<h3 dir=\"auto\">Runtime platform environment</h3>\n<p dir=\"auto\">Linux 4.19</p>\n<h3 dir=\"auto\">RocketMQ version</h3>\n<p dir=\"auto\">latest version in develop branch</p>\n<h3 dir=\"auto\">JDK Version</h3>\n<p dir=\"auto\">JDK11</p>\n<h3 dir=\"auto\">Describe the Bug</h3>\n<p dir=\"auto\">The design logic of IndexFile in the current tiered storage system is confusion and there are some bugs, such as:</p>\n<ul dir=\"auto\">\n<li>If the file that has been compacted is not successfully uploaded or still uploading, and the broker is restarted or crashes, the \"current file\" will not be initialized properly, resulting in the content of the file not being initialized to -1.</li>\n<li>There are resource release issues, and the logic of resource release when compacting fails has not been considered.</li>\n<li>The current design affects the main process of sending and receiving messages for building cq.</li>\n<li>The current implementation of lock usage is incorrect.</li>\n</ul>\n<h3 dir=\"auto\">Steps to Reproduce</h3>\n<p dir=\"auto\">None</p>\n<h3 dir=\"auto\">What Did You Expect to See?</h3>\n<p dir=\"auto\">Resource not delete normally.</p>\n<h3 dir=\"auto\">What Did You See Instead?</h3>\n<p dir=\"auto\">None</p>\n<h3 dir=\"auto\">Additional Context</h3>\n<p dir=\"auto\">I will submit a bugfix for the current implementation and fix the ignored test cases. In the future, I hope to refactor the implementation of this IndexFile section.</p>",
  "description_text": "Before Creating the Bug Report\n\n I found a bug, not just asking a question, which should be created in GitHub Discussions.\n I have searched the GitHub Issues and GitHub Discussions  of this repository and believe that this is not a duplicate.\n I have confirmed that this bug belongs to the current repository, not other repositories of RocketMQ.\n\nRuntime platform environment\nLinux 4.19\nRocketMQ version\nlatest version in develop branch\nJDK Version\nJDK11\nDescribe the Bug\nThe design logic of IndexFile in the current tiered storage system is confusion and there are some bugs, such as:\n\nIf the file that has been compacted is not successfully uploaded or still uploading, and the broker is restarted or crashes, the \"current file\" will not be initialized properly, resulting in the content of the file not being initialized to -1.\nThere are resource release issues, and the logic of resource release when compacting fails has not been considered.\nThe current design affects the main process of sending and receiving messages for building cq.\nThe current implementation of lock usage is incorrect.\n\nSteps to Reproduce\nNone\nWhat Did You Expect to See?\nResource not delete normally.\nWhat Did You See Instead?\nNone\nAdditional Context\nI will submit a bugfix for the current implementation and fix the ignored test cases. In the future, I hope to refactor the implementation of this IndexFile section."
}