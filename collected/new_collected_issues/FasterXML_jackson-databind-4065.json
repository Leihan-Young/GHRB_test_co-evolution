{
  "issue_id": 4061,
  "issue_url": "https://github.com/FasterXML/jackson-databind/issues/4061",
  "title": "Add JsonTypeInfo.Id.SIMPLE_NAME which defaults type id to `Class.getSimpleName()`",
  "description": "<h3 dir=\"auto\">Is your feature request related to a problem? Please describe.</h3>\n<p dir=\"auto\">Add JsonTypeInfo.Id.SIMPLE_NAME that would use Class::getSimpleName for type ids.</p>\n<p dir=\"auto\">My use case is sealed hierarchies where there is <em>single</em> sealed super interface, it would result in cleaner type ids. My work around:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            // AnnotationIntrospector\n            @Override\n            public String findTypeName(AnnotatedClass ac) {\n                if (Arrays.stream(ac.getAnnotated().getInterfaces()).filter(Class::isSealed).count() == 1) {\n                    return ac.getAnnotated().getSimpleName();\n                }\n\n                return super.findTypeName(ac);\n            }\"><pre class=\"notranslate\"><code class=\"notranslate\">            // AnnotationIntrospector\n            @Override\n            public String findTypeName(AnnotatedClass ac) {\n                if (Arrays.stream(ac.getAnnotated().getInterfaces()).filter(Class::isSealed).count() == 1) {\n                    return ac.getAnnotated().getSimpleName();\n                }\n\n                return super.findTypeName(ac);\n            }\n</code></pre></div>\n<h3 dir=\"auto\">Describe the solution you'd like</h3>\n<p dir=\"auto\">JsonTypeInfo.Id.SIMPLE_NAME</p>\n<h3 dir=\"auto\">Usage example</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Additional context</h3>\n<p dir=\"auto\"><em>No response</em></p>",
  "description_text": "Is your feature request related to a problem? Please describe.\nAdd JsonTypeInfo.Id.SIMPLE_NAME that would use Class::getSimpleName for type ids.\nMy use case is sealed hierarchies where there is single sealed super interface, it would result in cleaner type ids. My work around:\n            // AnnotationIntrospector\n            @Override\n            public String findTypeName(AnnotatedClass ac) {\n                if (Arrays.stream(ac.getAnnotated().getInterfaces()).filter(Class::isSealed).count() == 1) {\n                    return ac.getAnnotated().getSimpleName();\n                }\n\n                return super.findTypeName(ac);\n            }\n\nDescribe the solution you'd like\nJsonTypeInfo.Id.SIMPLE_NAME\nUsage example\nNo response\nAdditional context\nNo response"
}