{
  "issue_id": 6957,
  "issue_url": "https://github.com/apache/rocketmq/issues/6957",
  "title": "[Feature] Support Proxy Protocol for gRPC and Remoting server",
  "description": "<h3 dir=\"auto\">Is Your Feature Request Related to a Problem?</h3>\n<p dir=\"auto\">When the RocketMQ client accesses the RocketMQ server through multiple layers of NAT or TCP proxies, the server is unable to obtain the actual IP address information of the client. In such cases, the HAProxy's Proxy Protocol can be introduced to transparently pass the initial TCP connection information of the client. This allows the server to accurately identify the source of message production and consumption.</p>\n<p dir=\"auto\">The PROXY protocol provides a convenient way to safely transport connection information such as a client's address across multiple layers of NAT or TCP proxies. It is designed to require little changes to existing components and to limit the performance impact caused by the processing of the transported information.</p>\n<p dir=\"auto\">For more information, you can obtain it from the following link: <a href=\"https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt\" rel=\"nofollow\">https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt</a>.</p>\n<h3 dir=\"auto\">Describe the Solution You'd Like</h3>\n<p dir=\"auto\">When a RocketMQ client accesses the RocketMQ server through NAT or TCP proxies that support the Proxy Protocol, the RocketMQ server needs to support the recognition and parsing of these packets. Throughout the subsequent processes of message production and consumption, the server should be able to retrieve the client's IP address and other relevant information from these packets. This information should be set in the message's attributes, traces, and logs.</p>\n<h3 dir=\"auto\">Describe Alternatives You've Considered</h3>\n<p dir=\"auto\">For the Remoting protocol, I have incorporated the HAProxyMessageDecoder class provided by Netty and set it in the pipeline of the request. This decoder is used to parse the proxy protocol data transmitted by the client's connection.</p>\n<p dir=\"auto\">For the gRPC protocol, since it does not include Netty's HAProxy package, it need to perform shading and packaging. At the ProtocolNegotiator layer, we can set the HAProxyMessageDecoder in the pipeline of the request to parse the proxy protocol data transmitted by the client's connection.</p>\n<h3 dir=\"auto\">Additional Context</h3>\n<p dir=\"auto\"><em>No response</em></p>",
  "description_text": "Is Your Feature Request Related to a Problem?\nWhen the RocketMQ client accesses the RocketMQ server through multiple layers of NAT or TCP proxies, the server is unable to obtain the actual IP address information of the client. In such cases, the HAProxy's Proxy Protocol can be introduced to transparently pass the initial TCP connection information of the client. This allows the server to accurately identify the source of message production and consumption.\nThe PROXY protocol provides a convenient way to safely transport connection information such as a client's address across multiple layers of NAT or TCP proxies. It is designed to require little changes to existing components and to limit the performance impact caused by the processing of the transported information.\nFor more information, you can obtain it from the following link: https://www.haproxy.org/download/1.8/doc/proxy-protocol.txt.\nDescribe the Solution You'd Like\nWhen a RocketMQ client accesses the RocketMQ server through NAT or TCP proxies that support the Proxy Protocol, the RocketMQ server needs to support the recognition and parsing of these packets. Throughout the subsequent processes of message production and consumption, the server should be able to retrieve the client's IP address and other relevant information from these packets. This information should be set in the message's attributes, traces, and logs.\nDescribe Alternatives You've Considered\nFor the Remoting protocol, I have incorporated the HAProxyMessageDecoder class provided by Netty and set it in the pipeline of the request. This decoder is used to parse the proxy protocol data transmitted by the client's connection.\nFor the gRPC protocol, since it does not include Netty's HAProxy package, it need to perform shading and packaging. At the ProtocolNegotiator layer, we can set the HAProxyMessageDecoder in the pipeline of the request to parse the proxy protocol data transmitted by the client's connection.\nAdditional Context\nNo response"
}