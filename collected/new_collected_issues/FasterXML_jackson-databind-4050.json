{
  "issue_id": 4047,
  "issue_url": "https://github.com/FasterXML/jackson-databind/issues/4047",
  "title": "`ObjectMapper.valueToTree()` will ignore the configuration `SerializationFeature.WRAP_ROOT_VALUE`",
  "description": "<h3 dir=\"auto\">Search before asking</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I searched in the <a href=\"https://github.com/FasterXML/jackson-databind/issues\">issues</a> and found nothing similar.</li>\n</ul>\n<h3 dir=\"auto\">Describe the bug</h3>\n<p dir=\"auto\">When we upgrade the jackson-databind version, then we found the ObjectMapper.valueToTree will return the different result with the previous version. Actually, we configured the SerializationFeature.WRAP_ROOT_VALUE.</p>\n<p dir=\"auto\">The class is like this:</p>\n<p dir=\"auto\">@JsonRootName(\"event\")<br>\npublic class Event {</p>\n<p dir=\"auto\">}</p>\n<p dir=\"auto\">The previous ObjectMapper.valueToTree result:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/12562318/254165372-a7e457b5-dacd-49d2-8f0f-79f266770d55.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTIwNjQ5NzEsIm5iZiI6MTcxMjA2NDY3MSwicGF0aCI6Ii8xMjU2MjMxOC8yNTQxNjUzNzItYTdlNDU3YjUtZGFjZC00OWQyLThmMGYtNzlmMjY2NzcwZDU1LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MDIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDAyVDEzMzExMVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTcyN2JjYmNlMGQ1ZjBlY2IwMzc4MzhjY2I4NDE4NDU0MmJhYTg5YzQ0YzhkODhkMDZhMzY1Y2E1YWM1Y2I1YzkmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.RFvLFeM-xZi4Vpwr86SQgtLU3z8BqDK5SS1C3pVMHMU\"><img src=\"https://private-user-images.githubusercontent.com/12562318/254165372-a7e457b5-dacd-49d2-8f0f-79f266770d55.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTIwNjQ5NzEsIm5iZiI6MTcxMjA2NDY3MSwicGF0aCI6Ii8xMjU2MjMxOC8yNTQxNjUzNzItYTdlNDU3YjUtZGFjZC00OWQyLThmMGYtNzlmMjY2NzcwZDU1LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MDIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDAyVDEzMzExMVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTcyN2JjYmNlMGQ1ZjBlY2IwMzc4MzhjY2I4NDE4NDU0MmJhYTg5YzQ0YzhkODhkMDZhMzY1Y2E1YWM1Y2I1YzkmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.RFvLFeM-xZi4Vpwr86SQgtLU3z8BqDK5SS1C3pVMHMU\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">After upgraded the version result:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/12562318/254165804-0ab4429c-8add-48db-9f9a-f52167420e2f.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTIwNjQ5NzEsIm5iZiI6MTcxMjA2NDY3MSwicGF0aCI6Ii8xMjU2MjMxOC8yNTQxNjU4MDQtMGFiNDQyOWMtOGFkZC00OGRiLTlmOWEtZjUyMTY3NDIwZTJmLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MDIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDAyVDEzMzExMVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWQ3Y2JhYmZhMzUwMjhlOGM2YWRiZDkzMzhhMDY5NDNjNjBjOTA5M2UxMGMxMGU5OTViYTRhZTE5OGRiMTY5ZGUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.YMyYriWdH-zA1HcGshxzbjOWTR3LHp5RO34cU86YoB0\"><img src=\"https://private-user-images.githubusercontent.com/12562318/254165804-0ab4429c-8add-48db-9f9a-f52167420e2f.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTIwNjQ5NzEsIm5iZiI6MTcxMjA2NDY3MSwicGF0aCI6Ii8xMjU2MjMxOC8yNTQxNjU4MDQtMGFiNDQyOWMtOGFkZC00OGRiLTlmOWEtZjUyMTY3NDIwZTJmLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MDIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDAyVDEzMzExMVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWQ3Y2JhYmZhMzUwMjhlOGM2YWRiZDkzMzhhMDY5NDNjNjBjOTA5M2UxMGMxMGU5OTViYTRhZTE5OGRiMTY5ZGUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.YMyYriWdH-zA1HcGshxzbjOWTR3LHp5RO34cU86YoB0\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">This should caused by the commit.<br>\n<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/FasterXML/jackson-databind/commit/2e986dfe5937b28ba39b4d28e0f993802c7c9f68/hovercard\" href=\"https://github.com/FasterXML/jackson-databind/commit/2e986dfe5937b28ba39b4d28e0f993802c7c9f68\"><tt>2e986df</tt></a><br>\nCan we re-enbale SerializationFeature.WRAP_ROOT_VALUE in ObjectMapper.valueToTree method to keep consistent with method writeValueAsString?</p>\n<h3 dir=\"auto\">Version Information</h3>\n<p dir=\"auto\">2.14.2 (The version after 2.13 should have this issue)</p>\n<h3 dir=\"auto\">Reproduction</h3>\n<p dir=\"auto\"><-- Any of the following</p>\n<ol dir=\"auto\">\n<li>Configure the object mapper  objectMapper.enable(SerializationFeature.WRAP_ROOT_VALUE);</li>\n<li>Call objectMapper.valueToTree(event) method</li>\n<li>You can the SerializationFeature.WRAP_ROOT_VALUE does not take effect after version 2.13.x<br>\n--></li>\n</ol>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" public ObjectMapper objectMapper() {\n        ObjectMapper objectMapper = new ObjectMapper();\n        objectMapper.findAndRegisterModules();\n        objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n        objectMapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);\n        objectMapper.enable(SerializationFeature.WRAP_ROOT_VALUE);\n        objectMapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);\n        objectMapper.registerModule(new JSR310Module());\n        return objectMapper;\n    }\n\n@JsonRootName(\"event\")\npublic class Event {\n    private Long id;\n    private String name;\n}\n//call valueToTree method\nobjectMapper.valueToTree(event)\"><pre class=\"notranslate\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">ObjectMapper</span> <span class=\"pl-s1\">objectMapper</span>() {\n        <span class=\"pl-smi\">ObjectMapper</span> <span class=\"pl-s1\">objectMapper</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ObjectMapper</span>();\n        <span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">findAndRegisterModules</span>();\n        <span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">configure</span>(<span class=\"pl-smi\">DeserializationFeature</span>.<span class=\"pl-c1\">FAIL_ON_UNKNOWN_PROPERTIES</span>, <span class=\"pl-c1\">false</span>);\n        <span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">configure</span>(<span class=\"pl-smi\">SerializationFeature</span>.<span class=\"pl-c1\">WRITE_DATES_AS_TIMESTAMPS</span>, <span class=\"pl-c1\">false</span>);\n        <span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">enable</span>(<span class=\"pl-smi\">SerializationFeature</span>.<span class=\"pl-c1\">WRAP_ROOT_VALUE</span>);\n        <span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">setSerializationInclusion</span>(<span class=\"pl-smi\">JsonInclude</span>.<span class=\"pl-s1\">Include</span>.<span class=\"pl-c1\">NON_NULL</span>);\n        <span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">registerModule</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">JSR310Module</span>());\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">objectMapper</span>;\n    }\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonRootName</span>(<span class=\"pl-s\">\"event\"</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Event</span> {\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">Long</span> <span class=\"pl-s1\">id</span>;\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">name</span>;\n}\n<span class=\"pl-c\">//call valueToTree method</span>\n<span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">valueToTree</span>(<span class=\"pl-s1\">event</span>)</pre></div>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">SerializationFeature.WRAP_ROOT_VALUE configuration should be global and take effect in method valueToTree to keep the same with writeValueAsString</p>\n<h3 dir=\"auto\">Additional context</h3>\n<p dir=\"auto\"><em>No response</em></p>",
  "description_text": "Search before asking\n\n I searched in the issues and found nothing similar.\n\nDescribe the bug\nWhen we upgrade the jackson-databind version, then we found the ObjectMapper.valueToTree will return the different result with the previous version. Actually, we configured the SerializationFeature.WRAP_ROOT_VALUE.\nThe class is like this:\n@JsonRootName(\"event\")\npublic class Event {\n}\nThe previous ObjectMapper.valueToTree result:\n\nAfter upgraded the version result:\n\nThis should caused by the commit.\n2e986df\nCan we re-enbale SerializationFeature.WRAP_ROOT_VALUE in ObjectMapper.valueToTree method to keep consistent with method writeValueAsString?\nVersion Information\n2.14.2 (The version after 2.13 should have this issue)\nReproduction\n<-- Any of the following\n\nConfigure the object mapper  objectMapper.enable(SerializationFeature.WRAP_ROOT_VALUE);\nCall objectMapper.valueToTree(event) method\nYou can the SerializationFeature.WRAP_ROOT_VALUE does not take effect after version 2.13.x\n-->\n\n public ObjectMapper objectMapper() {\n        ObjectMapper objectMapper = new ObjectMapper();\n        objectMapper.findAndRegisterModules();\n        objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n        objectMapper.configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false);\n        objectMapper.enable(SerializationFeature.WRAP_ROOT_VALUE);\n        objectMapper.setSerializationInclusion(JsonInclude.Include.NON_NULL);\n        objectMapper.registerModule(new JSR310Module());\n        return objectMapper;\n    }\n\n@JsonRootName(\"event\")\npublic class Event {\n    private Long id;\n    private String name;\n}\n//call valueToTree method\nobjectMapper.valueToTree(event)\nExpected behavior\nSerializationFeature.WRAP_ROOT_VALUE configuration should be global and take effect in method valueToTree to keep the same with writeValueAsString\nAdditional context\nNo response"
}