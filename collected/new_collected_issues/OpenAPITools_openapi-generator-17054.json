{
  "issue_id": 16915,
  "issue_url": "https://github.com/OpenAPITools/openapi-generator/issues/16915",
  "title": "[BUG][JAVA][SPRING] Regression in 6.5.0 and later when generating DTOs with xml support",
  "description": "<h4 dir=\"auto\">Bug Report Checklist</h4>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Have you provided a full/minimal spec to reproduce the issue?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Have you validated the input using an OpenAPI validator (<a href=\"https://apidevtools.org/swagger-parser/online/\" rel=\"nofollow\">example</a>)?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Have you <a href=\"https://github.com/OpenAPITools/openapi-generator/wiki/FAQ#how-to-test-with-the-latest-master-of-openapi-generator\">tested with the latest master</a> to confirm the issue still exists?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Have you searched for related issues/PRs?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> What's the actual output vs expected output?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> [Optional] Sponsorship to speed up the bug fix or feature request (<a href=\"https://github.com/OpenAPITools/openapi-generator/issues/6178\" data-hovercard-type=\"issue\" data-hovercard-url=\"/OpenAPITools/openapi-generator/issues/6178/hovercard\">example</a>)</li>\n</ul>\n<h5 dir=\"auto\">Description</h5>\n<p dir=\"auto\">After upgrading from open-api-generator 6.4.0 to 6.5.0 the Spring generator creates invalid DTOs if the option \"withXml\" is set to true. The problem also exists on the latest master.</p>\n<p dir=\"auto\">Trying to serialize the generated DTOs fails with the following exception:<br>\n<code class=\"notranslate\">Failed to evaluate Jackson serialization for type [class x.y.z.Testannotations]: java.lang.IllegalStateException: Conflicting/ambiguous property name definitions (implicit name 'prop'): found multiple explicit names: [{}prop, prop], but also implicit accessor: [method x.y.z.Testannotations#setProp(java.lang.String)][visible=true,ignore=false,explicitName=false]</code></p>\n\n<h5 dir=\"auto\">openapi-generator version</h5>\n<p dir=\"auto\">6.5.0 or later<br>\nRegression from 6.4.0</p>\n<h5 dir=\"auto\">OpenAPI declaration file content or url</h5>\n<p dir=\"auto\">The linked gist contains the OpenAPI declaration, a <code class=\"notranslate\">Main.java</code> that shows the exception occuring at runtime and a <code class=\"notranslate\">build.gradle</code> for building and executing the test (<code class=\"notranslate\">gradle exec</code>)</p>\n<p dir=\"auto\"><a href=\"https://gist.github.com/tomyy/5d18dd5cdb6cca37131f1e6b7d8c6893\">https://gist.github.com/tomyy/5d18dd5cdb6cca37131f1e6b7d8c6893</a></p>\n<h5 dir=\"auto\">Generation Details</h5>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"generatorName: spring\nlibrary: spring-boot\ninputSpec: test.yaml\noutputDir: generated\nadditionalProperties:\n  interfaceOnly: \"true\"\n  withXml: \"true\"\n  openApiNullable: \"false\"\n  useSpringBoot3: \"true\"\"><pre class=\"notranslate\"><span class=\"pl-ent\">generatorName</span>: <span class=\"pl-s\">spring</span>\n<span class=\"pl-ent\">library</span>: <span class=\"pl-s\">spring-boot</span>\n<span class=\"pl-ent\">inputSpec</span>: <span class=\"pl-s\">test.yaml</span>\n<span class=\"pl-ent\">outputDir</span>: <span class=\"pl-s\">generated</span>\n<span class=\"pl-ent\">additionalProperties</span>:\n  <span class=\"pl-ent\">interfaceOnly</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>true<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-ent\">withXml</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>true<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-ent\">openApiNullable</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>false<span class=\"pl-pds\">\"</span></span>\n  <span class=\"pl-ent\">useSpringBoot3</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>true<span class=\"pl-pds\">\"</span></span></pre></div>\n<p dir=\"auto\">(Hopefully correctly translated from the provided gradle build script)</p>\n<h5 dir=\"auto\">Steps to reproduce</h5>\n<p dir=\"auto\">Create an API for Spring with the option \"withXml\". Try to serialize a response object as XML using the Jackson XmlMapper.</p>\n<p dir=\"auto\"><strong>Actual Result</strong><br>\nJackson throws an exception:<br>\nException in thread \"main\" java.lang.IllegalStateException: Conflicting/ambiguous property name definitions (implicit name 'prop'): found multiple explicit names: [{}prop, prop], but also implicit accessor: [method x.y.z.Testannotations#setProp(java.lang.String)][visible=true,ignore=false,explicitName=false]</p>\n<p dir=\"auto\"><strong>Expected Result</strong><br>\nThe response object is successfully serialized into an XML.</p>\n<h5 dir=\"auto\">Related issues/PRs</h5>\n<p dir=\"auto\">This problem is caused by the following change:</p>\n<ul dir=\"auto\">\n<li>Bug Report: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"587524051\" data-permission-text=\"Title is private\" data-url=\"https://github.com/OpenAPITools/openapi-generator/issues/5705\" data-hovercard-type=\"issue\" data-hovercard-url=\"/OpenAPITools/openapi-generator/issues/5705/hovercard\" href=\"https://github.com/OpenAPITools/openapi-generator/issues/5705\">#5705</a></li>\n<li>Pull Request: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1416757091\" data-permission-text=\"Title is private\" data-url=\"https://github.com/OpenAPITools/openapi-generator/issues/13781\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/OpenAPITools/openapi-generator/pull/13781/hovercard\" href=\"https://github.com/OpenAPITools/openapi-generator/pull/13781\">#13781</a></li>\n</ul>\n<h5 dir=\"auto\">Analysis</h5>\n<p dir=\"auto\">The change to the JavaSpring/pojo.mustache template has the effect that when <code class=\"notranslate\">withXml</code> is set to true there are two Jackson annotations on the generated model:</p>\n<ul dir=\"auto\">\n<li>a <code class=\"notranslate\">@JacksonXmlProperty</code> annotation on the field</li>\n<li>a <code class=\"notranslate\">@JsonProperty</code> annotation on the getter<br>\nThis causes Jackson to fail when serializing to XML.</li>\n</ul>\n<p dir=\"auto\">Some might consider this a bug in Jackson.</p>\n<p dir=\"auto\">But still the OpenAPI generator should consequently either annotate the field or the getter.</p>\n<h5 dir=\"auto\">Suggest a fix</h5>\n<p dir=\"auto\">Change the template JavaSpring/pojo.mustache so that the Jackson-Annotations are both on the getter:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"diff --git a/modules/openapi-generator/src/main/resources/JavaSpring/pojo.mustache b/modules/openapi-generator/src/main/resources/JavaSpring/pojo.mustache\nindex c449fae1873..5fe61163d48 100644\n--- a/modules/openapi-generator/src/main/resources/JavaSpring/pojo.mustache\n+++ b/modules/openapi-generator/src/main/resources/JavaSpring/pojo.mustache\n@@ -48,11 +48,6 @@ public class {{classname}}{{#parent}} extends {{{parent}}}{{/parent}}{{^parent}}\n     {{/mostInnerItems}}\n     {{/isContainer}}\n     {{/isEnum}}\n-  {{#jackson}}\n-  {{#withXml}}\n-  @JacksonXmlProperty({{#isXmlAttribute}}isAttribute = true, {{/isXmlAttribute}}{{#xmlNamespace}}namespace=\"{{.}}\", {{/xmlNamespace}}localName = \"{{xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}\")\n-  {{/withXml}}\n-  {{/jackson}}\n   {{#gson}}\n   @SerializedName(\"{{baseName}}\")\n   {{/gson}}\n@@ -199,6 +194,9 @@ public class {{classname}}{{#parent}} extends {{{parent}}}{{/parent}}{{^parent}}\n   {{/swagger1AnnotationLibrary}}\n   {{#jackson}}\n   @JsonProperty(\"{{baseName}}\")\n+  {{#withXml}}\n+  @JacksonXmlProperty({{#isXmlAttribute}}isAttribute = true, {{/isXmlAttribute}}{{#xmlNamespace}}namespace=\"{{.}}\", {{/xmlNamespace}}localName = \"{{xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}\")\n+  {{/withXml}}\n   {{/jackson}}\n   {{#deprecated}}\n   @Deprecated\"><pre class=\"notranslate\"><code class=\"notranslate\">diff --git a/modules/openapi-generator/src/main/resources/JavaSpring/pojo.mustache b/modules/openapi-generator/src/main/resources/JavaSpring/pojo.mustache\nindex c449fae1873..5fe61163d48 100644\n--- a/modules/openapi-generator/src/main/resources/JavaSpring/pojo.mustache\n+++ b/modules/openapi-generator/src/main/resources/JavaSpring/pojo.mustache\n@@ -48,11 +48,6 @@ public class {{classname}}{{#parent}} extends {{{parent}}}{{/parent}}{{^parent}}\n     {{/mostInnerItems}}\n     {{/isContainer}}\n     {{/isEnum}}\n-  {{#jackson}}\n-  {{#withXml}}\n-  @JacksonXmlProperty({{#isXmlAttribute}}isAttribute = true, {{/isXmlAttribute}}{{#xmlNamespace}}namespace=\"{{.}}\", {{/xmlNamespace}}localName = \"{{xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}\")\n-  {{/withXml}}\n-  {{/jackson}}\n   {{#gson}}\n   @SerializedName(\"{{baseName}}\")\n   {{/gson}}\n@@ -199,6 +194,9 @@ public class {{classname}}{{#parent}} extends {{{parent}}}{{/parent}}{{^parent}}\n   {{/swagger1AnnotationLibrary}}\n   {{#jackson}}\n   @JsonProperty(\"{{baseName}}\")\n+  {{#withXml}}\n+  @JacksonXmlProperty({{#isXmlAttribute}}isAttribute = true, {{/isXmlAttribute}}{{#xmlNamespace}}namespace=\"{{.}}\", {{/xmlNamespace}}localName = \"{{xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}\")\n+  {{/withXml}}\n   {{/jackson}}\n   {{#deprecated}}\n   @Deprecated\n</code></pre></div>",
  "description_text": "Bug Report Checklist\n\n Have you provided a full/minimal spec to reproduce the issue?\n Have you validated the input using an OpenAPI validator (example)?\n Have you tested with the latest master to confirm the issue still exists?\n Have you searched for related issues/PRs?\n What's the actual output vs expected output?\n [Optional] Sponsorship to speed up the bug fix or feature request (example)\n\nDescription\nAfter upgrading from open-api-generator 6.4.0 to 6.5.0 the Spring generator creates invalid DTOs if the option \"withXml\" is set to true. The problem also exists on the latest master.\nTrying to serialize the generated DTOs fails with the following exception:\nFailed to evaluate Jackson serialization for type [class x.y.z.Testannotations]: java.lang.IllegalStateException: Conflicting/ambiguous property name definitions (implicit name 'prop'): found multiple explicit names: [{}prop, prop], but also implicit accessor: [method x.y.z.Testannotations#setProp(java.lang.String)][visible=true,ignore=false,explicitName=false]\nopenapi-generator version\n6.5.0 or later\nRegression from 6.4.0\nOpenAPI declaration file content or url\nThe linked gist contains the OpenAPI declaration, a Main.java that shows the exception occuring at runtime and a build.gradle for building and executing the test (gradle exec)\nhttps://gist.github.com/tomyy/5d18dd5cdb6cca37131f1e6b7d8c6893\nGeneration Details\ngeneratorName: spring\nlibrary: spring-boot\ninputSpec: test.yaml\noutputDir: generated\nadditionalProperties:\n  interfaceOnly: \"true\"\n  withXml: \"true\"\n  openApiNullable: \"false\"\n  useSpringBoot3: \"true\"\n(Hopefully correctly translated from the provided gradle build script)\nSteps to reproduce\nCreate an API for Spring with the option \"withXml\". Try to serialize a response object as XML using the Jackson XmlMapper.\nActual Result\nJackson throws an exception:\nException in thread \"main\" java.lang.IllegalStateException: Conflicting/ambiguous property name definitions (implicit name 'prop'): found multiple explicit names: [{}prop, prop], but also implicit accessor: [method x.y.z.Testannotations#setProp(java.lang.String)][visible=true,ignore=false,explicitName=false]\nExpected Result\nThe response object is successfully serialized into an XML.\nRelated issues/PRs\nThis problem is caused by the following change:\n\nBug Report: #5705\nPull Request: #13781\n\nAnalysis\nThe change to the JavaSpring/pojo.mustache template has the effect that when withXml is set to true there are two Jackson annotations on the generated model:\n\na @JacksonXmlProperty annotation on the field\na @JsonProperty annotation on the getter\nThis causes Jackson to fail when serializing to XML.\n\nSome might consider this a bug in Jackson.\nBut still the OpenAPI generator should consequently either annotate the field or the getter.\nSuggest a fix\nChange the template JavaSpring/pojo.mustache so that the Jackson-Annotations are both on the getter:\ndiff --git a/modules/openapi-generator/src/main/resources/JavaSpring/pojo.mustache b/modules/openapi-generator/src/main/resources/JavaSpring/pojo.mustache\nindex c449fae1873..5fe61163d48 100644\n--- a/modules/openapi-generator/src/main/resources/JavaSpring/pojo.mustache\n+++ b/modules/openapi-generator/src/main/resources/JavaSpring/pojo.mustache\n@@ -48,11 +48,6 @@ public class {{classname}}{{#parent}} extends {{{parent}}}{{/parent}}{{^parent}}\n     {{/mostInnerItems}}\n     {{/isContainer}}\n     {{/isEnum}}\n-  {{#jackson}}\n-  {{#withXml}}\n-  @JacksonXmlProperty({{#isXmlAttribute}}isAttribute = true, {{/isXmlAttribute}}{{#xmlNamespace}}namespace=\"{{.}}\", {{/xmlNamespace}}localName = \"{{xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}\")\n-  {{/withXml}}\n-  {{/jackson}}\n   {{#gson}}\n   @SerializedName(\"{{baseName}}\")\n   {{/gson}}\n@@ -199,6 +194,9 @@ public class {{classname}}{{#parent}} extends {{{parent}}}{{/parent}}{{^parent}}\n   {{/swagger1AnnotationLibrary}}\n   {{#jackson}}\n   @JsonProperty(\"{{baseName}}\")\n+  {{#withXml}}\n+  @JacksonXmlProperty({{#isXmlAttribute}}isAttribute = true, {{/isXmlAttribute}}{{#xmlNamespace}}namespace=\"{{.}}\", {{/xmlNamespace}}localName = \"{{xmlName}}{{^xmlName}}{{baseName}}{{/xmlName}}\")\n+  {{/withXml}}\n   {{/jackson}}\n   {{#deprecated}}\n   @Deprecated\n"
}