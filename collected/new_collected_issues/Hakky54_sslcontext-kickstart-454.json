{
  "issue_id": 434,
  "issue_url": "https://github.com/Hakky54/sslcontext-kickstart/issues/434",
  "title": "Question about Classic Configuration Migration",
  "description": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Hakky54/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Hakky54\">@Hakky54</a>, thanks for creating and maintaining this library, it looks really useful. I apologize in advance for the dumb question, but I just wanted to confirm my understanding was correct.</p>\n<p dir=\"auto\">My use case is I want to use the default <code class=\"notranslate\">cacerts</code> file, add some additional certificates to it at run time, and then use the combined list of certificates globally within the application. I <em>think</em> this would be the equivalent of having a predefined truststore with the certificates already combined and passing it in by <code class=\"notranslate\">-Djavax.net.ssl.trustStore=/path/to/my/cacerts -Djavax.net.ssl.trustStorePassword=changeit</code>, is that right?</p>\n<p dir=\"auto\">Based on the code samples from your README, I think all I need to do is combine the examples:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// build the default factory\nSSLFactory sslFactory = SSLFactory.builder()\n        .withDefaultTrustMaterial()\n        .withSystemTrustMaterial()\n        .withInflatableTrustMaterial()\n        .build();\n\nList<X509Certificate> certificates = ... ;\n// dynamically add the certificates I want to \nTrustManagerUtils.addCertificate(sslFactory.getTrustManager().get(), certificates);\n\n// this sets the trustStore as if I had passed it in -Djavax.net.ssl.trustStore=/path/to/my/cacerts ?\nSSLContext.setDefault(sslFactory.getSslContext());\"><pre class=\"notranslate\"><span class=\"pl-c\">// build the default factory</span>\n<span class=\"pl-smi\">SSLFactory</span> <span class=\"pl-s1\">sslFactory</span> = <span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-en\">builder</span>()\n        .<span class=\"pl-en\">withDefaultTrustMaterial</span>()\n        .<span class=\"pl-en\">withSystemTrustMaterial</span>()\n        .<span class=\"pl-en\">withInflatableTrustMaterial</span>()\n        .<span class=\"pl-en\">build</span>();\n\n<span class=\"pl-smi\">List</span><<span class=\"pl-smi\">X509Certificate</span>> <span class=\"pl-s1\">certificates</span> = ... ;\n<span class=\"pl-c\">// dynamically add the certificates I want to </span>\n<span class=\"pl-smi\">TrustManagerUtils</span>.<span class=\"pl-en\">addCertificate</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getTrustManager</span>().<span class=\"pl-en\">get</span>(), <span class=\"pl-s1\">certificates</span>);\n\n<span class=\"pl-c\">// this sets the trustStore as if I had passed it in -Djavax.net.ssl.trustStore=/path/to/my/cacerts ?</span>\n<span class=\"pl-smi\">SSLContext</span>.<span class=\"pl-en\">setDefault</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getSslContext</span>());</pre></div>\n<p dir=\"auto\">Is my understanding correct that the above would have the same effect as if all of the certificates were present in the default <code class=\"notranslate\">cacerts</code> file from the beginning?</p>\n<p dir=\"auto\">Do I need to worry about calling <code class=\"notranslate\">KeyManagerUtils.swapKeyManager(..)</code> or <code class=\"notranslate\">TrustManagerUtils.swapTrustManager(..)</code>?</p>\n<p dir=\"auto\">Thank you in advance</p>",
  "description_text": "Hi @Hakky54, thanks for creating and maintaining this library, it looks really useful. I apologize in advance for the dumb question, but I just wanted to confirm my understanding was correct.\nMy use case is I want to use the default cacerts file, add some additional certificates to it at run time, and then use the combined list of certificates globally within the application. I think this would be the equivalent of having a predefined truststore with the certificates already combined and passing it in by -Djavax.net.ssl.trustStore=/path/to/my/cacerts -Djavax.net.ssl.trustStorePassword=changeit, is that right?\nBased on the code samples from your README, I think all I need to do is combine the examples:\n// build the default factory\nSSLFactory sslFactory = SSLFactory.builder()\n        .withDefaultTrustMaterial()\n        .withSystemTrustMaterial()\n        .withInflatableTrustMaterial()\n        .build();\n\nList<X509Certificate> certificates = ... ;\n// dynamically add the certificates I want to \nTrustManagerUtils.addCertificate(sslFactory.getTrustManager().get(), certificates);\n\n// this sets the trustStore as if I had passed it in -Djavax.net.ssl.trustStore=/path/to/my/cacerts ?\nSSLContext.setDefault(sslFactory.getSslContext());\nIs my understanding correct that the above would have the same effect as if all of the certificates were present in the default cacerts file from the beginning?\nDo I need to worry about calling KeyManagerUtils.swapKeyManager(..) or TrustManagerUtils.swapTrustManager(..)?\nThank you in advance"
}