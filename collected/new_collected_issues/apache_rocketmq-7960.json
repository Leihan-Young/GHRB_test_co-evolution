{
  "issue_id": 7958,
  "issue_url": "https://github.com/apache/rocketmq/issues/7958",
  "title": "[Bug] proxy findOneBroker will always use first",
  "description": "<h3 dir=\"auto\">Before Creating the Bug Report</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I found a bug, not just asking a question, which should be created in <a href=\"https://github.com/apache/rocketmq/discussions\">GitHub Discussions</a>.</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I have searched the <a href=\"https://github.com/apache/rocketmq/issues\">GitHub Issues</a> and <a href=\"https://github.com/apache/rocketmq/discussions\">GitHub Discussions</a>  of this repository and believe that this is not a duplicate.</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I have confirmed that this bug belongs to the current repository, not other repositories of RocketMQ.</p>\n</li>\n</ul>\n<h3 dir=\"auto\">Runtime platform environment</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"protected Optional<BrokerData> findOneBroker(String topic) throws Exception {\n        try {\n            return topicRouteService.getAllMessageQueueView(ProxyContext.createForInner(this.getClass()), topic).getTopicRouteData().getBrokerDatas().stream().findAny();\n        } catch (Exception e) {\n            if (TopicRouteHelper.isTopicNotExistError(e)) {\n                return Optional.empty();\n            }\n            throw e;\n        }\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">protected Optional<BrokerData> findOneBroker(String topic) throws Exception {\n        try {\n            return topicRouteService.getAllMessageQueueView(ProxyContext.createForInner(this.getClass()), topic).getTopicRouteData().getBrokerDatas().stream().findAny();\n        } catch (Exception e) {\n            if (TopicRouteHelper.isTopicNotExistError(e)) {\n                return Optional.empty();\n            }\n            throw e;\n        }\n    }\n</code></pre></div>\n<h3 dir=\"auto\">RocketMQ version</h3>\n<p dir=\"auto\">develop</p>\n<h3 dir=\"auto\">JDK Version</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Describe the Bug</h3>\n<p dir=\"auto\">stream then findany will always first\uff0cThe broker's load will show relatively noticeable imbalance.</p>\n<h3 dir=\"auto\">Steps to Reproduce</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Test\n    public void testParseRequestContent() {\n        List<BrokerData> brokerDataList = new ArrayList<>();\n        BrokerData brokerData = new BrokerData();\n        brokerData.setBrokerName(\"brokerName\");\n\n        BrokerData brokerData2 = new BrokerData();\n        brokerData2.setBrokerName(\"brokerName2\");\n\n        brokerDataList.add(brokerData);\n        brokerDataList.add(brokerData2);\n\n        for (int i=0;i<1000;i++){\n            //Collections.shuffle(brokerDataList);\n            String rs = brokerDataList.stream().findAny().get().getBrokerName();\n            System.out.println(rs);\n        }\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    @Test\n    public void testParseRequestContent() {\n        List<BrokerData> brokerDataList = new ArrayList<>();\n        BrokerData brokerData = new BrokerData();\n        brokerData.setBrokerName(\"brokerName\");\n\n        BrokerData brokerData2 = new BrokerData();\n        brokerData2.setBrokerName(\"brokerName2\");\n\n        brokerDataList.add(brokerData);\n        brokerDataList.add(brokerData2);\n\n        for (int i=0;i<1000;i++){\n            //Collections.shuffle(brokerDataList);\n            String rs = brokerDataList.stream().findAny().get().getBrokerName();\n            System.out.println(rs);\n        }\n    }\n</code></pre></div>\n<h3 dir=\"auto\">What Did You Expect to See?</h3>\n<p dir=\"auto\">broker1 and broker2</p>\n<h3 dir=\"auto\">What Did You See Instead?</h3>\n<p dir=\"auto\">always broekrname</p>\n<h3 dir=\"auto\">Additional Context</h3>\n<p dir=\"auto\"><em>No response</em></p>",
  "description_text": "Before Creating the Bug Report\n\n\n I found a bug, not just asking a question, which should be created in GitHub Discussions.\n\n\n I have searched the GitHub Issues and GitHub Discussions  of this repository and believe that this is not a duplicate.\n\n\n I have confirmed that this bug belongs to the current repository, not other repositories of RocketMQ.\n\n\nRuntime platform environment\nprotected Optional findOneBroker(String topic) throws Exception {\n        try {\n            return topicRouteService.getAllMessageQueueView(ProxyContext.createForInner(this.getClass()), topic).getTopicRouteData().getBrokerDatas().stream().findAny();\n        } catch (Exception e) {\n            if (TopicRouteHelper.isTopicNotExistError(e)) {\n                return Optional.empty();\n            }\n            throw e;\n        }\n    }\n\nRocketMQ version\ndevelop\nJDK Version\nNo response\nDescribe the Bug\nstream then findany will always first\uff0cThe broker's load will show relatively noticeable imbalance.\nSteps to Reproduce\n    @Test\n    public void testParseRequestContent() {\n        List brokerDataList = new ArrayList<>();\n        BrokerData brokerData = new BrokerData();\n        brokerData.setBrokerName(\"brokerName\");\n\n        BrokerData brokerData2 = new BrokerData();\n        brokerData2.setBrokerName(\"brokerName2\");\n\n        brokerDataList.add(brokerData);\n        brokerDataList.add(brokerData2);\n\n        for (int i=0;i<1000;i++){\n            //Collections.shuffle(brokerDataList);\n            String rs = brokerDataList.stream().findAny().get().getBrokerName();\n            System.out.println(rs);\n        }\n    }\n\nWhat Did You Expect to See?\nbroker1 and broker2\nWhat Did You See Instead?\nalways broekrname\nAdditional Context\nNo response"
}