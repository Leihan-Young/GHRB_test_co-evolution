{
  "issue_id": 15923,
  "issue_url": "https://github.com/OpenAPITools/openapi-generator/issues/15923",
  "title": "[BUG] Markdown generator fails with \"application/*+json\"",
  "description": "<h4 dir=\"auto\">Bug Report Checklist</h4>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Have you provided a full/minimal spec to reproduce the issue?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Have you validated the input using an OpenAPI validator (<a href=\"https://apidevtools.org/swagger-parser/online/\" rel=\"nofollow\">example</a>)?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Have you <a href=\"https://github.com/OpenAPITools/openapi-generator/wiki/FAQ#how-to-test-with-the-latest-master-of-openapi-generator\">tested with the latest master</a> to confirm the issue still exists?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Have you searched for related issues/PRs?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> What's the actual output vs expected output?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> [Optional] Sponsorship to speed up the bug fix or feature request (<a href=\"https://github.com/OpenAPITools/openapi-generator/issues/6178\" data-hovercard-type=\"issue\" data-hovercard-url=\"/OpenAPITools/openapi-generator/issues/6178/hovercard\">example</a>)</li>\n</ul>\n\n<h5 dir=\"auto\">Description</h5>\n<p dir=\"auto\">I created a .NET Core Web API. In debug mode I automatically open swagger. There I copied the swagger.json and converted it with <a href=\"https://editor.swagger.io/\" rel=\"nofollow\">editor.swagger.io</a> to yaml. From this yaml file, I want to create a markdown documentation of my API.</p>\n<p dir=\"auto\">If using the generator markdown on my yaml which contains the mediatype \"application/*+json\" the generation failes with following result:</p>\n<div class=\"highlight highlight-source-batchfile notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Exception: character to be escaped is missing\n        at org.openapitools.codegen.DefaultGenerator.processOperation(DefaultGenerator.java:1201)\n        at org.openapitools.codegen.DefaultGenerator.processPaths(DefaultGenerator.java:1094)\n        at org.openapitools.codegen.DefaultGenerator.generateApis(DefaultGenerator.java:586)\n        at org.openapitools.codegen.DefaultGenerator.generate(DefaultGenerator.java:929)\n        at org.openapitools.codegen.cmd.Generate.execute(Generate.java:487)\n        at org.openapitools.codegen.cmd.OpenApiGeneratorCommand.run(OpenApiGeneratorCommand.java:32)\n        at org.openapitools.codegen.OpenAPIGenerator.main(OpenAPIGenerator.java:66)\nCaused by: java.lang.IllegalArgumentException: character to be escaped is missing\n        at java.util.regex.Matcher.appendReplacement(Unknown Source)\n        at java.util.regex.Matcher.replaceFirst(Unknown Source)\n        at org.openapitools.codegen.utils.StringUtils.lambda$camelize$1(StringUtils.java:142)\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$14(BoundedLocalCache.java:2406)\n        at java.util.concurrent.ConcurrentHashMap.compute(Unknown Source)\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:2404)\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:2387)\n        at com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:108)\n        at com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:62)\n        at org.openapitools.codegen.utils.StringUtils.camelize(StringUtils.java:136)\n        at org.openapitools.codegen.utils.StringUtils.camelize(StringUtils.java:116)\n        at org.openapitools.codegen.DefaultCodegen.fromProperty(DefaultCodegen.java:3831)\n        at org.openapitools.codegen.DefaultCodegen.fromProperty(DefaultCodegen.java:3750)\n        at org.openapitools.codegen.DefaultCodegen.getContent(DefaultCodegen.java:7310)\n        at org.openapitools.codegen.DefaultCodegen.fromRequestBody(DefaultCodegen.java:7359)\n        at org.openapitools.codegen.DefaultCodegen.fromOperation(DefaultCodegen.java:4508)\n        at org.openapitools.codegen.DefaultGenerator.processOperation(DefaultGenerator.java:1169)\"><pre class=\"notranslate\">Exception: character to be escaped is missing\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.DefaultGenerator.processOperation(DefaultGenerator.java:1201)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.DefaultGenerator.processPaths(DefaultGenerator.java:1094)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.DefaultGenerator.generateApis(DefaultGenerator.java:586)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.DefaultGenerator.generate(DefaultGenerator.java:929)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.cmd.Generate.execute(Generate.java:487)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.cmd.OpenApiGeneratorCommand.run(OpenApiGeneratorCommand.java:32)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.OpenAPIGenerator.main(OpenAPIGenerator.java:66)\nCaused by: java.lang.IllegalArgumentException: character to be escaped is missing\n        <span class=\"pl-k\">at</span> java.util.regex.Matcher.appendReplacement(Unknown Source)\n        <span class=\"pl-k\">at</span> java.util.regex.Matcher.replaceFirst(Unknown Source)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.utils.StringUtils.lambda$camelize$1(StringUtils.java:142)\n        <span class=\"pl-k\">at</span> com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$14(BoundedLocalCache.java:2406)\n        <span class=\"pl-k\">at</span> java.util.concurrent.ConcurrentHashMap.compute(Unknown Source)\n        <span class=\"pl-k\">at</span> com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:2404)\n        <span class=\"pl-k\">at</span> com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:2387)\n        <span class=\"pl-k\">at</span> com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:108)\n        <span class=\"pl-k\">at</span> com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:62)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.utils.StringUtils.camelize(StringUtils.java:136)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.utils.StringUtils.camelize(StringUtils.java:116)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.DefaultCodegen.fromProperty(DefaultCodegen.java:3831)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.DefaultCodegen.fromProperty(DefaultCodegen.java:3750)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.DefaultCodegen.getContent(DefaultCodegen.java:7310)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.DefaultCodegen.fromRequestBody(DefaultCodegen.java:7359)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.DefaultCodegen.fromOperation(DefaultCodegen.java:4508)\n        <span class=\"pl-k\">at</span> org.openapitools.codegen.DefaultGenerator.processOperation(DefaultGenerator.java:1169)</pre></div>\n<h5 dir=\"auto\">openapi-generator version</h5>\n<p dir=\"auto\">6.5.0</p>\n<h5 dir=\"auto\">OpenAPI declaration file content or url</h5>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"openapi: 3.0.1\ninfo:\n  title: Bug\n  description: Web API \n  version: v1\npaths:\n  /v1/MyRequest:\n    put:\n      tags:\n        - MyRequest\n      summary: Update the test\n      operationId: test\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestEntity'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/TestEntity'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/TestEntity'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/TestEntity'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestEntity'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TestEntity'\ncomponents:\n  schemas:\n    TestEntity:\n      type: object\n      properties:\n        name:\n          type: string\n          nullable: true\n      additionalProperties: false\"><pre class=\"notranslate\"><span class=\"pl-ent\">openapi</span>: <span class=\"pl-s\">3.0.1</span>\n<span class=\"pl-ent\">info</span>:\n  <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Bug</span>\n  <span class=\"pl-ent\">description</span>: <span class=\"pl-s\">Web API </span>\n  <span class=\"pl-ent\">version</span>: <span class=\"pl-c1\">v1</span>\n<span class=\"pl-ent\">paths</span>:\n  <span class=\"pl-ent\">/v1/MyRequest</span>:\n    <span class=\"pl-ent\">put</span>:\n      <span class=\"pl-ent\">tags</span>:\n        - <span class=\"pl-s\">MyRequest</span>\n      <span class=\"pl-ent\">summary</span>: <span class=\"pl-s\">Update the test</span>\n      <span class=\"pl-ent\">operationId</span>: <span class=\"pl-s\">test</span>\n      <span class=\"pl-ent\">requestBody</span>:\n        <span class=\"pl-ent\">content</span>:\n          <span class=\"pl-ent\">application/json</span>:\n            <span class=\"pl-ent\">schema</span>:\n              <span class=\"pl-ent\">$ref</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#/components/schemas/TestEntity<span class=\"pl-pds\">'</span></span>\n          <span class=\"pl-ent\">text/json</span>:\n            <span class=\"pl-ent\">schema</span>:\n              <span class=\"pl-ent\">$ref</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#/components/schemas/TestEntity<span class=\"pl-pds\">'</span></span>\n          <span class=\"pl-ent\">application/*+json</span>:\n            <span class=\"pl-ent\">schema</span>:\n              <span class=\"pl-ent\">$ref</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#/components/schemas/TestEntity<span class=\"pl-pds\">'</span></span>\n      <span class=\"pl-ent\">responses</span>:\n        <span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-ent\">200</span><span class=\"pl-pds\">'</span></span>:\n          <span class=\"pl-ent\">description</span>: <span class=\"pl-s\">Success</span>\n          <span class=\"pl-ent\">content</span>:\n            <span class=\"pl-ent\">text/plain</span>:\n              <span class=\"pl-ent\">schema</span>:\n                <span class=\"pl-ent\">$ref</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#/components/schemas/TestEntity<span class=\"pl-pds\">'</span></span>\n            <span class=\"pl-ent\">application/json</span>:\n              <span class=\"pl-ent\">schema</span>:\n                <span class=\"pl-ent\">$ref</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#/components/schemas/TestEntity<span class=\"pl-pds\">'</span></span>\n            <span class=\"pl-ent\">text/json</span>:\n              <span class=\"pl-ent\">schema</span>:\n                <span class=\"pl-ent\">$ref</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#/components/schemas/TestEntity<span class=\"pl-pds\">'</span></span>\n<span class=\"pl-ent\">components</span>:\n  <span class=\"pl-ent\">schemas</span>:\n    <span class=\"pl-ent\">TestEntity</span>:\n      <span class=\"pl-ent\">type</span>: <span class=\"pl-s\">object</span>\n      <span class=\"pl-ent\">properties</span>:\n        <span class=\"pl-ent\">name</span>:\n          <span class=\"pl-ent\">type</span>: <span class=\"pl-s\">string</span>\n          <span class=\"pl-ent\">nullable</span>: <span class=\"pl-c1\">true</span>\n      <span class=\"pl-ent\">additionalProperties</span>: <span class=\"pl-c1\">false</span></pre></div>\n<h5 dir=\"auto\">Generation Details</h5>\n<p dir=\"auto\">Running this command:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openapi-generator-cli generate -i ./bug.yaml -g markdown -o src/test/\"><pre class=\"notranslate\"><code class=\"notranslate\">openapi-generator-cli generate -i ./bug.yaml -g markdown -o src/test/\n</code></pre></div>\n<h5 dir=\"auto\">Steps to reproduce</h5>\n<p dir=\"auto\">Use the provided yaml and run the command from generation details</p>\n<h5 dir=\"auto\">Related issues/PRs</h5>\n<p dir=\"auto\">Found none</p>\n<h5 dir=\"auto\">Suggest a fix</h5>\n<p dir=\"auto\">Making \"application/*+json\" a valid media type. Other generator (for example angular-typescript) can have this media type.</p>",
  "description_text": "Bug Report Checklist\n\n Have you provided a full/minimal spec to reproduce the issue?\n Have you validated the input using an OpenAPI validator (example)?\n Have you tested with the latest master to confirm the issue still exists?\n Have you searched for related issues/PRs?\n What's the actual output vs expected output?\n [Optional] Sponsorship to speed up the bug fix or feature request (example)\n\nDescription\nI created a .NET Core Web API. In debug mode I automatically open swagger. There I copied the swagger.json and converted it with editor.swagger.io to yaml. From this yaml file, I want to create a markdown documentation of my API.\nIf using the generator markdown on my yaml which contains the mediatype \"application/*+json\" the generation failes with following result:\nException: character to be escaped is missing\n        at org.openapitools.codegen.DefaultGenerator.processOperation(DefaultGenerator.java:1201)\n        at org.openapitools.codegen.DefaultGenerator.processPaths(DefaultGenerator.java:1094)\n        at org.openapitools.codegen.DefaultGenerator.generateApis(DefaultGenerator.java:586)\n        at org.openapitools.codegen.DefaultGenerator.generate(DefaultGenerator.java:929)\n        at org.openapitools.codegen.cmd.Generate.execute(Generate.java:487)\n        at org.openapitools.codegen.cmd.OpenApiGeneratorCommand.run(OpenApiGeneratorCommand.java:32)\n        at org.openapitools.codegen.OpenAPIGenerator.main(OpenAPIGenerator.java:66)\nCaused by: java.lang.IllegalArgumentException: character to be escaped is missing\n        at java.util.regex.Matcher.appendReplacement(Unknown Source)\n        at java.util.regex.Matcher.replaceFirst(Unknown Source)\n        at org.openapitools.codegen.utils.StringUtils.lambda$camelize$1(StringUtils.java:142)\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$14(BoundedLocalCache.java:2406)\n        at java.util.concurrent.ConcurrentHashMap.compute(Unknown Source)\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:2404)\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:2387)\n        at com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:108)\n        at com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:62)\n        at org.openapitools.codegen.utils.StringUtils.camelize(StringUtils.java:136)\n        at org.openapitools.codegen.utils.StringUtils.camelize(StringUtils.java:116)\n        at org.openapitools.codegen.DefaultCodegen.fromProperty(DefaultCodegen.java:3831)\n        at org.openapitools.codegen.DefaultCodegen.fromProperty(DefaultCodegen.java:3750)\n        at org.openapitools.codegen.DefaultCodegen.getContent(DefaultCodegen.java:7310)\n        at org.openapitools.codegen.DefaultCodegen.fromRequestBody(DefaultCodegen.java:7359)\n        at org.openapitools.codegen.DefaultCodegen.fromOperation(DefaultCodegen.java:4508)\n        at org.openapitools.codegen.DefaultGenerator.processOperation(DefaultGenerator.java:1169)\nopenapi-generator version\n6.5.0\nOpenAPI declaration file content or url\nopenapi: 3.0.1\ninfo:\n  title: Bug\n  description: Web API \n  version: v1\npaths:\n  /v1/MyRequest:\n    put:\n      tags:\n        - MyRequest\n      summary: Update the test\n      operationId: test\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TestEntity'\n          text/json:\n            schema:\n              $ref: '#/components/schemas/TestEntity'\n          application/*+json:\n            schema:\n              $ref: '#/components/schemas/TestEntity'\n      responses:\n        '200':\n          description: Success\n          content:\n            text/plain:\n              schema:\n                $ref: '#/components/schemas/TestEntity'\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TestEntity'\n            text/json:\n              schema:\n                $ref: '#/components/schemas/TestEntity'\ncomponents:\n  schemas:\n    TestEntity:\n      type: object\n      properties:\n        name:\n          type: string\n          nullable: true\n      additionalProperties: false\nGeneration Details\nRunning this command:\nopenapi-generator-cli generate -i ./bug.yaml -g markdown -o src/test/\n\nSteps to reproduce\nUse the provided yaml and run the command from generation details\nRelated issues/PRs\nFound none\nSuggest a fix\nMaking \"application/*+json\" a valid media type. Other generator (for example angular-typescript) can have this media type."
}