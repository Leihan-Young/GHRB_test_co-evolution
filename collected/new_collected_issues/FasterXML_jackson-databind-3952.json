{
  "issue_id": 3950,
  "issue_url": "https://github.com/FasterXML/jackson-databind/issues/3950",
  "title": "Create new `JavaType` subtype `IterationType` (extending `SimpleType`)",
  "description": "<p dir=\"auto\">(note: possible replacement/impl of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1708593573\" data-permission-text=\"Title is private\" data-url=\"https://github.com/FasterXML/jackson-databind/issues/3926\" data-hovercard-type=\"issue\" data-hovercard-url=\"/FasterXML/jackson-databind/issues/3926/hovercard\" href=\"https://github.com/FasterXML/jackson-databind/issues/3926\">#3926</a>)</p>\n<p dir=\"auto\">There are benefits in recognizing types like:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">Iterator</code></li>\n<li><code class=\"notranslate\">Stream</code></li>\n<li><code class=\"notranslate\">DoubleStream</code> / <code class=\"notranslate\">IntStream</code> / <code class=\"notranslate\">LongStream</code></li>\n</ul>\n<p dir=\"auto\">as first-class <code class=\"notranslate\">JavaType</code> variants (see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1708453845\" data-permission-text=\"Title is private\" data-url=\"https://github.com/FasterXML/jackson-dataformat-xml/issues/597\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/FasterXML/jackson-dataformat-xml/pull/597/hovercard\" href=\"https://github.com/FasterXML/jackson-dataformat-xml/pull/597\">FasterXML/jackson-dataformat-xml#597</a> f.ex).<br>\nIt should be based on <code class=\"notranslate\">SimpleType</code>, similar to <code class=\"notranslate\">ReferenceType</code>.</p>\n<p dir=\"auto\">If and when implemented we could consider whether to extend <code class=\"notranslate\">Deserializers</code>, <code class=\"notranslate\">Serializers</code> and other extension points.<br>\nAlso: would need to add support by Scala module, possibly Kotlin (and maybe Guava?).</p>",
  "description_text": "(note: possible replacement/impl of #3926)\nThere are benefits in recognizing types like:\n\nIterator\nStream\nDoubleStream / IntStream / LongStream\n\nas first-class JavaType variants (see FasterXML/jackson-dataformat-xml#597 f.ex).\nIt should be based on SimpleType, similar to ReferenceType.\nIf and when implemented we could consider whether to extend Deserializers, Serializers and other extension points.\nAlso: would need to add support by Scala module, possibly Kotlin (and maybe Guava?)."
}