{
  "issue_id": 367,
  "issue_url": "https://github.com/Hakky54/sslcontext-kickstart/issues/367",
  "title": "withSystemTrustMaterial cannot create TrustStore because certificate is absent",
  "description": "<p dir=\"auto\"><strong>Describe the bug</strong></p>\n<p dir=\"auto\">We recently released a new version of our product containing your library, and it appears that a lot of users have issues when creating the <code class=\"notranslate\">SSLFactoryBuilder#withSystemTrustMaterial</code>.</p>\n<p dir=\"auto\">This results in the error <code class=\"notranslate\">Could not create TrustStore because certificate is absent</code>.<br>\nOne user on Linux has multiple certificates under <code class=\"notranslate\">/etc/ssl/certs</code> which is a symlink to <code class=\"notranslate\">/var/lib/ca-certificates/pem</code>. For Linux, <code class=\"notranslate\">/etc/ssl/certs</code> should be a valid path for certificates given your library source code, which is surprising that it's failing.</p>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<p dir=\"auto\">I was not able to reproduce it, here is the list of OS on which users have issues:</p>\n<ul dir=\"auto\">\n<li>Mac OS X x86_64</li>\n<li>macOS 13.5</li>\n<li>openSUSE Tumbleweed 20230801</li>\n</ul>\n<p dir=\"auto\">All use Java 17.0.7.</p>\n<p dir=\"auto\">One is using Zscalar and Global Protect for system security. Zscalar replaces the certs with its own so that it is able to examine the traffic.</p>\n<p dir=\"auto\">Here is the stack trace related to the issue:</p>\n<p dir=\"auto\"><code class=\"notranslate\">Caused by: java.lang.IllegalArgumentException: Could not create TrustStore because certificate is absent at nl.altindag.ssl.util.internal.ValidationUtils.lambda$requireNotEmpty$2(ValidationUtils.java:47) at nl.altindag.ssl.util.internal.ValidationUtils.requireNotEmpty(ValidationUtils.java:52) at nl.altindag.ssl.util.internal.ValidationUtils.requireNotEmpty(ValidationUtils.java:47) at nl.altindag.ssl.util.KeyStoreUtils.createTrustStore(KeyStoreUtils.java:177) at nl.altindag.ssl.util.KeyStoreUtils.loadSystemKeyStores(KeyStoreUtils.java:219) at nl.altindag.ssl.util.TrustManagerUtils.createTrustManagerWithSystemTrustedCertificates(TrustManagerUtils.java:89) at nl.altindag.ssl.SSLFactory$Builder.withSystemTrustMaterial(SSLFactory.java:210)</code></p>\n<p dir=\"auto\"><strong>Expected behavior</strong></p>\n<p dir=\"auto\">A certificate directory should be found, and certificates within this directory should be loaded so the trust store can be created.</p>\n<p dir=\"auto\">How we setup the SSLFactoryBuilder: <a href=\"https://github.com/SonarSource/sonarlint-core/blob/master/http/src/main/java/org/sonarsource/sonarlint/core/http/HttpClientProvider.java#L63\">https://github.com/SonarSource/sonarlint-core/blob/master/http/src/main/java/org/sonarsource/sonarlint/core/http/HttpClientProvider.java#L63</a></p>",
  "description_text": "Describe the bug\nWe recently released a new version of our product containing your library, and it appears that a lot of users have issues when creating the SSLFactoryBuilder#withSystemTrustMaterial.\nThis results in the error Could not create TrustStore because certificate is absent.\nOne user on Linux has multiple certificates under /etc/ssl/certs which is a symlink to /var/lib/ca-certificates/pem. For Linux, /etc/ssl/certs should be a valid path for certificates given your library source code, which is surprising that it's failing.\nTo Reproduce\nI was not able to reproduce it, here is the list of OS on which users have issues:\n\nMac OS X x86_64\nmacOS 13.5\nopenSUSE Tumbleweed 20230801\n\nAll use Java 17.0.7.\nOne is using Zscalar and Global Protect for system security. Zscalar replaces the certs with its own so that it is able to examine the traffic.\nHere is the stack trace related to the issue:\nCaused by: java.lang.IllegalArgumentException: Could not create TrustStore because certificate is absent at nl.altindag.ssl.util.internal.ValidationUtils.lambda$requireNotEmpty$2(ValidationUtils.java:47) at nl.altindag.ssl.util.internal.ValidationUtils.requireNotEmpty(ValidationUtils.java:52) at nl.altindag.ssl.util.internal.ValidationUtils.requireNotEmpty(ValidationUtils.java:47) at nl.altindag.ssl.util.KeyStoreUtils.createTrustStore(KeyStoreUtils.java:177) at nl.altindag.ssl.util.KeyStoreUtils.loadSystemKeyStores(KeyStoreUtils.java:219) at nl.altindag.ssl.util.TrustManagerUtils.createTrustManagerWithSystemTrustedCertificates(TrustManagerUtils.java:89) at nl.altindag.ssl.SSLFactory$Builder.withSystemTrustMaterial(SSLFactory.java:210)\nExpected behavior\nA certificate directory should be found, and certificates within this directory should be loaded so the trust store can be created.\nHow we setup the SSLFactoryBuilder: https://github.com/SonarSource/sonarlint-core/blob/master/http/src/main/java/org/sonarsource/sonarlint/core/http/HttpClientProvider.java#L63"
}