{
  "issue_id": 15478,
  "issue_url": "https://github.com/OpenAPITools/openapi-generator/issues/15478",
  "title": "[BUG] [JAVA] the non-parametric constructor in DTOs is wrongly marked as deprecated",
  "description": "<p dir=\"auto\">From openapi-generator version 6.5.0 in Java DTO classes there are all default parameterless constructors now marked as Deprecated, and there are added new parametric constructor with fields defined in OpenAPI as required</p>\n<p dir=\"auto\">It's a very bad idea for the following reasons:</p>\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">if the company uses quality controls, all existing code is now reported as using the deprecated method</p>\n</li>\n<li>\n<p dir=\"auto\">code using a parametric constructor as opposed to builder methods is less resistant to changes in the OpenAPI definition, such as changing the attribute obligation and <strong>especially changing its order</strong>!</p>\n</li>\n</ol>\n<p dir=\"auto\">In addition, the parametric constructor must remain in the code forever, because the json parser needs it, so marking it as deprecated is clearly wrong!<br>\nPlease remove this nonsense.</p>",
  "description_text": "From openapi-generator version 6.5.0 in Java DTO classes there are all default parameterless constructors now marked as Deprecated, and there are added new parametric constructor with fields defined in OpenAPI as required\nIt's a very bad idea for the following reasons:\n\n\nif the company uses quality controls, all existing code is now reported as using the deprecated method\n\n\ncode using a parametric constructor as opposed to builder methods is less resistant to changes in the OpenAPI definition, such as changing the attribute obligation and especially changing its order!\n\n\nIn addition, the parametric constructor must remain in the code forever, because the json parser needs it, so marking it as deprecated is clearly wrong!\nPlease remove this nonsense."
}