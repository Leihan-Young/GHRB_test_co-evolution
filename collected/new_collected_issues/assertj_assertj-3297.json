{
  "issue_id": 3291,
  "issue_url": "https://github.com/assertj/assertj/issues/3291",
  "title": "Add `values()` navigation method to `AbstractMapAssert`",
  "description": "<h4 dir=\"auto\">Feature summary</h4>\n<p dir=\"auto\">Improve matching only MapAssert Value Properties.</p>\n<h4 dir=\"auto\">Example</h4>\n<p dir=\"auto\">I feel like this could be one statement</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assertThat(cpCard.getAltIds())\n  .as(\"AlternateId saved on card\")\n  .hasSize(1); // avoids getAltIds() possible NPE... \n\nassertThat(cpCard.getAltIds().values())\n  .as(\"AlternateId saved on Card\")\n  .first()\n  .returns(LoyaltyCardsValueAltIdsValue.StatusEnum.ACTIVE, LoyaltyCardsValueAltIdsValue::getStatus);\"><pre class=\"notranslate\"><span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">cpCard</span>.<span class=\"pl-en\">getAltIds</span>())\n  .<span class=\"pl-en\">as</span>(<span class=\"pl-s\">\"AlternateId saved on card\"</span>)\n  .<span class=\"pl-en\">hasSize</span>(<span class=\"pl-c1\">1</span>); <span class=\"pl-c\">// avoids getAltIds() possible NPE... </span>\n\n<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">cpCard</span>.<span class=\"pl-en\">getAltIds</span>().<span class=\"pl-en\">values</span>())\n  .<span class=\"pl-en\">as</span>(<span class=\"pl-s\">\"AlternateId saved on Card\"</span>)\n  .<span class=\"pl-en\">first</span>()\n  .<span class=\"pl-en\">returns</span>(<span class=\"pl-smi\">LoyaltyCardsValueAltIdsValue</span>.<span class=\"pl-s1\">StatusEnum</span>.<span class=\"pl-c1\">ACTIVE</span>, <span class=\"pl-smi\">LoyaltyCardsValueAltIdsValue</span>::<span class=\"pl-s1\">getStatus</span>);</pre></div>\n<p dir=\"auto\">It feels like I should be able to do something like. I tried a number of <code class=\"notranslate\">extracting</code> but it all ended up more convoluted than 2 statements, or required a weaker static typing</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assertThat(cpCard.getAltIds())\n  .hasSize(1)\n  .values()\n  .first()\n  .returns(...);\"><pre class=\"notranslate\"><span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">cpCard</span>.<span class=\"pl-en\">getAltIds</span>())\n  .<span class=\"pl-en\">hasSize</span>(<span class=\"pl-c1\">1</span>)\n  .<span class=\"pl-en\">values</span>()\n  .<span class=\"pl-en\">first</span>()\n  .<span class=\"pl-en\">returns</span>(...);</pre></div>",
  "description_text": "Feature summary\nImprove matching only MapAssert Value Properties.\nExample\nI feel like this could be one statement\nassertThat(cpCard.getAltIds())\n  .as(\"AlternateId saved on card\")\n  .hasSize(1); // avoids getAltIds() possible NPE... \n\nassertThat(cpCard.getAltIds().values())\n  .as(\"AlternateId saved on Card\")\n  .first()\n  .returns(LoyaltyCardsValueAltIdsValue.StatusEnum.ACTIVE, LoyaltyCardsValueAltIdsValue::getStatus);\nIt feels like I should be able to do something like. I tried a number of extracting but it all ended up more convoluted than 2 statements, or required a weaker static typing\nassertThat(cpCard.getAltIds())\n  .hasSize(1)\n  .values()\n  .first()\n  .returns(...);"
}