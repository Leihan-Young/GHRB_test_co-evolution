{
  "issue_id": 3128,
  "issue_url": "https://github.com/mockito/mockito/issues/3128",
  "title": "Make MockUtil.getMockMaker() public or public Mockito API",
  "description": "<p dir=\"auto\"><strong>Proposal:</strong></p>\n<p dir=\"auto\">Make the method <code class=\"notranslate\">org.mockito.internal.util.MockUtil.getMockMaker(String)</code> public or better part of the public Mockito Plugin-API.<br>\nThe existing <code class=\"notranslate\">org.mockito.plugins.MockitoPlugins.getInlineMockMaker()</code> creates a new <code class=\"notranslate\">mock-maker-inline</code> instance when called.</p>\n<p dir=\"auto\"><strong>Reason:</strong></p>\n<p dir=\"auto\">I am currently working on a <a href=\"https://github.com/spockframework/spock/pull/1756\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/spockframework/spock/pull/1756/hovercard\">PR for Spock</a>, which integrates <code class=\"notranslate\">Mockito</code> as a Mocking library into Spock for normal and static mocks.</p>\n<p dir=\"auto\">If I use the public API of <code class=\"notranslate\">MockitoPlugins.getInlineMockMaker()</code>, the combination of Mockito and Spock with Mockito leads to strange behavior. E.g. If someone mocks the same static class with Mockito and Spock, the  <code class=\"notranslate\">mock-maker-inline</code> gets confused.<br>\nThe reasons for that is, that two Mockito <code class=\"notranslate\">InlineDelegateByteBuddyMockMaker</code> instances try to transform static methods at the same time.</p>\n<p dir=\"auto\">If I use the <code class=\"notranslate\">MockUtil.getMockMaker()</code> Spock with Mockito and Mockito will interop nicely with each other and report an error, if the same class is mocked twice.<br>\nSo the user can use Mockito-API in Spock-Tests and also Spock-API, which uses Mockito under the hood.</p>",
  "description_text": "Proposal:\nMake the method org.mockito.internal.util.MockUtil.getMockMaker(String) public or better part of the public Mockito Plugin-API.\nThe existing org.mockito.plugins.MockitoPlugins.getInlineMockMaker() creates a new mock-maker-inline instance when called.\nReason:\nI am currently working on a PR for Spock, which integrates Mockito as a Mocking library into Spock for normal and static mocks.\nIf I use the public API of MockitoPlugins.getInlineMockMaker(), the combination of Mockito and Spock with Mockito leads to strange behavior. E.g. If someone mocks the same static class with Mockito and Spock, the  mock-maker-inline gets confused.\nThe reasons for that is, that two Mockito InlineDelegateByteBuddyMockMaker instances try to transform static methods at the same time.\nIf I use the MockUtil.getMockMaker() Spock with Mockito and Mockito will interop nicely with each other and report an error, if the same class is mocked twice.\nSo the user can use Mockito-API in Spock-Tests and also Spock-API, which uses Mockito under the hood."
}