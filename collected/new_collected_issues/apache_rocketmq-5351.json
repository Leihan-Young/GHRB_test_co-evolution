{
  "issue_id": 3799,
  "issue_url": "https://github.com/apache/rocketmq/issues/3799",
  "title": "[RIP-30] Support Compaction topic",
  "description": "<p dir=\"auto\">The issue tracker is <strong>ONLY</strong> used for bug report(feature request need to follow <a href=\"https://github.com/apache/rocketmq/wiki/RocketMQ-Improvement-Proposal\">RIP process</a>). Keep in mind, please check whether there is an existing same report before your raise a new one.</p>\n<p dir=\"auto\">Alternately (especially if your communication is not a bug report), you can send mail to our <a href=\"http://rocketmq.apache.org/about/contact/\" rel=\"nofollow\">mailing lists</a>. We welcome any friendly suggestions, bug fixes, collaboration and other improvements.</p>\n<p dir=\"auto\">Please ensure that your bug report is clear and that it is complete. Otherwise, we may be unable to understand it or to reproduce it, either of which would prevent us from fixing the bug. We strongly recommend the report(bug report or feature request) could include some hints as the following:</p>\n<p dir=\"auto\"><strong>FEATURE REQUEST</strong></p>\n<ol dir=\"auto\">\n<li>Please describe the feature you are requesting.</li>\n</ol>\n<p dir=\"auto\">Currently RocketMQ does not support the compaction topic, which results in that if the application(such as connector/streams) uses messages to store state and only needs the latest state data at a certain time , it needs to pull all the messages from the broker, this process will consume a lot of time; At the same time, a lot of data is not required by the client. Therefore, we need a special data cleaning mechanism, which is to compress the same type of data (same key), and only keep the latest data, In this way, only a small amount of data is loaded when the application starts.</p>\n<ol start=\"2\" dir=\"auto\">\n<li>Provide any additional detail on your proposed use case for this feature.</li>\n</ol>\n<p dir=\"auto\">refer to <a href=\"https://lists.apache.org/thread/c85oj18whdjnxc331n1fxqhb8z50bpnm\" rel=\"nofollow\">dev-maillist</a></p>\n<ol start=\"3\" dir=\"auto\">\n<li>\n<p dir=\"auto\">Indicate the importance of this issue to you (blocker, must-have, should-have, nice-to-have). Are you currently using any workarounds to address this issue?</p>\n</li>\n<li>\n<p dir=\"auto\">If there are some sub-tasks using -[] for each subtask and create a corresponding issue to map to the sub task:</p>\n</li>\n</ol>\n<ul dir=\"auto\">\n<li><a href=\"example_sub_issue1_link_here\">sub-task1-issue-number</a>: sub-task1 description here,</li>\n<li><a href=\"example_sub_issue2_link_here\">sub-task2-issue-number</a>: sub-task2 description here,</li>\n<li>...</li>\n</ul>",
  "description_text": "The issue tracker is ONLY used for bug report(feature request need to follow RIP process). Keep in mind, please check whether there is an existing same report before your raise a new one.\nAlternately (especially if your communication is not a bug report), you can send mail to our mailing lists. We welcome any friendly suggestions, bug fixes, collaboration and other improvements.\nPlease ensure that your bug report is clear and that it is complete. Otherwise, we may be unable to understand it or to reproduce it, either of which would prevent us from fixing the bug. We strongly recommend the report(bug report or feature request) could include some hints as the following:\nFEATURE REQUEST\n\nPlease describe the feature you are requesting.\n\nCurrently RocketMQ does not support the compaction topic, which results in that if the application(such as connector/streams) uses messages to store state and only needs the latest state data at a certain time , it needs to pull all the messages from the broker, this process will consume a lot of time; At the same time, a lot of data is not required by the client. Therefore, we need a special data cleaning mechanism, which is to compress the same type of data (same key), and only keep the latest data, In this way, only a small amount of data is loaded when the application starts.\n\nProvide any additional detail on your proposed use case for this feature.\n\nrefer to dev-maillist\n\n\nIndicate the importance of this issue to you (blocker, must-have, should-have, nice-to-have). Are you currently using any workarounds to address this issue?\n\n\nIf there are some sub-tasks using -[] for each subtask and create a corresponding issue to map to the sub task:\n\n\n\nsub-task1-issue-number: sub-task1 description here,\nsub-task2-issue-number: sub-task2 description here,\n...\n"
}