{
  "issue_id": 3314,
  "issue_url": "https://github.com/assertj/assertj/issues/3314",
  "title": "Compile error due to new assertThatThrownBy",
  "description": "<p dir=\"auto\"><strong>Describe the bug</strong><br>\nCompile error in Eclipse 2023-12: The method assertThatThrownBy(ThrowableAssert.ThrowingCallable) is ambiguous for the type AmbigiousCallTest.</p>\n<p dir=\"auto\">The only change is the upgrade from 3.24.2 to 3.25. In 3.24.2 the same code was fine.</p>\n<ul dir=\"auto\">\n<li>assertj core version: 3.25</li>\n</ul>\n<p dir=\"auto\"><strong>Test case reproducing the bug</strong></p>\n<p dir=\"auto\">Don't <em>run</em> the below code, but just <em>compile</em> it. At least ECJ doesn't like it.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class AmbigiousCallTest {\n\n    @Test\n    void ambigiousCall() throws Exception {\n        assertThatThrownBy(AmbigiousCallTest::verify)\n                .hasMessageContaining(\"No objects are given\");\n    }\n\n    public static void verify(final Object... objects) {\n        // foo\n    }\n\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">AmbigiousCallTest</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-smi\">void</span> <span class=\"pl-en\">ambigiousCall</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n        <span class=\"pl-en\">assertThatThrownBy</span>(<span class=\"pl-smi\">AmbigiousCallTest</span>::<span class=\"pl-s1\">verify</span>)\n                .<span class=\"pl-en\">hasMessageContaining</span>(<span class=\"pl-s\">\"No objects are given\"</span>);\n    }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">verify</span>(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Object</span>... <span class=\"pl-s1\">objects</span>) {\n        <span class=\"pl-c\">// foo</span>\n    }\n\n}</pre></div>\n<p dir=\"auto\">Probably related to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1708885639\" data-permission-text=\"Title is private\" data-url=\"https://github.com/assertj/assertj/issues/3043\" data-hovercard-type=\"issue\" data-hovercard-url=\"/assertj/assertj/issues/3043/hovercard\" href=\"https://github.com/assertj/assertj/issues/3043\">#3043</a>. Workaround: Extract the method reference to a local variable. The type information of that local variable is sufficient to choose one of the two methods.</p>",
  "description_text": "Describe the bug\nCompile error in Eclipse 2023-12: The method assertThatThrownBy(ThrowableAssert.ThrowingCallable) is ambiguous for the type AmbigiousCallTest.\nThe only change is the upgrade from 3.24.2 to 3.25. In 3.24.2 the same code was fine.\n\nassertj core version: 3.25\n\nTest case reproducing the bug\nDon't run the below code, but just compile it. At least ECJ doesn't like it.\npublic class AmbigiousCallTest {\n\n    @Test\n    void ambigiousCall() throws Exception {\n        assertThatThrownBy(AmbigiousCallTest::verify)\n                .hasMessageContaining(\"No objects are given\");\n    }\n\n    public static void verify(final Object... objects) {\n        // foo\n    }\n\n}\nProbably related to #3043. Workaround: Extract the method reference to a local variable. The type information of that local variable is sufficient to choose one of the two methods."
}