{
  "issue_id": 3229,
  "issue_url": "https://github.com/assertj/assertj/issues/3229",
  "title": "Add `bytes()`/`bytes(Charset)`/`bytes(String)` navigation methods to `AbstractStringAssert`",
  "description": "<h4 dir=\"auto\">Feature summary</h4>\n<p dir=\"auto\">Add <code class=\"notranslate\">AbstractStirngAssert#extracting(Charset)AbstractByteArrayAssert</code> so that the <code class=\"notranslate\">byte[]</code> can be verified.</p>\n<h4 dir=\"auto\">Example</h4>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"String actual  = \"\";\nassertThat(actual)\n        .hasSize(0)\n        .extracting(StandardCharset.US_ASCII) // AbstractByteArrayAssert\n        .hasSize(0)\n;\"><pre class=\"notranslate\"><span class=\"pl-smi\">String</span> <span class=\"pl-s1\">actual</span>  = <span class=\"pl-s\">\"\"</span>;\n<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">actual</span>)\n        .<span class=\"pl-en\">hasSize</span>(<span class=\"pl-c1\">0</span>)\n        .<span class=\"pl-en\">extracting</span>(<span class=\"pl-smi\">StandardCharset</span>.<span class=\"pl-c1\">US_ASCII</span>) <span class=\"pl-c\">// AbstractByteArrayAssert</span>\n        .<span class=\"pl-en\">hasSize</span>(<span class=\"pl-c1\">0</span>)\n;</pre></div>",
  "description_text": "Feature summary\nAdd AbstractStirngAssert#extracting(Charset)AbstractByteArrayAssert so that the byte[] can be verified.\nExample\nString actual  = \"\";\nassertThat(actual)\n        .hasSize(0)\n        .extracting(StandardCharset.US_ASCII) // AbstractByteArrayAssert\n        .hasSize(0)\n;"
}