{
  "issue_id": 2934,
  "issue_url": "https://github.com/mockito/mockito/issues/2934",
  "title": "Feature suggestion: TerminalMockCandidateFilter should report error when more than one candidate left",
  "description": "<p dir=\"auto\">Hi,<br>\nwhen stumbling over <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1593834998\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2921\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2921/hovercard\" href=\"https://github.com/mockito/mockito/issues/2921\">#2921</a> , I realized that Mockito will silently fail to inject <code class=\"notranslate\">@Mock</code> objects when there is more than one candidate. Usually, DI containers will throw an exception in that case, otherwise the user first has to understand what went wrong (no injection happened), and then start wondering <em>why</em> it failed (e.g. multiple <code class=\"notranslate\">@Mock</code> fields with same type, and user will have to know which exactly).</p>\n<p dir=\"auto\">My suggestion would be to have a new error similar to <code class=\"notranslate\">Reporter.cannotInjectDependency</code> that <code class=\"notranslate\">TerminalMockCandidateFilter</code> then should call if <code class=\"notranslate\">mocks.size() > 1</code></p>",
  "description_text": "Hi,\nwhen stumbling over #2921 , I realized that Mockito will silently fail to inject @Mock objects when there is more than one candidate. Usually, DI containers will throw an exception in that case, otherwise the user first has to understand what went wrong (no injection happened), and then start wondering why it failed (e.g. multiple @Mock fields with same type, and user will have to know which exactly).\nMy suggestion would be to have a new error similar to Reporter.cannotInjectDependency that TerminalMockCandidateFilter then should call if mocks.size() > 1"
}