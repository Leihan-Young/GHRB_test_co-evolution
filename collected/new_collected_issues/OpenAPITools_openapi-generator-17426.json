{
  "issue_id": 17425,
  "issue_url": "https://github.com/OpenAPITools/openapi-generator/issues/17425",
  "title": "[BUG] Infinite loop with REF_AS_PARENT_IN_ALLOF normalizer",
  "description": "<h4 dir=\"auto\">Bug Report Checklist</h4>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Have you provided a full/minimal spec to reproduce the issue?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Have you validated the input using an OpenAPI validator (<a href=\"https://apidevtools.org/swagger-parser/online/\" rel=\"nofollow\">example</a>)?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Have you <a href=\"https://github.com/OpenAPITools/openapi-generator/wiki/FAQ#how-to-test-with-the-latest-master-of-openapi-generator\">tested with the latest master</a> to confirm the issue still exists?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Have you searched for related issues/PRs?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> What's the actual output vs expected output?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> [Optional] Sponsorship to speed up the bug fix or feature request (<a href=\"https://github.com/OpenAPITools/openapi-generator/issues/6178\" data-hovercard-type=\"issue\" data-hovercard-url=\"/OpenAPITools/openapi-generator/issues/6178/hovercard\">example</a>)</li>\n</ul>\n\n<h5 dir=\"auto\">Description</h5>\n\n<h5 dir=\"auto\">openapi-generator version</h5>\n<p dir=\"auto\">7.1.0, latest</p>\n<h5 dir=\"auto\">OpenAPI declaration file content or URL</h5>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"info:\n  description: Normalizer issue repro\n  title: Normalizer issue repro\n  version: 1.0.0\nopenapi: 3.0.0\npaths:\n  /item:\n    get:\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Item'\n                \ncomponents:\n  schemas:\n    Item:\n      properties:\n        hashes:\n          allOf:\n            - $ref: '#/components/schemas/ItemHashes'\n          description: Map of all hashes\n          nullable: true\n      type: object\n\n    ItemHashes:\n      properties:\n        data:\n          description: Data hash\n          type: string\n      type: object\"><pre class=\"notranslate\"><span class=\"pl-ent\">info</span>:\n  <span class=\"pl-ent\">description</span>: <span class=\"pl-s\">Normalizer issue repro</span>\n  <span class=\"pl-ent\">title</span>: <span class=\"pl-s\">Normalizer issue repro</span>\n  <span class=\"pl-ent\">version</span>: <span class=\"pl-s\">1.0.0</span>\n<span class=\"pl-ent\">openapi</span>: <span class=\"pl-s\">3.0.0</span>\n<span class=\"pl-ent\">paths</span>:\n  <span class=\"pl-ent\">/item</span>:\n    <span class=\"pl-ent\">get</span>:\n      <span class=\"pl-ent\">responses</span>:\n        <span class=\"pl-s\"><span class=\"pl-pds\">'</span><span class=\"pl-ent\">200</span><span class=\"pl-pds\">'</span></span>:\n          <span class=\"pl-ent\">description</span>: <span class=\"pl-s\">successful operation</span>\n          <span class=\"pl-ent\">content</span>:\n            <span class=\"pl-ent\">application/json</span>:\n              <span class=\"pl-ent\">schema</span>:\n                <span class=\"pl-ent\">$ref</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#/components/schemas/Item<span class=\"pl-pds\">'</span></span>\n                \n<span class=\"pl-ent\">components</span>:\n  <span class=\"pl-ent\">schemas</span>:\n    <span class=\"pl-ent\">Item</span>:\n      <span class=\"pl-ent\">properties</span>:\n        <span class=\"pl-ent\">hashes</span>:\n          <span class=\"pl-ent\">allOf</span>:\n            - <span class=\"pl-ent\">$ref</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#/components/schemas/ItemHashes<span class=\"pl-pds\">'</span></span>\n          <span class=\"pl-ent\">description</span>: <span class=\"pl-s\">Map of all hashes</span>\n          <span class=\"pl-ent\">nullable</span>: <span class=\"pl-c1\">true</span>\n      <span class=\"pl-ent\">type</span>: <span class=\"pl-s\">object</span>\n\n    <span class=\"pl-ent\">ItemHashes</span>:\n      <span class=\"pl-ent\">properties</span>:\n        <span class=\"pl-ent\">data</span>:\n          <span class=\"pl-ent\">description</span>: <span class=\"pl-s\">Data hash</span>\n          <span class=\"pl-ent\">type</span>: <span class=\"pl-s\">string</span>\n      <span class=\"pl-ent\">type</span>: <span class=\"pl-s\">object</span></pre></div>\n<p dir=\"auto\">The crucial part is <code class=\"notranslate\">nullable: true</code> in the <code class=\"notranslate\">Item.hashes</code> property. Without it, the <code class=\"notranslate\">allOf</code> is simplified to a flat model. However, <code class=\"notranslate\">nullable</code> bails it out of this flattening, resulting in a separate composite schema.</p>\n<h5 dir=\"auto\">Generation Details</h5>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar generate -g java -i normalizer.yaml -o /tmp/java/ --openapi-normalizer REF_AS_PARENT_IN_ALLOF=true\"><pre class=\"notranslate\"><code class=\"notranslate\">java -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar generate -g java -i normalizer.yaml -o /tmp/java/ --openapi-normalizer REF_AS_PARENT_IN_ALLOF=true\n</code></pre></div>\n\n<h5 dir=\"auto\">Steps to reproduce</h5>\n<p dir=\"auto\">Run the command above. It will get stuck with no output, and eventually crash with OutOfMemory.</p>\n<p dir=\"auto\">When debugging,I can see that it gets into an infinite <code class=\"notranslate\">while</code> loop in <code class=\"notranslate\">DefaultCodegen#updateAllModels</code>.</p>\n<p dir=\"auto\">The reason is name conflict with two schemas:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">ItemHashes</code> - the one explicitly defined in the spec above</li>\n<li><code class=\"notranslate\">Item_hashes</code> - the autogenerated schema describing the <code class=\"notranslate\">hashes</code> property of the <code class=\"notranslate\">Item</code> schema. This property is defined as <code class=\"notranslate\">allOf</code>. It has <code class=\"notranslate\">parent: ItemHashes</code></li>\n</ul>\n<p dir=\"auto\">So far so good and matches the spec.</p>\n<p dir=\"auto\">Now, the both schemas produce the identical model name (via <code class=\"notranslate\">toModelName()</code>): <code class=\"notranslate\">ItemHashes</code>. Model name is used as the key, hence one overwrites the other.</p>\n<p dir=\"auto\">So, the <code class=\"notranslate\">Item_hashes</code> model with <code class=\"notranslate\">parent: </code>ItemHashes<code class=\"notranslate\">results in</code>ItemHashes<code class=\"notranslate\">with</code>parent: ItemHashes` - self-reference. This circular references makes the while loop in the normalizer infinite.</p>\n<p dir=\"auto\">The example spec seems totally legit otherwise. And it's not even manually crafted - it's generated by <a href=\"https://github.com/marshmallow-code/apispec\">https://github.com/marshmallow-code/apispec</a> from the source python code.</p>\n<h5 dir=\"auto\">Related issues/PRs</h5>\n\n<h5 dir=\"auto\">Suggest a fix</h5>\n\n<p dir=\"auto\">I don't have a fix in mind.<br>\nAs a local workaround I can try using model name mapping to avoid the naming conflict. Also after upgrading the spec from 3.0.0  to 3.1.0, the nullability is represented differently, and this allows to flatten the allOf schema.</p>",
  "description_text": "Bug Report Checklist\n\n Have you provided a full/minimal spec to reproduce the issue?\n Have you validated the input using an OpenAPI validator (example)?\n Have you tested with the latest master to confirm the issue still exists?\n Have you searched for related issues/PRs?\n What's the actual output vs expected output?\n [Optional] Sponsorship to speed up the bug fix or feature request (example)\n\nDescription\nopenapi-generator version\n7.1.0, latest\nOpenAPI declaration file content or URL\ninfo:\n  description: Normalizer issue repro\n  title: Normalizer issue repro\n  version: 1.0.0\nopenapi: 3.0.0\npaths:\n  /item:\n    get:\n      responses:\n        '200':\n          description: successful operation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Item'\n                \ncomponents:\n  schemas:\n    Item:\n      properties:\n        hashes:\n          allOf:\n            - $ref: '#/components/schemas/ItemHashes'\n          description: Map of all hashes\n          nullable: true\n      type: object\n\n    ItemHashes:\n      properties:\n        data:\n          description: Data hash\n          type: string\n      type: object\nThe crucial part is nullable: true in the Item.hashes property. Without it, the allOf is simplified to a flat model. However, nullable bails it out of this flattening, resulting in a separate composite schema.\nGeneration Details\njava -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar generate -g java -i normalizer.yaml -o /tmp/java/ --openapi-normalizer REF_AS_PARENT_IN_ALLOF=true\n\nSteps to reproduce\nRun the command above. It will get stuck with no output, and eventually crash with OutOfMemory.\nWhen debugging,I can see that it gets into an infinite while loop in DefaultCodegen#updateAllModels.\nThe reason is name conflict with two schemas:\n\nItemHashes - the one explicitly defined in the spec above\nItem_hashes - the autogenerated schema describing the hashes property of the Item schema. This property is defined as allOf. It has parent: ItemHashes\n\nSo far so good and matches the spec.\nNow, the both schemas produce the identical model name (via toModelName()): ItemHashes. Model name is used as the key, hence one overwrites the other.\nSo, the Item_hashes model with parent: ItemHashesresults inItemHasheswithparent: ItemHashes` - self-reference. This circular references makes the while loop in the normalizer infinite.\nThe example spec seems totally legit otherwise. And it's not even manually crafted - it's generated by https://github.com/marshmallow-code/apispec from the source python code.\nRelated issues/PRs\nSuggest a fix\nI don't have a fix in mind.\nAs a local workaround I can try using model name mapping to avoid the naming conflict. Also after upgrading the spec from 3.0.0  to 3.1.0, the nullability is represented differently, and this allows to flatten the allOf schema."
}