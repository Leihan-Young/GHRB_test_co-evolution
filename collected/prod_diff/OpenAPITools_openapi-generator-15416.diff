diff --git a/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java b/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java
index eb831dfa544..a1b6d5dd7b9 100644
--- a/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java
+++ b/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java
@@ -99,6 +99,8 @@ public class JavaClientCodegen extends AbstractJavaCodegen
     public static final String SERIALIZATION_LIBRARY_JACKSON = "jackson";
     public static final String SERIALIZATION_LIBRARY_JSONB = "jsonb";
 
+    public static final String GENERATE_CLIENT_AS_BEAN = "generateClientAsBean";
+
     protected String gradleWrapperPackage = "gradle.wrapper";
     protected boolean useRxJava = false;
     protected boolean useRxJava2 = false;
@@ -132,6 +134,7 @@ public class JavaClientCodegen extends AbstractJavaCodegen
     protected Map<String, MpRestClientVersion> mpRestClientVersions = new HashMap<>();
     protected boolean useSingleRequestParameter = false;
     protected boolean webclientBlockingOperations = false;
+    protected boolean generateClientAsBean = false;
 
     private static class MpRestClientVersion {
         public final String rootPackage;
@@ -445,6 +448,10 @@ public class JavaClientCodegen extends AbstractJavaCodegen
             additionalProperties.put(SUPPORT_URL_QUERY, Boolean.parseBoolean(additionalProperties.get(SUPPORT_URL_QUERY).toString()));
         }
 
+        if (additionalProperties.containsKey(GENERATE_CLIENT_AS_BEAN)) {
+            this.setGenerateClientAsBean(convertPropertyToBooleanAndWriteBack(GENERATE_CLIENT_AS_BEAN));
+        }
+
         final String invokerFolder = (sourceFolder + '/' + invokerPackage).replace(".", "/");
         final String apiFolder = (sourceFolder + '/' + apiPackage).replace(".", "/");
         final String modelsFolder = (sourceFolder + File.separator + modelPackage().replace('.', File.separatorChar)).replace('/', File.separatorChar);
@@ -1195,6 +1202,10 @@ public class JavaClientCodegen extends AbstractJavaCodegen
         this.errorObjectType = errorObjectType;
     }
 
+    public void setGenerateClientAsBean(boolean generateClientAsBean) {
+        this.generateClientAsBean = generateClientAsBean;
+    }
+
     /**
      * Serialization library.
      *
