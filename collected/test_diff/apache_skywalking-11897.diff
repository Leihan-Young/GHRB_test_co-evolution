diff --git a/oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/test/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCHistoryDeleteDAOIT.java b/oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/test/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCHistoryDeleteDAOIT.java
index 7e93d08c27..c0a729ba29 100644
--- a/oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/test/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCHistoryDeleteDAOIT.java
+++ b/oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/test/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/common/dao/JDBCHistoryDeleteDAOIT.java
@@ -122,7 +122,7 @@ class JDBCHistoryDeleteDAOIT {
         var jdbcHistoryDeleteDAO = new JDBCHistoryDeleteDAO(jdbcClient, tableHelper, tableInstaller, clock);
         jdbcHistoryDeleteDAO.deleteHistory(model, "time_bucket", 3);
         try (final var conn = jdbcClient.getConnection();
-             final var rs = conn.getMetaData().getTables(conn.getCatalog(), null, "service_traffic_20230317", null)) {
+             final var rs = conn.getMetaData().getTables(conn.getCatalog(), conn.getSchema(), "service_traffic_20230317", null)) {
             assertThat(rs.next()).isTrue();
         }
 
@@ -131,12 +131,12 @@ class JDBCHistoryDeleteDAOIT {
         jdbcHistoryDeleteDAO = new JDBCHistoryDeleteDAO(jdbcClient, tableHelper, tableInstaller, clock);
         jdbcHistoryDeleteDAO.deleteHistory(model, "time_bucket", 3);
         try (final var conn = jdbcClient.getConnection();
-             final var rs = conn.getMetaData().getTables(conn.getCatalog(), null, "service_traffic_20230317", null)) {
+             final var rs = conn.getMetaData().getTables(conn.getCatalog(), conn.getSchema(), "service_traffic_20230317", null)) {
             assertThat(rs.next()).isFalse();
         }
         // ... and should create the new table
         try (final var conn = jdbcClient.getConnection();
-             final var rs = conn.getMetaData().getTables(conn.getCatalog(), null, "service_traffic_20230322", null)) {
+             final var rs = conn.getMetaData().getTables(conn.getCatalog(), conn.getSchema(), "service_traffic_20230322", null)) {
             assertThat(rs.next()).isTrue();
         }
     }
