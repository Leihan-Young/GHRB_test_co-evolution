diff --git a/samples/client/petstore/java/okhttp-gson/src/test/java/org/openapitools/client/JSONTest.java b/samples/client/petstore/java/okhttp-gson/src/test/java/org/openapitools/client/JSONTest.java
index b0cd66291d2..6d2b8a90b92 100644
--- a/samples/client/petstore/java/okhttp-gson/src/test/java/org/openapitools/client/JSONTest.java
+++ b/samples/client/petstore/java/okhttp-gson/src/test/java/org/openapitools/client/JSONTest.java
@@ -587,4 +587,17 @@ public class JSONTest {
         });
         assertTrue(exception.getMessage().contains("Unexpected value 'sleeping'"));
     }
+
+    @Test
+    public void testPetUsingAllOf() {
+        Gson gson = json.getGson();
+        String json = "{\"photoUrls\":[\"http://a.com\"], \"id\": 5847, \"name\":\"tag test 1\", \"category\": {\"id\":888, \"name\":\"cat 1\"}, \"tags\":[ {\"id\":777, \"name\":\"tag 1\"}] }";
+        PetUsingAllOf p = gson.fromJson(json, PetUsingAllOf.class);
+	assertEquals(p.getId(), 5847L);
+	assertEquals(p.getName(), "tag test 1");
+	assertEquals(p.getCategory().getId(), 888L);
+	assertEquals(p.getCategory().getName(), "cat 1");
+	assertEquals(p.getTags().get(0).getId(), 777L);
+	assertEquals(p.getTags().get(0).getName(), "tag 1");
+    }
 }
diff --git a/samples/client/petstore/java/okhttp-gson/src/test/java/org/openapitools/client/model/PetUsingAllOfTest.java b/samples/client/petstore/java/okhttp-gson/src/test/java/org/openapitools/client/model/PetUsingAllOfTest.java
new file mode 100644
index 00000000000..62afc3dbcfe
--- /dev/null
+++ b/samples/client/petstore/java/okhttp-gson/src/test/java/org/openapitools/client/model/PetUsingAllOfTest.java
@@ -0,0 +1,92 @@
+/*
+ * OpenAPI Petstore
+ * This spec is mainly for testing Petstore server and contains fake endpoints, models. Please do not use this for any other purpose. Special characters: \" \\
+ *
+ * The version of the OpenAPI document: 1.0.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+
+package org.openapitools.client.model;
+
+import com.google.gson.TypeAdapter;
+import com.google.gson.annotations.JsonAdapter;
+import com.google.gson.annotations.SerializedName;
+import com.google.gson.stream.JsonReader;
+import com.google.gson.stream.JsonWriter;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+import org.openapitools.client.model.Category;
+import org.openapitools.client.model.Tag;
+import org.junit.jupiter.api.Disabled;
+import org.junit.jupiter.api.Test;
+
+/**
+ * Model tests for PetUsingAllOf
+ */
+public class PetUsingAllOfTest {
+    private final PetUsingAllOf model = new PetUsingAllOf();
+
+    /**
+     * Model tests for PetUsingAllOf
+     */
+    @Test
+    public void testPetUsingAllOf() {
+        // TODO: test PetUsingAllOf
+    }
+
+    /**
+     * Test the property 'id'
+     */
+    @Test
+    public void idTest() {
+        // TODO: test id
+    }
+
+    /**
+     * Test the property 'category'
+     */
+    @Test
+    public void categoryTest() {
+        // TODO: test category
+    }
+
+    /**
+     * Test the property 'name'
+     */
+    @Test
+    public void nameTest() {
+        // TODO: test name
+    }
+
+    /**
+     * Test the property 'photoUrls'
+     */
+    @Test
+    public void photoUrlsTest() {
+        // TODO: test photoUrls
+    }
+
+    /**
+     * Test the property 'tags'
+     */
+    @Test
+    public void tagsTest() {
+        // TODO: test tags
+    }
+
+    /**
+     * Test the property 'status'
+     */
+    @Test
+    public void statusTest() {
+        // TODO: test status
+    }
+
+}
