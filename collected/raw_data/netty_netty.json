[
  {
    "repository": {
      "pullRequest": {
        "title": "Not create stack variable when adjustMarkers.",
        "url": "https://github.com/netty/netty/pull/11033",
        "resourcePath": "/netty/netty/pull/11033",
        "createdAt": "2021-02-21T09:03:29Z",
        "number": 11033,
        "mergeCommit": {
          "oid": "a60825c3b425892af9be3e9284677aa8a58faa6b",
          "message": "Dont create stack variable in adjustMarkers. (#11033)\n\nMotivation:\r\n\r\nNo extra variable is needed.\r\n\r\nModification:\r\n\r\nRemove extra variable\r\n\r\nResult:\r\n\r\nFixes #11032",
          "commitUrl": "https://github.com/netty/netty/commit/a60825c3b425892af9be3e9284677aa8a58faa6b",
          "parents": {
            "nodes": [
              {
                "oid": "5158e3976dcdcb0ed878763ca0fa2014c8f949d4",
                "message": "Less noisy logging in `DnsServerAddressStreamProviders` (#11031)\n\n\r\nMotivation:\r\n\r\nIt is not uncommon to run Netty on OS X without the specific\r\n`MacOSDnsServerAddressStreamProvider`. The current log message is too\r\nverbose because it prints a full stack trace on the console while a\r\nsimple logging message would have been enough.\r\n\r\nModifications:\r\n\r\n- Print a `WARN` message when `MacOSDnsServerAddressStreamProvider`\r\nclass is not found;\r\n- Print a `ERROR` message with a stack trace when the class was found\r\nbut could not be loaded due to some other reasons;\r\n\r\nResult:\r\n\r\nLess noise in logs."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTc3MDc3NTAxOjlmNWIyZTcwYTFkNDcwMTY3YmUyYjYzZTRhMGM2NmIwYzM4YjMyZWM=",
                "url": "https://github.com/netty/netty/pull/11033/commits/9f5b2e70a1d470167be2b63e4a0c66b0c38b32ec"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11032,
                "url": "https://github.com/netty/netty/issues/11032",
                "title": "Code clean at io.netty.buffer.AbstractByteBuf#adjustMarkers",
                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/28d4154fffc9c51f73b5969c64d74ca17ca4baba/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java#L257-L271\">netty/buffer/src/main/java/io/netty/buffer/AbstractByteBuf.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 257 to 271\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/28d4154fffc9c51f73b5969c64d74ca17ca4baba\">28d4154</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L257\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"257\"></td>\n          <td id=\"LC257\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">protected</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">adjustMarkers</span>(<span class=\"pl-smi\">int</span> <span class=\"pl-s1\">decrement</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L258\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"258\"></td>\n          <td id=\"LC258\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">markedReaderIndex</span> = <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">markedReaderIndex</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L259\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"259\"></td>\n          <td id=\"LC259\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">markedReaderIndex</span> &lt;= <span class=\"pl-s1\">decrement</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L260\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"260\"></td>\n          <td id=\"LC260\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">markedReaderIndex</span> = <span class=\"pl-c1\">0</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L261\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"261\"></td>\n          <td id=\"LC261\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">markedWriterIndex</span> = <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">markedWriterIndex</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L262\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"262\"></td>\n          <td id=\"LC262\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">markedWriterIndex</span> &lt;= <span class=\"pl-s1\">decrement</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L263\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"263\"></td>\n          <td id=\"LC263\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">markedWriterIndex</span> = <span class=\"pl-c1\">0</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L264\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"264\"></td>\n          <td id=\"LC264\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         } <span class=\"pl-k\">else</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L265\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"265\"></td>\n          <td id=\"LC265\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">markedWriterIndex</span> = <span class=\"pl-s1\">markedWriterIndex</span> - <span class=\"pl-s1\">decrement</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L266\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"266\"></td>\n          <td id=\"LC266\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L267\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"267\"></td>\n          <td id=\"LC267\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } <span class=\"pl-k\">else</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L268\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"268\"></td>\n          <td id=\"LC268\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">markedReaderIndex</span> = <span class=\"pl-s1\">markedReaderIndex</span> - <span class=\"pl-s1\">decrement</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L269\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"269\"></td>\n          <td id=\"LC269\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">markedWriterIndex</span> -= <span class=\"pl-s1\">decrement</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L270\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"270\"></td>\n          <td id=\"LC270\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L271\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"271\"></td>\n          <td id=\"LC271\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">It's unnecessary to create stack variable.</p>",
                "resourcePath": "/netty/netty/issues/11032",
                "createdAt": "2021-02-21T08:49:21Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix bug in Recycler with racing calls to recycle",
        "url": "https://github.com/netty/netty/pull/11037",
        "resourcePath": "/netty/netty/pull/11037",
        "createdAt": "2021-02-25T14:11:30Z",
        "number": 11037,
        "mergeCommit": {
          "oid": "dde82f62f07de5e794dda1c3324d8331ca522114",
          "message": "Fix bug in Recycler with racing calls to recycle (#11037)\n\nMotivation:\r\nIt is possible for two separate threads to race on recycling an object.\r\nIf this happens, the object might be added to a WeakOrderQueue when it shouldn't be.\r\nThe end result of this is that an object could be acquired multiple times, without a recycle in between.\r\nEffectively, it ends up in circulation twice.\r\n\r\nModification:\r\nWe fix this by making the update to the lastRecycledId field of the handle, an atomic state transition.\r\nOnly the thread that \"wins\" the race and succeeds in their state transition will be allowed to recycle the object.\r\nThe others will bail out on their recycling.\r\nWe use weakCompareAndSet because we only need the atomicity guarantee, and the program order within each thread is sufficient.\r\nAlso, spurious failures just means we won't recycle that particular object, which is fine.\r\n\r\nResult:\r\nObjects no longer risk circulating twice due to a recycle race.\r\n\r\nThis fixes #10986",
          "commitUrl": "https://github.com/netty/netty/commit/dde82f62f07de5e794dda1c3324d8331ca522114",
          "parents": {
            "nodes": [
              {
                "oid": "a60825c3b425892af9be3e9284677aa8a58faa6b",
                "message": "Dont create stack variable in adjustMarkers. (#11033)\n\nMotivation:\r\n\r\nNo extra variable is needed.\r\n\r\nModification:\r\n\r\nRemove extra variable\r\n\r\nResult:\r\n\r\nFixes #11032"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/Recycler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/RecyclerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTgwMTI4NDM3Ojk2OGRiZjZmYmNjYTVkMjRiNDE3OGY0NDY5M2I1ODhiYmJjYWFlMDY=",
                "url": "https://github.com/netty/netty/pull/11037/commits/968dbf6fbcca5d24b4178f44693b588bbbcaae06"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 10986,
                "url": "https://github.com/netty/netty/issues/10986",
                "title": "recycler has problems recycling objects in a multi-threaded environment",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">An object is collected in a multi-threaded environment and only exists in one queue.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">An object is collected in multiple queues in a multithreaded environment.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public void testMultipleRecycleAtDifferentThread() throws InterruptedException {\n        Recycler&lt;HandledObject&gt; recycler = newRecycler(1024);\n        final HandledObject object = recycler.get();\n        final AtomicReference&lt;IllegalStateException&gt; exceptionStore = new AtomicReference&lt;IllegalStateException&gt;();\n\n        final CountDownLatch countDownLatch = new CountDownLatch(2);\n        final Thread thread1 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                try{\n                    object.recycle();\n                }finally {\n                    countDownLatch.countDown();\n                }\n                \n            }\n        });\n        thread1.start();\n        //thread1.join();\n\n        final Thread thread2 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    object.recycle();\n                } catch (IllegalStateException e) {\n                    exceptionStore.set(e);\n                } finally {\n                    countDownLatch.countDown();\n                }\n            }\n        });\n        thread2.start();\n        //thread2.join();\n        \n        countDownLatch.await();\n        recycler.get();\n        IllegalStateException exception = exceptionStore.get();\n        if (exception != null) {\n            throw exception;\n        }\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">public void testMultipleRecycleAtDifferentThread() throws InterruptedException {\n        Recycler&lt;HandledObject&gt; recycler = newRecycler(1024);\n        final HandledObject object = recycler.get();\n        final AtomicReference&lt;IllegalStateException&gt; exceptionStore = new AtomicReference&lt;IllegalStateException&gt;();\n\n        final CountDownLatch countDownLatch = new CountDownLatch(2);\n        final Thread thread1 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                try{\n                    object.recycle();\n                }finally {\n                    countDownLatch.countDown();\n                }\n                \n            }\n        });\n        thread1.start();\n        //thread1.join();\n\n        final Thread thread2 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    object.recycle();\n                } catch (IllegalStateException e) {\n                    exceptionStore.set(e);\n                } finally {\n                    countDownLatch.countDown();\n                }\n            }\n        });\n        thread2.start();\n        //thread2.join();\n        \n        countDownLatch.await();\n        recycler.get();\n        IllegalStateException exception = exceptionStore.get();\n        if (exception != null) {\n            throw exception;\n        }\n    }\n</code></pre></div>\n<p dir=\"auto\">Breakpoint debugging recycler.get() method, you will find that there are two queues in the stack, holding the same object.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.59.Final-SNAPSHOT</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">1.8</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">masos</p>",
                "resourcePath": "/netty/netty/issues/10986",
                "createdAt": "2021-02-02T13:47:59Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Ensure removal from queue happens before writeAndFlush(...) is called",
        "url": "https://github.com/netty/netty/pull/11049",
        "resourcePath": "/netty/netty/pull/11049",
        "createdAt": "2021-03-02T08:10:53Z",
        "number": 11049,
        "mergeCommit": {
          "oid": "18c66a9d70e60d079f8ca1e1f265f80efbde10af",
          "message": "Ensure removal from queue happens before writeAndFlush(...) is called (#11049)\n\n\r\nMotivation:\r\n\r\nWe need to ensure that we call queue.remove() before we cal writeAndFlush() as this operation may cause an event that also touches the queue and remove from it. If we miss to do so we may see NoSuchElementExceptions.\r\n\r\nModifications:\r\n\r\n- Call queue.remove() before calling writeAndFlush(...)\r\n- Add unit test\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11046",
          "commitUrl": "https://github.com/netty/netty/commit/18c66a9d70e60d079f8ca1e1f265f80efbde10af",
          "parents": {
            "nodes": [
              {
                "oid": "690d1a53d5394c39f81d109210cdd0eaad176028",
                "message": "Add tests verifying channel configure/initialisation order (#11050)\n\nMotivation:\r\nChannels need to have their configurations applied before we can call out to user-code via handlerAdded and initChannel.\r\n\r\nModification:\r\nThis adds tests for this behaviour, which already works correctly.\r\n\r\nResult:\r\nBetter test coverage."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/stream/ChunkedWriteHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTgyODE4MTUzOjIwNjcwYWQyNmVkNjViNDg2NTQ1NjBkMDlhODkzMDRkOWFhMjQyMTc=",
                "url": "https://github.com/netty/netty/pull/11049/commits/20670ad26ed65b48654560d09a89304d9aa24217"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11046,
                "url": "https://github.com/netty/netty/issues/11046",
                "title": "Seeing NoSuchElementException in netty ChunkedWriteHandler class",
                "bodyHTML": "<p dir=\"auto\">Hi Netty team,</p>\n<p dir=\"auto\">We are occasionally seeing NoSuchElementException in netty ChunkedWriteHandler.doFlush() method due to remove() being called on empty queue.</p>\n<p dir=\"auto\">java.util.NoSuchElementException:<br>\nat java.util.ArrayDeque.removeFirst(ArrayDeque.java:285)<br>\nat java.util.ArrayDeque.remove(ArrayDeque.java:452)<br>\nat io.netty.handler.stream.ChunkedWriteHandler.doFlush(ChunkedWriteHandler.java:267)<br>\nat io.netty.handler.stream.ChunkedWriteHandler.resumeTransfer0(ChunkedWriteHandler.java:119)<br>\nat io.netty.handler.stream.ChunkedWriteHandler.access$000(ChunkedWriteHandler.java:68)<br>\nat io.netty.handler.stream.ChunkedWriteHandler$1.run(ChunkedWriteHandler.java:111)<br>\nat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)<br>\nat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)<br>\nat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:384)<br>\nat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)<br>\nat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)<br>\nat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)<br>\nat java.lang.Thread.run(Thread.java:748)</p>\n<p dir=\"auto\">It seems like the object containing the chunk element (PendingWrite) was found in the queue during peek() at the beginning of doFlush(). But later (few lines below), when it attempts to remove the element (PendingWrite) after writing/flushing the message, it seems like the queue was empty resulting in no such element exception.</p>\n<p dir=\"auto\">Looks like we are seeing this exception after upgrading netty version to 4.1.52.Final (from 4.1.42.Final) which has below change <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/netty/netty/commit/69cd04240195c4652413f7a14b7764981815968a/hovercard\" href=\"https://github.com/netty/netty/commit/69cd04240195c4652413f7a14b7764981815968a\"><tt>69cd042</tt></a>.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.52.Final</p>\n<p dir=\"auto\">Code using the Netty ChunkedWriteHandler class:<br>\n<a href=\"https://github.com/linkedin/ambry/blob/master/ambry-rest/src/main/java/com/github/ambry/rest/NettyResponseChannel.java\">https://github.com/linkedin/ambry/blob/master/ambry-rest/src/main/java/com/github/ambry/rest/NettyResponseChannel.java</a></p>",
                "resourcePath": "/netty/netty/issues/11046",
                "createdAt": "2021-03-01T19:28:23Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix NPE that can happen in the WriteTimeoutHandler when multiple exec\u2026",
        "url": "https://github.com/netty/netty/pull/11056",
        "resourcePath": "/netty/netty/pull/11056",
        "createdAt": "2021-03-03T19:29:14Z",
        "number": 11056,
        "mergeCommit": {
          "oid": "5d41611b7930293c2e986e0d640aa4aa790115ba",
          "message": "Fix NPE that can happen in the WriteTimeoutHandler when multiple executors are used (#11056)\n\nMotivation:\r\n\r\nIn WriteTimeoutHandler we did make the assumption that the executor which is used to schedule the timeout is the same that is backing the write promise. This may not be true which will cause concurrency issues\r\n\r\nModifications:\r\n\r\nEnsure we are on the right thread when try to modify the doubly-linked-list and if not schedule it on the right thread.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11053",
          "commitUrl": "https://github.com/netty/netty/commit/5d41611b7930293c2e986e0d640aa4aa790115ba",
          "parents": {
            "nodes": [
              {
                "oid": "8872c1454a7f23c1663db93672a3c8699dfc9f22",
                "message": "Allow to create PendingWriteQueue via a Channel (#11055)\n\nMotivation:\r\n\r\nAt the moment its only possible to create a PendingWriteQueue via a ChannelHandlerContext.\r\n\r\nModifications:\r\n\r\nAdd another constructor\r\n\r\nResult:\r\n\r\nMore flexible usage of PendingWriteQueue"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/timeout/WriteTimeoutHandler.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/java/io/netty/handler/timeout/WriteTimeoutHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTg0MjEwMzkyOmM0ZjJmNTIwY2I1NDdiZWUwMWYwNDI1NTkzMDI3ZTI2MDQzNjY1M2Q=",
                "url": "https://github.com/netty/netty/pull/11056/commits/c4f2f520cb547bee01f0425593027e260436653d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11053,
                "url": "https://github.com/netty/netty/issues/11053",
                "title": "NullPointerException from WriteTimeoutTask.operationComplete()",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Not to throw null pointer exception</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">An application was recently upgraded to Netty 4 and I am observing unexplainable Null pointer being thrown.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"2021-03-02T17:56:37,551 WARN  [DefaultPromise] An exception was thrown by io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask.operationComplete()\njava.lang.NullPointerException: null\n\tat io.netty.handler.timeout.WriteTimeoutHandler.removeWriteTimeoutTask(WriteTimeoutHandler.java:165) ~[db-8569c76d.jar:?]\n\tat io.netty.handler.timeout.WriteTimeoutHandler.access$000(WriteTimeoutHandler.java:66) ~[db-8569c76d.jar:?]\n\tat io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask.operationComplete(WriteTimeoutHandler.java:217)\"><pre class=\"notranslate\"><code class=\"notranslate\">2021-03-02T17:56:37,551 WARN  [DefaultPromise] An exception was thrown by io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask.operationComplete()\njava.lang.NullPointerException: null\n\tat io.netty.handler.timeout.WriteTimeoutHandler.removeWriteTimeoutTask(WriteTimeoutHandler.java:165) ~[db-8569c76d.jar:?]\n\tat io.netty.handler.timeout.WriteTimeoutHandler.access$000(WriteTimeoutHandler.java:66) ~[db-8569c76d.jar:?]\n\tat io.netty.handler.timeout.WriteTimeoutHandler$WriteTimeoutTask.operationComplete(WriteTimeoutHandler.java:217)\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">No definitive reproducible steps as this seems to happen sporadically. So far, the application is restarted and left alone, and in couple of minutes sometimes hours, the Null pointer exception pops up in the log.</p>\n<p dir=\"auto\">Perhaps someone more familiar with the internals  of the framework have an idea why and how this is happening?</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.59.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openjdk version &quot;11.0.9&quot; 2020-10-20 LTS\nOpenJDK Runtime Environment 18.9 (build 11.0.9+11-LTS)\nOpenJDK 64-Bit Server VM 18.9 (build 11.0.9+11-LTS, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">openjdk version \"11.0.9\" 2020-10-20 LTS\nOpenJDK Runtime Environment 18.9 (build 11.0.9+11-LTS)\nOpenJDK 64-Bit Server VM 18.9 (build 11.0.9+11-LTS, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Linux host 3.10.0-957.21.3.el7.x86_64 #1 SMP Tue Jun 18 16:35:19 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\"><pre class=\"notranslate\"><code class=\"notranslate\">Linux host 3.10.0-957.21.3.el7.x86_64 #1 SMP Tue Jun 18 16:35:19 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/11053",
                "createdAt": "2021-03-02T20:31:38Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow to config dns bind address in DnsNameResolver",
        "url": "https://github.com/netty/netty/pull/11061",
        "resourcePath": "/netty/netty/pull/11061",
        "createdAt": "2021-03-06T08:47:35Z",
        "number": 11061,
        "mergeCommit": {
          "oid": "0f12472b580bcbb34cbe84810077aa33c1091d14",
          "message": "Allow to config dns bind address in DnsNameResolver (#11061)\n\nMotivation:\r\n\r\nThe DnsResolver default start address listen to \"0.0.0.0\", which may be not what the user wants. \r\n\r\nModification:\r\n\r\nAdd localAddress as a param of DnsNameResolver and its builder\r\n\r\nResult:\r\n\r\nThe DnsNameResolver's bind address can be configured.",
          "commitUrl": "https://github.com/netty/netty/commit/0f12472b580bcbb34cbe84810077aa33c1091d14",
          "parents": {
            "nodes": [
              {
                "oid": "7d4aaa268b8a536f61fbc7711365147c58238745",
                "message": "Support session cache for client and server when using native SSLEngine implementation (#10994)\n\nMotivation:\r\n\r\nAt the moment we don't support session caching on the client side at all when using the native SSL implementation. We should at least allow to enable it.\r\n\r\nModification:\r\n\r\nAllow to enable session cache for client side but disable ti by default due a JDK bug atm.\r\n\r\nResult:\r\n\r\nBe able to cache sessions on the client side when using native SSL implementation ."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverBuilder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTg2MDI2NzMzOjUxMzRiYzQwMzk2Y2UxNGYxNjNmOGQ4ZTAzY2NlMDlhMGI4MzQ1ZjM=",
                "url": "https://github.com/netty/netty/pull/11061/commits/5134bc40396ce14f163f8d8e03cce09a0b8345f3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11054,
                "url": "https://github.com/netty/netty/issues/11054",
                "title": "Allow to config the listen address on DnsResolver",
                "bodyHTML": "<p dir=\"auto\">The DnsResolver default start address listen to \"0.0.0.0\", which may have some security risks.<br>\nCan we allow to config the listen address on DnsResolver?</p>",
                "resourcePath": "/netty/netty/issues/11054",
                "createdAt": "2021-03-03T08:12:48Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Return correct result for Futures that are returned from UnorderedThr\u2026",
        "url": "https://github.com/netty/netty/pull/11074",
        "resourcePath": "/netty/netty/pull/11074",
        "createdAt": "2021-03-10T13:29:26Z",
        "number": 11074,
        "mergeCommit": {
          "oid": "4949d4a0ad271d5d48e4f67f1b691c53c2bafe8c",
          "message": "Return correct result for Futures that are returned from UnorderedThreadPoolExecutor (#11074)\n\n\r\nMotivation:\r\n\r\nDue a regression in fd8c1874b4e24a18c562c7013efabcb155395459 we did not correctly set the result for the returned Future if it was build for a Callable.\r\n\r\nModifications:\r\n\r\n- Adjust code to call get() to retrive the correct result for notification of the future.\r\n- Add unit test\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11072",
          "commitUrl": "https://github.com/netty/netty/commit/4949d4a0ad271d5d48e4f67f1b691c53c2bafe8c",
          "parents": {
            "nodes": [
              {
                "oid": "e83132fcf2f3ee560826586043ed9a87ef2dcfbf",
                "message": "[maven-release-plugin] prepare for next development iteration"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/concurrent/PromiseTask.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/concurrent/UnorderedThreadPoolEventExecutor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/concurrent/UnorderedThreadPoolEventExecutorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTg5NjIxNTI1OmRjMzBiYWM1M2Y4N2U0YmI5Nzk5NWFiNTBjY2Y2M2UwYjViMWZhZTk=",
                "url": "https://github.com/netty/netty/pull/11074/commits/dc30bac53f87e4bb97995ab50ccf63e0b5b1fae9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11072,
                "url": "https://github.com/netty/netty/issues/11072",
                "title": "UnorderedThreadPoolEventExecutor's future.get() returns null",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">get() &amp; getNow() methods of futures returned by submit(task) method of UnorderedThreadPoolEventExecutor return the task's result</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">null is always returned</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">see code below</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import io.netty.util.concurrent.UnorderedThreadPoolEventExecutor;\nimport org.junit.Assert;\nimport org.junit.Test;\nimport java.util.concurrent.Future;\n\npublic class TestUnorderedThreadPoolEventExecutor {\n\n    @Test\n    public void testGet() throws Exception{\n        UnorderedThreadPoolEventExecutor executor = new UnorderedThreadPoolEventExecutor(1);\n        // compare: ScheduledThreadPoolExecutor executor = new ScheduledThreadPoolExecutor(1);\n\n        Future&lt;String&gt; f = executor.submit(() -&gt; &quot;completed!&quot;);\n\n        while(!f.isDone()) {\n            Thread.sleep(1);\n        }\n\n        Assert.assertNotNull(f.get());\n\n        executor.shutdown();\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">concurrent</span>.<span class=\"pl-s1\">UnorderedThreadPoolEventExecutor</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Assert</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">concurrent</span>.<span class=\"pl-s1\">Future</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">TestUnorderedThreadPoolEventExecutor</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">testGet</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span>{\n        <span class=\"pl-smi\">UnorderedThreadPoolEventExecutor</span> <span class=\"pl-s1\">executor</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">UnorderedThreadPoolEventExecutor</span>(<span class=\"pl-c1\">1</span>);\n        <span class=\"pl-c\">// compare: ScheduledThreadPoolExecutor executor = new ScheduledThreadPoolExecutor(1);</span>\n\n        <span class=\"pl-smi\">Future</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">f</span> = <span class=\"pl-s1\">executor</span>.<span class=\"pl-en\">submit</span>(() -&gt; <span class=\"pl-s\">\"completed!\"</span>);\n\n        <span class=\"pl-k\">while</span>(!<span class=\"pl-s1\">f</span>.<span class=\"pl-en\">isDone</span>()) {\n            <span class=\"pl-smi\">Thread</span>.<span class=\"pl-en\">sleep</span>(<span class=\"pl-c1\">1</span>);\n        }\n\n        <span class=\"pl-smi\">Assert</span>.<span class=\"pl-en\">assertNotNull</span>(<span class=\"pl-s1\">f</span>.<span class=\"pl-en\">get</span>());\n\n        <span class=\"pl-s1\">executor</span>.<span class=\"pl-en\">shutdown</span>();\n    }\n}</pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">All from 4.1.54.Final to 4.1.60.Final. Worked correctly in 4.1.53.Final.</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"1.8.0_275\"<br>\nOpenJDK Runtime Environment (AdoptOpenJDK)(build 1.8.0_275-b01)<br>\nOpenJDK 64-Bit Server VM (AdoptOpenJDK)(build 25.275-b01, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin 19.6.0 Darwin Kernel Version 19.6.0: Tue Jan 12 22:13:05 PST 2021; root:xnu-6153.141.16~1/RELEASE_X86_64 x86_64</p>",
                "resourcePath": "/netty/netty/issues/11072",
                "createdAt": "2021-03-09T13:46:52Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "defect"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make CompositeByteBuf throw IllegalStateException when components are missing",
        "url": "https://github.com/netty/netty/pull/11100",
        "resourcePath": "/netty/netty/pull/11100",
        "createdAt": "2021-03-18T13:49:07Z",
        "number": 11100,
        "mergeCommit": {
          "oid": "9f242d27e05651a909571f232dd1f5afb1aed20c",
          "message": "Make CompositeByteBuf throw IllegalStateException when components are missing (#11100)\n\nMotivation:\r\nComponents in a composite buffer can \"go missing\" if the composite is a slice of another composite and the parent has changed its layout.\r\n\r\nModification:\r\nWhere we would previously have thrown a NullPointerException, we now have a null-check for the component, and we instead throw an IllegalStateException with a more descriptive message.\r\n\r\nResult:\r\nIt's now a bit easier to understand what is going on in these situations.\r\n\r\nFixes #10908",
          "commitUrl": "https://github.com/netty/netty/commit/9f242d27e05651a909571f232dd1f5afb1aed20c",
          "parents": {
            "nodes": [
              {
                "oid": "bd62a9d6ffd9941d9e399cbbd73a10f06e38f217",
                "message": "Github Actions dawidd6/action-download-artifact set workflow_conclusion (#11096)\n\nMotivation:\r\nNewer versions of dawidd6/action-download-artifact changed the default\r\nworkflow_conclusion from \"completed\" to \"completed, success\" which can\r\nresult in download failures if the associated job fails, which is\r\nexpected when tests fail.\r\n\r\nModifications:\r\n- Explicitly set the workflow_conclusion to \"completed\"\r\n\r\nResult:\r\nTest failures which result in build failures will still download test\r\ndata and generate reports after updating\r\ndawidd6/action-download-artifact."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTk1NTg0MTgwOjRlNzQ0YTdhMzRjNzFhNzM5ZTQxNjUyMzdkNTMxMWQxNzJhNTIwNGE=",
                "url": "https://github.com/netty/netty/pull/11100/commits/4e744a7a34c71a739e4165237d5311d172a5204a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 10908,
                "url": "https://github.com/netty/netty/issues/10908",
                "title": "NullPointerException while accessing a readable slice of CompositeByteBuf after discarding some bytes",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">After skipping and discarding some bytes using <code class=\"notranslate\">skipBytes()</code> and <code class=\"notranslate\">discardSomeReadBytes()</code> functions in a <code class=\"notranslate\">CompositeByteBuf</code>, the readable bytes in the buffer should still be accessible.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Throws NullPointerException.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Exception in thread &quot;main&quot; java.lang.NullPointerException\n\tat io.netty.buffer.CompositeByteBuf.findIt(CompositeByteBuf.java:1604)\n\tat io.netty.buffer.CompositeByteBuf.findComponent0(CompositeByteBuf.java:1597)\n\tat io.netty.buffer.CompositeByteBuf._getByte(CompositeByteBuf.java:949)\n\tat io.netty.buffer.UnpooledSlicedByteBuf._getByte(UnpooledSlicedByteBuf.java:39)\n\tat io.netty.buffer.AbstractByteBuf.readByte(AbstractByteBuf.java:734)\n...\"><pre class=\"notranslate\"><code class=\"notranslate\">Exception in thread \"main\" java.lang.NullPointerException\n\tat io.netty.buffer.CompositeByteBuf.findIt(CompositeByteBuf.java:1604)\n\tat io.netty.buffer.CompositeByteBuf.findComponent0(CompositeByteBuf.java:1597)\n\tat io.netty.buffer.CompositeByteBuf._getByte(CompositeByteBuf.java:949)\n\tat io.netty.buffer.UnpooledSlicedByteBuf._getByte(UnpooledSlicedByteBuf.java:39)\n\tat io.netty.buffer.AbstractByteBuf.readByte(AbstractByteBuf.java:734)\n...\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ol dir=\"auto\">\n<li>Allocate a container using CompositeByteBuf</li>\n<li>Fill it with a segment</li>\n<li>Retain a slice of payload from the container for future access</li>\n<li>Skip retained number of bytes in the container</li>\n<li>Call <code class=\"notranslate\">discardSomeReadBytes()</code> on the container</li>\n<li>Try to access the sliced buffer from Step 3.</li>\n</ol>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import io.netty.buffer.ByteBuf;\nimport io.netty.buffer.CompositeByteBuf;\nimport io.netty.buffer.Unpooled;\nimport io.netty.util.ResourceLeakDetector;\n\npublic class BufBug {\n\n    static {\n        ResourceLeakDetector.setLevel(ResourceLeakDetector.Level.PARANOID);\n    }\n    private static final boolean EXPECTED = true;\n\n    public static void main(String[] args) {\n        // allocate a container\n        final CompositeByteBuf composite = Unpooled.compositeBuffer();\n        // fill it with a segment\n        composite.addComponent(true, Unpooled.copyBoolean(EXPECTED));\n        // take the whole payload (weirdly)\n        final ByteBuf sliced = composite.retainedSlice();\n        composite.skipBytes(sliced.readableBytes());\n        composite.discardSomeReadBytes();\n        // observe that &quot;sliced&quot; still claims to have readable bytes\n        System.out.println(&quot;readerIndex = &quot; + sliced.readerIndex()\n                + &quot;, writerIndex = &quot; + sliced.writerIndex()\n                + &quot;, readableBytes = &quot; + sliced.readableBytes());\n        // this should work, but throws\n        System.out.println(&quot;first byte = &quot; + sliced.readBoolean());\n        sliced.release();\n        // cleanup\n        composite.release();\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">import io.netty.buffer.ByteBuf;\nimport io.netty.buffer.CompositeByteBuf;\nimport io.netty.buffer.Unpooled;\nimport io.netty.util.ResourceLeakDetector;\n\npublic class BufBug {\n\n    static {\n        ResourceLeakDetector.setLevel(ResourceLeakDetector.Level.PARANOID);\n    }\n    private static final boolean EXPECTED = true;\n\n    public static void main(String[] args) {\n        // allocate a container\n        final CompositeByteBuf composite = Unpooled.compositeBuffer();\n        // fill it with a segment\n        composite.addComponent(true, Unpooled.copyBoolean(EXPECTED));\n        // take the whole payload (weirdly)\n        final ByteBuf sliced = composite.retainedSlice();\n        composite.skipBytes(sliced.readableBytes());\n        composite.discardSomeReadBytes();\n        // observe that \"sliced\" still claims to have readable bytes\n        System.out.println(\"readerIndex = \" + sliced.readerIndex()\n                + \", writerIndex = \" + sliced.writerIndex()\n                + \", readableBytes = \" + sliced.readableBytes());\n        // this should work, but throws\n        System.out.println(\"first byte = \" + sliced.readBoolean());\n        sliced.release();\n        // cleanup\n        composite.release();\n    }\n}\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">Affects 4.1.53.Final and 4.1.56.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">java.version: 11.0.2<br>\njava.vm.name: OpenJDK 64-Bit Server VM</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">os.name: Mac OS X<br>\nos.arch: x86_64<br>\nos.version: 10.15.7</p>",
                "resourcePath": "/netty/netty/issues/10908",
                "createdAt": "2021-01-04T01:21:09Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix alignment handling for pooled direct buffers",
        "url": "https://github.com/netty/netty/pull/11106",
        "resourcePath": "/netty/netty/pull/11106",
        "createdAt": "2021-03-22T16:38:12Z",
        "number": 11106,
        "mergeCommit": {
          "oid": "207108691976ac8ef646156b4289776d7966c4f7",
          "message": "Fix alignment handling for pooled direct buffers (#11106)\n\nMotivation:\r\nAlignment handling was broken, and basically turned into a fixed offset into each allocation address regardless of its initial value, instead of ensuring that the allocated address is either aligned or bumped to the nearest alignment offset.\r\nThe brokenness of the alignment handling extended so far, that overlapping ByteBuf instances could even be created, as was seen in #11101.\r\n\r\nModification:\r\nInstead of fixing the per-allocation pointer bump, we now ensure that 1) the minimum page size is a whole multiple of the alignment, and 2) the reference memory for each chunk is bumped to the nearest aligned address, and finally 3) ensured that the reservations are whole multiples of the alignment, thus ensuring that the next allocation automatically occurs from an aligned address.\r\n\r\nIncidentally, (3) above comes for free because the reservations are in whole pages, and in (1) we ensured that pages are sized in whole multiples of the alignment.\r\n\r\nIn order to ensure that the memory for a chunk is aligned, we introduce some new PlatformDependent infrastructure.\r\nThe PlatformDependent.alignDirectBuffer will produce a slice of the given buffer, and the slice will have an address that is aligned.\r\nThis method is plainly available on ByteBuffer in Java 9 onwards, but for pre-9 we have to use Unsafe, which means it can fail and might not be available on all platforms.\r\nAttempts to create a PooledByteBufAllocator that uses alignment, when this is not supported, will throw an exception.\r\nLuckily, I think use of aligned allocations are rare.\r\n\r\nResult:\r\nAligned pooled byte bufs now work correctly, and never have any overlap.\r\n\r\nFixes #11101",
          "commitUrl": "https://github.com/netty/netty/commit/207108691976ac8ef646156b4289776d7966c4f7",
          "parents": {
            "nodes": [
              {
                "oid": "30ff7f19347f055dd47272aa1cebdb5546027020",
                "message": "Do not send GOAWAY frame before connection preface (#11107)\n\nMotivation\r\n\r\nA GOAWAY frame (or any other HTTP/2 frame) should not be sent before the\r\nconnection preface. Clients that immediately close the channel may\r\ncurrently attempt to send a GOAWAY frame before the connection preface,\r\nresulting in servers receiving a seemingly-corrupt connection preface.\r\n\r\nModifications\r\n\r\n* Ensure that the preface has been sent before attempting to\r\nautomatically send a GOAWAY frame as part of channel shutdown logic\r\n* Add unit test that only passes with new behavior\r\n\r\nResult\r\n\r\nFixes https://github.com/netty/netty/issues/11026\r\n\r\nCo-authored-by: Bennett Lynch <Bennett-Lynch@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolArena.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolChunk.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PooledByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PooledByteBufAllocator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/AbstractPooledByteBufTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "buffer/src/test/java/io/netty/buffer/AlignedPooledByteBufAllocatorTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/PoolArenaTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "buffer/src/test/java/io/netty/buffer/PooledAlignedBigEndianDirectByteBufTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/PlatformDependent.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/PlatformDependent0.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTk4MTcwOTYzOjAyNTg0YjFkOTA0MDVjNTczYzdmMWM1OTZmNjQ5N2VhMGI0YjM2MjU=",
                "url": "https://github.com/netty/netty/pull/11106/commits/02584b1d90405c573c7f1c596f6497ea0b4b3625"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11101,
                "url": "https://github.com/netty/netty/issues/11101",
                "title": "direct memory allocation error in PooledByteBufAllocator when setting directMemoryCacheAlignment to \"1\"",
                "bodyHTML": "<p dir=\"auto\">Define a <code class=\"notranslate\">PooledByteBufAllocator</code> and set \u00b7directMemoryCacheAlignment\u00b7 to \"1\" and try to allocate some <code class=\"notranslate\">ByteBuf</code> like</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"PooledByteBufAllocator pooledByteBufAllocator = new PooledByteBufAllocator(\n        PlatformDependent.directBufferPreferred(),\n        PooledByteBufAllocator.defaultNumHeapArena(),\n        PooledByteBufAllocator.defaultNumDirectArena(),\n        PooledByteBufAllocator.defaultPageSize(),\n        11,\n        PooledByteBufAllocator.defaultSmallCacheSize(),\n        64,\n        PooledByteBufAllocator.defaultUseCacheForAllThreads(),\n        1\n);\n\nByteBuf buf1 = pooledByteBufAllocator.directBuffer(16384);\nfor (int i = 0; i &lt; 16384; i++) {\n    buf1.writeByte(1);\n}\nByteBuf buf2 = pooledByteBufAllocator.directBuffer(65536);\nbuf2.writeByte(2);\nSystem.out.println(&quot;last byte of buf1: &quot; + buf1.getByte(buf1.capacity() - 1));\"><pre class=\"notranslate\"><span class=\"pl-smi\">PooledByteBufAllocator</span> <span class=\"pl-s1\">pooledByteBufAllocator</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">PooledByteBufAllocator</span>(\n        <span class=\"pl-smi\">PlatformDependent</span>.<span class=\"pl-en\">directBufferPreferred</span>(),\n        <span class=\"pl-smi\">PooledByteBufAllocator</span>.<span class=\"pl-en\">defaultNumHeapArena</span>(),\n        <span class=\"pl-smi\">PooledByteBufAllocator</span>.<span class=\"pl-en\">defaultNumDirectArena</span>(),\n        <span class=\"pl-smi\">PooledByteBufAllocator</span>.<span class=\"pl-en\">defaultPageSize</span>(),\n        <span class=\"pl-c1\">11</span>,\n        <span class=\"pl-smi\">PooledByteBufAllocator</span>.<span class=\"pl-en\">defaultSmallCacheSize</span>(),\n        <span class=\"pl-c1\">64</span>,\n        <span class=\"pl-smi\">PooledByteBufAllocator</span>.<span class=\"pl-en\">defaultUseCacheForAllThreads</span>(),\n        <span class=\"pl-c1\">1</span>\n);\n\n<span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">buf1</span> = <span class=\"pl-s1\">pooledByteBufAllocator</span>.<span class=\"pl-en\">directBuffer</span>(<span class=\"pl-c1\">16384</span>);\n<span class=\"pl-k\">for</span> (<span class=\"pl-smi\">int</span> <span class=\"pl-s1\">i</span> = <span class=\"pl-c1\">0</span>; <span class=\"pl-s1\">i</span> &lt; <span class=\"pl-c1\">16384</span>; <span class=\"pl-s1\">i</span>++) {\n    <span class=\"pl-s1\">buf1</span>.<span class=\"pl-en\">writeByte</span>(<span class=\"pl-c1\">1</span>);\n}\n<span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">buf2</span> = <span class=\"pl-s1\">pooledByteBufAllocator</span>.<span class=\"pl-en\">directBuffer</span>(<span class=\"pl-c1\">65536</span>);\n<span class=\"pl-s1\">buf2</span>.<span class=\"pl-en\">writeByte</span>(<span class=\"pl-c1\">2</span>);\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"last byte of buf1: \"</span> + <span class=\"pl-s1\">buf1</span>.<span class=\"pl-en\">getByte</span>(<span class=\"pl-s1\">buf1</span>.<span class=\"pl-en\">capacity</span>() - <span class=\"pl-c1\">1</span>));</pre></div>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">last byte of the buf1: 1</code></p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">last byte of the buf1: 2</code></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"PooledByteBufAllocator pooledByteBufAllocator = new PooledByteBufAllocator(\n        PlatformDependent.directBufferPreferred(),\n        PooledByteBufAllocator.defaultNumHeapArena(),\n        PooledByteBufAllocator.defaultNumDirectArena(),\n        PooledByteBufAllocator.defaultPageSize(),\n        11,\n        PooledByteBufAllocator.defaultSmallCacheSize(),\n        64,\n        PooledByteBufAllocator.defaultUseCacheForAllThreads(),\n        1\n);\n\nByteBuf buf1 = pooledByteBufAllocator.directBuffer(16384);\nByteBuf buf2 = pooledByteBufAllocator.directBuffer(65536);\nSystem.out.println(&quot;memory address of buf1: [&quot; + buf1.memoryAddress() + &quot;, &quot; + (buf1.memoryAddress() + buf1.capacity()) + &quot;)&quot;);\nSystem.out.println(&quot;memory address of buf2: [&quot; + buf2.memoryAddress() + &quot;, &quot; + (buf2.memoryAddress() + buf2.capacity()) + &quot;)&quot;);\"><pre class=\"notranslate\"><span class=\"pl-smi\">PooledByteBufAllocator</span> <span class=\"pl-s1\">pooledByteBufAllocator</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">PooledByteBufAllocator</span>(\n        <span class=\"pl-smi\">PlatformDependent</span>.<span class=\"pl-en\">directBufferPreferred</span>(),\n        <span class=\"pl-smi\">PooledByteBufAllocator</span>.<span class=\"pl-en\">defaultNumHeapArena</span>(),\n        <span class=\"pl-smi\">PooledByteBufAllocator</span>.<span class=\"pl-en\">defaultNumDirectArena</span>(),\n        <span class=\"pl-smi\">PooledByteBufAllocator</span>.<span class=\"pl-en\">defaultPageSize</span>(),\n        <span class=\"pl-c1\">11</span>,\n        <span class=\"pl-smi\">PooledByteBufAllocator</span>.<span class=\"pl-en\">defaultSmallCacheSize</span>(),\n        <span class=\"pl-c1\">64</span>,\n        <span class=\"pl-smi\">PooledByteBufAllocator</span>.<span class=\"pl-en\">defaultUseCacheForAllThreads</span>(),\n        <span class=\"pl-c1\">1</span>\n);\n\n<span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">buf1</span> = <span class=\"pl-s1\">pooledByteBufAllocator</span>.<span class=\"pl-en\">directBuffer</span>(<span class=\"pl-c1\">16384</span>);\n<span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">buf2</span> = <span class=\"pl-s1\">pooledByteBufAllocator</span>.<span class=\"pl-en\">directBuffer</span>(<span class=\"pl-c1\">65536</span>);\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"memory address of buf1: [\"</span> + <span class=\"pl-s1\">buf1</span>.<span class=\"pl-en\">memoryAddress</span>() + <span class=\"pl-s\">\", \"</span> + (<span class=\"pl-s1\">buf1</span>.<span class=\"pl-en\">memoryAddress</span>() + <span class=\"pl-s1\">buf1</span>.<span class=\"pl-en\">capacity</span>()) + <span class=\"pl-s\">\")\"</span>);\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"memory address of buf2: [\"</span> + <span class=\"pl-s1\">buf2</span>.<span class=\"pl-en\">memoryAddress</span>() + <span class=\"pl-s\">\", \"</span> + (<span class=\"pl-s1\">buf2</span>.<span class=\"pl-en\">memoryAddress</span>() + <span class=\"pl-s1\">buf2</span>.<span class=\"pl-en\">capacity</span>()) + <span class=\"pl-s\">\")\"</span>);</pre></div>\n<p dir=\"auto\">Got 2 overlapped ranges(on my pc)<br>\nmemory address of buf1: [2047716884545, 2047716900929)<br>\nmemory address of buf2: [2047716900928, 2047716966464)</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.60.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">1.8.0_271</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">win10</p>",
                "resourcePath": "/netty/netty/issues/11101",
                "createdAt": "2021-03-19T12:14:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Do not send GOAWAY frame before connection preface",
        "url": "https://github.com/netty/netty/pull/11107",
        "resourcePath": "/netty/netty/pull/11107",
        "createdAt": "2021-03-22T16:50:26Z",
        "number": 11107,
        "mergeCommit": {
          "oid": "30ff7f19347f055dd47272aa1cebdb5546027020",
          "message": "Do not send GOAWAY frame before connection preface (#11107)\n\nMotivation\r\n\r\nA GOAWAY frame (or any other HTTP/2 frame) should not be sent before the\r\nconnection preface. Clients that immediately close the channel may\r\ncurrently attempt to send a GOAWAY frame before the connection preface,\r\nresulting in servers receiving a seemingly-corrupt connection preface.\r\n\r\nModifications\r\n\r\n* Ensure that the preface has been sent before attempting to\r\nautomatically send a GOAWAY frame as part of channel shutdown logic\r\n* Add unit test that only passes with new behavior\r\n\r\nResult\r\n\r\nFixes https://github.com/netty/netty/issues/11026\r\n\r\nCo-authored-by: Bennett Lynch <Bennett-Lynch@users.noreply.github.com>",
          "commitUrl": "https://github.com/netty/netty/commit/30ff7f19347f055dd47272aa1cebdb5546027020",
          "parents": {
            "nodes": [
              {
                "oid": "4f316b7cbd8af2bbf47319c82941a6f80afcb609",
                "message": "Fix exception if Response has content (#11093)\n\nMotivation:\n\nIf compression is enabled and the HttpResponse also\nimplements HttpContent (but not LastHttpContent) then\nthe buffer will be freed to eagerly.\n\nModification:\n\nI retain the buffer the same way that is done for the LastHttpContent case.\n\nNote that there is another suspicious looking call a few lines above (if beginEncode returns null). I am not sure if this should also be retained.\n\nResult:\n\nFixes #11092"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTk4MTc5NzY4OjVhMWVlYTVmNGY3OGQ1MTJjOTUyZTFmYjIxMGYyYTYyMWI3NzU5ODM=",
                "url": "https://github.com/netty/netty/pull/11107/commits/5a1eea5f4f78d512c952e1fb210f2a621b775983"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11026,
                "url": "https://github.com/netty/netty/issues/11026",
                "title": "Http2ConnectionHandler may send GOAWAY frame before connection preface",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">A <a href=\"https://tools.ietf.org/html/rfc7540#section-6.8\" rel=\"nofollow\">GOAWAY frame</a> (or any other HTTP/2 frame) should not be sent before the <a href=\"https://tools.ietf.org/html/rfc7540#section-3.5\" rel=\"nofollow\">connection preface</a>.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">If a connection is terminated early from the client-side, the <code class=\"notranslate\">Http2ConnectionHandler</code> may attempt to send a GOAWAY frame as part of the channel's shutdown logic, even if a connection preface was not yet sent.</p>\n<p dir=\"auto\">On the server-side, this results in errors like:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 0000080700000000000000000000000000\"><pre class=\"notranslate\"><code class=\"notranslate\">io.netty.handler.codec.http2.Http2Exception: HTTP/2 client preface string missing or corrupt. Hex dump for received bytes: 0000080700000000000000000000000000\n</code></pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\"><a href=\"https://gist.github.com/Bennett-Lynch/19576c3d6f68ab79536b1bbe12d221a7\">https://gist.github.com/Bennett-Lynch/19576c3d6f68ab79536b1bbe12d221a7</a></p>\n<h3 dir=\"auto\">Relevant source code</h3>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/b0ec37d686898161583be692510dc2fb25f8ef25/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java#L249-L253\">netty/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 249 to 253\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/b0ec37d686898161583be692510dc2fb25f8ef25\">b0ec37d</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L249\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"249\"></td>\n          <td id=\"LC249\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L250\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"250\"></td>\n          <td id=\"LC250\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">channelActive</span>(<span class=\"pl-smi\">ChannelHandlerContext</span> <span class=\"pl-s1\">ctx</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L251\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"251\"></td>\n          <td id=\"LC251\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-c\">// The channel just became active - send the connection preface to the remote endpoint.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L252\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"252\"></td>\n          <td id=\"LC252\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-en\">sendPreface</span>(<span class=\"pl-s1\">ctx</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L253\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"253\"></td>\n          <td id=\"LC253\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/b0ec37d686898161583be692510dc2fb25f8ef25/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java#L457-L478\">netty/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 457 to 478\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/b0ec37d686898161583be692510dc2fb25f8ef25\">b0ec37d</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L457\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"457\"></td>\n          <td id=\"LC457\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L458\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"458\"></td>\n          <td id=\"LC458\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">close</span>(<span class=\"pl-smi\">ChannelHandlerContext</span> <span class=\"pl-s1\">ctx</span>, <span class=\"pl-smi\">ChannelPromise</span> <span class=\"pl-s1\">promise</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L459\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"459\"></td>\n          <td id=\"LC459\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">decoupleCloseAndGoAway</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L460\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"460\"></td>\n          <td id=\"LC460\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">close</span>(<span class=\"pl-s1\">promise</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L461\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"461\"></td>\n          <td id=\"LC461\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">return</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L462\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"462\"></td>\n          <td id=\"LC462\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L463\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"463\"></td>\n          <td id=\"LC463\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-s1\">promise</span> = <span class=\"pl-s1\">promise</span>.<span class=\"pl-en\">unvoid</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L464\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"464\"></td>\n          <td id=\"LC464\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-c\">// Avoid NotYetConnectedException</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L465\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"465\"></td>\n          <td id=\"LC465\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> (!<span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">isActive</span>()) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L466\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"466\"></td>\n          <td id=\"LC466\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">close</span>(<span class=\"pl-s1\">promise</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L467\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"467\"></td>\n          <td id=\"LC467\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">return</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L468\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"468\"></td>\n          <td id=\"LC468\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L469\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"469\"></td>\n          <td id=\"LC469\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L470\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"470\"></td>\n          <td id=\"LC470\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-c\">// If the user has already sent a GO_AWAY frame they may be attempting to do a graceful shutdown which requires</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L471\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"471\"></td>\n          <td id=\"LC471\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-c\">// sending multiple GO_AWAY frames. We should only send a GO_AWAY here if one has not already been sent. If</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L472\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"472\"></td>\n          <td id=\"LC472\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-c\">// a GO_AWAY has been sent we send a empty buffer just so we can wait to close until all other data has been</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L473\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"473\"></td>\n          <td id=\"LC473\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-c\">// flushed to the OS.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L474\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"474\"></td>\n          <td id=\"LC474\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-c\">// https://github.com/netty/netty/issues/5307</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L475\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"475\"></td>\n          <td id=\"LC475\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-smi\">ChannelFuture</span> <span class=\"pl-s1\">f</span> = <span class=\"pl-en\">connection</span>().<span class=\"pl-en\">goAwaySent</span>() ? <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">write</span>(<span class=\"pl-c1\">EMPTY_BUFFER</span>) : <span class=\"pl-en\">goAway</span>(<span class=\"pl-s1\">ctx</span>, <span class=\"pl-c1\">null</span>, <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">newPromise</span>()); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L476\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"476\"></td>\n          <td id=\"LC476\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">flush</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L477\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"477\"></td>\n          <td id=\"LC477\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-en\">doGracefulShutdown</span>(<span class=\"pl-s1\">ctx</span>, <span class=\"pl-s1\">f</span>, <span class=\"pl-s1\">promise</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L478\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"478\"></td>\n          <td id=\"LC478\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/b0ec37d686898161583be692510dc2fb25f8ef25/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java#L306-L307\">netty/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 306 to 307\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/b0ec37d686898161583be692510dc2fb25f8ef25\">b0ec37d</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L306\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"306\"></td>\n          <td id=\"LC306\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">throw</span> <span class=\"pl-en\">connectionError</span>(<span class=\"pl-c1\">PROTOCOL_ERROR</span>, <span class=\"pl-s\">\"HTTP/2 client preface string missing or corrupt. \"</span> + </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L307\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"307\"></td>\n          <td id=\"LC307\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                                       <span class=\"pl-s\">\"Hex dump for received bytes: %s\"</span>, <span class=\"pl-s1\">receivedBytes</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>",
                "resourcePath": "/netty/netty/issues/11026",
                "createdAt": "2021-02-17T23:43:32Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "AbstractKQueueChannel#writeFilter is invoked with the correct boolean\u2026",
        "url": "https://github.com/netty/netty/pull/11128",
        "resourcePath": "/netty/netty/pull/11128",
        "createdAt": "2021-03-30T16:32:20Z",
        "number": 11128,
        "mergeCommit": {
          "oid": "41ef4e4b025a4113b7fdabdf903b958f56e0d330",
          "message": "AbstractKQueueChannel#writeFilter is invoked with the correct boolean depending on the ChannelOutboundBuffer state (#11128)\n\nMotivation:\r\n\r\nThis is a regression caused by #11086\r\n\r\nModifications:\r\n\r\nAbstractKQueueChannel#writeFilter should be invoked with `!in.isEmpty()`\r\n- false - all messages are written\r\n- true - there are still messages to be written\r\n\r\nResult:\r\n\r\nAbstractKQueueChannel#writeFilter is invoked with the correct boolean depending on the ChannelOutboundBuffer state",
          "commitUrl": "https://github.com/netty/netty/commit/41ef4e4b025a4113b7fdabdf903b958f56e0d330",
          "parents": {
            "nodes": [
              {
                "oid": "ff0c014adec2418d3a2e7d82309d8156e760c539",
                "message": "Skip deployment of testsuite jars (#11127)\n\nMotivation:\r\n\r\nWe should skip the deployment of jars that are not meant to be consumed by the user as there is no public API.\r\n\r\nModifications:\r\n\r\nLet's skip deployment for modules that are not useful for users\r\n\r\nResult:\r\n\r\nBuild cleanup"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDatagramChannel.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjA0MDUwMjc0OjAyNzBkZmQ3N2M3ODdhZDMwOTgyOWM1OWZjODc0NGI0MWYzNzFkN2M=",
                "url": "https://github.com/netty/netty/pull/11128/commits/0270dfd77c787ad309829c59fc8744b41f371d7c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1569,
                "url": "https://github.com/reactor/reactor-netty/issues/1569",
                "title": "reactor.netty.udp.UdpClientTest#smokeTest fails with Netty 4.1.61.Final",
                "bodyHTML": "<p dir=\"auto\">This is a regression caused by <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"831152384\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/11086\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/11086/hovercard\" href=\"https://github.com/netty/netty/pull/11086\">netty/netty#11086</a></p>\n<p dir=\"auto\">CI is failing <a href=\"https://github.com/reactor/reactor-netty/runs/2228620315?check_suite_focus=true#step:5:1073\">https://github.com/reactor/reactor-netty/runs/2228620315?check_suite_focus=true#step:5:1073</a></p>",
                "resourcePath": "/reactor/reactor-netty/issues/1569",
                "createdAt": "2021-03-30T16:12:48Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type/bug"
                      }
                    },
                    {
                      "node": {
                        "name": "for/netty"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "[Feature] HTTP Cache",
        "url": "https://github.com/netty/netty/pull/11134",
        "resourcePath": "/netty/netty/pull/11134",
        "createdAt": "2021-04-01T08:41:20Z",
        "number": 11134,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/ChannelOption.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/DefaultChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/PendingWriteQueue.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/nio/AbstractNioMessageChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/socket/DatagramPacket.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/socket/DefaultDatagramChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/socket/nio/NioDatagramChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/bootstrap/BootstrapTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/bootstrap/ServerBootstrapTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/channel/DefaultFileRegionTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjA3MjAwNDY0OmY3ZTdiZDdhZGZmMDYxZmI1MWJlYTM2NWZmZDZlOTZhYzVmYWM5OTM=",
                "url": "https://github.com/netty/netty/pull/11134/commits/f7e7bd7adff061fb51bea365ffd6e96ac5fac993"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2646,
                "url": "https://github.com/netty/netty/issues/2646",
                "title": "Support HTTP Caching",
                "bodyHTML": "<p dir=\"auto\">Add support for <a href=\"http://tools.ietf.org/html/rfc7234\" rel=\"nofollow\">http://tools.ietf.org/html/rfc7234</a> in the http client code.  I'm not sure where the best place to plug in caching would be, but it seems like somewhere in the pipeline model, this would make sense to plugin in an http cache component.</p>",
                "resourcePath": "/netty/netty/issues/2646",
                "createdAt": "2014-07-08T20:16:18Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "help wanted"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "[Feature] HTTP Cache",
        "url": "https://github.com/netty/netty/pull/11135",
        "resourcePath": "/netty/netty/pull/11135",
        "createdAt": "2021-04-01T08:50:44Z",
        "number": 11135,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cache/HttpCache.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cache/HttpCacheEntry.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cache/HttpCacheEntryChecker.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cache/HttpCacheMemoryStorage.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cache/HttpCacheStorage.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cache/HttpClientCacheHandler.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cache/HttpResponseFromCacheGenerator.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cache/RequestCachingPolicy.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cache/ResponseCachingPolicy.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cache/package-info.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjA3MjE0MjM4OjFkMzU3NzIyNGJkNGM3ODc0NmQ3MmNmM2RkOTEyOThjNTIzMWViYmM=",
                "url": "https://github.com/netty/netty/pull/11135/commits/1d3577224bd4c78746d72cf3dd91298c5231ebbc"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2646,
                "url": "https://github.com/netty/netty/issues/2646",
                "title": "Support HTTP Caching",
                "bodyHTML": "<p dir=\"auto\">Add support for <a href=\"http://tools.ietf.org/html/rfc7234\" rel=\"nofollow\">http://tools.ietf.org/html/rfc7234</a> in the http client code.  I'm not sure where the best place to plug in caching would be, but it seems like somewhere in the pipeline model, this would make sense to plugin in an http cache component.</p>",
                "resourcePath": "/netty/netty/issues/2646",
                "createdAt": "2014-07-08T20:16:18Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "help wanted"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix behavior of HttpPostMultipartRequestDecoder for Memory based Factory",
        "url": "https://github.com/netty/netty/pull/11145",
        "resourcePath": "/netty/netty/pull/11145",
        "createdAt": "2021-04-07T06:52:01Z",
        "number": 11145,
        "mergeCommit": {
          "oid": "93f021141d93e6529215601ba6b5938e44f499c8",
          "message": "Fix behavior of HttpPostMultipartRequestDecoder for Memory based Factory (#11145)\n\nMotivation:\r\nWhen Memory based Factory is used, if the first chunk starts with Line Break, the HttpData\r\nis not filled with the current available buffer if the delimiter is not found yet, while it may\r\nadd some.\r\n\r\nFix JavaDoc to note potential wrong usage of content() or getByteBuf() if HttpDatais has\r\na huge content with the risk of Out Of Memory Exception.\r\n\r\nFix JavaDoc to explain how to release properly the Factory, whatever it is in Memory,\r\nDisk or Mixed mode.\r\n\r\nFix issue #11143\r\n\r\nModifications:\r\nFirst, when the delimiter is not found, instead of searching Line Break from readerIndex(), we should search\r\nfrom readerIndex() + readableBytes() - delimiter size, since this is the only part where usefull\r\nLine Break could be searched for, except if readableBytes is less than delimiter size (then we search from\r\nreaderIndex).\r\n\r\nSecond, when a Memory HttpData is created, it should be assigned an empty buffer to be\r\nconsistent with the other implementations (Disk or Mixed mode).\r\nWe cannot change the default behavior of the content() or getByteBuf() of the Memory based HttpData\r\nsince the ByteBuf is supposed to be null when released, but not empty.\r\nWhen a new ByteBuf is added, one more check verifies if the current ByteBuf is empty, and if so, it\r\nis released and replaced by the new one, without creating a new CompositeByteBuf.\r\n\r\nResult:\r\nIn the tests testBIgFileUploadDelimiterInMiddleChunkDecoderMemoryFactory and related for other modes,\r\nthe buffers are starting with a CRLF.\r\nWhen we offer only the prefix part of the multipart (no data at all), the current Partial HttpData has\r\nan empty buffer.\r\nThe first time we offer the data starting with CRLF to the decoder, it now\r\nhas a correct current Partial HttpData with a buffer not empty.\r\n\r\nThe Benchmark was re-run against this new version.\r\n\r\nOld Benchmark     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Mode\u00a0 Cnt\u00a0 Score\u00a0\u00a0 Error\u00a0\u00a0 Units\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigAdvancedLevel\u00a0\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 4,037 \u00b1 0,358\u00a0 ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigDisabledLevel\u00a0\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 4,226 \u00b1 0,471\u00a0 ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigParanoidLevel\u00a0\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 0,875 \u00b1 0,029\u00a0 ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigSimpleLevel\u00a0\u00a0\u00a0\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 4,346 \u00b1 0,275\u00a0 ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighAdvancedLevel\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 2,044 \u00b1 0,020\u00a0 ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighDisabledLevel\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 2,278 \u00b1 0,159\u00a0 ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighParanoidLevel\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 0,174 \u00b1 0,004\u00a0 ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighSimpleLevel\u00a0\u00a0\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 2,370 \u00b1 0,065\u00a0 ops/ms\r\n\r\nNew Benchmark                                                                       Mode  Cnt  Score   Error   Units\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigAdvancedLevel   thrpt    6  5,604 \u00b1 0,415  ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigDisabledLevel   thrpt    6  6,058 \u00b1 0,111  ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigParanoidLevel   thrpt    6  0,914 \u00b1 0,031  ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigSimpleLevel     thrpt    6  6,053 \u00b1 0,051  ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighAdvancedLevel  thrpt    6  2,636 \u00b1 0,141  ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighDisabledLevel  thrpt    6  3,033 \u00b1 0,181  ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighParanoidLevel  thrpt    6  0,178 \u00b1 0,006  ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighSimpleLevel    thrpt    6  2,859 \u00b1 0,189  ops/ms\r\n\r\nSo +20 to +40% improvement due to not searching for CRLF/LF into the full buffer when no delimiter is found,\r\nbut only from the end and delimiter size + 2 (CRLF).",
          "commitUrl": "https://github.com/netty/netty/commit/93f021141d93e6529215601ba6b5938e44f499c8",
          "parents": {
            "nodes": [
              {
                "oid": "16b40d8a37937fd6e73858db2f05bd1e778a1d6f",
                "message": "SslHandler consolidate state to save memory (#11160)\n\nMotivation:\r\nSslHandler has many independent boolean member variables. They can be\r\ncollapsed into a single variable to save memory.\r\n\r\nModifications:\r\n- SslHandler boolean state consolidated into a single short variable.\r\n\r\nResult:\r\nSavings of 8 bytes per SslHandler (which is per connection) observed on\r\nOpenJDK."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractMemoryHttpData.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/DefaultHttpDataFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpData.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostBodyUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestDecoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjEwMzg2NDI4OjQ3ZWU3MmZkMjg5NDlkYmJmZjk5NDY4MmUzZmJhYjA4ZGMwZDcyNTU=",
                "url": "https://github.com/netty/netty/pull/11145/commits/47ee72fd28949dbbff994682e3fbab08dc0d7255"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11143,
                "url": "https://github.com/netty/netty/issues/11143",
                "title": "HttpPostMultipartRequestDecoder may not add content to an existing upload after being offered data",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Once a file upload object exists in the multipart request decoder, but not finished, offering more data to the decoder should populate the buffer of the file object</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The buffer is not created/updated</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">git clone https://github.com/micronaut-projects/micronaut-core</code></li>\n<li><code class=\"notranslate\">git checkout upgrade-netty</code></li>\n<li><code class=\"notranslate\">./gradlew test-suite:test --tests \"io.micronaut.upload.StreamUploadSpec.test the file is not corrupted with transferTo\"</code></li>\n</ul>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.60+ due to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"802981593\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/11001\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/11001/hovercard\" href=\"https://github.com/netty/netty/pull/11001\">#11001</a></p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"1.8.0_282\"<br>\nOpenJDK Runtime Environment (AdoptOpenJDK)(build 1.8.0_282-b08)<br>\nOpenJDK 64-Bit Server VM (AdoptOpenJDK)(build 25.282-b08, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin MacBook-Pro.local 20.3.0 Darwin Kernel Version 20.3.0: Thu Jan 21 00:07:06 PST 2021; root:xnu-7195.81.3~1/RELEASE_X86_64 x86_64</p>\n<p dir=\"auto\">This issue is a blocker for Micronaut to upgrade Netty. With the functionality as it is, it is impossible to read a chunk of the file and release it immediately because new buffers are not set on the underlying file upload object.</p>\n<p dir=\"auto\">This line is the culprit. <a href=\"https://github.com/fredericBregier/netty/blob/6daeb0cc51d8689805c1a657e61d395450afec47/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java#L1187\">https://github.com/fredericBregier/netty/blob/6daeb0cc51d8689805c1a657e61d395450afec47/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java#L1187</a></p>\n<p dir=\"auto\">In my case <code class=\"notranslate\">posDelimiter</code> is 0, so the content is never added to the upload.</p>",
                "resourcePath": "/netty/netty/issues/11143",
                "createdAt": "2021-04-06T16:23:49Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Less blocking in ChunkedStream",
        "url": "https://github.com/netty/netty/pull/11150",
        "resourcePath": "/netty/netty/pull/11150",
        "createdAt": "2021-04-09T10:54:51Z",
        "number": 11150,
        "mergeCommit": {
          "oid": "df53de5b687cd25ba1079b556318da2b773cf4f1",
          "message": "Less blocking in ChunkedStream (#11150)\n\nMotivation:\r\nWe should avoid blocking in the event loop as much as possible.\r\nThe InputStream.read() is a blocking method, and we don't need to call it if available() returns a positive number.\r\n\r\nModification:\r\nBypass calling InputStream.read() if available() returns a positive number.\r\n\r\nResult:\r\nFewer blocking calls in the event loop, in general, when ChunkedStream is used.",
          "commitUrl": "https://github.com/netty/netty/commit/df53de5b687cd25ba1079b556318da2b773cf4f1",
          "parents": {
            "nodes": [
              {
                "oid": "6724786dcc9fa38ba516dab97a04e2bbc17e81d9",
                "message": "[maven-release-plugin] prepare for next development iteration"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/stream/ChunkedStream.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollSocketChannelConfigTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjEyMzYxMzMzOmFkZTBlNGFhZjZkZTc4OGQ4YTM1NDk0NzdmMGI0ODM3MThiMjRlNzc=",
                "url": "https://github.com/netty/netty/pull/11150/commits/ade0e4aaf6de788d8a3549477f0b483718b24e77"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11147,
                "url": "https://github.com/netty/netty/issues/11147",
                "title": "ChunkedInputStream isEndOfInput blocks event loop",
                "bodyHTML": "<p dir=\"auto\">In all versions of netty the ChunkedInputStream isEndOfInput uses b.read() which is blocking. This should instead use available()</p>",
                "resourcePath": "/netty/netty/issues/11147",
                "createdAt": "2021-04-08T16:40:22Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "SslHandler LocalChannel read/unwrap reentry fix",
        "url": "https://github.com/netty/netty/pull/11156",
        "resourcePath": "/netty/netty/pull/11156",
        "createdAt": "2021-04-14T00:52:57Z",
        "number": 11156,
        "mergeCommit": {
          "oid": "0ef2f05373be323f8a70a8e343473cf9e6f49683",
          "message": "SslHandler LocalChannel read/unwrap reentry fix (#11156)\n\nMotivation:\r\nSslHandler invokes channel.read() during the handshake process. For some\r\nchannel implementations (e.g. LocalChannel) this may result in re-entry\r\nconditions into unwrap. Unwrap currently defers updating the input\r\nbuffer indexes until the unwrap method returns to avoid intermediate\r\nupdates if not necessary, but this may result in unwrapping the same\r\ncontents multiple times which leads to handshake failures [1][2].\r\n\r\n[1] ssl3_get_record:decryption failed or bad record mac\r\n[2] ssl3_read_bytes:sslv3 alert bad record mac\r\n\r\nModifications:\r\n- SslHandler#unwrap updates buffer indexes on each iteration so that if\r\n  reentry scenario happens the correct indexes will be visible.\r\n\r\nResult:\r\nFixes https://github.com/netty/netty/issues/11146",
          "commitUrl": "https://github.com/netty/netty/commit/0ef2f05373be323f8a70a8e343473cf9e6f49683",
          "parents": {
            "nodes": [
              {
                "oid": "93f021141d93e6529215601ba6b5938e44f499c8",
                "message": "Fix behavior of HttpPostMultipartRequestDecoder for Memory based Factory (#11145)\n\nMotivation:\r\nWhen Memory based Factory is used, if the first chunk starts with Line Break, the HttpData\r\nis not filled with the current available buffer if the delimiter is not found yet, while it may\r\nadd some.\r\n\r\nFix JavaDoc to note potential wrong usage of content() or getByteBuf() if HttpDatais has\r\na huge content with the risk of Out Of Memory Exception.\r\n\r\nFix JavaDoc to explain how to release properly the Factory, whatever it is in Memory,\r\nDisk or Mixed mode.\r\n\r\nFix issue #11143\r\n\r\nModifications:\r\nFirst, when the delimiter is not found, instead of searching Line Break from readerIndex(), we should search\r\nfrom readerIndex() + readableBytes() - delimiter size, since this is the only part where usefull\r\nLine Break could be searched for, except if readableBytes is less than delimiter size (then we search from\r\nreaderIndex).\r\n\r\nSecond, when a Memory HttpData is created, it should be assigned an empty buffer to be\r\nconsistent with the other implementations (Disk or Mixed mode).\r\nWe cannot change the default behavior of the content() or getByteBuf() of the Memory based HttpData\r\nsince the ByteBuf is supposed to be null when released, but not empty.\r\nWhen a new ByteBuf is added, one more check verifies if the current ByteBuf is empty, and if so, it\r\nis released and replaced by the new one, without creating a new CompositeByteBuf.\r\n\r\nResult:\r\nIn the tests testBIgFileUploadDelimiterInMiddleChunkDecoderMemoryFactory and related for other modes,\r\nthe buffers are starting with a CRLF.\r\nWhen we offer only the prefix part of the multipart (no data at all), the current Partial HttpData has\r\nan empty buffer.\r\nThe first time we offer the data starting with CRLF to the decoder, it now\r\nhas a correct current Partial HttpData with a buffer not empty.\r\n\r\nThe Benchmark was re-run against this new version.\r\n\r\nOld Benchmark     \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Mode\u00a0 Cnt\u00a0 Score\u00a0\u00a0 Error\u00a0\u00a0 Units\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigAdvancedLevel\u00a0\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 4,037 \u00b1 0,358\u00a0 ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigDisabledLevel\u00a0\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 4,226 \u00b1 0,471\u00a0 ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigParanoidLevel\u00a0\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 0,875 \u00b1 0,029\u00a0 ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigSimpleLevel\u00a0\u00a0\u00a0\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 4,346 \u00b1 0,275\u00a0 ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighAdvancedLevel\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 2,044 \u00b1 0,020\u00a0 ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighDisabledLevel\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 2,278 \u00b1 0,159\u00a0 ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighParanoidLevel\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 0,174 \u00b1 0,004\u00a0 ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighSimpleLevel\u00a0\u00a0\u00a0 thrpt\u00a0\u00a0\u00a0 6\u00a0 2,370 \u00b1 0,065\u00a0 ops/ms\r\n\r\nNew Benchmark                                                                       Mode  Cnt  Score   Error   Units\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigAdvancedLevel   thrpt    6  5,604 \u00b1 0,415  ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigDisabledLevel   thrpt    6  6,058 \u00b1 0,111  ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigParanoidLevel   thrpt    6  0,914 \u00b1 0,031  ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderBigSimpleLevel     thrpt    6  6,053 \u00b1 0,051  ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighAdvancedLevel  thrpt    6  2,636 \u00b1 0,141  ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighDisabledLevel  thrpt    6  3,033 \u00b1 0,181  ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighParanoidLevel  thrpt    6  0,178 \u00b1 0,006  ops/ms\r\nHttpPostMultipartRequestDecoderBenchmark.multipartRequestDecoderHighSimpleLevel    thrpt    6  2,859 \u00b1 0,189  ops/ms\r\n\r\nSo +20 to +40% improvement due to not searching for CRLF/LF into the full buffer when no delimiter is found,\r\nbut only from the end and delimiter size + 2 (CRLF)."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/ParameterizedSslHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjE0ODQ4ODY3OjMzZjU3OWVmZDQzYjFmYzhkMTNmNmVmZjJjYzI1NDVkY2NjNTNiMzM=",
                "url": "https://github.com/netty/netty/pull/11156/commits/33f579efd43b1fc8d13f6eff2cc2545dccc53b33"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11146,
                "url": "https://github.com/netty/netty/issues/11146",
                "title": "TLS sslv3 alert bad record mac error from 4.1.61 to 4.1.63 (inclusive)",
                "bodyHTML": "<p dir=\"auto\">I'm upgrading from Netty 4.1.58 to 4.1.63 (TCN 2.0.34) and am running into an <code class=\"notranslate\">error:140943FC:SSL routines:ssl3_read_bytes:sslv3 alert bad record mac</code> error in one of my own Unit Tests. I have bisected the starting point of the error to this commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/netty/netty/commit/0b0c234bed5ffdbe3f9a65c05c9ab353a5d300ae/hovercard\" href=\"https://github.com/netty/netty/commit/0b0c234bed5ffdbe3f9a65c05c9ab353a5d300ae\"><tt>0b0c234</tt></a> and I do see a follow up commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/netty/netty/commit/6b48e690fdeccf4dfa74a09951a498f3efdd9605/hovercard\" href=\"https://github.com/netty/netty/commit/6b48e690fdeccf4dfa74a09951a498f3efdd9605\"><tt>6b48e69</tt></a> to fix it but it's still happening for me.</p>\n<p dir=\"auto\">The two slightly different but same error stack traces are below.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<h3 dir=\"auto\">Actual behavior</h3>\n<h4 dir=\"auto\">4.1.61 commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/netty/netty/commit/0b0c234bed5ffdbe3f9a65c05c9ab353a5d300ae/hovercard\" href=\"https://github.com/netty/netty/commit/0b0c234bed5ffdbe3f9a65c05c9ab353a5d300ae\"><tt>0b0c234</tt></a></h4>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"javax.net.ssl.SSLException: javax.net.ssl.SSLException: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.wrap(ReferenceCountedOpenSslEngine.java:897) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat javax.net.ssl.SSLEngine.wrap(SSLEngine.java:511) ~[?:1.8.0_282]\n\tat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:1094) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:845) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.SslHandler.wrapAndFlush(SslHandler.java:813) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.SslHandler.flush(SslHandler.java:794) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:750) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:742) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:728) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.codec.http2.Http2ConnectionHandler.flush(Http2ConnectionHandler.java:189) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.codec.http2.Http2ConnectionHandler.channelReadComplete(Http2ConnectionHandler.java:540) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:410) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:397) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelReadComplete(AbstractChannelHandlerContext.java:390) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.SslHandler.channelReadComplete0(SslHandler.java:1356) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.SslHandler.channelReadComplete(SslHandler.java:1345) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:410) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:397) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelReadComplete(AbstractChannelHandlerContext.java:390) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelReadComplete(DefaultChannelPipeline.java:1415) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:410) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:397) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelReadComplete(DefaultChannelPipeline.java:925) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.local.LocalChannel.readInbound(LocalChannel.java:302) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.local.LocalChannel.finishPeerRead0(LocalChannel.java:445) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.local.LocalChannel.access$400(LocalChannel.java:50) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.local.LocalChannel$5.run(LocalChannel.java:403) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.DefaultEventLoop.run(DefaultEventLoop.java:54) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_282]\nCaused by: javax.net.ssl.SSLException: error:1408F119:SSL routines:ssl3_get_record:decryption failed or bad record mac\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.sslReadErrorResult(ReferenceCountedOpenSslEngine.java:1347) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1308) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1384) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1427) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.SslHandler$SslEngineType$1.unwrap(SslHandler.java:208) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1395) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.SslHandler.decodeNonJdkCompatible(SslHandler.java:1302) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1339) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:508) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:447) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\tat io.netty.channel.local.LocalChannel.readInbound(LocalChannel.java:299) ~[netty-all-4.1.61.Final-SNAPSHOT.jar:4.1.61.Final-SNAPSHOT]\n\t... 8 more\"><pre class=\"notranslate\"><span class=\"pl-smi\">javax</span>.<span class=\"pl-smi\">net</span>.<span class=\"pl-smi\">ssl</span>.<span class=\"pl-smi\">SSLException</span>: <span class=\"pl-s1\">javax</span>.<span class=\"pl-s1\">net</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SSLException</span>: <span class=\"pl-s1\">error</span>:<span class=\"pl-c1\">1408F</span><span class=\"pl-c1\">119</span>:<span class=\"pl-c1\">SSL</span> <span class=\"pl-s1\">routines</span>:<span class=\"pl-s1\">ssl3_get_record</span>:<span class=\"pl-smi\">decryption</span> <span class=\"pl-s1\">failed</span> <span class=\"pl-smi\">or</span> <span class=\"pl-s1\">bad</span> <span class=\"pl-s1\">record</span> <span class=\"pl-s1\">mac</span>\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-en\">wrap</span>(<span class=\"pl-smi\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">897</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">javax</span>.<span class=\"pl-s1\">net</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SSLEngine</span>.<span class=\"pl-s1\">wrap</span>(<span class=\"pl-smi\">SSLEngine</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">511</span>) ~[?:<span class=\"pl-c1\">1.8</span>.<span class=\"pl-c1\">0_282</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-en\">wrap</span>(<span class=\"pl-smi\">SslHandler</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1094</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-en\">wrap</span>(<span class=\"pl-smi\">SslHandler</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">845</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-en\">wrapAndFlush</span>(<span class=\"pl-smi\">SslHandler</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">813</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-en\">flush</span>(<span class=\"pl-smi\">SslHandler</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">794</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">invokeFlush0</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">750</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">invokeFlush</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">742</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">flush</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">728</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http2</span>.<span class=\"pl-s1\">Http2ConnectionHandler</span>.<span class=\"pl-en\">flush</span>(<span class=\"pl-smi\">Http2ConnectionHandler</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">189</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http2</span>.<span class=\"pl-s1\">Http2ConnectionHandler</span>.<span class=\"pl-en\">channelReadComplete</span>(<span class=\"pl-smi\">Http2ConnectionHandler</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">540</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">invokeChannelReadComplete</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">410</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">invokeChannelReadComplete</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">397</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">fireChannelReadComplete</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">390</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-en\">channelReadComplete0</span>(<span class=\"pl-smi\">SslHandler</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1356</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-en\">channelReadComplete</span>(<span class=\"pl-smi\">SslHandler</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1345</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">invokeChannelReadComplete</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">410</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">invokeChannelReadComplete</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">397</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">fireChannelReadComplete</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">390</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultChannelPipeline$HeadContext</span>.<span class=\"pl-en\">channelReadComplete</span>(<span class=\"pl-smi\">DefaultChannelPipeline</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1415</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">invokeChannelReadComplete</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">410</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">invokeChannelReadComplete</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">397</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultChannelPipeline</span>.<span class=\"pl-en\">fireChannelReadComplete</span>(<span class=\"pl-smi\">DefaultChannelPipeline</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">925</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">local</span>.<span class=\"pl-s1\">LocalChannel</span>.<span class=\"pl-en\">readInbound</span>(<span class=\"pl-smi\">LocalChannel</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">302</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">local</span>.<span class=\"pl-s1\">LocalChannel</span>.<span class=\"pl-en\">finishPeerRead0</span>(<span class=\"pl-smi\">LocalChannel</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">445</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">local</span>.<span class=\"pl-s1\">LocalChannel</span>.<span class=\"pl-en\">access$400</span>(<span class=\"pl-smi\">LocalChannel</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">50</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">local</span>.<span class=\"pl-s1\">LocalChannel$5</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">LocalChannel</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">403</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultEventLoop</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">DefaultEventLoop</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">54</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">concurrent</span>.<span class=\"pl-s1\">SingleThreadEventExecutor$4</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">SingleThreadEventExecutor</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">989</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">internal</span>.<span class=\"pl-s1\">ThreadExecutorMap$2</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">ThreadExecutorMap</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">74</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">concurrent</span>.<span class=\"pl-s1\">FastThreadLocalRunnable</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">FastThreadLocalRunnable</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">30</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">lang</span>.<span class=\"pl-s1\">Thread</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">Thread</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">748</span>) [?:<span class=\"pl-c1\">1.8</span>.<span class=\"pl-c1\">0_282</span>]\n<span class=\"pl-s1\">Caused</span> <span class=\"pl-s1\">by</span>: <span class=\"pl-s1\">javax</span>.<span class=\"pl-s1\">net</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SSLException</span>: <span class=\"pl-s1\">error</span>:<span class=\"pl-c1\">1408F</span><span class=\"pl-c1\">119</span>:<span class=\"pl-c1\">SSL</span> <span class=\"pl-s1\">routines</span>:<span class=\"pl-s1\">ssl3_get_record</span>:<span class=\"pl-s1\">decryption</span> <span class=\"pl-s1\">failed</span> <span class=\"pl-s1\">or</span> <span class=\"pl-s1\">bad</span> record <span class=\"pl-s1\">mac</span>\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-s1\">sslReadErrorResult</span>(<span class=\"pl-s1\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">1347</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-s1\">unwrap</span>(<span class=\"pl-s1\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">1308</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-s1\">unwrap</span>(<span class=\"pl-s1\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">1384</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-s1\">unwrap</span>(<span class=\"pl-s1\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">1427</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler$SslEngineType$1</span>.<span class=\"pl-s1\">unwrap</span>(<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">208</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-s1\">unwrap</span>(<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">1395</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-s1\">decodeNonJdkCompatible</span>(<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">1302</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-s1\">decode</span>(<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">1339</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">ByteToMessageDecoder</span>.<span class=\"pl-s1\">decodeRemovalReentryProtection</span>(<span class=\"pl-s1\">ByteToMessageDecoder</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">508</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">ByteToMessageDecoder</span>.<span class=\"pl-s1\">callDecode</span>(<span class=\"pl-s1\">ByteToMessageDecoder</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">447</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">ByteToMessageDecoder</span>.<span class=\"pl-s1\">channelRead</span>(<span class=\"pl-s1\">ByteToMessageDecoder</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">276</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">invokeChannelRead</span>(<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">379</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">invokeChannelRead</span>(<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">365</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">fireChannelRead</span>(<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">357</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultChannelPipeline$HeadContext</span>.<span class=\"pl-s1\">channelRead</span>(<span class=\"pl-s1\">DefaultChannelPipeline</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">1410</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">invokeChannelRead</span>(<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">379</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">invokeChannelRead</span>(<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">365</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultChannelPipeline</span>.<span class=\"pl-s1\">fireChannelRead</span>(<span class=\"pl-s1\">DefaultChannelPipeline</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">919</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">local</span>.<span class=\"pl-s1\">LocalChannel</span>.<span class=\"pl-s1\">readInbound</span>(<span class=\"pl-s1\">LocalChannel</span>.<span class=\"pl-s1\">java</span>:<span class=\"pl-c1\">299</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">61.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.61</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t... <span class=\"pl-c1\">8</span> <span class=\"pl-s1\">more</span></pre></div>\n<h4 dir=\"auto\">4.1.63 commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/netty/netty/commit/6b48e690fdeccf4dfa74a09951a498f3efdd9605/hovercard\" href=\"https://github.com/netty/netty/commit/6b48e690fdeccf4dfa74a09951a498f3efdd9605\"><tt>6b48e69</tt></a></h4>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"io.netty.handler.codec.DecoderException: javax.net.ssl.SSLException: error:140943FC:SSL routines:ssl3_read_bytes:sslv3 alert bad record mac\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:478) ~[netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) ~[netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.local.LocalChannel.readInbound(LocalChannel.java:299) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.local.LocalChannel.doBeginRead(LocalChannel.java:322) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.beginRead(AbstractChannel.java:856) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.read(DefaultChannelPipeline.java:1362) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.SslHandler.read(SslHandler.java:754) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.handler.codec.http2.Http2ConnectionHandler.read(Http2ConnectionHandler.java:524) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeRead(AbstractChannelHandlerContext.java:686) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.read(AbstractChannelHandlerContext.java:671) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.DefaultChannelPipeline.read(DefaultChannelPipeline.java:1004) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannel.read(AbstractChannel.java:290) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.readIfIsAutoRead(DefaultChannelPipeline.java:1422) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelReadComplete(DefaultChannelPipeline.java:1417) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:410) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:397) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelReadComplete(DefaultChannelPipeline.java:925) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.local.LocalChannel.readInbound(LocalChannel.java:302) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.local.LocalChannel.finishPeerRead0(LocalChannel.java:445) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.local.LocalChannel.access$400(LocalChannel.java:50) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.local.LocalChannel$5.run(LocalChannel.java:403) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.channel.DefaultEventLoop.run(DefaultEventLoop.java:54) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_282]\nCaused by: javax.net.ssl.SSLException: error:140943FC:SSL routines:ssl3_read_bytes:sslv3 alert bad record mac\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.shutdownWithError(ReferenceCountedOpenSslEngine.java:1066) ~[netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.sslReadErrorResult(ReferenceCountedOpenSslEngine.java:1359) ~[netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1308) ~[netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1384) ~[netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1427) ~[netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.SslHandler$SslEngineType$1.unwrap(SslHandler.java:208) ~[netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1358) ~[netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.SslHandler.decodeNonJdkCompatible(SslHandler.java:1265) ~[netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1302) ~[netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:508) ~[netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:447) ~[netty-all-4.1.63.Final-SNAPSHOT.jar:4.1.63.Final-SNAPSHOT]\n\t... 36 more\"><pre class=\"notranslate\"><span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">handler</span>.<span class=\"pl-smi\">codec</span>.<span class=\"pl-smi\">DecoderException</span>: <span class=\"pl-s1\">javax</span>.<span class=\"pl-s1\">net</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SSLException</span>: <span class=\"pl-s1\">error</span>:<span class=\"pl-c1\">140943F</span><span class=\"pl-s1\">C</span>:<span class=\"pl-c1\">SSL</span> <span class=\"pl-s1\">routines</span>:<span class=\"pl-s1\">ssl3_read_bytes</span>:<span class=\"pl-smi\">sslv3</span> <span class=\"pl-s1\">alert</span> <span class=\"pl-smi\">bad</span> <span class=\"pl-s1\">record</span> <span class=\"pl-smi\">mac</span>\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">ByteToMessageDecoder</span>.<span class=\"pl-en\">callDecode</span>(<span class=\"pl-smi\">ByteToMessageDecoder</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">478</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">ByteToMessageDecoder</span>.<span class=\"pl-s1\">channelRead</span>(<span class=\"pl-smi\">ByteToMessageDecoder</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">276</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">invokeChannelRead</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">379</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">invokeChannelRead</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">365</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">fireChannelRead</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">357</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultChannelPipeline$HeadContext</span>.<span class=\"pl-s1\">channelRead</span>(<span class=\"pl-smi\">DefaultChannelPipeline</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1410</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">invokeChannelRead</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">379</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">invokeChannelRead</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">365</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultChannelPipeline</span>.<span class=\"pl-s1\">fireChannelRead</span>(<span class=\"pl-smi\">DefaultChannelPipeline</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">919</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">local</span>.<span class=\"pl-s1\">LocalChannel</span>.<span class=\"pl-s1\">readInbound</span>(<span class=\"pl-smi\">LocalChannel</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">299</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">local</span>.<span class=\"pl-s1\">LocalChannel</span>.<span class=\"pl-s1\">doBeginRead</span>(<span class=\"pl-smi\">LocalChannel</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">322</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannel$AbstractUnsafe</span>.<span class=\"pl-s1\">beginRead</span>(<span class=\"pl-smi\">AbstractChannel</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">856</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultChannelPipeline$HeadContext</span>.<span class=\"pl-s1\">read</span>(<span class=\"pl-smi\">DefaultChannelPipeline</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1362</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">invokeRead</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">686</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">read</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">671</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-s1\">read</span>(<span class=\"pl-smi\">SslHandler</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">754</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">invokeRead</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">686</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">read</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">671</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http2</span>.<span class=\"pl-s1\">Http2ConnectionHandler</span>.<span class=\"pl-s1\">read</span>(<span class=\"pl-smi\">Http2ConnectionHandler</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">524</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">invokeRead</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">686</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">read</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">671</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultChannelPipeline</span>.<span class=\"pl-s1\">read</span>(<span class=\"pl-smi\">DefaultChannelPipeline</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1004</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannel</span>.<span class=\"pl-s1\">read</span>(<span class=\"pl-smi\">AbstractChannel</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">290</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultChannelPipeline$HeadContext</span>.<span class=\"pl-s1\">readIfIsAutoRead</span>(<span class=\"pl-smi\">DefaultChannelPipeline</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1422</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultChannelPipeline$HeadContext</span>.<span class=\"pl-s1\">channelReadComplete</span>(<span class=\"pl-smi\">DefaultChannelPipeline</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1417</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">invokeChannelReadComplete</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">410</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-s1\">invokeChannelReadComplete</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">397</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultChannelPipeline</span>.<span class=\"pl-s1\">fireChannelReadComplete</span>(<span class=\"pl-smi\">DefaultChannelPipeline</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">925</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">local</span>.<span class=\"pl-s1\">LocalChannel</span>.<span class=\"pl-s1\">readInbound</span>(<span class=\"pl-smi\">LocalChannel</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">302</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">local</span>.<span class=\"pl-s1\">LocalChannel</span>.<span class=\"pl-s1\">finishPeerRead0</span>(<span class=\"pl-smi\">LocalChannel</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">445</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">local</span>.<span class=\"pl-s1\">LocalChannel</span>.<span class=\"pl-s1\">access$400</span>(<span class=\"pl-smi\">LocalChannel</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">50</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">local</span>.<span class=\"pl-s1\">LocalChannel$5</span>.<span class=\"pl-s1\">run</span>(<span class=\"pl-smi\">LocalChannel</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">403</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultEventLoop</span>.<span class=\"pl-s1\">run</span>(<span class=\"pl-smi\">DefaultEventLoop</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">54</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">concurrent</span>.<span class=\"pl-s1\">SingleThreadEventExecutor$4</span>.<span class=\"pl-s1\">run</span>(<span class=\"pl-smi\">SingleThreadEventExecutor</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">989</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">internal</span>.<span class=\"pl-s1\">ThreadExecutorMap$2</span>.<span class=\"pl-s1\">run</span>(<span class=\"pl-smi\">ThreadExecutorMap</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">74</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">concurrent</span>.<span class=\"pl-s1\">FastThreadLocalRunnable</span>.<span class=\"pl-s1\">run</span>(<span class=\"pl-smi\">FastThreadLocalRunnable</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">30</span>) [<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">lang</span>.<span class=\"pl-s1\">Thread</span>.<span class=\"pl-s1\">run</span>(<span class=\"pl-smi\">Thread</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">748</span>) [?:<span class=\"pl-c1\">1.8</span>.<span class=\"pl-c1\">0_282</span>]\n<span class=\"pl-smi\">Caused</span> <span class=\"pl-s1\">by</span>: <span class=\"pl-s1\">javax</span>.<span class=\"pl-s1\">net</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SSLException</span>: <span class=\"pl-s1\">error</span>:<span class=\"pl-c1\">140943F</span><span class=\"pl-s1\">C</span>:<span class=\"pl-c1\">SSL</span> <span class=\"pl-s1\">routines</span>:<span class=\"pl-s1\">ssl3_read_bytes</span>:<span class=\"pl-smi\">sslv3</span> <span class=\"pl-s1\">alert</span> <span class=\"pl-smi\">bad</span> <span class=\"pl-s1\">record</span> <span class=\"pl-smi\">mac</span>\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-en\">shutdownWithError</span>(<span class=\"pl-smi\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1066</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-s1\">sslReadErrorResult</span>(<span class=\"pl-smi\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1359</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-s1\">unwrap</span>(<span class=\"pl-smi\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1308</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-s1\">unwrap</span>(<span class=\"pl-smi\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1384</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-s1\">unwrap</span>(<span class=\"pl-smi\">ReferenceCountedOpenSslEngine</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1427</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler$SslEngineType$1</span>.<span class=\"pl-s1\">unwrap</span>(<span class=\"pl-smi\">SslHandler</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">208</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-s1\">unwrap</span>(<span class=\"pl-smi\">SslHandler</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1358</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-s1\">decodeNonJdkCompatible</span>(<span class=\"pl-smi\">SslHandler</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1265</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslHandler</span>.<span class=\"pl-s1\">decode</span>(<span class=\"pl-smi\">SslHandler</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1302</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">ByteToMessageDecoder</span>.<span class=\"pl-s1\">decodeRemovalReentryProtection</span>(<span class=\"pl-smi\">ByteToMessageDecoder</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">508</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">ByteToMessageDecoder</span>.<span class=\"pl-s1\">callDecode</span>(<span class=\"pl-smi\">ByteToMessageDecoder</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">447</span>) ~[<span class=\"pl-s1\">netty</span>-<span class=\"pl-s1\">all</span>-<span class=\"pl-c1\">4.1</span>.<span class=\"pl-c1\">63.F</span><span class=\"pl-s1\">inal</span>-<span class=\"pl-smi\">SNAPSHOT</span>.<span class=\"pl-smi\">jar</span>:<span class=\"pl-c1\">4.1</span><span class=\"pl-c1\">.63</span>.<span class=\"pl-s1\">Final</span>-<span class=\"pl-c1\">SNAPSHOT</span>]\n\t... <span class=\"pl-c1\">36</span> <span class=\"pl-s1\">more</span></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/11146",
                "createdAt": "2021-04-08T07:12:09Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Initialise epoll at runtime in native images",
        "url": "https://github.com/netty/netty/pull/11163",
        "resourcePath": "/netty/netty/pull/11163",
        "createdAt": "2021-04-16T10:46:22Z",
        "number": 11163,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/logging/InternalLoggerFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "testsuite-native-image-epoll/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "testsuite-native-image-epoll/src/main/java/io/netty/testsuite/svm/HttpNativeEpollServer.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "testsuite-native-image-epoll/src/main/java/io/netty/testsuite/svm/HttpNativeEpollServerHandler.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "testsuite-native-image-epoll/src/main/java/io/netty/testsuite/svm/HttpNativeEpollServerInitializer.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "testsuite-native-image-epoll/src/main/java/io/netty/testsuite/svm/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-native-epoll/src/main/resources/META-INF/native-image/io.netty/netty-transport-native-epoll/jni-config.json"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-native-epoll/src/main/resources/META-INF/native-image/io.netty/netty-transport-native-epoll/native-image.properties"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-native-epoll/src/main/resources/META-INF/native-image/io.netty/netty-transport-native-epoll/reflection-config.json"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84kwp_c2gAoNmY0OTJhNDY0M2UwN2QzMWViNDVhMjVmM2I5ZjNiYzBkN2JiMDcyYQ",
                "url": "https://github.com/netty/netty/pull/11163/commits/6f492a4643e07d31eb45a25f3b9f3bc0d7bb072a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11122,
                "url": "https://github.com/netty/netty/issues/11122",
                "title": "GraalVM native-image doesn't compile with Netty",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Netty compiles with GraalVM native-image</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Compilation fails:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"12:37:06.278 [ForkJoinPool-4-worker-27] DEBUG io.netty.util.internal.logging.InternalLoggerFactory - Using SLF4J as the default logging framework\n12:37:06.681 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - Platform: MacOS\n12:37:06.682 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false\n12:37:06.682 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - Java version: 11\n12:37:06.682 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available\n12:37:06.683 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available\n12:37:06.683 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Buffer.address: available\n12:37:06.683 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - direct buffer constructor: unavailable\njava.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled\n        at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)\n        at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)\n        at java.base/java.security.AccessController.doPrivileged(Native Method)\n        at io.netty.util.internal.PlatformDependent0.&lt;clinit&gt;(PlatformDependent0.java:232)\n        at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:294)\n        at io.netty.util.internal.PlatformDependent.&lt;clinit&gt;(PlatformDependent.java:93)\n        at io.netty.util.ConstantPool.&lt;init&gt;(ConstantPool.java:32)\n        at io.netty.channel.ChannelOption$1.&lt;init&gt;(ChannelOption.java:36)\n        at io.netty.channel.ChannelOption.&lt;clinit&gt;(ChannelOption.java:36)\n        at java.base/jdk.internal.misc.Unsafe.ensureClassInitialized0(Native Method)\n        at java.base/jdk.internal.misc.Unsafe.ensureClassInitialized(Unsafe.java:1042)\n        at jdk.unsupported/sun.misc.Unsafe.ensureClassInitialized(Unsafe.java:698)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.ensureClassInitialized(ConfigurableClassInitialization.java:174)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.computeInitKindAndMaybeInitializeClass(ConfigurableClassInitialization.java:607)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.computeInitKindAndMaybeInitializeClass(ConfigurableClassInitialization.java:127)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.maybeInitializeHosted(ConfigurableClassInitialization.java:165)\n        at com.oracle.svm.hosted.SVMHost.initializeType(SVMHost.java:265)\n        at com.oracle.graal.pointsto.meta.AnalysisType.lambda$new$0(AnalysisType.java:227)\n        at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n        at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n        at com.oracle.graal.pointsto.util.AnalysisFuture.ensureDone(AnalysisFuture.java:64)\n        at com.oracle.graal.pointsto.meta.AnalysisType.ensureInitialized(AnalysisType.java:600)\n        at com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:364)\n        at com.oracle.graal.pointsto.infrastructure.AnalysisConstantPool.lookupField(AnalysisConstantPool.java:51)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4360)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genGetStatic(BytecodeParser.java:4914)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5400)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3436)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3243)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1109)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:1003)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\n        at com.oracle.svm.hosted.phases.SharedGraphBuilderPhase.run(SharedGraphBuilderPhase.java:76)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:212)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:223)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:357)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:313)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:302)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:103)\n        at com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultSpecialInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:368)\n        at com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\n        at com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\n        at com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:547)\n        at com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\n        at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\n        at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n        at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n        at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n        at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n        at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n12:37:06.889 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: unavailable true\njava.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled\n        at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)\n        at io.netty.util.internal.PlatformDependent0$5.run(PlatformDependent0.java:310)\n        at java.base/java.security.AccessController.doPrivileged(Native Method)\n        at io.netty.util.internal.PlatformDependent0.&lt;clinit&gt;(PlatformDependent0.java:284)\n        at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:294)\n        at io.netty.util.internal.PlatformDependent.&lt;clinit&gt;(PlatformDependent.java:93)\n        at io.netty.util.ConstantPool.&lt;init&gt;(ConstantPool.java:32)\n        at io.netty.channel.ChannelOption$1.&lt;init&gt;(ChannelOption.java:36)\n        at io.netty.channel.ChannelOption.&lt;clinit&gt;(ChannelOption.java:36)\n        at java.base/jdk.internal.misc.Unsafe.ensureClassInitialized0(Native Method)\n        at java.base/jdk.internal.misc.Unsafe.ensureClassInitialized(Unsafe.java:1042)\n        at jdk.unsupported/sun.misc.Unsafe.ensureClassInitialized(Unsafe.java:698)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.ensureClassInitialized(ConfigurableClassInitialization.java:174)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.computeInitKindAndMaybeInitializeClass(ConfigurableClassInitialization.java:607)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.computeInitKindAndMaybeInitializeClass(ConfigurableClassInitialization.java:127)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.maybeInitializeHosted(ConfigurableClassInitialization.java:165)\n        at com.oracle.svm.hosted.SVMHost.initializeType(SVMHost.java:265)\n        at com.oracle.graal.pointsto.meta.AnalysisType.lambda$new$0(AnalysisType.java:227)\n        at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n        at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n        at com.oracle.graal.pointsto.util.AnalysisFuture.ensureDone(AnalysisFuture.java:64)\n        at com.oracle.graal.pointsto.meta.AnalysisType.ensureInitialized(AnalysisType.java:600)\n        at com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:364)\n        at com.oracle.graal.pointsto.infrastructure.AnalysisConstantPool.lookupField(AnalysisConstantPool.java:51)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4360)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genGetStatic(BytecodeParser.java:4914)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5400)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3436)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3243)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1109)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:1003)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\n        at com.oracle.svm.hosted.phases.SharedGraphBuilderPhase.run(SharedGraphBuilderPhase.java:76)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:212)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:223)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:357)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:313)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:302)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:103)\n        at com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultSpecialInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:368)\n        at com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\n        at com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\n        at com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:547)\n        at com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\n        at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\n        at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n        at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n        at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n        at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n        at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n12:37:06.935 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable\njava.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6a519f47\n        at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)\n        at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)\n        at java.base/java.lang.reflect.Method.invoke(Method.java:558)\n        at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)\n        at java.base/java.security.AccessController.doPrivileged(Native Method)\n        at io.netty.util.internal.PlatformDependent0.&lt;clinit&gt;(PlatformDependent0.java:343)\n        at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:294)\n        at io.netty.util.internal.PlatformDependent.&lt;clinit&gt;(PlatformDependent.java:93)\n        at io.netty.util.ConstantPool.&lt;init&gt;(ConstantPool.java:32)\n        at io.netty.channel.ChannelOption$1.&lt;init&gt;(ChannelOption.java:36)\n        at io.netty.channel.ChannelOption.&lt;clinit&gt;(ChannelOption.java:36)\n        at java.base/jdk.internal.misc.Unsafe.ensureClassInitialized0(Native Method)\n        at java.base/jdk.internal.misc.Unsafe.ensureClassInitialized(Unsafe.java:1042)\n        at jdk.unsupported/sun.misc.Unsafe.ensureClassInitialized(Unsafe.java:698)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.ensureClassInitialized(ConfigurableClassInitialization.java:174)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.computeInitKindAndMaybeInitializeClass(ConfigurableClassInitialization.java:607)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.computeInitKindAndMaybeInitializeClass(ConfigurableClassInitialization.java:127)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.maybeInitializeHosted(ConfigurableClassInitialization.java:165)\n        at com.oracle.svm.hosted.SVMHost.initializeType(SVMHost.java:265)\n        at com.oracle.graal.pointsto.meta.AnalysisType.lambda$new$0(AnalysisType.java:227)\n        at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n        at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n        at com.oracle.graal.pointsto.util.AnalysisFuture.ensureDone(AnalysisFuture.java:64)\n        at com.oracle.graal.pointsto.meta.AnalysisType.ensureInitialized(AnalysisType.java:600)\n        at com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:364)\n        at com.oracle.graal.pointsto.infrastructure.AnalysisConstantPool.lookupField(AnalysisConstantPool.java:51)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4360)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genGetStatic(BytecodeParser.java:4914)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5400)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3436)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3243)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1109)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:1003)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\n        at com.oracle.svm.hosted.phases.SharedGraphBuilderPhase.run(SharedGraphBuilderPhase.java:76)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:212)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:223)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:357)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:313)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:302)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:103)\n        at com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultSpecialInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:368)\n        at com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\n        at com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\n        at com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:547)\n        at com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\n        at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\n        at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n        at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n        at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n        at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n        at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n12:37:07.008 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.&lt;init&gt;(long, int): unavailable\n12:37:07.008 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - sun.misc.Unsafe: available\n12:37:07.011 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - maxDirectMemory: 6681526272 bytes (maybe)\n12:37:07.013 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/5h/wqw3wlf50m7_c5tm89ldzqb00000gp/T (java.io.tmpdir)\n12:37:07.029 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)\n12:37:07.029 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes\n12:37:07.029 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1\n12:37:07.030 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available\n12:37:07.030 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false\n12:37:07.779 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.workdir: /var/folders/5h/wqw3wlf50m7_c5tm89ldzqb00000gp/T (io.netty.tmpdir)\n12:37:07.779 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.deleteLibAfterLoading: true\n12:37:07.779 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.tryPatchShadedId: true\n12:37:07.864 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.internal.NativeLibraryLoader - Successfully loaded the library /var/folders/5h/wqw3wlf50m7_c5tm89ldzqb00000gp/T/libnetty_transport_native_kqueue_x86_6411448581691456785935.dylib\n12:37:07.865 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false\n12:37:07.865 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false\n12:37:07.867 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.NetUtilInitializations - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)\n12:37:07.867 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128\n12:37:07.869 [ForkJoinPool-2-worker-9] DEBUG io.netty.channel.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24\n12:37:08.374 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024\n12:37:08.375 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096\nWarning: class initialization of class io.netty.handler.ssl.ReferenceCountedOpenSslContext failed with exception java.lang.NoClassDefFoundError: io/netty/internal/tcnative/SSLPrivateKeyMethod. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.handler.ssl.ReferenceCountedOpenSslContext to explicitly request delayed initialization of this class.\n12:37:08.674 [ForkJoinPool-2-worker-27] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false\n12:37:08.675 [ForkJoinPool-2-worker-27] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512\n12:37:08.738 [ForkJoinPool-2-worker-25] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 35880 (auto-detected)\n12:37:08.742 [ForkJoinPool-2-worker-25] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)\n12:37:08.758 [ForkJoinPool-2-worker-19] DEBUG io.netty.handler.ssl.JdkSslContext - Default protocols (JDK): [TLSv1.3, TLSv1.2, TLSv1.1, TLSv1] \n12:37:08.759 [ForkJoinPool-2-worker-19] DEBUG io.netty.handler.ssl.JdkSslContext - Default cipher suites (JDK): [TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384]\n12:37:08.763 [ForkJoinPool-2-worker-25] DEBUG io.netty.handler.ssl.OpenSsl - netty-tcnative not in the classpath; OpenSslEngine will be unavailable.\n12:37:08.932 [ForkJoinPool-4-worker-27] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple\n12:37:08.932 [ForkJoinPool-4-worker-27] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4\nWarning: class initialization of class io.netty.channel.epoll.EpollEventArray failed with exception java.lang.NoClassDefFoundError: Could not initialize class io.netty.channel.epoll.Native. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.channel.epoll.EpollEventArray to explicitly request delayed initialization of this class.\nWarning: class initialization of class io.netty.channel.epoll.Native failed with exception java.lang.NoClassDefFoundError: Could not initialize class io.netty.channel.epoll.Native. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.channel.epoll.Native to explicitly request delayed initialization of this class.\n12:37:09.139 [ForkJoinPool-2-worker-7] DEBUG io.netty.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available\nWarning: class initialization of class io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator failed with exception java.lang.NoClassDefFoundError: org/eclipse/jetty/npn/NextProtoNego$Provider. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator to explicitly request delayed initialization of this class.\n12:37:10.202 [ForkJoinPool-2-worker-23] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096\n12:37:10.202 [ForkJoinPool-2-worker-23] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxSharedCapacityFactor: 2\n12:37:10.202 [ForkJoinPool-2-worker-23] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.linkCapacity: 16\n12:37:10.202 [ForkJoinPool-2-worker-23] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8\n12:37:10.202 [ForkJoinPool-2-worker-23] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.delayedQueue.ratio: 8\n12:37:10.241 [ForkJoinPool-4-worker-23] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true\n12:37:10.242 [ForkJoinPool-4-worker-23] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true\n12:37:10.242 [ForkJoinPool-4-worker-23] DEBUG io.netty.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6f157444\nTo see how the classes got initialized, use --trace-class-initialization=io.netty.util.AbstractReferenceCounted\n[social-media-api:35880]     analysis:  10,618.41 ms,  2.30 GB\nError: Classes that should be initialized at run time got initialized during image building:\n io.netty.util.AbstractReferenceCounted the class was requested to be initialized at run time (from the command line). To see why io.netty.util.AbstractReferenceCounted got initialized use --trace-class-initialization=io.netty.util.AbstractReferenceCounted\n\ncom.oracle.svm.core.util.UserError$UserException: Classes that should be initialized at run time got initialized during image building:\n io.netty.util.AbstractReferenceCounted the class was requested to be initialized at run time (from the command line). To see why io.netty.util.AbstractReferenceCounted got initialized use --trace-class-initialization=io.netty.util.AbstractReferenceCounted\n\n        at com.oracle.svm.core.util.UserError.abort(UserError.java:68)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.checkDelayedInitialization(ConfigurableClassInitialization.java:539)\n        at com.oracle.svm.hosted.classinitialization.ClassInitializationFeature.duringAnalysis(ClassInitializationFeature.java:226)\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$8(NativeImageGenerator.java:740)\n        at com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:70)\n        at com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:740)\n        at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:563)\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:476)\n        at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1407)\n        at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n        at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n        at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n        at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n        at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\nError: Image build request failed with exit status 1\"><pre class=\"notranslate\"><code class=\"notranslate\">12:37:06.278 [ForkJoinPool-4-worker-27] DEBUG io.netty.util.internal.logging.InternalLoggerFactory - Using SLF4J as the default logging framework\n12:37:06.681 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - Platform: MacOS\n12:37:06.682 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false\n12:37:06.682 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - Java version: 11\n12:37:06.682 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available\n12:37:06.683 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available\n12:37:06.683 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Buffer.address: available\n12:37:06.683 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - direct buffer constructor: unavailable\njava.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled\n        at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)\n        at io.netty.util.internal.PlatformDependent0$4.run(PlatformDependent0.java:238)\n        at java.base/java.security.AccessController.doPrivileged(Native Method)\n        at io.netty.util.internal.PlatformDependent0.&lt;clinit&gt;(PlatformDependent0.java:232)\n        at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:294)\n        at io.netty.util.internal.PlatformDependent.&lt;clinit&gt;(PlatformDependent.java:93)\n        at io.netty.util.ConstantPool.&lt;init&gt;(ConstantPool.java:32)\n        at io.netty.channel.ChannelOption$1.&lt;init&gt;(ChannelOption.java:36)\n        at io.netty.channel.ChannelOption.&lt;clinit&gt;(ChannelOption.java:36)\n        at java.base/jdk.internal.misc.Unsafe.ensureClassInitialized0(Native Method)\n        at java.base/jdk.internal.misc.Unsafe.ensureClassInitialized(Unsafe.java:1042)\n        at jdk.unsupported/sun.misc.Unsafe.ensureClassInitialized(Unsafe.java:698)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.ensureClassInitialized(ConfigurableClassInitialization.java:174)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.computeInitKindAndMaybeInitializeClass(ConfigurableClassInitialization.java:607)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.computeInitKindAndMaybeInitializeClass(ConfigurableClassInitialization.java:127)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.maybeInitializeHosted(ConfigurableClassInitialization.java:165)\n        at com.oracle.svm.hosted.SVMHost.initializeType(SVMHost.java:265)\n        at com.oracle.graal.pointsto.meta.AnalysisType.lambda$new$0(AnalysisType.java:227)\n        at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n        at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n        at com.oracle.graal.pointsto.util.AnalysisFuture.ensureDone(AnalysisFuture.java:64)\n        at com.oracle.graal.pointsto.meta.AnalysisType.ensureInitialized(AnalysisType.java:600)\n        at com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:364)\n        at com.oracle.graal.pointsto.infrastructure.AnalysisConstantPool.lookupField(AnalysisConstantPool.java:51)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4360)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genGetStatic(BytecodeParser.java:4914)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5400)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3436)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3243)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1109)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:1003)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\n        at com.oracle.svm.hosted.phases.SharedGraphBuilderPhase.run(SharedGraphBuilderPhase.java:76)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:212)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:223)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:357)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:313)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:302)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:103)\n        at com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultSpecialInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:368)\n        at com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\n        at com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\n        at com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:547)\n        at com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\n        at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\n        at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n        at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n        at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n        at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n        at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n12:37:06.889 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: unavailable true\njava.lang.UnsupportedOperationException: Reflective setAccessible(true) disabled\n        at io.netty.util.internal.ReflectionUtil.trySetAccessible(ReflectionUtil.java:31)\n        at io.netty.util.internal.PlatformDependent0$5.run(PlatformDependent0.java:310)\n        at java.base/java.security.AccessController.doPrivileged(Native Method)\n        at io.netty.util.internal.PlatformDependent0.&lt;clinit&gt;(PlatformDependent0.java:284)\n        at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:294)\n        at io.netty.util.internal.PlatformDependent.&lt;clinit&gt;(PlatformDependent.java:93)\n        at io.netty.util.ConstantPool.&lt;init&gt;(ConstantPool.java:32)\n        at io.netty.channel.ChannelOption$1.&lt;init&gt;(ChannelOption.java:36)\n        at io.netty.channel.ChannelOption.&lt;clinit&gt;(ChannelOption.java:36)\n        at java.base/jdk.internal.misc.Unsafe.ensureClassInitialized0(Native Method)\n        at java.base/jdk.internal.misc.Unsafe.ensureClassInitialized(Unsafe.java:1042)\n        at jdk.unsupported/sun.misc.Unsafe.ensureClassInitialized(Unsafe.java:698)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.ensureClassInitialized(ConfigurableClassInitialization.java:174)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.computeInitKindAndMaybeInitializeClass(ConfigurableClassInitialization.java:607)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.computeInitKindAndMaybeInitializeClass(ConfigurableClassInitialization.java:127)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.maybeInitializeHosted(ConfigurableClassInitialization.java:165)\n        at com.oracle.svm.hosted.SVMHost.initializeType(SVMHost.java:265)\n        at com.oracle.graal.pointsto.meta.AnalysisType.lambda$new$0(AnalysisType.java:227)\n        at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n        at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n        at com.oracle.graal.pointsto.util.AnalysisFuture.ensureDone(AnalysisFuture.java:64)\n        at com.oracle.graal.pointsto.meta.AnalysisType.ensureInitialized(AnalysisType.java:600)\n        at com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:364)\n        at com.oracle.graal.pointsto.infrastructure.AnalysisConstantPool.lookupField(AnalysisConstantPool.java:51)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4360)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genGetStatic(BytecodeParser.java:4914)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5400)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3436)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3243)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1109)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:1003)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\n        at com.oracle.svm.hosted.phases.SharedGraphBuilderPhase.run(SharedGraphBuilderPhase.java:76)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:212)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:223)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:357)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:313)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:302)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:103)\n        at com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultSpecialInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:368)\n        at com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\n        at com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\n        at com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:547)\n        at com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\n        at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\n        at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n        at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n        at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n        at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n        at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n12:37:06.935 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable\njava.lang.IllegalAccessException: class io.netty.util.internal.PlatformDependent0$6 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @6a519f47\n        at java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)\n        at java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:591)\n        at java.base/java.lang.reflect.Method.invoke(Method.java:558)\n        at io.netty.util.internal.PlatformDependent0$6.run(PlatformDependent0.java:352)\n        at java.base/java.security.AccessController.doPrivileged(Native Method)\n        at io.netty.util.internal.PlatformDependent0.&lt;clinit&gt;(PlatformDependent0.java:343)\n        at io.netty.util.internal.PlatformDependent.isAndroid(PlatformDependent.java:294)\n        at io.netty.util.internal.PlatformDependent.&lt;clinit&gt;(PlatformDependent.java:93)\n        at io.netty.util.ConstantPool.&lt;init&gt;(ConstantPool.java:32)\n        at io.netty.channel.ChannelOption$1.&lt;init&gt;(ChannelOption.java:36)\n        at io.netty.channel.ChannelOption.&lt;clinit&gt;(ChannelOption.java:36)\n        at java.base/jdk.internal.misc.Unsafe.ensureClassInitialized0(Native Method)\n        at java.base/jdk.internal.misc.Unsafe.ensureClassInitialized(Unsafe.java:1042)\n        at jdk.unsupported/sun.misc.Unsafe.ensureClassInitialized(Unsafe.java:698)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.ensureClassInitialized(ConfigurableClassInitialization.java:174)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.computeInitKindAndMaybeInitializeClass(ConfigurableClassInitialization.java:607)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.computeInitKindAndMaybeInitializeClass(ConfigurableClassInitialization.java:127)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.maybeInitializeHosted(ConfigurableClassInitialization.java:165)\n        at com.oracle.svm.hosted.SVMHost.initializeType(SVMHost.java:265)\n        at com.oracle.graal.pointsto.meta.AnalysisType.lambda$new$0(AnalysisType.java:227)\n        at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n        at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n        at com.oracle.graal.pointsto.util.AnalysisFuture.ensureDone(AnalysisFuture.java:64)\n        at com.oracle.graal.pointsto.meta.AnalysisType.ensureInitialized(AnalysisType.java:600)\n        at com.oracle.graal.pointsto.meta.AnalysisUniverse.lookupAllowUnresolved(AnalysisUniverse.java:364)\n        at com.oracle.graal.pointsto.infrastructure.AnalysisConstantPool.lookupField(AnalysisConstantPool.java:51)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.lookupField(BytecodeParser.java:4360)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.genGetStatic(BytecodeParser.java:4914)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBytecode(BytecodeParser.java:5400)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.iterateBytecodesForBlock(BytecodeParser.java:3436)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.processBlock(BytecodeParser.java:3243)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.build(BytecodeParser.java:1109)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.BytecodeParser.buildRootMethod(BytecodeParser.java:1003)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.java.GraphBuilderPhase$Instance.run(GraphBuilderPhase.java:84)\n        at com.oracle.svm.hosted.phases.SharedGraphBuilderPhase.run(SharedGraphBuilderPhase.java:76)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.run(Phase.java:49)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.BasePhase.apply(BasePhase.java:212)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:42)\n        at jdk.internal.vm.compiler/org.graalvm.compiler.phases.Phase.apply(Phase.java:38)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.parse(MethodTypeFlowBuilder.java:223)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlowBuilder.apply(MethodTypeFlowBuilder.java:357)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.doParse(MethodTypeFlow.java:313)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.ensureParsed(MethodTypeFlow.java:302)\n        at com.oracle.graal.pointsto.flow.MethodTypeFlow.addContext(MethodTypeFlow.java:103)\n        at com.oracle.graal.pointsto.DefaultAnalysisPolicy$DefaultSpecialInvokeTypeFlow.onObservedUpdate(DefaultAnalysisPolicy.java:368)\n        at com.oracle.graal.pointsto.flow.TypeFlow.notifyObservers(TypeFlow.java:470)\n        at com.oracle.graal.pointsto.flow.TypeFlow.update(TypeFlow.java:542)\n        at com.oracle.graal.pointsto.BigBang$2.run(BigBang.java:547)\n        at com.oracle.graal.pointsto.util.CompletionExecutor.lambda$execute$0(CompletionExecutor.java:173)\n        at java.base/java.util.concurrent.ForkJoinTask$RunnableExecuteAction.exec(ForkJoinTask.java:1426)\n        at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n        at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n        at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n        at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n        at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\n12:37:07.008 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.&lt;init&gt;(long, int): unavailable\n12:37:07.008 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - sun.misc.Unsafe: available\n12:37:07.011 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - maxDirectMemory: 6681526272 bytes (maybe)\n12:37:07.013 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/5h/wqw3wlf50m7_c5tm89ldzqb00000gp/T (java.io.tmpdir)\n12:37:07.029 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)\n12:37:07.029 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes\n12:37:07.029 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1\n12:37:07.030 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available\n12:37:07.030 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false\n12:37:07.779 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.workdir: /var/folders/5h/wqw3wlf50m7_c5tm89ldzqb00000gp/T (io.netty.tmpdir)\n12:37:07.779 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.deleteLibAfterLoading: true\n12:37:07.779 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.tryPatchShadedId: true\n12:37:07.864 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.internal.NativeLibraryLoader - Successfully loaded the library /var/folders/5h/wqw3wlf50m7_c5tm89ldzqb00000gp/T/libnetty_transport_native_kqueue_x86_6411448581691456785935.dylib\n12:37:07.865 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv4Stack: false\n12:37:07.865 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.NetUtil - -Djava.net.preferIPv6Addresses: false\n12:37:07.867 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.NetUtilInitializations - Loopback interface: lo0 (lo0, 0:0:0:0:0:0:0:1%lo0)\n12:37:07.867 [ForkJoinPool-2-worker-9] DEBUG io.netty.util.NetUtil - Failed to get SOMAXCONN from sysctl and file /proc/sys/net/core/somaxconn. Default: 128\n12:37:07.869 [ForkJoinPool-2-worker-9] DEBUG io.netty.channel.MultithreadEventLoopGroup - -Dio.netty.eventLoopThreads: 24\n12:37:08.374 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024\n12:37:08.375 [ForkJoinPool-2-worker-17] DEBUG io.netty.util.internal.InternalThreadLocalMap - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096\nWarning: class initialization of class io.netty.handler.ssl.ReferenceCountedOpenSslContext failed with exception java.lang.NoClassDefFoundError: io/netty/internal/tcnative/SSLPrivateKeyMethod. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.handler.ssl.ReferenceCountedOpenSslContext to explicitly request delayed initialization of this class.\n12:37:08.674 [ForkJoinPool-2-worker-27] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.noKeySetOptimization: false\n12:37:08.675 [ForkJoinPool-2-worker-27] DEBUG io.netty.channel.nio.NioEventLoop - -Dio.netty.selectorAutoRebuildThreshold: 512\n12:37:08.738 [ForkJoinPool-2-worker-25] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.processId: 35880 (auto-detected)\n12:37:08.742 [ForkJoinPool-2-worker-25] DEBUG io.netty.channel.DefaultChannelId - -Dio.netty.machineId: ac:de:48:ff:fe:00:11:22 (auto-detected)\n12:37:08.758 [ForkJoinPool-2-worker-19] DEBUG io.netty.handler.ssl.JdkSslContext - Default protocols (JDK): [TLSv1.3, TLSv1.2, TLSv1.1, TLSv1] \n12:37:08.759 [ForkJoinPool-2-worker-19] DEBUG io.netty.handler.ssl.JdkSslContext - Default cipher suites (JDK): [TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256, TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384, TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA, TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA, TLS_RSA_WITH_AES_128_GCM_SHA256, TLS_RSA_WITH_AES_128_CBC_SHA, TLS_RSA_WITH_AES_256_CBC_SHA, TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384]\n12:37:08.763 [ForkJoinPool-2-worker-25] DEBUG io.netty.handler.ssl.OpenSsl - netty-tcnative not in the classpath; OpenSslEngine will be unavailable.\n12:37:08.932 [ForkJoinPool-4-worker-27] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.level: simple\n12:37:08.932 [ForkJoinPool-4-worker-27] DEBUG io.netty.util.ResourceLeakDetector - -Dio.netty.leakDetection.targetRecords: 4\nWarning: class initialization of class io.netty.channel.epoll.EpollEventArray failed with exception java.lang.NoClassDefFoundError: Could not initialize class io.netty.channel.epoll.Native. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.channel.epoll.EpollEventArray to explicitly request delayed initialization of this class.\nWarning: class initialization of class io.netty.channel.epoll.Native failed with exception java.lang.NoClassDefFoundError: Could not initialize class io.netty.channel.epoll.Native. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.channel.epoll.Native to explicitly request delayed initialization of this class.\n12:37:09.139 [ForkJoinPool-2-worker-7] DEBUG io.netty.util.internal.PlatformDependent - org.jctools-core.MpscChunkedArrayQueue: available\nWarning: class initialization of class io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator failed with exception java.lang.NoClassDefFoundError: org/eclipse/jetty/npn/NextProtoNego$Provider. This class will be initialized at run time because option --allow-incomplete-classpath is used for image building. Use the option --initialize-at-run-time=io.netty.handler.ssl.JdkNpnApplicationProtocolNegotiator to explicitly request delayed initialization of this class.\n12:37:10.202 [ForkJoinPool-2-worker-23] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxCapacityPerThread: 4096\n12:37:10.202 [ForkJoinPool-2-worker-23] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.maxSharedCapacityFactor: 2\n12:37:10.202 [ForkJoinPool-2-worker-23] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.linkCapacity: 16\n12:37:10.202 [ForkJoinPool-2-worker-23] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.ratio: 8\n12:37:10.202 [ForkJoinPool-2-worker-23] DEBUG io.netty.util.Recycler - -Dio.netty.recycler.delayedQueue.ratio: 8\n12:37:10.241 [ForkJoinPool-4-worker-23] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkAccessible: true\n12:37:10.242 [ForkJoinPool-4-worker-23] DEBUG io.netty.buffer.AbstractByteBuf - -Dio.netty.buffer.checkBounds: true\n12:37:10.242 [ForkJoinPool-4-worker-23] DEBUG io.netty.util.ResourceLeakDetectorFactory - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@6f157444\nTo see how the classes got initialized, use --trace-class-initialization=io.netty.util.AbstractReferenceCounted\n[social-media-api:35880]     analysis:  10,618.41 ms,  2.30 GB\nError: Classes that should be initialized at run time got initialized during image building:\n io.netty.util.AbstractReferenceCounted the class was requested to be initialized at run time (from the command line). To see why io.netty.util.AbstractReferenceCounted got initialized use --trace-class-initialization=io.netty.util.AbstractReferenceCounted\n\ncom.oracle.svm.core.util.UserError$UserException: Classes that should be initialized at run time got initialized during image building:\n io.netty.util.AbstractReferenceCounted the class was requested to be initialized at run time (from the command line). To see why io.netty.util.AbstractReferenceCounted got initialized use --trace-class-initialization=io.netty.util.AbstractReferenceCounted\n\n        at com.oracle.svm.core.util.UserError.abort(UserError.java:68)\n        at com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.checkDelayedInitialization(ConfigurableClassInitialization.java:539)\n        at com.oracle.svm.hosted.classinitialization.ClassInitializationFeature.duringAnalysis(ClassInitializationFeature.java:226)\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$8(NativeImageGenerator.java:740)\n        at com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:70)\n        at com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:740)\n        at com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:563)\n        at com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:476)\n        at java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1407)\n        at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n        at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n        at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n        at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n        at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:183)\nError: Image build request failed with exit status 1\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Run</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"./gradlew clean :social-media-server:shadowJar &amp;&amp; native-image -cp social-media-server/build/libs/social-media-server-all.jar \"><pre class=\"notranslate\"><code class=\"notranslate\">./gradlew clean :social-media-server:shadowJar &amp;&amp; native-image -cp social-media-server/build/libs/social-media-server-all.jar \n</code></pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Here is a gradle project to reproduce it:<br>\n<a href=\"https://github.com/netty/netty/files/6217669/social-media.zip\">social-media.zip</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\"><code class=\"notranslate\">io.netty:netty-all:4.1.60.Final</code></p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java -version\nopenjdk version &quot;11.0.10&quot; 2021-01-19\nOpenJDK Runtime Environment GraalVM CE 21.0.0.2 (build 11.0.10+8-jvmci-21.0-b06)\nOpenJDK 64-Bit Server VM GraalVM CE 21.0.0.2 (build 11.0.10+8-jvmci-21.0-b06, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">java -version\nopenjdk version \"11.0.10\" 2021-01-19\nOpenJDK Runtime Environment GraalVM CE 21.0.0.2 (build 11.0.10+8-jvmci-21.0-b06)\nOpenJDK 64-Bit Server VM GraalVM CE 21.0.0.2 (build 11.0.10+8-jvmci-21.0-b06, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">OSX</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"uname -a\nDarwin Scott-Pierce 19.6.0 Darwin Kernel Version 19.6.0: Tue Jan 12 22:13:05 PST 2021; root:xnu-6153.141.16~1/RELEASE_X86_64 x86_64\"><pre class=\"notranslate\"><code class=\"notranslate\">uname -a\nDarwin Scott-Pierce 19.6.0 Darwin Kernel Version 19.6.0: Tue Jan 12 22:13:05 PST 2021; root:xnu-6153.141.16~1/RELEASE_X86_64 x86_64\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/11122",
                "createdAt": "2021-03-28T16:50:15Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "duplicate"
                      }
                    },
                    {
                      "node": {
                        "name": "graal"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Log fewer stack traces from initialisation code",
        "url": "https://github.com/netty/netty/pull/11164",
        "resourcePath": "/netty/netty/pull/11164",
        "createdAt": "2021-04-16T13:26:35Z",
        "number": 11164,
        "mergeCommit": {
          "oid": "1a5ebfb9993abbccf54e030734d90e7ecb854bd7",
          "message": "Log fewer stack traces from initialisation code (#11164)\n\nMotivation:\r\nWe are increasingly running in environments where Unsafe, setAccessible, etc. are not available.\r\nWhen debug logging is enabled, we log a complete stack trace every time one of these initialisations fail.\r\nSeeing these stack traces can cause people unnecessary concern.\r\nFor instance, people might have alerts that are triggered by a stack trace showing up in logs, regardless of its log level.\r\n\r\nModification:\r\nWe continue to print debug log messages on the result of our initialisations, but now we only include the full stack trace is _trace_ logging (or FINEST, or equivalent in whatever logging framework is configured) is enabled.\r\n\r\nResult:\r\nWe now only log these initialisation stack traces when the lowest possible log level is enabled.\r\n\r\nFixes #7817",
          "commitUrl": "https://github.com/netty/netty/commit/1a5ebfb9993abbccf54e030734d90e7ecb854bd7",
          "parents": {
            "nodes": [
              {
                "oid": "0ef2f05373be323f8a70a8e343473cf9e6f49683",
                "message": "SslHandler LocalChannel read/unwrap reentry fix (#11156)\n\nMotivation:\r\nSslHandler invokes channel.read() during the handshake process. For some\r\nchannel implementations (e.g. LocalChannel) this may result in re-entry\r\nconditions into unwrap. Unwrap currently defers updating the input\r\nbuffer indexes until the unwrap method returns to avoid intermediate\r\nupdates if not necessary, but this may result in unwrapping the same\r\ncontents multiple times which leads to handshake failures [1][2].\r\n\r\n[1] ssl3_get_record:decryption failed or bad record mac\r\n[2] ssl3_read_bytes:sslv3 alert bad record mac\r\n\r\nModifications:\r\n- SslHandler#unwrap updates buffer indexes on each iteration so that if\r\n  reentry scenario happens the correct indexes will be visible.\r\n\r\nResult:\r\nFixes https://github.com/netty/netty/issues/11146"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/PlatformDependent0.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslMasterKeyHandler.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjE2ODMyNDU1OmYwOGFkYzE5ODFkYjJlNjk4NzFkZTNmMDYyMTIxNGNjZjVhMmRkY2Q=",
                "url": "https://github.com/netty/netty/pull/11164/commits/f08adc1981db2e69871de3f0621214ccf5a2ddcd"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 7817,
                "url": "https://github.com/netty/netty/issues/7817",
                "title": "Illegal reflective access warnings when running Netty with Java 9",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Run without warnings.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">I get following warning,</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by io.netty.util.internal.ReflectionUtil (file:/home/bhashinee/.m2/repository/io/netty/netty-common/4.1.22.Final/netty-common-4.1.22.Final.jar) to constructor java.nio.DirectByteBuffer(long,int)\nWARNING: Please consider reporting this to the maintainers of io.netty.util.internal.ReflectionUtil\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\"><pre class=\"notranslate\"><code class=\"notranslate\">WARNING: An illegal reflective access operation has occurred\nWARNING: Illegal reflective access by io.netty.util.internal.ReflectionUtil (file:/home/bhashinee/.m2/repository/io/netty/netty-common/4.1.22.Final/netty-common-4.1.22.Final.jar) to constructor java.nio.DirectByteBuffer(long,int)\nWARNING: Please consider reporting this to the maintainers of io.netty.util.internal.ReflectionUtil\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\nWARNING: All illegal access operations will be denied in a future release\n</code></pre></div>\n<p dir=\"auto\">I specified this system property,<br>\n<code class=\"notranslate\"> -Dio.netty.tryReflectionSetAccessible=true</code></p>\n<p dir=\"auto\">Found that this has been fixed in 4.1.21.Final version according to this <a href=\"https://netty.io/news/2018/02/05/4-0-56-Final-4-1-21-Final.html\" rel=\"nofollow\">link</a>. But when I upgraded netty version to 4.1.22.Final, I still get the same warnings. To get rid of these warnings what should I do?</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.22.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">java version \"9.0.4\"</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Ubuntu</p>",
                "resourcePath": "/netty/netty/issues/7817",
                "createdAt": "2018-03-30T04:06:47Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Ensure DnsNameResolver resolves the host(computer) name on Windows",
        "url": "https://github.com/netty/netty/pull/11167",
        "resourcePath": "/netty/netty/pull/11167",
        "createdAt": "2021-04-19T18:49:52Z",
        "number": 11167,
        "mergeCommit": {
          "oid": "d34212439068091bcec29a8fad4df82f0a82c638",
          "message": "Ensure DnsNameResolver resolves the host(computer) name on Windows (#11167)\n\n\r\nMotivation:\r\n\r\nOn Windows DnsNameResolver is not able to resolve the host(computer) name as it is not in the hosts file and the DNS server is also not able to resolve it.\r\nThe exception below is the result of the resolution:\r\nCaused by: java.net.UnknownHostException: failed to resolve 'host(computer)-name' after 2 queries\r\n\tat io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1013)\r\n\tat io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:966)\r\n\tat io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:414)\r\n\tat io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:938)\r\n\tat io.netty.resolver.dns.DnsResolveContext.access$700(DnsResolveContext.java:63)\r\n\tat io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:467)\r\n\r\nModifications:\r\n\r\nOn Windows DnsNameResolver maps host(computer) name to LOCALHOST\r\n\r\nResult:\r\n\r\nDnsNameResolver is able to resolve the host(computer) name on Windows\r\n\r\nFixes #11142",
          "commitUrl": "https://github.com/netty/netty/commit/d34212439068091bcec29a8fad4df82f0a82c638",
          "parents": {
            "nodes": [
              {
                "oid": "e2daae9ac8e4b5c0a04f47b163157445915b949a",
                "message": "Fix StreamBufferingEncoder GOAWAY bug (#11144)\n\nMotivation:\r\n\r\nThere is a bug in `StreamBufferingEncoder` such that when client receives GOWAY while there are pending streams due to MAX_CONCURRENT_STREAMS, we see the following error:\r\n```\r\nio.netty.handler.codec.http2.Http2Exception$StreamException: Maximum active streams violated for this endpoint.\r\n        at io.netty.handler.codec.http2.Http2Exception.streamError(Http2Exception.java:147)\r\n        at io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint.checkNewStreamAllowed(DefaultHttp2Connection.java:896)\r\n        at io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint.createStream(DefaultHttp2Connection.java:748)\r\n        at io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint.createStream(DefaultHttp2Connection.java:668)\r\n        at io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder.writeHeaders0(DefaultHttp2ConnectionEncoder.java:201)\r\n        at io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder.writeHeaders(DefaultHttp2ConnectionEncoder.java:167)\r\n        at io.netty.handler.codec.http2.DecoratingHttp2FrameWriter.writeHeaders(DecoratingHttp2FrameWriter.java:53)\r\n        at io.netty.handler.codec.http2.StreamBufferingEncoder.writeHeaders(StreamBufferingEncoder.java:153)\r\n        at io.netty.handler.codec.http2.StreamBufferingEncoder.writeHeaders(StreamBufferingEncoder.java:141)\r\n        at io.grpc.netty.NettyClientHandler.createStreamTraced(NettyClientHandler.java:584) \r\n        at io.grpc.netty.NettyClientHandler.createStream(NettyClientHandler.java:567)\r\n        at io.grpc.netty.NettyClientHandler.write(NettyClientHandler.java:328)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeWrite0(AbstractChannelHandlerContext.java:717)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeWrite(AbstractChannelHandlerContext.java:709)\r\n        at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:792)\r\n        at io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:702)\r\n        at io.netty.channel.DefaultChannelPipeline.write(DefaultChannelPipeline.java:1015)\r\n        at io.netty.channel.AbstractChannel.write(AbstractChannel.java:289)\r\n        at io.grpc.netty.WriteQueue$AbstractQueuedCommand.run(WriteQueue.java:213)\r\n        at io.grpc.netty.WriteQueue.flush(WriteQueue.java:128)\r\n        at io.grpc.netty.WriteQueue.drainNow(WriteQueue.java:114)\r\n        at io.grpc.netty.NettyClientHandler.goingAway(NettyClientHandler.java:783)\r\n        at io.grpc.netty.NettyClientHandler.access$300(NettyClientHandler.java:91)\r\n        at io.grpc.netty.NettyClientHandler$3.onGoAwayReceived(NettyClientHandler.java:280)\r\n        at io.netty.handler.codec.http2.DefaultHttp2Connection.goAwayReceived(DefaultHttp2Connection.java:236)\r\n        at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.onGoAwayRead0(DefaultHttp2ConnectionDecoder.java:218)\r\n        at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$FrameReadListener.onGoAwayRead(DefaultHttp2ConnectionDecoder.java:551)\r\n        at io.netty.handler.codec.http2.Http2InboundFrameLogger$1.onGoAwayRead(Http2InboundFrameLogger.java:119)\r\n        at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readGoAwayFrame(DefaultHttp2FrameReader.java:591)\r\n        at io.netty.handler.codec.http2.DefaultHttp2FrameReader.processPayloadState(DefaultHttp2FrameReader.java:272)\r\n        at io.netty.handler.codec.http2.DefaultHttp2FrameReader.readFrame(DefaultHttp2FrameReader.java:160)\r\n        at io.netty.handler.codec.http2.Http2InboundFrameLogger.readFrame(Http2InboundFrameLogger.java:41)\r\n        at io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder.decodeFrame(DefaultHttp2ConnectionDecoder.java:174)\r\n        at io.netty.handler.codec.http2.Http2ConnectionHandler$FrameDecoder.decode(Http2ConnectionHandler.java:378)\r\n        at io.netty.handler.codec.http2.Http2ConnectionHandler.decode(Http2ConnectionHandler.java:438)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:498)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:437)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n        at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1486)\r\n        at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1235)\r\n        at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1282)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:498)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:437)\r\n        at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n        at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\r\n        at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\r\n        at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\r\n        at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n        at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:792)\r\n        at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:475)\r\n        at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)\r\n        at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n        at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n        at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n        at java.base/java.lang.Thread.run(Unknown Source)\r\n```\r\n\r\nThe bug should come from the way that `StreamBufferingEncoder.writeHeaders()` handles the condition `connection().goAwayReceived()`. The current behavior is to delegate to `super.writeHeaders()` and let the stream fail, but this will end up with `Http2Exception` with the message \"Maximum active streams violated for this endpoint\" which is horrible. See https://github.com/netty/netty/blob/e5951d46fc89db507ba7d2968d2ede26378f0b04/codec-http2/src/main/java/io/netty/handler/codec/http2/StreamBufferingEncoder.java#L152-L155\r\n\r\nModification:\r\n\r\nAbort new stream immediately if goaway received *and* MAX_CONCURRENT_STREAM reached in `StreamBufferingEncoder` rather than delegating to the `writeHeaders()` method of its super class.\r\n\r\nResult:\r\n\r\nIn the situation when GOAWAY received as well as MAX_CONCURRENT_STREAM exceeded, the client will fail the buffered streams with `Http2Error.NO_ERROR` and message \"GOAWAY received\" instead of \"Maximum active streams violated for this endpoint\".\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/test/java/io/netty/resolver/dns/DnsNameResolverTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjE4MzMzMjgyOjQxYTdlOWQwOGUxYWIyZTExOGMyM2EzZjJkZTgxNzIyYTJjNWUwY2I=",
                "url": "https://github.com/netty/netty/pull/11167/commits/41a7e9d08e1ab2e118c23a3f2de81722a2c5e0cb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11142,
                "url": "https://github.com/netty/netty/issues/11142",
                "title": "Netty DNS resolver fails to resolve computer's name on Windows",
                "bodyHTML": "<p dir=\"auto\">When running on a VM with Windows 10, Netty DNS resolver cannot resolve computer's name.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When on Windows, Netty DNS resolver is able to resolve the computer's name</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The current implementation throws an exception when one tries to resolve the computer's name</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.net.UnknownHostException: failed to resolve 'DESKTOP-BHE9K15' after 2 queries \n\tat io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1013)\n\tat io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:966)\n\tat io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:414)\n\tat io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:938)\n\tat io.netty.resolver.dns.DnsResolveContext.access$700(DnsResolveContext.java:63)\n\tat io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:467)\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: java.net.UnknownHostException: failed to resolve 'DESKTOP-BHE9K15' after 2 queries \n\tat io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1013)\n\tat io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:966)\n\tat io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:414)\n\tat io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:938)\n\tat io.netty.resolver.dns.DnsResolveContext.access$700(DnsResolveContext.java:63)\n\tat io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:467)\n</code></pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class Application {\n\n    public static void main(String[] args) throws Exception {\n        // JDK\n        InetAddress[] addresses = InetAddress.getAllByName(&quot;DESKTOP-BHE9K15&quot;);\n        System.out.println(Arrays.asList(addresses));\n\n        // JDK\n        InetAddress localhost = InetAddress.getLocalHost();\n        System.out.println(localhost);\n\n        NioEventLoopGroup group = new NioEventLoopGroup();\n        try {\n            List&lt;InetSocketAddress&gt; result =\n                    DefaultAddressResolverGroup.INSTANCE\n                            .getResolver(group.next())\n                            .resolveAll(InetSocketAddress.createUnresolved(&quot;DESKTOP-BHE9K15&quot;, 80))\n                            .get();\n            System.out.println(&quot;Netty DefaultAddressResolverGroup &quot; + result);\n\n            DnsNameResolverBuilder builder = new DnsNameResolverBuilder(group.next())\n                    .channelType(NioDatagramChannel.class);\n            DnsNameResolver resolver = builder.build();\n            resolver.resolveAll(&quot;DESKTOP-BHE9K15&quot;)\n                    .get();\n        }\n        finally {\n            group.shutdownGracefully();\n        }\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">public class Application {\n\n    public static void main(String[] args) throws Exception {\n        // JDK\n        InetAddress[] addresses = InetAddress.getAllByName(\"DESKTOP-BHE9K15\");\n        System.out.println(Arrays.asList(addresses));\n\n        // JDK\n        InetAddress localhost = InetAddress.getLocalHost();\n        System.out.println(localhost);\n\n        NioEventLoopGroup group = new NioEventLoopGroup();\n        try {\n            List&lt;InetSocketAddress&gt; result =\n                    DefaultAddressResolverGroup.INSTANCE\n                            .getResolver(group.next())\n                            .resolveAll(InetSocketAddress.createUnresolved(\"DESKTOP-BHE9K15\", 80))\n                            .get();\n            System.out.println(\"Netty DefaultAddressResolverGroup \" + result);\n\n            DnsNameResolverBuilder builder = new DnsNameResolverBuilder(group.next())\n                    .channelType(NioDatagramChannel.class);\n            DnsNameResolver resolver = builder.build();\n            resolver.resolveAll(\"DESKTOP-BHE9K15\")\n                    .get();\n        }\n        finally {\n            group.shutdownGracefully();\n        }\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">when the above code is executed, the result is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[DESKTOP-BHE9K15/IPv4, DESKTOP-BHE9K15/IPv6]\nDESKTOP-BHE9K15/IPv4\nNetty DefaultAddressResolverGroup [DESKTOP-BHE9K15/IPv4:80, DESKTOP-BHE9K15/[IPv6]:80]\nException in thread &quot;main&quot; java.util.concurrent.ExecutionException: java.net.UnknownHostException: failed to resolve 'DESKTOP-BHE9K15' after 2 queries \"><pre class=\"notranslate\"><code class=\"notranslate\">[DESKTOP-BHE9K15/IPv4, DESKTOP-BHE9K15/IPv6]\nDESKTOP-BHE9K15/IPv4\nNetty DefaultAddressResolverGroup [DESKTOP-BHE9K15/IPv4:80, DESKTOP-BHE9K15/[IPv6]:80]\nException in thread \"main\" java.util.concurrent.ExecutionException: java.net.UnknownHostException: failed to resolve 'DESKTOP-BHE9K15' after 2 queries \n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.63.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">java 11</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows 10</p>",
                "resourcePath": "/netty/netty/issues/11142",
                "createdAt": "2021-04-05T16:29:40Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "SimpleChannelPromiseAggregator use first exception instead of last",
        "url": "https://github.com/netty/netty/pull/11168",
        "resourcePath": "/netty/netty/pull/11168",
        "createdAt": "2021-04-19T19:04:23Z",
        "number": 11168,
        "mergeCommit": {
          "oid": "75c1134c0d33becb0b746155472e6076e9005340",
          "message": "SimpleChannelPromiseAggregator use first exception instead of last (#11168)\n\nMotivation:\r\nSimpleChannelPromiseAggregator implements the promise API and allows for\r\nmultiple operations to share a common promise. It currently propagates\r\nthe last exception to occur, but this may mask the original exception\r\nwhich lead to the last exception and make debugging more difficult.\r\n\r\nModifications:\r\n- SimpleChannelPromiseAggregator propagates the first exception instead\r\n  of the last exception.\r\n\r\nResult:\r\nFixes https://github.com/netty/netty/issues/11161.",
          "commitUrl": "https://github.com/netty/netty/commit/75c1134c0d33becb0b746155472e6076e9005340",
          "parents": {
            "nodes": [
              {
                "oid": "acd9b383bc0a4597c81aea7fd52190c5dbfe5a00",
                "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (codec) (#11170) (#11179)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved.\r\n\r\nFixes #11170"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2CodecUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/HttpToHttp2ConnectionHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjE4MzU2ODIxOmE3YWFmMTI2M2E0OWQ2Mzk3MTM3ODBlMjBiZmM2MTQ5MjFkMjhlZjQ=",
                "url": "https://github.com/netty/netty/pull/11168/commits/a7aaf1263a49d639713780e20bfc614921d28ef4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11161,
                "url": "https://github.com/netty/netty/issues/11161",
                "title": "HttpToHttp2ConnectionHandler#write continues on error and doesn't report correct exception",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">HttpToHttp2ConnectionHandler#write should interrupt as soon as an Exception occurs and should report it.</p>\n<p dir=\"auto\">This looks similar to what was reported in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"226553003\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/6705\" data-hovercard-type=\"issue\" data-hovercard-url=\"/netty/netty/issues/6705/hovercard\" href=\"https://github.com/netty/netty/issues/6705\">#6705</a>.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">When an Exception occurs, it's recorded in a <code class=\"notranslate\">SimpleChannelPromiseAggregator</code>.<br>\nThe execution continues, eg if the Exception occurred in <code class=\"notranslate\">writeHeaders</code>, <code class=\"notranslate\">writeData</code> will be performed, typically resulting in cascading failures such as \"stream is missing\".</p>\n<p dir=\"auto\"><code class=\"notranslate\">SimpleChannelPromiseAggregator</code> only reports the last Exception, losing the actual and useful one.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Try to write a FullHttpRequest with a stream id that exceeds the max number of concurrent stream.</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">DefaultHttpConnection#checkNewStreamAllowed</code> will throw an Http2Exception(\"Maximum active streams violated for this endpoint.\")</li>\n<li><code class=\"notranslate\">DefaultHttp2ConnectionEncoder#writeHeaders0</code> will catch it and fail the promise</li>\n<li><code class=\"notranslate\">HttpToHttp2ConnectionHandler</code> will proceed with <code class=\"notranslate\">writeData</code></li>\n<li><code class=\"notranslate\">DefaultHttp2ConnectionEncoder#writeData</code> will crash in <code class=\"notranslate\">requireStream</code> with an IllegalArgumentException(\"Stream no longer exists\"), catch it and fail the promise, replacing the original Exception</li>\n</ul>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.63</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">irrelevant</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">irrelevant</p>",
                "resourcePath": "/netty/netty/issues/11161",
                "createdAt": "2021-04-14T22:45:45Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix support for IP_RECVORIGDSTADDR when using native epoll transport",
        "url": "https://github.com/netty/netty/pull/11173",
        "resourcePath": "/netty/netty/pull/11173",
        "createdAt": "2021-04-20T09:49:18Z",
        "number": 11173,
        "mergeCommit": {
          "oid": "e27831d76723c08acfd266b185e4516ed77f93f1",
          "message": "Fix support for IP_RECVORIGDSTADDR when using native epoll transport (#11173)\n\n\r\nMotivation:\r\n\r\nWhile adding support for GRO (b05fdf3ff8889c09dbea12d3844116b5489844c6) we broke support for IP_RECVORIGDSTADDR when using the native transport. Beside this we also didnt correctly handle IP_RECVORIGDSTADDR when recvmmsg was used.\r\n\r\nModifications:\r\n\r\n- Fix support for IP_RECVORIGDSTADDR when using the native epoll transport for normal reads (recvmsg) but also for scattering reads (recvmmsg)\r\n- Remove code from unix code-base as the support is linux specific and we not need the code there anymore\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11141",
          "commitUrl": "https://github.com/netty/netty/commit/e27831d76723c08acfd266b185e4516ed77f93f1",
          "parents": {
            "nodes": [
              {
                "oid": "697952e3e65acd8f40f9c5bb57c9a9134f77d397",
                "message": "Add WebSocketClientHandshaker / WebSocketServerHandshaker close methods that take ChannelHandlerContext as parameter (#11171)\n\n\r\nMotivation:\r\n\r\nAt the moment we only expose close(...) methods that take a Channel as paramater. This can be problematic as the write will start at the end of the pipeline which may contain ChannelOutboundHandler implementations that not expect WebSocketFrame objects. We should better also support to pass in a ChannelHandlerContext as starting point for the write which ensures that the WebSocketFrame objects will be handled correctly from this position of the pipeline.\r\n\r\nModifications:\r\n\r\n- Add new close(...) methods that take a ChannelHandlerContext\r\n- Add javadoc sentence to point users to the new methods.\r\n\r\nResult:\r\n\r\nBe able to \"start\" the close at the right position in the pipeline."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/c/netty_epoll_native.c"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/java/io/netty/channel/epoll/NativeDatagramPacketArray.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/src/main/c/netty_unix_socket.c"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjE5MTcyNDQ0OjE3YzI1NjVlY2ZlYTU0Y2FkMjBmYWQ2Y2NiYjhhMDlkMWY3ODE0YTk=",
                "url": "https://github.com/netty/netty/pull/11173/commits/17c2565ecfea54cad20fad6ccbb8a09d1f7814a9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11141,
                "url": "https://github.com/netty/netty/issues/11141",
                "title": "io.netty.channel.epoll.EpollChannelOption#IP_RECVORIGDSTADDR not working",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Remote address as recipient in DatagramPacket</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java[9671]: [epollEventLoopGroup-19-1] DEBUG [id: 0xc15eca1c, L:/0.0.0.0:8484] READ: DatagramPacket(/10.40.32.1:57334 =&gt; /176.103.130.136:53, PooledUnsafeDirectByteBuf(ridx: 0, widx: 41, cap: 2048)), 41B\"><pre class=\"notranslate\"><code class=\"notranslate\">java[9671]: [epollEventLoopGroup-19-1] DEBUG [id: 0xc15eca1c, L:/0.0.0.0:8484] READ: DatagramPacket(/10.40.32.1:57334 =&gt; /176.103.130.136:53, PooledUnsafeDirectByteBuf(ridx: 0, widx: 41, cap: 2048)), 41B\n</code></pre></div>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Udp server local address as recipient in DatagramPacket</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java[9563]: [epollEventLoopGroup-19-1] DEBUG [id: 0xac9e540e, L:/0.0.0.0:8484] READ: DatagramPacket(/10.40.32.1:59030 =&gt; /0.0.0.0:8484, PooledUnsafeDirectByteBuf(ridx: 0, widx: 50, cap: 2048)), 50B\"><pre class=\"notranslate\"><code class=\"notranslate\">java[9563]: [epollEventLoopGroup-19-1] DEBUG [id: 0xac9e540e, L:/0.0.0.0:8484] READ: DatagramPacket(/10.40.32.1:59030 =&gt; /0.0.0.0:8484, PooledUnsafeDirectByteBuf(ridx: 0, widx: 50, cap: 2048)), 50B\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">Starting with 4.1.61.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"14.0.1\" 2020-04-14<br>\nOpenJDK Runtime Environment (build 14.0.1+7-Debian-2buster1)<br>\nOpenJDK 64-Bit Server VM (build 14.0.1+7-Debian-2buster1, mixed mode, sharing)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux 4.19.0-8-cloud-amd64 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"418688\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/1\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/1/hovercard\" href=\"https://github.com/netty/netty/pull/1\">#1</a> SMP Debian 4.19.98-1 (2020-01-26) x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/11141",
                "createdAt": "2021-04-05T12:43:56Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Utilize i.n.u.internal.ObjectUtil Preconditions (codec) (#1170)",
        "url": "https://github.com/netty/netty/pull/11179",
        "resourcePath": "/netty/netty/pull/11179",
        "createdAt": "2021-04-22T07:58:53Z",
        "number": 11179,
        "mergeCommit": {
          "oid": "acd9b383bc0a4597c81aea7fd52190c5dbfe5a00",
          "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (codec) (#11170) (#11179)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved.\r\n\r\nFixes #11170",
          "commitUrl": "https://github.com/netty/netty/commit/acd9b383bc0a4597c81aea7fd52190c5dbfe5a00",
          "parents": {
            "nodes": [
              {
                "oid": "36dcaf0c507ca7a4cc4e1117a760c12ac0b22eb4",
                "message": "Fix typo in exception message"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/ZlibDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/json/JsonObjectDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/marshalling/LimitingByteInput.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/serialization/CompatibleObjectEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/xml/XmlFrameDecoder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjIwODU2OTY4OmQ2N2IzMTBjODUwNmFiNTVlYWU3ZmM1NjI2Y2NjZGQxMmM0ODE4MWQ=",
                "url": "https://github.com/netty/netty/pull/11179/commits/d67b310c8506ab55eae7fc5626cccdd12c48181d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11170,
                "url": "https://github.com/netty/netty/issues/11170",
                "title": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">NullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (&gt;0, &gt;=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Some checks are already done with the io.netty.util.internal.ObjectUtil code. Some are done manually.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">checkout the master<br>\ngrep -r \"Objects.req\"<br>\ngrep -r \"throw new NullPointerException\"<br>\ngrep -r \"throw new IllegalArgumentException\" (individual check necessary)</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Existing codebase.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1 (updated version)</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">Providing the fix</h3>\n<p dir=\"auto\">One pull request per sub-project to enable reviewers to focus on a relevant subset. First one is common itself, including a new unit test for ObjectUtil itself.</p>",
                "resourcePath": "/netty/netty/issues/11170",
                "createdAt": "2021-04-20T05:58:00Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Utilize i.n.u.internal.ObjectUtil Preconditions (handler) (#11170)",
        "url": "https://github.com/netty/netty/pull/11180",
        "resourcePath": "/netty/netty/pull/11180",
        "createdAt": "2021-04-22T08:38:33Z",
        "number": 11180,
        "mergeCommit": {
          "oid": "2f4beae8ecfec25d0504119a7c4881092872e16a",
          "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (handler) (#11170) (#11180)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved.\r\n\r\nFixes #11170",
          "commitUrl": "https://github.com/netty/netty/commit/2f4beae8ecfec25d0504119a7c4881092872e16a",
          "parents": {
            "nodes": [
              {
                "oid": "75c1134c0d33becb0b746155472e6076e9005340",
                "message": "SimpleChannelPromiseAggregator use first exception instead of last (#11168)\n\nMotivation:\r\nSimpleChannelPromiseAggregator implements the promise API and allows for\r\nmultiple operations to share a common promise. It currently propagates\r\nthe last exception to occur, but this may mask the original exception\r\nwhich lead to the last exception and make debugging more difficult.\r\n\r\nModifications:\r\n- SimpleChannelPromiseAggregator propagates the first exception instead\r\n  of the last exception.\r\n\r\nResult:\r\nFixes https://github.com/netty/netty/issues/11161."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslContextBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/util/FingerprintTrustManagerFactoryBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/stream/ChunkedNioStream.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/stream/ChunkedWriteHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/traffic/AbstractTrafficShapingHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/traffic/GlobalChannelTrafficCounter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/traffic/GlobalChannelTrafficShapingHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/traffic/TrafficCounter.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjIwODg1MjI5OjA5NGY2YmU0OTY3MjVkNjM2ZjIwMWI3NWQ3ODA5MDIzZTk1YjI2OTE=",
                "url": "https://github.com/netty/netty/pull/11180/commits/094f6be496725d636f201b75d7809023e95b2691"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11170,
                "url": "https://github.com/netty/netty/issues/11170",
                "title": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">NullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (&gt;0, &gt;=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Some checks are already done with the io.netty.util.internal.ObjectUtil code. Some are done manually.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">checkout the master<br>\ngrep -r \"Objects.req\"<br>\ngrep -r \"throw new NullPointerException\"<br>\ngrep -r \"throw new IllegalArgumentException\" (individual check necessary)</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Existing codebase.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1 (updated version)</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">Providing the fix</h3>\n<p dir=\"auto\">One pull request per sub-project to enable reviewers to focus on a relevant subset. First one is common itself, including a new unit test for ObjectUtil itself.</p>",
                "resourcePath": "/netty/netty/issues/11170",
                "createdAt": "2021-04-20T05:58:00Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Utilize i.n.u.internal.ObjectUtil Preconditions (transport*) (#11170)",
        "url": "https://github.com/netty/netty/pull/11181",
        "resourcePath": "/netty/netty/pull/11181",
        "createdAt": "2021-04-22T10:01:29Z",
        "number": 11181,
        "mergeCommit": {
          "oid": "c3416d8ad2260f3c9bc98a9061d25bba92020f93",
          "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (transport*) (#11170) (#11181)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved.\r\n\r\nFixes #11170",
          "commitUrl": "https://github.com/netty/netty/commit/c3416d8ad2260f3c9bc98a9061d25bba92020f93",
          "parents": {
            "nodes": [
              {
                "oid": "2f4beae8ecfec25d0504119a7c4881092872e16a",
                "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (handler) (#11170) (#11180)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved.\r\n\r\nFixes #11170"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/java/io/netty/channel/epoll/TcpMd5Util.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/src/main/java/io/netty/channel/kqueue/NativeLongArray.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-rxtx/src/main/java/io/netty/channel/rxtx/DefaultRxtxChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-udt/src/test/java/io/netty/test/udt/util/TrafficControl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/DefaultChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/local/LocalAddress.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/pool/FixedChannelPool.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjIwOTQ0MTU2OjU1ZTQ5ZDdmNjI2YWQ1NzdlNDk2OTQ0M2UyN2EwMGI3MGQwYWI3ZDk=",
                "url": "https://github.com/netty/netty/pull/11181/commits/55e49d7f626ad577e4969443e27a00b70d0ab7d9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11170,
                "url": "https://github.com/netty/netty/issues/11170",
                "title": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">NullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (&gt;0, &gt;=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Some checks are already done with the io.netty.util.internal.ObjectUtil code. Some are done manually.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">checkout the master<br>\ngrep -r \"Objects.req\"<br>\ngrep -r \"throw new NullPointerException\"<br>\ngrep -r \"throw new IllegalArgumentException\" (individual check necessary)</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Existing codebase.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1 (updated version)</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">Providing the fix</h3>\n<p dir=\"auto\">One pull request per sub-project to enable reviewers to focus on a relevant subset. First one is common itself, including a new unit test for ObjectUtil itself.</p>",
                "resourcePath": "/netty/netty/issues/11170",
                "createdAt": "2021-04-20T05:58:00Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Utilize i.n.u.internal.ObjectUtil Preconditions (buffer) (#11170)",
        "url": "https://github.com/netty/netty/pull/11182",
        "resourcePath": "/netty/netty/pull/11182",
        "createdAt": "2021-04-22T10:40:12Z",
        "number": 11182,
        "mergeCommit": {
          "oid": "d5fabe78a7b4b7d4124177c0f3dd103b1028c18e",
          "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (buffer) (#11170) (#11182)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved.\r\n\r\nFixes #11170",
          "commitUrl": "https://github.com/netty/netty/commit/d5fabe78a7b4b7d4124177c0f3dd103b1028c18e",
          "parents": {
            "nodes": [
              {
                "oid": "c3416d8ad2260f3c9bc98a9061d25bba92020f93",
                "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (transport*) (#11170) (#11181)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved.\r\n\r\nFixes #11170"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/ByteBufInputStream.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/ByteBufUtil.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjIwOTcwNDIyOjdiMTBiMWUzMzBiNzlhYmIwODQ0M2EzZjUxYzI4YTBkNGY3YWQyZjg=",
                "url": "https://github.com/netty/netty/pull/11182/commits/7b10b1e330b79abb08443a3f51c28a0d4f7ad2f8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11170,
                "url": "https://github.com/netty/netty/issues/11170",
                "title": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">NullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (&gt;0, &gt;=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Some checks are already done with the io.netty.util.internal.ObjectUtil code. Some are done manually.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">checkout the master<br>\ngrep -r \"Objects.req\"<br>\ngrep -r \"throw new NullPointerException\"<br>\ngrep -r \"throw new IllegalArgumentException\" (individual check necessary)</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Existing codebase.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1 (updated version)</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">Providing the fix</h3>\n<p dir=\"auto\">One pull request per sub-project to enable reviewers to focus on a relevant subset. First one is common itself, including a new unit test for ObjectUtil itself.</p>",
                "resourcePath": "/netty/netty/issues/11170",
                "createdAt": "2021-04-20T05:58:00Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Utilize i.n.u.internal.ObjectUtil Preconditions (example) (#11170)",
        "url": "https://github.com/netty/netty/pull/11183",
        "resourcePath": "/netty/netty/pull/11183",
        "createdAt": "2021-04-22T11:21:07Z",
        "number": 11183,
        "mergeCommit": {
          "oid": "52ca64033a30938d042fa12486db322bf7e2f610",
          "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (example) (#11170) (#11183)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved.\r\n\r\nFixes #11170",
          "commitUrl": "https://github.com/netty/netty/commit/52ca64033a30938d042fa12486db322bf7e2f610",
          "parents": {
            "nodes": [
              {
                "oid": "d5fabe78a7b4b7d4124177c0f3dd103b1028c18e",
                "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (buffer) (#11170) (#11182)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved.\r\n\r\nFixes #11170"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "example/src/main/java/io/netty/example/http2/helloworld/frame/server/Http2ServerInitializer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "example/src/main/java/io/netty/example/http2/helloworld/multiplex/server/Http2ServerInitializer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "example/src/main/java/io/netty/example/http2/helloworld/server/Http2ServerInitializer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "example/src/main/java/io/netty/example/worldclock/WorldClockProtocol.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjIwOTk2NTA2OjVmYzlmOWMzYjJmN2E5MjE2NDA1YzdlNDUxOWRkMDg3NWIzNGRiOTc=",
                "url": "https://github.com/netty/netty/pull/11183/commits/5fc9f9c3b2f7a9216405c7e4519dd0875b34db97"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11170,
                "url": "https://github.com/netty/netty/issues/11170",
                "title": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">NullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (&gt;0, &gt;=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Some checks are already done with the io.netty.util.internal.ObjectUtil code. Some are done manually.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">checkout the master<br>\ngrep -r \"Objects.req\"<br>\ngrep -r \"throw new NullPointerException\"<br>\ngrep -r \"throw new IllegalArgumentException\" (individual check necessary)</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Existing codebase.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1 (updated version)</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">Providing the fix</h3>\n<p dir=\"auto\">One pull request per sub-project to enable reviewers to focus on a relevant subset. First one is common itself, including a new unit test for ObjectUtil itself.</p>",
                "resourcePath": "/netty/netty/issues/11170",
                "createdAt": "2021-04-20T05:58:00Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (codec*) (#11170)",
        "url": "https://github.com/netty/netty/pull/11185",
        "resourcePath": "/netty/netty/pull/11185",
        "createdAt": "2021-04-22T12:44:06Z",
        "number": 11185,
        "mergeCommit": {
          "oid": "d3fa33058d72715c8c021dd0d8b33dfd0cd45268",
          "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (codec*) (#11170) (#11185)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved.\r\nFixes #11170",
          "commitUrl": "https://github.com/netty/netty/commit/d3fa33058d72715c8c021dd0d8b33dfd0cd45268",
          "parents": {
            "nodes": [
              {
                "oid": "52ca64033a30938d042fa12486db322bf7e2f610",
                "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (example) (#11170) (#11183)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved.\r\n\r\nFixes #11170"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/ReadOnlyHttp2Headers.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttMessageBuilders.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-socks/src/main/java/io/netty/handler/codec/socksx/v5/DefaultSocks5InitialRequest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjIxMDU2NDY5OjJjZWMxMWE3NTRlZmQ3Zjk5YjRkZTJhYTQzOWVkYzc3Njc3MmI4N2E=",
                "url": "https://github.com/netty/netty/pull/11185/commits/2cec11a754efd7f99b4de2aa439edc776772b87a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11170,
                "url": "https://github.com/netty/netty/issues/11170",
                "title": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">NullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (&gt;0, &gt;=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Some checks are already done with the io.netty.util.internal.ObjectUtil code. Some are done manually.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">checkout the master<br>\ngrep -r \"Objects.req\"<br>\ngrep -r \"throw new NullPointerException\"<br>\ngrep -r \"throw new IllegalArgumentException\" (individual check necessary)</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Existing codebase.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1 (updated version)</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">Providing the fix</h3>\n<p dir=\"auto\">One pull request per sub-project to enable reviewers to focus on a relevant subset. First one is common itself, including a new unit test for ObjectUtil itself.</p>",
                "resourcePath": "/netty/netty/issues/11170",
                "createdAt": "2021-04-20T05:58:00Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Utilize i.n.u.internal.ObjectUtil Preconditions (misc) (#11170)",
        "url": "https://github.com/netty/netty/pull/11186",
        "resourcePath": "/netty/netty/pull/11186",
        "createdAt": "2021-04-22T13:31:44Z",
        "number": 11186,
        "mergeCommit": {
          "oid": "4eafccf9714a331c1964acc73cf2d7db48af62fa",
          "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (misc) (#11170) (#11186)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved in microbench and resolver-dns\r\n\r\nFixes #11170",
          "commitUrl": "https://github.com/netty/netty/commit/4eafccf9714a331c1964acc73cf2d7db48af62fa",
          "parents": {
            "nodes": [
              {
                "oid": "d3fa33058d72715c8c021dd0d8b33dfd0cd45268",
                "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (codec*) (#11170) (#11185)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved.\r\nFixes #11170"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "microbench/src/main/java/io/netty/handler/codec/http2/Http2FrameWriterDataBenchmark.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsServerAddresses.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjIxMDk4MTk4OmFhZDUyNTk2ZjVmZmJiMjRkZTI5Y2E0NDJlMTMyZmI3NjcyZTdiZjk=",
                "url": "https://github.com/netty/netty/pull/11186/commits/aad52596f5ffbb24de29ca442e132fb7672e7bf9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11170,
                "url": "https://github.com/netty/netty/issues/11170",
                "title": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">NullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (&gt;0, &gt;=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Some checks are already done with the io.netty.util.internal.ObjectUtil code. Some are done manually.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">checkout the master<br>\ngrep -r \"Objects.req\"<br>\ngrep -r \"throw new NullPointerException\"<br>\ngrep -r \"throw new IllegalArgumentException\" (individual check necessary)</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Existing codebase.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1 (updated version)</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">Providing the fix</h3>\n<p dir=\"auto\">One pull request per sub-project to enable reviewers to focus on a relevant subset. First one is common itself, including a new unit test for ObjectUtil itself.</p>",
                "resourcePath": "/netty/netty/issues/11170",
                "createdAt": "2021-04-20T05:58:00Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Utilize i.n.u.internal.ObjectUtil Preconditions (codec-http) (#11170)",
        "url": "https://github.com/netty/netty/pull/11187",
        "resourcePath": "/netty/netty/pull/11187",
        "createdAt": "2021-04-22T16:23:11Z",
        "number": 11187,
        "mergeCommit": {
          "oid": "db2f60c870cf24fca28d15ebac95dbfded912636",
          "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (codec-http) (#11170) (#11187)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved.\r\n\r\nFixes #11170",
          "commitUrl": "https://github.com/netty/netty/commit/db2f60c870cf24fca28d15ebac95dbfded912636",
          "parents": {
            "nodes": [
              {
                "oid": "4eafccf9714a331c1964acc73cf2d7db48af62fa",
                "message": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions (misc) (#11170) (#11186)\n\nMotivation:\r\n\r\nNullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (>0, >=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.\r\n\r\nModifications:\r\n\r\n* import static relevant checks\r\n* Replace manual checks with ObjectUtil methods\r\n\r\nResult:\r\n\r\nAll checks needed are done with ObjectUtil, some exception texts are improved in microbench and resolver-dns\r\n\r\nFixes #11170"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpVersion.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/DefaultCookie.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cors/CorsConfigBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractHttpData.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/extensions/WebSocketClientExtensionHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/extensions/WebSocketServerExtensionHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/rtsp/RtspMethods.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyCodecUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockJZlibEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/spdy/SpdyHeaderBlockZlibEncoder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjIxMjYxNTU0OjkxYzY5MTE4NWNiMDFjNTY2ZTNkZWE3YjlkM2YwODU5N2RjMDFkM2I=",
                "url": "https://github.com/netty/netty/pull/11187/commits/91c691185cb01c566e3dea7b9d3f08597dc01d3b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11170,
                "url": "https://github.com/netty/netty/issues/11170",
                "title": "Utilize i.n.u.internal.ObjectUtil to assert Preconditions",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">NullChecks resulting in a NullPointerException or IllegalArgumentException, numeric ranges (&gt;0, &gt;=0) checks, not empty strings/arrays checks must never be anonymous but with the parameter or variable name which is checked. They must be specific and should not be done with an \"OR-Logic\" (if a == null || b == null) throw new NullPointerEx.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Some checks are already done with the io.netty.util.internal.ObjectUtil code. Some are done manually.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">checkout the master<br>\ngrep -r \"Objects.req\"<br>\ngrep -r \"throw new NullPointerException\"<br>\ngrep -r \"throw new IllegalArgumentException\" (individual check necessary)</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Existing codebase.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1 (updated version)</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Not relevant, all</p>\n<h3 dir=\"auto\">Providing the fix</h3>\n<p dir=\"auto\">One pull request per sub-project to enable reviewers to focus on a relevant subset. First one is common itself, including a new unit test for ObjectUtil itself.</p>",
                "resourcePath": "/netty/netty/issues/11170",
                "createdAt": "2021-04-20T05:58:00Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "adjust validation logic when websocket server check starts with '/'(#\u2026",
        "url": "https://github.com/netty/netty/pull/11191",
        "resourcePath": "/netty/netty/pull/11191",
        "createdAt": "2021-04-23T16:46:49Z",
        "number": 11191,
        "mergeCommit": {
          "oid": "c1b922b224f57122c615b4871b6200cad58d5f3b",
          "message": "adjust validation logic when websocket server check starts with '/' (#11191)\n\n\r\nMotivation:\r\n\r\nWhen create a WebSocketServerProtocolConfig to check URI path starts from '/',\r\nonly '/' or '//subPath' can be passed by the checker,but '/subPath' should be\r\npassed as well\r\n\r\nModifications:\r\n\r\nin `WebSocketServerProtocolHandshakeHandler.isWebSocketPath()` treat '/' a special case\r\n\r\nResult:\r\n'/subPath' can be passed",
          "commitUrl": "https://github.com/netty/netty/commit/c1b922b224f57122c615b4871b6200cad58d5f3b",
          "parents": {
            "nodes": [
              {
                "oid": "a98c60283b38830607780e039c7dd52715ec5814",
                "message": "Enable Tlsv1.3 when using BouncyCastle ALPN support (#11193)\n\nMotivation:\r\n\r\nIn the latest version of BouncyCastle, BCJSSE:'TLSv1.3' is now a supported protocol for both client and server. So should consider enabling TLSv1.3 when TLSv1.3 is available\r\n\r\nModification:\r\n\r\nThis pr is to enable TLSv1.3 when using BouncyCastle ALPN support, please review this pr,thanks\r\n\r\nResult:\r\n\r\nEnable TLSv1.3 when using BouncyCastle ALPN support\r\n\r\nSigned-off-by: xingrufei <xingrufei@sogou-inc.com>\r\n\r\nCo-authored-by: xingrufei <xingrufei@sogou-inc.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjIyMjAwNzU1OmM5MDFmNTkwNTFhNGJhMzgzODJkODQxMDc0MmVlOTJhYjk4NzU4Njk=",
                "url": "https://github.com/netty/netty/pull/11191/commits/c901f59051a4ba38382d8410742ee92ab9875869"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11190,
                "url": "https://github.com/netty/netty/issues/11190",
                "title": "WebSocket checkStartWith behave not good when set websocket path to '/'",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">when create an websocket handler like this</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"WebSocketServerProtocolHandler h = new WebSocketServerProtocolHandler(&quot;/&quot;,true);\"><pre class=\"notranslate\"><span class=\"pl-smi\">WebSocketServerProtocolHandler</span> <span class=\"pl-s1\">h</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">WebSocketServerProtocolHandler</span>(<span class=\"pl-s\">\"/\"</span>,<span class=\"pl-c1\">true</span>);</pre></div>\n<p dir=\"auto\">i expected:<br>\n<code class=\"notranslate\">/</code> return true<br>\n<code class=\"notranslate\">/my-sub-path</code> return true</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"702625436\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/10582\" data-hovercard-type=\"issue\" data-hovercard-url=\"/netty/netty/issues/10582/hovercard\" href=\"https://github.com/netty/netty/issues/10582#issue-702625436\">#10582 (comment)</a><br>\nonly these path can be passed<br>\n<code class=\"notranslate\">/</code><br>\n<code class=\"notranslate\">//my-sub-path</code><br>\npath like <code class=\"notranslate\">/my-sub-path</code> is rejected,which is counter-intuitive</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">just run a websocket server with this handler</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"WebSocketServerProtocolHandler h = new WebSocketServerProtocolHandler(&quot;/&quot;,true);\"><pre class=\"notranslate\"><span class=\"pl-smi\">WebSocketServerProtocolHandler</span> <span class=\"pl-s1\">h</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">WebSocketServerProtocolHandler</span>(<span class=\"pl-s\">\"/\"</span>,<span class=\"pl-c1\">true</span>);</pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"/**\n * @author w00464553\n * @date 2020/5/25\n */\npublic class Application {\n    public static void main(String[] args) {\n        EmbeddedChannel channel = new EmbeddedChannel(\n                new HttpServerCodec(),\n                new HttpObjectAggregator(65536),\n                new WebSocketServerCompressionHandler(),\n                new WebSocketServerProtocolHandler(&quot;/&quot;, true));\n\n        DefaultFullHttpRequest request = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.GET,\n                //this path will be rejected by handler,change to '/' or '//v1/my-path' to see\n                //a successful handshake\n                &quot;/v1/my-path&quot;);\n        request.headers().set(&quot;upgrade&quot;, &quot;websocket&quot;);\n        request.headers().set(&quot;sec-websocket-key&quot;, &quot;dGhlIHNhbXBsZSBub25jZQ==&quot;);\n        request.headers().set(&quot;sec-websocket-version&quot;, &quot;13&quot;);\n\n        channel.writeInbound(request);\n        Object o = channel.readOutbound();\n        if (o instanceof ByteBuf) {\n            ByteBuf bb = ((ByteBuf) o);\n            byte[] buf = new byte[bb.readableBytes()];\n            bb.readBytes(buf);\n            //if success, an 101 Switching Protocols will be printed\n            System.out.println(new String(buf));\n        } else {\n            //or null\n            System.out.println(o);\n        }\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> * @author w00464553</span>\n<span class=\"pl-c\"> * @date 2020/5/25</span>\n<span class=\"pl-c\"> */</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Application</span> {\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) {\n        <span class=\"pl-smi\">EmbeddedChannel</span> <span class=\"pl-s1\">channel</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">EmbeddedChannel</span>(\n                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">HttpServerCodec</span>(),\n                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">HttpObjectAggregator</span>(<span class=\"pl-c1\">65536</span>),\n                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">WebSocketServerCompressionHandler</span>(),\n                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">WebSocketServerProtocolHandler</span>(<span class=\"pl-s\">\"/\"</span>, <span class=\"pl-c1\">true</span>));\n\n        <span class=\"pl-smi\">DefaultFullHttpRequest</span> <span class=\"pl-s1\">request</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DefaultFullHttpRequest</span>(<span class=\"pl-smi\">HttpVersion</span>.<span class=\"pl-c1\">HTTP_1_1</span>, <span class=\"pl-smi\">HttpMethod</span>.<span class=\"pl-c1\">GET</span>,\n                <span class=\"pl-c\">//this path will be rejected by handler,change to '/' or '//v1/my-path' to see</span>\n                <span class=\"pl-c\">//a successful handshake</span>\n                <span class=\"pl-s\">\"/v1/my-path\"</span>);\n        <span class=\"pl-s1\">request</span>.<span class=\"pl-en\">headers</span>().<span class=\"pl-en\">set</span>(<span class=\"pl-s\">\"upgrade\"</span>, <span class=\"pl-s\">\"websocket\"</span>);\n        <span class=\"pl-s1\">request</span>.<span class=\"pl-en\">headers</span>().<span class=\"pl-en\">set</span>(<span class=\"pl-s\">\"sec-websocket-key\"</span>, <span class=\"pl-s\">\"dGhlIHNhbXBsZSBub25jZQ==\"</span>);\n        <span class=\"pl-s1\">request</span>.<span class=\"pl-en\">headers</span>().<span class=\"pl-en\">set</span>(<span class=\"pl-s\">\"sec-websocket-version\"</span>, <span class=\"pl-s\">\"13\"</span>);\n\n        <span class=\"pl-s1\">channel</span>.<span class=\"pl-en\">writeInbound</span>(<span class=\"pl-s1\">request</span>);\n        <span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">o</span> = <span class=\"pl-s1\">channel</span>.<span class=\"pl-en\">readOutbound</span>();\n        <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">o</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">ByteBuf</span>) {\n            <span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">bb</span> = ((<span class=\"pl-smi\">ByteBuf</span>) <span class=\"pl-s1\">o</span>);\n            <span class=\"pl-smi\">byte</span>[] <span class=\"pl-s1\">buf</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">byte</span>[<span class=\"pl-s1\">bb</span>.<span class=\"pl-en\">readableBytes</span>()];\n            <span class=\"pl-s1\">bb</span>.<span class=\"pl-en\">readBytes</span>(<span class=\"pl-s1\">buf</span>);\n            <span class=\"pl-c\">//if success, an 101 Switching Protocols will be printed</span>\n            <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">String</span>(<span class=\"pl-s1\">buf</span>));\n        } <span class=\"pl-k\">else</span> {\n            <span class=\"pl-c\">//or null</span>\n            <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">o</span>);\n        }\n    }\n}</pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.63.Final</p>",
                "resourcePath": "/netty/netty/issues/11190",
                "createdAt": "2021-04-23T07:39:23Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Be more lenient when check the number of registered channels",
        "url": "https://github.com/netty/netty/pull/11194",
        "resourcePath": "/netty/netty/pull/11194",
        "createdAt": "2021-04-26T07:49:56Z",
        "number": 11194,
        "mergeCommit": {
          "oid": "48e2c0d5cdabd7f52706d618969da5f961ff2d0f",
          "message": "Be more lenient when check the number of registered channels (#11194)\n\nMotivation:\r\n\r\nSome SingleEventLoop implementations may need some \"time\" to update the number of registered Channels. We should loop until we see the correct value or timeout if we did not observe the correct value.\r\n\r\nModifications:\r\n\r\n- Loop until we see the correct value\r\n- add test timeout\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11169",
          "commitUrl": "https://github.com/netty/netty/commit/48e2c0d5cdabd7f52706d618969da5f961ff2d0f",
          "parents": {
            "nodes": [
              {
                "oid": "c1b922b224f57122c615b4871b6200cad58d5f3b",
                "message": "adjust validation logic when websocket server check starts with '/' (#11191)\n\n\r\nMotivation:\r\n\r\nWhen create a WebSocketServerProtocolConfig to check URI path starts from '/',\r\nonly '/' or '//subPath' can be passed by the checker,but '/subPath' should be\r\npassed as well\r\n\r\nModifications:\r\n\r\nin `WebSocketServerProtocolHandshakeHandler.isWebSocketPath()` treat '/' a special case\r\n\r\nResult:\r\n'/subPath' can be passed"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite/src/main/java/io/netty/testsuite/transport/AbstractSingleThreadEventLoopTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjIzMDYyNzc2OmQyZjI3ZjI4YzU0Yjc3ODhmZjU5YWZlYzFhNGVhZjQ3ODYyMzJkYWQ=",
                "url": "https://github.com/netty/netty/pull/11194/commits/d2f27f28c54b7788ff59afec1a4eaf4786232dad"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11169,
                "url": "https://github.com/netty/netty/issues/11169",
                "title": "NioEventLoopTest.testChannelsRegistered failure",
                "bodyHTML": "<p dir=\"auto\"><a href=\"https://github.com/netty/netty/runs/2384395929\">https://github.com/netty/netty/runs/2384395929</a> linux-x86_64-java8</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.AssertionError: expected:&lt;1&gt; but was:&lt;2&gt;\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat io.netty.testsuite.transport.AbstractSingleThreadEventLoopTest.testChannelsRegistered(AbstractSingleThreadEventLoopTest.java:69)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43)\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82)\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.AssertionError: expected:&lt;1&gt; but was:&lt;2&gt;\n\tat org.junit.Assert.fail(Assert.java:89)\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\n\tat org.junit.Assert.assertEquals(Assert.java:647)\n\tat org.junit.Assert.assertEquals(Assert.java:633)\n\tat io.netty.testsuite.transport.AbstractSingleThreadEventLoopTest.testChannelsRegistered(AbstractSingleThreadEventLoopTest.java:69)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43)\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n\tat java.util.Iterator.forEachRemaining(Iterator.java:116)\n\tat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\n\tat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\n\tat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82)\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/11169",
                "createdAt": "2021-04-20T00:26:54Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Don't bundle all netty dependencies into netty-all",
        "url": "https://github.com/netty/netty/pull/11202",
        "resourcePath": "/netty/netty/pull/11202",
        "createdAt": "2021-04-27T20:59:02Z",
        "number": 11202,
        "mergeCommit": {
          "oid": "612ab584489eae74b28ce0bc1b75fb23c5d24b57",
          "message": "Don't bundle all netty dependencies into netty-all (#11202)\n\nMotivation:\r\n\r\nnetty-all already depends on the other netty-* packages so there's no need to also bundle them.\r\n\r\nThe duplicated classes cause classpath issues, particularly with Java > 8, which reports errors like this:\r\nThe package io.netty.buffer is accessible from more than one module: io.netty.all, io.netty.buffer\r\n\r\nModifications:\r\n\r\n- Removed bundling tasks from netty-all's maven pom.xml\r\n\r\nResult:\r\n\r\n- netty-all no longer bundles all classes. Instead, classes are provided by expressed dependencies.\r\n\r\nFixes #4671",
          "commitUrl": "https://github.com/netty/netty/commit/612ab584489eae74b28ce0bc1b75fb23c5d24b57",
          "parents": {
            "nodes": [
              {
                "oid": "6b3ec62e6e4e19a85304aecd8cb5331a3fcc70be",
                "message": "Preload classes before calling native OnLoad function to prevent clas\u2026 (#11215)\n\nMotivation:\r\n\r\nIt turns out it is quite easy to cause a classloader deadlock in more recent java updates if you cause classloading while you are in native code. Because of this we should just workaround this issue by pre-load all the classes that needs to be accessed in the OnLoad function.\r\n\r\nModifications:\r\n\r\n- Preload all classes that would otherwise be loaded by native OnLoad functions.\r\n\r\nResult:\r\n\r\nWorkaround for https://github.com/netty/netty/issues/11209 and https://bugs.openjdk.java.net/browse/JDK-8266310"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "all/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjI0NjU0MjUyOjAzOGVhN2Q2N2E1MmJkNTExMjE5MTQ3YWEyOWY3MDI5MmEzMzgzYzc=",
                "url": "https://github.com/netty/netty/pull/11202/commits/038ea7d67a52bd511219147aa29f70292a3383c7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 4671,
                "url": "https://github.com/netty/netty/issues/4671",
                "title": "netty-all causes classpath problems",
                "bodyHTML": "<p dir=\"auto\">I'm not sure if you remember the junit classpath nightmare prior to junit 4.11, basically, junit bundled all its dependencies, including hamcrest.  So, if you wanted to use a newer hamcrest version, you were at the mercy of classpath ordering as to whether you'd get it or not.  So they introduced a new artifact called junit-dep, which didn't bundle dependencies, that you could depend on.  But as soon as you depended on another test framework that depended on junit, you'd have an even worse problem, because now not only did you have multiple versions of hamcrest, you had multiple versions of junit on the classpath.  So you'd add exclusions, but the junit without bundled dependencies always snuck in there every few months as people added new dependencies.  Eventually it was fixed in junit 4.11, but the effects are still felt because there are still some projects that depended on junit-dep that your project might depend on, meaning junit still ends up on the classpath twice, so now you have to add exclusions for junit-dep.</p>\n<p dir=\"auto\">netty-all basically has the same problem.  You end up with two different artifacts containing the same classes on the classpath, the dependency management system doesn't know that they contain the same classes so doesn't know to replace one with the other, and so you have an unpredictable classpath nightmare.  I went to raise an issue on Cassandra about this, and I searched for it in the Apache issue tracker, and found this list of issues caused by netty-all:</p>\n<p dir=\"auto\"><a href=\"https://issues.apache.org/jira/browse/PIG-4630\" rel=\"nofollow\">https://issues.apache.org/jira/browse/PIG-4630</a><br>\n<a href=\"https://issues.apache.org/jira/browse/CASSANDRA-10984\" rel=\"nofollow\">https://issues.apache.org/jira/browse/CASSANDRA-10984</a><br>\n<a href=\"https://issues.apache.org/jira/browse/DIRKRB-355\" rel=\"nofollow\">https://issues.apache.org/jira/browse/DIRKRB-355</a></p>\n<p dir=\"auto\">Furthermore, I found at least 3 other Apache projects that are currently using netty-all, which means as soon as some end user tries to integrate with something that doesn't use netty-all (like Play), the same issue will happen.</p>\n<p dir=\"auto\">Now, if netty-all didn't bundle any classes, but just depended on everything, then there would be no problem, the dependency manager would generally be able to work things out.  But since it's not doing that, I don't think that's the intent of netty-all, netty-all is probably designed for people not using dependency management that just want to drop a jar into their system.  For those people, that's fine, give them that file in a manual download.  But don't put that artifact out on maven central where it's going to cause these classpath issues.  Instead, publish an artifact on maven central that uses regular dependency management to bring in all the netty dependencies.</p>",
                "resourcePath": "/netty/netty/issues/4671",
                "createdAt": "2016-01-08T05:05:31Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "SslHandler#unwrap must send fireChannelRead event after a notification for a handshake success",
        "url": "https://github.com/netty/netty/pull/11203",
        "resourcePath": "/netty/netty/pull/11203",
        "createdAt": "2021-04-27T21:09:57Z",
        "number": 11203,
        "mergeCommit": {
          "oid": "c0708fc464695abe62c1cf2f79ad76c0d9b05e7e",
          "message": "Verify SslHandler#unwrap send fireChannelRead event after a notification for a handshake success (#11203)\n\nMotivation:\r\n\r\n#11210 fixed a regression caused by #11156. This change adds a unit test for it.\r\n\r\nModifications:\r\n\r\n- Add test\r\n\r\nResult:\r\n\r\nVerify fix in #11210 \r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/c0708fc464695abe62c1cf2f79ad76c0d9b05e7e",
          "parents": {
            "nodes": [
              {
                "oid": "63352b135a2a49ec91b5cf0d183ef744aa53a7a6",
                "message": "Improve `Http2FrameCodecBuilder` usability (#11195)\n\n\r\n__Motivation__\r\n\r\n `Http2FrameCodecBuilder` constructor calls `server()` internally which disallows using certain methods on the builder later. Additionally, the constructor is package private which limits extension of the `Builder` as well as usage outside the available `forClient()` and `forServer()` static methods.\r\n\r\n __Modification__\r\n\r\n - Introduce a `public` no-arg constructor to `Http2FrameCodecBuilder`.\r\n\r\n __Result__\r\n\r\n `Http2FrameCodecBuilder` can now be used to create the codec with `Http2Connection` or `Http2ConnectionDecoder` and `Http2ConnectionEncoder` which was earlier not possible due to implicit call to `server()` by the `Http2FrameCodecBuilder` constructor."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2MultiplexTransportTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjI0NjYwNjAyOjJmNWJkMmUxYjJiOWVlNmFiNDE1MTljNWFjZTc4MzNiMzQ3MTg0ZDA=",
                "url": "https://github.com/netty/netty/pull/11203/commits/2f5bd2e1b2b9ee6ab41519c5ace7833b347184d0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11201,
                "url": "https://github.com/netty/netty/issues/11201",
                "title": "`SslHandler#unwrap` sends `fireChannelRead` event BEFORE a notification for a handshake success",
                "bodyHTML": "<p dir=\"auto\">With change <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/netty/netty/commit/0ef2f05373be323f8a70a8e343473cf9e6f49683/hovercard\" href=\"https://github.com/netty/netty/commit/0ef2f05373be323f8a70a8e343473cf9e6f49683\"><tt>0ef2f05</tt></a> in some cases <code class=\"notranslate\">fireChannelRead</code> event is sent BEFORE a notification for a handshake success</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/3657805711668ff1249b4c19e227bedb94d55417/handler/src/main/java/io/netty/handler/ssl/SslHandler.java#L1359-L1371\">netty/handler/src/main/java/io/netty/handler/ssl/SslHandler.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 1359 to 1371\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/3657805711668ff1249b4c19e227bedb94d55417\">3657805</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L1359\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"1359\"></td>\n          <td id=\"LC1359\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">// Dispatch decoded data after we have notified of handshake success. If this method has been invoked</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1360\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"1360\"></td>\n          <td id=\"LC1360\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">// in a re-entry fashion we execute a task on the executor queue to process after the stack unwinds</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1361\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"1361\"></td>\n          <td id=\"LC1361\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">// to preserve order of events.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1362\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"1362\"></td>\n          <td id=\"LC1362\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">decodeOut</span>.<span class=\"pl-en\">isReadable</span>()) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1363\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"1363\"></td>\n          <td id=\"LC1363\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-en\">setState</span>(<span class=\"pl-c1\">STATE_FIRE_CHANNEL_READ</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1364\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"1364\"></td>\n          <td id=\"LC1364\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> (<span class=\"pl-en\">isStateSet</span>(<span class=\"pl-c1\">STATE_UNWRAP_REENTRY</span>)) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1365\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"1365\"></td>\n          <td id=\"LC1365\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">executedRead</span> = <span class=\"pl-c1\">true</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1366\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"1366\"></td>\n          <td id=\"LC1366\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-en\">executeChannelRead</span>(<span class=\"pl-s1\">ctx</span>, <span class=\"pl-s1\">decodeOut</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1367\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"1367\"></td>\n          <td id=\"LC1367\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } <span class=\"pl-k\">else</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1368\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"1368\"></td>\n          <td id=\"LC1368\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">fireChannelRead</span>(<span class=\"pl-s1\">decodeOut</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1369\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"1369\"></td>\n          <td id=\"LC1369\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1370\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"1370\"></td>\n          <td id=\"LC1370\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-s1\">decodeOut</span> = <span class=\"pl-c1\">null</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L1371\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"1371\"></td>\n          <td id=\"LC1371\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">In the comment above the code it is stated that the <code class=\"notranslate\">fireChannelRead</code> should be sent AFTER a notification for a  handshake success, however the code never checks for <code class=\"notranslate\">handshakeStatus</code>.</p>\n<p dir=\"auto\">The issue is visible only with <code class=\"notranslate\">SslProvider.OPENSSL</code></p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">fireChannelRead</code> event is sent AFTER a notification for a  handshake success</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">fireChannelRead</code> event is sent BEFORE a notification for a handshake success</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Start <code class=\"notranslate\">io.netty.example.http2.helloworld.server.Http2Server</code> and <code class=\"notranslate\">io.netty.example.http2.helloworld.client.Http2Client</code> where the <code class=\"notranslate\">SslProvider</code> is <code class=\"notranslate\">SslProvider.JDK</code> =&gt; the example is working as expected.</p>\n<p dir=\"auto\">Change the <code class=\"notranslate\">SslProvider</code> to <code class=\"notranslate\">SslProvider.OPENSSL</code> and ensure that there is a dependency to <code class=\"notranslate\">netty-tcnative-boringssl-static</code> =&gt; the example is not working anymore.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.64.Final-SNAPSHOT</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">adopt-openjdk-1.8.0_292</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Mac OS</p>",
                "resourcePath": "/netty/netty/issues/11201",
                "createdAt": "2021-04-27T18:51:09Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add ChannelFuture which will notify about handshaking process",
        "url": "https://github.com/netty/netty/pull/11212",
        "resourcePath": "/netty/netty/pull/11212",
        "createdAt": "2021-04-29T10:46:29Z",
        "number": 11212,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker13.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjI1OTkyMzY1OmM4NGRjMzZjOTQzZWZiMzFkZDc2MDAwNDgzMjBiZThiYjQ2YjMxNGE=",
                "url": "https://github.com/netty/netty/pull/11212/commits/c84dc36c943efb31dd7600048320be8bb46b314a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11208,
                "url": "https://github.com/netty/netty/issues/11208",
                "title": "Introduce ChannelFuture to notify WebSocketClientHandshaker Back on Completion",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Currently, there is no straight way to get <code class=\"notranslate\">ChannelFuture</code> which notify listeners regarding handshake completion or failure of WebSocket client.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Handshake using <code class=\"notranslate\">WebSocketClientHandshaker</code>.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.63.Final</p>",
                "resourcePath": "/netty/netty/issues/11208",
                "createdAt": "2021-04-28T15:24:21Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Change asterisk to 'x' in FQDN of SelfSignedCertificate",
        "url": "https://github.com/netty/netty/pull/11245",
        "resourcePath": "/netty/netty/pull/11245",
        "createdAt": "2021-05-11T16:10:17Z",
        "number": 11245,
        "mergeCommit": {
          "oid": "11e6a77fba9ec7184a558d869373d0ce506d7236",
          "message": "Change asterisk to 'x' in FQDN of SelfSignedCertificate (#11245)\n\nMotivation:\r\n\r\n`SelfSignedCertificate` creates a certificate and private key files and store them in a temporary directory. However, if the certificate uses a wildcard hostname that uses asterisk *, e.g. `*.shieldblaze.com`, it'll throw an error because * is not a valid character in the file system.\r\n\r\nModification:\r\nReplace the asterisk with 'x'\r\n\r\nResult:\r\nFixes #11240",
          "commitUrl": "https://github.com/netty/netty/commit/11e6a77fba9ec7184a558d869373d0ce506d7236",
          "parents": {
            "nodes": [
              {
                "oid": "c443bc40fa997262b9057c8c50e205e73099c7e3",
                "message": "Use MAVEN_OPTS to setup timeouts for dependency downloads (#11250)\n\nMotivation:\r\n\r\nJust use MAVEN_OPTS to setup all the timeouts etc for dependency downloads. This way we at least can be sure these are applied.\r\n\r\nModifications:\r\n\r\n- Use MAVEN_OPTS\r\n- Remove ci profile\r\n- Remove unused settings.xml file\r\n- Always use ./mvnw\r\n\r\nResult:\r\n\r\nBuild stability improvements"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/util/SelfSignedCertificate.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/java/io/netty/handler/ssl/util/SelfSignedCertificateTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjQwOTY3NTM4OmRkZGYxZGQxYWJlYzc1YzhlNTczY2Q5ZjExZWEzNWExNGM5ZTJjMzA=",
                "url": "https://github.com/netty/netty/pull/11245/commits/dddf1dd1abec75c8e573cd9f11ea35a14c9e2c30"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11240,
                "url": "https://github.com/netty/netty/issues/11240",
                "title": "SelfSignedCertificate should use valid characters for file name",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">SelfSignedCertificate</code> should filter out asterisk <code class=\"notranslate\">*</code> while saving certificate and private key file.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">SelfSignedCertificate</code> creates a certificate and private key files and store them in a temporary directory. However, if the certificate uses a wildcard hostname that uses asterisk <code class=\"notranslate\">*</code>, e.g. <code class=\"notranslate\">*.shieldblaze.com</code>, it'll throw an error because <code class=\"notranslate\">*</code> is not a valid character in the file system.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"11 May 2021 14:34:22.457 [main] DEBUG i.n.h.s.u.SelfSignedCertificate - Failed to generate a self-signed X.509 certificate using sun.security.x509:\njava.nio.file.InvalidPathException: Illegal char &lt;*&gt; at index 8: keyutil_*.shieldblaze.com_4376271060691248819.key\n\tat sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182) ~[?:?]\n\tat sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153) ~[?:?]\n\tat sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77) ~[?:?]\n\tat sun.nio.fs.WindowsPath.parse(WindowsPath.java:92) ~[?:?]\n\tat sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:229) ~[?:?]\n\tat java.nio.file.TempFileHelper.generatePath(TempFileHelper.java:59) ~[?:?]\n\tat java.nio.file.TempFileHelper.create(TempFileHelper.java:126) ~[?:?]\n\tat java.nio.file.TempFileHelper.createTempFile(TempFileHelper.java:160) ~[?:?]\n\tat java.nio.file.Files.createTempFile(Files.java:913) ~[?:?]\n\tat io.netty.util.internal.PlatformDependent.createTempFile(PlatformDependent.java:1423) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.newSelfSignedCertificate(SelfSignedCertificate.java:335) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator.generate(OpenJdkSelfSignedCertGenerator.java:82) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.&lt;init&gt;(SelfSignedCertificate.java:241) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.&lt;init&gt;(SelfSignedCertificate.java:167) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.&lt;init&gt;(SelfSignedCertificate.java:137) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat com.shieldblaze.expressgateway.configuration.tls.TLSConfigurationTest.addMappingWildcardTest(TLSConfigurationTest.java:84) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688) ~[junit-platform-commons-1.7.0.jar:1.7.0]\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71) [junit5-rt.jar:?]\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) [junit-rt.jar:?]\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:221) [junit-rt.jar:?]\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]\n11 May 2021 14:34:24.018 [main] DEBUG i.n.h.s.u.SelfSignedCertificate - Failed to generate a self-signed X.509 certificate using Bouncy Castle:\njava.nio.file.InvalidPathException: Illegal char &lt;*&gt; at index 8: keyutil_*.shieldblaze.com_2205665342087087069.key\n\tat sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182) ~[?:?]\n\tat sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153) ~[?:?]\n\tat sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77) ~[?:?]\n\tat sun.nio.fs.WindowsPath.parse(WindowsPath.java:92) ~[?:?]\n\tat sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:229) ~[?:?]\n\tat java.nio.file.TempFileHelper.generatePath(TempFileHelper.java:59) ~[?:?]\n\tat java.nio.file.TempFileHelper.create(TempFileHelper.java:126) ~[?:?]\n\tat java.nio.file.TempFileHelper.createTempFile(TempFileHelper.java:160) ~[?:?]\n\tat java.nio.file.Files.createTempFile(Files.java:913) ~[?:?]\n\tat io.netty.util.internal.PlatformDependent.createTempFile(PlatformDependent.java:1423) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.newSelfSignedCertificate(SelfSignedCertificate.java:335) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator.generate(BouncyCastleSelfSignedCertGenerator.java:60) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.&lt;init&gt;(SelfSignedCertificate.java:246) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.&lt;init&gt;(SelfSignedCertificate.java:167) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.&lt;init&gt;(SelfSignedCertificate.java:137) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat com.shieldblaze.expressgateway.configuration.tls.TLSConfigurationTest.addMappingWildcardTest(TLSConfigurationTest.java:84) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688) ~[junit-platform-commons-1.7.0.jar:1.7.0]\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71) [junit5-rt.jar:?]\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) [junit-rt.jar:?]\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:221) [junit-rt.jar:?]\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]\"><pre class=\"notranslate\"><code class=\"notranslate\">11 May 2021 14:34:22.457 [main] DEBUG i.n.h.s.u.SelfSignedCertificate - Failed to generate a self-signed X.509 certificate using sun.security.x509:\njava.nio.file.InvalidPathException: Illegal char &lt;*&gt; at index 8: keyutil_*.shieldblaze.com_4376271060691248819.key\n\tat sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182) ~[?:?]\n\tat sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153) ~[?:?]\n\tat sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77) ~[?:?]\n\tat sun.nio.fs.WindowsPath.parse(WindowsPath.java:92) ~[?:?]\n\tat sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:229) ~[?:?]\n\tat java.nio.file.TempFileHelper.generatePath(TempFileHelper.java:59) ~[?:?]\n\tat java.nio.file.TempFileHelper.create(TempFileHelper.java:126) ~[?:?]\n\tat java.nio.file.TempFileHelper.createTempFile(TempFileHelper.java:160) ~[?:?]\n\tat java.nio.file.Files.createTempFile(Files.java:913) ~[?:?]\n\tat io.netty.util.internal.PlatformDependent.createTempFile(PlatformDependent.java:1423) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.newSelfSignedCertificate(SelfSignedCertificate.java:335) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator.generate(OpenJdkSelfSignedCertGenerator.java:82) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.&lt;init&gt;(SelfSignedCertificate.java:241) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.&lt;init&gt;(SelfSignedCertificate.java:167) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.&lt;init&gt;(SelfSignedCertificate.java:137) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat com.shieldblaze.expressgateway.configuration.tls.TLSConfigurationTest.addMappingWildcardTest(TLSConfigurationTest.java:84) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688) ~[junit-platform-commons-1.7.0.jar:1.7.0]\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71) [junit5-rt.jar:?]\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) [junit-rt.jar:?]\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:221) [junit-rt.jar:?]\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]\n11 May 2021 14:34:24.018 [main] DEBUG i.n.h.s.u.SelfSignedCertificate - Failed to generate a self-signed X.509 certificate using Bouncy Castle:\njava.nio.file.InvalidPathException: Illegal char &lt;*&gt; at index 8: keyutil_*.shieldblaze.com_2205665342087087069.key\n\tat sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182) ~[?:?]\n\tat sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153) ~[?:?]\n\tat sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77) ~[?:?]\n\tat sun.nio.fs.WindowsPath.parse(WindowsPath.java:92) ~[?:?]\n\tat sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:229) ~[?:?]\n\tat java.nio.file.TempFileHelper.generatePath(TempFileHelper.java:59) ~[?:?]\n\tat java.nio.file.TempFileHelper.create(TempFileHelper.java:126) ~[?:?]\n\tat java.nio.file.TempFileHelper.createTempFile(TempFileHelper.java:160) ~[?:?]\n\tat java.nio.file.Files.createTempFile(Files.java:913) ~[?:?]\n\tat io.netty.util.internal.PlatformDependent.createTempFile(PlatformDependent.java:1423) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.newSelfSignedCertificate(SelfSignedCertificate.java:335) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.BouncyCastleSelfSignedCertGenerator.generate(BouncyCastleSelfSignedCertGenerator.java:60) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.&lt;init&gt;(SelfSignedCertificate.java:246) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.&lt;init&gt;(SelfSignedCertificate.java:167) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat io.netty.handler.ssl.util.SelfSignedCertificate.&lt;init&gt;(SelfSignedCertificate.java:137) ~[netty-all-4.1.63.Final.jar:4.1.63.Final]\n\tat com.shieldblaze.expressgateway.configuration.tls.TLSConfigurationTest.addMappingWildcardTest(TLSConfigurationTest.java:84) ~[test-classes/:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]\n\tat jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n\tat java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688) ~[junit-platform-commons-1.7.0.jar:1.7.0]\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65) ~[junit-jupiter-engine-5.7.0.jar:5.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51) ~[junit-platform-engine-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) [junit-platform-launcher-1.7.0.jar:1.7.0]\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:71) [junit5-rt.jar:?]\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33) [junit-rt.jar:?]\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:221) [junit-rt.jar:?]\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:54) [junit-rt.jar:?]\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"SelfSignedCertificate ssc = new SelfSignedCertificate(&quot;*.shieldblaze.com&quot;, &quot;EC&quot;, 256);\"><pre class=\"notranslate\"><span class=\"pl-smi\">SelfSignedCertificate</span> <span class=\"pl-s1\">ssc</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SelfSignedCertificate</span>(<span class=\"pl-s\">\"*.shieldblaze.com\"</span>, <span class=\"pl-s\">\"EC\"</span>, <span class=\"pl-c1\">256</span>);</pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.63.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"1.8.0_292\"<br>\nOpenJDK Runtime Environment Corretto-8.292.10.1 (build 1.8.0_292-b10)<br>\nOpenJDK 64-Bit Server VM Corretto-8.292.10.1 (build 25.292-b10, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows 10 Pro x64</p>",
                "resourcePath": "/netty/netty/issues/11240",
                "createdAt": "2021-05-11T09:11:56Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add DefaultHostsFileEntriesResolver#addresses to provide all hosts file's entries for a hostname",
        "url": "https://github.com/netty/netty/pull/11246",
        "resourcePath": "/netty/netty/pull/11246",
        "createdAt": "2021-05-11T18:25:27Z",
        "number": 11246,
        "mergeCommit": {
          "oid": "fa8f7a3510d0dbb57488272cf5ba92cca8076794",
          "message": "Add DefaultHostsFileEntriesResolver#addresses to provide all hosts file's entries for a hostname (#11246)\n\n\r\nMotivation:\r\nDefaultHostsFileEntriesResolver should provide all hosts file's entries for a hostname when\r\nDnsNameResolver#resolveAll as opposed to the current implementation where only the first\r\nentry is taken into consideration\r\n\r\nModification:\r\n- Add DefaultHostsFileEntriesResolver#addresses to provide all hosts file's entries for a hostname\r\n- Add HostsFileEntriesProvider to provide all hosts file's entries for a hostname and to keep\r\nbackwards compatibility for HostsFileEntries and HostsFileParser\r\n- DnsNameResolver#resolveAll uses the new DefaultHostsFileEntriesResolver#addresses\r\n- BlockHound configuration: replace HostsFileParser#parse with HostsFileEntriesProvider$ParserImpl#parse\r\nas the latter does the parsing\r\n- Add junit tests\r\n\r\nResult:\r\nFixes #10834\r\n\r\n* Address feedback",
          "commitUrl": "https://github.com/netty/netty/commit/fa8f7a3510d0dbb57488272cf5ba92cca8076794",
          "parents": {
            "nodes": [
              {
                "oid": "11e6a77fba9ec7184a558d869373d0ce506d7236",
                "message": "Change asterisk to 'x' in FQDN of SelfSignedCertificate (#11245)\n\nMotivation:\r\n\r\n`SelfSignedCertificate` creates a certificate and private key files and store them in a temporary directory. However, if the certificate uses a wildcard hostname that uses asterisk *, e.g. `*.shieldblaze.com`, it'll throw an error because * is not a valid character in the file system.\r\n\r\nModification:\r\nReplace the asterisk with 'x'\r\n\r\nResult:\r\nFixes #11240"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/Hidden.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver/src/main/java/io/netty/resolver/DefaultHostsFileEntriesResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver/src/main/java/io/netty/resolver/HostsFileEntries.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver/src/main/java/io/netty/resolver/HostsFileEntriesProvider.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver/src/main/java/io/netty/resolver/HostsFileParser.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver/src/test/java/io/netty/resolver/DefaultHostsFileEntriesResolverTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver/src/test/java/io/netty/resolver/HostsFileEntriesProviderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjQxMzIzNDA3OjhjMjcxZGM4ZWI1N2JlMTU3YmNiNjhlNTY1MWZlYmRmMWEyZjZlNjc=",
                "url": "https://github.com/netty/netty/pull/11246/commits/8c271dc8eb57be157bcb68e5651febdf1a2f6e67"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 10834,
                "url": "https://github.com/netty/netty/issues/10834",
                "title": "AnnotatedConnectException: Connection refused: localhost/127.0.1.1:37655",
                "bodyHTML": "<p dir=\"auto\">When there are more than one entries for localhost in <code class=\"notranslate\">/etc/hosts</code>, connection is refused.<br>\nThis happens only when using <code class=\"notranslate\">DnsAddressResolverGroup</code>. If <code class=\"notranslate\">DefaultAddressResolverGroup</code> is used there is no problem with connection establishment.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"# /etc/hosts\n127.0.1.1\tlocalhost\n127.0.0.1\tlocalhost\"><pre class=\"notranslate\"><code class=\"notranslate\"># /etc/hosts\n127.0.1.1\tlocalhost\n127.0.0.1\tlocalhost\n</code></pre></div>\n<p dir=\"auto\">If <code class=\"notranslate\">127.0.0.1</code> is first then there is no problem</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"# /etc/hosts\n127.0.0.1\tlocalhost\n127.0.1.1\tlocalhost\"><pre class=\"notranslate\"><code class=\"notranslate\"># /etc/hosts\n127.0.0.1\tlocalhost\n127.0.1.1\tlocalhost\n</code></pre></div>\n<p dir=\"auto\">Original issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"755290163\" data-permission-text=\"Title is private\" data-url=\"https://github.com/reactor/reactor-netty/issues/1405\" data-hovercard-type=\"issue\" data-hovercard-url=\"/reactor/reactor-netty/issues/1405/hovercard\" href=\"https://github.com/reactor/reactor-netty/issues/1405\">reactor/reactor-netty#1405</a></p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Connection to be established regardless of the <code class=\"notranslate\">AddressResolverGroup</code> that is used.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Exception is thrown with <code class=\"notranslate\">DnsAddressResolverGroup</code>:<br>\n<code class=\"notranslate\">AnnotatedConnectException: Connection refused: localhost/127.0.1.1:37655</code></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">A reproducible example and steps are described in the issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"755290163\" data-permission-text=\"Title is private\" data-url=\"https://github.com/reactor/reactor-netty/issues/1405\" data-hovercard-type=\"issue\" data-hovercard-url=\"/reactor/reactor-netty/issues/1405/hovercard\" href=\"https://github.com/reactor/reactor-netty/issues/1405\">reactor/reactor-netty#1405</a></p>\n<p dir=\"auto\">I added additional test to the existing test cases here <a href=\"https://github.com/hisener/playground/blob/master/spring-webclient-connection-failure-test/src/test/java/com/github/hisener/spring/webclient/WebClientTest.java\">https://github.com/hisener/playground/blob/master/spring-webclient-connection-failure-test/src/test/java/com/github/hisener/spring/webclient/WebClientTest.java</a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @RepeatedTest(10)\n    void nettyClient() throws Exception {\n        NioEventLoopGroup group = new NioEventLoopGroup();\n\n        try {\n            Bootstrap bootstrap = new Bootstrap();\n\n            bootstrap.group(group)\n                     .channel(NioSocketChannel.class)\n                     // There is no issue with DefaultAddressResolverGroup\n                     //.resolver(DefaultAddressResolverGroup.INSTANCE)\n                     .resolver(new DnsAddressResolverGroup(new DnsNameResolverBuilder(group.next()).channelType(NioDatagramChannel.class)))\n                     .handler(new ChannelInitializer&lt;SocketChannel&gt;() {\n                         @Override\n                         protected void initChannel(SocketChannel socketChannel) {\n                             socketChannel.pipeline()\n                                          .addLast(new HttpClientCodec());\n                         }\n                     });\n\n            Channel ch = bootstrap.connect(baseUrl.getHost(), baseUrl.getPort())\n                                  .sync()\n                                  .channel();\n\n            ch.close();\n        }\n        finally {\n            group.shutdownGracefully();\n        }\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    @RepeatedTest(10)\n    void nettyClient() throws Exception {\n        NioEventLoopGroup group = new NioEventLoopGroup();\n\n        try {\n            Bootstrap bootstrap = new Bootstrap();\n\n            bootstrap.group(group)\n                     .channel(NioSocketChannel.class)\n                     // There is no issue with DefaultAddressResolverGroup\n                     //.resolver(DefaultAddressResolverGroup.INSTANCE)\n                     .resolver(new DnsAddressResolverGroup(new DnsNameResolverBuilder(group.next()).channelType(NioDatagramChannel.class)))\n                     .handler(new ChannelInitializer&lt;SocketChannel&gt;() {\n                         @Override\n                         protected void initChannel(SocketChannel socketChannel) {\n                             socketChannel.pipeline()\n                                          .addLast(new HttpClientCodec());\n                         }\n                     });\n\n            Channel ch = bootstrap.connect(baseUrl.getHost(), baseUrl.getPort())\n                                  .sync()\n                                  .channel();\n\n            ch.close();\n        }\n        finally {\n            group.shutdownGracefully();\n        }\n    }\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.55.Final-SNAPSHOT</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"11.0.9.1\" 2020-11-04<br>\nOpenJDK Runtime Environment 18.9 (build 11.0.9.1+1)<br>\nOpenJDK 64-Bit Server VM 18.9 (build 11.0.9.1+1, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux b732417723fd 5.4.39-linuxkit <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"418688\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/1\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/1/hovercard\" href=\"https://github.com/netty/netty/pull/1\">#1</a> SMP Fri May 8 23:03:06 UTC 2020 x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/10834",
                "createdAt": "2020-12-03T10:51:50Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Introduce BrotliEncoder",
        "url": "https://github.com/netty/netty/pull/11256",
        "resourcePath": "/netty/netty/pull/11256",
        "createdAt": "2021-05-14T14:36:53Z",
        "number": 11256,
        "mergeCommit": {
          "oid": "fef761d03e4f8515d7b220cdd66fcdedeff5455d",
          "message": "Introduce BrotliEncoder (#11256)\n\nMotivation:\r\nCurrently, Netty only has BrotliDecoder which can decode Brotli encoded data. However, BrotliEncoder is missing which will encode normal data to Brotli encoded data.\r\n\r\nModification:\r\nAdded BrotliEncoder and CompressionOption\r\n\r\nResult:\r\nFixes #6899.\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/fef761d03e4f8515d7b220cdd66fcdedeff5455d",
          "parents": {
            "nodes": [
              {
                "oid": "7825fa8d7a1799032f4656d2b2fab61d50113436",
                "message": "Add zstd http header value (#11463)\n\nMotivation:\r\n\r\nZSTD has a wide range of uses on the Internet, so should consider adding `application/zstd` HTTP media-type and `zstd` content-encoding, see  https://tools.ietf.org/html/rfc8478\r\n\r\nModification:\r\n\r\nAdd `application/zstd` HTTP media-type and `zstd` content-encoding\r\n\r\nResult:\r\n\r\nnetty provides `application/zstd` HTTP media-type and `zstd content-encoding` as http headers\r\n\r\nSigned-off-by: xingrufei <xingrufei@sogou-inc.com>\r\nCo-authored-by: xingrufei <xingrufei@sogou-inc.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/BrotliEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/BrotliOptions.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/CompressionOptions.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/DeflateOptions.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/GzipOptions.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/StandardCompressionOptions.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/test/java/io/netty/handler/codec/compression/BrotliDecoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec/src/test/java/io/netty/handler/codec/compression/BrotliEncoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/ObjectUtil.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "license/LICENSE.brotli4j.txt"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjQ0NzU3Nzk2OmFjYTIwY2Y5ZWE5NGMwMDA0MjFkMGNjNjhkOGU0NDY2ZWU4YTJmZjA=",
                "url": "https://github.com/netty/netty/pull/11256/commits/aca20cf9ea94c000421d0cc68d8e4466ee8a2ff0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6899,
                "url": "https://github.com/netty/netty/issues/6899",
                "title": "Support Brotli",
                "bodyHTML": "<p dir=\"auto\">We currently don't support Brotli decompression/compression but this would be a useful feature and we should add support for it.</p>",
                "resourcePath": "/netty/netty/issues/6899",
                "createdAt": "2017-06-23T17:16:34Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Redirect Log4J 1.x to Log 2.x",
        "url": "https://github.com/netty/netty/pull/11264",
        "resourcePath": "/netty/netty/pull/11264",
        "createdAt": "2021-05-17T23:08:19Z",
        "number": 11264,
        "mergeCommit": {
          "oid": "7c955a19dce2e7ea95e15a5c578e7e71d0d4a238",
          "message": "Redirect Log4J 1.x to Log 2.x (#11264)\n\nRemoves flag by Whitesource vulnerability scanner\r\n\r\nMotivation:\r\n\r\nWhiteSource vulnerability scan flags the Log4J 1.x stream as vulnerable.\r\n\r\nModification:\r\n\r\nReplaced reference to `log4j` with `log4j-1.2-api`\r\nRan `mvn test` (on a Mac) successfully\r\n\r\nResult:\r\n\r\nFixes #11263",
          "commitUrl": "https://github.com/netty/netty/commit/7c955a19dce2e7ea95e15a5c578e7e71d0d4a238",
          "parents": {
            "nodes": [
              {
                "oid": "72db32a80123227f005b904e54d3a798787cf5e2",
                "message": "Don't include netty-examples as dependency for netty-all (#11273)\n\nMotivation:\r\n\r\nWe shouldn't include netty-examples as dependency for netty-all as this will try to pull in all sorts of dependencies which are optional.\r\n\r\nModifications:\r\n\r\nRemove dependency on netty-examples\r\n\r\nResult:\r\n\r\nRelated to https://github.com/netty/netty/issues/11272"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjQ2MjQxODkxOjdjMDRlM2Q3NmQzOWIwMGE3ZjlhNTFhNzQyZGRhNWZmYWVhMzk3Yzc=",
                "url": "https://github.com/netty/netty/pull/11264/commits/7c04e3d76d39b00a7f9a51a742dda5ffaea397c7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11263,
                "url": "https://github.com/netty/netty/issues/11263",
                "title": "Remove dependency on log4J 1.x branch",
                "bodyHTML": "<p dir=\"auto\">Netty, and thus all downstream projects (e.g. vert.x, Quarkus etc) show a dependency on log4j-1.2.17 which as been flagged with CVE: 20-12-2019. From a vulnerability scan:</p>\n<blockquote>\n<p dir=\"auto\">Severity: High</p>\n<p dir=\"auto\">CVE: 20-12-2019</p>\n<p dir=\"auto\">Description: Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data. This affects Log4j versions up to 1.2 up to 1.2.17.</p>\n<p dir=\"auto\">Published: 20-12-2019</p>\n<p dir=\"auto\">Top Fix:<br>\nUpgrade to version org.apache.logging.log4j:log4j-core:2.0.\u00a0 The reported vulnerability was not checked for vulnerability effectiveness and is suggested to be examined using Effective Usage Analysis.</p>\n</blockquote>\n<p dir=\"auto\">There are 2 occurrences that need upgrade:</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/ccca3959fd64b133edca855925fb68d077c3a8a2/common/src/main/java/io/netty/util/internal/logging/Log4JLoggerFactory.java#L18\">netty/common/src/main/java/io/netty/util/internal/logging/Log4JLoggerFactory.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 18\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/ccca3959fd64b133edca855925fb68d077c3a8a2\">ccca395</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L18\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"18\"></td>\n          <td id=\"LC18\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">apache</span>.<span class=\"pl-s1\">log4j</span>.<span class=\"pl-s1\">Logger</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Replace with:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import org.apache.logging.log4j.Logger;\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">apache</span>.<span class=\"pl-s1\">logging</span>.<span class=\"pl-s1\">log4j</span>.<span class=\"pl-s1\">Logger</span>;</pre></div>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/d34212439068091bcec29a8fad4df82f0a82c638/common/src/main/java/io/netty/util/internal/logging/Log4JLogger.java#L42-L43\">netty/common/src/main/java/io/netty/util/internal/logging/Log4JLogger.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 42 to 43\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/d34212439068091bcec29a8fad4df82f0a82c638\">d342124</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L42\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"42\"></td>\n          <td id=\"LC42\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">apache</span>.<span class=\"pl-s1\">log4j</span>.<span class=\"pl-s1\">Level</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L43\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"43\"></td>\n          <td id=\"LC43\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">apache</span>.<span class=\"pl-s1\">log4j</span>.<span class=\"pl-s1\">Logger</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Replace with:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import org.apache.logger.log4j.Level;\nimport org.apache.logger.log4j.Logger;\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">apache</span>.<span class=\"pl-s1\">logger</span>.<span class=\"pl-s1\">log4j</span>.<span class=\"pl-s1\">Level</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">apache</span>.<span class=\"pl-s1\">logger</span>.<span class=\"pl-s1\">log4j</span>.<span class=\"pl-s1\">Logger</span>;</pre></div>",
                "resourcePath": "/netty/netty/issues/11263",
                "createdAt": "2021-05-17T22:05:05Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Alternate approach to remove Log4J 1.x dependency ( see #11264 )",
        "url": "https://github.com/netty/netty/pull/11265",
        "resourcePath": "/netty/netty/pull/11265",
        "createdAt": "2021-05-17T23:13:14Z",
        "number": 11265,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/logging/Log4JLogger.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/logging/Log4JLoggerFactory.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjQ2MjQ2MjEyOjZlYzU0NzhhODVlMGNiNWE5NGNkYmViMGM0NmNhZDZkZjY3ZTE5ZmU=",
                "url": "https://github.com/netty/netty/pull/11265/commits/6ec5478a85e0cb5a94cdbeb0c46cad6df67e19fe"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11263,
                "url": "https://github.com/netty/netty/issues/11263",
                "title": "Remove dependency on log4J 1.x branch",
                "bodyHTML": "<p dir=\"auto\">Netty, and thus all downstream projects (e.g. vert.x, Quarkus etc) show a dependency on log4j-1.2.17 which as been flagged with CVE: 20-12-2019. From a vulnerability scan:</p>\n<blockquote>\n<p dir=\"auto\">Severity: High</p>\n<p dir=\"auto\">CVE: 20-12-2019</p>\n<p dir=\"auto\">Description: Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data. This affects Log4j versions up to 1.2 up to 1.2.17.</p>\n<p dir=\"auto\">Published: 20-12-2019</p>\n<p dir=\"auto\">Top Fix:<br>\nUpgrade to version org.apache.logging.log4j:log4j-core:2.0.\u00a0 The reported vulnerability was not checked for vulnerability effectiveness and is suggested to be examined using Effective Usage Analysis.</p>\n</blockquote>\n<p dir=\"auto\">There are 2 occurrences that need upgrade:</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/ccca3959fd64b133edca855925fb68d077c3a8a2/common/src/main/java/io/netty/util/internal/logging/Log4JLoggerFactory.java#L18\">netty/common/src/main/java/io/netty/util/internal/logging/Log4JLoggerFactory.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 18\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/ccca3959fd64b133edca855925fb68d077c3a8a2\">ccca395</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L18\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"18\"></td>\n          <td id=\"LC18\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">apache</span>.<span class=\"pl-s1\">log4j</span>.<span class=\"pl-s1\">Logger</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Replace with:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import org.apache.logging.log4j.Logger;\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">apache</span>.<span class=\"pl-s1\">logging</span>.<span class=\"pl-s1\">log4j</span>.<span class=\"pl-s1\">Logger</span>;</pre></div>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/d34212439068091bcec29a8fad4df82f0a82c638/common/src/main/java/io/netty/util/internal/logging/Log4JLogger.java#L42-L43\">netty/common/src/main/java/io/netty/util/internal/logging/Log4JLogger.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 42 to 43\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/d34212439068091bcec29a8fad4df82f0a82c638\">d342124</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L42\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"42\"></td>\n          <td id=\"LC42\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">apache</span>.<span class=\"pl-s1\">log4j</span>.<span class=\"pl-s1\">Level</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L43\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"43\"></td>\n          <td id=\"LC43\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">apache</span>.<span class=\"pl-s1\">log4j</span>.<span class=\"pl-s1\">Logger</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Replace with:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import org.apache.logger.log4j.Level;\nimport org.apache.logger.log4j.Logger;\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">apache</span>.<span class=\"pl-s1\">logger</span>.<span class=\"pl-s1\">log4j</span>.<span class=\"pl-s1\">Level</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">apache</span>.<span class=\"pl-s1\">logger</span>.<span class=\"pl-s1\">log4j</span>.<span class=\"pl-s1\">Logger</span>;</pre></div>",
                "resourcePath": "/netty/netty/issues/11263",
                "createdAt": "2021-05-17T22:05:05Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix netty-all artifact",
        "url": "https://github.com/netty/netty/pull/11274",
        "resourcePath": "/netty/netty/pull/11274",
        "createdAt": "2021-05-18T10:50:18Z",
        "number": 11274,
        "mergeCommit": {
          "oid": "037eddd5a2f01dc4dde340400822ecf11207191a",
          "message": "Fix netty-all artifact (#11274)\n\nMotivation:\r\n\r\n612ab584489eae74b28ce0bc1b75fb23c5d24b57 did change the way how netty-all was produced by unfortunally it messed up the dependency graph for our native artifacts. This commit reverts changes done by 612ab584489eae74b28ce0bc1b75fb23c5d24b57 and also clean up the profiles\r\n\r\nModifications:\r\n\r\nnetty-all is useable again\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11272",
          "commitUrl": "https://github.com/netty/netty/commit/037eddd5a2f01dc4dde340400822ecf11207191a",
          "parents": {
            "nodes": [
              {
                "oid": "08dbd7275810b940528ac1bbc910f6904cd42e4e",
                "message": "Fail the build if we can't load the OpenSSL library (#11269)\n\n\r\nMotivation:\r\n\r\nWe should better fail the build if we can't load the OpenSSL library to ensure we not introduce a regression at some point related to native library loading\r\n\r\nModifications:\r\n\r\nRemove usages of assumeTrue and let the tests fail if we cant load the native lib\r\n\r\nResult:\r\n\r\nEnsure we not regress"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "all/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjQ2NjM4NTI4OjYyZDM2ZGJkYjJkZTQ0MzMzYzZjNjFhODk3ODJiMWRlZDA5MGU1ZDQ=",
                "url": "https://github.com/netty/netty/pull/11274/commits/62d36dbdb2de44333c6c61a89782b1ded090e5d4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11272,
                "url": "https://github.com/netty/netty/issues/11272",
                "title": "netty-all 4.1.64 has a broken dependency graph",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When maven compile (or install) runs on a maven project using both dependencies below, it should not generate errors with dependencies cannot be resolved.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">It generates errors such as:</p>\n<p dir=\"auto\"><code class=\"notranslate\">ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project  org.example:testNetty64:jar:1.0-SNAPSHOT: The following artifacts could not be resolved: io.netty:netty- tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native- epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: Could not find artifact io.netty:netty- tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1] </code></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Simple pom.xml as below:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n  &lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;\n     xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n     xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;/groupId&gt;\n    &lt;artifactId&gt;testNetty64&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n  \n    &lt;properties&gt;\n      &lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt;\n      &lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt;\n    &lt;/properties&gt;\n  \n    &lt;dependencies&gt;\n      &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;/groupId&gt;\n        &lt;artifactId&gt;netty-all&lt;/artifactId&gt;\n        &lt;version&gt;4.1.64.Final&lt;/version&gt;\n      &lt;/dependency&gt;\n      &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;/groupId&gt;\n        &lt;artifactId&gt;netty-tcnative&lt;/artifactId&gt;\n        &lt;version&gt;2.0.39.Final&lt;/version&gt;\n      &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n  &lt;/project&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">  &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n  &lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n     xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;/groupId&gt;\n    &lt;artifactId&gt;testNetty64&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n  \n    &lt;properties&gt;\n      &lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt;\n      &lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt;\n    &lt;/properties&gt;\n  \n    &lt;dependencies&gt;\n      &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;/groupId&gt;\n        &lt;artifactId&gt;netty-all&lt;/artifactId&gt;\n        &lt;version&gt;4.1.64.Final&lt;/version&gt;\n      &lt;/dependency&gt;\n      &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;/groupId&gt;\n        &lt;artifactId&gt;netty-tcnative&lt;/artifactId&gt;\n        &lt;version&gt;2.0.39.Final&lt;/version&gt;\n      &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n  &lt;/project&gt;\n</code></pre></div>\n<p dir=\"auto\">maven clean compile</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">Replacing 4.1.64-Final by 4.1.63-Final runs fine.</p>\n<p dir=\"auto\">With 4.1.64-Final: <code class=\"notranslate\">mvn clean compile -U</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  [INFO] ----------------------&lt; org.example:testNetty64 &gt;-----------------------\n  [INFO] Building testNetty64 1.0-SNAPSHOT\n  [INFO] --------------------------------[ jar ]---------------------------------\n  Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [INFO] ------------------------------------------------------------------------\n  [INFO] BUILD FAILURE\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Total time:  1.478 s\n  [INFO] Finished at: 2021-05-18T09:35:23+02:00\n  [INFO] ------------------------------------------------------------------------\n  [ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project org.example:testNetty64:jar:1.0-SNAPSHOT: \n  [The following artifacts could not be resolved: io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: \n  [Could not find artifact io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1]\"><pre class=\"notranslate\"><code class=\"notranslate\">  [INFO] ----------------------&lt; org.example:testNetty64 &gt;-----------------------\n  [INFO] Building testNetty64 1.0-SNAPSHOT\n  [INFO] --------------------------------[ jar ]---------------------------------\n  Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [INFO] ------------------------------------------------------------------------\n  [INFO] BUILD FAILURE\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Total time:  1.478 s\n  [INFO] Finished at: 2021-05-18T09:35:23+02:00\n  [INFO] ------------------------------------------------------------------------\n  [ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project org.example:testNetty64:jar:1.0-SNAPSHOT: \n  [The following artifacts could not be resolved: io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: \n  [Could not find artifact io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1]\n</code></pre></div>\n<p dir=\"auto\">In DEBUG mode, I've got the following possibly useful elements: <code class=\"notranslate\">mvn clean compile -e -X -U</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  Apache Maven 3.6.3\n  Maven home: /usr/share/maven\n  Java version: 11.0.11, vendor: Ubuntu, runtime: /usr/lib/jvm/java-11-openjdk-amd64\n  Default locale: fr_FR, platform encoding: UTF-8\n  OS name: &quot;linux&quot;, version: &quot;5.4.0-73-generic&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;\n  ...\n  [DEBUG] =======================================================================\n  [DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=974120, ConflictMarker.markTime=382215, \n  ConflictMarker.nodeCount=158, ConflictIdSorter.graphTime=782831, ConflictIdSorter.topsortTime=386305, \n  ConflictIdSorter.conflictIdCount=44, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=7735894, \n  ConflictResolver.conflictItemCount=157, DefaultDependencyCollector.collectTime=208052123, \n  DefaultDependencyCollector.transformTime=11590815}\n  [DEBUG] org.example:testNetty64:jar:1.0-SNAPSHOT\n  [DEBUG]    io.netty:netty-all:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-buffer:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-dns:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-haproxy:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-http:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-http2:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-memcache:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-mqtt:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-redis:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-smtp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-socks:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-stomp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-xml:jar:4.1.64.Final:compile\n  [DEBUG]          com.fasterxml:aalto-xml:jar:1.0.0:compile\n  [DEBUG]             org.codehaus.woodstox:stax2-api:jar:4.0.0:compile\n  [DEBUG]       io.netty:netty-common:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-handler:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-handler-proxy:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver-dns:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-rxtx:jar:4.1.64.Final:compile\n  [DEBUG]          org.rxtx:rxtx:jar:2.1.7:compile\n  [DEBUG]       io.netty:netty-transport-sctp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-udt:jar:4.1.64.Final:compile\n  [DEBUG]          com.barchart.udt:barchart-udt-bundle:jar:2.3.0:compile\n  [DEBUG]       io.netty:netty-example:jar:4.1.64.Final:compile\n  [DEBUG]          com.google.protobuf:protobuf-java:jar:2.6.1:compile\n  [DEBUG]          io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final:compile\n  [DEBUG]          org.conscrypt:conscrypt-openjdk-uber:jar:2.5.2:compile\n  [DEBUG]          com.jcraft:jzlib:jar:1.1.3:runtime\n  [DEBUG]          com.yammer.metrics:metrics-core:jar:2.2.0:compile\n  [DEBUG]             org.slf4j:slf4j-api:jar:1.7.2:compile\n  [DEBUG]          ch.qos.logback:logback-classic:jar:1.1.7:runtime\n  [DEBUG]             ch.qos.logback:logback-core:jar:1.1.7:runtime\n  [DEBUG]          org.bouncycastle:bcpkix-jdk15on:jar:1.68:compile\n  [DEBUG]          org.bouncycastle:bcprov-jdk15on:jar:1.68:compile\n  [DEBUG]          com.sun.activation:javax.activation:jar:1.2.0:compile\n  [DEBUG]       io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final:compile\n  [DEBUG]          io.netty:netty-transport-native-unix-common:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-native-kqueue:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver-dns-native-macos:jar:4.1.64.Final:compile\n  [DEBUG]    io.netty:netty-tcnative:jar:2.0.39.Final:compile\n  [DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  [Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-${os.detected.classifier}.jar.lastUpdated\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-${os.detected.name}-${os.detected.arch}.jar.lastUpdated\n  [[DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  [Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-${os.detected.classifier}.jar.lastUpdated\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-${os.detected.name}-${os.detected.arch}.jar.lastUpdated\n  [[INFO] ------------------------------------------------------------------------\n  [[INFO] BUILD FAILURE\n  [[INFO] ------------------------------------------------------------------------\n  [[INFO] Total time:  6.177 s\n  [[INFO] Finished at: 2021-05-18T09:31:45+02:00\n  [[INFO] ------------------------------------------------------------------------\n  [[ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project org.example:testNetty64:jar:1.0-SNAPSHOT\n  [: The following artifacts could not be resolved: io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: \n  [Could not find artifact io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1]\"><pre class=\"notranslate\"><code class=\"notranslate\">  Apache Maven 3.6.3\n  Maven home: /usr/share/maven\n  Java version: 11.0.11, vendor: Ubuntu, runtime: /usr/lib/jvm/java-11-openjdk-amd64\n  Default locale: fr_FR, platform encoding: UTF-8\n  OS name: \"linux\", version: \"5.4.0-73-generic\", arch: \"amd64\", family: \"unix\"\n  ...\n  [DEBUG] =======================================================================\n  [DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=974120, ConflictMarker.markTime=382215, \n  ConflictMarker.nodeCount=158, ConflictIdSorter.graphTime=782831, ConflictIdSorter.topsortTime=386305, \n  ConflictIdSorter.conflictIdCount=44, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=7735894, \n  ConflictResolver.conflictItemCount=157, DefaultDependencyCollector.collectTime=208052123, \n  DefaultDependencyCollector.transformTime=11590815}\n  [DEBUG] org.example:testNetty64:jar:1.0-SNAPSHOT\n  [DEBUG]    io.netty:netty-all:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-buffer:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-dns:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-haproxy:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-http:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-http2:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-memcache:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-mqtt:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-redis:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-smtp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-socks:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-stomp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-xml:jar:4.1.64.Final:compile\n  [DEBUG]          com.fasterxml:aalto-xml:jar:1.0.0:compile\n  [DEBUG]             org.codehaus.woodstox:stax2-api:jar:4.0.0:compile\n  [DEBUG]       io.netty:netty-common:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-handler:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-handler-proxy:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver-dns:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-rxtx:jar:4.1.64.Final:compile\n  [DEBUG]          org.rxtx:rxtx:jar:2.1.7:compile\n  [DEBUG]       io.netty:netty-transport-sctp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-udt:jar:4.1.64.Final:compile\n  [DEBUG]          com.barchart.udt:barchart-udt-bundle:jar:2.3.0:compile\n  [DEBUG]       io.netty:netty-example:jar:4.1.64.Final:compile\n  [DEBUG]          com.google.protobuf:protobuf-java:jar:2.6.1:compile\n  [DEBUG]          io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final:compile\n  [DEBUG]          org.conscrypt:conscrypt-openjdk-uber:jar:2.5.2:compile\n  [DEBUG]          com.jcraft:jzlib:jar:1.1.3:runtime\n  [DEBUG]          com.yammer.metrics:metrics-core:jar:2.2.0:compile\n  [DEBUG]             org.slf4j:slf4j-api:jar:1.7.2:compile\n  [DEBUG]          ch.qos.logback:logback-classic:jar:1.1.7:runtime\n  [DEBUG]             ch.qos.logback:logback-core:jar:1.1.7:runtime\n  [DEBUG]          org.bouncycastle:bcpkix-jdk15on:jar:1.68:compile\n  [DEBUG]          org.bouncycastle:bcprov-jdk15on:jar:1.68:compile\n  [DEBUG]          com.sun.activation:javax.activation:jar:1.2.0:compile\n  [DEBUG]       io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final:compile\n  [DEBUG]          io.netty:netty-transport-native-unix-common:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-native-kqueue:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver-dns-native-macos:jar:4.1.64.Final:compile\n  [DEBUG]    io.netty:netty-tcnative:jar:2.0.39.Final:compile\n  [DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  [Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-${os.detected.classifier}.jar.lastUpdated\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-${os.detected.name}-${os.detected.arch}.jar.lastUpdated\n  [[DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  [Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-${os.detected.classifier}.jar.lastUpdated\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-${os.detected.name}-${os.detected.arch}.jar.lastUpdated\n  [[INFO] ------------------------------------------------------------------------\n  [[INFO] BUILD FAILURE\n  [[INFO] ------------------------------------------------------------------------\n  [[INFO] Total time:  6.177 s\n  [[INFO] Finished at: 2021-05-18T09:31:45+02:00\n  [[INFO] ------------------------------------------------------------------------\n  [[ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project org.example:testNetty64:jar:1.0-SNAPSHOT\n  [: The following artifacts could not be resolved: io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: \n  [Could not find artifact io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1]\n</code></pre></div>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Tried using Java 8 and Java 11</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  java version &quot;1.8.0_221&quot;\n  Java(TM) SE Runtime Environment (build 1.8.0_221-b11)\n  Java HotSpot(TM) 64-Bit Server VM (build 25.221-b11, mixed mode)\n\n  openjdk version &quot;11.0.11&quot; 2021-04-20\n  OpenJDK Runtime Environment (build 11.0.11+9-Ubuntu-0ubuntu2.20.04)\n  OpenJDK 64-Bit Server VM (build 11.0.11+9-Ubuntu-0ubuntu2.20.04, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">  java version \"1.8.0_221\"\n  Java(TM) SE Runtime Environment (build 1.8.0_221-b11)\n  Java HotSpot(TM) 64-Bit Server VM (build 25.221-b11, mixed mode)\n\n  openjdk version \"11.0.11\" 2021-04-20\n  OpenJDK Runtime Environment (build 11.0.11+9-Ubuntu-0ubuntu2.20.04)\n  OpenJDK 64-Bit Server VM (build 11.0.11+9-Ubuntu-0ubuntu2.20.04, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  Linux frederic-X510UQ 5.4.0-73-generic #82-Ubuntu SMP Wed Apr 14 17:39:42 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\"><pre class=\"notranslate\"><code class=\"notranslate\">  Linux frederic-X510UQ 5.4.0-73-generic #82-Ubuntu SMP Wed Apr 14 17:39:42 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/11272",
                "createdAt": "2021-05-18T07:38:23Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "regression"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Run `os-maven-plugin` as a maven plugin (not as an extension)",
        "url": "https://github.com/netty/netty/pull/11277",
        "resourcePath": "/netty/netty/pull/11277",
        "createdAt": "2021-05-18T14:03:21Z",
        "number": 11277,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjQ2Nzg3ODM5OmVkZDIzZDVhNjcxYTY0NmZlOTNjODVkYmVhYjA5ZTZlOWNjY2RjNGM=",
                "url": "https://github.com/netty/netty/pull/11277/commits/edd23d5a671a646fe93c85dbeab09e6e9cccdc4c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11272,
                "url": "https://github.com/netty/netty/issues/11272",
                "title": "netty-all 4.1.64 has a broken dependency graph",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When maven compile (or install) runs on a maven project using both dependencies below, it should not generate errors with dependencies cannot be resolved.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">It generates errors such as:</p>\n<p dir=\"auto\"><code class=\"notranslate\">ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project  org.example:testNetty64:jar:1.0-SNAPSHOT: The following artifacts could not be resolved: io.netty:netty- tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native- epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: Could not find artifact io.netty:netty- tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1] </code></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Simple pom.xml as below:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n  &lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;\n     xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n     xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;/groupId&gt;\n    &lt;artifactId&gt;testNetty64&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n  \n    &lt;properties&gt;\n      &lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt;\n      &lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt;\n    &lt;/properties&gt;\n  \n    &lt;dependencies&gt;\n      &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;/groupId&gt;\n        &lt;artifactId&gt;netty-all&lt;/artifactId&gt;\n        &lt;version&gt;4.1.64.Final&lt;/version&gt;\n      &lt;/dependency&gt;\n      &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;/groupId&gt;\n        &lt;artifactId&gt;netty-tcnative&lt;/artifactId&gt;\n        &lt;version&gt;2.0.39.Final&lt;/version&gt;\n      &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n  &lt;/project&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">  &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n  &lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n     xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;/groupId&gt;\n    &lt;artifactId&gt;testNetty64&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n  \n    &lt;properties&gt;\n      &lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt;\n      &lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt;\n    &lt;/properties&gt;\n  \n    &lt;dependencies&gt;\n      &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;/groupId&gt;\n        &lt;artifactId&gt;netty-all&lt;/artifactId&gt;\n        &lt;version&gt;4.1.64.Final&lt;/version&gt;\n      &lt;/dependency&gt;\n      &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;/groupId&gt;\n        &lt;artifactId&gt;netty-tcnative&lt;/artifactId&gt;\n        &lt;version&gt;2.0.39.Final&lt;/version&gt;\n      &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n  &lt;/project&gt;\n</code></pre></div>\n<p dir=\"auto\">maven clean compile</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">Replacing 4.1.64-Final by 4.1.63-Final runs fine.</p>\n<p dir=\"auto\">With 4.1.64-Final: <code class=\"notranslate\">mvn clean compile -U</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  [INFO] ----------------------&lt; org.example:testNetty64 &gt;-----------------------\n  [INFO] Building testNetty64 1.0-SNAPSHOT\n  [INFO] --------------------------------[ jar ]---------------------------------\n  Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [INFO] ------------------------------------------------------------------------\n  [INFO] BUILD FAILURE\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Total time:  1.478 s\n  [INFO] Finished at: 2021-05-18T09:35:23+02:00\n  [INFO] ------------------------------------------------------------------------\n  [ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project org.example:testNetty64:jar:1.0-SNAPSHOT: \n  [The following artifacts could not be resolved: io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: \n  [Could not find artifact io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1]\"><pre class=\"notranslate\"><code class=\"notranslate\">  [INFO] ----------------------&lt; org.example:testNetty64 &gt;-----------------------\n  [INFO] Building testNetty64 1.0-SNAPSHOT\n  [INFO] --------------------------------[ jar ]---------------------------------\n  Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [INFO] ------------------------------------------------------------------------\n  [INFO] BUILD FAILURE\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Total time:  1.478 s\n  [INFO] Finished at: 2021-05-18T09:35:23+02:00\n  [INFO] ------------------------------------------------------------------------\n  [ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project org.example:testNetty64:jar:1.0-SNAPSHOT: \n  [The following artifacts could not be resolved: io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: \n  [Could not find artifact io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1]\n</code></pre></div>\n<p dir=\"auto\">In DEBUG mode, I've got the following possibly useful elements: <code class=\"notranslate\">mvn clean compile -e -X -U</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  Apache Maven 3.6.3\n  Maven home: /usr/share/maven\n  Java version: 11.0.11, vendor: Ubuntu, runtime: /usr/lib/jvm/java-11-openjdk-amd64\n  Default locale: fr_FR, platform encoding: UTF-8\n  OS name: &quot;linux&quot;, version: &quot;5.4.0-73-generic&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;\n  ...\n  [DEBUG] =======================================================================\n  [DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=974120, ConflictMarker.markTime=382215, \n  ConflictMarker.nodeCount=158, ConflictIdSorter.graphTime=782831, ConflictIdSorter.topsortTime=386305, \n  ConflictIdSorter.conflictIdCount=44, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=7735894, \n  ConflictResolver.conflictItemCount=157, DefaultDependencyCollector.collectTime=208052123, \n  DefaultDependencyCollector.transformTime=11590815}\n  [DEBUG] org.example:testNetty64:jar:1.0-SNAPSHOT\n  [DEBUG]    io.netty:netty-all:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-buffer:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-dns:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-haproxy:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-http:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-http2:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-memcache:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-mqtt:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-redis:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-smtp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-socks:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-stomp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-xml:jar:4.1.64.Final:compile\n  [DEBUG]          com.fasterxml:aalto-xml:jar:1.0.0:compile\n  [DEBUG]             org.codehaus.woodstox:stax2-api:jar:4.0.0:compile\n  [DEBUG]       io.netty:netty-common:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-handler:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-handler-proxy:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver-dns:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-rxtx:jar:4.1.64.Final:compile\n  [DEBUG]          org.rxtx:rxtx:jar:2.1.7:compile\n  [DEBUG]       io.netty:netty-transport-sctp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-udt:jar:4.1.64.Final:compile\n  [DEBUG]          com.barchart.udt:barchart-udt-bundle:jar:2.3.0:compile\n  [DEBUG]       io.netty:netty-example:jar:4.1.64.Final:compile\n  [DEBUG]          com.google.protobuf:protobuf-java:jar:2.6.1:compile\n  [DEBUG]          io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final:compile\n  [DEBUG]          org.conscrypt:conscrypt-openjdk-uber:jar:2.5.2:compile\n  [DEBUG]          com.jcraft:jzlib:jar:1.1.3:runtime\n  [DEBUG]          com.yammer.metrics:metrics-core:jar:2.2.0:compile\n  [DEBUG]             org.slf4j:slf4j-api:jar:1.7.2:compile\n  [DEBUG]          ch.qos.logback:logback-classic:jar:1.1.7:runtime\n  [DEBUG]             ch.qos.logback:logback-core:jar:1.1.7:runtime\n  [DEBUG]          org.bouncycastle:bcpkix-jdk15on:jar:1.68:compile\n  [DEBUG]          org.bouncycastle:bcprov-jdk15on:jar:1.68:compile\n  [DEBUG]          com.sun.activation:javax.activation:jar:1.2.0:compile\n  [DEBUG]       io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final:compile\n  [DEBUG]          io.netty:netty-transport-native-unix-common:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-native-kqueue:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver-dns-native-macos:jar:4.1.64.Final:compile\n  [DEBUG]    io.netty:netty-tcnative:jar:2.0.39.Final:compile\n  [DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  [Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-${os.detected.classifier}.jar.lastUpdated\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-${os.detected.name}-${os.detected.arch}.jar.lastUpdated\n  [[DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  [Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-${os.detected.classifier}.jar.lastUpdated\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-${os.detected.name}-${os.detected.arch}.jar.lastUpdated\n  [[INFO] ------------------------------------------------------------------------\n  [[INFO] BUILD FAILURE\n  [[INFO] ------------------------------------------------------------------------\n  [[INFO] Total time:  6.177 s\n  [[INFO] Finished at: 2021-05-18T09:31:45+02:00\n  [[INFO] ------------------------------------------------------------------------\n  [[ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project org.example:testNetty64:jar:1.0-SNAPSHOT\n  [: The following artifacts could not be resolved: io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: \n  [Could not find artifact io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1]\"><pre class=\"notranslate\"><code class=\"notranslate\">  Apache Maven 3.6.3\n  Maven home: /usr/share/maven\n  Java version: 11.0.11, vendor: Ubuntu, runtime: /usr/lib/jvm/java-11-openjdk-amd64\n  Default locale: fr_FR, platform encoding: UTF-8\n  OS name: \"linux\", version: \"5.4.0-73-generic\", arch: \"amd64\", family: \"unix\"\n  ...\n  [DEBUG] =======================================================================\n  [DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=974120, ConflictMarker.markTime=382215, \n  ConflictMarker.nodeCount=158, ConflictIdSorter.graphTime=782831, ConflictIdSorter.topsortTime=386305, \n  ConflictIdSorter.conflictIdCount=44, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=7735894, \n  ConflictResolver.conflictItemCount=157, DefaultDependencyCollector.collectTime=208052123, \n  DefaultDependencyCollector.transformTime=11590815}\n  [DEBUG] org.example:testNetty64:jar:1.0-SNAPSHOT\n  [DEBUG]    io.netty:netty-all:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-buffer:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-dns:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-haproxy:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-http:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-http2:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-memcache:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-mqtt:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-redis:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-smtp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-socks:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-stomp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-xml:jar:4.1.64.Final:compile\n  [DEBUG]          com.fasterxml:aalto-xml:jar:1.0.0:compile\n  [DEBUG]             org.codehaus.woodstox:stax2-api:jar:4.0.0:compile\n  [DEBUG]       io.netty:netty-common:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-handler:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-handler-proxy:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver-dns:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-rxtx:jar:4.1.64.Final:compile\n  [DEBUG]          org.rxtx:rxtx:jar:2.1.7:compile\n  [DEBUG]       io.netty:netty-transport-sctp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-udt:jar:4.1.64.Final:compile\n  [DEBUG]          com.barchart.udt:barchart-udt-bundle:jar:2.3.0:compile\n  [DEBUG]       io.netty:netty-example:jar:4.1.64.Final:compile\n  [DEBUG]          com.google.protobuf:protobuf-java:jar:2.6.1:compile\n  [DEBUG]          io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final:compile\n  [DEBUG]          org.conscrypt:conscrypt-openjdk-uber:jar:2.5.2:compile\n  [DEBUG]          com.jcraft:jzlib:jar:1.1.3:runtime\n  [DEBUG]          com.yammer.metrics:metrics-core:jar:2.2.0:compile\n  [DEBUG]             org.slf4j:slf4j-api:jar:1.7.2:compile\n  [DEBUG]          ch.qos.logback:logback-classic:jar:1.1.7:runtime\n  [DEBUG]             ch.qos.logback:logback-core:jar:1.1.7:runtime\n  [DEBUG]          org.bouncycastle:bcpkix-jdk15on:jar:1.68:compile\n  [DEBUG]          org.bouncycastle:bcprov-jdk15on:jar:1.68:compile\n  [DEBUG]          com.sun.activation:javax.activation:jar:1.2.0:compile\n  [DEBUG]       io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final:compile\n  [DEBUG]          io.netty:netty-transport-native-unix-common:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-native-kqueue:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver-dns-native-macos:jar:4.1.64.Final:compile\n  [DEBUG]    io.netty:netty-tcnative:jar:2.0.39.Final:compile\n  [DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  [Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-${os.detected.classifier}.jar.lastUpdated\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-${os.detected.name}-${os.detected.arch}.jar.lastUpdated\n  [[DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  [Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-${os.detected.classifier}.jar.lastUpdated\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-${os.detected.name}-${os.detected.arch}.jar.lastUpdated\n  [[INFO] ------------------------------------------------------------------------\n  [[INFO] BUILD FAILURE\n  [[INFO] ------------------------------------------------------------------------\n  [[INFO] Total time:  6.177 s\n  [[INFO] Finished at: 2021-05-18T09:31:45+02:00\n  [[INFO] ------------------------------------------------------------------------\n  [[ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project org.example:testNetty64:jar:1.0-SNAPSHOT\n  [: The following artifacts could not be resolved: io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: \n  [Could not find artifact io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1]\n</code></pre></div>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Tried using Java 8 and Java 11</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  java version &quot;1.8.0_221&quot;\n  Java(TM) SE Runtime Environment (build 1.8.0_221-b11)\n  Java HotSpot(TM) 64-Bit Server VM (build 25.221-b11, mixed mode)\n\n  openjdk version &quot;11.0.11&quot; 2021-04-20\n  OpenJDK Runtime Environment (build 11.0.11+9-Ubuntu-0ubuntu2.20.04)\n  OpenJDK 64-Bit Server VM (build 11.0.11+9-Ubuntu-0ubuntu2.20.04, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">  java version \"1.8.0_221\"\n  Java(TM) SE Runtime Environment (build 1.8.0_221-b11)\n  Java HotSpot(TM) 64-Bit Server VM (build 25.221-b11, mixed mode)\n\n  openjdk version \"11.0.11\" 2021-04-20\n  OpenJDK Runtime Environment (build 11.0.11+9-Ubuntu-0ubuntu2.20.04)\n  OpenJDK 64-Bit Server VM (build 11.0.11+9-Ubuntu-0ubuntu2.20.04, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  Linux frederic-X510UQ 5.4.0-73-generic #82-Ubuntu SMP Wed Apr 14 17:39:42 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\"><pre class=\"notranslate\"><code class=\"notranslate\">  Linux frederic-X510UQ 5.4.0-73-generic #82-Ubuntu SMP Wed Apr 14 17:39:42 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/11272",
                "createdAt": "2021-05-18T07:38:23Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "regression"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Specify classifiers instead of using os detection in `netty-all`",
        "url": "https://github.com/netty/netty/pull/11278",
        "resourcePath": "/netty/netty/pull/11278",
        "createdAt": "2021-05-18T14:38:51Z",
        "number": 11278,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "all/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjQ2ODE5MTI0OjllYWUzZjExMjQ1YzQzOWZjZDNjYzYwZjQ4MmRkOTc1ZTViZDg2MDk=",
                "url": "https://github.com/netty/netty/pull/11278/commits/9eae3f11245c439fcd3cc60f482dd975e5bd8609"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11272,
                "url": "https://github.com/netty/netty/issues/11272",
                "title": "netty-all 4.1.64 has a broken dependency graph",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When maven compile (or install) runs on a maven project using both dependencies below, it should not generate errors with dependencies cannot be resolved.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">It generates errors such as:</p>\n<p dir=\"auto\"><code class=\"notranslate\">ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project  org.example:testNetty64:jar:1.0-SNAPSHOT: The following artifacts could not be resolved: io.netty:netty- tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native- epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: Could not find artifact io.netty:netty- tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1] </code></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Simple pom.xml as below:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n  &lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;\n     xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n     xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;/groupId&gt;\n    &lt;artifactId&gt;testNetty64&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n  \n    &lt;properties&gt;\n      &lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt;\n      &lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt;\n    &lt;/properties&gt;\n  \n    &lt;dependencies&gt;\n      &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;/groupId&gt;\n        &lt;artifactId&gt;netty-all&lt;/artifactId&gt;\n        &lt;version&gt;4.1.64.Final&lt;/version&gt;\n      &lt;/dependency&gt;\n      &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;/groupId&gt;\n        &lt;artifactId&gt;netty-tcnative&lt;/artifactId&gt;\n        &lt;version&gt;2.0.39.Final&lt;/version&gt;\n      &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n  &lt;/project&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">  &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n  &lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n     xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;/groupId&gt;\n    &lt;artifactId&gt;testNetty64&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n  \n    &lt;properties&gt;\n      &lt;maven.compiler.source&gt;8&lt;/maven.compiler.source&gt;\n      &lt;maven.compiler.target&gt;8&lt;/maven.compiler.target&gt;\n    &lt;/properties&gt;\n  \n    &lt;dependencies&gt;\n      &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;/groupId&gt;\n        &lt;artifactId&gt;netty-all&lt;/artifactId&gt;\n        &lt;version&gt;4.1.64.Final&lt;/version&gt;\n      &lt;/dependency&gt;\n      &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;/groupId&gt;\n        &lt;artifactId&gt;netty-tcnative&lt;/artifactId&gt;\n        &lt;version&gt;2.0.39.Final&lt;/version&gt;\n      &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n  &lt;/project&gt;\n</code></pre></div>\n<p dir=\"auto\">maven clean compile</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">Replacing 4.1.64-Final by 4.1.63-Final runs fine.</p>\n<p dir=\"auto\">With 4.1.64-Final: <code class=\"notranslate\">mvn clean compile -U</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  [INFO] ----------------------&lt; org.example:testNetty64 &gt;-----------------------\n  [INFO] Building testNetty64 1.0-SNAPSHOT\n  [INFO] --------------------------------[ jar ]---------------------------------\n  Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [INFO] ------------------------------------------------------------------------\n  [INFO] BUILD FAILURE\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Total time:  1.478 s\n  [INFO] Finished at: 2021-05-18T09:35:23+02:00\n  [INFO] ------------------------------------------------------------------------\n  [ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project org.example:testNetty64:jar:1.0-SNAPSHOT: \n  [The following artifacts could not be resolved: io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: \n  [Could not find artifact io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1]\"><pre class=\"notranslate\"><code class=\"notranslate\">  [INFO] ----------------------&lt; org.example:testNetty64 &gt;-----------------------\n  [INFO] Building testNetty64 1.0-SNAPSHOT\n  [INFO] --------------------------------[ jar ]---------------------------------\n  Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [INFO] ------------------------------------------------------------------------\n  [INFO] BUILD FAILURE\n  [INFO] ------------------------------------------------------------------------\n  [INFO] Total time:  1.478 s\n  [INFO] Finished at: 2021-05-18T09:35:23+02:00\n  [INFO] ------------------------------------------------------------------------\n  [ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project org.example:testNetty64:jar:1.0-SNAPSHOT: \n  [The following artifacts could not be resolved: io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: \n  [Could not find artifact io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1]\n</code></pre></div>\n<p dir=\"auto\">In DEBUG mode, I've got the following possibly useful elements: <code class=\"notranslate\">mvn clean compile -e -X -U</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  Apache Maven 3.6.3\n  Maven home: /usr/share/maven\n  Java version: 11.0.11, vendor: Ubuntu, runtime: /usr/lib/jvm/java-11-openjdk-amd64\n  Default locale: fr_FR, platform encoding: UTF-8\n  OS name: &quot;linux&quot;, version: &quot;5.4.0-73-generic&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;\n  ...\n  [DEBUG] =======================================================================\n  [DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=974120, ConflictMarker.markTime=382215, \n  ConflictMarker.nodeCount=158, ConflictIdSorter.graphTime=782831, ConflictIdSorter.topsortTime=386305, \n  ConflictIdSorter.conflictIdCount=44, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=7735894, \n  ConflictResolver.conflictItemCount=157, DefaultDependencyCollector.collectTime=208052123, \n  DefaultDependencyCollector.transformTime=11590815}\n  [DEBUG] org.example:testNetty64:jar:1.0-SNAPSHOT\n  [DEBUG]    io.netty:netty-all:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-buffer:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-dns:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-haproxy:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-http:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-http2:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-memcache:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-mqtt:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-redis:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-smtp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-socks:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-stomp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-xml:jar:4.1.64.Final:compile\n  [DEBUG]          com.fasterxml:aalto-xml:jar:1.0.0:compile\n  [DEBUG]             org.codehaus.woodstox:stax2-api:jar:4.0.0:compile\n  [DEBUG]       io.netty:netty-common:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-handler:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-handler-proxy:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver-dns:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-rxtx:jar:4.1.64.Final:compile\n  [DEBUG]          org.rxtx:rxtx:jar:2.1.7:compile\n  [DEBUG]       io.netty:netty-transport-sctp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-udt:jar:4.1.64.Final:compile\n  [DEBUG]          com.barchart.udt:barchart-udt-bundle:jar:2.3.0:compile\n  [DEBUG]       io.netty:netty-example:jar:4.1.64.Final:compile\n  [DEBUG]          com.google.protobuf:protobuf-java:jar:2.6.1:compile\n  [DEBUG]          io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final:compile\n  [DEBUG]          org.conscrypt:conscrypt-openjdk-uber:jar:2.5.2:compile\n  [DEBUG]          com.jcraft:jzlib:jar:1.1.3:runtime\n  [DEBUG]          com.yammer.metrics:metrics-core:jar:2.2.0:compile\n  [DEBUG]             org.slf4j:slf4j-api:jar:1.7.2:compile\n  [DEBUG]          ch.qos.logback:logback-classic:jar:1.1.7:runtime\n  [DEBUG]             ch.qos.logback:logback-core:jar:1.1.7:runtime\n  [DEBUG]          org.bouncycastle:bcpkix-jdk15on:jar:1.68:compile\n  [DEBUG]          org.bouncycastle:bcprov-jdk15on:jar:1.68:compile\n  [DEBUG]          com.sun.activation:javax.activation:jar:1.2.0:compile\n  [DEBUG]       io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final:compile\n  [DEBUG]          io.netty:netty-transport-native-unix-common:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-native-kqueue:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver-dns-native-macos:jar:4.1.64.Final:compile\n  [DEBUG]    io.netty:netty-tcnative:jar:2.0.39.Final:compile\n  [DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  [Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-${os.detected.classifier}.jar.lastUpdated\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-${os.detected.name}-${os.detected.arch}.jar.lastUpdated\n  [[DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  [Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-${os.detected.classifier}.jar.lastUpdated\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-${os.detected.name}-${os.detected.arch}.jar.lastUpdated\n  [[INFO] ------------------------------------------------------------------------\n  [[INFO] BUILD FAILURE\n  [[INFO] ------------------------------------------------------------------------\n  [[INFO] Total time:  6.177 s\n  [[INFO] Finished at: 2021-05-18T09:31:45+02:00\n  [[INFO] ------------------------------------------------------------------------\n  [[ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project org.example:testNetty64:jar:1.0-SNAPSHOT\n  [: The following artifacts could not be resolved: io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: \n  [Could not find artifact io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1]\"><pre class=\"notranslate\"><code class=\"notranslate\">  Apache Maven 3.6.3\n  Maven home: /usr/share/maven\n  Java version: 11.0.11, vendor: Ubuntu, runtime: /usr/lib/jvm/java-11-openjdk-amd64\n  Default locale: fr_FR, platform encoding: UTF-8\n  OS name: \"linux\", version: \"5.4.0-73-generic\", arch: \"amd64\", family: \"unix\"\n  ...\n  [DEBUG] =======================================================================\n  [DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=974120, ConflictMarker.markTime=382215, \n  ConflictMarker.nodeCount=158, ConflictIdSorter.graphTime=782831, ConflictIdSorter.topsortTime=386305, \n  ConflictIdSorter.conflictIdCount=44, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=7735894, \n  ConflictResolver.conflictItemCount=157, DefaultDependencyCollector.collectTime=208052123, \n  DefaultDependencyCollector.transformTime=11590815}\n  [DEBUG] org.example:testNetty64:jar:1.0-SNAPSHOT\n  [DEBUG]    io.netty:netty-all:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-buffer:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-dns:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-haproxy:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-http:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-http2:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-memcache:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-mqtt:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-redis:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-smtp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-socks:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-stomp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-codec-xml:jar:4.1.64.Final:compile\n  [DEBUG]          com.fasterxml:aalto-xml:jar:1.0.0:compile\n  [DEBUG]             org.codehaus.woodstox:stax2-api:jar:4.0.0:compile\n  [DEBUG]       io.netty:netty-common:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-handler:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-handler-proxy:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver-dns:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-rxtx:jar:4.1.64.Final:compile\n  [DEBUG]          org.rxtx:rxtx:jar:2.1.7:compile\n  [DEBUG]       io.netty:netty-transport-sctp:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-udt:jar:4.1.64.Final:compile\n  [DEBUG]          com.barchart.udt:barchart-udt-bundle:jar:2.3.0:compile\n  [DEBUG]       io.netty:netty-example:jar:4.1.64.Final:compile\n  [DEBUG]          com.google.protobuf:protobuf-java:jar:2.6.1:compile\n  [DEBUG]          io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final:compile\n  [DEBUG]          org.conscrypt:conscrypt-openjdk-uber:jar:2.5.2:compile\n  [DEBUG]          com.jcraft:jzlib:jar:1.1.3:runtime\n  [DEBUG]          com.yammer.metrics:metrics-core:jar:2.2.0:compile\n  [DEBUG]             org.slf4j:slf4j-api:jar:1.7.2:compile\n  [DEBUG]          ch.qos.logback:logback-classic:jar:1.1.7:runtime\n  [DEBUG]             ch.qos.logback:logback-core:jar:1.1.7:runtime\n  [DEBUG]          org.bouncycastle:bcpkix-jdk15on:jar:1.68:compile\n  [DEBUG]          org.bouncycastle:bcprov-jdk15on:jar:1.68:compile\n  [DEBUG]          com.sun.activation:javax.activation:jar:1.2.0:compile\n  [DEBUG]       io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final:compile\n  [DEBUG]          io.netty:netty-transport-native-unix-common:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-transport-native-kqueue:jar:4.1.64.Final:compile\n  [DEBUG]       io.netty:netty-resolver-dns-native-macos:jar:4.1.64.Final:compile\n  [DEBUG]    io.netty:netty-tcnative:jar:2.0.39.Final:compile\n  [DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  [Downloading from MavenCentral: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-${os.detected.classifier}.jar.lastUpdated\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-${os.detected.name}-${os.detected.arch}.jar.lastUpdated\n  [[DEBUG] Using transporter WagonTransporter with priority -1.0 for https://repo.maven.apache.org/maven2\n  [[DEBUG] Using connector BasicRepositoryConnector with priority 0.0 for https://repo.maven.apache.org/maven2\n  [Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-$%7Bos.detected.classifier%7D.jar\n  [Downloading from central: https://repo.maven.apache.org/maven2/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-$%7Bos.detected.name%7D-$%7Bos.detected.arch%7D.jar\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-tcnative/2.0.39.Final/netty-tcnative-2.0.39.Final-${os.detected.classifier}.jar.lastUpdated\n  [[DEBUG] Writing tracking file /home/frederic/.m2/repository/io/netty/netty-transport-native-epoll/4.1.64.Final/netty-transport-native-epoll-4.1.64.Final-${os.detected.name}-${os.detected.arch}.jar.lastUpdated\n  [[INFO] ------------------------------------------------------------------------\n  [[INFO] BUILD FAILURE\n  [[INFO] ------------------------------------------------------------------------\n  [[INFO] Total time:  6.177 s\n  [[INFO] Finished at: 2021-05-18T09:31:45+02:00\n  [[INFO] ------------------------------------------------------------------------\n  [[ERROR] Failed to execute goal on project testNetty64: Could not resolve dependencies for project org.example:testNetty64:jar:1.0-SNAPSHOT\n  [: The following artifacts could not be resolved: io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final, io.netty:netty-transport-native-epoll:jar:${os.detected.name}-${os.detected.arch}:4.1.64.Final: \n  [Could not find artifact io.netty:netty-tcnative:jar:${os.detected.classifier}:2.0.39.Final in MavenCentral (https://repo.maven.apache.org/maven2) -&gt; [Help 1]\n</code></pre></div>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Tried using Java 8 and Java 11</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  java version &quot;1.8.0_221&quot;\n  Java(TM) SE Runtime Environment (build 1.8.0_221-b11)\n  Java HotSpot(TM) 64-Bit Server VM (build 25.221-b11, mixed mode)\n\n  openjdk version &quot;11.0.11&quot; 2021-04-20\n  OpenJDK Runtime Environment (build 11.0.11+9-Ubuntu-0ubuntu2.20.04)\n  OpenJDK 64-Bit Server VM (build 11.0.11+9-Ubuntu-0ubuntu2.20.04, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">  java version \"1.8.0_221\"\n  Java(TM) SE Runtime Environment (build 1.8.0_221-b11)\n  Java HotSpot(TM) 64-Bit Server VM (build 25.221-b11, mixed mode)\n\n  openjdk version \"11.0.11\" 2021-04-20\n  OpenJDK Runtime Environment (build 11.0.11+9-Ubuntu-0ubuntu2.20.04)\n  OpenJDK 64-Bit Server VM (build 11.0.11+9-Ubuntu-0ubuntu2.20.04, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  Linux frederic-X510UQ 5.4.0-73-generic #82-Ubuntu SMP Wed Apr 14 17:39:42 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\"><pre class=\"notranslate\"><code class=\"notranslate\">  Linux frederic-X510UQ 5.4.0-73-generic #82-Ubuntu SMP Wed Apr 14 17:39:42 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/11272",
                "createdAt": "2021-05-18T07:38:23Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "regression"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Improve bounder check for method 'io.netty.util.internal.MathUtil#isOutOfBounds'",
        "url": "https://github.com/netty/netty/pull/11281",
        "resourcePath": "/netty/netty/pull/11281",
        "createdAt": "2021-05-19T03:07:24Z",
        "number": 11281,
        "mergeCommit": {
          "oid": "9747739962dc9ca620417568d4f4de4d5659547a",
          "message": "Change docs of method io.netty.util.internal.MathUtil#isOutOfBounds (#11281)\n\nMotivation:\r\n\r\n1. The docs about the 'retun value' of the method `io.netty.util.internal.MathUtil#isOutOfBounds` is not correct.\r\n2. The capacity parameter should be checked for overflowed case.\r\n\r\nModification:\r\n\r\n1. Changed the doc to:\r\n\r\n>  @return {@code false} if the requested {@code index} and {@code length} will fit within {@code capacity}.\r\n>  {@code true} if this would result in an index out of bounds exception.\r\n\r\n2. Improved the bounder checking logic.\r\n\r\nResult:\r\nFixes #11279 \r\nFixes #11280",
          "commitUrl": "https://github.com/netty/netty/commit/9747739962dc9ca620417568d4f4de4d5659547a",
          "parents": {
            "nodes": [
              {
                "oid": "bed04fc5975c305750ffbdabcd66b352616d0c1d",
                "message": "Don't include benchmarks and tests in the generated javadocs\n\nMotivation:\n\nWe shouldn't include benchmarks and tests in the generated javadocs to keep things clean\n\nModifications:\n\nAdd some more excludes\n\nResult:\n\nJavadocs for benchmarks and tests are not published"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/MathUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/internal/MathUtilTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjQ3MjMyMTk2OjQzNGQyYzU2NmE3ZTJiNWE5NDUyMWE3OGZjNjE3M2NkZmRjNDkxNTE=",
                "url": "https://github.com/netty/netty/pull/11281/commits/434d2c566a7e2b5a94521a78fc6173cdfdc49151"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11279,
                "url": "https://github.com/netty/netty/issues/11279",
                "title": "Docs of method 'io.netty.util.internal.MathUtil#isOutOfBounds' needs to be modified",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">the docs about the 'retun value' of the method <code class=\"notranslate\">io.netty.util.internal.MathUtil#isOutOfBounds</code>is not correct.<br>\nIt shoud be:</p>\n<blockquote>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" * @return {@code false} if the requested {@code index} and {@code length} will fit within {@code capacity}.\n * {@code true} if this would result in an index out of bounds exception.\"><pre class=\"notranslate\"><code class=\"notranslate\"> * @return {@code false} if the requested {@code index} and {@code length} will fit within {@code capacity}.\n * {@code true} if this would result in an index out of bounds exception.\n</code></pre></div>\n</blockquote>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Actually it is the opposite:</p>\n<blockquote>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" * @return {@code true} if the requested {@code index} and {@code length} will fit within {@code capacity}.\n * {@code false} if this would result in an index out of bounds exception.\"><pre class=\"notranslate\"><code class=\"notranslate\"> * @return {@code true} if the requested {@code index} and {@code length} will fit within {@code capacity}.\n * {@code false} if this would result in an index out of bounds exception.\n</code></pre></div>\n</blockquote>\n<p dir=\"auto\">The original doc and code as following:</p>\n<blockquote>\n<p dir=\"auto\">/**<br>\n* Determine if the requested {<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/code/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/code\">@code</a> index} and {<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/code/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/code\">@code</a> length} will fit within {<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/code/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/code\">@code</a> capacity}.<br>\n* <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/param/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/param\">@param</a> index The starting index.<br>\n* <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/param/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/param\">@param</a> length The length which will be utilized (starting from {<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/code/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/code\">@code</a> index}).<br>\n* <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/param/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/param\">@param</a> capacity The capacity that {<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/code/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/code\">@code</a> index + length} is allowed to be within.<br>\n* <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/return/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/return\">@return</a> {<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/code/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/code\">@code</a> true} if the requested {<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/code/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/code\">@code</a> index} and {<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/code/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/code\">@code</a> length} will fit within {<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/code/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/code\">@code</a> capacity}.<br>\n* {<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/code/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/code\">@code</a> false} if this would result in an index out of bounds exception.<br>\n*/<br>\npublic static boolean isOutOfBounds(int index, int length, int capacity) {<br>\nreturn (index | length | (index + length) | (capacity - (index + length))) &lt; 0;<br>\n}</p>\n</blockquote>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">see above.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">see above.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">does not matter.</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">does not matter.</p>",
                "resourcePath": "/netty/netty/issues/11279",
                "createdAt": "2021-05-19T02:27:28Z",
                "labels": {
                  "edges": []
                }
              }
            },
            {
              "node": {
                "number": 11280,
                "url": "https://github.com/netty/netty/issues/11280",
                "title": "Method 'io.netty.util.internal.MathUtil#isOutOfBounds' needs to check the 'capacity' parameter",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">As <code class=\"notranslate\">io.netty.util.internal.MathUtil#isOutOfBounds</code> is a public utility method, it should pass all kinds of test cases. Like:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import io.netty.util.internal.MathUtil;\n\npublic static void main(String[] args) {\n        boolean isOutOfBounds = MathUtil.isOutOfBounds(1, 2, Integer.MIN_VALUE);\n        System.out.println(isOutOfBounds);\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">import io.netty.util.internal.MathUtil;\n\npublic static void main(String[] args) {\n        boolean isOutOfBounds = MathUtil.isOutOfBounds(1, 2, Integer.MIN_VALUE);\n        System.out.println(isOutOfBounds);\n}\n</code></pre></div>\n<p dir=\"auto\">It should print <code class=\"notranslate\">true</code>, which means it is out of bound.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">It printed <code class=\"notranslate\">false</code>, which means it is NOT out of bound.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">see code above.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">see code above.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">1.8.</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin.</p>",
                "resourcePath": "/netty/netty/issues/11280",
                "createdAt": "2021-05-19T02:28:26Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Correct the doc of methods:io.netty.buffer.ByteBuf#setBytes",
        "url": "https://github.com/netty/netty/pull/11290",
        "resourcePath": "/netty/netty/pull/11290",
        "createdAt": "2021-05-21T07:36:14Z",
        "number": 11290,
        "mergeCommit": {
          "oid": "7b064700a0e65a933793345f013008690054a7ea",
          "message": "correct the doc of methods:io.netty.buffer.ByteBuf#setBytes(int, io.netty.buffer.ByteBuf) and io.netty.buffer.ByteBuf#setBytes(int, io.netty.buffer.ByteBuf, int) (#11290)",
          "commitUrl": "https://github.com/netty/netty/commit/7b064700a0e65a933793345f013008690054a7ea",
          "parents": {
            "nodes": [
              {
                "oid": "bb800d606761fc31f926f0d4eea877d3a27e479a",
                "message": "Delete obsolete javadoc warning about pendingTasks() method expensiveness (#11287)\n\nCo-authored-by: Roman Fedorov <roman.fedorov@spikeapp.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/ByteBuf.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjQ5NzM4OTM2OmM4MjRiZjkxYzYxNWVmMTk1ZDdmNDZlYjYyN2U2NmE2MWM4MTZlYjA=",
                "url": "https://github.com/netty/netty/pull/11290/commits/c824bf91c615ef195d7f46eb627e66a61c816eb0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11297,
                "url": "https://github.com/netty/netty/issues/11297",
                "title": "The doc of methods:io.netty.buffer.ByteBuf#setBytes(int, io.netty.buffer.ByteBuf) is not correct",
                "bodyHTML": "<p dir=\"auto\">There are wrong docs of the two methods:</p>\n<blockquote>\n<p dir=\"auto\">io.netty.buffer.ByteBuf#setBytes(int, io.netty.buffer.ByteBuf);<br>\nio.netty.buffer.ByteBuf#setBytes(int, io.netty.buffer.ByteBuf, int);</p>\n</blockquote>\n<p dir=\"auto\">The two methods above DO CHANGE the {<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/code/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/code\">@code</a> readerIndex} of the source buffer, but the doc said:</p>\n<blockquote>\n<p dir=\"auto\">This method does not modify {<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/code/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/code\">@code</a> readerIndex} or {<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/code/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/code\">@code</a> writerIndex} of the source buffer (i.e. {<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/code/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/code\">@code</a> this}).</p>\n</blockquote>\n<p dir=\"auto\">Please check the implementation method 'io.netty.buffer.AbstractByteBuf#setBytes(int, io.netty.buffer.ByteBuf, int)', which change the readerIndex by: <code class=\"notranslate\">src.readerIndex(src.readerIndex() + length)</code>.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    public ByteBuf setBytes(int index, ByteBuf src, int length) {\n        checkIndex(index, length);\n        ObjectUtil.checkNotNull(src, &quot;src&quot;);\n        if (checkBounds) {\n            checkReadableBounds(src, length);\n        }\n\n        setBytes(index, src, src.readerIndex(), length);\n        src.readerIndex(src.readerIndex() + length);\n        return this;\n    }`\"><pre lang=\"@Override\" class=\"notranslate\"><code class=\"notranslate\">    public ByteBuf setBytes(int index, ByteBuf src, int length) {\n        checkIndex(index, length);\n        ObjectUtil.checkNotNull(src, \"src\");\n        if (checkBounds) {\n            checkReadableBounds(src, length);\n        }\n\n        setBytes(index, src, src.readerIndex(), length);\n        src.readerIndex(src.readerIndex() + length);\n        return this;\n    }`\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/11297",
                "createdAt": "2021-05-24T08:41:08Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Automatically use netty-tcnative-boringssl-static on windows",
        "url": "https://github.com/netty/netty/pull/11317",
        "resourcePath": "/netty/netty/pull/11317",
        "createdAt": "2021-05-26T10:21:44Z",
        "number": 11317,
        "mergeCommit": {
          "oid": "f81149324ff42ee375d094b20ac481e40206f678",
          "message": "Automatically use netty-tcnative-boringssl-static on windows (#11317)\n\nMotivation:\r\n\r\nWe only release a static compiled version of netty-tcnative for windows so we need to ensure we use it when on windows and not try to use a dynamic build version.\r\n\r\nModifications:\r\n\r\nAutomatically renable the boringssl profile when on windows\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11302",
          "commitUrl": "https://github.com/netty/netty/commit/f81149324ff42ee375d094b20ac481e40206f678",
          "parents": {
            "nodes": [
              {
                "oid": "0ff93519a43c7ef1e299f531461a5b665a85f143",
                "message": "Add builds for windows (#11284)\n\nMotivation:\r\n\r\nLet's also build on windows during PR validation\r\n\r\nModifications:\r\n\r\nAdd build on windows during PR\r\n\r\nResult:\r\n\r\nValidate that all also pass on windows"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjUzNTU0NDg2OjU4YmEyZGI5ZDJmZjg5OTEyYzM2MTZhOWRkNmU1NGExYjkwZjIzYTg=",
                "url": "https://github.com/netty/netty/pull/11317/commits/58ba2db9d2ff89912c3616a9dd6e54a1b90f23a8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11302,
                "url": "https://github.com/netty/netty/issues/11302",
                "title": "Setting up development environment failed on Windows",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Setting up development environment on Windows</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Failure to find io.netty:netty-tcnative:jar:windows-x86_64:2.0.39.Final<br>\nmaven clean install failed</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">maven clean install -X</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:14 min\n[INFO] Finished at: 2021-05-26T10:09:00+08:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal on project netty-handler: Could not resolve dependencies for project io.netty:netty-handler:jar:4.1.65.Final: Failure to find io.netty:netty-tcnative:jar:windows-x86_64:2.0.39.Final in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -&gt; [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal on project netty-handler: Could not resolve dependencies for project io.netty:netty-handler:jar:4.1.65.Final: Failure to find io.netty:netty-tcnative:jar:windows-x86_64:2.0.39.Final in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:269)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:147)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:248)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:202)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke (Method.java:566)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\n    at org.codehaus.classworlds.Launcher.main (Launcher.java:47)\nCaused by: org.apache.maven.project.DependencyResolutionException: Could not resolve dependencies for project io.netty:netty-handler:jar:4.1.65.Final: Failure to find io.netty:netty-tcnative:jar:windows-x86_64:2.0.39.Final in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced\n    at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve (DefaultProjectDependenciesResolver.java:209)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:243)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:147)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:248)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:202)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke (Method.java:566)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\n    at org.codehaus.classworlds.Launcher.main (Launcher.java:47)\nCaused by: org.eclipse.aether.resolution.DependencyResolutionException: Failure to find io.netty:netty-tcnative:jar:windows-x86_64:2.0.39.Final in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced\n    at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies (DefaultRepositorySystem.java:357)\n    at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve (DefaultProjectDependenciesResolver.java:202)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:243)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:147)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:248)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:202)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke (Method.java:566)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\n    at org.codehaus.classworlds.Launcher.main (Launcher.java:47)\nCaused by: org.eclipse.aether.resolution.ArtifactResolutionException: Failure to find io.netty:netty-tcnative:jar:windows-x86_64:2.0.39.Final in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced\n    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolve (DefaultArtifactResolver.java:424)\n    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifacts (DefaultArtifactResolver.java:229)\n    at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies (DefaultRepositorySystem.java:340)\n    at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve (DefaultProjectDependenciesResolver.java:202)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:243)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:147)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:248)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:202)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke (Method.java:566)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\n    at org.codehaus.classworlds.Launcher.main (Launcher.java:47)\nCaused by: org.eclipse.aether.transfer.ArtifactNotFoundException: Failure to find io.netty:netty-tcnative:jar:windows-x86_64:2.0.39.Final in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced\n    at org.eclipse.aether.internal.impl.DefaultUpdateCheckManager.newException (DefaultUpdateCheckManager.java:218)\n    at org.eclipse.aether.internal.impl.DefaultUpdateCheckManager.checkArtifact (DefaultUpdateCheckManager.java:193)\n    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.gatherDownloads (DefaultArtifactResolver.java:559)\n    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.performDownloads (DefaultArtifactResolver.java:483)\n    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolve (DefaultArtifactResolver.java:401)\n    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifacts (DefaultArtifactResolver.java:229)\n    at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies (DefaultRepositorySystem.java:340)\n    at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve (DefaultProjectDependenciesResolver.java:202)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:243)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:147)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:248)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:202)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke (Method.java:566)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\n    at org.codehaus.classworlds.Launcher.main (Launcher.java:47)\n[ERROR] \n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException\n[ERROR] \n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR]   mvn &lt;args&gt; -rf :netty-handler\"><pre class=\"notranslate\"><code class=\"notranslate\">[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:14 min\n[INFO] Finished at: 2021-05-26T10:09:00+08:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal on project netty-handler: Could not resolve dependencies for project io.netty:netty-handler:jar:4.1.65.Final: Failure to find io.netty:netty-tcnative:jar:windows-x86_64:2.0.39.Final in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced -&gt; [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal on project netty-handler: Could not resolve dependencies for project io.netty:netty-handler:jar:4.1.65.Final: Failure to find io.netty:netty-tcnative:jar:windows-x86_64:2.0.39.Final in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:269)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:147)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:248)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:202)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke (Method.java:566)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\n    at org.codehaus.classworlds.Launcher.main (Launcher.java:47)\nCaused by: org.apache.maven.project.DependencyResolutionException: Could not resolve dependencies for project io.netty:netty-handler:jar:4.1.65.Final: Failure to find io.netty:netty-tcnative:jar:windows-x86_64:2.0.39.Final in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced\n    at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve (DefaultProjectDependenciesResolver.java:209)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:243)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:147)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:248)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:202)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke (Method.java:566)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\n    at org.codehaus.classworlds.Launcher.main (Launcher.java:47)\nCaused by: org.eclipse.aether.resolution.DependencyResolutionException: Failure to find io.netty:netty-tcnative:jar:windows-x86_64:2.0.39.Final in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced\n    at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies (DefaultRepositorySystem.java:357)\n    at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve (DefaultProjectDependenciesResolver.java:202)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:243)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:147)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:248)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:202)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke (Method.java:566)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\n    at org.codehaus.classworlds.Launcher.main (Launcher.java:47)\nCaused by: org.eclipse.aether.resolution.ArtifactResolutionException: Failure to find io.netty:netty-tcnative:jar:windows-x86_64:2.0.39.Final in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced\n    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolve (DefaultArtifactResolver.java:424)\n    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifacts (DefaultArtifactResolver.java:229)\n    at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies (DefaultRepositorySystem.java:340)\n    at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve (DefaultProjectDependenciesResolver.java:202)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:243)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:147)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:248)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:202)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke (Method.java:566)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\n    at org.codehaus.classworlds.Launcher.main (Launcher.java:47)\nCaused by: org.eclipse.aether.transfer.ArtifactNotFoundException: Failure to find io.netty:netty-tcnative:jar:windows-x86_64:2.0.39.Final in https://repo.maven.apache.org/maven2 was cached in the local repository, resolution will not be reattempted until the update interval of central has elapsed or updates are forced\n    at org.eclipse.aether.internal.impl.DefaultUpdateCheckManager.newException (DefaultUpdateCheckManager.java:218)\n    at org.eclipse.aether.internal.impl.DefaultUpdateCheckManager.checkArtifact (DefaultUpdateCheckManager.java:193)\n    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.gatherDownloads (DefaultArtifactResolver.java:559)\n    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.performDownloads (DefaultArtifactResolver.java:483)\n    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolve (DefaultArtifactResolver.java:401)\n    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifacts (DefaultArtifactResolver.java:229)\n    at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies (DefaultRepositorySystem.java:340)\n    at org.apache.maven.project.DefaultProjectDependenciesResolver.resolve (DefaultProjectDependenciesResolver.java:202)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.getDependencies (LifecycleDependencyResolver.java:243)\n    at org.apache.maven.lifecycle.internal.LifecycleDependencyResolver.resolveProjectDependencies (LifecycleDependencyResolver.java:147)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.ensureDependenciesAreResolved (MojoExecutor.java:248)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:202)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:957)\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:289)\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:193)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke (Method.java:566)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:282)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:225)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:406)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:347)\n    at org.codehaus.classworlds.Launcher.main (Launcher.java:47)\n[ERROR] \n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException\n[ERROR] \n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR]   mvn &lt;args&gt; -rf :netty-handler\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">netty-4.1.65.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">adopt-openjdk-11</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows10 20H2 19042.985</p>",
                "resourcePath": "/netty/netty/issues/11302",
                "createdAt": "2021-05-26T02:27:33Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Move sctp tests to correct directory and migrate to junit5",
        "url": "https://github.com/netty/netty/pull/11331",
        "resourcePath": "/netty/netty/pull/11331",
        "createdAt": "2021-05-28T06:45:54Z",
        "number": 11331,
        "mergeCommit": {
          "oid": "18e92304a700c1b3664f5a3cf24ee3ed58bafbdd",
          "message": "Move sctp tests to correct directory and migrate to junit5 (#11331)\n\n\r\nMotivation:\r\n\r\nThe sctp tests were in the incorrect directory and so were never executed. Beside this we also should use junit5\r\n\r\nModifications:\r\n\r\n- Move to correct directory\r\n- Use JUnit5 in tests\r\n\r\nResult:\r\n\r\nRelated to https://github.com/netty/netty/issues/10757 and fixes https://github.com/netty/netty/issues/11325",
          "commitUrl": "https://github.com/netty/netty/commit/18e92304a700c1b3664f5a3cf24ee3ed58bafbdd",
          "parents": {
            "nodes": [
              {
                "oid": "4d681bfc6f19deaf63a42dd0983d15ef89224318",
                "message": "Fix test-error which was introduced by porting tests to junit5 (#11330)\n\nMotivation:\r\n\r\nb89a807d15fd925c21d3c875836145cd5302c8c9 moved the buffer tests to junit5 but introduced a small error which could lead to test-failure\r\n\r\nModifications:\r\n\r\nCorrectly override the method and assert that super throws (as we can not expand the buffer).\r\n\r\nResult:\r\n\r\nNo more test failures"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport-sctp/src/test/java/io/netty/channel/sctp/SctpLimitStreamsTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-sctp/src/test/java/io/netty/channel/sctp/SctpTestUtil.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport-sctp/src/test/java/io/netty/channel/sctp/nio/NioSctpLimitStreamsTest.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport-sctp/src/test/java/io/netty/channel/sctp/oio/OioSctpLimitStreamsTest.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport-sctp/src/test/java/io/netty/handler/codec/sctp/SctpMessageCompletionHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjU1OTI1OTY4OmVjOGNlMGE5YjlmN2M3NDQ3YTMxMjU3OGJiZGNjNWIwOTE2NWJiNWI=",
                "url": "https://github.com/netty/netty/pull/11331/commits/ec8ce0a9b9f7c7447a312578bbdcc5b09165bb5b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11325,
                "url": "https://github.com/netty/netty/issues/11325",
                "title": "transport-sctpmodule  tests are not in a working state",
                "bodyHTML": "<p dir=\"auto\">The <code class=\"notranslate\">transport-sctp</code> module tests are in the wrong directory (<code class=\"notranslate\">src/main/test/io/...</code> instead of <code class=\"notranslate\">src/test/java/io/...</code>) and are thus not being ran - they also do not compile, due to classes they use being removed and other validations.</p>",
                "resourcePath": "/netty/netty/issues/11325",
                "createdAt": "2021-05-27T13:02:42Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "HttpPostMultipartRequestDecoder IndexOutOfBoundsException error",
        "url": "https://github.com/netty/netty/pull/11335",
        "resourcePath": "/netty/netty/pull/11335",
        "createdAt": "2021-05-29T10:59:02Z",
        "number": 11335,
        "mergeCommit": {
          "oid": "103f1d269ed0e4cb335241286e53973703574626",
          "message": "HttpPostMultipartRequestDecoder IndexOutOfBoundsException error (#11335)\n\nMotivation:\r\n\r\nWhen searching for the delimiter, the decoder part within HttpPostBodyUtil\r\nwas not checking the left space to check if it could be included or not,\r\nwhile it should.\r\n\r\nModifications:\r\n\r\nAdd a check on toRead being greater or equal than delimiterLength before\r\ngoing within the loop. If the check is wrong, the delimiter is obviously not found.\r\n\r\nAdd a Junit test to preserve regression.\r\n\r\nResult:\r\n\r\nNo more IndexOutOfBoundsException\r\n\r\nFixes #11334",
          "commitUrl": "https://github.com/netty/netty/commit/103f1d269ed0e4cb335241286e53973703574626",
          "parents": {
            "nodes": [
              {
                "oid": "fa58542417df4f29cc3837549c373b1f40c0fb7b",
                "message": "Remove unUsed import statement (#11338)\n\nMotivation:\r\n\r\nRemove unused import statement\r\n\r\nModification:\r\n\r\nRemove unused import statement\r\n\r\nResult:\r\n\r\nCleanup"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostBodyUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostMultiPartRequestDecoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjU3NDQ2NzI1OmE1NDNhYWY4YWFkNzQ1ZTllNzc2OWFkMDQwNzUzNjBkNzdjNzY2ZjQ=",
                "url": "https://github.com/netty/netty/pull/11335/commits/a543aaf8aad745e9e7769ad04075360d77c766f4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11334,
                "url": "https://github.com/netty/netty/issues/11334",
                "title": "HttpPostMultipartRequestDecoder IndexOutOfBoundsException error with netty 4.1.65.Final",
                "bodyHTML": "<p dir=\"auto\">The problem happens when using latests vert.x version. see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"903458635\" data-permission-text=\"Title is private\" data-url=\"https://github.com/eclipse-vertx/vert.x/issues/3949\" data-hovercard-type=\"issue\" data-hovercard-url=\"/eclipse-vertx/vert.x/issues/3949/hovercard\" href=\"https://github.com/eclipse-vertx/vert.x/issues/3949\">eclipse-vertx/vert.x#3949</a><br>\nBut I guess is a problem with netty.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Uploading multiple form datas/files will success.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Fails ramdomly.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">See original issue. I have a project test case, but not have a minimal test case with netty yet.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.65.Final . After  I change to 4.1.59.Final, this problem is gone.</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/11334",
                "createdAt": "2021-05-29T02:21:26Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix read access using getByte(specificReadIndex) not checking that going over writerIndex",
        "url": "https://github.com/netty/netty/pull/11337",
        "resourcePath": "/netty/netty/pull/11337",
        "createdAt": "2021-05-29T12:51:42Z",
        "number": 11337,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PooledHeapByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PooledSlicedByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/ReadOnlyByteBufferBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/ReadOnlyUnsafeDirectByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/UnpooledDirectByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/UnpooledHeapByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/UnpooledUnsafeDirectByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/UnpooledUnsafeHeapByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/UnsafeByteBufUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/UnpooledTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjU3NDYzMjYzOjkxMDdhMzU0NzQ2YzI4MDAxYzQ1OTdjMGYyMmFjNjIzMzViODBiY2M=",
                "url": "https://github.com/netty/netty/pull/11337/commits/9107a354746c28001c4597c0f22ac62335b80bcc"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11336,
                "url": "https://github.com/netty/netty/issues/11336",
                "title": "Issue while read access using getByte(specificReadIndex) not checking that going over writerInder",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">While using e ByteBuf with a capacity greater than writerIndex, trying to access a specific index position that is over writerIndex does not raized an exception such as <code class=\"notranslate\">IndexOutOfBoundsException</code>, while it should.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The only values checked are within <code class=\"notranslate\">MathUtil</code>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/**\n * Determine if the requested {@code index} and {@code length} will fit within {@code capacity}.\n * @param index The starting index.\n * @param length The length which will be utilized (starting from {@code index}).\n * @param capacity The capacity that {@code index + length} is allowed to be within.\n * @return {@code false} if the requested {@code index} and {@code length} will fit within {@code capacity}.\n * {@code true} if this would result in an index out of bounds exception.\n */\npublic static boolean isOutOfBounds(int index, int length, int capacity) {\n    return (index | length | capacity | (index + length) | (capacity - (index + length))) &lt; 0;\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">/**\n * Determine if the requested {@code index} and {@code length} will fit within {@code capacity}.\n * @param index The starting index.\n * @param length The length which will be utilized (starting from {@code index}).\n * @param capacity The capacity that {@code index + length} is allowed to be within.\n * @return {@code false} if the requested {@code index} and {@code length} will fit within {@code capacity}.\n * {@code true} if this would result in an index out of bounds exception.\n */\npublic static boolean isOutOfBounds(int index, int length, int capacity) {\n    return (index | length | capacity | (index + length) | (capacity - (index + length))) &lt; 0;\n}\n</code></pre></div>\n<p dir=\"auto\">while index is &gt; writerIndex, but length is 1 (buffer.getByte(index)) and capacity is &gt; writerIndex but &lt; index + length</p>\n<p dir=\"auto\">Original stack trace where it comes to my eyes:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"isOutOfBounds:64, MathUtil (io.netty.util.internal)\ncheckRangeBounds:1389, AbstractByteBuf (io.netty.buffer)\ncheckIndex0:1397, AbstractByteBuf (io.netty.buffer)\ncheckIndex:1384, AbstractByteBuf (io.netty.buffer)\ncheckIndex:1379, AbstractByteBuf (io.netty.buffer)\ngetByte:85, UnpooledUnsafeDirectByteBuf (io.netty.buffer)\nfindDelimiter:239, HttpPostBodyUtil (io.netty.handler.codec.http.multipart)\nloadDataMultipartOptimized:1172, HttpPostMultipartRequestDecoder (io.netty.handler.codec.http.multipart)\ngetFileUpload:926, HttpPostMultipartRequestDecoder (io.netty.handler.codec.http.multipart)\ndecodeMultipart:572, HttpPostMultipartRequestDecoder (io.netty.handler.codec.http.multipart)\nparseBodyMultipart:463, HttpPostMultipartRequestDecoder (io.netty.handler.codec.http.multipart)\nparseBody:432, HttpPostMultipartRequestDecoder (io.netty.handler.codec.http.multipart)\noffer:347, HttpPostMultipartRequestDecoder (io.netty.handler.codec.http.multipart)\"><pre class=\"notranslate\"><code class=\"notranslate\">isOutOfBounds:64, MathUtil (io.netty.util.internal)\ncheckRangeBounds:1389, AbstractByteBuf (io.netty.buffer)\ncheckIndex0:1397, AbstractByteBuf (io.netty.buffer)\ncheckIndex:1384, AbstractByteBuf (io.netty.buffer)\ncheckIndex:1379, AbstractByteBuf (io.netty.buffer)\ngetByte:85, UnpooledUnsafeDirectByteBuf (io.netty.buffer)\nfindDelimiter:239, HttpPostBodyUtil (io.netty.handler.codec.http.multipart)\nloadDataMultipartOptimized:1172, HttpPostMultipartRequestDecoder (io.netty.handler.codec.http.multipart)\ngetFileUpload:926, HttpPostMultipartRequestDecoder (io.netty.handler.codec.http.multipart)\ndecodeMultipart:572, HttpPostMultipartRequestDecoder (io.netty.handler.codec.http.multipart)\nparseBodyMultipart:463, HttpPostMultipartRequestDecoder (io.netty.handler.codec.http.multipart)\nparseBody:432, HttpPostMultipartRequestDecoder (io.netty.handler.codec.http.multipart)\noffer:347, HttpPostMultipartRequestDecoder (io.netty.handler.codec.http.multipart)\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Original discussion here: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"906443541\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/11335\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/11335/hovercard\" href=\"https://github.com/netty/netty/pull/11335\">#11335</a></p>\n<p dir=\"auto\">I added a simple test in Junit of UnpooledTest within buffer/src/test/java/io/netty/buffer/UnpooledTest.java</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Test\npublic void testWrongAccessGetByteOverWriterIndex() {\n    final ByteBuf buffer = ByteBufAllocator.DEFAULT.directBuffer(100, 2048);\n    buffer.writeZero(100);\n    for (int i = 0; i &lt; 100; i++) {\n        buffer.getByte(i);\n    }\n    try {\n        buffer.getByte(101);\n        fail(&quot;Should raized an exception&quot;);\n    } catch (IndexOutOfBoundsException e) {\n        // OK\n    }\n    final ByteBuf buffer2 = ByteBufAllocator.DEFAULT.directBuffer(1024, 2048);\n    buffer2.writeZero(100);\n    for (int i = 0; i &lt; 100; i++) {\n        buffer2.getByte(i);\n    }\n    try {\n        buffer2.getByte(101);\n        fail(&quot;Should raized an exception&quot;);\n    } catch (IndexOutOfBoundsException e) {\n        // OK\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@Test\npublic void testWrongAccessGetByteOverWriterIndex() {\n    final ByteBuf buffer = ByteBufAllocator.DEFAULT.directBuffer(100, 2048);\n    buffer.writeZero(100);\n    for (int i = 0; i &lt; 100; i++) {\n        buffer.getByte(i);\n    }\n    try {\n        buffer.getByte(101);\n        fail(\"Should raized an exception\");\n    } catch (IndexOutOfBoundsException e) {\n        // OK\n    }\n    final ByteBuf buffer2 = ByteBufAllocator.DEFAULT.directBuffer(1024, 2048);\n    buffer2.writeZero(100);\n    for (int i = 0; i &lt; 100; i++) {\n        buffer2.getByte(i);\n    }\n    try {\n        buffer2.getByte(101);\n        fail(\"Should raized an exception\");\n    } catch (IndexOutOfBoundsException e) {\n        // OK\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">This failed at the second but is OK at the first. The reason is that capacity is bigger than writerIndex.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.65</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">java 11.0.10 2021-01-19 LTS<br>\nJava(TM) SE Runtime Environment 18.9 (build 11.0.10+8-LTS-162)<br>\nJava HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.10+8-LTS-162, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows but should be the same on Linux</p>",
                "resourcePath": "/netty/netty/issues/11336",
                "createdAt": "2021-05-29T11:18:03Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix IpSubnetFilterRule with IPv6 Default Route does not accept all IPv6 addresses",
        "url": "https://github.com/netty/netty/pull/11351",
        "resourcePath": "/netty/netty/pull/11351",
        "createdAt": "2021-06-02T02:53:38Z",
        "number": 11351,
        "mergeCommit": {
          "oid": "dbf56c527d6891e6a5c63fca64cefc403b3d020d",
          "message": "Fix IpSubnetFilterRule with IPv6 Default Route does not accept all IPv6 addresses (#11351)\n\nMotivation:\r\n\r\nIn this issue(https://github.com/netty/netty/issues/11349 ),IpSubnetFilterRule needs to support ipv6 reserved addresses, such as 8000::, but the current implementation does not support\r\n\r\nModification:\r\n\r\nAdded support for default rule\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11349\r\n\r\nSigned-off-by: xingrufei <xingrufei@sogou-inc.com>",
          "commitUrl": "https://github.com/netty/netty/commit/dbf56c527d6891e6a5c63fca64cefc403b3d020d",
          "parents": {
            "nodes": [
              {
                "oid": "6621e4a60f24064e8e5757678179056b42a31436",
                "message": "Add default block in HttpObjectDecoder (#11342)\n\nMotivation:\r\n\r\nThere should always be a default in switch blocks.\r\n\r\nModification:\r\n\r\nAdd default\r\n\r\nResult:\r\n\r\nCode cleanup.\r\n\r\nSigned-off-by: xingrufei <xingrufei@sogou-inc.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ipfilter/IpSubnetFilterRule.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ipfilter/IpSubnetFilterTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjU5NjU0OTI3OmJmMTJhMTdjMjIxMDcxMjZjNDI0ZDVmZjg3NTljYWJmZTBjNGZiOTg=",
                "url": "https://github.com/netty/netty/pull/11351/commits/bf12a17c22107126c424d5ff8759cabfe0c4fb98"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11349,
                "url": "https://github.com/netty/netty/issues/11349",
                "title": "IpSubnetFilterRule with IPv6 Default Route does not accept all IPv6 addresses",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">I would expect that creating an accepting IpSubnetFilterRule with the IPv6 default route (\"::/0\")  should accept any IPv6 address, just like it does for IPv4.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Any IPv6 address higher than 7FFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF is rejected, however anything below that address and including it appears to be valid.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Create an IpSubnetFilterRule with the IPv6 default route and create a test trying to match an IPv6 of 8000:: or higher.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"IpFilterRule rule = new IpSubnetFilterRule(&quot;::&quot;, 0, IpFilterRuleType.ACCEPT);\nassertTrue(rule.matches(new InetSocketAddress(&quot;7FFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF&quot;, 0))); // this is okay\nassertTrue(rule.matches(new InetSocketAddress(&quot;8000::&quot;, 0))); // this fails\"><pre class=\"notranslate\"><code class=\"notranslate\">IpFilterRule rule = new IpSubnetFilterRule(\"::\", 0, IpFilterRuleType.ACCEPT);\nassertTrue(rule.matches(new InetSocketAddress(\"7FFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF\", 0))); // this is okay\nassertTrue(rule.matches(new InetSocketAddress(\"8000::\", 0))); // this fails\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.51</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">1.8.201</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows 10</p>",
                "resourcePath": "/netty/netty/issues/11349",
                "createdAt": "2021-06-01T21:35:02Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix issue if encoding is enabled but not used",
        "url": "https://github.com/netty/netty/pull/11358",
        "resourcePath": "/netty/netty/pull/11358",
        "createdAt": "2021-06-03T02:44:28Z",
        "number": 11358,
        "mergeCommit": {
          "oid": "9f8bfa348e5437417cdfce0cd9d5a3c8ecec71a9",
          "message": "Fix issue if encoding is enabled but not used (#11358)\n\nMotivation:\r\n\r\nFixes an IllegalReferenceCountException\r\n\r\nModification:\r\n\r\nRetained the buffers so the encoder works correctly.\r\n\r\nResult:\r\n\r\nFixes #11357",
          "commitUrl": "https://github.com/netty/netty/commit/9f8bfa348e5437417cdfce0cd9d5a3c8ecec71a9",
          "parents": {
            "nodes": [
              {
                "oid": "10b3cee3fa55a11dac570cefc8abd76e03aed6ad",
                "message": "Fix typo in AbstractMultiSearchProcessorFactory (#11368)\n\nMotivation:\r\n\r\nThere was a typo in the docs.\r\n\r\nModification:\r\n\r\noccurence -> occurrence\r\n\r\nResult:\r\n\r\nCleanup."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpContentCompressorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjYwNTIzMjQyOjEzMDgzNTg0M2EyNDc1ZmFkODA5YzUzZTZjYmFkYTZhZDI2OGM4NWM=",
                "url": "https://github.com/netty/netty/pull/11358/commits/130835843a2475fad809c53e6cbada6ad268c85c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11357,
                "url": "https://github.com/netty/netty/issues/11357",
                "title": "IllegalReferenceCountException with compression enabled but not used if HttpResponse implements HttpContent and not LastHttpContent",
                "bodyHTML": "<p dir=\"auto\">Turns out my fix for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"833408656\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/11092\" data-hovercard-type=\"issue\" data-hovercard-url=\"/netty/netty/issues/11092/hovercard\" href=\"https://github.com/netty/netty/issues/11092\">#11092</a> was incomplete. It fixes the case where the content is compressed, but it will also fail if the client does not specify an Accept-Encoding.</p>",
                "resourcePath": "/netty/netty/issues/11357",
                "createdAt": "2021-06-03T02:39:29Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Added \"RSASSA-PSS\" algorithm in allowed algorithm list.",
        "url": "https://github.com/netty/netty/pull/11363",
        "resourcePath": "/netty/netty/pull/11363",
        "createdAt": "2021-06-03T16:41:52Z",
        "number": 11363,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ExtendedOpenSslSession.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/CA-rsassapss.cert"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/rsaValidation-server-keystore.p12"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/rsaValidation-truststore.pkcs12"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/user-rsassapss-cert.p12"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjYxMDYzMDA2OjkxM2Q1NTZjYmQ0ZmU2NzJlNjMwMDY5NDBlNDg2Njc1MjAwYjVmZmQ=",
                "url": "https://github.com/netty/netty/pull/11363/commits/913d556cbd4fe672e63006940e486675200b5ffd"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11360,
                "url": "https://github.com/netty/netty/issues/11360",
                "title": "Support for \"RSASSA-PSS\" algorithm",
                "bodyHTML": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">While we are trying to validate a user certificate that is generated using the RSASSA-PSS algorithm. Netty OpenSSL engine is throwing an exception \"sun.security.validator.ValidatorException: Certificate signature algorithm disabled\"</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">As the OpenSSL is supporting this algorithm now. So in Netty also should allow this algorithm.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.65.Final<br>\nNetty-tcnative = 2.0.36.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk 11.0.10 2021-01-19 LTS<br>\nOpenJDK Runtime Environment Zulu11.45+52-SA (build 11.0.10+9-LTS)<br>\nOpenJDK 64-Bit Server VM Zulu11.45+52-SA (build 11.0.10+9-LTS, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">1-photon SMP Wed May 26 15:55:27 UTC 2021 x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/11360",
                "createdAt": "2021-06-03T05:11:21Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add additional doc to the method io.netty.buffer.EmptyByteBuf#isDirect",
        "url": "https://github.com/netty/netty/pull/11366",
        "resourcePath": "/netty/netty/pull/11366",
        "createdAt": "2021-06-05T13:12:33Z",
        "number": 11366,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/logging/InternalLoggerFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/logging/Slf4JLoggerFactory.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84ne_i12gAoMGYyMzkyZDc2OTkwYWI0NjhlZmIyN2I5MDliMTQxYzkwYzAxOTcxNg",
                "url": "https://github.com/netty/netty/pull/11366/commits/0f2392d76990ab468efb27b909b141c90c019716"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11354,
                "url": "https://github.com/netty/netty/issues/11354",
                "title": "Counterintuitive behavior of method io.netty.buffer.AbstractByteBuf#readBytes(int)",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The following code should print both <code class=\"notranslate\">true</code> or both <code class=\"notranslate\">false</code>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public static void main(String[] args) {\n        ByteBuf heapBuffer =  new PooledByteBufAllocator(false).heapBuffer(1, 1).writeByte(1);\n\n        ByteBuf buffer_a = heapBuffer.readBytes(0);\n        ByteBuf buffer_b = heapBuffer.readBytes(1);\n\n        System.out.println(buffer_a.isDirect());\n        System.out.println(buffer_b.isDirect());\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">public static void main(String[] args) {\n        ByteBuf heapBuffer =  new PooledByteBufAllocator(false).heapBuffer(1, 1).writeByte(1);\n\n        ByteBuf buffer_a = heapBuffer.readBytes(0);\n        ByteBuf buffer_b = heapBuffer.readBytes(1);\n\n        System.out.println(buffer_a.isDirect());\n        System.out.println(buffer_b.isDirect());\n    }\n</code></pre></div>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">buffer_a.isDirect()</code> printed <code class=\"notranslate\">true</code> ,<br>\n<code class=\"notranslate\">buffer_b.isDirect()</code> printed <code class=\"notranslate\">false</code>.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">See above</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">See above</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">1.8</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">MacOS</p>",
                "resourcePath": "/netty/netty/issues/11354",
                "createdAt": "2021-06-02T09:07:21Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "HttpUtil.getCharset() fails for charset in double-quotes",
        "url": "https://github.com/netty/netty/pull/11373",
        "resourcePath": "/netty/netty/pull/11373",
        "createdAt": "2021-06-07T22:14:51Z",
        "number": 11373,
        "mergeCommit": {
          "oid": "625a7a1075749aa293a4680d78d0a7b1253ae3ab",
          "message": "HttpUtil.getCharset() fails for charset in double-quotes (#11373)\n\n\r\n__Motivation__\r\n\r\nAs described in https://github.com/netty/netty/issues/11370 we should support quoted charset values\r\n\r\n__Modification__\r\n\r\nModify `HttpUtil.getCharset(CharSequence contentTypeValue, Charset defaultCharset)` to trim the double-quotes if present.\r\n\r\n__Result__\r\n\r\n`HttpUtil.getCharset()` now supports quoted charsets. Fixes https://github.com/netty/netty/issues/11370",
          "commitUrl": "https://github.com/netty/netty/commit/625a7a1075749aa293a4680d78d0a7b1253ae3ab",
          "parents": {
            "nodes": [
              {
                "oid": "e69107ceaf247099ad9a198b8ef557bdff994a99",
                "message": "Fix ServerCookieDecoder javadoc (#11372)\n\nMotivation:\r\nWhen decoding the cookies on the server, the \"Cookie\" HTTP request header value should be considered.\r\nThe \"Set-Cookie\" HTTP response header is used to send cookies from the server to the user agent.\r\n\r\nModification:\r\n- Specify in javadoc that the \"Cookie\" HTTP request header value should be considered and\r\nnot the \"Set-Cookie\" HTTP response header value.\r\n\r\nResult:\r\nCorrect ServerCookieDecoder javadoc"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpUtilTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjYzOTQ4MjMwOjJlNTZhMWU4Y2E4OTFhMWVjYzA1NmM4ODNiMTE3YTM1Mzk5ZGJiNWE=",
                "url": "https://github.com/netty/netty/pull/11373/commits/2e56a1e8ca891a1ecc056c883b117a35399dbb5a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11370,
                "url": "https://github.com/netty/netty/issues/11370",
                "title": "HttpUtil.getCharset() fails for charset in double-quotes",
                "bodyHTML": "<p dir=\"auto\">I understood from <a href=\"https://datatracker.ietf.org/doc/html/rfc7231#section-3.1.1.1\" rel=\"nofollow\">RFC 7231</a> the content-type header can have charset value in double-quotes.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"media-type = type &quot;/&quot; subtype *( OWS &quot;;&quot; OWS parameter )\ntype       = token\nsubtype    = token\n\nThe type/subtype MAY be followed by parameters in the form of name=value pairs.\nparameter  = token &quot;=&quot; ( token / quoted-string )\"><pre class=\"notranslate\"><code class=\"notranslate\">media-type = type \"/\" subtype *( OWS \";\" OWS parameter )\ntype       = token\nsubtype    = token\n\nThe type/subtype MAY be followed by parameters in the form of name=value pairs.\nparameter  = token \"=\" ( token / quoted-string )\n</code></pre></div>\n<h3 dir=\"auto\">Expected behaviour</h3>\n<p dir=\"auto\">When the content-type header is set to <code class=\"notranslate\">text/html; charset=\"utf-8\"</code> then the charset is parsed correctly as utf-8.</p>\n<h3 dir=\"auto\">Actual behaviour</h3>\n<p dir=\"auto\">When the content-type header is set to <code class=\"notranslate\">text/html; charset=\"utf-8\"</code> then the charset is parsed incorrectly as default ISO-8859-1.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Change the <a href=\"https://github.com/netty/netty/blob/65e1f0e27c99c226041a21373985f584958ec971/codec-http/src/test/java/io/netty/handler/codec/http/HttpUtilTest.java#L78\"><code class=\"notranslate\">testGetCharset()</code></a> to look like this:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Test\npublic void testGetCharset() {\n    String NORMAL_CONTENT_TYPE = &quot;text/html; charset=utf-8&quot;;\n    String UPPER_CASE_NORMAL_CONTENT_TYPE = &quot;TEXT/HTML; CHARSET=UTF-8&quot;;\n    String CHARSET_IN_DOUBLE_QUOTES = &quot;text/html; charset=\\&quot;utf-8\\&quot;&quot;;\n\n    HttpMessage message = new DefaultHttpResponse(HttpVersion.HTTP_1_1, HttpResponseStatus.OK);\n    message.headers().set(HttpHeaderNames.CONTENT_TYPE, NORMAL_CONTENT_TYPE);\n    assertEquals(CharsetUtil.UTF_8, HttpUtil.getCharset(message));\n    assertEquals(CharsetUtil.UTF_8, HttpUtil.getCharset(NORMAL_CONTENT_TYPE));\n\n    message.headers().set(HttpHeaderNames.CONTENT_TYPE, UPPER_CASE_NORMAL_CONTENT_TYPE);\n    assertEquals(CharsetUtil.UTF_8, HttpUtil.getCharset(message));\n    assertEquals(CharsetUtil.UTF_8, HttpUtil.getCharset(UPPER_CASE_NORMAL_CONTENT_TYPE));\n\n    message.headers().set(HttpHeaderNames.CONTENT_TYPE, CHARSET_IN_DOUBLE_QUOTES);\n    assertEquals(CharsetUtil.UTF_8, HttpUtil.getCharset(message));\n    assertEquals(CharsetUtil.UTF_8, HttpUtil.getCharset(CHARSET_IN_DOUBLE_QUOTES));\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">testGetCharset</span>() {\n    <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">NORMAL_CONTENT_TYPE</span> = <span class=\"pl-s\">\"text/html; charset=utf-8\"</span>;\n    <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">UPPER_CASE_NORMAL_CONTENT_TYPE</span> = <span class=\"pl-s\">\"TEXT/HTML; CHARSET=UTF-8\"</span>;\n    <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">CHARSET_IN_DOUBLE_QUOTES</span> = <span class=\"pl-s\">\"text/html; charset=<span class=\"pl-cce\">\\\"</span>utf-8<span class=\"pl-cce\">\\\"</span>\"</span>;\n\n    <span class=\"pl-smi\">HttpMessage</span> <span class=\"pl-s1\">message</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DefaultHttpResponse</span>(<span class=\"pl-smi\">HttpVersion</span>.<span class=\"pl-c1\">HTTP_1_1</span>, <span class=\"pl-smi\">HttpResponseStatus</span>.<span class=\"pl-c1\">OK</span>);\n    <span class=\"pl-s1\">message</span>.<span class=\"pl-en\">headers</span>().<span class=\"pl-en\">set</span>(<span class=\"pl-smi\">HttpHeaderNames</span>.<span class=\"pl-c1\">CONTENT_TYPE</span>, <span class=\"pl-c1\">NORMAL_CONTENT_TYPE</span>);\n    <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-smi\">CharsetUtil</span>.<span class=\"pl-c1\">UTF_8</span>, <span class=\"pl-smi\">HttpUtil</span>.<span class=\"pl-en\">getCharset</span>(<span class=\"pl-s1\">message</span>));\n    <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-smi\">CharsetUtil</span>.<span class=\"pl-c1\">UTF_8</span>, <span class=\"pl-smi\">HttpUtil</span>.<span class=\"pl-en\">getCharset</span>(<span class=\"pl-c1\">NORMAL_CONTENT_TYPE</span>));\n\n    <span class=\"pl-s1\">message</span>.<span class=\"pl-en\">headers</span>().<span class=\"pl-en\">set</span>(<span class=\"pl-smi\">HttpHeaderNames</span>.<span class=\"pl-c1\">CONTENT_TYPE</span>, <span class=\"pl-c1\">UPPER_CASE_NORMAL_CONTENT_TYPE</span>);\n    <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-smi\">CharsetUtil</span>.<span class=\"pl-c1\">UTF_8</span>, <span class=\"pl-smi\">HttpUtil</span>.<span class=\"pl-en\">getCharset</span>(<span class=\"pl-s1\">message</span>));\n    <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-smi\">CharsetUtil</span>.<span class=\"pl-c1\">UTF_8</span>, <span class=\"pl-smi\">HttpUtil</span>.<span class=\"pl-en\">getCharset</span>(<span class=\"pl-c1\">UPPER_CASE_NORMAL_CONTENT_TYPE</span>));\n\n    <span class=\"pl-s1\">message</span>.<span class=\"pl-en\">headers</span>().<span class=\"pl-en\">set</span>(<span class=\"pl-smi\">HttpHeaderNames</span>.<span class=\"pl-c1\">CONTENT_TYPE</span>, <span class=\"pl-c1\">CHARSET_IN_DOUBLE_QUOTES</span>);\n    <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-smi\">CharsetUtil</span>.<span class=\"pl-c1\">UTF_8</span>, <span class=\"pl-smi\">HttpUtil</span>.<span class=\"pl-en\">getCharset</span>(<span class=\"pl-s1\">message</span>));\n    <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-smi\">CharsetUtil</span>.<span class=\"pl-c1\">UTF_8</span>, <span class=\"pl-smi\">HttpUtil</span>.<span class=\"pl-en\">getCharset</span>(<span class=\"pl-c1\">CHARSET_IN_DOUBLE_QUOTES</span>));\n}</pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\"><a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/netty/netty/commit/b0d1bff64bc09bfc874483360ccb0e56fed1ebb7/hovercard\" href=\"https://github.com/netty/netty/commit/b0d1bff64bc09bfc874483360ccb0e56fed1ebb7\"><tt>b0d1bff</tt></a></p>",
                "resourcePath": "/netty/netty/issues/11370",
                "createdAt": "2021-06-07T13:20:20Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove Progressive*Promise / Progressive*Future",
        "url": "https://github.com/netty/netty/pull/11374",
        "resourcePath": "/netty/netty/pull/11374",
        "createdAt": "2021-06-08T06:57:44Z",
        "number": 11374,
        "mergeCommit": {
          "oid": "07baabaac57f876dd0c8908c7bd58a91c7774730",
          "message": "Remove Progressive*Promise / Progressive*Future (#11374)\n\nMotivation:\r\n\r\nThis special case implementation of Promise / Future requires the implementations responsible for completing the promise to have knowledge of this class to provide value. It also requires that the implementations are able to provide intermediate status while the work is being done. Even throughout the core of Netty it is not really supported most of the times and so just brings more complexity without real gain.\r\n\r\nLet's remove it completely which is better then only support it sometimes.\r\n\r\nModifications:\r\n\r\nRemove Progressive* API\r\n\r\nResult:\r\n\r\nCode cleanup.... Fixes https://github.com/netty/netty/issues/8519",
          "commitUrl": "https://github.com/netty/netty/commit/07baabaac57f876dd0c8908c7bd58a91c7774730",
          "parents": {
            "nodes": [
              {
                "oid": "141593816308dd59272cac1c210243ee25b0e3ab",
                "message": "Remove Future.removeListener* and addListeners (#11375)\n\nMotivation:\r\n\r\nWe didnt really have a good use-case for removeListener* and addListeners. Because of this we should just remove these methods and so make things simpler.\r\n\r\nModifications:\r\n\r\nRemove methods\r\n\r\nResult:\r\n\r\nCleanup"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/AbstractChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/ChannelOutboundBuffer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/ChannelOutboundInvoker.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport/src/main/java/io/netty/channel/ChannelProgressiveFuture.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport/src/main/java/io/netty/channel/ChannelProgressiveFutureListener.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport/src/main/java/io/netty/channel/ChannelProgressivePromise.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/CombinedChannelDuplexHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport/src/main/java/io/netty/channel/DefaultChannelProgressivePromise.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjY0MzU4NDkzOmJlZDA1YzAyZmUwNWQwMDM1NTY4Y2UyN2RhOTdmMTg4ZGUxMDc3NDY=",
                "url": "https://github.com/netty/netty/pull/11374/commits/bed05c02fe05d0035568ce27da97f188de107746"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 8519,
                "url": "https://github.com/netty/netty/issues/8519",
                "title": "[Netty 5] ProgressiveChannelPromise / ProgressivePromise ",
                "bodyHTML": "<p dir=\"auto\">This special case implementation of <code class=\"notranslate\">ProgressivePromise</code> requires the implementations responsible for completing the promise to have knowledge of this class to provide value. It also requires that the implementations are able to provide intermediate status while the work is being done. It is assumed this <code class=\"notranslate\">Promise</code> type is not widely used and is not widely supported throughout the core of Netty. We would like to propose modifying the core <code class=\"notranslate\">Future</code>/<code class=\"notranslate\">Promise</code> APIs to make sure this is not an exceptional case, or more likely remove this special case <code class=\"notranslate\">Promise</code> and find an alternative means when this status is necessary.</p>",
                "resourcePath": "/netty/netty/issues/8519",
                "createdAt": "2018-11-13T13:42:54Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "netty5"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixed #11379, validate fixed header bits.",
        "url": "https://github.com/netty/netty/pull/11389",
        "resourcePath": "/netty/netty/pull/11389",
        "createdAt": "2021-06-14T14:24:00Z",
        "number": 11389,
        "mergeCommit": {
          "oid": "2f4f7135fb4e52d57a28b3256ddf43cb3a43dead",
          "message": "Validate fixed header bits in MQTT (#11389)\n\nMotivation:\r\nThe MQTT spec states that the bits in the fixed header must be set to specific values depending on message type. If a client sends a message with the wrong bits, the server must treat the message as malformed. Netty did not check the value of the reserved bits in the fixed header.\r\n\r\nSee:\r\nMQTT3.1.1: http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/errata01/os/mqtt-v3.1.1-errata01-os-complete.html#_Toc442180835\r\nMQTT 5.0: https://docs.oasis-open.org/mqtt/mqtt/v5.0/os/mqtt-v5.0-os.html#_Toc3901023\r\n\r\n\r\nModification:\r\nAdd validation checks to MqttDecoder.java\r\nAdd unit tests to MqttCodecTest.java \r\nFixed two instances where messages were generated for other unit tests with an incorrect fixed header.\r\n\r\nResult:\r\nFixes #11379.",
          "commitUrl": "https://github.com/netty/netty/commit/2f4f7135fb4e52d57a28b3256ddf43cb3a43dead",
          "parents": {
            "nodes": [
              {
                "oid": "0d5774a82b470833c5f8a84fa4708142a4801f52",
                "message": "Make all compression codecs support buffers that don't have arrays (#11383) (#11387)\n\nMotivation:\r\nVarious compression codecs are currently hard-coded to only support buffers that are backed by byte-arrays that they are willing to expose.\r\nThis is efficient for most of the codecs, but compatibility suffers, as we are not able to freely choose our buffer implementations when compression codecs are involved.\r\n\r\nModification:\r\nAdd code to the compression codecs, that allow them to handle buffers that don't have arrays.\r\nFor many of the codecs, this unfortunately involves allocating temporary byte-arrays, and copying back-and-forth.\r\nWe have to do it that way since some codecs can _only_ work with byte-arrays.\r\nAlso add tests to verify that this works.\r\n\r\nResult:\r\nIt is now possible to use all of our compression codecs with both on-heap and off-heap buffers.\r\nThe default buffer choice has not changed, however, so performance should be unaffected.\r\n\r\nCo-authored-by: Chris Vest <christianvest_hansen@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-mqtt/src/test/java/io/netty/handler/codec/mqtt/MqttCodecTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjY5NjEzMDMxOmE1YzRmMTU5NmRkYWNmZjcxNGJlMDQ0ZmVhMjEyOTk4OWVmYzVjOTU=",
                "url": "https://github.com/netty/netty/pull/11389/commits/a5c4f1596ddacff714be044fea2129989efc5c95"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11379,
                "url": "https://github.com/netty/netty/issues/11379",
                "title": "[codec-mqtt] Netty tries to interpret QOS level on CONNECT package",
                "bodyHTML": "<p dir=\"auto\">The MQTT CONNECT package FIXED header contains only the MQTT Control Packet type in the first 4 bits. The remaining bits in the first byte are reserved. (<a href=\"http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/errata01/os/mqtt-v3.1.1-errata01-os-complete.html#_Toc442180841\" rel=\"nofollow\">SPEC</a>)<br>\nCurrently, the MqttDecoder parses the fixed header the same for all packet types, and thus tries to interpret the reserved bits of the fixed header in the CONNECT packet:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/c78afbc4f13ac4d6cb488fb14b31379960f03fff/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttDecoder.java#L166\">netty/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttDecoder.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 166\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/c78afbc4f13ac4d6cb488fb14b31379960f03fff\">c78afbc</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L166\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"166\"></td>\n          <td id=\"LC166\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">qosLevel</span> = (<span class=\"pl-s1\">b1</span> &amp; <span class=\"pl-c1\">0x06</span>) &gt;&gt; <span class=\"pl-c1\">1</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\n<div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/c78afbc4f13ac4d6cb488fb14b31379960f03fff/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttDecoder.java#L185\">netty/codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttDecoder.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 185\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/c78afbc4f13ac4d6cb488fb14b31379960f03fff\">c78afbc</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L185\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"185\"></td>\n          <td id=\"LC185\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">MqttFixedHeader</span>(<span class=\"pl-s1\">messageType</span>, <span class=\"pl-s1\">dupFlag</span>, <span class=\"pl-smi\">MqttQoS</span>.<span class=\"pl-en\">valueOf</span>(<span class=\"pl-s1\">qosLevel</span>), <span class=\"pl-s1\">retain</span>, <span class=\"pl-s1\">remainingLength</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Apparently, the HiveMQ client sets the remaining bits to all 1, resulting the MqttDecoder to try to interpret bits 2 + 3 of the reserved bits as \"QOS 3\" resulting in an exception.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Ignore reserved bits</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">tries to interpret reserved bits, resulting in an exception.<br>\nCaused by: java.lang.IllegalArgumentException: invalid QoS: 3</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Send a CONNECT packet with the reserved bits set to 1</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Working on it</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">netty-4.1.65</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">11</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux</p>",
                "resourcePath": "/netty/netty/issues/11379",
                "createdAt": "2021-06-10T11:09:02Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Tail tasks queue: configure separately from tasks queue",
        "url": "https://github.com/netty/netty/pull/11400",
        "resourcePath": "/netty/netty/pull/11400",
        "createdAt": "2021-06-18T19:34:31Z",
        "number": 11400,
        "mergeCommit": {
          "oid": "2abe20a6b5f53a5e8c508b6abb9eeed9562cb5d7",
          "message": "Tail tasks queue: configure separately from tasks queue (#11400)\n\n\r\nMotivation:\r\n\r\nIO transports (primarily epoll, but also applies to kqueue, nio) cant be configured with separate tail tasks queue factory -\r\ninstead single queue factory is used for both normal tasks and tail tasks.\r\n\r\nModifications:\r\n\r\nAdd constructor accepting tail EventLoopTaskQueueFactory to aforementioned transports\r\n\r\nResult:\r\n\r\nIO transports can be configured with separate tail tasks",
          "commitUrl": "https://github.com/netty/netty/commit/2abe20a6b5f53a5e8c508b6abb9eeed9562cb5d7",
          "parents": {
            "nodes": [
              {
                "oid": "20e4ccbd33176457dddd4d5abe1722afd92b1cd7",
                "message": "Skip Brotli related tests on platforms which not support Brotli (#11435)\n\n\r\nMotivation:\r\n\r\nThe native module is not yet available on aarch64 Mac / Windows thus causing tests in codec/ to fail (specifically all the Brotli ones, since the module could not be loaded).\r\n\r\nModification:\r\n\r\nDisable Brotli tests when platform is not supported\r\n\r\nResult:\r\n\r\nTests under codec/ now pass under Mac/aarch64 and Windows/aarch64"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoop.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoopGroup.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollEventLoopTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/src/main/java/io/netty/channel/kqueue/KQueueEventLoop.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/src/main/java/io/netty/channel/kqueue/KQueueEventLoopGroup.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/nio/NioEventLoop.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/nio/NioEventLoopGroup.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjczNjg0NjY4OmI5ZWYxNWUxYWU0ZjJhOGZmNWVjYmIzMjI4MTM4Y2YwZTA0MjU1ZjU=",
                "url": "https://github.com/netty/netty/pull/11400/commits/b9ef15e1ae4f2a8ff5ecbb3228138cf0e04255f5"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11391,
                "url": "https://github.com/netty/netty/issues/11391",
                "title": "Tail tasks queue: configure separately from tasks queue",
                "bodyHTML": "<p dir=\"auto\">IO transports (primarily epoll, but this also applies to kqueue, nio) cant be configured with separate <code class=\"notranslate\">tail tasks</code> queue factory -<br>\ninstead single queue factory is used for both normal tasks and tail tasks.</p>\n<p dir=\"auto\">Their parent <a href=\"https://github.com/netty/netty/blob/0d5774a82b470833c5f8a84fa4708142a4801f52/transport/src/main/java/io/netty/channel/SingleThreadEventLoop.java#L63\">SingleThreadEventLoop</a> does have constructor accepting both <code class=\"notranslate\">taskQueue</code> and <code class=\"notranslate\">tailTaskQueue</code>.</p>\n<p dir=\"auto\">I use <code class=\"notranslate\">SingleThreadEventLoop.executeAfterEventLoopIteration(Runnable)</code> for internal tasks executed strictly from eventloop,<br>\nand would prefer to configure queue other than MPSC.</p>",
                "resourcePath": "/netty/netty/issues/11391",
                "createdAt": "2021-06-15T18:22:16Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Update graal annotations dependencies GAV to allow license GPL2+CE",
        "url": "https://github.com/netty/netty/pull/11404",
        "resourcePath": "/netty/netty/pull/11404",
        "createdAt": "2021-06-21T09:30:18Z",
        "number": 11404,
        "mergeCommit": {
          "oid": "956e1da2adb597164ff4a69aa19f97e0d7dde0be",
          "message": "Update graal annotations dependencies GAV to allow license GPL2+CE (#11404)\n\nMotivation:\r\n\r\nWe need to use a GraalVM dependency which uses GPL2 + CE.\r\n\r\nModifications:\r\n\r\n- Update all graalvm dependencies to new GAV which introduces a license change from GPL2 to GPL2 + CE\r\n- This also required a small bump on the general version from 19.2 to 19.3, which should be fine as 19.3 is an official maintained LTS version, while 19.2 wasn't.\r\n\r\nResult:\r\n\r\nFixes: #11398\r\n\r\nSigned-off-by: Paulo Lopes <pmlopes@gmail.com>",
          "commitUrl": "https://github.com/netty/netty/commit/956e1da2adb597164ff4a69aa19f97e0d7dde0be",
          "parents": {
            "nodes": [
              {
                "oid": "ac177753d835286bb82fae3e731cb3f891510f4f",
                "message": "Add GraalVM to the PR build matrix (#11405)\n\nMotivation:\r\n\r\nNative image compatibility is fragile and breaks easily, so we need a PR build to tell us when this happens.\r\n\r\nModification:\r\n\r\nAdd a graalvm-based build to the PR build matrix.\r\n\r\nResult:\r\n\r\nEvery PR is now also tested on Graal."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite-native-image-client-runtime-init/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite-native-image-client/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite-native-image/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Njc0Mzg0MzA4OjU2YmZjOGVjZWJkNjdiMmI0YmNjYjdhYTUxYzYxMGNhNzFlYmMzMDA=",
                "url": "https://github.com/netty/netty/pull/11404/commits/56bfc8ecebd67b2b4bccb7aa51c610ca71ebc300"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11398,
                "url": "https://github.com/netty/netty/issues/11398",
                "title": "Netty depends on GraalVM which is under GPL license",
                "bodyHTML": "<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.63.Final</p>\n<p dir=\"auto\">Because Netty started to <a href=\"https://github.com/netty/netty/blob/netty-4.1.63.Final/common/pom.xml#L42\">depend</a> on <a href=\"https://search.maven.org/artifact/com.oracle.substratevm/svm/19.2.1/jar\" rel=\"nofollow\">GraalVM</a> under GPL license, although only annotations are used, we can not update netty version in our internal repository with exactly the same source code and its dependency's source code.</p>\n<p dir=\"auto\">Is it possible not to use those annotations in the source code?</p>",
                "resourcePath": "/netty/netty/issues/11398",
                "createdAt": "2021-06-17T23:03:21Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add ALPN Buffering to support HTTP/2 Prior Knowledge",
        "url": "https://github.com/netty/netty/pull/11407",
        "resourcePath": "/netty/netty/pull/11407",
        "createdAt": "2021-06-22T09:35:48Z",
        "number": 11407,
        "mergeCommit": {
          "oid": "750d23583c187b4e8dafdfea3f4fbeaf1d9be7cd",
          "message": "Add ALPN Buffering to support HTTP/2 Prior Knowledge (#11407)\n\nMotivation:\r\nCurrently, Netty cannot handle HTTP/2 Preface messages if the client used the Prior knowledge technique. In Prior knowledge, the client sends an HTTP/2 preface message immediately after finishing TLS Handshake. But in Netty, when TLS Handshake is finished, ALPNHandler is triggered to configure the pipeline. And between these 2 operations, if an HTTP/2 preface message arrives, it gets dropped.\r\n\r\nModification:\r\n\r\nBuffer messages until we are done with the ALPN handling.\r\n\r\nResult:\r\nFixes #11403.\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/750d23583c187b4e8dafdfea3f4fbeaf1d9be7cd",
          "parents": {
            "nodes": [
              {
                "oid": "126e9f873b2a8b64f9b1e082eeb3b1cd43e71553",
                "message": "Revert \"Fix deprecated GC logging switch (#11395)\" (#11436)\n\nThis reverts commit 077e5f282cb1f16dd70c7b93cea5c097f93a2c34."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ApplicationProtocolNegotiationHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/ApplicationProtocolNegotiationHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Njc1MjUwMjM3OmI2MDU2NzIzYzk4YmQ1MmM4ZWE4NDY1OWJkM2ZkNjUzOGI4Y2E1YmE=",
                "url": "https://github.com/netty/netty/pull/11407/commits/b6056723c98bd52c8ea84659bd3fd6538b8ca5ba"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11403,
                "url": "https://github.com/netty/netty/issues/11403",
                "title": "Netty cannot handle HTTP/2 (h2) Prior Knowledge correctly",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Netty should be capable of handling HTTP/2 (h2) Prior Knowledge which happens even before ALPN.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">HTTP/2 (h2) Prior Knowledge Preface message is being discarded because it was received even before the ALPN pipeline was configured.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Use Java 11 HttpClient with HTTP version set to 2.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\"><a href=\"https://github.com/shieldblaze/ExpressGateway/blob/main/protocol-http/src/test/java/com/shieldblaze/expressgateway/protocol/http/adapter/mix/Http2TLSBackendAndNonTLSClientTest.java\">https://github.com/shieldblaze/ExpressGateway/blob/main/protocol-http/src/test/java/com/shieldblaze/expressgateway/protocol/http/adapter/mix/Http2TLSBackendAndNonTLSClientTest.java</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.65.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"11.0.11\" 2021-04-20 LTS<br>\nOpenJDK Runtime Environment Corretto-11.0.11.9.1 (build 11.0.11+9-LTS)<br>\nOpenJDK 64-Bit Server VM Corretto-11.0.11.9.1 (build 11.0.11+9-LTS, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows 10 Pro x64</p>",
                "resourcePath": "/netty/netty/issues/11403",
                "createdAt": "2021-06-21T07:18:40Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "`HttpUtil#normalizeAndGetContentLength()` should handle empty value",
        "url": "https://github.com/netty/netty/pull/11409",
        "resourcePath": "/netty/netty/pull/11409",
        "createdAt": "2021-06-22T22:26:30Z",
        "number": 11409,
        "mergeCommit": {
          "oid": "5a658bb8875e5e13cbcf47cde417d88d9851e1ae",
          "message": "`HttpUtil#normalizeAndGetContentLength()` should handle empty value (#11409)\n\n__Motivation__\r\n\r\n`HttpUtil#normalizeAndGetContentLength()` throws `StringIndexOutOfBoundsException` for empty `content-length` values, it should instead throw `IllegalArgumentException` for all invalid values.\r\n\r\n__Modification__\r\n\r\n- Throw `IllegalArgumentException` if the `content-length` value is empty.\r\n- Add tests\r\n\r\n__Result__\r\n\r\nFixes https://github.com/netty/netty/issues/11408",
          "commitUrl": "https://github.com/netty/netty/commit/5a658bb8875e5e13cbcf47cde417d88d9851e1ae",
          "parents": {
            "nodes": [
              {
                "oid": "98a3a0c0cb7e2b9076da8d335549ae60970cf8fe",
                "message": "Recycler.WeakOrderQueue drop Object hasBeenRecycled (#11402)\n\n\r\nMotivation:\r\n\r\nWeakOrderQueue would drop object that has been recycled, even when it has space for it.\r\nWeakOrderQueue#add should check DefaultHandler.hasBeenRecycler field  first\r\n\r\nModifications:\r\n\r\nWeakOrderQueue test the DefaultHandler.hasBeenRecycler first\r\n\r\nResult:\r\n\r\nWeakOrderQueue would not drop object that has been recycled when there is space\r\n\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>\r\nCo-authored-by: Trustin Lee <t@motd.kr>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpUtilTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Njc1Nzk5NzgzOjA5ZjUxYzA4ODU2MmRiZTVjYzQyMTE5YWZiYjdhMmJlYTdjZmQwMTU=",
                "url": "https://github.com/netty/netty/pull/11409/commits/09f51c088562dbe5cc42119afbb7a2bea7cfd015"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11408,
                "url": "https://github.com/netty/netty/issues/11408",
                "title": "StringIndexOutOfBoundsException caused by empty content value",
                "bodyHTML": "<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">A recent <a href=\"https://github.com/netty/netty/commit/89c241e3b1795ff257af4ad6eadc616cb2fb3dc4\">commit</a> causing <a href=\"https://github.com/netty/netty/blob/netty-4.1.63.Final/codec-http/src/main/java/io/netty/handler/codec/http/HttpUtil.java#L600\">this line</a> to throw exception if we've got empty content-length header:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Content-Length: \\r\\n\\r\\n\"><pre class=\"notranslate\"><code class=\"notranslate\">Content-Length: \\r\\n\\r\\n\n</code></pre></div>\n<p dir=\"auto\">Stack trace:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.StringIndexOutOfBoundsException: String index out of range: 0\n    at java.lang.StringLatin1.charAt(StringLatin1.java:47) \n    at java.lang.String.charAt(String.java:693) \n    at io.netty.handler.codec.http.HttpUtil.normalizeAndGetContentLength(HttpUtil.java:600) \n    at io.netty.handler.codec.http.HttpObjectDecoder.readHeaders(HttpObjectDecoder.java:642) \n    at io.netty.handler.codec.http.HttpObjectDecoder.decode(HttpObjectDecoder.java:257)\n    at io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder.decode(HttpServerCodec.java:123)\n    at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:508)\n    at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:447)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) \n    at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) \n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) \n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) \n    at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) \n    at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) \n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) \n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) \n    at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)\n    at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480) \n    at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)     at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n    at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) \n    at java.lang.Thread.run(Thread.java:829)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.StringIndexOutOfBoundsException: String index out of range: 0\n    at java.lang.StringLatin1.charAt(StringLatin1.java:47) \n    at java.lang.String.charAt(String.java:693) \n    at io.netty.handler.codec.http.HttpUtil.normalizeAndGetContentLength(HttpUtil.java:600) \n    at io.netty.handler.codec.http.HttpObjectDecoder.readHeaders(HttpObjectDecoder.java:642) \n    at io.netty.handler.codec.http.HttpObjectDecoder.decode(HttpObjectDecoder.java:257)\n    at io.netty.handler.codec.http.HttpServerCodec$HttpServerRequestDecoder.decode(HttpServerCodec.java:123)\n    at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:508)\n    at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:447)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276) \n    at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) \n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) \n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) \n    at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) \n    at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) \n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) \n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) \n    at io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:795)\n    at io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:480) \n    at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)     at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n    at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) \n    at java.lang.Thread.run(Thread.java:829)\n</code></pre></div>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">It should gracefully handle the StringIndexOutOfBoundsException and throw exception saying that Content-Length header is invalid.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">This can be easily reproduced by the following test code:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Test\npublic void test() {\n    assertThatThrownBy(() -&gt; {\n        ch.writeInbound(Unpooled.copiedBuffer(&quot;GET / HTTP/1.0\\r\\n&quot;, CharsetUtil.UTF_8));\n        ch.writeInbound(Unpooled.copiedBuffer(&quot;Content-Length: \\r\\n\\r\\n&quot;, CharsetUtil.UTF_8));\n    }).hasCauseInstanceOf(StringIndexOutOfBoundsException.class)\n            .hasMessageContaining(&quot;String index out of range: 0&quot;);\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@Test\npublic void test() {\n    assertThatThrownBy(() -&gt; {\n        ch.writeInbound(Unpooled.copiedBuffer(\"GET / HTTP/1.0\\r\\n\", CharsetUtil.UTF_8));\n        ch.writeInbound(Unpooled.copiedBuffer(\"Content-Length: \\r\\n\\r\\n\", CharsetUtil.UTF_8));\n    }).hasCauseInstanceOf(StringIndexOutOfBoundsException.class)\n            .hasMessageContaining(\"String index out of range: 0\");\n}\n</code></pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.63.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/11408",
                "createdAt": "2021-06-22T19:16:21Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "[feature request] support GMSSL (#11406)",
        "url": "https://github.com/netty/netty/pull/11410",
        "resourcePath": "/netty/netty/pull/11410",
        "createdAt": "2021-06-23T06:27:19Z",
        "number": 11410,
        "mergeCommit": {
          "oid": "3226e774853f95b50f0d2955e41884efebc9225f",
          "message": "Add support for GMSSL (#11406) (#11410)\n\n__Motivation__\r\n\r\nAdd support for GMSSL protocol to SslUtils.\r\n\r\n__Modification__\r\n\r\nModify `SslUtils.getEncryptedPacketLength(ByteBuf buffer, int offset)` to get packet length when protocol is GMSSL.\r\nModify `SslUtils.getEncryptedPacketLength(ByteBuffer buffer)` to get packet length when protocol is GMSSL.\r\n\r\n__Result__\r\n\r\n`SslUtils.getEncryptedPacketLength` now supports GMSSL protocol. Fixes https://github.com/netty/netty/issues/11406",
          "commitUrl": "https://github.com/netty/netty/commit/3226e774853f95b50f0d2955e41884efebc9225f",
          "parents": {
            "nodes": [
              {
                "oid": "801819b359935e5f4fa097b58396eb86787c848e",
                "message": "Fix HttpHeaderValue#XML_HTTP_REQUEST case (#11433)\n\nMotivation:\r\n\r\nHTTP header values are case sensitive. The expected value for `x-request-with` header is `XMLHttpRequest`, not `XmlHttpRequest`.\r\n\r\nModification:\r\n\r\nFix constant's case.\r\n\r\nResult:\r\n\r\nCorrect `XMLHttpRequest` HTTP header value."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/SslUtilsTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Njc1OTg4NzU3OmFjODE0Mzc3MTU1M2YwNTE5ZGQwOTRiMzg2ZmRjMTg1ODc5MjIxMWM=",
                "url": "https://github.com/netty/netty/pull/11410/commits/ac8143771553f0519dd094b386fdc1858792211c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11406,
                "url": "https://github.com/netty/netty/issues/11406",
                "title": "[feature request] support GMSSL",
                "bodyHTML": "<p dir=\"auto\">openssl already support GMSSL algorithm:<br>\n<a href=\"https://www.openssl.org/docs/man1.1.1/man7/SM2.html\" rel=\"nofollow\">https://www.openssl.org/docs/man1.1.1/man7/SM2.html</a></p>\n<p dir=\"auto\">to support GMSSL, need to modify <a href=\"https://github.com/netty/netty/blob/4.1/handler/src/main/java/io/netty/handler/ssl/SslUtils.java#L279\">https://github.com/netty/netty/blob/4.1/handler/src/main/java/io/netty/handler/ssl/SslUtils.java#L279</a></p>\n<ul dir=\"auto\">\n<li>add code: <code class=\"notranslate\">|| buffer.getShort(offset + 1) == 0x101</code></li>\n<li>add comments: or GMSSLv1.0 or GMSSLv1.1</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (tls) {\n    // SSLv3 or TLS or GMSSLv1.0 or GMSSLv1.1 - Check ProtocolVersion\n    int majorVersion = buffer.getUnsignedByte(offset + 1);\n    if (majorVersion == 3 || buffer.getShort(offset + 1) == 0x101) {\n        // SSLv3 or TLS or GMSSLv1.0 or GMSSLv1.1\n        packetLength = unsignedShortBE(buffer, offset + 3) + SSL_RECORD_HEADER_LENGTH;\n        if (packetLength &lt;= SSL_RECORD_HEADER_LENGTH) {\n            // Neither SSLv3 or TLSv1 (i.e. SSLv2 or bad data)\n            tls = false;\n        }\n    } else {\n        // Neither SSLv3 or TLSv1 (i.e. SSLv2 or bad data)\n        tls = false;\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">if (tls) {\n    // SSLv3 or TLS or GMSSLv1.0 or GMSSLv1.1 - Check ProtocolVersion\n    int majorVersion = buffer.getUnsignedByte(offset + 1);\n    if (majorVersion == 3 || buffer.getShort(offset + 1) == 0x101) {\n        // SSLv3 or TLS or GMSSLv1.0 or GMSSLv1.1\n        packetLength = unsignedShortBE(buffer, offset + 3) + SSL_RECORD_HEADER_LENGTH;\n        if (packetLength &lt;= SSL_RECORD_HEADER_LENGTH) {\n            // Neither SSLv3 or TLSv1 (i.e. SSLv2 or bad data)\n            tls = false;\n        }\n    } else {\n        // Neither SSLv3 or TLSv1 (i.e. SSLv2 or bad data)\n        tls = false;\n    }\n}\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/11406",
                "createdAt": "2021-06-22T08:57:27Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Correctly use HandshakeStatus.NEED_WRAP when a handshake failed and a\u2026",
        "url": "https://github.com/netty/netty/pull/11412",
        "resourcePath": "/netty/netty/pull/11412",
        "createdAt": "2021-06-23T14:11:15Z",
        "number": 11412,
        "mergeCommit": {
          "oid": "a71ec15fc488ff6c85fc164749ff9a1ccc46de9f",
          "message": "Correctly use HandshakeStatus.NEED_WRAP when a handshake failed and a alert was produced (#11412)\n\nMotivation:\r\n\r\nWe need to ensure we always \"consumed\" all alerts etc via SSLEngine.wrap(...) before we teardown the engine. Failing to do so may lead to a situation where the remote peer will not be able to see the actual cause of the handshake failure but just see the connection being closed.\r\n\r\nModifications:\r\n\r\nCorrectly return HandshakeStatus.NEED_WRAP when we need to wrap some data first before we shutdown the engine because of a handshake failure.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11388",
          "commitUrl": "https://github.com/netty/netty/commit/a71ec15fc488ff6c85fc164749ff9a1ccc46de9f",
          "parents": {
            "nodes": [
              {
                "oid": "6edb231bf501dc8b7ab0b234e8d7c86a685936cf",
                "message": "Update to netty-tcnative 2.0.40.Final (#11411)\n\nMotivation:\r\n\r\nA new version of netty-tcnative was released\r\n\r\nModifications:\r\n\r\nUpdate to 2.0.40.Final\r\n\r\nResult:\r\n\r\nUse latest version"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Njc2MzI4NDA5OmIzZTcwNjRhY2MzNDExMzBiMjQzZWE4YTI0YjA5NTZiMWUzMWZhYTM=",
                "url": "https://github.com/netty/netty/pull/11412/commits/b3e7064acc341130b243ea8a24b0956b1e31faa3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11388,
                "url": "https://github.com/netty/netty/issues/11388",
                "title": "Test SslHandlerTest.testHandshakeFailureCipherMissmatchTLSv12OpenSsl failing on macOS",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Test pass.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">[ERROR]   SslHandlerTest.testHandshakeFailureCipherMissmatchTLSv12OpenSsl:1422-&gt;testHandshakeFailureCipherMissmatch:1510<br>\nExpected: an instance of javax.net.ssl.SSLException<br>\nbut: &lt;java.nio.channels.ClosedChannelException&gt; is a java.nio.channels.ClosedChannelException</p>\n<p dir=\"auto\">08:44:32.597 [nioEventLoopGroup-2-3] WARN  i.n.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.<br>\nio.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: error:1417A0C1:SSL routines:tls_post_process_client_hello:no shared cipher<br>\nat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:477)<br>\nat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)<br>\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)<br>\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)<br>\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)<br>\nat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)<br>\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)<br>\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)<br>\nat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)<br>\nat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)<br>\nat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)<br>\nat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)<br>\nat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)<br>\nat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)<br>\nat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)<br>\nat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)<br>\nat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)<br>\nat java.lang.Thread.run(Thread.java:748)<br>\nCaused by: javax.net.ssl.SSLHandshakeException: error:1417A0C1:SSL routines:tls_post_process_client_hello:no shared cipher<br>\nat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.shutdownWithError(ReferenceCountedOpenSslEngine.java:1064)<br>\nat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.shutdownWithError(ReferenceCountedOpenSslEngine.java:1048)<br>\nat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.handshake(ReferenceCountedOpenSslEngine.java:1914)<br>\nat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1131)<br>\nat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1371)<br>\nat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1414)<br>\nat io.netty.handler.ssl.SslHandler$SslEngineType$1.unwrap(SslHandler.java:224)<br>\nat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1338)<br>\nat io.netty.handler.ssl.SslHandler.decodeNonJdkCompatible(SslHandler.java:1245)<br>\nat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1282)<br>\nat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:507)<br>\nat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:446)<br>\n... 17 common frames omitted<br>\n[ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.883 s &lt;&lt;&lt; FAILURE! - in io.netty.handler.ssl.SslHandlerTest<br>\n[ERROR] testHandshakeFailureCipherMissmatchTLSv12OpenSsl  Time elapsed: 0.879 s  &lt;&lt;&lt; FAILURE!<br>\njava.lang.AssertionError:</p>\n<p dir=\"auto\">Expected: an instance of javax.net.ssl.SSLException<br>\nbut: &lt;java.nio.channels.ClosedChannelException&gt; is a java.nio.channels.ClosedChannelException<br>\nat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)<br>\nat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)<br>\nat io.netty.handler.ssl.SslHandlerTest.testHandshakeFailureCipherMissmatch(SslHandlerTest.java:1510)<br>\nat io.netty.handler.ssl.SslHandlerTest.testHandshakeFailureCipherMissmatchTLSv12OpenSsl(SslHandlerTest.java:1422)<br>\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)<br>\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)<br>\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)<br>\nat java.lang.reflect.Method.invoke(Method.java:498)<br>\nat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)<br>\nat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)<br>\nat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)<br>\nat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)<br>\nat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)<br>\nat org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)<br>\nat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)<br>\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)<br>\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)<br>\nat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)<br>\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)<br>\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)<br>\nat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)<br>\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)<br>\nat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)<br>\nat org.junit.runners.ParentRunner.run(ParentRunner.java:413)<br>\nat org.junit.runner.JUnitCore.run(JUnitCore.java:137)<br>\nat org.junit.runner.JUnitCore.run(JUnitCore.java:115)<br>\nat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:43)<br>\nat java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)<br>\nat java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)<br>\nat java.util.Iterator.forEachRemaining(Iterator.java:116)<br>\nat java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)<br>\nat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)<br>\nat java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)<br>\nat java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)<br>\nat java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)<br>\nat java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)<br>\nat java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:485)<br>\nat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:82)<br>\nat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:73)<br>\nat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)<br>\nat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)<br>\nat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)<br>\nat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)<br>\nat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)<br>\nat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)<br>\nat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)<br>\nat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)<br>\nat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)<br>\nat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)<br>\nat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">mvn -X -pl handler test -Dtest=io.netty.handler.ssl.SslHandlerTest#testHandshakeFailureCipherMissmatchTLSv12OpenSsl</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">n/a</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.66.Final-SNAPSHOT</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"1.8.0_292\"<br>\nOpenJDK Runtime Environment (AdoptOpenJDK)(build 1.8.0_292-b10)<br>\nOpenJDK 64-Bit Server VM (AdoptOpenJDK)(build 25.292-b10, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin Helbers-MacBook-Pro.local 20.5.0 Darwin Kernel Version 20.5.0: Sat May  8 05:10:33 PDT 2021; root:xnu-7195.121.3~9/RELEASE_X86_64 x86_64</p>",
                "resourcePath": "/netty/netty/issues/11388",
                "createdAt": "2021-06-14T11:55:03Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix Lz4FrameEncoder Acknowledges Writes Too Early",
        "url": "https://github.com/netty/netty/pull/11419",
        "resourcePath": "/netty/netty/pull/11419",
        "createdAt": "2021-06-25T12:28:10Z",
        "number": 11419,
        "mergeCommit": null,
        "potentialMergeCommit": {
          "oid": "e2caec8325b8e59826765d46a4cd17546a5e9491",
          "message": "Merge 223028f503393ad52a02663b1875e6437e584eba into 2e413d6c73aac00d4541bab119c7a2c330bf8235",
          "commitUrl": "https://github.com/netty/netty/commit/e2caec8325b8e59826765d46a4cd17546a5e9491",
          "parents": {
            "nodes": [
              {
                "oid": "2e413d6c73aac00d4541bab119c7a2c330bf8235",
                "message": "Add more JDK versions to the devcontainers (#14008)\n\nMotivation:\n\nWe should add also other JDKs to the docker images that are used by\ndevcontainers so its easier to debug with different JDKs\n\nModifications:\n\nAdd Java 8,11,17\n\nResult:\n\nEasier to debug with devcontainers\n\n---------\n\nCo-authored-by: Chris Vest <christianvest_hansen@apple.com>"
              },
              {
                "oid": "223028f503393ad52a02663b1875e6437e584eba",
                "message": "use#setFailure instead of tryFailure"
              }
            ]
          }
        },
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/MessageToByteEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/Lz4FrameEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/test/java/io/netty/handler/codec/compression/Lz4FrameEncoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Njc3ODc2NDEyOjIyMzAyOGY1MDMzOTNhZDUyYTAyNjYzYjE4NzVlNjQzN2U1ODRlYmE=",
                "url": "https://github.com/netty/netty/pull/11419/commits/223028f503393ad52a02663b1875e6437e584eba"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 9281,
                "url": "https://github.com/netty/netty/issues/9281",
                "title": "Lz4FrameEncoder (and other compressors) Acknowledge Writes Too Early",
                "bodyHTML": "<p dir=\"auto\">Expected behaviour: The promise for a write should be completed only once the write makes it to the network</p>\n<p dir=\"auto\">Actual behaviour: Buffering encoders that extend <code class=\"notranslate\">MessageToByteEncoder</code>, most notably Lz4FrameEncoder and other compressors, will notify the promise before the frame containing the message reaches the network.</p>\n<p dir=\"auto\">This behaviour is triggered by <code class=\"notranslate\">MessageToByteEncoder.write</code> which is designed for 1:1 conversions from message to <code class=\"notranslate\">ByteBuf</code>.  For the affected compressors, the <code class=\"notranslate\">encode</code> method returns a <code class=\"notranslate\">ByteBuf</code> that does not fully contain the message, unless it happens to precisely fill the buffer.</p>\n<p dir=\"auto\">Either an empty <code class=\"notranslate\">ByteBuf</code> is returned, or one containing only part of the message, with the remainder in both cases left in the buffer.  In either case, the supplied promise will be attached to the write of this <code class=\"notranslate\">ByteBuf</code> (empty or otherwise), and not to the <code class=\"notranslate\">ByteBuf</code> that contains the end of the message.</p>\n<p dir=\"auto\">Netty version: 4.0+ (I think, certainly confirmed on 4.1)</p>",
                "resourcePath": "/netty/netty/issues/9281",
                "createdAt": "2019-06-25T11:42:51Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "defect"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add support for Unix domain datagram sockets when using native epoll/kqueue transport",
        "url": "https://github.com/netty/netty/pull/11423",
        "resourcePath": "/netty/netty/pull/11423",
        "createdAt": "2021-06-29T15:26:08Z",
        "number": 11423,
        "mergeCommit": {
          "oid": "3f9a5f50be78370c4a10471938d3eaf4a1b8e69f",
          "message": "Add support for Unix domain datagram sockets when using native epoll/kqueue transport (#11423)\n\nMotivation:\r\n\r\nThere are use cases when Unix domain datagram sockets are needed for communication. This PR adds such support for Epoll/KQueue.\r\n\r\nModification:\r\n\r\n- Expose Channel, Config and Packet interfaces/classes for Unix domain datagram sockets. All interfaces/classes are in `transport-native-unix-common` module in order to be available for KQueue and Epoll implementations\r\n- Add JNI code for Unix domain datagram sockets\r\n- Refactor `DatagramUnicastTest` so that it can be used for testing also Unix domain datagram sockets\r\n- Add Unix domain datagram sockets implementation for KQueue transport\r\n- Add Unix domain datagram sockets implementation for Epoll transport\r\n\r\nResult:\r\n\r\nFixes #6737",
          "commitUrl": "https://github.com/netty/netty/commit/3f9a5f50be78370c4a10471938d3eaf4a1b8e69f",
          "parents": {
            "nodes": [
              {
                "oid": "e5adc1131ab1ecc892234689d5f5fb6d689fb8ee",
                "message": "Only do a partial build for a few jobs when verify PRs (#11464)\n\nMotivation:\r\n\r\nCurrently the PR verification takes a lot of time. We should try to only run builds for the affected modules in most cases to speed up the build.\r\n\r\nModifications:\r\n\r\nAdjust docker files and workflow to only run build for affected modules for a lot of jobs while still run full builds for windows + java11 with BoringSSL\r\n\r\nResult:\r\n\r\nHopefully quicker feedback loop when verify PRs"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueDomainDatagramUnicastTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueSocketTestPermutation.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/src/main/c/netty_unix_socket.c"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramChannel.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramPacket.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainDatagramSocketAddress.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/src/main/java/io/netty/channel/unix/DomainSocketAddress.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/src/main/java/io/netty/channel/unix/Socket.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/src/main/java/io/netty/channel/unix/Unix.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjgwMTI3OTI3OmIyZmI3NGRjZDlkNjIwMDExMDQ2MDM5MjhjZjM4MTZkYmY1YzkzYjU=",
                "url": "https://github.com/netty/netty/pull/11423/commits/b2fb74dcd9d62001104603928cf3816dbf5c93b5"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6737,
                "url": "https://github.com/netty/netty/issues/6737",
                "title": "Support DGRAM unix domain socket",
                "bodyHTML": "<p dir=\"auto\">Currently only STREAM unix domian socket is supported, it would better to support DGRAM unix domain socket.</p>",
                "resourcePath": "/netty/netty/issues/6737",
                "createdAt": "2017-05-12T11:40:55Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Delay initialization of io.netty.handler.codec.compression.BrotliDecoder to runtime",
        "url": "https://github.com/netty/netty/pull/11428",
        "resourcePath": "/netty/netty/pull/11428",
        "createdAt": "2021-06-30T10:59:18Z",
        "number": 11428,
        "mergeCommit": {
          "oid": "bc206ff173d171bfe19829858dcb0e43938ebc7c",
          "message": "Delay initialization of io.netty.handler.codec.compression.BrotliDecoder to runtime (#11428)\n\nMotivation:\r\nIncluding codec-http in the project and building a native-image out of it using a GraalVM 21.2 nightly can result in a failure.\r\n\r\nModification:\r\nBy delaying the initialization of `io.netty.handler.codec.compression.BrotliDecoder` to runtime, native-image will not try to eagerly initialize the class during the image build, avoiding the build failure described in the issue.\r\n\r\nResult:\r\nFixes #11427",
          "commitUrl": "https://github.com/netty/netty/commit/bc206ff173d171bfe19829858dcb0e43938ebc7c",
          "parents": {
            "nodes": [
              {
                "oid": "750d23583c187b4e8dafdfea3f4fbeaf1d9be7cd",
                "message": "Add ALPN Buffering to support HTTP/2 Prior Knowledge (#11407)\n\nMotivation:\r\nCurrently, Netty cannot handle HTTP/2 Preface messages if the client used the Prior knowledge technique. In Prior knowledge, the client sends an HTTP/2 preface message immediately after finishing TLS Handshake. But in Netty, when TLS Handshake is finished, ALPNHandler is triggered to configure the pipeline. And between these 2 operations, if an HTTP/2 preface message arrives, it gets dropped.\r\n\r\nModification:\r\n\r\nBuffer messages until we are done with the ALPN handling.\r\n\r\nResult:\r\nFixes #11403.\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/resources/META-INF/native-image/io.netty/codec-http/native-image.properties"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjgwNzU0OTcwOmEyNjI4ODE5M2M5YmIzOThjMWViYTAzM2MyZjk0NTExY2FkMTdmNGM=",
                "url": "https://github.com/netty/netty/pull/11428/commits/a26288193c9bb398c1eba033c2f94511cad17f4c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11427,
                "url": "https://github.com/netty/netty/issues/11427",
                "title": "Native-image build failure when using codec-http on GraalVM 21.2 dev",
                "bodyHTML": "<h3 dir=\"auto\">Description of the issue</h3>\n<p dir=\"auto\">Including <code class=\"notranslate\">codec-http</code> in the project and building a native-image out of it using a GraalVM 21.2 nightly can result in:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"...\n[native-tests:26191]    (objects):  30,812.60 ms,  6.77 GB\n[native-tests:26191]   (features):   4,280.68 ms,  6.77 GB\n[native-tests:26191]     analysis:  86,171.65 ms,  6.77 GB\nError: Class initialization of io.netty.handler.codec.compression.BrotliDecoder failed. Use the option --initialize-at-run-time=io.netty.handler.codec.compression.BrotliDecoder to explicitly request delayed initialization of this class.\"><pre class=\"notranslate\"><code class=\"notranslate\">...\n[native-tests:26191]    (objects):  30,812.60 ms,  6.77 GB\n[native-tests:26191]   (features):   4,280.68 ms,  6.77 GB\n[native-tests:26191]     analysis:  86,171.65 ms,  6.77 GB\nError: Class initialization of io.netty.handler.codec.compression.BrotliDecoder failed. Use the option --initialize-at-run-time=io.netty.handler.codec.compression.BrotliDecoder to explicitly request delayed initialization of this class.\n</code></pre></div>\n<p dir=\"auto\">Usage of <code class=\"notranslate\">Brotli</code> is hidden behind this check (<a href=\"https://github.com/netty/netty/blob/4.1/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecompressor.java#L70\">https://github.com/netty/netty/blob/4.1/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecompressor.java#L70</a>):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        if (Brotli.isAvailable() &amp;&amp; BR.contentEqualsIgnoreCase(contentEncoding)) {\n            return new EmbeddedChannel(ctx.channel().id(), ctx.channel().metadata().hasDisconnect(),\n              ctx.channel().config(), new BrotliDecoder());\n        }\"><pre class=\"notranslate\"><code class=\"notranslate\">        if (Brotli.isAvailable() &amp;&amp; BR.contentEqualsIgnoreCase(contentEncoding)) {\n            return new EmbeddedChannel(ctx.channel().id(), ctx.channel().metadata().hasDisconnect(),\n              ctx.channel().config(), new BrotliDecoder());\n        }\n</code></pre></div>\n<p dir=\"auto\">However, while parsing the bytecode of this method, native-image will see a new instance of <code class=\"notranslate\">BrotliDecoder</code> being created and, as <code class=\"notranslate\">io.netty</code> is marked for build-time initialization, try to eagerly initialize it. If <code class=\"notranslate\">Brotli</code> is not available, this can lead to a failure during class linking (in this particular case, because <code class=\"notranslate\">com.aayushatharva.brotli4j.decoder.DecoderJNI</code> isn't on the classpath), resulting in a failed image build.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">The easiest way to reproduce this is using <code class=\"notranslate\">spring-native</code> samples:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"export JAVA_HOME=&lt;path-to-graalvm-21.2-dev&gt;\nexport PATH=$JAVA_HOME/bin:$PATH\ngit clone https://github.com/spring-projects-experimental/spring-native.git\ncd spring-native/samples/data-elasticsearch/\ngit checkout 49239a7fa24e09bbc91b943df579394fe74ef12c # Necessary because of an existing workaround on `main`\n./build.sh\"><pre class=\"notranslate\"><code class=\"notranslate\">export JAVA_HOME=&lt;path-to-graalvm-21.2-dev&gt;\nexport PATH=$JAVA_HOME/bin:$PATH\ngit clone https://github.com/spring-projects-experimental/spring-native.git\ncd spring-native/samples/data-elasticsearch/\ngit checkout 49239a7fa24e09bbc91b943df579394fe74ef12c # Necessary because of an existing workaround on `main`\n./build.sh\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.65.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Reproducible on both GraalVM 21.2 nightlies and 21.3 dev, Java 11</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Reproducible on Linux-AMD64, running Ubuntu 20.04</p>",
                "resourcePath": "/netty/netty/issues/11427",
                "createdAt": "2021-06-30T10:55:01Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add Protocols and CipherSuites constants",
        "url": "https://github.com/netty/netty/pull/11446",
        "resourcePath": "/netty/netty/pull/11446",
        "createdAt": "2021-07-03T05:44:07Z",
        "number": 11446,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/SslHandlerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/SslUtilsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/ocsp/OcspTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/util/FingerprintTrustManagerFactoryTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/stream/ChunkedWriteHandlerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/timeout/IdleStateEventTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/timeout/IdleStateHandlerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/timeout/WriteTimeoutHandlerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/traffic/FileRegionThrottleTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/traffic/TrafficShapingHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjgyOTcyMDkxOmZkOGIzZTM3ZmM0NzU2NGFjNTYxNzY4NWYxZDhmNTdiNmRiZDJjOGY=",
                "url": "https://github.com/netty/netty/pull/11446/commits/fd8b3e37fc47564ac5617685f1d8f57b6dbd2c8f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11393,
                "url": "https://github.com/netty/netty/issues/11393",
                "title": "No constant for ssl protocol selection",
                "bodyHTML": "<p dir=\"auto\">This is a minor issue but one that I think would be easy to fix. Please educate me if there's a complexity or nuance that I'm not seeing.</p>\n<p dir=\"auto\">Netty lets the user choose the tls version.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            clientSslContext = SslContextBuilder\n                    .forClient()\n                    .protocols(&quot;TSLv1.3&quot;)\n                    ...\n                    .build();\"><pre class=\"notranslate\"><code class=\"notranslate\">            clientSslContext = SslContextBuilder\n                    .forClient()\n                    .protocols(\"TSLv1.3\")\n                    ...\n                    .build();\n</code></pre></div>\n<p dir=\"auto\">There's no constant/enum defined for this that I can find in netty. Should there be a public string/enum for customers to use when making this selection?</p>\n<p dir=\"auto\">The only definition I can find is this constant but it is package private - </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/a98c60283b38830607780e039c7dd52715ec5814/handler/src/main/java/io/netty/handler/ssl/SslUtils.java#L66\">netty/handler/src/main/java/io/netty/handler/ssl/SslUtils.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 66\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/a98c60283b38830607780e039c7dd52715ec5814\">a98c602</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L66\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"66\"></td>\n          <td id=\"LC66\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">PROTOCOL_TLS_V1_3</span> = <span class=\"pl-s\">\"TLSv1.3\"</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>",
                "resourcePath": "/netty/netty/issues/11393",
                "createdAt": "2021-06-16T15:52:50Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add SslProtocols and Cipher suites constants",
        "url": "https://github.com/netty/netty/pull/11457",
        "resourcePath": "/netty/netty/pull/11457",
        "createdAt": "2021-07-06T15:32:36Z",
        "number": 11457,
        "mergeCommit": {
          "oid": "ede7a604f185cd716032ecbb356b6ea5130f7d0d",
          "message": "Add SslProtocols and Cipher suites constants (#11457)\n\nMotivation:\r\nProtocols and Cipher suites constants to prevent typos in protocol and cipher suites names and ease of use.\r\n\r\nModification:\r\nAdded Protocols and Cipher suites as constants in their respective classes.\r\n\r\nResult:\r\nFixes #11393",
          "commitUrl": "https://github.com/netty/netty/commit/ede7a604f185cd716032ecbb356b6ea5130f7d0d",
          "parents": {
            "nodes": [
              {
                "oid": "0b2e955aff1555616e0d5b1d5047f1737347bdfe",
                "message": "Revert \"Introduce OpenSslAsyncPrivateKeyMethod which allows to asynchronously sign / decrypt the private key (#11390)\"\n\nThis reverts commit 7c57c4be17ed245d8e0c3b5270f516690188d219."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/DelegatingSslContextTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/JdkSslEngineTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/OpenSslEngineTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/OpenSslPrivateKeyMethodTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/OpenSslServerContextTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/ParameterizedSslHandlerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/RenegotiateTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/SSLEngineTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/SniHandlerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/SslHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Njg0NDgwNDg2OjQ2ZGYyN2E0ZjZkMTUyYjdiODQxNWQxMzdjNzEyYThkNjllZjBlOWY=",
                "url": "https://github.com/netty/netty/pull/11457/commits/46df27a4f6d152b7b8415d137c712a8d69ef0e9f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11393,
                "url": "https://github.com/netty/netty/issues/11393",
                "title": "No constant for ssl protocol selection",
                "bodyHTML": "<p dir=\"auto\">This is a minor issue but one that I think would be easy to fix. Please educate me if there's a complexity or nuance that I'm not seeing.</p>\n<p dir=\"auto\">Netty lets the user choose the tls version.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            clientSslContext = SslContextBuilder\n                    .forClient()\n                    .protocols(&quot;TSLv1.3&quot;)\n                    ...\n                    .build();\"><pre class=\"notranslate\"><code class=\"notranslate\">            clientSslContext = SslContextBuilder\n                    .forClient()\n                    .protocols(\"TSLv1.3\")\n                    ...\n                    .build();\n</code></pre></div>\n<p dir=\"auto\">There's no constant/enum defined for this that I can find in netty. Should there be a public string/enum for customers to use when making this selection?</p>\n<p dir=\"auto\">The only definition I can find is this constant but it is package private - </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/a98c60283b38830607780e039c7dd52715ec5814/handler/src/main/java/io/netty/handler/ssl/SslUtils.java#L66\">netty/handler/src/main/java/io/netty/handler/ssl/SslUtils.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 66\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/a98c60283b38830607780e039c7dd52715ec5814\">a98c602</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L66\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"66\"></td>\n          <td id=\"LC66\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">PROTOCOL_TLS_V1_3</span> = <span class=\"pl-s\">\"TLSv1.3\"</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>",
                "resourcePath": "/netty/netty/issues/11393",
                "createdAt": "2021-06-16T15:52:50Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "server h2c upgrade fail when request doesn't have connection header",
        "url": "https://github.com/netty/netty/pull/11569",
        "resourcePath": "/netty/netty/pull/11569",
        "createdAt": "2021-08-11T08:41:42Z",
        "number": 11569,
        "mergeCommit": {
          "oid": "056eba4db4c1b466d6b45d261642a6aa6134fe38",
          "message": "server h2c upgrade fail when request doesn't have connection header (#11569)\n\n__Motivation__\r\nSince request.headers().getAll() will never return null. And the check null condition will not work as expected.\r\n\r\n__Modification__\r\n\r\nAdd isEmpty() checking as well.\r\n\r\n__Result__\r\n\r\nFixes #11568",
          "commitUrl": "https://github.com/netty/netty/commit/056eba4db4c1b466d6b45d261642a6aa6134fe38",
          "parents": {
            "nodes": [
              {
                "oid": "f750e2eb6a9e8598091abb48c8c806c5ef64b0bd",
                "message": "Add support for client-side TCP FastOpen to KQueue MacOS (#11560)\n\nMotivation:\r\nThe MacOS-specific `connectx(2)` system call make it possible to establish client-side connections with TCP FastOpen.\r\n\r\nModification:\r\nAdd support for TCP FastOpen to the KQueue transport, and add the `connectx(2)` system call to `BsdSocket`.\r\n\r\nResult:\r\nIt's now possible to use TCP FastOpen when initiating connections on MacOS."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpServerUpgradeHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpServerUpgradeHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzA4NTA4NzUyOmI5NzQyNThhYTA5NWM0ODhmZmM1MTM4OGQxYTFkMDE3YTgyYmQ4Yjk=",
                "url": "https://github.com/netty/netty/pull/11569/commits/b974258aa095c488ffc51388d1a1d017a82bd8b9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11568,
                "url": "https://github.com/netty/netty/issues/11568",
                "title": "HttpServerUpgradeHandler causing StringIndexOutOfBoundsException",
                "bodyHTML": "<p dir=\"auto\">We are using netty as a proxy server. And added HttpServerUpgradeHandler incase client wants to talk in h2c.<br>\nBut with a normal http1 request, we see the following exceptions.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:98)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: java.lang.StringIndexOutOfBoundsException: String index out of range: -1\n\tat java.base/java.lang.AbstractStringBuilder.setLength(AbstractStringBuilder.java:275)\n\tat java.base/java.lang.StringBuilder.setLength(StringBuilder.java:85)\n\tat io.netty.handler.codec.http.HttpServerUpgradeHandler.upgrade(HttpServerUpgradeHandler.java:297)\n\tat io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:239)\n\tat io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:40)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)\n\t... 22 more\"><pre lang=\"io.netty.handler.codec.DecoderException:\" class=\"notranslate\"><code class=\"notranslate\">\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:98)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: java.lang.StringIndexOutOfBoundsException: String index out of range: -1\n\tat java.base/java.lang.AbstractStringBuilder.setLength(AbstractStringBuilder.java:275)\n\tat java.base/java.lang.StringBuilder.setLength(StringBuilder.java:85)\n\tat io.netty.handler.codec.http.HttpServerUpgradeHandler.upgrade(HttpServerUpgradeHandler.java:297)\n\tat io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:239)\n\tat io.netty.handler.codec.http.HttpServerUpgradeHandler.decode(HttpServerUpgradeHandler.java:40)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)\n\t... 22 more\n</code></pre></div>\n<p dir=\"auto\">As far as I can see, it seems like the if conditon should also add isEmpty().</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            return false;\n        }\"><pre lang=\"if\" class=\"notranslate\"><code class=\"notranslate\">            return false;\n        }\n</code></pre></div>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/3f8dab5ad00a718dc8ad6c00e27b740783ea23c5/codec-http/src/main/java/io/netty/handler/codec/http/HttpServerUpgradeHandler.java#L326\">netty/codec-http/src/main/java/io/netty/handler/codec/http/HttpServerUpgradeHandler.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 326\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/3f8dab5ad00a718dc8ad6c00e27b740783ea23c5\">3f8dab5</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L326\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"326\"></td>\n          <td id=\"LC326\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">connectionHeaderValues</span> == <span class=\"pl-c1\">null</span>) { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>",
                "resourcePath": "/netty/netty/issues/11568",
                "createdAt": "2021-08-11T07:01:18Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add some docs for io.netty.leakDetection.acquireAndReleaseOnly.",
        "url": "https://github.com/netty/netty/pull/11580",
        "resourcePath": "/netty/netty/pull/11580",
        "createdAt": "2021-08-16T10:20:18Z",
        "number": 11580,
        "mergeCommit": {
          "oid": "794c45fd590ffc51b16bb4b8af87556c0d2025fb",
          "message": "Add some docs for io.netty.leakDetection.acquireAndReleaseOnly. (#11580)\n\nMotivation:\r\n\r\nWe should add some docs / comment to explain what io.netty.leakDetection.acquireAndReleaseOnly is all about.\r\n\r\nModifications:\r\n\r\nAdd some comments\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11576.",
          "commitUrl": "https://github.com/netty/netty/commit/794c45fd590ffc51b16bb4b8af87556c0d2025fb",
          "parents": {
            "nodes": [
              {
                "oid": "ea932dd70673b28420302b3323ff7809326955d1",
                "message": "Ensure we only log message on BoringSSL when the ciphers really are not the default (#11583)\n\nMotivation:\r\n\r\n0c9a86db812573fbdc9f39b4ec4f29188248ff3a added a change to log a message if someone tried to change the TLSv1.3 ciphers when using BoringSSL. Unfortunally the code had some error and so even if the user did not change these we logged something.\r\n\r\nModifications:\r\n\r\n- Ensure there are no duplicates in the ciphers\r\n- Correctly take TLSv1.3 extra ciphers into account when using BoringSSL\r\n\r\nResult:\r\n\r\nCorrectly log or not log"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/AdvancedLeakAwareByteBuf.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzEzMzA1MTg3OjMwMTQ4YTg3MDE3YWY3OTM3NGNmMGUzMTA3MzE4N2QwNjBjMDliNzU=",
                "url": "https://github.com/netty/netty/pull/11580/commits/30148a87017af79374cf0e31073187d060c09b75"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11576,
                "url": "https://github.com/netty/netty/issues/11576",
                "title": "Missing documentation for io.netty.leakDetection.acquireAndReleaseOnly",
                "bodyHTML": "<p dir=\"auto\">Stumbled across the property reading source code and its not clear to me what it does and I can't find any documentation about it</p>",
                "resourcePath": "/netty/netty/issues/11576",
                "createdAt": "2021-08-13T15:21:20Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix support for optional encoders errors in HttpContentCompressor",
        "url": "https://github.com/netty/netty/pull/11582",
        "resourcePath": "/netty/netty/pull/11582",
        "createdAt": "2021-08-16T14:43:27Z",
        "number": 11582,
        "mergeCommit": {
          "oid": "93484071d6f5696c6ac4db57dbcc7a5208b6473a",
          "message": "Fix support for optional encoders errors in HttpContentCompressor (#11582)\n\nMotivation:\r\n\r\n- Fix `HttpContentCompressor` errors due to missing optional compressor libraries such as Brotli and Zstd at runtime.\r\n- Improve support for optional encoders by only considering the `CompressionOptions` provided to the constructor and ignoring those for which the encoder is unavailable.\r\n\r\nModification:\r\n\r\nThe `HttpContentCompressor` constructor now only creates encoder factories for the CompressionOptions passed to the constructor when the encoder is available which must be checked for Brotli and Zstd. In case of Brotli, it is not possible to create BrotliOptions if brotly4j is not available so there's actually nothing to check. In case of Zstd, I had to create class `io.netty.handler.codec.compression.Zstd` similar to `io.netty.handler.codec.compression.Brotli` which is used to check that zstd-jni is availabie at runtime.\r\n\r\nThe `determineEncoding()` method had to change as well in order to ignore encodings for which there's no `CompressionEncoderFactory` instance.\r\n\r\nWhen the HttpContentCompressor is created using deprecated constructor (ie. with no CompressionOptions), we consider all available encoders.\r\n\r\nResult:\r\n\r\nFixes #11581.",
          "commitUrl": "https://github.com/netty/netty/commit/93484071d6f5696c6ac4db57dbcc7a5208b6473a",
          "parents": {
            "nodes": [
              {
                "oid": "201f6b6bb2dcdff07df6e30552b96fedbcf21759",
                "message": "Remove dead code and fix warnings in the http2 module (#11593)\n\nMotivation:\r\nOpportunities for clean up found while working on a different PR.\r\n\r\nModification:\r\n* Dead code has been removed.\r\n* Unnecessary parenthesis, qualifiers, etc. removed.\r\n* Unused imports removed.\r\n* Override annotations added where missing.\r\n\r\nResult:\r\nCleaner code"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpContentCompressor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpContentCompressorOptionsTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/Zstd.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzEzNTAwNDAzOjYxZTU0YmFjYTRlZjlkM2YzOGVjZmFjYmM2YTE1NTVkMDViNGU5ZDQ=",
                "url": "https://github.com/netty/netty/pull/11582/commits/61e54baca4ef9d3f38ecfacbc6a1555d05b4e9d4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11581,
                "url": "https://github.com/netty/netty/issues/11581",
                "title": "HttpContentCompressor doesn't handle optional encoders",
                "bodyHTML": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">Following <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"941820362\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/11480\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/11480/hovercard\" href=\"https://github.com/netty/netty/pull/11480\">#11480</a> and the use of <code class=\"notranslate\">CompressionOptions</code> it appears the <code class=\"notranslate\">HttpContentCompressor</code> doesn't handle optional encoders such as Brotli and Zstd properly when using <code class=\"notranslate\">CompressionOptions</code>.</p>\n<p dir=\"auto\">For instance, if brotli4j is missing at runtime, Http compression is actually  completely broken as the constructor always tries to create <code class=\"notranslate\">BrotliOptions</code> even if not specified which result in an <code class=\"notranslate\">IllegalStateException</code>.</p>\n<p dir=\"auto\">Then, if zstd-jni is missing at runtime, a request with <code class=\"notranslate\">accept-encoding: gzip, deflate, zstd</code> will fail since <code class=\"notranslate\">determineEncoding()</code> still returns zstd resulting in a <code class=\"notranslate\">NoClassDefFoundError</code> when the <code class=\"notranslate\">beginEncode()</code> method is invoked.</p>\n<p dir=\"auto\">This behaviour is actually quite different than what's implemented in <code class=\"notranslate\">CompressorHttp2ConnectionEncoder</code> which only considers the encoders for which <code class=\"notranslate\">CompressionOptions</code> have been specified.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When using the <code class=\"notranslate\">HttpContentCompressor</code> with <code class=\"notranslate\">CompressionOptions</code> without brotly4j or zstd-jni at runtime, we expect the brotly and zstd encoding to be ignored, fallbacking to another encoding or to no encoding following <code class=\"notranslate\">accept-encoding</code> HTTP header rules.</p>\n<p dir=\"auto\">For instance:<br>\n<code class=\"notranslate\">accept-encoding: gzip, br</code> should result in a response compressed in gzip<br>\n<code class=\"notranslate\">accept-encoding: br, zstd</code> should result in an uncompressed response</p>\n<p dir=\"auto\">In general, the <code class=\"notranslate\">HttpContentCompressor</code> should only consider the encodings corresponding to the <code class=\"notranslate\">CompressionOptions</code> provided to the constructor.</p>\n<p dir=\"auto\">For instance, if the <code class=\"notranslate\">HttpContentCompressor</code> is created with <code class=\"notranslate\">GzipOptions</code> only, then only gzip encoding should be accepted and a response to a request with different accept encodings should be uncompressed. This behaviour is the same as for <code class=\"notranslate\">CompressorHttp2ConnectionEncoder</code>.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Using the <code class=\"notranslate\">HttpContentCompressor</code> without the brotli4j results in a <code class=\"notranslate\">IllegalStateException: \"Brotli is not available\"</code> thrown when it tries to create default <code class=\"notranslate\">BrotliOptions</code> in the constructor.</p>\n<p dir=\"auto\">Using the <code class=\"notranslate\">HttpContentCompressor</code> without zstd-jni results in a <code class=\"notranslate\">NoClassDefFoundError</code> thrown when it tries to encode a response in zstd encoding.</p>\n<p dir=\"auto\">When creating a <code class=\"notranslate\">HttpContentCompressor</code> with a single <code class=\"notranslate\">CompressionOptions</code> such as <code class=\"notranslate\">GzipOptions</code>, the constructor actually sets default options for the other encodings and as a result, a response can be compressed using deflate, brotli or zstd encoders event if we didn't want it.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ul dir=\"auto\">\n<li>Define a <code class=\"notranslate\">HttpContentCompressor</code> with <code class=\"notranslate\">GzipOptions</code> in a HTTP server</li>\n<li>Run the server without brotli or zstd-jni</li>\n<li>query the server with various <code class=\"notranslate\">accept-encoding</code> headers: <code class=\"notranslate\">accept-encoding: gzip</code>, <code class=\"notranslate\">accept-encoding: br</code>, <code class=\"notranslate\">accept-encoding: deflate</code>...</li>\n</ul>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.66.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"16\" 2021-03-16<br>\nOpenJDK Runtime Environment (build 16+36-2231)<br>\nOpenJDK 64-Bit Server VM (build 16+36-2231, mixed mode, sharing)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux 4.19.0-17-amd64 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"418688\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/1\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/1/hovercard\" href=\"https://github.com/netty/netty/pull/1\">#1</a> SMP Debian 4.19.194-1 (2021-06-10) x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/11581",
                "createdAt": "2021-08-16T14:19:43Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use StandardSocketOptions#IP_MULTICAST_IF as default source when join\u2026",
        "url": "https://github.com/netty/netty/pull/11585",
        "resourcePath": "/netty/netty/pull/11585",
        "createdAt": "2021-08-17T08:33:20Z",
        "number": 11585,
        "mergeCommit": {
          "oid": "228a01e268c478bf5bb3717aa11ad37728ac4276",
          "message": "Use StandardSocketOptions#IP_MULTICAST_IF as default source when joing multicast groups (#11585)\n\nMotivation:\r\n\r\nWe should use StandardSocketOptions#IP_MULTICAST_IF as default source when joing multicast groups and only try to use the localAddress if this returns null.\r\n\r\nModifications:\r\n\r\nFirst check if StandardSocketOptions#IP_MULTICAST_IF was set and if so use the network interface when joining mulicast groups\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11541",
          "commitUrl": "https://github.com/netty/netty/commit/228a01e268c478bf5bb3717aa11ad37728ac4276",
          "parents": {
            "nodes": [
              {
                "oid": "cafc669436f693412f36ba3206de541ce24e70f5",
                "message": "Add CI job for JDK17 (#11584)\n\n\r\nMotivation:\r\n\r\nAs JDK17 is really close to be released we should add a CI job for it to ensure netty works correctly when using it.\r\n\r\nModifications:\r\n\r\nAdd docker config and workflow config to run CI job for JDK17\r\n\r\nResult:\r\n\r\nEnsure netty works on JDK17 as well"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDatagramChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/socket/nio/NioDatagramChannel.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzE0MDMwOTg3OjYwMmU1MDYwNTBlNWJhOTE4OGRkNzQyODNkN2U0ODlhN2EwZDcyMTA=",
                "url": "https://github.com/netty/netty/pull/11585/commits/602e506050e5ba9188dd74283d7e489a7a0d7210"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11541,
                "url": "https://github.com/netty/netty/issues/11541",
                "title": "DatagramChannel join without a network interface could use the channel option multicast interface instead of guessing from the local address",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">DatagramChannel#joinGroup(multicastAddress)</code> calls <code class=\"notranslate\">DatagramChannel.joinGroup(multicastAddress, networkInterface, source)</code> with the same network interface set on the channel options.</p>\n<p dir=\"auto\">The code would look like</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        try {\n            return joinGroup(\n                    multicastAddress,\n                    config().getNetworkInterface(),\n                    null, promise);\n        } catch (SocketException e) {\n            promise.setFailure(e);\n        }\n        return promise;\"><pre class=\"notranslate\">        <span class=\"pl-k\">try</span> {\n            <span class=\"pl-k\">return</span> <span class=\"pl-en\">joinGroup</span>(\n                    <span class=\"pl-s1\">multicastAddress</span>,\n                    <span class=\"pl-en\">config</span>().<span class=\"pl-en\">getNetworkInterface</span>(),\n                    <span class=\"pl-c1\">null</span>, <span class=\"pl-s1\">promise</span>);\n        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">SocketException</span> <span class=\"pl-s1\">e</span>) {\n            <span class=\"pl-s1\">promise</span>.<span class=\"pl-en\">setFailure</span>(<span class=\"pl-s1\">e</span>);\n        }\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">promise</span>;</pre></div>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">DatagramChannel#joinGroup(multicastAddress)</code> calls <code class=\"notranslate\">DatagramChannel.joinGroup(multicastAddress, networkInterface, source)</code> with <code class=\"notranslate\">NetworkInterface.getByInetAddress(localAddress().getAddress())</code> that sometimes returns the <code class=\"notranslate\">null</code> reference.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Obvious</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Obvious</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">Most</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/11541",
                "createdAt": "2021-08-03T17:09:04Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix QueryStringEncoder encodes tilde",
        "url": "https://github.com/netty/netty/pull/11590",
        "resourcePath": "/netty/netty/pull/11590",
        "createdAt": "2021-08-18T01:29:36Z",
        "number": 11590,
        "mergeCommit": {
          "oid": "88fcb5124b6d2fbe117e5cad66a4b50ab46c4a7a",
          "message": "Fix QueryStringEncoder encodes tilde (#11590)\n\nMotivation:\r\n\r\nIn this issue(#11578 ) discussed that tilde should not be encoded in QueryStringEncoder, this pr is to fix this problem\r\n\r\nModification:\r\n\r\nModified QueryStringEncoder so that it does not encode tilde, and added a test case\r\n\r\nResult:\r\n\r\nFixes #11578",
          "commitUrl": "https://github.com/netty/netty/commit/88fcb5124b6d2fbe117e5cad66a4b50ab46c4a7a",
          "parents": {
            "nodes": [
              {
                "oid": "6a7cccded07a46a0a7b50ac27ff3f86eb977859f",
                "message": "Try to make the PR Reports workflow more robust (#11620)\n\nMotiviation:\r\nThe workflow from the default branch is the one that gets to run for all PRs, regardless of what branch they are targeting.\r\nThis means the 4.1 PR Reports workflow needs to tollerate master branch PRs, where there is no Java 8 builds.\r\n\r\nModification:\r\nMake the PR Reports tolerate that the Java 8 matrix fails if they are missing.\r\n\r\nResult:\r\nHopefully we'll get working PR Reports for master branch PRs now."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/QueryStringEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/QueryStringDecoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/QueryStringEncoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzE0Njc0NDUzOmZjNDE0MDQ2NDZlNjc0NTM2NWY2MjlhZTczYWYzNTM1NjViNGNiNWE=",
                "url": "https://github.com/netty/netty/pull/11590/commits/fc41404646e6745365f629ae73af353565b4cb5a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11578,
                "url": "https://github.com/netty/netty/issues/11578",
                "title": "QueryStringEncoder encodes tilde",
                "bodyHTML": "<p dir=\"auto\">As per <a href=\"https://github.com/netty/netty/blob/4.1/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringEncoder.java#L235-L249\">the comment</a> tile is unreserved and doesn't need encoded. But is encoded.</p>\n<p dir=\"auto\"><a href=\"https://datatracker.ietf.org/doc/html/rfc3986#section-2.3\" rel=\"nofollow\">RFC3986</a></p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">tilde shouldn't be escaped.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">tilde is escaped</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">var encoder = new QueryStringEncoder(\"<a href=\"https://google.com\" rel=\"nofollow\">https://google.com</a>\");<br>\nencoder.addParam(\"test\", \"a~b\");</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1</p>",
                "resourcePath": "/netty/netty/issues/11578",
                "createdAt": "2021-08-16T01:23:12Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix IndexOutOfBoundsException caused by consuming the buffer multiple\u2026",
        "url": "https://github.com/netty/netty/pull/11592",
        "resourcePath": "/netty/netty/pull/11592",
        "createdAt": "2021-08-18T07:31:24Z",
        "number": 11592,
        "mergeCommit": {
          "oid": "b82cb34c6421ebd5a52a6a609c8f495e45388afc",
          "message": "Fix IndexOutOfBoundsException caused by consuming the buffer multiple times in DatagramDnsQueryDecoder (#11592)\n\nMotivation:\r\n\r\nccef8feedd726743d0355b34799e4915536d72ab introduced some changes to share code but did introduce a regression when decoding queries.\r\n\r\nModifications:\r\n\r\n- Correctly only decode one time.\r\n- Adjust unit test\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11591",
          "commitUrl": "https://github.com/netty/netty/commit/b82cb34c6421ebd5a52a6a609c8f495e45388afc",
          "parents": {
            "nodes": [
              {
                "oid": "228a01e268c478bf5bb3717aa11ad37728ac4276",
                "message": "Use StandardSocketOptions#IP_MULTICAST_IF as default source when joing multicast groups (#11585)\n\nMotivation:\r\n\r\nWe should use StandardSocketOptions#IP_MULTICAST_IF as default source when joing multicast groups and only try to use the localAddress if this returns null.\r\n\r\nModifications:\r\n\r\nFirst check if StandardSocketOptions#IP_MULTICAST_IF was set and if so use the network interface when joining mulicast groups\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11541"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-dns/src/main/java/io/netty/handler/codec/dns/DatagramDnsQueryDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-dns/src/test/java/io/netty/handler/codec/dns/DnsQueryTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzE0ODIwNjI0OjMxMjI5OTExZTkyNmI5ZWNiZmE5ZDRjYjYxMWE5NDdlNDVkZjNjMzQ=",
                "url": "https://github.com/netty/netty/pull/11592/commits/31229911e926b9ecbfa9d4cb611a947e45df3c34"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11591,
                "url": "https://github.com/netty/netty/issues/11591",
                "title": "`DatagramDnsQueryDecoder.newQuery()` raises `IndexOutOfBoundsException`",
                "bodyHTML": "<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">I tried to upgrade Netty 4.1.66 to 4.1.67, but our CI tests produced the following error when resolving a DNS query.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"io.netty.handler.codec.DecoderException: java.lang.IndexOutOfBoundsException: readerIndex(36) + length(2) exceeds writerIndex(36): PooledUnsafeDirectByteBuf(ridx: 36, widx: 36, cap: 2048)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:98)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n\tat io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.base/java.lang.Thread.run(Thread.java:831)\nCaused by: java.lang.IndexOutOfBoundsException: readerIndex(36) + length(2) exceeds writerIndex(36): PooledUnsafeDirectByteBuf(ridx: 36, widx: 36, cap: 2048)\n\tat io.netty.buffer.AbstractByteBuf.checkReadableBytes0(AbstractByteBuf.java:1442)\n\tat io.netty.buffer.AbstractByteBuf.readShort(AbstractByteBuf.java:749)\n\tat io.netty.buffer.AbstractByteBuf.readUnsignedShort(AbstractByteBuf.java:765)\n\tat io.netty.handler.codec.dns.DatagramDnsQueryDecoder.newQuery(DatagramDnsQueryDecoder.java:87)\n\tat io.netty.handler.codec.dns.DatagramDnsQueryDecoder.decode(DatagramDnsQueryDecoder.java:64)\n\tat io.netty.handler.codec.dns.DatagramDnsQueryDecoder.decode(DatagramDnsQueryDecoder.java:33)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)\n\t... 16 common frames omitted\"><pre class=\"notranslate\"><span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">handler</span>.<span class=\"pl-smi\">codec</span>.<span class=\"pl-smi\">DecoderException</span>: <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">lang</span>.<span class=\"pl-s1\">IndexOutOfBoundsException</span>: <span class=\"pl-s1\">readerIndex</span>(<span class=\"pl-c1\">36</span>) + <span class=\"pl-en\">length</span>(<span class=\"pl-c1\">2</span>) <span class=\"pl-s1\">exceeds</span> <span class=\"pl-en\">writerIndex</span>(<span class=\"pl-c1\">36</span>): <span class=\"pl-en\">PooledUnsafeDirectByteBuf</span>(<span class=\"pl-s1\">ridx</span>: <span class=\"pl-c1\">36</span>, <span class=\"pl-s1\">widx</span>: <span class=\"pl-c1\">36</span>, <span class=\"pl-s1\">cap</span>: <span class=\"pl-c1\">2048</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">MessageToMessageDecoder</span>.<span class=\"pl-en\">channelRead</span>(<span class=\"pl-smi\">MessageToMessageDecoder</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">98</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">invokeChannelRead</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">379</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">invokeChannelRead</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">365</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">fireChannelRead</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">357</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultChannelPipeline$HeadContext</span>.<span class=\"pl-en\">channelRead</span>(<span class=\"pl-smi\">DefaultChannelPipeline</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1410</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">invokeChannelRead</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">379</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">AbstractChannelHandlerContext</span>.<span class=\"pl-en\">invokeChannelRead</span>(<span class=\"pl-smi\">AbstractChannelHandlerContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">365</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">DefaultChannelPipeline</span>.<span class=\"pl-en\">fireChannelRead</span>(<span class=\"pl-smi\">DefaultChannelPipeline</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">919</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">AbstractNioMessageChannel$NioMessageUnsafe</span>.<span class=\"pl-en\">read</span>(<span class=\"pl-smi\">AbstractNioMessageChannel</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">97</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">NioEventLoop</span>.<span class=\"pl-en\">processSelectedKey</span>(<span class=\"pl-smi\">NioEventLoop</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">719</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">NioEventLoop</span>.<span class=\"pl-en\">processSelectedKeysOptimized</span>(<span class=\"pl-smi\">NioEventLoop</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">655</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">NioEventLoop</span>.<span class=\"pl-en\">processSelectedKeys</span>(<span class=\"pl-smi\">NioEventLoop</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">581</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">NioEventLoop</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">NioEventLoop</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">493</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">concurrent</span>.<span class=\"pl-s1\">SingleThreadEventExecutor$4</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">SingleThreadEventExecutor</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">986</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">internal</span>.<span class=\"pl-s1\">ThreadExecutorMap$2</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">ThreadExecutorMap</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">74</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">concurrent</span>.<span class=\"pl-s1\">FastThreadLocalRunnable</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">FastThreadLocalRunnable</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">30</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">base</span>/<span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">lang</span>.<span class=\"pl-s1\">Thread</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">Thread</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">831</span>)\n<span class=\"pl-smi\">Caused</span> <span class=\"pl-s1\">by</span>: <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">lang</span>.<span class=\"pl-s1\">IndexOutOfBoundsException</span>: <span class=\"pl-s1\">readerIndex</span>(<span class=\"pl-c1\">36</span>) + <span class=\"pl-en\">length</span>(<span class=\"pl-c1\">2</span>) <span class=\"pl-s1\">exceeds</span> <span class=\"pl-en\">writerIndex</span>(<span class=\"pl-c1\">36</span>): <span class=\"pl-en\">PooledUnsafeDirectByteBuf</span>(<span class=\"pl-s1\">ridx</span>: <span class=\"pl-c1\">36</span>, <span class=\"pl-s1\">widx</span>: <span class=\"pl-c1\">36</span>, <span class=\"pl-s1\">cap</span>: <span class=\"pl-c1\">2048</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">buffer</span>.<span class=\"pl-s1\">AbstractByteBuf</span>.<span class=\"pl-en\">checkReadableBytes0</span>(<span class=\"pl-smi\">AbstractByteBuf</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">1442</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">buffer</span>.<span class=\"pl-s1\">AbstractByteBuf</span>.<span class=\"pl-en\">readShort</span>(<span class=\"pl-smi\">AbstractByteBuf</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">749</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">buffer</span>.<span class=\"pl-s1\">AbstractByteBuf</span>.<span class=\"pl-en\">readUnsignedShort</span>(<span class=\"pl-smi\">AbstractByteBuf</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">765</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">dns</span>.<span class=\"pl-s1\">DatagramDnsQueryDecoder</span>.<span class=\"pl-en\">newQuery</span>(<span class=\"pl-smi\">DatagramDnsQueryDecoder</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">87</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">dns</span>.<span class=\"pl-s1\">DatagramDnsQueryDecoder</span>.<span class=\"pl-en\">decode</span>(<span class=\"pl-smi\">DatagramDnsQueryDecoder</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">64</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">dns</span>.<span class=\"pl-s1\">DatagramDnsQueryDecoder</span>.<span class=\"pl-en\">decode</span>(<span class=\"pl-smi\">DatagramDnsQueryDecoder</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">33</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">MessageToMessageDecoder</span>.<span class=\"pl-en\">channelRead</span>(<span class=\"pl-smi\">MessageToMessageDecoder</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">88</span>)\n\t... <span class=\"pl-c1\">16</span> <span class=\"pl-s1\">common</span> <span class=\"pl-smi\">frames</span> <span class=\"pl-s1\">omitted</span></pre></div>\n<p dir=\"auto\">When <code class=\"notranslate\">DatagramDnsQueryDecoder.newQuery(packet, but)</code> was called, the <code class=\"notranslate\">buf</code> had been already fully consumed by <code class=\"notranslate\">DnsMessageUtil.decodeDnsQuery()</code>.<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/794c45fd590ffc51b16bb4b8af87556c0d2025fb/codec-dns/src/main/java/io/netty/handler/codec/dns/DatagramDnsQueryDecoder.java#L57-L64\">netty/codec-dns/src/main/java/io/netty/handler/codec/dns/DatagramDnsQueryDecoder.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 57 to 64\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/794c45fd590ffc51b16bb4b8af87556c0d2025fb\">794c45f</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L57\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"57\"></td>\n          <td id=\"LC57\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-smi\">DnsMessageUtil</span>.<span class=\"pl-en\">decodeDnsQuery</span>(<span class=\"pl-s1\">recordDecoder</span>, <span class=\"pl-s1\">buf</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DnsMessageUtil</span>.<span class=\"pl-smi\">DnsQueryFactory</span>() { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L58\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"58\"></td>\n          <td id=\"LC58\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L59\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"59\"></td>\n          <td id=\"LC59\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">public</span> <span class=\"pl-smi\">DnsQuery</span> <span class=\"pl-en\">newQuery</span>(<span class=\"pl-smi\">int</span> <span class=\"pl-s1\">id</span>, <span class=\"pl-smi\">DnsOpCode</span> <span class=\"pl-s1\">dnsOpCode</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L60\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"60\"></td>\n          <td id=\"LC60\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DatagramDnsQuery</span>(<span class=\"pl-s1\">packet</span>.<span class=\"pl-en\">sender</span>(), <span class=\"pl-s1\">packet</span>.<span class=\"pl-en\">recipient</span>(), <span class=\"pl-s1\">id</span>, <span class=\"pl-s1\">dnsOpCode</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L61\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"61\"></td>\n          <td id=\"LC61\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L62\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"62\"></td>\n          <td id=\"LC62\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> }); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L63\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"63\"></td>\n          <td id=\"LC63\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L64\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"64\"></td>\n          <td id=\"LC64\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">DnsQuery</span> <span class=\"pl-s1\">query</span> = <span class=\"pl-en\">newQuery</span>(<span class=\"pl-s1\">packet</span>, <span class=\"pl-s1\">buf</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">I guess the problem is caused by the changes in <a href=\"https://github.com/netty/netty/pull/11415/files#diff-41d08a26f08dcb6f92085ad9bb565c833bbe0e0d425e0fe7147fcc51b56d164aR64\">https://github.com/netty/netty/pull/11415/files#diff-41d08a26f08dcb6f92085ad9bb565c833bbe0e0d425e0fe7147fcc51b56d164aR64</a></p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\"><a href=\"https://github.com/line/armeria/blob/b5a2e1c264c264a4f504dfc1a5990866dea7b86f/core/src/test/java/com/linecorp/armeria/client/DnsMetricsTest.java#L67\">https://github.com/line/armeria/blob/b5a2e1c264c264a4f504dfc1a5990866dea7b86f/core/src/test/java/com/linecorp/armeria/client/DnsMetricsTest.java#L67</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.67.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">OpenJDK 64-Bit Server VM AdoptOpenJDK (build 15.0.1+9, mixed mode, sharing)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin  20.5.0 Darwin Kernel Version 20.5.0: Sat May  8 05:10:33 PDT 2021; root:xnu-7195.121.3~9/RELEASE_X86_64 x86_64</p>",
                "resourcePath": "/netty/netty/issues/11591",
                "createdAt": "2021-08-18T02:13:57Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "regression"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow server initiated renegotiate when using OpenSSL / BoringSSL bas\u2026",
        "url": "https://github.com/netty/netty/pull/11601",
        "resourcePath": "/netty/netty/pull/11601",
        "createdAt": "2021-08-19T11:55:24Z",
        "number": 11601,
        "mergeCommit": {
          "oid": "33b63c325ff6b6bfd8e1a4b8aaf3f4c8c3462bd6",
          "message": "Allow server initiated renegotiate when using OpenSSL / BoringSSL based SSLEngine (#11601)\n\n\r\nMotivation:\r\n\r\nWe should allow server initiated renegotiation when OpenSSL / BoringSSL bases SSLEngine is used as it might be used for client auth.\r\n\r\nModifications:\r\n\r\n- Upgrade netty-tcnative version to be able to allow renegotiate once\r\n- Adjust code\r\n\r\nResult\r\nFixes https://github.com/netty/netty/issues/11529",
          "commitUrl": "https://github.com/netty/netty/commit/33b63c325ff6b6bfd8e1a4b8aaf3f4c8c3462bd6",
          "parents": {
            "nodes": [
              {
                "oid": "36eb399b4b7451e0fbfbbf87a6300ecce33257d3",
                "message": "Always release the sslEngine inside SslHandler's handlerRemoved0 (#11605)\n\n\r\nMotivation:\r\nMake SslHandler's handlerRemoved0 method release the sslEngine\r\neven if it fails in the middle.\r\nSee details in https://github.com/netty/netty/issues/11595.\r\n\r\nModifications:\r\nWrap the release of sslEngine into a finally block.\r\n\r\nResult:\r\nThe sslEngine would be released eventually.\r\n\r\nCo-authored-by: Chen Liu <cliu@splunk.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzE1ODY2Mzc4OjhiYmZiNzQ5YjUyNWY4OTYxODYwNzc5MzAxMTEzZTBkNDc2Mzg5YjY=",
                "url": "https://github.com/netty/netty/pull/11601/commits/8bbfb749b525f8961860779301113e0d476389b6"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11529,
                "url": "https://github.com/netty/netty/issues/11529",
                "title": "BoringSSL + TLSv1.2 client side SSL renegociation fails",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">BoringSSL based SSLEngine should support SSL renegociation out of the box like the JDK one.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">SSLEngine and connection crashes during renegociation.</p>\n<p dir=\"auto\">This issue was originally reported against Gatling, see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"953884750\" data-permission-text=\"Title is private\" data-url=\"https://github.com/gatling/gatling/issues/4120\" data-hovercard-type=\"issue\" data-hovercard-url=\"/gatling/gatling/issues/4120/hovercard\" href=\"https://github.com/gatling/gatling/issues/4120\">gatling/gatling#4120</a> for more details.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">See pure Netty reproducer below.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\"><a href=\"https://github.com/slandelle/netty-ssl-renegociation\">https://github.com/slandelle/netty-ssl-renegociation</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.66.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"1.8.0_292\"<br>\nOpenJDK Runtime Environment (AdoptOpenJDK)(build 1.8.0_292-b10)<br>\nOpenJDK 64-Bit Server VM (AdoptOpenJDK)(build 25.292-b10, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin Kernel Version 20.5.0: Sat May  8 05:10:33 PDT 2021; root:xnu-7195.121.3~9/RELEASE_X86_64 x86_64</p>",
                "resourcePath": "/netty/netty/issues/11529",
                "createdAt": "2021-07-29T15:57:08Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Only suppert TLSv1.3 when JDK does support it as well",
        "url": "https://github.com/netty/netty/pull/11604",
        "resourcePath": "/netty/netty/pull/11604",
        "createdAt": "2021-08-19T20:02:49Z",
        "number": 11604,
        "mergeCommit": {
          "oid": "fd475546693f0218f295d3d198c83e1cd5a90895",
          "message": "Only suppert TLSv1.3 when JDK does support it as well (#11604)\n\nMotivation:\r\n\r\nWe tightly integrate the TrustManger and KeyManager into our native SSL implementation which means that both of them need to support TLSv1.3 as protocol. This is not always the case and so can produce runtime exceptions.\r\n\r\nAs TLSv1.3 support was backported to Java8 quite some time now we should be a bit more conservative and only enable TLSv1.3 for our native implementation if the JDK implementation supports it as well. This also allows us to remove some hacks we had in place to be able to support it before in Java8.\r\n\r\nModifications:\r\n\r\n- Only enable TLSv1.3 support for our native SSL implementation when the JDK supports it as well\r\n- Remove OpenSslTlsv13X509ExtendedTrustManager as its not needed anymore\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11589",
          "commitUrl": "https://github.com/netty/netty/commit/fd475546693f0218f295d3d198c83e1cd5a90895",
          "parents": {
            "nodes": [
              {
                "oid": "22a188c8ccda28669978b7eae9fc82a1938b6480",
                "message": "Call OpenSsl.ensureAvailability() before trying to construct OpenSsl*Context (#11602)\n\nMotivation:\r\n\r\nAt the moment why you try to build a SslContext via SslProvider.OPENSSL* and netty-tcnative* is not on the classpath it will fail with:\r\n\r\n```\r\nException in thread \"main\" java.lang.NoClassDefFoundError: io/netty/internal/tcnative/SSLPrivateKeyMethod\r\n\tat io.netty.handler.ssl.SslContext.newClientContextInternal(SslContext.java:830)\r\n\tat io.netty.handler.ssl.SslContextBuilder.build(SslContextBuilder.java:611)\r\n\tat io.netty.handler.codec.http.Main.main(Main.java:34)\r\nCaused by: java.lang.ClassNotFoundException: io.netty.internal.tcnative.SSLPrivateKeyMethod\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\r\n\t... 3 more\r\n```\r\n\r\nWe should do better here.\r\n\r\nModifications:\r\n\r\nCall `OpenSsl.ensureAvailability()` before trying to construct OpenSsl*Context instances\r\n\r\nResult:\r\n\r\nMore clear error message like:\r\n\r\n```\r\njava.lang.UnsatisfiedLinkError: failed to load the required native library\r\n\r\n\tat io.netty.handler.ssl.OpenSsl.ensureAvailability(OpenSsl.java:540)\r\n\tat io.netty.handler.ssl.SslContext.newClientContextInternal(SslContext.java:830)\r\n\tat io.netty.handler.ssl.SslContextBuilder.build(SslContextBuilder.java:611)\r\n        ...\r\nCaused by: java.lang.ClassNotFoundException: io.netty.internal.tcnative.SSLContext\r\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:581)\r\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:522)\r\n\tat java.base/java.lang.Class.forName0(Native Method)\r\n\tat java.base/java.lang.Class.forName(Class.java:398)\r\n\tat io.netty.handler.ssl.OpenSsl.<clinit>(OpenSsl.java:126)\r\n\t... 68 more\r\n```"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/OpenSsl.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "handler/src/main/java/io/netty/handler/ssl/OpenSslTlsv13X509ExtendedTrustManager.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslClientContext.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslServerContext.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzE2MjIyNTkzOjVhOGVjMDk5NTQxZTFjMDg4MjEyZTY1ZDNjOTE1ODVkN2RkZGZkNzY=",
                "url": "https://github.com/netty/netty/pull/11604/commits/5a8ec099541e1c088212e65d3c91585d7dddfd76"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11589,
                "url": "https://github.com/netty/netty/issues/11589",
                "title": "Netty tries to use TLSv1.3 on WebSphere where it is not supported",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">On IBM WebSphere with Java 8 with no TLS 1.3 support, Netty should connect using TLS 1.2.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Netty tries to connect using TLS 1.3 and dies with <em>java.lang.IllegalArgumentException: TLSv1.3</em> (with client certificates used).</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">We are using pushy (0.14.2) which connects to APNS\u2019s API (authorized using a client certificate) using netty. When the code is run on IBM WebSphere server, the push messages are not sent, as the sending dies with:</p>\n<details>\n  <summary>Exception call stack</summary>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: io.netty.handler.codec.DecoderException: java.lang.IllegalArgumentException: TLSv1.3\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:478)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.handler.proxy.ProxyHandler.channelRead(ProxyHandler.java:253)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)\n\tat io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper.channelRead(HttpProxyHandler.java:272)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.lang.Thread.run(Thread.java:818)\nCaused by: java.lang.IllegalArgumentException: TLSv1.3\n\tat com.ibm.jsse2.U.a(U.java:56)\n\tat com.ibm.jsse2.az.a(az.java:201)\n\tat com.ibm.jsse2.az.chooseEngineClientAlias(az.java:109)\n\tat io.netty.handler.ssl.OpenSslKeyMaterialManager.chooseClientAlias(OpenSslKeyMaterialManager.java:126)\n\tat io.netty.handler.ssl.OpenSslKeyMaterialManager.setKeyMaterialClientSide(OpenSslKeyMaterialManager.java:95)\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback.handle(ReferenceCountedOpenSslClientContext.java:266)\n\tat io.netty.internal.tcnative.SSL.readFromSSL(Native Method)\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.readPlaintextData(ReferenceCountedOpenSslEngine.java:634)\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1258)\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1384)\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1427)\n\tat io.netty.handler.ssl.SslHandler$SslEngineType$1.unwrap(SslHandler.java:208)\n\tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1395)\n\tat io.netty.handler.ssl.SslHandler.decodeNonJdkCompatible(SslHandler.java:1302)\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1339)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:508)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:447)\n\t... 27 common frames omitted\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: io.netty.handler.codec.DecoderException: java.lang.IllegalArgumentException: TLSv1.3\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:478)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.handler.proxy.ProxyHandler.channelRead(ProxyHandler.java:253)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)\n\tat io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper.channelRead(HttpProxyHandler.java:272)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.lang.Thread.run(Thread.java:818)\nCaused by: java.lang.IllegalArgumentException: TLSv1.3\n\tat com.ibm.jsse2.U.a(U.java:56)\n\tat com.ibm.jsse2.az.a(az.java:201)\n\tat com.ibm.jsse2.az.chooseEngineClientAlias(az.java:109)\n\tat io.netty.handler.ssl.OpenSslKeyMaterialManager.chooseClientAlias(OpenSslKeyMaterialManager.java:126)\n\tat io.netty.handler.ssl.OpenSslKeyMaterialManager.setKeyMaterialClientSide(OpenSslKeyMaterialManager.java:95)\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback.handle(ReferenceCountedOpenSslClientContext.java:266)\n\tat io.netty.internal.tcnative.SSL.readFromSSL(Native Method)\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.readPlaintextData(ReferenceCountedOpenSslEngine.java:634)\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1258)\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1384)\n\tat io.netty.handler.ssl.ReferenceCountedOpenSslEngine.unwrap(ReferenceCountedOpenSslEngine.java:1427)\n\tat io.netty.handler.ssl.SslHandler$SslEngineType$1.unwrap(SslHandler.java:208)\n\tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1395)\n\tat io.netty.handler.ssl.SslHandler.decodeNonJdkCompatible(SslHandler.java:1302)\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1339)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:508)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:447)\n\t... 27 common frames omitted\n</code></pre></div>\n</details>\n<p dir=\"auto\">The problem seems to be that Netty tries to detect whether TLS 1.3 is supported, or not. However, for the <code class=\"notranslate\">OPENSSL_REFCNT</code> provider, TLS 1.3 is supported (provided by the native binary), but still it does not work, because the problem is not in the OpenSSL code (which would probably work fine with TLS 1.3) but in the <code class=\"notranslate\">X509ExtendedKeyManager.chooseEngineClientAlias</code> which calls to the implementation of the <code class=\"notranslate\">X509ExtendedKeyManager</code> provided by the built-in IBMJSSEProvider2 security provider. Apparently, this provider determines the protocol of the <code class=\"notranslate\">getHandshakeSession</code> of the <code class=\"notranslate\">SSLEngine</code> and dies as soon as it finds out the protocol is <code class=\"notranslate\">TLSv1.3</code> which is unknown to him. (Even if the used keystore contains a single alias, so there is nothing to choose from\u2026)</p>\n<p dir=\"auto\">So, basically, <code class=\"notranslate\">OPENSSL_REFCNT</code> should not claim that <code class=\"notranslate\">isTlsv13Supported=true</code> if it defers part of its job to the built-in implementation of <code class=\"notranslate\">X509KeyManager</code> which does not support TLS 1.3 connections.</p>\n<p dir=\"auto\">Right now, we are not sure how we\u2019ll work around the problem. I think we\u2019ll either downgrade Netty, or fork/patch it with a TLS13-hard-disable flag (because IIANM there is no way to force Netty from the outside (e.g. by a JVM system property) not to use TLS 1.3).</p>\n<p dir=\"auto\">See also <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"836151655\" data-permission-text=\"Title is private\" data-url=\"https://github.com/jchambers/pushy/issues/864\" data-hovercard-type=\"issue\" data-hovercard-url=\"/jchambers/pushy/issues/864/hovercard\" href=\"https://github.com/jchambers/pushy/issues/864\">jchambers/pushy#864</a></p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">I\u2019m afraid I\u2019m not able to provide a complete reproducer code, as it involves sending push messages with pushy. Basically, pushy seems to create the context using</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"final SslContextBuilder sslContextBuilder = SslContextBuilder.forClient()\n        .sslProvider(SslProvider.OPENSSL_REFCNT)\n        .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE);\nsslContextBuilder.keyManager(this.privateKey, this.privateKeyPassword, this.clientCertificate);\nsslContext = sslContextBuilder.build();\"><pre class=\"notranslate\"><code class=\"notranslate\">final SslContextBuilder sslContextBuilder = SslContextBuilder.forClient()\n        .sslProvider(SslProvider.OPENSSL_REFCNT)\n        .ciphers(Http2SecurityUtil.CIPHERS, SupportedCipherSuiteFilter.INSTANCE);\nsslContextBuilder.keyManager(this.privateKey, this.privateKeyPassword, this.clientCertificate);\nsslContext = sslContextBuilder.build();\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.61.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">1.8.0_261, Java Runtime Version = 8.0.6.16 - pxa6480sr6fp16-20200902_01(SR6 FP16), Java Compiler = j9jit29, Java VM name = IBM J9 VM</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Ubuntu 18.04.5 LTS</p>",
                "resourcePath": "/netty/netty/issues/11589",
                "createdAt": "2021-08-17T15:57:59Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add a `Futures` class with static `map()` and `flatMap()` methods",
        "url": "https://github.com/netty/netty/pull/11607",
        "resourcePath": "/netty/netty/pull/11607",
        "createdAt": "2021-08-20T14:18:44Z",
        "number": 11607,
        "mergeCommit": {
          "oid": "445f747ce3b2a31f1233144e0315a2f318694731",
          "message": "Add a `Futures` class with static `map()` and `flatMap()` methods (#11607)\n\nMotivation:\r\nMaking futures easier to compose, combine, and extend is useful to have as part of the API, since implementing this correctly and efficiently can be tricky.\r\n\r\nModification:\r\nAdd `Future.map(Function<V,R>) -> Future<R>` and `Future.flatMap(Function<V,Future<R>>) -> Future<R>` default methods to the `Future` interface.\r\nThese methods return new Future instance, that will be completed when the original future completes, and the result will be processed through the given mapping function.\r\nThese two methods take care to propagate cancellation and exceptions correctly:\r\nCancellation propagates both ways between the new and original future.\r\nFailures only propagate from the original future to the returned new Future instance.\r\n\r\nResult:\r\nA few convenient methods for modifying and composing futures.\r\n\r\nThis PR fixes #8523, and perhaps also #2105",
          "commitUrl": "https://github.com/netty/netty/commit/445f747ce3b2a31f1233144e0315a2f318694731",
          "parents": {
            "nodes": [
              {
                "oid": "584a275a7b6181d5afc59e262bffeae67aa112b2",
                "message": "Try to make the PR Reports workflow more robust (#11620)\n\nMotiviation:\nThe workflow from the default branch is the one that gets to run for all PRs, regardless of what branch they are targeting.\nThis means the 4.1 PR Reports workflow needs to tollerate master branch PRs, where there is no Java 8 builds.\n\nModification:\nMake the PR Reports tolerate that the Java 8 matrix fails if they are missing.\n\nResult:\nHopefully we'll get working PR Reports for master branch PRs now."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/concurrent/Future.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "common/src/main/java/io/netty/util/concurrent/Futures.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/PromiseNotificationUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/concurrent/DefaultPromiseTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "common/src/test/java/io/netty/util/concurrent/FuturesTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "common/src/test/java/io/netty/util/concurrent/TestEventExecutor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/bootstrap/BootstrapTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzE2Nzc0OTk0OmRhYTBmYTIwYjgyY2VlOTBlMzkwZTRjN2I2MDM0NDYxOGZlODRlODE=",
                "url": "https://github.com/netty/netty/pull/11607/commits/daa0fa20b82cee90e390e4c7b60344618fe84e81"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2105,
                "url": "https://github.com/netty/netty/issues/2105",
                "title": "Feature request: monadic interface and CompletableFuture compatibility of Future type",
                "bodyHTML": "<p dir=\"auto\">As discussed in the <a href=\"https://groups.google.com/forum/#!topic/netty/nGVHj6iUJXA\" rel=\"nofollow\">groups post</a>, monadic interfaces of future type will make it easier to compose asynchronous operations.</p>\n<p dir=\"auto\"><a href=\"http://en.wikipedia.org/wiki/Monad_%28functional_programming%29\" rel=\"nofollow\">Monad</a> is a concept in functional programming, which can be roughly understood as a generic type that adds a behavior on an existing type and supports transformation methods like <code class=\"notranslate\">map</code>, <code class=\"notranslate\">flatMap</code>, etc. (disclaimer: not at all a precise definition).</p>\n<p dir=\"auto\">When Future type is monadic, those methods allow us to combine Futures to build more complex asynchronous operations. <a href=\"http://www.scala-lang.org/files/archive/nightly/docs/library/index.html#scala.concurrent.Future\" rel=\"nofollow\">Scala Future</a> is an example of a monadic interface. JDK8's <a href=\"http://download.java.net/jdk8/docs/api/java/util/concurrent/CompletableFuture.html\" rel=\"nofollow\">CompletableFuture</a> has similar methods (<a href=\"http://download.java.net/jdk8/docs/api/java/util/concurrent/CompletableFuture.html#thenApply-java.util.function.Function-\" rel=\"nofollow\">thenApply</a> \u2248 map(), <a href=\"http://download.java.net/jdk8/docs/api/java/util/concurrent/CompletableFuture.html#thenCompose-java.util.function.Function-\" rel=\"nofollow\">thenCompose</a> \u2248 flatMap(), etc.)</p>\n<p dir=\"auto\">So it is desirable for Netty Future to have various composing functionality like the above examples. Some tricks might be needed since Netty 5 will still be JDK6 compatible but it'd be nice to make Netty Future compatible with JDK8 CompletableFuture or <a href=\"http://download.java.net/jdk8/docs/api/java/util/concurrent/CompletionStage.html\" rel=\"nofollow\">CompletionStage</a></p>\n<h2 dir=\"auto\"></h2>\n<p dir=\"auto\">As a possible next step, Monadic interfaces for collection types such as ChannelGroup will provide more convenient facilities for use with asynchronous operations. For example, using <a href=\"https://github.com/Netflix/RxJava\">RxJava</a>'s <a href=\"https://github.com/Netflix/RxJava/wiki/Observable\">Observable</a> API,</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"channels.flatMap(Channel::close)\n    .doOnNext(done -&gt; logger.info(&quot;just closed a channel&quot;))\n    .subscribe( ... )\"><pre class=\"notranslate\"><code class=\"notranslate\">channels.flatMap(Channel::close)\n    .doOnNext(done -&gt; logger.info(\"just closed a channel\"))\n    .subscribe( ... )\n</code></pre></div>\n<p dir=\"auto\">will close all channels in a ChannelGroup while logging each time when a channel is closed.</p>\n<p dir=\"auto\">For this we also need a \"collection of futures\" monad type. This might complicate the <code class=\"notranslate\">util.concurrent</code> package but it will make various combination/filtering/transforming scenarios possible as seen in <a href=\"https://github.com/Netflix/RxJava/wiki/Alphabetical-List-of-Observable-Operators\">RxJava Observable</a>.</p>",
                "resourcePath": "/netty/netty/issues/2105",
                "createdAt": "2014-01-09T16:16:56Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "feature"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 8523,
                "url": "https://github.com/netty/netty/issues/8523",
                "title": "[Netty 5] More composable Future API ",
                "bodyHTML": "<p dir=\"auto\">Netty\u2019s <code class=\"notranslate\">Future</code> API has an <code class=\"notranslate\">addListener</code> method which is the primary means of asynchronous notification. However this API is not composable and can lead to manually moving/aggregating/manipulating data. For example providing a <code class=\"notranslate\">map</code> API to transform data from one type to another, and also methods like <code class=\"notranslate\">onSuccess</code> and <code class=\"notranslate\">onFailure</code> which allows <code class=\"notranslate\">Future</code>s to be chained and results to be modified along the way.</p>\n<p dir=\"auto\">We need to investigate case by case. That said if we provide \u201cconverter\u201d methods to obtain a <code class=\"notranslate\">CompletionStage</code> from <code class=\"notranslate\">Future</code> we may be able to use let people use this and keep our <code class=\"notranslate\">Future</code> implementation lightweight.</p>",
                "resourcePath": "/netty/netty/issues/8523",
                "createdAt": "2018-11-13T13:45:35Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add version for netty-tcnative* to bom",
        "url": "https://github.com/netty/netty/pull/11609",
        "resourcePath": "/netty/netty/pull/11609",
        "createdAt": "2021-08-23T13:34:06Z",
        "number": 11609,
        "mergeCommit": {
          "oid": "5e7eb3748daaf68a85616bad283489a59b44c4b7",
          "message": "Add version for netty-tcnative* to bom (#11609)\n\nMotivation:\r\n\r\nKeeping the version of netty-tcnative correct can sometimes be hard.\r\n\r\nModifications:\r\n\r\nAdd entries for netty-tcnative* to the bom\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11567",
          "commitUrl": "https://github.com/netty/netty/commit/5e7eb3748daaf68a85616bad283489a59b44c4b7",
          "parents": {
            "nodes": [
              {
                "oid": "2110755af09b66398fefa8ccfb2ad755fa3d50cc",
                "message": "SimpleChannelPool::notifyConnect should tryFailure when an exception occurs (#11566)\n\nMotivation:\r\n\r\nDuring the channelAcquired handler invocation if an exception occurred the application will hang\r\n\r\nModifications:\r\n\r\nCall tryFailure of the promise if an exception occurred\r\n\r\nResult:\r\n\r\nAfter this change, the promise will fail and the system won't hang.\r\n\r\nCo-authored-by: NiteshKant <nitesh_kant@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "bom/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzE3ODQzOTg1OjI3NzE0ZTdhMjA5N2ZmNmUzZmEwMGFhYjllZDlhNGNkMzZjYTg4ZGM=",
                "url": "https://github.com/netty/netty/pull/11609/commits/27714e7a2097ff6e3fa00aab9ed9a4cd36ca88dc"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11567,
                "url": "https://github.com/netty/netty/issues/11567",
                "title": "Module compatibility",
                "bodyHTML": "<p dir=\"auto\">Netty 4.1.66 introduced a requirement on tc-native 2.0.40 with this commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/netty/netty/commit/40fb6026efd2a9fc67049b437e4db5d6d81d688c/hovercard\" href=\"https://github.com/netty/netty/commit/40fb6026efd2a9fc67049b437e4db5d6d81d688c\"><tt>40fb602</tt></a></p>\n<p dir=\"auto\">This led to a user being confronted with an error after upgrading Micronaut (which includes 4.1.66) <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"959293072\" data-permission-text=\"Title is private\" data-url=\"https://github.com/micronaut-projects/micronaut-core/issues/5920\" data-hovercard-type=\"issue\" data-hovercard-url=\"/micronaut-projects/micronaut-core/issues/5920/hovercard\" href=\"https://github.com/micronaut-projects/micronaut-core/issues/5920\">micronaut-projects/micronaut-core#5920</a></p>\n<p dir=\"auto\">Can we get the tc-native modules added to the netty bom so we can avoid this?</p>",
                "resourcePath": "/netty/netty/issues/11567",
                "createdAt": "2021-08-10T18:35:12Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Don't throw if null is given as ByteBuf when adding components.",
        "url": "https://github.com/netty/netty/pull/11613",
        "resourcePath": "/netty/netty/pull/11613",
        "createdAt": "2021-08-25T09:55:43Z",
        "number": 11613,
        "mergeCommit": {
          "oid": "6b7c58a2f971ba792483b09c10075512fefa9622",
          "message": "Don't throw if null is given as ByteBuf when adding components. (#11613)\n\nMotivation:\r\n\r\n232c669fa413a9079ee6216056b57a647143f4b6 did add some overflow protection but did not handle null elements in the array the same as before.\r\n\r\nModifications:\r\n\r\n- Break the loop if a null element was found\r\n- Add unit test\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11612",
          "commitUrl": "https://github.com/netty/netty/commit/6b7c58a2f971ba792483b09c10075512fefa9622",
          "parents": {
            "nodes": [
              {
                "oid": "60f8ed01cd540f01602ba6ff6bf83414af8ada98",
                "message": "Correctly respect array offset when check for overflow (#11614)\n\n\r\nMotivation:\r\n\r\n232c669fa413a9079ee6216056b57a647143f4b6 did add overflow protection but did miss to take the array offset into account and so could report false-positives\r\n\r\nModifications:\r\n\r\n- Correctly take offset into account when check for overflow.\r\n- Add unit tests\r\n\r\nResult:\r\n\r\nCorrectly take offset into account when overflow check is performed"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/CompositeByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzE5NDQzMTU3OjZkZjVmYmI5NzQ0OTI1OTM1NGZhMDA2MzFlZjhiZGFhYWNiNDkzYmY=",
                "url": "https://github.com/netty/netty/pull/11613/commits/6df5fbb97449259354fa00631ef8bdaaacb493bf"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11612,
                "url": "https://github.com/netty/netty/issues/11612",
                "title": "NPE in CompositeByteBuf.addComponents0",
                "bodyHTML": "<p dir=\"auto\">Hi team,</p>\n<p dir=\"auto\">In scope of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"601958444\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/10194\" data-hovercard-type=\"issue\" data-hovercard-url=\"/netty/netty/issues/10194/hovercard\" href=\"https://github.com/netty/netty/issues/10194\">#10194</a></p>\n<p dir=\"auto\">addComponents0 has been changed by adding the folowing line:<br>\n<code class=\"notranslate\">readableBytes += buffers[i].readableBytes();</code><br>\n<a class=\"commit-link\" href=\"https://github.com/netty/netty/commit/5e7fcc2d581d8c03f4f7a2bcec0a42c3ad984591#diff-226f3ca4dcaa02e4fb8a865876fb4fc448eb66f7064467e2a8b6c6721b8a7f86R373\"><tt>5e7fcc2</tt>#diff-226f3ca4dcaa02e4fb8a865876fb4fc448eb66f7064467e2a8b6c6721b8a7f86R373</a></p>\n<p dir=\"auto\">according to the next few lines:<br>\n<code class=\"notranslate\">for (ci = cIndex; arrOffset &lt; len; arrOffset++, ci++) { ByteBuf b = buffers[arrOffset]; if (b == null) { break; } ... </code><br>\ncode expects that buffers[arrOffset] could be null</p>\n<p dir=\"auto\">so the buffers[i].readableBytes(); may produce NPE</p>",
                "resourcePath": "/netty/netty/issues/11612",
                "createdAt": "2021-08-25T09:43:03Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Ensure HttpData#addContent/setContent releases the buffer before throwing IOException",
        "url": "https://github.com/netty/netty/pull/11621",
        "resourcePath": "/netty/netty/pull/11621",
        "createdAt": "2021-08-26T12:14:27Z",
        "number": 11621,
        "mergeCommit": {
          "oid": "47bababfc718eaa676212f39d547dc8aefb1683b",
          "message": "Ensure HttpData#addContent/setContent releases the buffer before throwing IOException (#11621)\n\nMotivation:\r\nWhen the ByteBuf size exceeds the max limit/defined size, IOException is thrown.\r\nHttpData#addContent/setContent should release the buffer in such cases otherwise memory leak will happen.\r\n\r\nModification:\r\n- Release the provided ByteBuf before throwing IOException\r\n- Add unit tests\r\n\r\nResult:\r\nFixes #11618",
          "commitUrl": "https://github.com/netty/netty/commit/47bababfc718eaa676212f39d547dc8aefb1683b",
          "parents": {
            "nodes": [
              {
                "oid": "d58d8a1df832a5185193368e589cb4a488709ffe",
                "message": "Remove useless imports and redundant type cast (#11639)\n\nMotivation:\r\n\r\nThere are some redundant imports and unnecessary type cast\r\n\r\nModification:\r\n\r\nRemove useless imports and unnecessary type cast\r\n\r\nResult:\r\n\r\nThe code is cleaner than original\r\n\r\nSigned-off-by: xingrufei <xingrufei@sogou-inc.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractMemoryHttpData.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/DiskAttribute.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpData.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/MemoryAttribute.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/MixedAttribute.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/MixedFileUpload.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpDataTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzIwNDYyOTc1OjM2N2M1MWE1MTQwODIxZjYyZmU4YjJjZWYxNTBiNzdhNzRlMjQ0MTk=",
                "url": "https://github.com/netty/netty/pull/11621/commits/367c51a5140821f62fe8b2cef150b77a74e24419"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11618,
                "url": "https://github.com/netty/netty/issues/11618",
                "title": "Memory leak in HttpPostMultipartRequestDecoder#loadDataMultipartOptimized",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">No memory leak</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">There is a memory leak in <code class=\"notranslate\">io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder#loadDataMultipartOptimized</code> when the size exceeds <code class=\"notranslate\">maxLimit</code>.<br>\nOr the issue might be related to <code class=\"notranslate\">io.netty.handler.codec.http.multipart.AbstractMemoryHttpData#addContent</code> when checking the size limit.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Apply the patch below and run the command</p>\n<p dir=\"auto\"><code class=\"notranslate\">mvn test -pl codec-http -Dtest=io.netty.handler.codec.http.multipart.HttpPostMultiPartRequestDecoderTest#testNotBadReleaseBuffersDuringDecodingMemoryFactory</code></p>\n<p dir=\"auto\">Then you will be able to see that when <code class=\"notranslate\">IOException: Size exceed allowed maximum capacity</code> is thrown the buffer is not released.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java\nindex a8566c0f7f..29106237cb 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java\n@@ -1187,7 +1187,8 @@ public class HttpPostMultipartRequestDecoder implements InterfaceHttpPostRequest\n                 try {\n                     httpData.addContent(content, false);\n                 } catch (IOException e) {\n-                    throw new ErrorDataDecoderException(e);\n+                    throw new ErrorDataDecoderException(&quot;ByteBuf.refCnt() &gt;&gt;&gt; &quot; + content.refCnt(), e);\n+                    //throw new ErrorDataDecoderException(e);\n                 }\n                 undecodedChunk.readerIndex(startReaderIndex);\n                 undecodedChunk.writerIndex(startReaderIndex);\ndiff --git a/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostMultiPartRequestDecoderTest.java b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostMultiPartRequestDecoderTest.java\nindex fb7e08202d..d339c422a3 100644\n--- a/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostMultiPartRequestDecoderTest.java\n+++ b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostMultiPartRequestDecoderTest.java\n@@ -311,6 +311,7 @@ public class HttpPostMultiPartRequestDecoderTest {\n         request.headers().set(&quot;content-type&quot;, &quot;multipart/form-data; boundary=861fbeab-cd20-470c-9609-d40a0f704466&quot;);\n         request.headers().set(&quot;content-length&quot;, nbItems * (prefix1.length() + prefix2.length() + 2 + bytesPerItem)\n                 + suffix.length());\n+        factory.setMaxLimit(500);\n         HttpPostMultipartRequestDecoder decoder = new HttpPostMultipartRequestDecoder(factory, request);\n         decoder.setDiscardThreshold(maxMemory);\n         for (int rank = 0; rank &lt; nbItems; rank++) {\"><pre class=\"notranslate\"><code class=\"notranslate\">diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java\nindex a8566c0f7f..29106237cb 100644\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java\n@@ -1187,7 +1187,8 @@ public class HttpPostMultipartRequestDecoder implements InterfaceHttpPostRequest\n                 try {\n                     httpData.addContent(content, false);\n                 } catch (IOException e) {\n-                    throw new ErrorDataDecoderException(e);\n+                    throw new ErrorDataDecoderException(\"ByteBuf.refCnt() &gt;&gt;&gt; \" + content.refCnt(), e);\n+                    //throw new ErrorDataDecoderException(e);\n                 }\n                 undecodedChunk.readerIndex(startReaderIndex);\n                 undecodedChunk.writerIndex(startReaderIndex);\ndiff --git a/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostMultiPartRequestDecoderTest.java b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostMultiPartRequestDecoderTest.java\nindex fb7e08202d..d339c422a3 100644\n--- a/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostMultiPartRequestDecoderTest.java\n+++ b/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostMultiPartRequestDecoderTest.java\n@@ -311,6 +311,7 @@ public class HttpPostMultiPartRequestDecoderTest {\n         request.headers().set(\"content-type\", \"multipart/form-data; boundary=861fbeab-cd20-470c-9609-d40a0f704466\");\n         request.headers().set(\"content-length\", nbItems * (prefix1.length() + prefix2.length() + 2 + bytesPerItem)\n                 + suffix.length());\n+        factory.setMaxLimit(500);\n         HttpPostMultipartRequestDecoder decoder = new HttpPostMultipartRequestDecoder(factory, request);\n         decoder.setDiscardThreshold(maxMemory);\n         for (int rank = 0; rank &lt; nbItems; rank++) {\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.68.Final-SNAPSHOT</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/11618",
                "createdAt": "2021-08-25T19:00:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Added \"RSASSA-PSS\" algorithm in allowed algorithm list.",
        "url": "https://github.com/netty/netty/pull/11626",
        "resourcePath": "/netty/netty/pull/11626",
        "createdAt": "2021-08-30T06:25:59Z",
        "number": 11626,
        "mergeCommit": {
          "oid": "7b8050ae5348d9de2a8b27590994046552cd4916",
          "message": "Added \"RSASSA-PSS\" algorithm in allowed algorithm list. (#11626)\n\nMotivation:\r\nWhile OpenSSK is provided support for the \"RSASSA-PSS\" algorithm this was still not valid from netty. Which was causing issue in validating certificates which was signed using this algorithm.\r\n\r\nModification:\r\nAdded \"RSASSA-PSS\" in LOCAL_SUPPORTED_SIGNATURE_ALGORITHMS.\r\nvalidation:\r\nValidated and tested with CA and User cert singed with RSASSA-PSS algorithm.\r\n\r\nResult:\r\nFixes #11360\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/7b8050ae5348d9de2a8b27590994046552cd4916",
          "parents": {
            "nodes": [
              {
                "oid": "95e1a218360b2b966c0d6df8f6a11ae362f055e9",
                "message": "Replace master with main branch (#11629)\n\nMotivation:\n\nWe should not use master as branch name, better to switch to main\n\nModifications:\n\nReplace master branch name with main\n\nResult:\n\nUse main as replacement for master"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/JdkConscryptSslEngineInteropTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/JdkOpenSslEngineInteroptTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/OpenSslEngineTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/OpenSslJdkSslEngineInteroptTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/SSLEngineTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/generate-certificate.sh"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/rsaValidation-user-certs.p12"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/rsaValidations-server-keystore.p12"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/rsapss-ca-cert.cert"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/rsapss-signing-ext.txt"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzIyMjAwODMyOmY5YTQ2ZTZmMGUzYzgxYTFkNGQ4OWM2OTQxNzJhN2NmYjUxMzBhYTA=",
                "url": "https://github.com/netty/netty/pull/11626/commits/f9a46e6f0e3c81a1d4d89c694172a7cfb5130aa0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11360,
                "url": "https://github.com/netty/netty/issues/11360",
                "title": "Support for \"RSASSA-PSS\" algorithm",
                "bodyHTML": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">While we are trying to validate a user certificate that is generated using the RSASSA-PSS algorithm. Netty OpenSSL engine is throwing an exception \"sun.security.validator.ValidatorException: Certificate signature algorithm disabled\"</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">As the OpenSSL is supporting this algorithm now. So in Netty also should allow this algorithm.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.65.Final<br>\nNetty-tcnative = 2.0.36.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk 11.0.10 2021-01-19 LTS<br>\nOpenJDK Runtime Environment Zulu11.45+52-SA (build 11.0.10+9-LTS)<br>\nOpenJDK 64-Bit Server VM Zulu11.45+52-SA (build 11.0.10+9-LTS, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">1-photon SMP Wed May 26 15:55:27 UTC 2021 x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/11360",
                "createdAt": "2021-06-03T05:11:21Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make Promise not extend Future",
        "url": "https://github.com/netty/netty/pull/11634",
        "resourcePath": "/netty/netty/pull/11634",
        "createdAt": "2021-08-31T08:30:42Z",
        "number": 11634,
        "mergeCommit": {
          "oid": "0cb4cc4e498afe8a44aede3f5bec10ec477a4536",
          "message": "Make Promise not extend Future (#11634)\n\nMotivation:\r\nWe wish to separate these two into clearer write/read interfaces.\r\nIn particular, we don't want to be able to add listeners to promises, because it makes it easy to add them out of order.\r\nWe can't prevent it entirely, because any promise can be freely converted to a future where listeners can be added.\r\nWe can, however, discourage this in the API.\r\n\r\nModification:\r\nThe Promise interface no longer extends the Future interface.\r\nNumerous changes to make the project compile and its tests run.\r\n\r\nResult:\r\nClearer separation of concerns in the code.",
          "commitUrl": "https://github.com/netty/netty/commit/0cb4cc4e498afe8a44aede3f5bec10ec477a4536",
          "parents": {
            "nodes": [
              {
                "oid": "23601902abb35d681be569bd06f02e13f1c31a24",
                "message": "O(1) buffer next capacity computation (#11641)\n\nMotivation:\r\n\r\nEnlarging buffers approaching 4 MiB size requires n iterations\r\n\r\nModification:\r\n\r\nUse a single instruction to compute the next buffer capacity\r\n\r\nResult:\r\n\r\nFaster/Simpler calculateNewCapacity"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/DefaultChannelHandlerContext.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/DefaultChannelPipeline.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/PendingWriteQueue.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/nio/AbstractNioChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/socket/nio/NioDatagramChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/socket/nio/NioSocketChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/channel/DefaultChannelPipelineTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/channel/PendingWriteQueueTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/channel/embedded/EmbeddedChannelTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/channel/local/LocalChannelTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzIzMTQzMzAyOmU4OTI5YTMyMmE3MmM4MzI3YWI3YzdlYTM4NWJjMWI1Mzc4ODNjYTk=",
                "url": "https://github.com/netty/netty/pull/11634/commits/e8929a322a72c8327ab7c7ea385bc1b537883ca9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 8522,
                "url": "https://github.com/netty/netty/issues/8522",
                "title": "[Netty 5]: Promise should not extend Future ",
                "bodyHTML": "<p dir=\"auto\">Netty\u2019s <code class=\"notranslate\">Promise</code> currently extends Netty\u2019s <code class=\"notranslate\">Future</code> interface. A common practice is to separate concerns between the <code class=\"notranslate\">Promise</code> (writer view) and the <code class=\"notranslate\">Future</code> (reader view). The <code class=\"notranslate\">Promise</code> can have a method which provides the <code class=\"notranslate\">Future</code> view of that <code class=\"notranslate\">Promise</code>, but doesn\u2019t necessarily have to extend <code class=\"notranslate\">Future</code>.</p>\n<p dir=\"auto\">We want to change this to match what is often done by have these separate interfaces but allow to get a <code class=\"notranslate\">Future</code> which belongs to a Promise (but not the other way around).<br>\nSomething like <code class=\"notranslate\">toFuture()</code>.</p>",
                "resourcePath": "/netty/netty/issues/8522",
                "createdAt": "2018-11-13T13:44:58Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support getting used memory from a user perspective at `PooledByteBufAllocator` level",
        "url": "https://github.com/netty/netty/pull/11642",
        "resourcePath": "/netty/netty/pull/11642",
        "createdAt": "2021-09-01T14:07:37Z",
        "number": 11642,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolArena.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PooledByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PooledByteBufAllocator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PooledByteBufAllocatorMetric.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/PooledByteBufAllocatorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzI0NTM1Njg0OmFlNDcxMjdjNjJiMjNmMGNjNjJhODIxYjJjMGQ1ZjE1ZjI3NTRmMjY=",
                "url": "https://github.com/netty/netty/pull/11642/commits/ae47127c62b23f0cc62a821b2c0d5f15f2754f26"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11637,
                "url": "https://github.com/netty/netty/issues/11637",
                "title": "Add support getting the pooled memory size for each PooledByteBufAllocator instance",
                "bodyHTML": "<h3 dir=\"auto\">Motivation</h3>\n<p dir=\"auto\">Our server has its own implementation to decide whether to provide service for users according to the real-time total free memory of the heap memory and the direct memory (mainly the memory used by <code class=\"notranslate\">io.netty.buffer.PooledByteBufAllocator</code> for our server). If our server detects it's running out of physical memory, it will just respond with the client requests with something like <code class=\"notranslate\">Service Unavailable</code>.</p>\n<p dir=\"auto\">But the problem is: We cannot know the free memory of PooledByteBufAllocator efficiently. For example, we have allocated and cached 8GB chunks in a <code class=\"notranslate\">PooledByteBufAllocator</code>, but there is no property to know: what exactly the free memory is, 1GB or 8GB?</p>\n<h3 dir=\"auto\">Solution</h3>\n<p dir=\"auto\">The <a href=\"https://github.com/netty/netty/pull/5133/files\">PR</a> in 2016 is similar to what we want and it provides a new property <code class=\"notranslate\">pooledBytes</code> to record the free memory of the arena but we want the free memory in the scope of each allocator instance.</p>\n<p dir=\"auto\">And <code class=\"notranslate\">io.netty.maxDirectMemory</code> is similar but isn't what we want because it applies the limit to all buffers while we just want to know the free memory size of a PooledByteBufAllocator instance</p>",
                "resourcePath": "/netty/netty/issues/11637",
                "createdAt": "2021-08-31T20:26:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Netty Future no longer extends JDK Future",
        "url": "https://github.com/netty/netty/pull/11647",
        "resourcePath": "/netty/netty/pull/11647",
        "createdAt": "2021-09-02T14:24:52Z",
        "number": 11647,
        "mergeCommit": {
          "oid": "59275fba525ceaf7a493c8115e20d69ee97272b1",
          "message": "Netty Future no longer extends JDK Future (#11647)\n\nMotivation:\r\nIt is important to avoid blocking method calls in an event loop thread, since that can stall the system.\r\nNetty's Future interface was extending the JDK Future interface, which included a number of blocking methods of questionable use in Netty.\r\nWe wish to reduce the number of blocking methods on the Future API in order to discourage their use a little.\r\nFurther more, the Netty Future specification of the behaviour of the cancel() and isDone() methods are inconsistent with those of the JDK Future.\r\nIf Netty's Future stop extending the JDK Future interface, it will also no longer be bound by its specification.\r\n\r\nModification:\r\nMake Netty's Future no longer extend the JDK Future interface.\r\nChange the EvenExecutorGroup interface to no longer extend ScheduledExecutorService.\r\nThe EventExecutorGroup still extends Executor, because Executor does not dictate any return type of the `execute()` method \u2014 this is also useful in the DefaultFutureCompletionStage implementation.\r\nThe Netty ScheduledFuture interface has been removed since it provided no additional features that were actually used.\r\nNumerous changes to use sites that previously relied on the JDK types.\r\nRemove the `Future.cancel()` method that took a boolean argument \u2014 this argument was always ignored in our implementations, which was another spec deviation.\r\nVarious `invoke*` and `shutdown*` methods have been removed from the EvenExecutorGroup API since it no longer extends ScheduledExecutorService \u2014 these were either not used anywhere, or deprecated with better alternatives available.\r\nUpdates to cancellation javadocs.\r\n\r\nResult:\r\nCleaner code, leaner API.",
          "commitUrl": "https://github.com/netty/netty/commit/59275fba525ceaf7a493c8115e20d69ee97272b1",
          "parents": {
            "nodes": [
              {
                "oid": "3cbb41a4781375b1a714f2d4b1b6e91be00db4b4",
                "message": "Make ByteCursor implementations static final inner classes (#11662)\n\nMotivation:\r\nPeople might be tempted to use mocking tools like Mockito.spy() on the ByteCursors.\r\nBy returning instances where the concrete classes are final, we will be forcing integrators to use stub-like wrappers instead.\r\nSuch stubs are more well-behaved since they are implemented in terms of the real instance.\r\nThis prevents the mocked objects from (easily) producing behaviour that violates the API specification.\r\n\r\nModification:\r\nAll ByteCursor implementations have changed from using anonymous inner classes, to using static-final named inner classes.\r\n\r\nResult:\r\nThe concrete ByteCursor classes can no longer be extended via byte code generation, such as from mocking tools."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueEventLoopTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/Channel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/SingleThreadEventLoop.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/embedded/EmbeddedEventLoop.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/nio/AbstractNioChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/channel/AbstractChannelTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/channel/SingleThreadEventLoopTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/channel/nio/NioEventLoopTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/channel/socket/nio/AbstractNioChannelTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzI1OTczMjY0OjNhYmRiYjU0YmMxZDMyNjE0ZmIzYjZkMjIxN2U0MDdkMmJkNzE4ZmI=",
                "url": "https://github.com/netty/netty/pull/11647/commits/3abdbb54bc1d32614fb3b6d2217e407d2bd718fb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 7712,
                "url": "https://github.com/netty/netty/issues/7712",
                "title": "method `io.netty.util.concurrent.DefaultPromise#cancel/isDone` violates contract?",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">According the contract from method <code class=\"notranslate\">java.util.concurrent.Future#cancel</code> :</p>\n<blockquote>\n<p dir=\"auto\">After this method returns, subsequent calls to isDone will always return true.</p>\n</blockquote>\n<p dir=\"auto\">the console should print <code class=\"notranslate\">true</code></p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">console print <code class=\"notranslate\">false</code></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">please use following reproducer code</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import io.netty.util.concurrent.GlobalEventExecutor;\nimport io.netty.util.concurrent.Promise;\n\npublic class DefaultPromiseIsDoneTest {\n\n    private final Promise&lt;?&gt; defaultPromise = GlobalEventExecutor.INSTANCE.newPromise();\n\n    public static void main(String args[]) {\n        DefaultPromiseIsDoneTest main = new DefaultPromiseIsDoneTest();\n        main.isDoneTest();\n    }\n\n    private void isDoneTest() {\n        defaultPromise.setUncancellable();\n        defaultPromise.cancel(false);\n        boolean isDone = defaultPromise.isDone();\n        System.out.println(isDone);\n    }\n}\n\"><pre class=\"notranslate\"><code class=\"notranslate\">import io.netty.util.concurrent.GlobalEventExecutor;\nimport io.netty.util.concurrent.Promise;\n\npublic class DefaultPromiseIsDoneTest {\n\n    private final Promise&lt;?&gt; defaultPromise = GlobalEventExecutor.INSTANCE.newPromise();\n\n    public static void main(String args[]) {\n        DefaultPromiseIsDoneTest main = new DefaultPromiseIsDoneTest();\n        main.isDoneTest();\n    }\n\n    private void isDoneTest() {\n        defaultPromise.setUncancellable();\n        defaultPromise.cancel(false);\n        boolean isDone = defaultPromise.isDone();\n        System.out.println(isDone);\n    }\n}\n\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.21</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">1.8</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">MacOS</p>\n<p dir=\"auto\">Does  Netty change the contract inherited from <code class=\"notranslate\">java.util.concurrent.Future#cancel</code>?<br>\nThere is a discussion about this in stackoverflow:<br>\n<a href=\"https://stackoverflow.com/questions/30140463/future-cancel-method-documentation\" rel=\"nofollow\">https://stackoverflow.com/questions/30140463/future-cancel-method-documentation</a></p>",
                "resourcePath": "/netty/netty/issues/7712",
                "createdAt": "2018-02-13T02:18:29Z",
                "labels": {
                  "edges": []
                }
              }
            },
            {
              "node": {
                "number": 8520,
                "url": "https://github.com/netty/netty/issues/8520",
                "title": "[Netty 5] Netty Future should not extend java.util.concurrent.Future",
                "bodyHTML": "<p dir=\"auto\">Netty\u2019s <code class=\"notranslate\">Future</code> interface extends <code class=\"notranslate\">java.util.concurrent.Future</code>. This requires implementing some methods which are more prevalent in blocking applications (e.g. <code class=\"notranslate\">get(..)</code>), and also brings some semantics that we may want to avoid (e.g. <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"296591726\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/7712\" data-hovercard-type=\"issue\" data-hovercard-url=\"/netty/netty/issues/7712/hovercard\" href=\"https://github.com/netty/netty/issues/7712\">#7712</a> ).</p>\n<p dir=\"auto\">Nettys <code class=\"notranslate\">Future</code> should not extend <code class=\"notranslate\">java.util.concurrent.Future</code> and not provide a means to block. We will provide a conversion layer between Netty\u2019s <code class=\"notranslate\">Future</code> and the <code class=\"notranslate\">java.util.concurrent.Future</code>. Same goes for <code class=\"notranslate\">CompletionStage</code> and <code class=\"notranslate\">CompletableFuture</code>.</p>",
                "resourcePath": "/netty/netty/issues/8520",
                "createdAt": "2018-11-13T13:43:38Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Updated \"CipherSuitesConverter\" to make it public.",
        "url": "https://github.com/netty/netty/pull/11656",
        "resourcePath": "/netty/netty/pull/11656",
        "createdAt": "2021-09-04T11:09:12Z",
        "number": 11656,
        "mergeCommit": {
          "oid": "a329857ec20cc1b93ceead6307c6849f93b3f101",
          "message": "Updated \"CipherSuitesConverter\" to make it public. (#11656)\n\nMotivation:\r\nWhile using netty there is sometimes need to handle the cipher suites and\r\nsignature algorithm in more strict environment. CipherSuiteConverter is\r\nquite helpful in converting Cipher-Suites to and from java to openSSL.\r\nMaking it public would be helpful for the project which are using netty.\r\n\r\nModification:\r\nUpdated \"CipherSuitesConverter\" to make it public.\r\nupdated \"CipherSuitesConverter.toOpenssl\" to public.\r\nupdated \"CipherSuitesConverter.toJava\" to public.\r\n\r\nResult:\r\nFixes #11655",
          "commitUrl": "https://github.com/netty/netty/commit/a329857ec20cc1b93ceead6307c6849f93b3f101",
          "parents": {
            "nodes": [
              {
                "oid": "21fb48e4d22b5d030b165200e663c11f545f5576",
                "message": "Deprecate UnaryPromiseNotifier (#11653)\n\nMotivation:\r\n\r\nUsers should use PromiseNotifier.cascade(...) methods and so the UnaryPromiseNotifier becomes useless.\r\n\r\nModifications:\r\n\r\n- Mark UnaryPromiseNotifier as deprecated\r\n- Replaces usages with PromiseNotifier.cascade(...)\r\n\r\nResult:\r\n\r\nCleanup"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/CipherSuiteConverter.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzI3MjIzNjcyOjYyMDcwNzBiZjM3Y2JlNTVhNWU2ZDljYzA1Zjc2OTUzZmE3OGYxZTA=",
                "url": "https://github.com/netty/netty/pull/11656/commits/6207070bf37cbe55a5e6d9cc05f76953fa78f1e0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11655,
                "url": "https://github.com/netty/netty/issues/11655",
                "title": "ability to CipherSuitesConverter outside of the io.netty.handler.ssl",
                "bodyHTML": "<p dir=\"auto\">In our use case, we are required to convert the java cipher suites are required to be converted to Openssl. I found that netty already has a <code class=\"notranslate\">CipherSuitesConverter</code>. As we are already using netty, we could have reused the class if it was not made the package private. IMO it would be no harm if we make it public to be used for the project using netty already.</p>\n<p dir=\"auto\">I will raise a pull request for the same.</p>",
                "resourcePath": "/netty/netty/issues/11655",
                "createdAt": "2021-09-04T10:57:07Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Throw exceptions when rule violating UDS paths been passed in.",
        "url": "https://github.com/netty/netty/pull/11663",
        "resourcePath": "/netty/netty/pull/11663",
        "createdAt": "2021-09-07T17:01:45Z",
        "number": 11663,
        "mergeCommit": {
          "oid": "a53eb80901b8bf678e2ff65e4715d25c4fec638c",
          "message": "Throw exceptions when rule violating UDS paths been passed in. (#11663)\n\nMotivation:\r\n\r\nCurrently, Netty is silently truncating all over the limit UDS paths and ignoring the `sun_path`'s null-termination role, which hurts compatibility with other UDS clients and servers.\r\n\r\nModifications:\r\n\r\nAdding a validation in the JNI code, if the UDS path is not satisfying the system limit or Linux spec throw a NativeIoException.\r\n\r\nResult:\r\n\r\nAll UDS paths Netty can successfully bind are connectable by other programs.",
          "commitUrl": "https://github.com/netty/netty/commit/a53eb80901b8bf678e2ff65e4715d25c4fec638c",
          "parents": {
            "nodes": [
              {
                "oid": "a329857ec20cc1b93ceead6307c6849f93b3f101",
                "message": "Updated \"CipherSuitesConverter\" to make it public. (#11656)\n\nMotivation:\r\nWhile using netty there is sometimes need to handle the cipher suites and\r\nsignature algorithm in more strict environment. CipherSuiteConverter is\r\nquite helpful in converting Cipher-Suites to and from java to openSSL.\r\nMaking it public would be helpful for the project which are using netty.\r\n\r\nModification:\r\nUpdated \"CipherSuitesConverter\" to make it public.\r\nupdated \"CipherSuitesConverter.toOpenssl\" to public.\r\nupdated \"CipherSuitesConverter.toJava\" to public.\r\n\r\nResult:\r\nFixes #11655"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/test/java/io/netty/channel/epoll/LinuxSocketTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/src/main/c/netty_unix_socket.c"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzI4ODA2NjkwOjdkMjdhZmYxOGVkMWFmOGZmYjhmYTMyNTQ1NzVhNmNhZWJhOTg1Zjc=",
                "url": "https://github.com/netty/netty/pull/11663/commits/7d27aff18ed1af8ffb8fa3254575a6caeba985f7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11652,
                "url": "https://github.com/netty/netty/issues/11652",
                "title": "Issues on UDS path binding",
                "bodyHTML": "<p dir=\"auto\">I think there are couple issues relate to the UDS path binding logic:</p>\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">In the JNI <code class=\"notranslate\">netty_unix_socket_bindDomainSocket</code> method, when the upper level passes in a <a href=\"https://github.com/netty/netty/blob/d58d8a1df832a5185193368e589cb4a488709ffe/transport-native-unix-common/src/main/c/netty_unix_socket.c#L768\">longer-than-limit UDS path</a>.<br>\na. the <code class=\"notranslate\">unlink()</code> is called on a different <a href=\"https://github.com/netty/netty/blob/d58d8a1df832a5185193368e589cb4a488709ffe/transport-native-unix-common/src/main/c/netty_unix_socket.c#L772\">path</a> than the <a href=\"https://github.com/netty/netty/blob/d58d8a1df832a5185193368e589cb4a488709ffe/transport-native-unix-common/src/main/c/netty_unix_socket.c#L776\">one</a> the code later <code class=\"notranslate\">bind</code> to.<br>\nb. Netty is <a href=\"https://github.com/netty/netty/blob/d58d8a1df832a5185193368e589cb4a488709ffe/transport-native-unix-common/src/main/c/netty_unix_socket.c#L770\">quietly truncating the path</a> if user provides a over the limit path. This can be an issue if we have a non-Netty client which has a different path handling logic.</p>\n</li>\n<li>\n<p dir=\"auto\">According to the manual, \"a UNIX domain socket can be bound to a <em>null-terminated</em> filesystem pathname\", but Netty is not doing anything about this requirement. Although there are some <a href=\"https://man.archlinux.org/man/core/man-pages/unix.7.en#BUGS\" rel=\"nofollow\">messes</a> on handling this requirement, we should not simply ignore it. This is also an issue if we have a non-Netty client.</p>\n</li>\n</ol>\n<p dir=\"auto\">I am proposing a possible fix for all these issues. We can just validate the <code class=\"notranslate\">socketPath</code> passed in and let Java throw exceptions if: 1) the <code class=\"notranslate\">socketPath</code> is longer than <code class=\"notranslate\">sizeof(addr.sun_path)</code>, 2) or, the <code class=\"notranslate\">socketPath</code> has the same length as <code class=\"notranslate\">sizeof(addr.sun_path)</code> but the last byte is not '\\0'. A similar thing also need to be done on the client side. This can ensure the UDS paths Netty can use have maximum compatibility with other UDS servers/clients.</p>\n<p dir=\"auto\">I can send a PR if the change mentioned above is desirable. Thank you.</p>",
                "resourcePath": "/netty/netty/issues/11652",
                "createdAt": "2021-09-02T23:10:55Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add pinnedHeap/DirectMemory methods to ByteBufAllocatorMetric",
        "url": "https://github.com/netty/netty/pull/11667",
        "resourcePath": "/netty/netty/pull/11667",
        "createdAt": "2021-09-08T14:10:42Z",
        "number": 11667,
        "mergeCommit": {
          "oid": "4377ece51640fe0eb0b21fac512a86443cf409ab",
          "message": "Add pinnedHeap/DirectMemory methods to ByteBufAllocatorMetric (#11667)\n\nMotivation:\r\nThe \"used memory\" is the amount of memory that a pooled allocator has currently allocated and committed for itself.\r\nThs is useful for managing resource usage of the pool versus the available system resources.\r\nHowever, it is not useful for managing resources of the currently circulating buffer instances versus the pool.\r\nThe pinned memory is the memory currently in use by buffers in circulation, plus memory held in the thread-local caches.\r\n\r\nModification:\r\nAdd pinned memory accounting to PoolChunk.\r\nWe cannot just use the existing freeBytes because that field is only updated when pool subpages are retired, and a chunk will never retire its last subpage instance.\r\nThe accounting statistics are available on the PooledByteBufAllocator only, since the metrics interfaces cannot be changed due to backwards compatibility.\r\n\r\nResult:\r\nIt is now possible to get a fairly accurate (with slight over-counting due to the thread-local caches) picture of how much memory is held up in buffer instances at any given moment.\r\n\r\nFixes #11637",
          "commitUrl": "https://github.com/netty/netty/commit/4377ece51640fe0eb0b21fac512a86443cf409ab",
          "parents": {
            "nodes": [
              {
                "oid": "51ebcbd9aba7eac854716e45f07765744f8dcdaf",
                "message": "Use cpu_relax() implementation for aarch64 (#11677)\n\nMotivation:\r\n\r\nWe only implement cpu_relax() for x86_64 atm, we should also do for aarch64\r\n\r\nModifications:\r\n\r\nAdd implementation\r\n\r\nResult:\r\n\r\nPossible better performance on aarch64 when busy spinning with epoll is used"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolArena.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolChunk.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PooledByteBufAllocator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/AbstractByteBufAllocatorTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/PooledByteBufAllocatorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzI5Njg2ODQ0OjA0NTI4YzVjMmQ0Yjg5NjAzOGFlYmExMTRlNzA5ZjYxMjM2ZmU2Y2Y=",
                "url": "https://github.com/netty/netty/pull/11667/commits/04528c5c2d4b896038aeba114e709f61236fe6cf"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11637,
                "url": "https://github.com/netty/netty/issues/11637",
                "title": "Add support getting the pooled memory size for each PooledByteBufAllocator instance",
                "bodyHTML": "<h3 dir=\"auto\">Motivation</h3>\n<p dir=\"auto\">Our server has its own implementation to decide whether to provide service for users according to the real-time total free memory of the heap memory and the direct memory (mainly the memory used by <code class=\"notranslate\">io.netty.buffer.PooledByteBufAllocator</code> for our server). If our server detects it's running out of physical memory, it will just respond with the client requests with something like <code class=\"notranslate\">Service Unavailable</code>.</p>\n<p dir=\"auto\">But the problem is: We cannot know the free memory of PooledByteBufAllocator efficiently. For example, we have allocated and cached 8GB chunks in a <code class=\"notranslate\">PooledByteBufAllocator</code>, but there is no property to know: what exactly the free memory is, 1GB or 8GB?</p>\n<h3 dir=\"auto\">Solution</h3>\n<p dir=\"auto\">The <a href=\"https://github.com/netty/netty/pull/5133/files\">PR</a> in 2016 is similar to what we want and it provides a new property <code class=\"notranslate\">pooledBytes</code> to record the free memory of the arena but we want the free memory in the scope of each allocator instance.</p>\n<p dir=\"auto\">And <code class=\"notranslate\">io.netty.maxDirectMemory</code> is similar but isn't what we want because it applies the limit to all buffers while we just want to know the free memory size of a PooledByteBufAllocator instance</p>",
                "resourcePath": "/netty/netty/issues/11637",
                "createdAt": "2021-08-31T20:26:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix CRLF split between 2 buffers before separator",
        "url": "https://github.com/netty/netty/pull/11670",
        "resourcePath": "/netty/netty/pull/11670",
        "createdAt": "2021-09-09T18:58:16Z",
        "number": 11670,
        "mergeCommit": {
          "oid": "fdbcab8bc3dfb4ab5a986a26b4a443e4c845d635",
          "message": "Fix CRLF split between 2 buffers before separator (#11670)\n\nMotivation:\r\n\r\nWhen a buffer ends with the last chunk for a part but containing\r\nonly a CR and no LF neither separator, it ends up with the CR\r\nincluded within the content of the part, which is wrong.\r\n\r\nModificiations:\r\n\r\nRare case, but fixed by checking when not getting the delimiter,\r\nnot finding a LineBreak, we check if the last byte of the chunk is a CR\r\nand if the content could be added to the current part (current length +\r\ncurrent buffer length - 1) could lead to the end of the part.\r\n\r\nIf so, then the CR can be safely ignored, waiting for the future LF and\r\nseparator, and the buffer can be added to the part content.\r\n\r\nIf not, the CR is part of the content and shall be included.\r\n\r\n\r\nAdd a non regression test.\r\n\r\nResult: \r\nFix issue #11668",
          "commitUrl": "https://github.com/netty/netty/commit/fdbcab8bc3dfb4ab5a986a26b4a443e4c845d635",
          "parents": {
            "nodes": [
              {
                "oid": "059752db5d0eeaf62981000e5d70a18a5227b7f1",
                "message": "Fix possible leak in StompSubframeDecoder when a frame not ending with the NULL octet (#11727)\n\nMotivation:\r\n\r\nCurrently if a frame not ending with the NULL octet we throws an exception and not release `lastContent` frame if it present.\r\n\r\nModification:\r\n\r\nRelease `lastContent` if it present in exceptional case.\r\n\r\nResult:\r\n\r\nFixed possible leak."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostMultiPartRequestDecoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzMwODUxODgzOjMwOTFjNmYyMjcxNjAwZDRiNzI3ZmJjNGYyODEyNzM4ODc0ZjMxZTg=",
                "url": "https://github.com/netty/netty/pull/11670/commits/3091c6f2271600d4b727fbc4f2812738874f31e8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11668,
                "url": "https://github.com/netty/netty/issues/11668",
                "title": "Multipart upload splits CRLF across 2 chunks",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">CLRF is always part of a single chunk.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">CRLF <em>can</em> be split across 2 chunks (in some super rare exotic circumstances), causing the first CR to be considered part of the multipart payload and being offered to the Decoder, causing</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$ErrorDataDecoderException: java.io.IOException: Out of size: 5043445 &gt; 5043444\n\tat io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.loadDataMultipartOptimized(HttpPostMultipartRequestDecoder.java:1190)\n\tat io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.getFileUpload(HttpPostMultipartRequestDecoder.java:926)\n\tat io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.decodeMultipart(HttpPostMultipartRequestDecoder.java:572)\n\tat io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.parseBodyMultipart(HttpPostMultipartRequestDecoder.java:463)\n\tat io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.parseBody(HttpPostMultipartRequestDecoder.java:432)\n\tat io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.offer(HttpPostMultipartRequestDecoder.java:347)\n\tat io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.offer(HttpPostMultipartRequestDecoder.java:54)\n\tat io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.offer(HttpPostRequestDecoder.java:223)\"><pre class=\"notranslate\"><code class=\"notranslate\">io.netty.handler.codec.http.multipart.HttpPostRequestDecoder$ErrorDataDecoderException: java.io.IOException: Out of size: 5043445 &gt; 5043444\n\tat io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.loadDataMultipartOptimized(HttpPostMultipartRequestDecoder.java:1190)\n\tat io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.getFileUpload(HttpPostMultipartRequestDecoder.java:926)\n\tat io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.decodeMultipart(HttpPostMultipartRequestDecoder.java:572)\n\tat io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.parseBodyMultipart(HttpPostMultipartRequestDecoder.java:463)\n\tat io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.parseBody(HttpPostMultipartRequestDecoder.java:432)\n\tat io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.offer(HttpPostMultipartRequestDecoder.java:347)\n\tat io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.offer(HttpPostMultipartRequestDecoder.java:54)\n\tat io.netty.handler.codec.http.multipart.HttpPostRequestDecoder.offer(HttpPostRequestDecoder.java:223)\n</code></pre></div>\n<p dir=\"auto\">This is <strong>very much</strong> a <em>theory</em>. Any hints to figure out whether something else could cause this would be appreciated.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">We have a test in Apache Flink that uploads a multipart HTTP request containing a bit of JSON as a MemoryAttribute and a FileUpload.<br>\nWhen the size of these attributes is just right (deviating by as much as 3 bytes hides the issue) the decoding of the request fails.<br>\nIf it fails, then it is always with an off-by-one error as shown above, one more byte arriving than expected.</p>\n<p dir=\"auto\">While debugging I inspected the chunk that causes the error. The last readable byte in the chunk had the value '13', i.e., CR. This makes me to believe that it is somehow possible that the CRLF can be split across chunks.</p>\n<p dir=\"auto\">According to the the <a href=\"https://github.com/netty/netty/blob/d0ec961cce19646519d6a0d59e7604b0eacd9bf2/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java#L1101\">4.1.49 decoder</a> this should be impossible, but the explicit check was removed in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/netty/netty/commit/1529ef1794e0a6654fa4334fd979b769d6940e61/hovercard\" href=\"https://github.com/netty/netty/commit/1529ef1794e0a6654fa4334fd979b769d6940e61\"><tt>1529ef1</tt></a>.</p>\n<p dir=\"auto\">We further consistently observe that the return value <code class=\"notranslate\">HttpPostRequestEncoder#length()</code> after finalizing the request differs by <em>exactly 1</em> between successful and failed runs, e.g., 5043832 (successful) vs 5043831 (failed).<br>\nNot sure what to make of that, but it's too consistent to ignore.</p>\n<p dir=\"auto\">We have only observed this error after upgrading from 4.1.49 to 4.1.65.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Still working on that. I could provide a reproducer that relies on a few Apache Flink classes if that would be acceptable.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.65.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"11\" 2018-09-25<br>\nOpenJDK Runtime Environment 18.9 (build 11+28)<br>\nOpenJDK 64-Bit Server VM 18.9 (build 11+28, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows 11, but we also observed it on Ubuntu 20.</p>",
                "resourcePath": "/netty/netty/issues/11668",
                "createdAt": "2021-09-08T16:25:52Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix ByteBufUtil indexOf ClassCastException",
        "url": "https://github.com/netty/netty/pull/11680",
        "resourcePath": "/netty/netty/pull/11680",
        "createdAt": "2021-09-14T02:27:08Z",
        "number": 11680,
        "mergeCommit": {
          "oid": "29b7c6e9f09e1770b28b71cf4634f82bd6eaafb7",
          "message": "Fix ByteBufUtil indexOf ClassCastException (#11680)\n\nMotivation:\r\n\r\nIn this issue(https://github.com/netty/netty/issues/11678) , it is proposed that `ByteBufUtil.indexOf()` may throw `ClassCastException`, so type checking on `haystack` is required\r\n\r\nModification:\r\n\r\nUse `ByteBuf.indexOf()` instead of `firstIndexOf()`, and add test case\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11678\r\n\r\n\r\nCo-authored-by: Aayush Atharva <hyperx.pro@outlook.com>\r\nSigned-off-by: xingrufei <xingrufei@sogou-inc.com>",
          "commitUrl": "https://github.com/netty/netty/commit/29b7c6e9f09e1770b28b71cf4634f82bd6eaafb7",
          "parents": {
            "nodes": [
              {
                "oid": "fd3c769fd11fea9a95d375d3c5d02675c8bb7b88",
                "message": "Use the correct readerIndex() when handle BLOCK_TYPE_NON_COMPRESSED in Lz4FrameEncoder (#11690)\n\nMotivation:\r\n\r\nWe need to use the readerIndex() as offset when handle BLOCK_TYPE_NON_COMPRESSED as it might not be 0 in Lz4FrameEncoder.\r\n\r\nModifications:\r\n\r\nCorrectly use readerIndex()\r\n\r\nResult:\r\n\r\nCorrectly handle BLOCK_TYPE_NON_COMPRESSED when the readerIndex() != 0"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/ByteBufUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/ByteBufUtilTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84rtKkT2gAoOWQ3MmFlNWQ3ODk2ZWY5YmUxZjBjMWFmY2U2MDk2MWM2OGVjNWYwYQ",
                "url": "https://github.com/netty/netty/pull/11680/commits/9d72ae5d7896ef9be1f0c1afce60961c68ec5f0a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11678,
                "url": "https://github.com/netty/netty/issues/11678",
                "title": "ByteBufUtil ClassCastException in 4.1.66+",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">ByteBufUtil.indexOf</code> was rewritten recently in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"913032720\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/11367\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/11367/hovercard\" href=\"https://github.com/netty/netty/pull/11367\">#11367</a>.</p>\n<p dir=\"auto\">That change introduced a cast of the passed parameter to <strong>AbstractByteBuf</strong><br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/43f3956030dbb0e6e6cca9b6ceee6812f11c5a4b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java#L250\">netty/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 250\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/43f3956030dbb0e6e6cca9b6ceee6812f11c5a4b\">43f3956</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L250\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"250\"></td>\n          <td id=\"LC250\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">return</span> <span class=\"pl-en\">firstIndexOf</span>((<span class=\"pl-smi\">AbstractByteBuf</span>) <span class=\"pl-s1\">haystack</span>, <span class=\"pl-s1\">haystack</span>.<span class=\"pl-en\">readerIndex</span>(), </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">The consequence of this is that a ClassCastException is now thrown whenever other <strong>ByteBuf</strong> implementations are used.</p>\n<p dir=\"auto\">The method doc did not and does not indicate that the parameter is required to be an <strong>AbstractByteBuf</strong>, so this appears to be a bug.<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/43f3956030dbb0e6e6cca9b6ceee6812f11c5a4b/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java#L227-L232\">netty/buffer/src/main/java/io/netty/buffer/ByteBufUtil.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 227 to 232\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/43f3956030dbb0e6e6cca9b6ceee6812f11c5a4b\">43f3956</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L227\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"227\"></td>\n          <td id=\"LC227\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-c\">/**</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L228\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"228\"></td>\n          <td id=\"LC228\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">     * Returns the reader index of needle in haystack, or -1 if needle is not in haystack.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L229\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"229\"></td>\n          <td id=\"LC229\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">     * This method uses the &lt;a href=\"https://en.wikipedia.org/wiki/Two-way_string-matching_algorithm\"&gt;Two-Way</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L230\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"230\"></td>\n          <td id=\"LC230\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">     * string matching algorithm&lt;/a&gt;, which yields O(1) space complexity and excellent performance.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L231\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"231\"></td>\n          <td id=\"LC231\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">     */</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L232\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"232\"></td>\n          <td id=\"LC232\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">int</span> <span class=\"pl-en\">indexOf</span>(<span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">needle</span>, <span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">haystack</span>) { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>",
                "resourcePath": "/netty/netty/issues/11678",
                "createdAt": "2021-09-13T18:20:08Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "regression"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix little-endian get/set methods in SwappedByteBuf",
        "url": "https://github.com/netty/netty/pull/11706",
        "resourcePath": "/netty/netty/pull/11706",
        "createdAt": "2021-09-23T11:47:19Z",
        "number": 11706,
        "mergeCommit": {
          "oid": "83278c50005cfa58762167505aa9be8f19814433",
          "message": "Fix little-endian get/set methods in SwappedByteBuf (#11706)\n\nMotivation:\r\nThe `*LE` family of accessor methods are documented to always perform accesses in little-endian byte order, regardless of what `ByteBuf.order()` has been set on a buffer.\r\nThis was not always honoured by the `SwappedByteBuf`, and many methods were fixed in #10747, except the get and set methods were missed by that PR.\r\n\r\nModification:\r\nFix the methods that were missed in #10747 and make the testing more thorough by also covering get and set methods.\r\n\r\nResult:\r\nAny `ByteBuf` accessor method that is suffixed with `LE` now always perform a little-endian access, regardless of the buffers configured byte order.\r\n\r\nThis fixes #11700",
          "commitUrl": "https://github.com/netty/netty/commit/83278c50005cfa58762167505aa9be8f19814433",
          "parents": {
            "nodes": [
              {
                "oid": "23405e2000427e9cad104913e7071d8d08e91a3c",
                "message": "Ensure CompositeByteBuf.decompose(...) returns the non unwrapped buffer (#11696)\n\n\r\nMotivation:\r\n\r\nWe did return the previous unwrapped buffer when calling decompose(...). This could result in inconsistency in terms of reference counting and so to leaks.\r\n\r\nModifications:\r\n\r\n- Correctly return the non unwrapped buffer (the original) when calling decompose(...)\r\n- Add unit test\r\n\r\nResult:\r\n\r\nNo more reference count issues when using decompose(...)\r\n\r\nCo-authored-by: Nitesh Kant <nitesh_kant@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/ByteBufUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/SwappedByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/AbstractByteBufTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/UnpooledTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslUtils.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84sL3_P2gAoMWFjZTJmMDRlMzcwMTllYmE1MjI2YTE3YjQwOTZmYjkxN2ViODNjOA",
                "url": "https://github.com/netty/netty/pull/11706/commits/1ace2f04e37019eba5226a17b4096fb917eb83c8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11700,
                "url": "https://github.com/netty/netty/issues/11700",
                "title": "ByteBuf.order() seems to have wrong behavior",
                "bodyHTML": "<p dir=\"auto\">Found unexpected behavior when calling</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Unpooled.buffer(1024).order(ByteOrder.LITTLE_ENDIAN).writeShortLE(message)\"><pre class=\"notranslate\"><span class=\"pl-smi\">Unpooled</span>.<span class=\"pl-en\">buffer</span>(<span class=\"pl-c1\">1024</span>).<span class=\"pl-en\">order</span>(<span class=\"pl-smi\">ByteOrder</span>.<span class=\"pl-c1\">LITTLE_ENDIAN</span>).<span class=\"pl-en\">writeShortLE</span>(<span class=\"pl-s1\">message</span>)</pre></div>\n<p dir=\"auto\">since netty 4.1.54.Final.</p>\n<p dir=\"auto\">The <code class=\"notranslate\">order()</code> method has already been deprecated, but nevertheless it shouldn't be broken.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Test passes</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Test failed</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"expected: -12208\nbut was : 20688\n\tat NettyEndianTest.endianTestCallingOrder(NettyEndianTest.java:26)\"><pre class=\"notranslate\"><code class=\"notranslate\">expected: -12208\nbut was : 20688\n\tat NettyEndianTest.endianTestCallingOrder(NettyEndianTest.java:26)\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Create the following project</p>\n<p dir=\"auto\"><em>./build.gradle</em></p>\n<div class=\"highlight highlight-source-groovy-gradle notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"plugins {\n    id 'java'\n}\n\ngroup 'org.example'\nversion '1.0-SNAPSHOT'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testImplementation 'com.google.truth:truth:1.0.1'\n    testImplementation 'io.netty:netty-buffer:4.1.68.Final'\n    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'\n    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'\n}\n\ntest {\n    useJUnitPlatform()\n}\"><pre class=\"notranslate\"><span class=\"pl-en\">plugins</span> {\n    id <span class=\"pl-s\"><span class=\"pl-pds\">'</span>java<span class=\"pl-pds\">'</span></span>\n}\n\ngroup <span class=\"pl-s\"><span class=\"pl-pds\">'</span>org.example<span class=\"pl-pds\">'</span></span>\nversion <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1.0-SNAPSHOT<span class=\"pl-pds\">'</span></span>\n\n<span class=\"pl-en\">repositories</span> {\n    mavenCentral()\n}\n\n<span class=\"pl-en\">dependencies</span> {\n    testImplementation <span class=\"pl-s\"><span class=\"pl-pds\">'</span>com.google.truth:truth:1.0.1<span class=\"pl-pds\">'</span></span>\n    testImplementation <span class=\"pl-s\"><span class=\"pl-pds\">'</span>io.netty:netty-buffer:4.1.68.Final<span class=\"pl-pds\">'</span></span>\n    testImplementation <span class=\"pl-s\"><span class=\"pl-pds\">'</span>org.junit.jupiter:junit-jupiter-api:5.7.0<span class=\"pl-pds\">'</span></span>\n    testRuntimeOnly <span class=\"pl-s\"><span class=\"pl-pds\">'</span>org.junit.jupiter:junit-jupiter-engine:5.7.0<span class=\"pl-pds\">'</span></span>\n}\n\n<span class=\"pl-en\">test</span> {\n    useJUnitPlatform()\n}</pre></div>\n<p dir=\"auto\"><em>./src/NettyEndianTest.java</em></p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import static com.google.common.truth.Truth.assertThat;\n\nimport io.netty.buffer.ByteBuf;\nimport io.netty.buffer.Unpooled;\nimport java.nio.ByteOrder;\nimport org.junit.jupiter.api.Test;\n\nclass NettyEndianTest {\n\n  // Test will fail for netty 4.1.54.Final and above \n  @SuppressWarnings(&quot;deprecation&quot;)\n  @Test\n  void endianTestCallingOrder() {\n    short message = (short) 0xD050;\n    short reverse = (short) 0x50D0;\n    ByteBuf b = Unpooled.buffer(1024).order(ByteOrder.LITTLE_ENDIAN).writeShortLE(message);\n\n    assertThat(b.getShortLE(0)).isEqualTo(message);\n    assertThat(b.getShort(0)).isEqualTo(reverse);\n  }\n\n  // Test is passing\n  @Test\n  void endianTestWithoutCallingOrder() {\n    short message = (short) 0xD050;\n    short reverse = (short) 0x50D0;\n    ByteBuf b = Unpooled.buffer(1024).writeShortLE(message);\n\n    assertThat(b.getShortLE(0)).isEqualTo(message);\n    assertThat(b.getShort(0)).isEqualTo(reverse);\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">truth</span>.<span class=\"pl-s1\">Truth</span>.<span class=\"pl-s1\">assertThat</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">buffer</span>.<span class=\"pl-s1\">ByteBuf</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">buffer</span>.<span class=\"pl-s1\">Unpooled</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">ByteOrder</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">Test</span>;\n\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">NettyEndianTest</span> {\n\n  <span class=\"pl-c\">// Test will fail for netty 4.1.54.Final and above </span>\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">SuppressWarnings</span>(<span class=\"pl-s\">\"deprecation\"</span>)\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-smi\">void</span> <span class=\"pl-en\">endianTestCallingOrder</span>() {\n    <span class=\"pl-smi\">short</span> <span class=\"pl-s1\">message</span> = (<span class=\"pl-smi\">short</span>) <span class=\"pl-c1\">0xD050</span>;\n    <span class=\"pl-smi\">short</span> <span class=\"pl-s1\">reverse</span> = (<span class=\"pl-smi\">short</span>) <span class=\"pl-c1\">0x50D0</span>;\n    <span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">b</span> = <span class=\"pl-smi\">Unpooled</span>.<span class=\"pl-en\">buffer</span>(<span class=\"pl-c1\">1024</span>).<span class=\"pl-en\">order</span>(<span class=\"pl-smi\">ByteOrder</span>.<span class=\"pl-c1\">LITTLE_ENDIAN</span>).<span class=\"pl-en\">writeShortLE</span>(<span class=\"pl-s1\">message</span>);\n\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">b</span>.<span class=\"pl-en\">getShortLE</span>(<span class=\"pl-c1\">0</span>)).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s1\">message</span>);\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">b</span>.<span class=\"pl-en\">getShort</span>(<span class=\"pl-c1\">0</span>)).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s1\">reverse</span>);\n  }\n\n  <span class=\"pl-c\">// Test is passing</span>\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-smi\">void</span> <span class=\"pl-en\">endianTestWithoutCallingOrder</span>() {\n    <span class=\"pl-smi\">short</span> <span class=\"pl-s1\">message</span> = (<span class=\"pl-smi\">short</span>) <span class=\"pl-c1\">0xD050</span>;\n    <span class=\"pl-smi\">short</span> <span class=\"pl-s1\">reverse</span> = (<span class=\"pl-smi\">short</span>) <span class=\"pl-c1\">0x50D0</span>;\n    <span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">b</span> = <span class=\"pl-smi\">Unpooled</span>.<span class=\"pl-en\">buffer</span>(<span class=\"pl-c1\">1024</span>).<span class=\"pl-en\">writeShortLE</span>(<span class=\"pl-s1\">message</span>);\n\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">b</span>.<span class=\"pl-en\">getShortLE</span>(<span class=\"pl-c1\">0</span>)).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s1\">message</span>);\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">b</span>.<span class=\"pl-en\">getShort</span>(<span class=\"pl-c1\">0</span>)).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s1\">reverse</span>);\n  }\n}</pre></div>\n<p dir=\"auto\">Run <em>gradle test</em></p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.54.Final - 4.1.68.Final</p>\n<p dir=\"auto\">Earlier versions before 4.1.54 were good.</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"11.0.11\" 2021-04-20 LTS<br>\nOpenJDK Runtime Environment Zulu11.48+21-CA (build 11.0.11+9-LTS)<br>\nOpenJDK 64-Bit Server VM Zulu11.48+21-CA (build 11.0.11+9-LTS, mixed mode)</p>\n<p dir=\"auto\">Other JVMs the same.</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin Kernel Version 20.6.0<br>\nOther platforms the same.</p>",
                "resourcePath": "/netty/netty/issues/11700",
                "createdAt": "2021-09-21T19:09:38Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Epoll compiled on GLIBC only supports GLIBC at runtime",
        "url": "https://github.com/netty/netty/pull/11722",
        "resourcePath": "/netty/netty/pull/11722",
        "createdAt": "2021-09-29T17:32:58Z",
        "number": 11722,
        "mergeCommit": {
          "oid": "f87abab779613cbe730fc0fa8fd32fa7c90609d1",
          "message": "Epoll compiled on GLIBC only supports GLIBC at runtime (#11722)\n\nMotivation:\r\nIt is possible to run into JVM crashes when our native binaries are compiled for one libc but then linked with another at runtime.\r\nThere is no guarantee that their ABIs will be compatible, and this can cause all sorts of trouble.\r\nAll our Linux binaries are compiled for GLIBC, so it makes sense to check that any binary compiled for GLIBC also ends up with GLIBC at runtime.\r\nEspecially since alternative libc implementations, such as musl, are getting increasingly popular in a containerised/serverless world.\r\n\r\nModification:\r\nAdd a check when loading the epoll native library that verifies: if the library was compiled for GLIBC, then we must not have a Musl libc loaded at runtime.\r\nThe key is to make this check without making any libc calls in our native code.\r\nWe make this check by reading `/proc/self/maps`, which contain paths for all loaded libraries in our process.\r\nMusl libc often have paths with a particular pattern to their name, so we look for that.\r\nAt compile time, we rely on `__GLIBC__` to determine if the binary is compiled for GLIBC or not.\r\n\r\nResult:\r\nEpoll is now reported as not available when running a GLIBC binary on a Musl based system.\r\nPreviously, epoll would be reported as available, but could cause JVM crashes.",
          "commitUrl": "https://github.com/netty/netty/commit/f87abab779613cbe730fc0fa8fd32fa7c90609d1",
          "parents": {
            "nodes": [
              {
                "oid": "332e68411e87062a0c80a7be7e4f58a18351c0df",
                "message": "Upgrade to netty-tcnative 2.0.44.Final (#11730)\n\nMotivation:\r\n\r\nA new version of netty-tcnative was released\r\n\r\nModifications:\r\n\r\nUpgrade to 2.0.44.Final\r\n\r\nResult:\r\n\r\nUse latest version"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/c/netty_epoll_native.c"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/java/io/netty/channel/epoll/Native.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/java/io/netty/channel/epoll/NativeStaticallyReferencedJniMethods.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84sdoxp2gAoZDRlOTQ0MWU5NDE3ZDU4ZDIyMWZlM2NmMDVkMjYxNGZkMDNlYmIzNA",
                "url": "https://github.com/netty/netty/pull/11722/commits/d4e9441e9417d58d221fe3cf05d2614fd03ebb34"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11701,
                "url": "https://github.com/netty/netty/issues/11701",
                "title": "Throwing an exception in case glibc is missing instead of segfaulting the JVM",
                "bodyHTML": "<p dir=\"auto\">It seems Netty's native support depends on glibc (btw is this documented?).<br>\nWhen glibc is missing (for example using vanilla Alpine), the JVM could end up with a crash (<code class=\"notranslate\">SIGSEGV</code>), see details in this issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"996663427\" data-permission-text=\"Title is private\" data-url=\"https://github.com/micrometer-metrics/micrometer/issues/2776\" data-hovercard-type=\"issue\" data-hovercard-url=\"/micrometer-metrics/micrometer/issues/2776/hovercard\" href=\"https://github.com/micrometer-metrics/micrometer/issues/2776\">micrometer-metrics/micrometer#2776</a></p>\n<p dir=\"auto\">It also seems that <code class=\"notranslate\">Epoll.isAvailable()</code> returns <code class=\"notranslate\">true</code> even if glibc is missing.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Throwing an exception</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">JVM crash</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Using Netty native with an environment that does not have glibc, e.g.: vanilla Alpine</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">This seems to be a known issue, please let me know if you really need a reproducer.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\"><code class=\"notranslate\">4.1.68</code> (latest)</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Latest 11:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" \u276f docker run --rm 'azul/zulu-openjdk-alpine:11-jre' 'sh' '-c' 'java --version'\nopenjdk 11.0.12 2021-07-20 LTS\nOpenJDK Runtime Environment Zulu11.50+19-CA (build 11.0.12+7-LTS)\nOpenJDK 64-Bit Server VM Zulu11.50+19-CA (build 11.0.12+7-LTS, mixed mode)\"><pre class=\"notranslate\"> \u276f docker run --rm <span class=\"pl-s\"><span class=\"pl-pds\">'</span>azul/zulu-openjdk-alpine:11-jre<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>sh<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>-c<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>java --version<span class=\"pl-pds\">'</span></span>\nopenjdk 11.0.12 2021-07-20 LTS\nOpenJDK Runtime Environment Zulu11.50+19-CA (build 11.0.12+7-LTS)\nOpenJDK 64-Bit Server VM Zulu11.50+19-CA (build 11.0.12+7-LTS, mixed mode)</pre></div>\n<p dir=\"auto\">Or also latest 17:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" \u276f docker run --rm 'bellsoft/liberica-openjdk-alpine-musl:17' 'sh' '-c' 'java --version'\nopenjdk 17 2021-09-14 LTS\nOpenJDK Runtime Environment (build 17+35-LTS)\nOpenJDK 64-Bit Server VM (build 17+35-LTS, mixed mode)\"><pre class=\"notranslate\"> \u276f docker run --rm <span class=\"pl-s\"><span class=\"pl-pds\">'</span>bellsoft/liberica-openjdk-alpine-musl:17<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>sh<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>-c<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>java --version<span class=\"pl-pds\">'</span></span>\nopenjdk 17 2021-09-14 LTS\nOpenJDK Runtime Environment (build 17+35-LTS)\nOpenJDK 64-Bit Server VM (build 17+35-LTS, mixed mode)</pre></div>\n<p dir=\"auto\">I assume this is an issue in every JRE that is currently supported.</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Both images above have the same output:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" \u276f docker run --rm 'azul/zulu-openjdk-alpine:11-jre' 'sh' '-c' 'uname -a'\nLinux 1ee8d1090f14 5.10.47-linuxkit #1 SMP Sat Jul 3 21:51:47 UTC 2021 x86_64 Linux\"><pre class=\"notranslate\"> \u276f docker run --rm <span class=\"pl-s\"><span class=\"pl-pds\">'</span>azul/zulu-openjdk-alpine:11-jre<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>sh<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>-c<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>uname -a<span class=\"pl-pds\">'</span></span>\nLinux 1ee8d1090f14 5.10.47-linuxkit <span class=\"pl-c\"><span class=\"pl-c\">#</span>1 SMP Sat Jul 3 21:51:47 UTC 2021 x86_64 Linux</span></pre></div>\n<p dir=\"auto\">I assume this is an issue in every OS where glibc is missing.</p>",
                "resourcePath": "/netty/netty/issues/11701",
                "createdAt": "2021-09-22T02:15:46Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "run timeout task at new thread to avoid the worker thread potential accumulative delay or blocking",
        "url": "https://github.com/netty/netty/pull/11723",
        "resourcePath": "/netty/netty/pull/11723",
        "createdAt": "2021-09-30T04:46:35Z",
        "number": 11723,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/HashedWheelTimer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/HashedWheelTimerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84sfBTh2gAoN2QxODRhMzRmNGFiNWI3ODdkZDU2MjcyOWI4YmI5ZTUxMzNkMjY0Zg",
                "url": "https://github.com/netty/netty/pull/11723/commits/7d184a34f4ab5b787dd562729b8bb9e5133d264f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11724,
                "url": "https://github.com/netty/netty/issues/11724",
                "title": "HashedWheelTimer eventloop processing will be deferred if many timeout tasks occurred concurrently, and the eventloop will be blocked if one of these timeout tasks hangs.",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">timeout tasks should be executed at new thread which is different from the worker thread of HashedWheelTimer.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">timeout tasks are executed by the worker thread, the worker thread will be blocked if timeout task hangs.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">add Thread.sleep(123456789)  in the timeout task.</p>",
                "resourcePath": "/netty/netty/issues/11724",
                "createdAt": "2021-09-30T04:47:46Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow to specify taskExecutor when construct HashedWheelTimer",
        "url": "https://github.com/netty/netty/pull/11728",
        "resourcePath": "/netty/netty/pull/11728",
        "createdAt": "2021-10-04T06:42:56Z",
        "number": 11728,
        "mergeCommit": {
          "oid": "3a5495864e38db4723696805a0fd4b6e238bef15",
          "message": "Allow to specify taskExecutor when construct HashedWheelTimer (#11728)\n\nMotivation:\r\n\r\nSometimes it might be useful to specify an Executor that will be used to execute the TimerTasks to ensure that the wheel is processed in a timely manner.\r\n\r\nModifications:\r\n\r\n- Add constructor that allows to specify an Executor\r\n- Add unit test\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11724",
          "commitUrl": "https://github.com/netty/netty/commit/3a5495864e38db4723696805a0fd4b6e238bef15",
          "parents": {
            "nodes": [
              {
                "oid": "f87abab779613cbe730fc0fa8fd32fa7c90609d1",
                "message": "Epoll compiled on GLIBC only supports GLIBC at runtime (#11722)\n\nMotivation:\r\nIt is possible to run into JVM crashes when our native binaries are compiled for one libc but then linked with another at runtime.\r\nThere is no guarantee that their ABIs will be compatible, and this can cause all sorts of trouble.\r\nAll our Linux binaries are compiled for GLIBC, so it makes sense to check that any binary compiled for GLIBC also ends up with GLIBC at runtime.\r\nEspecially since alternative libc implementations, such as musl, are getting increasingly popular in a containerised/serverless world.\r\n\r\nModification:\r\nAdd a check when loading the epoll native library that verifies: if the library was compiled for GLIBC, then we must not have a Musl libc loaded at runtime.\r\nThe key is to make this check without making any libc calls in our native code.\r\nWe make this check by reading `/proc/self/maps`, which contain paths for all loaded libraries in our process.\r\nMusl libc often have paths with a particular pattern to their name, so we look for that.\r\nAt compile time, we rely on `__GLIBC__` to determine if the binary is compiled for GLIBC or not.\r\n\r\nResult:\r\nEpoll is now reported as not available when running a GLIBC binary on a Musl based system.\r\nPreviously, epoll would be reported as available, but could cause JVM crashes."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/HashedWheelTimer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/HashedWheelTimerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84snwkI2gAoZjBjMTQ1ZWM4MjQzYzc0OGQ2OTc4NTZkMTJhOTFmYWMwNTljYzg5Nw",
                "url": "https://github.com/netty/netty/pull/11728/commits/f0c145ec8243c748d697856d12a91fac059cc897"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11724,
                "url": "https://github.com/netty/netty/issues/11724",
                "title": "HashedWheelTimer eventloop processing will be deferred if many timeout tasks occurred concurrently, and the eventloop will be blocked if one of these timeout tasks hangs.",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">timeout tasks should be executed at new thread which is different from the worker thread of HashedWheelTimer.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">timeout tasks are executed by the worker thread, the worker thread will be blocked if timeout task hangs.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">add Thread.sleep(123456789)  in the timeout task.</p>",
                "resourcePath": "/netty/netty/issues/11724",
                "createdAt": "2021-09-30T04:47:46Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Ensure ServerChannel implementations accept multiple connections per \u2026",
        "url": "https://github.com/netty/netty/pull/11729",
        "resourcePath": "/netty/netty/pull/11729",
        "createdAt": "2021-10-04T08:37:02Z",
        "number": 11729,
        "mergeCommit": {
          "oid": "c3e33d376582fe165b4a891b035d39b84bee84be",
          "message": "Ensure ServerChannel implementations accept multiple connections per read loop (#11729)\n\n\r\nMotivation:\r\n\r\nDue how the DefaultMaxMessagesRecvByteBufAllocator is implemented we did only ever accept one connection per read loop even thought there might be more pending.\r\n\r\nModifications:\r\n\r\n- Introduce ServerChannelRecvByteBufAllocator and use it for all our ServerChannel implementations\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11708",
          "commitUrl": "https://github.com/netty/netty/commit/c3e33d376582fe165b4a891b035d39b84bee84be",
          "parents": {
            "nodes": [
              {
                "oid": "9802afd141951f6d2d7223896161bb8746ab3014",
                "message": "Make SniCompletionEvent constructor public (#11731)\n\n\r\nMotivation:\r\n\r\nIt is useful to re-use these events (as for example in QUIC) so let us allow to do so by changing the visibility to public\r\n\r\nModifications:\r\n\r\nChange constructors to public\r\n\r\nResult:\r\n\r\nBe able to re-use the events"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/java/io/netty/channel/epoll/EpollServerChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/src/main/java/io/netty/channel/kqueue/KQueueChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-sctp/src/main/java/io/netty/channel/sctp/DefaultSctpServerChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/DefaultMaxMessagesRecvByteBufAllocator.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport/src/main/java/io/netty/channel/ServerChannelRecvByteBufAllocator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/local/LocalServerChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/socket/DefaultServerSocketChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport/src/test/java/io/netty/channel/DefaultMaxMessagesRecvByteBufAllocatorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84soD232gAoOTc1ZDU1YTFmNGU4MzZlN2NhMTRhZDA0MzNjN2RiMmQ2NTc2NDg2NQ",
                "url": "https://github.com/netty/netty/pull/11729/commits/975d55a1f4e836e7ca14ad0433c7db2d65764865"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11708,
                "url": "https://github.com/netty/netty/issues/11708",
                "title": "Confusion about NioServerSokcetChannel process OP_ACCEPT event in io.netty.channel.nio.AbstractNioMessageChannel.NioMessageUnsafe#read Method",
                "bodyHTML": "<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.56.final</p>\n<h3 dir=\"auto\">The purpose of  this issue</h3>\n<p dir=\"auto\">I have been reading Netty Souce Code recently\uff0cbut i have some confusions about <code class=\"notranslate\">AbstractNioMessageChannel.NioMessageUnsafe#read</code> method  logic which process the OP_ACCPET event in <code class=\"notranslate\">NioServerSocketChannel</code>\u3002and i want to get helped\uff01\uff01</p>\n<h3 dir=\"auto\">my confusion</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                   do {\n                        int localRead = doReadMessages(readBuf);\n                        if (localRead == 0) {\n                            break;\n                        }\n                        if (localRead &lt; 0) {\n                            closed = true;\n                            break;\n                        }\n                        allocHandle.incMessagesRead(localRead);\n                    } while (allocHandle.continueReading());\"><pre class=\"notranslate\"><code class=\"notranslate\">                   do {\n                        int localRead = doReadMessages(readBuf);\n                        if (localRead == 0) {\n                            break;\n                        }\n                        if (localRead &lt; 0) {\n                            closed = true;\n                            break;\n                        }\n                        allocHandle.incMessagesRead(localRead);\n                    } while (allocHandle.continueReading());\n</code></pre></div>\n<p dir=\"auto\">this do{...}while loop block is executed only once by main reactor thread \uff08NioEventLoop\uff09in every event loop\u3002</p>\n<p dir=\"auto\">this code <code class=\"notranslate\">allocHandle.continueReading()</code> is always return false here, no matter how many clients are connect to the server side at the same time \u3002because <code class=\"notranslate\">totalBytesRead</code> is always <code class=\"notranslate\">0</code> in OP_ACCEPT situation</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5794695/134673745-e77df965-2429-4637-9dcc-b3991763626c.png\"><img src=\"https://user-images.githubusercontent.com/5794695/134673745-e77df965-2429-4637-9dcc-b3991763626c.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><strong>so my consusion</strong> is about  the purpose of this do{...}while loop\uff0cbecause <code class=\"notranslate\">allocHandle.continueReading()</code> is always return false here</p>\n<h3 dir=\"auto\">my point of view</h3>\n<p dir=\"auto\">Let\u2018s suppose a situation that there are mutiple clients(for example three clients) connect to the server side at the same time\uff0cbut currently<br>\nthis do{...}while loop can only create one NioSocketChannel and then quick the do{...}while loop\u3002</p>\n<p dir=\"auto\">and the main  reactor thread back to block in the <code class=\"notranslate\">selector.select();</code> again\u3002because there are still two clients left at this time ,so the main reactor thread will not be blocked in <code class=\"notranslate\">selector.select()</code> , so main reactor thread continue process the OP_ACCEPT  event ,execute the NioMessageUnsafe#read  again to create another NioSocketChannel for the second cilent\u3002</p>\n<p dir=\"auto\">i think creation of NioSocketChannel for those three cilents should be done in do{...}while loop  together\u3002but max num of this loop shoud be limitd to 16\u3002</p>\n<p dir=\"auto\">this is More effective for handling OP_ACCEPT  event in my point of view</p>",
                "resourcePath": "/netty/netty/issues/11708",
                "createdAt": "2021-09-24T12:34:41Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix the javadoc for ByteBuf.setCharSequence",
        "url": "https://github.com/netty/netty/pull/11793",
        "resourcePath": "/netty/netty/pull/11793",
        "createdAt": "2021-10-25T08:51:56Z",
        "number": 11793,
        "mergeCommit": {
          "oid": "3a1fb3f10df18eece68e88a86d4561fdd1b7723a",
          "message": "Fix the javadoc for ByteBuf.setCharSequence (#11793)\n\nMotivation:\r\nThe javadoc appeared to have been copied from a write* method, but it has set* semantics.\r\n\r\nModification:\r\nUpdate the javadoc to match its intended semantics.\r\n\r\nResult:\r\nThe javadocs now describe the intended behaviour.\r\n\r\nFixes #11784",
          "commitUrl": "https://github.com/netty/netty/commit/3a1fb3f10df18eece68e88a86d4561fdd1b7723a",
          "parents": {
            "nodes": [
              {
                "oid": "e1d2a95c4a4bc77ea2516c66af052e309d426c60",
                "message": "Exclude transitive dependencies of rarely used modules from netty-all (#11786)\n\nMotivation:\r\nNetty-all is used to unconditionally pull in all netty modules with the same version.\r\nSome of these modules have dependencies themselves that are pulled in transitively, yet they are rarely used.\r\n\r\nModification:\r\nExclude the transitive dependencies of netty-codec-xml, netty-transport-rxtx, and netty-transport-udt.\r\n\r\nThose who wish to restore these modules to working order can additionally depend on org.fasterxml:aalto-xml, org.rxtx:rxtx, or com.barchart.udt:barchart-udt-bundle, respectively.\r\n\r\nResult:\r\nDepending on netty-all no longer transitively depends on any non-netty maven modules."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/ByteBuf.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84tnIKD2gAoNzBiNGU3YjBhNGVlZjFkMmZhMjUyMjg4NDMwYjZhY2FhZDE2ZGM0Mg",
                "url": "https://github.com/netty/netty/pull/11793/commits/70b4e7b0a4eef1d2fa252288430b6acaad16dc42"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11784,
                "url": "https://github.com/netty/netty/issues/11784",
                "title": "It has a problem that setCharSequence method description at ByteBuf.class",
                "bodyHTML": "<p dir=\"auto\">This is just a minor problem\uff0cI found that setCharSequence method description at ByteBuf.class\u3002</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    /**\n     * Writes the specified {@link CharSequence} at the current {@code writerIndex} and increases\n     * the {@code writerIndex} by the written bytes.\n     *\n     * @param index on which the sequence should be written\n     * @param sequence to write\n     * @param charset that should be used.\n     * @return the written number of bytes.\n     * @throws IndexOutOfBoundsException\n     *         if {@code this.writableBytes} is not large enough to write the whole sequence\n     */\n    public abstract int setCharSequence(int index, CharSequence sequence, Charset charset);\"><pre class=\"notranslate\"><code class=\"notranslate\">    /**\n     * Writes the specified {@link CharSequence} at the current {@code writerIndex} and increases\n     * the {@code writerIndex} by the written bytes.\n     *\n     * @param index on which the sequence should be written\n     * @param sequence to write\n     * @param charset that should be used.\n     * @return the written number of bytes.\n     * @throws IndexOutOfBoundsException\n     *         if {@code this.writableBytes} is not large enough to write the whole sequence\n     */\n    public abstract int setCharSequence(int index, CharSequence sequence, Charset charset);\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/11784",
                "createdAt": "2021-10-21T08:54:57Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Move java classes out of the native modules",
        "url": "https://github.com/netty/netty/pull/11798",
        "resourcePath": "/netty/netty/pull/11798",
        "createdAt": "2021-10-26T09:51:02Z",
        "number": 11798,
        "mergeCommit": {
          "oid": "6a84af796571c7b54f0bb314db7f3bd8dd194311",
          "message": "Move java classes out of the native modules (#11798)\n\nMotivation:\r\n\r\nTo ensure the user doesnt end up with the same classes multiple times in the classpath when including native dependencies for different platforms we need to ensure we not include the java classes in this jars but provide them as seperate modules.\r\n\r\nModifications:\r\n\r\n- Introduces a *-classes-* module for each *-native-* module and depend on it from the native module\r\n- Add entries to the bom\r\n- Depend on the correct artifacts in netty-all to ensure we not end up with the same classes multiple times\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11791",
          "commitUrl": "https://github.com/netty/netty/commit/6a84af796571c7b54f0bb314db7f3bd8dd194311",
          "parents": {
            "nodes": [
              {
                "oid": "658de70da9ce783a97c290d7fcffda149bdcef2f",
                "message": "Update Groovy versions (#11800)\n\nMotivation:\r\nThe old Groovy versions are running into compatibility issues with the latest JDK snapshots.\r\n\r\nModification:\r\nUpdate the groovy maven plugin and its groovy dependency to the latest versions.\r\nIt looks like groovy-all is now a pom-dependency, so we switch to just groovy since we don't need what's in -all beyond that.\r\n\r\nResult:\r\nWe now build on the latest JDK snapshots."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerSocketChannel.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueServerSocketChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueSocketChannel.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueSocketChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueStaticallyReferencedJniMethods.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/Native.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/NativeLongArray.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84trGdi2gAoMjlmOGJjYzg3MDhhZTRjNTM0M2VjYjM0NzE0ZTc1ODFhYWNmNjA5Yg",
                "url": "https://github.com/netty/netty/pull/11798/commits/29f8bcc8708ae4c5343ecb34714e7581aacf609b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11791,
                "url": "https://github.com/netty/netty/issues/11791",
                "title": "Maven build issues with 4.1.69-Final (Shaded Plugin) - overlapping classes",
                "bodyHTML": "<p dir=\"auto\">It looks like this release introduced a new packaging structure in 'netty-all'. The compiles were warning free using Maven's Shaded jar plugin on 4.1.68-Final.</p>\n<p dir=\"auto\">While this is not a show-stopper, all warnings are looked at carefully as they could cause issues later. I was able to remove the Apple Silicon binaries, but these warnings still remain.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">No WARNINGS (overlapped classes)</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">[WARNING] netty-transport-native-epoll-4.1.69.Final-linux-x86_64.jar, netty-transport-native-epoll-4.1.69.Final.jar define 57 overlapping classes:<br>\n[WARNING]   - io.netty.channel.epoll.AbstractEpollChannel<br>\n[WARNING]   - io.netty.channel.epoll.AbstractEpollChannel$1<br>\n[WARNING]   - io.netty.channel.epoll.AbstractEpollChannel$2<br>\n[WARNING]   - io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe<br>\n[WARNING]   - io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe$1<br>\n[WARNING]   - io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe$2<br>\n[WARNING]   - io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe$3<br>\n[WARNING]   - io.netty.channel.epoll.AbstractEpollServerChannel<br>\n[WARNING]   - io.netty.channel.epoll.AbstractEpollServerChannel$EpollServerSocketUnsafe<br>\n[WARNING]   - io.netty.channel.epoll.AbstractEpollStreamChannel<br>\n[WARNING]   - 47 more...<br>\n[WARNING] maven-shade-plugin has detected that some class files are<br>\n[WARNING] present in two or more JARs. When this happens, only one<br>\n[WARNING] single version of the class is copied to the uber jar.<br>\n[WARNING] Usually this is not harmful and you can skip these warnings,<br>\n[WARNING] otherwise try to manually exclude artifacts based on<br>\n[WARNING] mvn dependency:tree -Ddetail=true and the above output.<br>\n[WARNING] See <a href=\"http://maven.apache.org/plugins/maven-shade-plugin/\" rel=\"nofollow\">http://maven.apache.org/plugins/maven-shade-plugin/</a></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">mvn shaded:shaded</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.69-Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"1.8.0_302\"</p>\n<h3 dir=\"auto\">Maven version</h3>\n<p dir=\"auto\">Maven 3.8.3 (latest stable)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Alpine Linux 3.1<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/9642883/138649643-23312aad-a274-4faa-827a-d2d09172e7ed.png\"><img width=\"1033\" alt=\"screenshot_759\" src=\"https://user-images.githubusercontent.com/9642883/138649643-23312aad-a274-4faa-827a-d2d09172e7ed.png\" style=\"max-width: 100%;\"></a><br>\n4</p>",
                "resourcePath": "/netty/netty/issues/11791",
                "createdAt": "2021-10-25T05:09:29Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make static final buffers unreleasable and read-only",
        "url": "https://github.com/netty/netty/pull/11802",
        "resourcePath": "/netty/netty/pull/11802",
        "createdAt": "2021-10-27T02:56:47Z",
        "number": 11802,
        "mergeCommit": {
          "oid": "30d9404b06d07447ea15b2e1584988d470828829",
          "message": "Make static final buffers unreleasable and read-only (#11802)\n\nMotivation:\r\n\r\nFix https://github.com/netty/netty/issues/11792 and avoid potential corruption issues caused by writable shared buffers.\r\n\r\nTL;DR:\r\n\r\n`HttpObjectEncoder` sends a duplicate of its static final `ByteBuf` field to encode HTTP chunks, such as `0\\r\\n\\r\\n`. This reused buffer is neither read-only nor unexpandable, and thus anyone in the pipeline can modify or expand it. As a result, `SslHandler` can sometimes expand it and append stuff to it, causing unexpected data corruption.\r\n\r\nModification:\r\n\r\nMost of the static final buffers in the project are made unreleasable and read-only by wrapping them in `Unpooled.unreleasableBuffer(...).asReadOnly()`. Buffers that were excluded:\r\n\r\n- Unpooled.EMPTY_BUFFER - EmptyByteBuf instances are not readable/writable/releasable. Wrapping this buffer in `Unpooled.unreleasableBuffer(...).asReadOnly()` would change the instance type, since it's a public API it could be a potential breaking change.\r\n- ReplayingDecoderByteBuf.EMPTY_BUFFER - since it uses Unpooled.EMPTY_BUFFER and not releasable too.\r\n\r\nExcluded buffers are marked with `SuppressWarnings` to skip check added in https://github.com/netty/netty-build/pull/12.\r\n\r\nResult:\r\n\r\nFixes #11792.",
          "commitUrl": "https://github.com/netty/netty/commit/30d9404b06d07447ea15b2e1584988d470828829",
          "parents": {
            "nodes": [
              {
                "oid": "d6f029c279a6def4e2d4216b2c2b3e446a357b70",
                "message": "Update java versions to latest update (#11812)\n\nMotivation:\r\n\r\nNew java updates were released\r\n\r\nModifications:\r\n\r\nUpdate java versions\r\n\r\nResult:\r\n\r\nBuild with latest version"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/CleartextHttp2ServerUpgradeHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-smtp/src/main/java/io/netty/handler/codec/smtp/SmtpRequestEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/ReplayingDecoderByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/test/java/io/netty/handler/codec/compression/AbstractDecoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/test/java/io/netty/handler/codec/compression/BrotliDecoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "example/src/main/java/io/netty/example/http2/helloworld/frame/server/HelloWorldHttp2Handler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "example/src/main/java/io/netty/example/http2/helloworld/multiplex/server/HelloWorldHttp2Handler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "example/src/main/java/io/netty/example/http2/helloworld/server/HelloWorldHttp2Handler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite-http2/src/main/java/io/netty/testsuite/http2/HelloWorldHttp2Handler.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84tt2PB2gAoNjQ0ODA0ZGJhODllZGEwMzUwYWRmOGZkMjAyODJjOWFlODA2ZWI4ZA",
                "url": "https://github.com/netty/netty/pull/11802/commits/644804dba89eda0350adf8fd20282c9ae806eb8d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11792,
                "url": "https://github.com/netty/netty/issues/11792",
                "title": "Data corruption due to interaction between `SslHandler` and `HttpObjectEncoder`",
                "bodyHTML": "<p dir=\"auto\">TL;DR:</p>\n<p dir=\"auto\"><code class=\"notranslate\">HttpObjectEncoder</code> sends a duplicate of its static final <code class=\"notranslate\">ByteBuf</code> field to encode HTTP chunks, such as <code class=\"notranslate\">0\\r\\n\\r\\n</code>. This reused buffer is neither read-only nor unexpandable, and thus anyone in the pipeline can modify or expand it. As a result, <code class=\"notranslate\">SslHandler</code> can sometimes expand it and append stuff to it, causing unexpected data corruption. It'd be nice if this issue is fixed soon and a new release is out given its severity.</p>\n<p dir=\"auto\">Here's the full analysis from my colleague <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/alexc-db/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alexc-db\">@alexc-db</a>:</p>\n<ol dir=\"auto\">\n<li>When <code class=\"notranslate\">Channel.flush()</code> is called, <code class=\"notranslate\">SslHandler</code> starts getting items from the <code class=\"notranslate\">pendingUnencryptedWrites</code> queue [1] - it gets entries from the internal <code class=\"notranslate\">bufAndListenerPairs</code> and accumulates them in the <code class=\"notranslate\">toReturn</code> buffer [2].</li>\n<li>For the first entry, <code class=\"notranslate\">toReturn</code> is <code class=\"notranslate\">null</code> and thus <code class=\"notranslate\">composeFirst</code> is called. That method by default just returns the reference to the first entry (it\u2019s overridden in <code class=\"notranslate\">SslHandlerCoalescingBufferQueue</code> to have special handling for <code class=\"notranslate\">CompositeByteBuf</code>, but it\u2019s not relevant to the issue here). The following calls are calling <code class=\"notranslate\">compose</code> and pass <code class=\"notranslate\">toReturn</code> there.</li>\n<li>Internally, <code class=\"notranslate\">compose</code> calls <code class=\"notranslate\">attemptCopyToCumulation</code> which checks if <code class=\"notranslate\">toReturn</code> is writable and its capacity can be expanded to write new bytes from the following queued buffers - if it passes checks in [3], <code class=\"notranslate\">attemptCopyToCumulation</code> copies bytes from the next entries to the original <code class=\"notranslate\">toReturn</code> buffer (as we saw above it can be the first entry), if it does not pass the checks - <code class=\"notranslate\">SslHandlerCoalescingBufferQueue</code> calls <code class=\"notranslate\">copyAndCompose</code> which creates a new bigger <code class=\"notranslate\">buf</code> and copies bytes from <code class=\"notranslate\">toReturn</code> and next entry there, making it a new <code class=\"notranslate\">toReturn</code>.</li>\n<li>Given the behavior above - if <code class=\"notranslate\">flush</code> is called and <code class=\"notranslate\">bufAndListenerPairs</code> has multiple buffers queued where the first entry is writable, had enough capacity for the bytes in the next entries, and shared across multiple threads - two threads will start copying bytes into the same memory addresses which will cause corruption. In our local reproducer that has more dependencies that just Netty, it was <code class=\"notranslate\">ZERO_CRLF_CRLF_BUF</code> [4] (<code class=\"notranslate\">duplicate()</code> call doesn\u2019t make a copy, just wraps the original direct buffer).<br>\nI was able to make tests pass by marking <code class=\"notranslate\">ZERO_CRLF_CRLF_BUF read-only</code> [5].<br>\n[1] <a href=\"https://github.com/netty/netty/blob/netty-4.1.68.Final/handler/src/main/java/io/netty/handler/ssl/SslHandler.java#L817\">https://github.com/netty/netty/blob/netty-4.1.68.Final/handler/src/main/java/io/netty/handler/ssl/SslHandler.java#L817</a><br>\n[2] <a href=\"https://github.com/netty/netty/blob/netty-4.1.68.Final/transport/src/main/java/io/netty/channel/AbstractCoalescingBufferQueue.java#L175\">https://github.com/netty/netty/blob/netty-4.1.68.Final/transport/src/main/java/io/netty/channel/AbstractCoalescingBufferQueue.java#L175</a><br>\n[3] <a href=\"https://github.com/netty/netty/blob/netty-4.1.68.Final/handler/src/main/java/io/netty/handler/ssl/SslHandler.java#L2326-L2334\">https://github.com/netty/netty/blob/netty-4.1.68.Final/handler/src/main/java/io/netty/handler/ssl/SslHandler.java#L2326-L2334</a><br>\n[4] <a href=\"https://github.com/netty/netty/blob/netty-4.1.68.Final/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java#L210\">https://github.com/netty/netty/blob/netty-4.1.68.Final/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java#L210</a><br>\n[5]</li>\n</ol>\n<div class=\"highlight highlight-source-diff notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java\n--- a/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java (revision 7d34282f9d2ffdd64c91cb4780b09902d9779b92)\n+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java (date 1635112426650)\n@@ -50,9 +50,9 @@\n     static final int CRLF_SHORT = (CR &lt;&lt; 8) | LF;\n     private static final int ZERO_CRLF_MEDIUM = ('0' &lt;&lt; 16) | CRLF_SHORT;\n     private static final byte[] ZERO_CRLF_CRLF = { '0', CR, LF, CR, LF };\n-    private static final ByteBuf CRLF_BUF = unreleasableBuffer(directBuffer(2).writeByte(CR).writeByte(LF));\n+    private static final ByteBuf CRLF_BUF = unreleasableBuffer(directBuffer(2).writeByte(CR).writeByte(LF).asReadOnly());\n     private static final ByteBuf ZERO_CRLF_CRLF_BUF = unreleasableBuffer(directBuffer(ZERO_CRLF_CRLF.length)\n-            .writeBytes(ZERO_CRLF_CRLF));\n+            .writeBytes(ZERO_CRLF_CRLF).asReadOnly());\n     private static final float HEADERS_WEIGHT_NEW = 1 / 5f;\n     private static final float HEADERS_WEIGHT_HISTORICAL = 1 - HEADERS_WEIGHT_NEW;\n     private static final float TRAILERS_WEIGHT_NEW = HEADERS_WEIGHT_NEW;\"><pre class=\"notranslate\"><span class=\"pl-c1\">diff --git a/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java</span>\n<span class=\"pl-md\">--- a/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java (revision 7d34282f9d2ffdd64c91cb4780b09902d9779b92)</span>\n<span class=\"pl-mi1\">+++ b/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java (date 1635112426650)</span>\n<span class=\"pl-mdr\">@@ -50,9 +50,9 @@</span>\n     static final int CRLF_SHORT = (CR &lt;&lt; 8) | LF;\n     private static final int ZERO_CRLF_MEDIUM = ('0' &lt;&lt; 16) | CRLF_SHORT;\n     private static final byte[] ZERO_CRLF_CRLF = { '0', CR, LF, CR, LF };\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>    private static final ByteBuf CRLF_BUF = unreleasableBuffer(directBuffer(2).writeByte(CR).writeByte(LF));</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>    private static final ByteBuf CRLF_BUF = unreleasableBuffer(directBuffer(2).writeByte(CR).writeByte(LF).asReadOnly());</span>\n     private static final ByteBuf ZERO_CRLF_CRLF_BUF = unreleasableBuffer(directBuffer(ZERO_CRLF_CRLF.length)\n<span class=\"pl-md\"><span class=\"pl-md\">-</span>            .writeBytes(ZERO_CRLF_CRLF));</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>            .writeBytes(ZERO_CRLF_CRLF).asReadOnly());</span>\n     private static final float HEADERS_WEIGHT_NEW = 1 / 5f;\n     private static final float HEADERS_WEIGHT_HISTORICAL = 1 - HEADERS_WEIGHT_NEW;\n     private static final float TRAILERS_WEIGHT_NEW = HEADERS_WEIGHT_NEW;</pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.68.Final and 4.1.69.Final and of course possible in older versions.</p>",
                "resourcePath": "/netty/netty/issues/11792",
                "createdAt": "2021-10-25T07:01:44Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "defect"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Correctly handle InputStream.read() when it return -1 during writing \u2026",
        "url": "https://github.com/netty/netty/pull/11837",
        "resourcePath": "/netty/netty/pull/11837",
        "createdAt": "2021-11-15T11:09:09Z",
        "number": 11837,
        "mergeCommit": {
          "oid": "f2cb277b27426c346136b5d71fa9108af25dbdc2",
          "message": "Correctly handle InputStream.read() when it return -1 during writing to the ByteBuf (#11837)\n\nMotivation:\r\n\r\nWe didnt correctly handle the case when the InputStream did reach EOF during writing to the ByteBuf and so return -1.\r\n\r\nModifications:\r\n\r\n- Correctly handle EOF\r\n- Add unit test\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11829",
          "commitUrl": "https://github.com/netty/netty/commit/f2cb277b27426c346136b5d71fa9108af25dbdc2",
          "parents": {
            "nodes": [
              {
                "oid": "6978e13ef6c90f4f3dbf27870e03077e090d5b8c",
                "message": "Correctly include fedora in netty-tcnative classifiers (#11838)\n\nMotivation:\r\n\r\nWe did not include -fedora in the linux-aarch_64 classifier of netty-tcnative and also didnt list linux_x86_64-fedora at all.\r\n\r\nModifications:\r\n\r\n- Fix one classifier and add the missing one\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11834"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/stream/ChunkedStream.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/java/io/netty/handler/stream/ChunkedStreamTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84uhrv-2gAoNmE0Y2U1MjRmZjVkYjM3YWE3NGE3MGFhZGNiZmIyYzM1YTMyZTJkZg",
                "url": "https://github.com/netty/netty/pull/11837/commits/6a4ce524ff5db37aa74a70aadcbfb2c35a32e2df"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11829,
                "url": "https://github.com/netty/netty/issues/11829",
                "title": "ChunkedStream - readChunk",
                "bodyHTML": "<h3 dir=\"auto\">Netty version 4.1.70</h3>\n<p dir=\"auto\">Been looking a little bit into the code of the ChunkedStream class and the readChunk based on that one test on the async-http-client project were failing on the version Netty 4.1.70.</p>\n<p dir=\"auto\">The readChunk code - see comment in the code with the identified problem:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public ByteBuf readChunk(ByteBufAllocator allocator) throws Exception {\n     if (this.isEndOfInput()) {\n         return null;\n     } else {\n         int availableBytes = this.in.available();\n         int chunkSize;\n         if (availableBytes &lt;= 0) {\n             chunkSize = this.chunkSize;\n         } else {\n             chunkSize = Math.min(this.chunkSize, this.in.available());\n         }\n         boolean release = true;\n         ByteBuf buffer = allocator.buffer(chunkSize);\n \n         ByteBuf var6;\n         try {\n             this.offset += (long)buffer.writeBytes(this.in, chunkSize); \n             //Looks like the code here does not properly handle if the writeBytes method return -1 indicating end of stream\n             release = false;\n             var6 = buffer;\n         } finally {\n             if (release) {\n                 buffer.release();\n             }\n \n         }\n \n         return var6;\n     }\n }\"><pre class=\"notranslate\"><code class=\"notranslate\">public ByteBuf readChunk(ByteBufAllocator allocator) throws Exception {\n     if (this.isEndOfInput()) {\n         return null;\n     } else {\n         int availableBytes = this.in.available();\n         int chunkSize;\n         if (availableBytes &lt;= 0) {\n             chunkSize = this.chunkSize;\n         } else {\n             chunkSize = Math.min(this.chunkSize, this.in.available());\n         }\n         boolean release = true;\n         ByteBuf buffer = allocator.buffer(chunkSize);\n \n         ByteBuf var6;\n         try {\n             this.offset += (long)buffer.writeBytes(this.in, chunkSize); \n             //Looks like the code here does not properly handle if the writeBytes method return -1 indicating end of stream\n             release = false;\n             var6 = buffer;\n         } finally {\n             if (release) {\n                 buffer.release();\n             }\n \n         }\n \n         return var6;\n     }\n }\n</code></pre></div>\n<p dir=\"auto\">Also noted that this case where end of stream is indicated by the return of -1 and where the available method still returned that data was present in the input stream, the writing of the body was not properly terminated.</p>",
                "resourcePath": "/netty/netty/issues/11829",
                "createdAt": "2021-11-10T15:36:20Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Correctly include fedora in netty-tcnative classifiers",
        "url": "https://github.com/netty/netty/pull/11838",
        "resourcePath": "/netty/netty/pull/11838",
        "createdAt": "2021-11-15T11:13:46Z",
        "number": 11838,
        "mergeCommit": {
          "oid": "6978e13ef6c90f4f3dbf27870e03077e090d5b8c",
          "message": "Correctly include fedora in netty-tcnative classifiers (#11838)\n\nMotivation:\r\n\r\nWe did not include -fedora in the linux-aarch_64 classifier of netty-tcnative and also didnt list linux_x86_64-fedora at all.\r\n\r\nModifications:\r\n\r\n- Fix one classifier and add the missing one\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11834",
          "commitUrl": "https://github.com/netty/netty/commit/6978e13ef6c90f4f3dbf27870e03077e090d5b8c",
          "parents": {
            "nodes": [
              {
                "oid": "5d5dac659c440c84eab806357127c194867fd6f6",
                "message": "Add email address to report security issue"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "bom/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84uhsyp2gAoM2IyMTU0ZWQ3NTczYmVjMjdkODNjMWJjZWJkOGUxMDdlMzQwODU2Zg",
                "url": "https://github.com/netty/netty/pull/11838/commits/3b2154ed7573bec27d83c1bcebd8e107e340856f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11834,
                "url": "https://github.com/netty/netty/issues/11834",
                "title": "\u3010pom\u3011\u3010bug\u3011Could not find artifact io.netty:netty-tcnative:jar:linux-aarch_64:2.0.44.Final in maven-mirror (https://repo1.maven.org/maven2/)",
                "bodyHTML": "<p dir=\"auto\">The classifier of\u3010netty-tcnative\u3011is not correct?<br>\nThe pom of \u3010netty-bom-4.1.70.Final.pom\u3011 is something like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            &lt;!-- https://mvnrepository.com/artifact/io.netty/netty-bom --&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;io.netty&lt;/groupId&gt;\n                &lt;artifactId&gt;netty-bom&lt;/artifactId&gt;\n                &lt;version&gt;4.1.70.Final&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">            &lt;!-- https://mvnrepository.com/artifact/io.netty/netty-bom --&gt;\n            &lt;dependency&gt;\n                &lt;groupId&gt;io.netty&lt;/groupId&gt;\n                &lt;artifactId&gt;netty-bom&lt;/artifactId&gt;\n                &lt;version&gt;4.1.70.Final&lt;/version&gt;\n                &lt;type&gt;pom&lt;/type&gt;\n                &lt;scope&gt;import&lt;/scope&gt;\n            &lt;/dependency&gt;\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"      &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;/groupId&gt;\n        &lt;artifactId&gt;netty-tcnative&lt;/artifactId&gt;\n        &lt;version&gt;${tcnative.version}&lt;/version&gt;\n        &lt;classifier&gt;linux-aarch_64&lt;/classifier&gt;\n      &lt;/dependency&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">      &lt;dependency&gt;\n        &lt;groupId&gt;io.netty&lt;/groupId&gt;\n        &lt;artifactId&gt;netty-tcnative&lt;/artifactId&gt;\n        &lt;version&gt;${tcnative.version}&lt;/version&gt;\n        &lt;classifier&gt;linux-aarch_64&lt;/classifier&gt;\n      &lt;/dependency&gt;\n</code></pre></div>\n<p dir=\"auto\">But the file is not right?</p>\n<p dir=\"auto\">\u3010netty-tcnative-2.0.45.Final-linux-aarch_64-fedora.jar\u3011does not exist?<br>\n\u3010netty-tcnative-2.0.45.Final-linux-aarch_64.jar\u3011does exist!</p>\n<p dir=\"auto\">Try these links:</p>\n<p dir=\"auto\"><a href=\"https://repo1.maven.org/maven2/io/netty/netty-tcnative/2.0.45.Final/netty-tcnative-2.0.45.Final-linux-aarch_64-fedora.jar\" rel=\"nofollow\">https://repo1.maven.org/maven2/io/netty/netty-tcnative/2.0.45.Final/netty-tcnative-2.0.45.Final-linux-aarch_64-fedora.jar</a><br>\n<a href=\"https://repo1.maven.org/maven2/io/netty/netty-tcnative/2.0.45.Final/netty-tcnative-2.0.45.Final-linux-aarch_64.jar\" rel=\"nofollow\">https://repo1.maven.org/maven2/io/netty/netty-tcnative/2.0.45.Final/netty-tcnative-2.0.45.Final-linux-aarch_64.jar</a></p>",
                "resourcePath": "/netty/netty/issues/11834",
                "createdAt": "2021-11-12T09:25:48Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix reentrancy bug in SslHandler which can cause IllegalReferenceCoun\u2026",
        "url": "https://github.com/netty/netty/pull/11854",
        "resourcePath": "/netty/netty/pull/11854",
        "createdAt": "2021-11-23T15:35:07Z",
        "number": 11854,
        "mergeCommit": {
          "oid": "2b4ac369669116d152ec8893910a04cdf4d94c65",
          "message": "Fix reentrancy bug in SslHandler which can cause IllegalReferenceCountException (#11854)\n\nMotivation:\r\n\r\nThese days our native SSL implementation makes use of \"tasks\" to allow off-loading operations. Due a bug this could lead to an re-entrancy issue when the Executor used is directly executing the task by the same thread that submits it. As an end-result it was possible to see IllegalReferenceCountException when the tryDecode(...) method will cause the original buffer to be released.\r\n\r\nModifications:\r\n\r\n- Always submit the resume to the eventloop to ensure we never have an re-entrancy problem\r\n- Add unit tests that would fail before the fix.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty-tcnative/issues/680",
          "commitUrl": "https://github.com/netty/netty/commit/2b4ac369669116d152ec8893910a04cdf4d94c65",
          "parents": {
            "nodes": [
              {
                "oid": "167bd2b37a6e035d63f5d0371de3a9d0d495e9d3",
                "message": "Bump Brotli4j to 1.6.0 (#11843)\n\nMotivation:\r\nBrotli4j 1.6.0 was released a few months back and it's the latest version of Brotli4j. However, Netty is still using 1.5.0. So it's time to upgrade.\r\n\r\nModification:\r\nUpgraded Brotli4j from 1.5.0 to 1.6.0\r\n\r\nResult:\r\nUp-to-date version of Brotli4j"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/SslHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84u6h7H2gAoYWYwZTk5MDFhYjIyOTNmNzU4NWNkNWY0MDVmYmFhMjA5MWMyMjNiMA",
                "url": "https://github.com/netty/netty/pull/11854/commits/af0e9901ab2293f7585cd5f405fbaa2091c223b0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 680,
                "url": "https://github.com/netty/netty-tcnative/issues/680",
                "title": "When use_tasks is true, Netty seemingly can supply a freed ByteBuf to SslHandler::decode",
                "bodyHTML": "<p dir=\"auto\">I am not sure whether it is more appropriate to file the bug here or in the main Netty repository.  I'll file it here because I think any fix will have to be done in the C code.</p>\n<p dir=\"auto\">Both grpc-java and Helidon (disclaimer: I work on it, but not in the area affected) tried to upgrade Netty past 4.1.63.Final with no success.  The root cause of both projects' tests' failures seems to be related to the conditional blocks in <code class=\"notranslate\">sslcontext.c</code> that perform different behaviors depending on whether <code class=\"notranslate\">use_tasks</code> is true or not.  I haven't gone deeper than that.</p>\n<p dir=\"auto\">grpc-java issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1026662679\" data-permission-text=\"Title is private\" data-url=\"https://github.com/grpc/grpc-java/issues/8605\" data-hovercard-type=\"issue\" data-hovercard-url=\"/grpc/grpc-java/issues/8605/hovercard?comment_id=973051137&amp;comment_type=issue_comment\" href=\"https://github.com/grpc/grpc-java/issues/8605#issuecomment-973051137\">grpc/grpc-java#8605 (comment)</a></p>\n<p dir=\"auto\">Helidon issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"998747869\" data-permission-text=\"Title is private\" data-url=\"https://github.com/helidon-io/helidon/issues/3423\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/helidon-io/helidon/pull/3423/hovercard?comment_id=973048099&amp;comment_type=issue_comment\" href=\"https://github.com/helidon-io/helidon/pull/3423#issuecomment-973048099\">helidon-io/helidon#3423 (comment)</a></p>\n<p dir=\"auto\">In both issues, I can cause the failing tests in question to succeed by setting the Netty Java system property <code class=\"notranslate\">io.netty.handler.ssl.openssl.useTasks</code> to <code class=\"notranslate\">false</code>.  This System property was introduced by <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"887084537\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/11242\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/11242/hovercard\" href=\"https://github.com/netty/netty/pull/11242\">netty/netty#11242</a> in version 4.1.64.Final.</p>\n<p dir=\"auto\">The presenting issue seems to be that this results in a <code class=\"notranslate\">ByteBuf</code> being supplied to <code class=\"notranslate\">SslHandler::decode</code> whose <code class=\"notranslate\">refCnt()</code> method returns <code class=\"notranslate\">0</code>, so <code class=\"notranslate\">SslHandler</code> <a href=\"https://stackoverflow.com/questions/70012606/what-does-it-mean-when-a-buffers-refcnt-is-0-when-it-is-received-by-the-first\" rel=\"nofollow\">tries to read something from it and gets an <code class=\"notranslate\">IllegalReferenceCountException</code></a>.</p>\n<p dir=\"auto\">I can't speak for the grpc-java project, but in Helidon we noticed this problem <a href=\"https://github.com/oracle/helidon/blob/c412083ee18699483393a15bb459e9430541e941/grpc/server/src/test/java/io/helidon/grpc/server/SslIT.java#L208-L225\">only when doing mutual authentication</a>.  I <em>believe</em> those are the circumstances under which the grpc-java test fails as well, since the failure outputs <code class=\"notranslate\">io.grpc.netty.NettyClientTransportTest &gt; tlsNegotiationServerExecutorShouldSucceed FAILED</code>.</p>\n<p dir=\"auto\">In Helidon's case, and maybe in grpc-java as well?, we're using OpenSSL and so I wonder if this is also related to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"944502493\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/11489\" data-hovercard-type=\"issue\" data-hovercard-url=\"/netty/netty/issues/11489/hovercard\" href=\"https://github.com/netty/netty/issues/11489\">netty/netty#11489</a>.</p>",
                "resourcePath": "/netty/netty-tcnative/issues/680",
                "createdAt": "2021-11-18T18:20:23Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Do not allow third parties to provide Netty's native libraries",
        "url": "https://github.com/netty/netty/pull/11856",
        "resourcePath": "/netty/netty/pull/11856",
        "createdAt": "2021-11-24T12:26:24Z",
        "number": 11856,
        "mergeCommit": {
          "oid": "ea2742b4f628dfae9523c49b22472df921d1386c",
          "message": "Do not allow third parties to provide Netty's native libraries (#11856)\n\nThrow an exception when there are multiple netty-tcnative-** libraries with the same path in the classpath\r\n\r\nMotivation:\r\n\r\nCurrently Netty loads the first resource in the classpath with a given name.\r\nIt seems there are [libraries](https://github.com/netty/netty-tcnative/issues/681#issuecomment-977752064) which provide Netty's native libraries themselves.\r\n\r\nModification:\r\n\r\nFrom now on Netty will look for all resources with the given name and throw an exception if there are more than one.\r\nThe user application needs to make sure that there is at most one provider of Netty's native libraties (netty-tcnative-**)\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty-tcnative/issues/681.",
          "commitUrl": "https://github.com/netty/netty/commit/ea2742b4f628dfae9523c49b22472df921d1386c",
          "parents": {
            "nodes": [
              {
                "oid": "27cf661f5eec7eead99f01ee4c87e9f51980cf53",
                "message": "Link required libraries for MacOS (#11868)\n\nMotivation:\r\n\r\nWhen building Netty on MacOS it can fail due to missing libraries\r\n\r\nModification:\r\n\r\nA link for Native transports wiki page\r\n\r\nResult:\r\n\r\nWhen reading the README, the developer will know what are the required libraries for MacOS"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "common/src/test/data/NativeLibraryLoader/1/META-INF/native/libtest1.so"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "common/src/test/data/NativeLibraryLoader/1/META-INF/native/libtest2.so"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "common/src/test/data/NativeLibraryLoader/2/META-INF/native/libtest1.so"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/internal/NativeLibraryLoaderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84u9mOs2gAoNjAxNTQwMmY5YzI5NTNkYzgwM2E5NGYwMGE4MWY0MDRjNWE5NWE4MQ",
                "url": "https://github.com/netty/netty/pull/11856/commits/6015402f9c2953dc803a94f00a81f404c5a95a81"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 681,
                "url": "https://github.com/netty/netty-tcnative/issues/681",
                "title": "SIGSEGV while initializing tcnative",
                "bodyHTML": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">Netty: 4.1.70<br>\nNetty tcnative: 2.0.46<br>\nGrpc: 1.42.1</p>\n<p dir=\"auto\">I face a strange issue while trying to run a simple Grpc service on Ubuntu 20.04.3 ARM64:<br>\nThe following stack trace leads to SIGSEGV:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Stack: [0x0000ffffa78b7000,0x0000ffffa7ab7000],  sp=0x0000ffffa7ab2fd0,  free space=2031k\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\nC  0x0000ffff7bc8f578\nj  io.netty.internal.tcnative.Library.initialize(Ljava/lang/String;Ljava/lang/String;)Z+31\nj  io.netty.handler.ssl.OpenSsl.initializeTcNative(Ljava/lang/String;)Z+3\nj  io.netty.handler.ssl.OpenSsl.&lt;clinit&gt;()V+252\nv  ~StubRoutines::call_stub\nV  [libjvm.so+0x6162f4]\nV  [libjvm.so+0x5b9798]\nV  [libjvm.so+0x5b9c14]\nV  [libjvm.so+0x5b9f00]\nV  [libjvm.so+0x7a8cc8]\nV  [libjvm.so+0x7a948c]\nV  [libjvm.so+0x7a9538]\nV  [libjvm.so+0x60ccbc]\nj  io.grpc.netty.GrpcSslContexts.defaultSslProvider()Lio/netty/handler/ssl/SslProvider;+0\nj  io.grpc.netty.GrpcSslContexts.configure(Lio/netty/handler/ssl/SslContextBuilder;)Lio/netty/handler/ssl/SslContextBuilder;+1\nj  io.grpc.netty.GrpcSslContexts.forClient()Lio/netty/handler/ssl/SslContextBuilder;+3\nj  io.grpc.netty.NettyChannelBuilder$DefaultProtocolNegotiator.newNegotiator()Lio/grpc/netty/ProtocolNegotiator;+19\nj  io.grpc.netty.NettyChannelBuilder.buildTransportFactory()Lio/grpc/internal/ClientTransportFactory;+8\nj  io.grpc.netty.NettyChannelBuilder$NettyChannelTransportFactoryBuilder.buildClientTransportFactory()Lio/grpc/internal/ClientTransportFactory;+4\nj  io.grpc.internal.ManagedChannelImplBuilder.build()Lio/grpc/ManagedChannel;+13\nj  io.grpc.internal.AbstractManagedChannelImplBuilder.build()Lio/grpc/ManagedChannel;+4\nj  alluxio.hub.agent.process.AgentProcessMonitor.pingService(Ljava/net/InetSocketAddress;Lalluxio/retry/RetryPolicy;J)V+4\nj  alluxio.hub.agent.process.AgentProcessMonitorTest.lambda$testProcessMonitorFailure$0()V+25\nj  alluxio.hub.agent.process.AgentProcessMonitorTest$$Lambda$32.run()V+0\n...\"><pre class=\"notranslate\"><code class=\"notranslate\">Stack: [0x0000ffffa78b7000,0x0000ffffa7ab7000],  sp=0x0000ffffa7ab2fd0,  free space=2031k\nNative frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)\nC  0x0000ffff7bc8f578\nj  io.netty.internal.tcnative.Library.initialize(Ljava/lang/String;Ljava/lang/String;)Z+31\nj  io.netty.handler.ssl.OpenSsl.initializeTcNative(Ljava/lang/String;)Z+3\nj  io.netty.handler.ssl.OpenSsl.&lt;clinit&gt;()V+252\nv  ~StubRoutines::call_stub\nV  [libjvm.so+0x6162f4]\nV  [libjvm.so+0x5b9798]\nV  [libjvm.so+0x5b9c14]\nV  [libjvm.so+0x5b9f00]\nV  [libjvm.so+0x7a8cc8]\nV  [libjvm.so+0x7a948c]\nV  [libjvm.so+0x7a9538]\nV  [libjvm.so+0x60ccbc]\nj  io.grpc.netty.GrpcSslContexts.defaultSslProvider()Lio/netty/handler/ssl/SslProvider;+0\nj  io.grpc.netty.GrpcSslContexts.configure(Lio/netty/handler/ssl/SslContextBuilder;)Lio/netty/handler/ssl/SslContextBuilder;+1\nj  io.grpc.netty.GrpcSslContexts.forClient()Lio/netty/handler/ssl/SslContextBuilder;+3\nj  io.grpc.netty.NettyChannelBuilder$DefaultProtocolNegotiator.newNegotiator()Lio/grpc/netty/ProtocolNegotiator;+19\nj  io.grpc.netty.NettyChannelBuilder.buildTransportFactory()Lio/grpc/internal/ClientTransportFactory;+8\nj  io.grpc.netty.NettyChannelBuilder$NettyChannelTransportFactoryBuilder.buildClientTransportFactory()Lio/grpc/internal/ClientTransportFactory;+4\nj  io.grpc.internal.ManagedChannelImplBuilder.build()Lio/grpc/ManagedChannel;+13\nj  io.grpc.internal.AbstractManagedChannelImplBuilder.build()Lio/grpc/ManagedChannel;+4\nj  alluxio.hub.agent.process.AgentProcessMonitor.pingService(Ljava/net/InetSocketAddress;Lalluxio/retry/RetryPolicy;J)V+4\nj  alluxio.hub.agent.process.AgentProcessMonitorTest.lambda$testProcessMonitorFailure$0()V+25\nj  alluxio.hub.agent.process.AgentProcessMonitorTest$$Lambda$32.run()V+0\n...\n</code></pre></div>\n<p dir=\"auto\">The application uses boringssl-static (see the attached mvn-dependency-tree.txt). According to <a href=\"https://netty.io/wiki/forked-tomcat-native.html\" rel=\"nofollow\">https://netty.io/wiki/forked-tomcat-native.html</a> when boringssl-static is being used then APR is not needed but the core dump says:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)\nj  io.netty.internal.tcnative.Library.aprMajorVersion()I+0\nj  io.netty.internal.tcnative.Library.initialize(Ljava/lang/String;Ljava/lang/String;)Z+31\nj  io.netty.handler.ssl.OpenSsl.initializeTcNative(Ljava/lang/String;)Z+3\nj  io.netty.handler.ssl.OpenSsl.&lt;clinit&gt;()V+252\"><pre class=\"notranslate\"><code class=\"notranslate\">Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)\nj  io.netty.internal.tcnative.Library.aprMajorVersion()I+0\nj  io.netty.internal.tcnative.Library.initialize(Ljava/lang/String;Ljava/lang/String;)Z+31\nj  io.netty.handler.ssl.OpenSsl.initializeTcNative(Ljava/lang/String;)Z+3\nj  io.netty.handler.ssl.OpenSsl.&lt;clinit&gt;()V+252\n</code></pre></div>\n<p dir=\"auto\">Apr is installed on the system:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ apr-1-config --version\n1.6.5\"><pre class=\"notranslate\"><code class=\"notranslate\">$ apr-1-config --version\n1.6.5\n</code></pre></div>\n<p dir=\"auto\">Please let me know if I can provide more information!</p>\n<p dir=\"auto\"><a href=\"https://github.com/netty/netty-tcnative/files/7580061/mvn-dependency-tree.txt\">mvn-dependency-tree.txt</a><br>\n<a href=\"https://github.com/netty/netty-tcnative/files/7580063/hs_err_pid148138.log\">hs_err_pid148138.log</a></p>",
                "resourcePath": "/netty/netty-tcnative/issues/681",
                "createdAt": "2021-11-22T10:21:02Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Rewrite and simplify Recycler",
        "url": "https://github.com/netty/netty/pull/11858",
        "resourcePath": "/netty/netty/pull/11858",
        "createdAt": "2021-11-24T17:06:09Z",
        "number": 11858,
        "mergeCommit": {
          "oid": "40196a6305f7bfb5a3490196360b0862c9a0470d",
          "message": "Rewrite and simplify Recycler (#11858)\n\nMotivation:\r\nWe have in the past gotten reports of weird errors that we haven't been able to reproduce, but which could be explained by bugs in the Recycler.\r\nThe reason is that the Recycler was mixing concurrency, and interactions with the GC, in ways that were difficult to reason about.\r\nIt is unwise to leave suspicous-looking code unaddressed.\r\nConcrete issues, like #11864, should also be addressed.\r\n\r\nModification:\r\nThe Recycler has been rewritten to use a much simpler algorithm, and now completely avoids the use of weak references.\r\n\r\nThe WeakOrderQueue is gone, and there is no longer a concept of a shared max capacity - only thread-local capacity.\r\n\r\nThere is also no more scavenging.\r\nIt turns out that other code was relying on the ability to forget references to objects they acquired from a Recycler, and this is hard to support if there is a shared pool for moving handles between threads.\r\n\r\nEach thread now has a local pool (an MPSC queue).\r\nCalls to get() and recycle() in the same thread will just operate on the local pool queue.\r\nCalls to recycle() from a thread that did not get() that object (the object was acquired in another thread) will rely on the multi-producer safety of the queue to directly release it back to the local pool that the object came from.\r\nWe rely on setting an upper bound for the queue sizes, and the fallible offer() method, for restricting the max thread-local capacity of the recycler.\r\n\r\nThe constructors have been modified to deprecate the many configurations that are no longer relevant.\r\nA new configuration parameter, the queue chunk-size, is exposed as a constructor parameter.\r\nThe queues will grow and shrink in units of this chunk size.\r\n\r\nThe benchmark from #8052 is copied over and updated, and shows that these changes help overall, with no hidden surprises.\r\nPerformance is roughly the same, and allocation rate is down a notch in all the benchmarks.\r\n\r\nResult:\r\nThe Recycler code is much easier to understand.",
          "commitUrl": "https://github.com/netty/netty/commit/40196a6305f7bfb5a3490196360b0862c9a0470d",
          "parents": {
            "nodes": [
              {
                "oid": "6860f32ce6757c25b18767c395eaaca8e5ff83c6",
                "message": "Limit workaround on JDK-6427854 to Java <1.7 (#11863)\n\nMotivation:\r\n\r\nThe workaround introduced by #203 (completed by #5644) on bug\r\n[JDK-6427854](https://bugs.java.com/bugdatabase/view_bug.do?bug_id=6427854)\r\nturns out to be no longer applicable since Java 1.7.\r\n\r\nOnly first few builds of JDK 7 were affected by the bug, which got\r\nfixed in **build 8**. Since JDK 7 was feature complete in\r\n[build 123](https://blogs.oracle.com/java/post/jdk-7-feature-complete),\r\nthere's no need to therefore apply the workaround since Java 1.7.\r\n\r\nModifications:\r\n\r\nThis commit makes sure the workaround (consisting in setting the system\r\nproperty `sun.nio.ch.bugLevel` to an empty string unless defined)\r\ndoesn't get applied when the detected Java version is greater than or\r\nequal to 1.7.\r\n\r\nResult:\r\n\r\nThe workaround gets only applied for Java versions strictly prior to 1.7.\r\n\r\nConditioning the workaround to the Java version will incidentally help\r\nget rid of it when bumping up the minimum JDK support as proposed in\r\nvarious issues s.a. #8259 and #8540."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/Recycler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/PlatformDependent.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/RecyclerTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "microbench/src/main/java/io/netty/microbench/util/RecyclerBenchmark.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84u-k5v2gAoYTBiNjUwZTk1Zjg2MjhmZmU4NDc0MjFmNzExMGQ3ODc5ZWMzNjJhZg",
                "url": "https://github.com/netty/netty/pull/11858/commits/a0b650e95f8628ffe847421f7110d7879ec362af"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 9640,
                "url": "https://github.com/netty/netty/issues/9640",
                "title": "NPE in Recycler",
                "bodyHTML": "<h3 dir=\"auto\">Behavior</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException: null\n\tat io.netty.util.Recycler$DefaultHandle.access$1500(Recycler.java:191) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.util.Recycler$WeakOrderQueue.transfer(Recycler.java:361) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.util.Recycler$Stack.scavengeSome(Recycler.java:511) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.util.Recycler$Stack.scavenge(Recycler.java:486) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.util.Recycler$Stack.pop(Recycler.java:467) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.util.Recycler.get(Recycler.java:151) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.newInstance(AbstractChannelHandlerContext.java:1126) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.access$1600(AbstractChannelHandlerContext.java:1115) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:822) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:795) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:832) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1032) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:296) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n        at ............\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.NullPointerException: null\n\tat io.netty.util.Recycler$DefaultHandle.access$1500(Recycler.java:191) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.util.Recycler$WeakOrderQueue.transfer(Recycler.java:361) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.util.Recycler$Stack.scavengeSome(Recycler.java:511) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.util.Recycler$Stack.scavenge(Recycler.java:486) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.util.Recycler$Stack.pop(Recycler.java:467) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.util.Recycler.get(Recycler.java:151) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.newInstance(AbstractChannelHandlerContext.java:1126) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext$WriteAndFlushTask.access$1600(AbstractChannelHandlerContext.java:1115) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.write(AbstractChannelHandlerContext.java:822) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:795) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.writeAndFlush(AbstractChannelHandlerContext.java:832) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.channel.DefaultChannelPipeline.writeAndFlush(DefaultChannelPipeline.java:1032) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n\tat io.netty.channel.AbstractChannel.writeAndFlush(AbstractChannel.java:296) ~[netty-all-4.1.7.Final.jar:4.1.7.Final]\n        at ............\n</code></pre></div>\n<p dir=\"auto\">NPE occurs when use <code class=\"notranslate\">writeAndFlush</code>.</p>",
                "resourcePath": "/netty/netty/issues/9640",
                "createdAt": "2019-10-08T06:49:53Z",
                "labels": {
                  "edges": []
                }
              }
            },
            {
              "node": {
                "number": 10821,
                "url": "https://github.com/netty/netty/issues/10821",
                "title": "ArrayIndexOutOfBoundsException With PooledByteBufAllocator Recycler implementaion",
                "bodyHTML": "<h3 dir=\"auto\">Issue Description</h3>\n<p dir=\"auto\">While trying to write an HttpMessage using HTTP1 with HttpClientCodec i.e HttpObjectEncoder, Netty is throwing an ArrayIndexOutOfBounds Exception while trying to allocate buffer for headers. Exception seems to be happening in the  PooledByteBufAllocator Recycler Implementation.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.lang.ArrayIndexOutOfBoundsException: Index -841651488 out of bounds for length 256 \nat io.netty.util.Recycler$Stack.pushNow(Recycler.java:666)  \nat io.netty.util.Recycler$Stack.push(Recycler.java:642)  \nat io.netty.util.Recycler$DefaultHandle.recycle(Recycler.java:236)  \nat io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry.recycle(PoolThreadCache.java:482)     \nat io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate(PoolThreadCache.java:412)   \nat io.netty.buffer.PoolThreadCache.allocate(PoolThreadCache.java:187)  \nat io.netty.buffer.PoolThreadCache.allocateSmall(PoolThreadCache.java:171)  \nat io.netty.buffer.PoolArena.allocate(PoolArena.java:189)    \nat io.netty.buffer.PoolArena.allocate(PoolArena.java:147)  \nat io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:356)  \nat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:187)    \nat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:178)  \nat io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:115)  \nat io.netty.handler.codec.http.HttpObjectEncoder.encode(HttpObjectEncoder.java:93)  \nat io.netty.handler.codec.http.HttpClientCodec$Encoder.encode(HttpClientCodec.java:189)  \nat io.netty.handler.codec.MessageToMessageEncoder.write(MessageToMessageEncoder.java:89)     ... 111 more\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: java.lang.ArrayIndexOutOfBoundsException: Index -841651488 out of bounds for length 256 \nat io.netty.util.Recycler$Stack.pushNow(Recycler.java:666)  \nat io.netty.util.Recycler$Stack.push(Recycler.java:642)  \nat io.netty.util.Recycler$DefaultHandle.recycle(Recycler.java:236)  \nat io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry.recycle(PoolThreadCache.java:482)     \nat io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate(PoolThreadCache.java:412)   \nat io.netty.buffer.PoolThreadCache.allocate(PoolThreadCache.java:187)  \nat io.netty.buffer.PoolThreadCache.allocateSmall(PoolThreadCache.java:171)  \nat io.netty.buffer.PoolArena.allocate(PoolArena.java:189)    \nat io.netty.buffer.PoolArena.allocate(PoolArena.java:147)  \nat io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:356)  \nat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:187)    \nat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:178)  \nat io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:115)  \nat io.netty.handler.codec.http.HttpObjectEncoder.encode(HttpObjectEncoder.java:93)  \nat io.netty.handler.codec.http.HttpClientCodec$Encoder.encode(HttpClientCodec.java:189)  \nat io.netty.handler.codec.MessageToMessageEncoder.write(MessageToMessageEncoder.java:89)     ... 111 more\n</code></pre></div>\n<p dir=\"auto\">A new buffer is being allocated in Encoder here - </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/ee3b9a5f7b1829e1095fdbbccb5490949ac3e94e/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java#L93\">netty/codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectEncoder.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 93\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/ee3b9a5f7b1829e1095fdbbccb5490949ac3e94e\">ee3b9a5</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L93\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"93\"></td>\n          <td id=\"LC93\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-s1\">buf</span> = <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">alloc</span>().<span class=\"pl-en\">buffer</span>((<span class=\"pl-smi\">int</span>) <span class=\"pl-s1\">headersEncodedSizeAccumulator</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n.<p></p>\n<p dir=\"auto\">Recycler code triggering the exception - </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/ee3b9a5f7b1829e1095fdbbccb5490949ac3e94e/common/src/main/java/io/netty/util/Recycler.java#L666\">netty/common/src/main/java/io/netty/util/Recycler.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 666\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/ee3b9a5f7b1829e1095fdbbccb5490949ac3e94e\">ee3b9a5</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L666\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"666\"></td>\n          <td id=\"LC666\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-s1\">elements</span>[<span class=\"pl-s1\">size</span>] = <span class=\"pl-s1\">item</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Similar issue seen with Recycler in the past - <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"498856206\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/9608\" data-hovercard-type=\"issue\" data-hovercard-url=\"/netty/netty/issues/9608/hovercard\" href=\"https://github.com/netty/netty/issues/9608\">#9608</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.51.Final</p>\n<h3 dir=\"auto\">JVM version</h3>\n<p dir=\"auto\">Java 11</p>\n<h3 dir=\"auto\">OS version</h3>\n<p dir=\"auto\">x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/10821",
                "createdAt": "2020-11-24T23:44:44Z",
                "labels": {
                  "edges": []
                }
              }
            },
            {
              "node": {
                "number": 11864,
                "url": "https://github.com/netty/netty/issues/11864",
                "title": "Multithreading reclaiming objects in the Recycler object pool issue problem",
                "bodyHTML": "<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.70.final</p>\n<h3 dir=\"auto\">Issue</h3>\n<p dir=\"auto\">The issue shown in the picture below\uff0cThread 2 is recycling objects which belongs to stack1 created by thread 1\u3002</p>\n<p dir=\"auto\">If thread1 was GC'ed at this moment\uff0ci think thread2 does not need to add this object to the <code class=\"notranslate\">weakOrderQueue node</code> which is in the <code class=\"notranslate\">Stack1</code> any more\u3002 because <code class=\"notranslate\">stack1</code> will be GC'ed sooner or later\u3002This object will never be used again even if it is recycled.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5794695/143539720-36080ab2-458e-4c52-b6cb-db0c2f6f602d.png\"><img src=\"https://user-images.githubusercontent.com/5794695/143539720-36080ab2-458e-4c52-b6cb-db0c2f6f602d.png\" alt=\"netty recycler issue\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">But the <code class=\"notranslate\">Recycler</code>'s related source code about recycling objects does not deal with the situation of <code class=\"notranslate\">threadRef.get()  == null</code>,<br>\nand still continue to add objects to the weakOrderQueue node. I think this is a waste of time.  the sooner we deal with the situation of <code class=\"notranslate\">threadRef.get()  == null</code> , the better\u3002</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private static final class Stack&lt;T&gt; {\n\n        void push(DefaultHandle&lt;?&gt; item) {\n            Thread currentThread = Thread.currentThread();\n            if (threadRef.get() == currentThread) {\n                // The current Thread is the thread that belongs to the Stack, we can try to push the object now.\n                pushNow(item);\n            } else {\n                // The current Thread is not the one that belongs to the Stack\n                // (or the Thread that belonged to the Stack was collected already), we need to signal that the push\n                // happens later.\n                pushLater(item, currentThread);\n            }\n        }\n\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">private static final class Stack&lt;T&gt; {\n\n        void push(DefaultHandle&lt;?&gt; item) {\n            Thread currentThread = Thread.currentThread();\n            if (threadRef.get() == currentThread) {\n                // The current Thread is the thread that belongs to the Stack, we can try to push the object now.\n                pushNow(item);\n            } else {\n                // The current Thread is not the one that belongs to the Stack\n                // (or the Thread that belonged to the Stack was collected already), we need to signal that the push\n                // happens later.\n                pushLater(item, currentThread);\n            }\n        }\n\n}\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/11864",
                "createdAt": "2021-11-26T07:32:24Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove stream exception from InboundHttp2ToHttpAdapter::onRstStreamRead",
        "url": "https://github.com/netty/netty/pull/11859",
        "resourcePath": "/netty/netty/pull/11859",
        "createdAt": "2021-11-24T17:26:29Z",
        "number": 11859,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/InboundHttp2ToHttpAdapter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/InboundHttp2ToHttpAdapterTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84u-oou2gAoY2ZhZTgzN2IxNGIzM2FhYjAxYmJlYWE2ZDljNzg5MTBiZDNiMTFkNA",
                "url": "https://github.com/netty/netty/pull/11859/commits/cfae837b14b33aab01bbeaa6d9c78910bd3b11d4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11836,
                "url": "https://github.com/netty/netty/issues/11836",
                "title": "InboundHttp2ToHttpAdapter fires exception on reading RST_STREAM frame",
                "bodyHTML": "<h3 dir=\"auto\">Issue</h3>\n<p dir=\"auto\">When using the HTTP2 Connection API, <code class=\"notranslate\">InboundHttp2ToHttpAdapter</code> fires an exception when reading an RST_STREAM frame <a href=\"https://github.com/netty/netty/blob/7d34282f9d2ffdd64c91cb4780b09902d9779b92/codec-http2/src/main/java/io/netty/handler/codec/http2/InboundHttp2ToHttpAdapter.java#L281-L290\">here</a>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Override\npublic void onRstStreamRead(ChannelHandlerContext ctx, int streamId, long errorCode) throws Http2Exception {\n    Http2Stream stream = connection.stream(streamId);\n    FullHttpMessage msg = getMessage(stream);\n    if (msg != null) {\n        onRstStreamRead(stream, msg);\n    }\n    ctx.fireExceptionCaught(Http2Exception.streamError(streamId, Http2Error.valueOf(errorCode),\n            &quot;HTTP/2 to HTTP layer caught stream reset&quot;));\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@Override\npublic void onRstStreamRead(ChannelHandlerContext ctx, int streamId, long errorCode) throws Http2Exception {\n    Http2Stream stream = connection.stream(streamId);\n    FullHttpMessage msg = getMessage(stream);\n    if (msg != null) {\n        onRstStreamRead(stream, msg);\n    }\n    ctx.fireExceptionCaught(Http2Exception.streamError(streamId, Http2Error.valueOf(errorCode),\n            \"HTTP/2 to HTTP layer caught stream reset\"));\n}\n</code></pre></div>\n<p dir=\"auto\">Per <a href=\"https://datatracker.ietf.org/doc/html/rfc7540#section-6.4\" rel=\"nofollow\">RFC 7540</a> there are a number of valid cases where a client may send an RST_STREAM frame.</p>\n<p dir=\"auto\">If using the <code class=\"notranslate\">DefaultHttp2ConnectionDecoder</code> the error cases for reading an RST_STREAM frame described in RFC 7540 are handled <a href=\"https://github.com/netty/netty/blob/7d34282f9d2ffdd64c91cb4780b09902d9779b92/codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java#L425-L440\">here</a> before calling the supplied <code class=\"notranslate\">Http2FrameListener</code>.</p>\n<p dir=\"auto\">Firing an exception here seems to be conservative default behavior that requires extending <code class=\"notranslate\">InboundHttp2ToHttpAdapter</code> or implementing a custom <code class=\"notranslate\">Http2FrameListener</code> to bypass. It also seems to differ from the HTTP2 codec/child-channel API in making the assumption that an exception should be fired when reading an RST_STREAM frame.</p>\n<p dir=\"auto\">I understand the intent is to deprecate this API in favor of the child-channel API, but is there any reason not to remove this exception?</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.68</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">11</p>",
                "resourcePath": "/netty/netty/issues/11836",
                "createdAt": "2021-11-14T16:14:53Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "when the thread which create the reclaimed object was GC'ed,there is no need to recycle this object to the weakOrderQueue node belongs to the recycling thread any more",
        "url": "https://github.com/netty/netty/pull/11865",
        "resourcePath": "/netty/netty/pull/11865",
        "createdAt": "2021-11-26T08:17:27Z",
        "number": 11865,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/Recycler.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84vDJ0L2gAoMmM4NTUwYzI4NzkyZjQ4NjAxNTk1ZmE3NmFmMDExZTdiYmM5YzA1Ng",
                "url": "https://github.com/netty/netty/pull/11865/commits/2c8550c28792f48601595fa76af011e7bbc9c056"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11864,
                "url": "https://github.com/netty/netty/issues/11864",
                "title": "Multithreading reclaiming objects in the Recycler object pool issue problem",
                "bodyHTML": "<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.70.final</p>\n<h3 dir=\"auto\">Issue</h3>\n<p dir=\"auto\">The issue shown in the picture below\uff0cThread 2 is recycling objects which belongs to stack1 created by thread 1\u3002</p>\n<p dir=\"auto\">If thread1 was GC'ed at this moment\uff0ci think thread2 does not need to add this object to the <code class=\"notranslate\">weakOrderQueue node</code> which is in the <code class=\"notranslate\">Stack1</code> any more\u3002 because <code class=\"notranslate\">stack1</code> will be GC'ed sooner or later\u3002This object will never be used again even if it is recycled.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5794695/143539720-36080ab2-458e-4c52-b6cb-db0c2f6f602d.png\"><img src=\"https://user-images.githubusercontent.com/5794695/143539720-36080ab2-458e-4c52-b6cb-db0c2f6f602d.png\" alt=\"netty recycler issue\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">But the <code class=\"notranslate\">Recycler</code>'s related source code about recycling objects does not deal with the situation of <code class=\"notranslate\">threadRef.get()  == null</code>,<br>\nand still continue to add objects to the weakOrderQueue node. I think this is a waste of time.  the sooner we deal with the situation of <code class=\"notranslate\">threadRef.get()  == null</code> , the better\u3002</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private static final class Stack&lt;T&gt; {\n\n        void push(DefaultHandle&lt;?&gt; item) {\n            Thread currentThread = Thread.currentThread();\n            if (threadRef.get() == currentThread) {\n                // The current Thread is the thread that belongs to the Stack, we can try to push the object now.\n                pushNow(item);\n            } else {\n                // The current Thread is not the one that belongs to the Stack\n                // (or the Thread that belonged to the Stack was collected already), we need to signal that the push\n                // happens later.\n                pushLater(item, currentThread);\n            }\n        }\n\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">private static final class Stack&lt;T&gt; {\n\n        void push(DefaultHandle&lt;?&gt; item) {\n            Thread currentThread = Thread.currentThread();\n            if (threadRef.get() == currentThread) {\n                // The current Thread is the thread that belongs to the Stack, we can try to push the object now.\n                pushNow(item);\n            } else {\n                // The current Thread is not the one that belongs to the Stack\n                // (or the Thread that belonged to the Stack was collected already), we need to signal that the push\n                // happens later.\n                pushLater(item, currentThread);\n            }\n        }\n\n}\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/11864",
                "createdAt": "2021-11-26T07:32:24Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove SCTP support",
        "url": "https://github.com/netty/netty/pull/11883",
        "resourcePath": "/netty/netty/pull/11883",
        "createdAt": "2021-12-02T13:33:56Z",
        "number": 11883,
        "mergeCommit": {
          "oid": "61296378f17bb40fb57c57168d49cf6043c00fa5",
          "message": "Remove SCTP support (#11883)\n\nMotivation:\r\nThere is little usage of this protocol, and not all features are supported.\r\nWe would rather spend our effort on having excellent TCP, UDP, and domain socket support.\r\n\r\nModification:\r\nThe SCTP channels, configs, and related implementation are removed with no replacement.\r\nIf need be, the code can be resurrected as a contrib project.\r\n\r\nResult:\r\nWe no longer support SCTP\r\nFixes #11555",
          "commitUrl": "https://github.com/netty/netty/commit/61296378f17bb40fb57c57168d49cf6043c00fa5",
          "parents": {
            "nodes": [
              {
                "oid": "0945936274c9228503ac1f6d035cba5287e4527d",
                "message": "Remove codec-haproxy (#11869)\n\nMotivation:\r\nThis project now lives in the Netty Contrib organisation:\r\nhttps://github.com/netty-contrib/codec-haproxy\r\n\r\nModification:\r\nThe netty-codec-haproxy maven module and code is removed.\r\nThe dependency is also removed from the BOM, and from netty-all, and the benchmarks and examples are removed as well.\r\n\r\nResult:\r\nThe codec-haproxy module now lives in contrib."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport-sctp/src/main/java/io/netty/channel/sctp/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport-sctp/src/main/java/io/netty/handler/codec/sctp/SctpInboundByteStreamHandler.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport-sctp/src/main/java/io/netty/handler/codec/sctp/SctpMessageCompletionHandler.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport-sctp/src/main/java/io/netty/handler/codec/sctp/SctpMessageToMessageDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport-sctp/src/main/java/io/netty/handler/codec/sctp/SctpOutboundByteStreamHandler.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport-sctp/src/main/java/io/netty/handler/codec/sctp/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport-sctp/src/test/java/io/netty/channel/sctp/SctpLimitStreamsTest.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport-sctp/src/test/java/io/netty/channel/sctp/SctpTestUtil.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport-sctp/src/test/java/io/netty/channel/sctp/nio/NioSctpLimitStreamsTest.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport-sctp/src/test/java/io/netty/handler/codec/sctp/SctpMessageCompletionHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84vTu0w2gAoZjdkODhlYjQxYmIyYjYzNzE0OTBiNmQ3NTY0MTQwYTUzZmFmZGZkZA",
                "url": "https://github.com/netty/netty/pull/11883/commits/f7d88eb41bb2b6371490b6d7564140a53fafdfdd"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11555,
                "url": "https://github.com/netty/netty/issues/11555",
                "title": "[Netty 5] Discussion - Remove SCTP Support",
                "bodyHTML": "<p dir=\"auto\">Currently, Netty supports SCTP (transport-sctp). However, SCTP is kind of dead. The documentation of the <code class=\"notranslate\">transport-sctp</code> module is also not up to the mark. We should consider removing it from Netty 5 onwards.</p>\n<p dir=\"auto\">So this is a discussion thread to find whether we should support it or not in Netty 5.</p>",
                "resourcePath": "/netty/netty/issues/11555",
                "createdAt": "2021-08-06T06:26:02Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "netty5"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "JdkZlibEncoder can use pooled heap buffers for deflater input",
        "url": "https://github.com/netty/netty/pull/11891",
        "resourcePath": "/netty/netty/pull/11891",
        "createdAt": "2021-12-04T20:02:07Z",
        "number": 11891,
        "mergeCommit": {
          "oid": "d80a34ecf84bbe153b60123b059deabcc97a8935",
          "message": "JdkZlibEncoder can use pooled heap buffers for deflater input (#11891)\n\n\r\nMotivation:\r\n\r\nPreviously, when the input ByteBuf was not heap allocated we copied the\r\ninput into a new byte array allocated on the heap for every encode() call.\r\nThis puts high-throughput clients that use the JdkZlibEncoder under memory\r\npressure.\r\n\r\nModifications:\r\n\r\nNow, when the input ByteBuf is not heap allocated we copy the input into a\r\nheap ByteBuf allocated from the configured ByteBufAllocator (which might be pooled), releasing it after\r\nthe encode() has completed.\r\n\r\nResult:\r\n\r\nThe result is less heap allocation and GC activity when the PooledByteBufAllocator is used (which is the default)\r\n\r\nFixes #11890\r\n\r\nSigned-off-by: Daniel Ferstay <dferstay@splunk.com>\r\nCo-authored-by: Daniel Ferstay <dferstay@splunk.com>\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/d80a34ecf84bbe153b60123b059deabcc97a8935",
          "parents": {
            "nodes": [
              {
                "oid": "559c08555eea54582b24c7c52152f75b6dbb4301",
                "message": "Ensure we always run the register task of native libraries (#11887)\n\nMotivation:\r\n\r\nAt some point we introduced guards to ensure we not bind native methods multiple times. While this seemed to have fixed the problem it introduced other problems\r\nas these methods sometimes not only bind native methods but also init static fields. This could later then cause things like segfaults if we depend on static fields to not be NULL.\r\n\r\nModification:\r\n\r\nRemove atomic guard\r\nUse static synchronized for proper sequencing\r\nAlways call Socket.initialize()\r\nResult:\r\n\r\nNo more segfaults due NULL fields"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/JdkZlibEncoder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84vZSNz2gAoNGEwOGI2MTVhMzYxZjkzNTIzMTBkZWE3NTMwNzEzNzE4ZDNhMjJkMQ",
                "url": "https://github.com/netty/netty/pull/11891/commits/4a08b615a361f9352310dea7530713718d3a22d1"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11890,
                "url": "https://github.com/netty/netty/issues/11890",
                "title": "JdkZlibEncoder: heap allocated arrays for deflater input generate memory pressure under load",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">I am writing a high-throughput client for a custom protocol over TCP;  the protocol has the option of compressing contents using zlib encoding,  In order to reach performance targets I accumulate encoded frames into batches stored in off-heap pooled ByteBufs and then write the contents to the Netty Channel.  When running load tests with compression enabled I expected very little GC activity.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">When running load tests with compression enabled I see a lot of GC activity.  This is due to byte arrays allocated on the heap to provide input to zlib Deflater.  When the incoming ByteBuf is direct, we allocate a byte array on the heap and copy the contents into it.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ul dir=\"auto\">\n<li>Create a Netty client that uses a ZlibEncoder</li>\n<li>Write direct ByteBufs to the Channel in a loop</li>\n<li>Observe the increase in memory consumption (using system tools or a profiler)</li>\n</ul>\n<h3 dir=\"auto\">Netty version</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"4.1.70.Final\"><pre class=\"notranslate\"><code class=\"notranslate\">4.1.70.Final\n</code></pre></div>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openjdk version &quot;1.8.0_292&quot;\nOpenJDK Runtime Environment (build 1.8.0_292-8u292-b10-0ubuntu1~20.04-b10)\nOpenJDK 64-Bit Server VM (build 25.292-b10, mixed mode)\"><pre class=\"notranslate\"><code class=\"notranslate\">openjdk version \"1.8.0_292\"\nOpenJDK Runtime Environment (build 1.8.0_292-8u292-b10-0ubuntu1~20.04-b10)\nOpenJDK 64-Bit Server VM (build 25.292-b10, mixed mode)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\"><code class=\"notranslate\">Linux peso 5.10.0-1051-oem #53-Ubuntu SMP Thu Oct 28 08:11:53 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</code></p>",
                "resourcePath": "/netty/netty/issues/11890",
                "createdAt": "2021-12-04T19:54:48Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "allowed to reuse address",
        "url": "https://github.com/netty/netty/pull/11892",
        "resourcePath": "/netty/netty/pull/11892",
        "createdAt": "2021-12-05T14:55:16Z",
        "number": 11892,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverBuilder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84vZ3uw2gAoYTJiZWRmNDUwNDU4MzhlZmEzNTFhMjQ5OWZkZGIxNWE1ODFmNzkwZg",
                "url": "https://github.com/netty/netty/pull/11892/commits/a2bedf45045838efa351a2499fddb15a581f790f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1920,
                "url": "https://github.com/reactor/reactor-netty/issues/1920",
                "title": "Allow to config dns bind address in reactor.netty.transport.NameResolverProvider.NameResolverSpec",
                "bodyHTML": "<h2 dir=\"auto\">Motivation</h2>\n<p dir=\"auto\">Both <code class=\"notranslate\">io.netty.resolver.dns.DnsAddressResolverGroup</code> \uff08by <a href=\"https://github.com/netty/netty/blob/1e189654f913b13be3616c552a04459465b752b3/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverBuilder.java#L46\">DnsNameResolverBuilder</a>\uff09and <a href=\"https://github.com/ShijunDeng/netty/blob/743067c1797ea59b9562c8249d789a8279e781c0/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java#L410\">io.netty.resolver.dns.DnsNameResolver</a> are allowed to config dns bind address. In some application scenarios, in order to ensure safety, the port matrix must be clear. So, it's better to support this feature in reactor.netty.transport.NameResolverProvider.NameResolverSpec, then we can create HttpClient as the following code</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private static int port = 30510;\n\n//......\nSupplier&lt;SocketAddress&gt; addressSupplier = () -&gt; new InetSocketAddress(&quot;localhost&quot;, port++);\n\nHttpClient httpClient = HttpClient.newConnection()\n\t\t.resolver(nameResolverSpec -&gt; nameResolverSpec.bindAddressSupplier(addressSupplier));\n\nreturn WebClient.builder()\n\t\t.clientConnector(new ReactorClientHttpConnector(httpClient))\n\t\t.baseUrl(url)\n\t\t.build()\n\t\t.get()\n\t\t.retrieve()\n\t\t.bodyToMono(String.class);\"><pre class=\"notranslate\"><code class=\"notranslate\">private static int port = 30510;\n\n//......\nSupplier&lt;SocketAddress&gt; addressSupplier = () -&gt; new InetSocketAddress(\"localhost\", port++);\n\nHttpClient httpClient = HttpClient.newConnection()\n\t\t.resolver(nameResolverSpec -&gt; nameResolverSpec.bindAddressSupplier(addressSupplier));\n\nreturn WebClient.builder()\n\t\t.clientConnector(new ReactorClientHttpConnector(httpClient))\n\t\t.baseUrl(url)\n\t\t.build()\n\t\t.get()\n\t\t.retrieve()\n\t\t.bodyToMono(String.class);\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/19890044/144980393-bc107a56-cb77-4b97-928a-0042b557a7b3.png\"><img src=\"https://user-images.githubusercontent.com/19890044/144980393-bc107a56-cb77-4b97-928a-0042b557a7b3.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Alternative solution</h2>\n<p dir=\"auto\">An alternative solution:<br>\n<a href=\"https://github.com/netty/netty/pull/11892/files\">https://github.com/netty/netty/pull/11892/files</a><br>\n<a href=\"https://github.com/reactor/reactor-netty/pull/1919/files\">https://github.com/reactor/reactor-netty/pull/1919/files</a></p>",
                "resourcePath": "/reactor/reactor-netty/issues/1920",
                "createdAt": "2021-12-05T15:17:42Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type/enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Update tcnative version in bom",
        "url": "https://github.com/netty/netty/pull/11902",
        "resourcePath": "/netty/netty/pull/11902",
        "createdAt": "2021-12-09T15:55:53Z",
        "number": 11902,
        "mergeCommit": {
          "oid": "e00d101d7c5a9c5f038b068f7fe47cdc2a484720",
          "message": "Update tcnative version in bom (#11902)\n\nMotivaiton:\r\nThe bom is out of sync with the project version\r\nof tcnative. This results in unresolved\r\ndependencies when using the bom.",
          "commitUrl": "https://github.com/netty/netty/commit/e00d101d7c5a9c5f038b068f7fe47cdc2a484720",
          "parents": {
            "nodes": [
              {
                "oid": "2fd8695a63272123b44fe7edc16f9ffdd92bea94",
                "message": "[maven-release-plugin] prepare for next development iteration"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "bom/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84vnzUK2gAoMDBjOTg4ZDRmNjY2MzdmMmMzYjc2Y2Q5ODc3NjkyNjc2ZDliNmE0NA",
                "url": "https://github.com/netty/netty/pull/11902/commits/00c988d4f66637f2c3b76cd9877692676d9b6a44"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11903,
                "url": "https://github.com/netty/netty/issues/11903",
                "title": "Netty BOM v4.1.71 refers to non-existent netty-tcnative-classes version",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Netty BOM should include dependency <code class=\"notranslate\">io.netty:netty-tcnative-classes:2.0.46.Final</code>.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Non-existent dependency <code class=\"notranslate\">io.netty:netty-tcnative-classes:2.0.44.Final</code> is included.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">See following sections from <a href=\"https://repo1.maven.org/maven2/io/netty/netty-bom/4.1.71.Final/netty-bom-4.1.71.Final.pom\" rel=\"nofollow\">https://repo1.maven.org/maven2/io/netty/netty-bom/4.1.71.Final/netty-bom-4.1.71.Final.pom</a> -</p>\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;properties&gt;\n    &lt;!--  Keep in sync with ../pom.xml  --&gt;\n    &lt;tcnative.version&gt;2.0.44.Final&lt;/tcnative.version&gt;\n&lt;/properties&gt;\n\n&lt;!-- .. --&gt;\n\n&lt;dependency&gt;\n    &lt;groupId&gt;io.netty&lt;/groupId&gt;\n    &lt;artifactId&gt;netty-tcnative-classes&lt;/artifactId&gt;\n    &lt;version&gt;${tcnative.version}&lt;/version&gt;\n&lt;/dependency&gt;\"><pre class=\"notranslate\">&lt;<span class=\"pl-ent\">properties</span>&gt;\n    <span class=\"pl-c\"><span class=\"pl-c\">&lt;!--</span>  Keep in sync with ../pom.xml  <span class=\"pl-c\">--&gt;</span></span>\n    &lt;<span class=\"pl-ent\">tcnative</span>.version&gt;2.0.44.Final&lt;/<span class=\"pl-ent\">tcnative</span>.version&gt;\n&lt;/<span class=\"pl-ent\">properties</span>&gt;\n\n<span class=\"pl-c\"><span class=\"pl-c\">&lt;!--</span> .. <span class=\"pl-c\">--&gt;</span></span>\n\n&lt;<span class=\"pl-ent\">dependency</span>&gt;\n    &lt;<span class=\"pl-ent\">groupId</span>&gt;io.netty&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n    &lt;<span class=\"pl-ent\">artifactId</span>&gt;netty-tcnative-classes&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n    &lt;<span class=\"pl-ent\">version</span>&gt;${tcnative.version}&lt;/<span class=\"pl-ent\">version</span>&gt;\n&lt;/<span class=\"pl-ent\">dependency</span>&gt;</pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">URL : <a href=\"https://repo1.maven.org/maven2/io/netty/netty-bom/4.1.71.Final/netty-bom-4.1.71.Final.pom\" rel=\"nofollow\">https://repo1.maven.org/maven2/io/netty/netty-bom/4.1.71.Final/netty-bom-4.1.71.Final.pom</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">Version : <code class=\"notranslate\">4.1.71.Final</code>.</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openjdk version &quot;17.0.1&quot; 2021-10-19\nOpenJDK Runtime Environment (build 17.0.1+12-39)\nOpenJDK 64-Bit Server VM (build 17.0.1+12-39, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">openjdk version \"17.0.1\" 2021-10-19\nOpenJDK Runtime Environment (build 17.0.1+12-39)\nOpenJDK 64-Bit Server VM (build 17.0.1+12-39, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows 10 (64 Bit)</p>",
                "resourcePath": "/netty/netty/issues/11903",
                "createdAt": "2021-12-10T07:49:17Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix issue #11920: Slf4JLoggerFactory does not initialize when using no-op logger",
        "url": "https://github.com/netty/netty/pull/11931",
        "resourcePath": "/netty/netty/pull/11931",
        "createdAt": "2021-12-16T17:15:35Z",
        "number": 11931,
        "mergeCommit": {
          "oid": "c08beb543a6b8db0c7f3cee225042361b4025e4c",
          "message": "Fix issue #11920: Slf4JLoggerFactory does not initialize when using no-op logger (#11931)\n\nMotivation:\r\n\r\nFixes issue #11920: Slf4JLoggerFactory does not initialize when using no-op logger.\r\n\r\nModification:\r\n\r\nMove the INSTANCE_WITH_NOP_CHECK to a nested class so that the failure does not affect the outer class.\r\n\r\nResult:\r\n\r\nFixes #11920. \r\n\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/c08beb543a6b8db0c7f3cee225042361b4025e4c",
          "parents": {
            "nodes": [
              {
                "oid": "ea6d48320a007d403c8245bc548c1dd9c5f54e11",
                "message": "Re-read /etc/hosts periodically in `DefaultHostsFileEntriesResolver` (#11922)\n\n\r\n\r\nMotivation:\r\n\r\n`io.netty.resolver.DefaultHostsFileEntriesResolver` parses `/etc/hosts` only once, upon creation.\r\nWith these changes `DefaultHostsFileEntriesResolver` will periodically re-read configuration.\r\n\r\nModification:\r\n1. Made `HostsFileEntriesProvider.Parser` dependency injectable via constructor to be able to test my changes\r\n2. Added entries `expiry` check and re-read before resolving addresses\r\n3. `address` now uses `addresses` function inside\r\n\r\nResult:\r\n`DefaultHostsFileEntriesResolver` now re-reads data from hosts file every 10 seconds. \r\n\r\nFixes #11661"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/logging/InternalLoggerFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/logging/Slf4JLoggerFactory.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84v9lX22gAoMDM4MjQ0N2I2OTUyNzNmYWRlNWM1YjFkZmQ4MjYwOGJhZGJlMjU1Yw",
                "url": "https://github.com/netty/netty/pull/11931/commits/0382447b695273fade5c5b1dfd82608badbe255c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11920,
                "url": "https://github.com/netty/netty/issues/11920",
                "title": "`Slf4JLoggerFactory` does not initialize when using no-op logger",
                "bodyHTML": "<p dir=\"auto\">Below is the full issue description. Here is a short description of why this happens:</p>\n<p dir=\"auto\">Looking at the code, <code class=\"notranslate\">Slf4JLoggerFactory.INSTANCE</code> should not care whether the slf4j implementation is a <code class=\"notranslate\">NOPLoggerFactory</code>. The package-private <code class=\"notranslate\">INSTANCE_WITH_NOP_CHECK</code> has that additional check, but <code class=\"notranslate\">INSTANCE</code> does not. However, because the <code class=\"notranslate\">INSTANCE_WITH_NOP_CHECK</code> is a static field, the nop check failing leads to the entire <code class=\"notranslate\">Slf4JLoggerFactory</code> class failing to initialize, leading to the error below.</p>\n<p dir=\"auto\">My suggestion would be to either revert the change that made the nop check instance a singleton (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"891045008\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/11253\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/11253/hovercard\" href=\"https://github.com/netty/netty/pull/11253\">#11253</a>), or (probably preferred) to move the singleton to a nested class so that the failure does not affect the outer class.</p>\n<p dir=\"auto\">I can make a PR to fix this issue, however I will have to get new CLA approval since I changed employment since I last signed the CLA, which may take a few days.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"InternalLoggerFactory.setDefaultFactory(Slf4JLoggerFactory.INSTANCE);\"><pre class=\"notranslate\"><span class=\"pl-smi\">InternalLoggerFactory</span>.<span class=\"pl-en\">setDefaultFactory</span>(<span class=\"pl-smi\">Slf4JLoggerFactory</span>.<span class=\"pl-c1\">INSTANCE</span>);</pre></div>\n<p dir=\"auto\">should always succeed.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">When slf4j uses the noop logger, the code throws an exception:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Exception in thread &quot;main&quot; java.lang.NoClassDefFoundError: NOPLoggerFactory not supported\n\tat io.netty.util.internal.logging.Slf4JLoggerFactory.&lt;init&gt;(Slf4JLoggerFactory.java:45)\n\tat io.netty.util.internal.logging.Slf4JLoggerFactory.&lt;clinit&gt;(Slf4JLoggerFactory.java:33)\n\tat Main.main(Main.java:6)\"><pre class=\"notranslate\"><code class=\"notranslate\">Exception in thread \"main\" java.lang.NoClassDefFoundError: NOPLoggerFactory not supported\n\tat io.netty.util.internal.logging.Slf4JLoggerFactory.&lt;init&gt;(Slf4JLoggerFactory.java:45)\n\tat io.netty.util.internal.logging.Slf4JLoggerFactory.&lt;clinit&gt;(Slf4JLoggerFactory.java:33)\n\tat Main.main(Main.java:6)\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ol dir=\"auto\">\n<li>Create a new project with the <code class=\"notranslate\">org.slf4j:slf4j-api:1.7.32</code> and <code class=\"notranslate\">io.netty:netty-all:4.1.71.Final</code> dependencies</li>\n<li>Add the reproducer code from below</li>\n<li>Run the main class</li>\n</ol>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import io.netty.util.internal.logging.InternalLoggerFactory;\nimport io.netty.util.internal.logging.Slf4JLoggerFactory;\n\npublic class Main {\n    public static void main(String[] args) {\n        InternalLoggerFactory.setDefaultFactory(Slf4JLoggerFactory.INSTANCE);\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">import io.netty.util.internal.logging.InternalLoggerFactory;\nimport io.netty.util.internal.logging.Slf4JLoggerFactory;\n\npublic class Main {\n    public static void main(String[] args) {\n        InternalLoggerFactory.setDefaultFactory(Slf4JLoggerFactory.INSTANCE);\n    }\n}\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.71.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Adopt OpenJDK 11.0.12</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\"><code class=\"notranslate\">Linux yawkat-oracle 5.13.0-22-generic #22-Ubuntu SMP Fri Nov 5 13:21:36 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</code></p>",
                "resourcePath": "/netty/netty/issues/11920",
                "createdAt": "2021-12-14T08:46:33Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes issue #11933:FastThreadLocal.set(V) method throws NegativeArraySizeException after called more than (1 << 30) times of new FastThreadLocal()",
        "url": "https://github.com/netty/netty/pull/11934",
        "resourcePath": "/netty/netty/pull/11934",
        "createdAt": "2021-12-17T12:55:14Z",
        "number": 11934,
        "mergeCommit": {
          "oid": "cb106bed56046b4fd514702dc2dbfc48f94b7f72",
          "message": "FastThreadLocal.set(V) method throws NegativeArraySizeException after called more than (1 << 30) times of new FastThreadLocal() (#11934)\n\nMotivation:\r\n\r\nFixes issue #11933: FastThreadLocal.set(V) method throws NegativeArraySizeException after called more than (1 << 30) times of new FastThreadLocal()\r\n\r\nModification:\r\n\r\nAdd index bound check in methods `io.netty.util.internal.InternalThreadLocalMap#expandIndexedVariableTableAndSet` and `io.netty.util.internal.InternalThreadLocalMap#nextVariableIndex`.\r\nResult:\r\n\r\nFixes #11933.",
          "commitUrl": "https://github.com/netty/netty/commit/cb106bed56046b4fd514702dc2dbfc48f94b7f72",
          "parents": {
            "nodes": [
              {
                "oid": "ef69732a42d020a4af50de57d91087f4f4c4876c",
                "message": "Correctly calculate the elementSize when cache alignment is configured (#11987)\n\n\r\nMotivation:\r\n\r\nWe need to take the cache alignment into account when we pre-calculate the ementSize otherwise we fail later.\r\n\r\nModifications:\r\n\r\n- Fix pre-calculation\r\n- Add unit test\r\n- Fix incorrect unit test\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11955"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/InternalThreadLocalMap.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/concurrent/FastThreadLocalTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84wAJTJ2gAoNDkzYjRkN2ZmMTg4MzQ5M2Y3NjU3OGEwZWI3YTZjZjY2Nzg2OWI0ZA",
                "url": "https://github.com/netty/netty/pull/11934/commits/493b4d7ff1883493f76578a0eb7a6cf667869b4d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11933,
                "url": "https://github.com/netty/netty/issues/11933",
                "title": "`FastThreadLocal.set(V)` method throws `NegativeArraySizeException` after called more than (1 << 30) times of `new FastThreadLocal()`",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The <code class=\"notranslate\">FastThreadLocal.set(V)</code> method should still work after called more than (1 &lt;&lt; 30) and less than (Integer.MAX_VALUE) times of <code class=\"notranslate\">new FastThreadLocal()</code>.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">After called more than (1 &lt;&lt; 30) times of <code class=\"notranslate\">new FastThreadLocal()</code>, the newly created <code class=\"notranslate\">FastThreadLocal</code> instance can not set value anymore.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import io.netty.util.concurrent.FastThreadLocal;\nimport io.netty.util.internal.InternalThreadLocalMap;\n\npublic static void main(String[] args) {\n        int expand_threshold = 1 &lt;&lt; 30;\n        while (true) {\n            FastThreadLocal&lt;Object&gt; fst = new FastThreadLocal&lt;&gt;();\n            if (InternalThreadLocalMap.lastVariableIndex() &lt; expand_threshold) {\n                continue;\n            }\n            fst.set(new Object()); // throws NegativeArraySizeException\n            return;\n        }\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">import io.netty.util.concurrent.FastThreadLocal;\nimport io.netty.util.internal.InternalThreadLocalMap;\n\npublic static void main(String[] args) {\n        int expand_threshold = 1 &lt;&lt; 30;\n        while (true) {\n            FastThreadLocal&lt;Object&gt; fst = new FastThreadLocal&lt;&gt;();\n            if (InternalThreadLocalMap.lastVariableIndex() &lt; expand_threshold) {\n                continue;\n            }\n            fst.set(new Object()); // throws NegativeArraySizeException\n            return;\n        }\n    }\n</code></pre></div>\n<p dir=\"auto\">Run the code above, the console prints Exception:</p>\n<blockquote>\n<p dir=\"auto\">Exception in thread \"main\" java.lang.NegativeArraySizeException<br>\nat java.util.Arrays.copyOf(Arrays.java:3210)<br>\nat java.util.Arrays.copyOf(Arrays.java:3181)<br>\nat io.netty.util.internal.InternalThreadLocalMap.expandIndexedVariableTableAndSet(InternalThreadLocalMap.java:342)<br>\nat io.netty.util.internal.InternalThreadLocalMap.setIndexedVariable(InternalThreadLocalMap.java:326)<br>\nat io.netty.util.concurrent.FastThreadLocal.setKnownNotUnset(FastThreadLocal.java:214)<br>\nat io.netty.util.concurrent.FastThreadLocal.set(FastThreadLocal.java:193)<br>\nat XXX.main(XXX.java:15)</p>\n</blockquote>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.72.Final.</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">JDK-8.</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">MacOS.</p>",
                "resourcePath": "/netty/netty/issues/11933",
                "createdAt": "2021-12-17T12:32:31Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Update GlobalTrafficShapingHandler constructor argument to ScheduledExecutorService",
        "url": "https://github.com/netty/netty/pull/11949",
        "resourcePath": "/netty/netty/pull/11949",
        "createdAt": "2021-12-23T14:04:27Z",
        "number": 11949,
        "mergeCommit": {
          "oid": "9ab5e9180253e85eacdb978d436c087615c6e3b1",
          "message": "Update GlobalTrafficShapingHandler javadocs to match reality (#11949)\n\nMotivation:\r\n\r\nJavadocs not match the real constructor argument type.\r\n\r\nModification:\r\n\r\nChange ScheduledExecutorService to EventExecutor in javadocs\r\n\r\nResult:\r\n\r\nFixes #11948.",
          "commitUrl": "https://github.com/netty/netty/commit/9ab5e9180253e85eacdb978d436c087615c6e3b1",
          "parents": {
            "nodes": [
              {
                "oid": "395ae53baa24c1175ffe9125b7f95455154ac684",
                "message": "Ignore some SslContextBuilderTests on certain JDKs (#11953)\n\nMotivation:\r\nThe tests testUnsupportedPrivateKeyFailsFastForServer and testUnsupportedPrivateKeyFailsFastForClient are failing on RedHat/Fedora distributions of JDK 11.\r\n\r\nThe test try to assert that a certificate using an exotic curve is rejected by BoringSSL, and throws an SSLException when building the private key.\r\n\r\nHowever, on RedHat JDK 11, this curve - 1.3.132.0.39 - is not in the JDK CurveDB, and so we get an IllegalArgumentException when creating the key manager.\r\nThe CurveDB on this distribution has a pretty limited set of curves available, so it might not be possible to find one that is accepted by the key manager, but rejected by the private key build.\r\n\r\nModification:\r\nMake the tests look out for the IllegalArgumentException from the CurveDB, and if observed, abort the test as if by an assumption violation.\r\n\r\nResult:\r\nThe tests will now be ignored, rather than fail the build, when running on JDKs that do not know about the curve used in the test."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/traffic/GlobalTrafficShapingHandler.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84wOzxS2gAoZGFlYmRlYzcyMzFiZmQzYzc4ZWIxOGIzMDVmNmEzMDFiMDdhMzhlOQ",
                "url": "https://github.com/netty/netty/pull/11949/commits/daebdec7231bfd3c78eb18b305f6a301b07a38e9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11948,
                "url": "https://github.com/netty/netty/issues/11948",
                "title": "Typo mistake of GlobalTrafficShapingHandler ",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/7020808/147249617-1ab8b151-7577-4387-a046-49fd0ef321d5.png\"><img src=\"https://user-images.githubusercontent.com/7020808/147249617-1ab8b151-7577-4387-a046-49fd0ef321d5.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">This constructor argument should be <code class=\"notranslate\">ScheduledExecutorService</code> rather than EventExecutor according to the comment.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Null</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Null</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Null</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">doesn't matter.</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">doesn't matter.</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">doesn't matter.</p>",
                "resourcePath": "/netty/netty/issues/11948",
                "createdAt": "2021-12-23T13:59:08Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix: Make ByteToMessageDecoder not call read() in channelReadComplete, if no channelRead fired.",
        "url": "https://github.com/netty/netty/pull/11966",
        "resourcePath": "/netty/netty/pull/11966",
        "createdAt": "2022-01-02T13:29:06Z",
        "number": 11966,
        "mergeCommit": {
          "oid": "1cbd3afcdec9591b477ccddc3173afd7b30b7df5",
          "message": " ByteToMessageDecoder must  not call read() in channelReadComplete(...), if no channelRead(...) was fired. (#11966)\n\nMotivation:\r\n\r\nWhen ByteToMessageDecoder added in channelRead(), the following channelReadComplete() will lead ByteToMessageDecoder to call a read(),\r\nwhich is not expected.\r\n\r\nModifications:\r\n\r\nAdd a field variable tracking the state of if ByteToMessageDecoder.channelRead() is fired after handler added. And if it was NOT fired, then the next channelReadComplete() would not call read()\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11965\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/1cbd3afcdec9591b477ccddc3173afd7b30b7df5",
          "parents": {
            "nodes": [
              {
                "oid": "849649b48d3c8fbf86565b8fa28a07f8b673adaf",
                "message": "(small) Fix linked issue in SslTasksRunner comment (#11977)\n\nMotivation:\r\n\r\nWhile debugging strange behavior of SSL tasks on older JDKs (~1.8.221) for grpc-java, noticed a typo in a comment referring to the issue with more context on the reentrancy issues and tasks. \r\nRef  #11854.\r\n\r\nModification:\r\nFor posterity.\r\n\r\nResult:\r\nNo op, just a change in a comment."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/test/java/io/netty/handler/codec/ByteToMessageDecoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84wcVSi2gAoMjkzZGZhNDBhYTU3MzY1OGE0MTJhYTZlMDNkNjM4MjNmZjQ0NGJjZg",
                "url": "https://github.com/netty/netty/pull/11966/commits/293dfa40aa573658a412aa6e03d63823ff444bcf"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11965,
                "url": "https://github.com/netty/netty/issues/11965",
                "title": "WebSocket server loss one frame, maybe caused by ByteToMessageDecoder trigger a unexpected read() when readCompleted fired",
                "bodyHTML": "<p dir=\"auto\">We're creating a relay-like application with WebSocket. When the WebSocket client sends an upgrade request to the server, the server sets the channel's autoRead to false (or config child channel autoRead to false, and manually trigger first read()). When the upstream connection is ready (which is started by another type of client), and the relay handler would be ok, set autoRead to true.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">No <code class=\"notranslate\">channelRead</code> fired after setting autoRead to false</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">A frame was read and then discard in TailContext</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">See the following junit test:</p>\n<ol dir=\"auto\">\n<li>start testWebsocketServer</li>\n<li>start testWebsocketServerClient</li>\n<li>watch the server's log</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"18:46:25.176 [nioEventLoopGroup-2-1] DEBUG i.n.channel.DefaultChannelPipeline - Discarded inbound message TextWebSocketFrame(data: PooledUnsafeDirectByteBuf(ridx: 0, widx: 7, cap: 7)) that reached at the tail of the pipeline. Please check your pipeline configuration.\n18:46:25.176 [nioEventLoopGroup-2-1] DEBUG i.n.channel.DefaultChannelPipeline - Discarded message pipeline : [wsencoder, wsdecoder, io.netty.handler.codec.http.websocketx.Utf8FrameValidator, WebSocketServerProtocolHandler#0, DefaultChannelPipeline$TailContext#0]. Channel : [id: 0xc1bcc332, L:/127.0.0.1:8100 - R:/127.0.0.1:64710].\n18:46:27.149 [nioEventLoopGroup-2-1] INFO  com.example.alexlx.WebSocketTest - read: hello 1\n18:46:27.179 [nioEventLoopGroup-2-1] INFO  com.example.alexlx.WebSocketTest - read: hello 2\"><pre class=\"notranslate\"><code class=\"notranslate\">18:46:25.176 [nioEventLoopGroup-2-1] DEBUG i.n.channel.DefaultChannelPipeline - Discarded inbound message TextWebSocketFrame(data: PooledUnsafeDirectByteBuf(ridx: 0, widx: 7, cap: 7)) that reached at the tail of the pipeline. Please check your pipeline configuration.\n18:46:25.176 [nioEventLoopGroup-2-1] DEBUG i.n.channel.DefaultChannelPipeline - Discarded message pipeline : [wsencoder, wsdecoder, io.netty.handler.codec.http.websocketx.Utf8FrameValidator, WebSocketServerProtocolHandler#0, DefaultChannelPipeline$TailContext#0]. Channel : [id: 0xc1bcc332, L:/127.0.0.1:8100 - R:/127.0.0.1:64710].\n18:46:27.149 [nioEventLoopGroup-2-1] INFO  com.example.alexlx.WebSocketTest - read: hello 1\n18:46:27.179 [nioEventLoopGroup-2-1] INFO  com.example.alexlx.WebSocketTest - read: hello 2\n</code></pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"package com.example.alexlx;\n\nimport io.netty.bootstrap.Bootstrap;\nimport io.netty.bootstrap.ServerBootstrap;\nimport io.netty.channel.*;\nimport io.netty.channel.nio.NioEventLoopGroup;\nimport io.netty.channel.socket.nio.NioServerSocketChannel;\nimport io.netty.channel.socket.nio.NioSocketChannel;\nimport io.netty.handler.codec.http.HttpClientCodec;\nimport io.netty.handler.codec.http.HttpObjectAggregator;\nimport io.netty.handler.codec.http.HttpServerCodec;\nimport io.netty.handler.codec.http.websocketx.TextWebSocketFrame;\nimport io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;\nimport io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;\nimport io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;\nimport org.junit.Test;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.util.concurrent.TimeUnit;\n\n\npublic class WebSocketTest {\n    private static final Logger log = LoggerFactory.getLogger(WebSocketTest.class);\n    @Test\n    public void testWebsocketServer() {\n        NioEventLoopGroup group = new NioEventLoopGroup(1);\n        new ServerBootstrap()\n                .group(group)\n                .channel(NioServerSocketChannel.class)\n                .childOption(ChannelOption.AUTO_READ, false)\n                .childHandler(new ChannelInitializer&lt;Channel&gt;() {\n                    @Override\n                    protected void initChannel(Channel ch) throws Exception {\n                        ChannelPipeline p = ch.pipeline();\n                        p.addLast(\n                                new HttpServerCodec(),\n                                new HttpObjectAggregator(1024 * 1024),\n                                new WebSocketServerProtocolHandler(&quot;/ws&quot;),\n                                new SimpleUserEventChannelHandler&lt;WebSocketServerProtocolHandler.HandshakeComplete&gt;() {\n                                    @Override\n                                    protected void eventReceived(ChannelHandlerContext ctx, WebSocketServerProtocolHandler.HandshakeComplete evt) throws Exception {\n                                        log.info(&quot;handshake {}&quot;, evt);\n                                        ctx.pipeline().remove(this);\n                                        // Simulate the relay connection established in 3 seconds\n                                        ctx.executor().schedule(\n                                                new Runnable() {\n                                                    @Override\n                                                    public void run() {\n                                                        ctx.channel().config().setAutoRead(true);\n                                                        ctx.pipeline().addLast(new SimpleChannelInboundHandler&lt;TextWebSocketFrame&gt;() {\n                                                            @Override\n                                                            protected void channelRead0(ChannelHandlerContext ctx, TextWebSocketFrame msg) throws Exception {\n                                                                log.info(&quot;read: &quot; + msg.text());\n                                                            }\n                                                        });\n                                                    }\n                                                },\n                                                3, TimeUnit.SECONDS\n                                        );\n                                    }\n                                }\n                        );\n                        ch.read();\n\n                    }\n                })\n                .bind(8100).syncUninterruptibly().channel().closeFuture().syncUninterruptibly();\n    }\n\n    @Test\n    public void testWebsocketServerClient() {\n        new Bootstrap()\n                .group(new NioEventLoopGroup(1))\n                .channel(NioSocketChannel.class)\n                .handler(new ChannelInitializer&lt;Channel&gt;() {\n                    @Override\n                    protected void initChannel(Channel ch) throws Exception {\n                        ch.pipeline().addLast(\n                                new HttpClientCodec(),\n                                new HttpObjectAggregator(1024 * 1024),\n                                new WebSocketClientProtocolHandler(\n                                        WebSocketClientProtocolConfig.newBuilder()\n                                                .webSocketUri(&quot;ws://127.0.0.1:8100/ws&quot;)\n                                                .build()),\n                                new SimpleUserEventChannelHandler&lt;WebSocketClientProtocolHandler.ClientHandshakeStateEvent&gt;() {\n                                    @Override\n                                    protected void eventReceived(ChannelHandlerContext ctx, WebSocketClientProtocolHandler.ClientHandshakeStateEvent evt) throws Exception {\n                                        if (evt == WebSocketClientProtocolHandler.ClientHandshakeStateEvent.HANDSHAKE_COMPLETE) {\n                                            log.info(&quot;HANDSHAKE_COMPLETE&quot;);\n                                            ctx.channel().eventLoop()\n                                                    .scheduleAtFixedRate(new Runnable() {\n                                                        int i = 0;\n                                                        @Override\n                                                        public void run() {\n                                                            log.info(&quot;write {}, writable={}&quot;, i, ch.isWritable());\n                                                            ch.writeAndFlush(new TextWebSocketFrame(&quot;hello &quot; + (i++)));\n                                                            if (i &gt;= 10) {\n                                                                ctx.close();\n                                                            }\n                                                        }\n                                                    }, 1, 1, TimeUnit.SECONDS);\n                                        }\n                                    }\n                                }\n                        );\n                    }\n                })\n                .connect(&quot;127.0.0.1&quot;, 8100)\n                .syncUninterruptibly()\n                .channel().closeFuture().syncUninterruptibly();\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">package</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">example</span>.<span class=\"pl-s1\">alexlx</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">bootstrap</span>.<span class=\"pl-s1\">Bootstrap</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">bootstrap</span>.<span class=\"pl-s1\">ServerBootstrap</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.*;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">NioEventLoopGroup</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">socket</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">NioServerSocketChannel</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">socket</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">NioSocketChannel</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">HttpClientCodec</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">HttpObjectAggregator</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">HttpServerCodec</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">websocketx</span>.<span class=\"pl-s1\">TextWebSocketFrame</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">websocketx</span>.<span class=\"pl-s1\">WebSocketClientProtocolConfig</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">websocketx</span>.<span class=\"pl-s1\">WebSocketClientProtocolHandler</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">websocketx</span>.<span class=\"pl-s1\">WebSocketServerProtocolHandler</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">slf4j</span>.<span class=\"pl-s1\">Logger</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">slf4j</span>.<span class=\"pl-s1\">LoggerFactory</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">concurrent</span>.<span class=\"pl-s1\">TimeUnit</span>;\n\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">WebSocketTest</span> {\n    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Logger</span> <span class=\"pl-s1\">log</span> = <span class=\"pl-smi\">LoggerFactory</span>.<span class=\"pl-en\">getLogger</span>(<span class=\"pl-smi\">WebSocketTest</span>.<span class=\"pl-k\">class</span>);\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">testWebsocketServer</span>() {\n        <span class=\"pl-smi\">NioEventLoopGroup</span> <span class=\"pl-s1\">group</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">NioEventLoopGroup</span>(<span class=\"pl-c1\">1</span>);\n        <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ServerBootstrap</span>()\n                .<span class=\"pl-en\">group</span>(<span class=\"pl-s1\">group</span>)\n                .<span class=\"pl-en\">channel</span>(<span class=\"pl-smi\">NioServerSocketChannel</span>.<span class=\"pl-k\">class</span>)\n                .<span class=\"pl-en\">childOption</span>(<span class=\"pl-smi\">ChannelOption</span>.<span class=\"pl-c1\">AUTO_READ</span>, <span class=\"pl-c1\">false</span>)\n                .<span class=\"pl-en\">childHandler</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">ChannelInitializer</span>&lt;<span class=\"pl-smi\">Channel</span>&gt;() {\n                    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                    <span class=\"pl-k\">protected</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">initChannel</span>(<span class=\"pl-smi\">Channel</span> <span class=\"pl-s1\">ch</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n                        <span class=\"pl-smi\">ChannelPipeline</span> <span class=\"pl-s1\">p</span> = <span class=\"pl-s1\">ch</span>.<span class=\"pl-en\">pipeline</span>();\n                        <span class=\"pl-s1\">p</span>.<span class=\"pl-en\">addLast</span>(\n                                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">HttpServerCodec</span>(),\n                                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">HttpObjectAggregator</span>(<span class=\"pl-c1\">1024</span> * <span class=\"pl-c1\">1024</span>),\n                                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">WebSocketServerProtocolHandler</span>(<span class=\"pl-s\">\"/ws\"</span>),\n                                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SimpleUserEventChannelHandler</span>&lt;<span class=\"pl-smi\">WebSocketServerProtocolHandler</span>.<span class=\"pl-smi\">HandshakeComplete</span>&gt;() {\n                                    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                                    <span class=\"pl-k\">protected</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">eventReceived</span>(<span class=\"pl-smi\">ChannelHandlerContext</span> <span class=\"pl-s1\">ctx</span>, <span class=\"pl-smi\">WebSocketServerProtocolHandler</span>.<span class=\"pl-smi\">HandshakeComplete</span> <span class=\"pl-s1\">evt</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n                                        <span class=\"pl-s1\">log</span>.<span class=\"pl-en\">info</span>(<span class=\"pl-s\">\"handshake {}\"</span>, <span class=\"pl-s1\">evt</span>);\n                                        <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">pipeline</span>().<span class=\"pl-en\">remove</span>(<span class=\"pl-smi\">this</span>);\n                                        <span class=\"pl-c\">// Simulate the relay connection established in 3 seconds</span>\n                                        <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">executor</span>().<span class=\"pl-en\">schedule</span>(\n                                                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Runnable</span>() {\n                                                    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                                                    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">run</span>() {\n                                                        <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">config</span>().<span class=\"pl-en\">setAutoRead</span>(<span class=\"pl-c1\">true</span>);\n                                                        <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">pipeline</span>().<span class=\"pl-en\">addLast</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">SimpleChannelInboundHandler</span>&lt;<span class=\"pl-smi\">TextWebSocketFrame</span>&gt;() {\n                                                            <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                                                            <span class=\"pl-k\">protected</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">channelRead0</span>(<span class=\"pl-smi\">ChannelHandlerContext</span> <span class=\"pl-s1\">ctx</span>, <span class=\"pl-smi\">TextWebSocketFrame</span> <span class=\"pl-s1\">msg</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n                                                                <span class=\"pl-s1\">log</span>.<span class=\"pl-en\">info</span>(<span class=\"pl-s\">\"read: \"</span> + <span class=\"pl-s1\">msg</span>.<span class=\"pl-en\">text</span>());\n                                                            }\n                                                        });\n                                                    }\n                                                },\n                                                <span class=\"pl-c1\">3</span>, <span class=\"pl-smi\">TimeUnit</span>.<span class=\"pl-c1\">SECONDS</span>\n                                        );\n                                    }\n                                }\n                        );\n                        <span class=\"pl-s1\">ch</span>.<span class=\"pl-en\">read</span>();\n\n                    }\n                })\n                .<span class=\"pl-en\">bind</span>(<span class=\"pl-c1\">8100</span>).<span class=\"pl-en\">syncUninterruptibly</span>().<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">closeFuture</span>().<span class=\"pl-en\">syncUninterruptibly</span>();\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">testWebsocketServerClient</span>() {\n        <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Bootstrap</span>()\n                .<span class=\"pl-en\">group</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">NioEventLoopGroup</span>(<span class=\"pl-c1\">1</span>))\n                .<span class=\"pl-en\">channel</span>(<span class=\"pl-smi\">NioSocketChannel</span>.<span class=\"pl-k\">class</span>)\n                .<span class=\"pl-en\">handler</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">ChannelInitializer</span>&lt;<span class=\"pl-smi\">Channel</span>&gt;() {\n                    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                    <span class=\"pl-k\">protected</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">initChannel</span>(<span class=\"pl-smi\">Channel</span> <span class=\"pl-s1\">ch</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n                        <span class=\"pl-s1\">ch</span>.<span class=\"pl-en\">pipeline</span>().<span class=\"pl-en\">addLast</span>(\n                                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">HttpClientCodec</span>(),\n                                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">HttpObjectAggregator</span>(<span class=\"pl-c1\">1024</span> * <span class=\"pl-c1\">1024</span>),\n                                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">WebSocketClientProtocolHandler</span>(\n                                        <span class=\"pl-smi\">WebSocketClientProtocolConfig</span>.<span class=\"pl-en\">newBuilder</span>()\n                                                .<span class=\"pl-en\">webSocketUri</span>(<span class=\"pl-s\">\"ws://127.0.0.1:8100/ws\"</span>)\n                                                .<span class=\"pl-en\">build</span>()),\n                                <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SimpleUserEventChannelHandler</span>&lt;<span class=\"pl-smi\">WebSocketClientProtocolHandler</span>.<span class=\"pl-smi\">ClientHandshakeStateEvent</span>&gt;() {\n                                    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                                    <span class=\"pl-k\">protected</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">eventReceived</span>(<span class=\"pl-smi\">ChannelHandlerContext</span> <span class=\"pl-s1\">ctx</span>, <span class=\"pl-smi\">WebSocketClientProtocolHandler</span>.<span class=\"pl-smi\">ClientHandshakeStateEvent</span> <span class=\"pl-s1\">evt</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n                                        <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">evt</span> == <span class=\"pl-smi\">WebSocketClientProtocolHandler</span>.<span class=\"pl-s1\">ClientHandshakeStateEvent</span>.<span class=\"pl-c1\">HANDSHAKE_COMPLETE</span>) {\n                                            <span class=\"pl-s1\">log</span>.<span class=\"pl-en\">info</span>(<span class=\"pl-s\">\"HANDSHAKE_COMPLETE\"</span>);\n                                            <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">eventLoop</span>()\n                                                    .<span class=\"pl-en\">scheduleAtFixedRate</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Runnable</span>() {\n                                                        <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">i</span> = <span class=\"pl-c1\">0</span>;\n                                                        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                                                        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">run</span>() {\n                                                            <span class=\"pl-s1\">log</span>.<span class=\"pl-en\">info</span>(<span class=\"pl-s\">\"write {}, writable={}\"</span>, <span class=\"pl-s1\">i</span>, <span class=\"pl-s1\">ch</span>.<span class=\"pl-en\">isWritable</span>());\n                                                            <span class=\"pl-s1\">ch</span>.<span class=\"pl-en\">writeAndFlush</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">TextWebSocketFrame</span>(<span class=\"pl-s\">\"hello \"</span> + (<span class=\"pl-s1\">i</span>++)));\n                                                            <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">i</span> &gt;= <span class=\"pl-c1\">10</span>) {\n                                                                <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">close</span>();\n                                                            }\n                                                        }\n                                                    }, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-smi\">TimeUnit</span>.<span class=\"pl-c1\">SECONDS</span>);\n                                        }\n                                    }\n                                }\n                        );\n                    }\n                })\n                .<span class=\"pl-en\">connect</span>(<span class=\"pl-s\">\"127.0.0.1\"</span>, <span class=\"pl-c1\">8100</span>)\n                .<span class=\"pl-en\">syncUninterruptibly</span>()\n                .<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">closeFuture</span>().<span class=\"pl-en\">syncUninterruptibly</span>();\n    }\n}</pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.52</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">1.8</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">windows 10 or mac os x 10.14</p>",
                "resourcePath": "/netty/netty/issues/11965",
                "createdAt": "2022-01-02T11:38:50Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix ByteBufUtil.indexOf(buf, buf)",
        "url": "https://github.com/netty/netty/pull/11970",
        "resourcePath": "/netty/netty/pull/11970",
        "createdAt": "2022-01-05T00:59:30Z",
        "number": 11970,
        "mergeCommit": {
          "oid": "195b84910644e51f2323a30d55704f0e361fdcd8",
          "message": "Fix ByteBufUtil.indexOf(buf, buf) (#11970)\n\nMotivation:\r\nThe ByteBufUtil.indexOf(buf, buf) method has historically been returning absolute indexes in the haystack.\r\nWith the introduction of the Two-Way algorithm, it inadvertently got changed to return offsets relative to the haystacks reader index.\r\nThat's a compatibility breaking change.\r\n\r\nModification:\r\nRestore the old behavior of returning absolute indexes.\r\n\r\nResult:\r\nCompatibility is restored.\r\nFixes #11963\r\n\r\nNote that the impact of this bug has been relatively minor inside Netty itself, since the produced index was only used for the error message when Http2ConnectionHandler failed to detect \"HTTP/1\" in the client preface.",
          "commitUrl": "https://github.com/netty/netty/commit/195b84910644e51f2323a30d55704f0e361fdcd8",
          "parents": {
            "nodes": [
              {
                "oid": "6feaf9c8b2b65810f41fde264f7d2ec7294b2085",
                "message": "Add a `fast` maven profile (#11969)\n\nMotivation:\r\nTo assist IDEs and other tools, it is often required to make `install` builds locally.\r\nSince this can block work, it's desirable for these builds to be as fast as possible.\r\n\r\nModification:\r\nAdd a profile that skips many checks, to speed up the build.\r\n\r\nResult:\r\nIt is now possible to make a clean build with `mvn clean install -Pfast -T1C` in (on my machine) under two minutes."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/ByteBufUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/ByteBufUtilTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84wiWBe2gAoOWM5ODI1OWQxMjk3YTliZGJmZTRmNGFhMTNhY2I4YjRkNDcxNDY4Yw",
                "url": "https://github.com/netty/netty/pull/11970/commits/9c98259d1297a9bdbfe4f4aa13acb8b4d471468c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11963,
                "url": "https://github.com/netty/netty/issues/11963",
                "title": "the result of `ByteBufUtil.indexOf(ByteBuf needle, ByteBuf haystack)`  wrong",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        ByteBuf haystack = Unpooled.copiedBuffer(&quot;+PONG\\r\\n&quot;, CharsetUtil.UTF_8);\n        ByteBuf needle = Unpooled.copiedBuffer(&quot;\\r\\n&quot;, CharsetUtil.UTF_8);\n        haystack.readByte();\n\n        int index = ByteBufUtil.indexOf(needle ,haystack);\n\n        System.out.println(index);\"><pre class=\"notranslate\"><code class=\"notranslate\">        ByteBuf haystack = Unpooled.copiedBuffer(\"+PONG\\r\\n\", CharsetUtil.UTF_8);\n        ByteBuf needle = Unpooled.copiedBuffer(\"\\r\\n\", CharsetUtil.UTF_8);\n        haystack.readByte();\n\n        int index = ByteBufUtil.indexOf(needle ,haystack);\n\n        System.out.println(index);\n</code></pre></div>\n<p dir=\"auto\">expected result is 5.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">actual result is 4.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.73.Final-SNAPSHOT</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"11.0.13\" 2021-10-19<br>\nOpenJDK Runtime Environment (build 11.0.13+8-Ubuntu-0ubuntu1.21.10)<br>\nOpenJDK 64-Bit Server VM (build 11.0.13+8-Ubuntu-0ubuntu1.21.10, mixed mode, sharing)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux XPS-13-9310 5.13.0-22-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1321311\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/22\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/22/hovercard\" href=\"https://github.com/netty/netty/pull/22\">#22</a>-Ubuntu SMP Fri Nov 5 13:21:36 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/11963",
                "createdAt": "2021-12-30T13:46:33Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "WebSocketServerProtocolHandshakeHandler should work without aggregation",
        "url": "https://github.com/netty/netty/pull/11976",
        "resourcePath": "/netty/netty/pull/11976",
        "createdAt": "2022-01-06T14:44:49Z",
        "number": 11976,
        "mergeCommit": {
          "oid": "fd05a3311dd065d4af2650e2cf8dc22345d99a9f",
          "message": "WebSocketServerProtocolHandshakeHandler should work without aggregation (#11976)\n\nMotivation:\r\n\r\nWebSocketServerProtocolHandshakeHandler assumes the msg is FullHttpRequest which is not really needed.\r\n\r\nModifications:\r\n\r\n- Rework logic so we not depend on the fact that aggregation is used.\r\n- Add test\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11952",
          "commitUrl": "https://github.com/netty/netty/commit/fd05a3311dd065d4af2650e2cf8dc22345d99a9f",
          "parents": {
            "nodes": [
              {
                "oid": "1cbd3afcdec9591b477ccddc3173afd7b30b7df5",
                "message": " ByteToMessageDecoder must  not call read() in channelReadComplete(...), if no channelRead(...) was fired. (#11966)\n\nMotivation:\r\n\r\nWhen ByteToMessageDecoder added in channelRead(), the following channelReadComplete() will lead ByteToMessageDecoder to call a read(),\r\nwhich is not expected.\r\n\r\nModifications:\r\n\r\nAdd a field variable tracking the state of if ByteToMessageDecoder.channelRead() is fired after handler added. And if it was NOT fired, then the next channelReadComplete() would not call read()\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11965\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandshakeHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketServerProtocolHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84wnMDq2gAoMDc4YzM5ZDAxOTc4NTM0NzBlYmNjZjJhZTBlZTA4NmE1Yjc4ODlmZQ",
                "url": "https://github.com/netty/netty/pull/11976/commits/078c39d0197853470ebccf2ae0ee086a5b7889fe"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11952,
                "url": "https://github.com/netty/netty/issues/11952",
                "title": "WebSocketServerProtocolHandler throwing Exception without preceding HttpObjectAggregator",
                "bodyHTML": "<p dir=\"auto\">I'm building a service which will work with both HTTP and Websockets, and potentially take large uploads from both. Because of this I'm not using Aggregators for either, but streaming the received chunks to the processing threads as they arrive so they can be processed.</p>\n<p dir=\"auto\">However the WebSocketServerProtocolHandler doesn't work without a preceding HttpObjectAggregator. If I leave it out I get:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.ClassCastException: class io.netty.handler.codec.http.DefaultHttpRequest cannot be cast to class io.netty.handler.codec.http.FullHttpRequest (io.netty.handler.codec.http.DefaultHttpRequest and io.netty.handler.codec.http.FullHttpRequest are in unnamed module of loader 'app')\n\tat io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler.channelRead(WebSocketServerProtocolHandshakeHandler.java:63)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.ClassCastException: class io.netty.handler.codec.http.DefaultHttpRequest cannot be cast to class io.netty.handler.codec.http.FullHttpRequest (io.netty.handler.codec.http.DefaultHttpRequest and io.netty.handler.codec.http.FullHttpRequest are in unnamed module of loader 'app')\n\tat io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler.channelRead(WebSocketServerProtocolHandshakeHandler.java:63)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\n\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:324)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:296)\n\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n</code></pre></div>\n<p dir=\"auto\">I can see in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/netty/netty/commit/afa9e71ed37ad1e46a837f3212d6ff1712f12a92/hovercard\" href=\"https://github.com/netty/netty/commit/afa9e71ed37ad1e46a837f3212d6ff1712f12a92\"><tt>afa9e71</tt></a> that this case has been considered already and it looks like it should be working.</p>\n<p dir=\"auto\">Here's my testcase - uncomment the <code class=\"notranslate\">new HttpObjectAggregator(65536)</code> to see the difference.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import io.netty.channel.*;\nimport io.netty.handler.logging.*;\nimport io.netty.handler.codec.http.*;\nimport io.netty.handler.codec.http.websocketx.*;\nimport io.netty.channel.nio.NioEventLoopGroup;\nimport io.netty.channel.socket.SocketChannel;\nimport io.netty.channel.socket.nio.NioServerSocketChannel;\nimport io.netty.bootstrap.ServerBootstrap;\n\npublic class NettyTest {\n    public static void main(String[] args) throws Exception {\n        EventLoopGroup bossGroup = new NioEventLoopGroup(1);\n        EventLoopGroup workerGroup = new NioEventLoopGroup();\n        ServerBootstrap bootstrap = new ServerBootstrap();\n        bootstrap.group(bossGroup, workerGroup)\n          .channel(NioServerSocketChannel.class)\n          .handler(new LoggingHandler(LogLevel.INFO))\n          .childHandler(new ChannelInitializer&lt;SocketChannel&gt;() {\n            @Override public void initChannel(SocketChannel ch) {\n                ChannelPipeline p = ch.pipeline();\n                p.addLast(new HttpServerCodec());\n//                p.addLast(new HttpObjectAggregator(65536));\n                p.addLast(new WebSocketServerProtocolHandler(&quot;/ws&quot;, null, true));\n                p.addLast(new SimpleChannelInboundHandler&lt;WebSocketFrame&gt;() {\n                    @Override protected void channelRead0(ChannelHandlerContext ctx, WebSocketFrame msg) throws Exception {\n                        System.out.println(&quot;Received &quot; + msg);\n                    }\n                });\n            }\n        });\n        bootstrap.bind(8080).sync().channel().closeFuture().sync();\n\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.*;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">logging</span>.*;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.*;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">websocketx</span>.*;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">NioEventLoopGroup</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">socket</span>.<span class=\"pl-s1\">SocketChannel</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">socket</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">NioServerSocketChannel</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">bootstrap</span>.<span class=\"pl-s1\">ServerBootstrap</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">NettyTest</span> {\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n        <span class=\"pl-smi\">EventLoopGroup</span> <span class=\"pl-s1\">bossGroup</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">NioEventLoopGroup</span>(<span class=\"pl-c1\">1</span>);\n        <span class=\"pl-smi\">EventLoopGroup</span> <span class=\"pl-s1\">workerGroup</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">NioEventLoopGroup</span>();\n        <span class=\"pl-smi\">ServerBootstrap</span> <span class=\"pl-s1\">bootstrap</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ServerBootstrap</span>();\n        <span class=\"pl-s1\">bootstrap</span>.<span class=\"pl-en\">group</span>(<span class=\"pl-s1\">bossGroup</span>, <span class=\"pl-s1\">workerGroup</span>)\n          .<span class=\"pl-en\">channel</span>(<span class=\"pl-smi\">NioServerSocketChannel</span>.<span class=\"pl-k\">class</span>)\n          .<span class=\"pl-en\">handler</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">LoggingHandler</span>(<span class=\"pl-smi\">LogLevel</span>.<span class=\"pl-c1\">INFO</span>))\n          .<span class=\"pl-en\">childHandler</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">ChannelInitializer</span>&lt;<span class=\"pl-smi\">SocketChannel</span>&gt;() {\n            <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">initChannel</span>(<span class=\"pl-smi\">SocketChannel</span> <span class=\"pl-s1\">ch</span>) {\n                <span class=\"pl-smi\">ChannelPipeline</span> <span class=\"pl-s1\">p</span> = <span class=\"pl-s1\">ch</span>.<span class=\"pl-en\">pipeline</span>();\n                <span class=\"pl-s1\">p</span>.<span class=\"pl-en\">addLast</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">HttpServerCodec</span>());\n<span class=\"pl-c\">//                p.addLast(new HttpObjectAggregator(65536));</span>\n                <span class=\"pl-s1\">p</span>.<span class=\"pl-en\">addLast</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">WebSocketServerProtocolHandler</span>(<span class=\"pl-s\">\"/ws\"</span>, <span class=\"pl-c1\">null</span>, <span class=\"pl-c1\">true</span>));\n                <span class=\"pl-s1\">p</span>.<span class=\"pl-en\">addLast</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">SimpleChannelInboundHandler</span>&lt;<span class=\"pl-smi\">WebSocketFrame</span>&gt;() {\n                    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span> <span class=\"pl-k\">protected</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">channelRead0</span>(<span class=\"pl-smi\">ChannelHandlerContext</span> <span class=\"pl-s1\">ctx</span>, <span class=\"pl-smi\">WebSocketFrame</span> <span class=\"pl-s1\">msg</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n                        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"Received \"</span> + <span class=\"pl-s1\">msg</span>);\n                    }\n                });\n            }\n        });\n        <span class=\"pl-s1\">bootstrap</span>.<span class=\"pl-en\">bind</span>(<span class=\"pl-c1\">8080</span>).<span class=\"pl-en\">sync</span>().<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">closeFuture</span>().<span class=\"pl-en\">sync</span>();\n\n    }\n}</pre></div>\n<p dir=\"auto\">This is with Netty 4.1.63</p>\n<p dir=\"auto\">I'm only a couple of days into Netty so this could well be user error.</p>\n<p dir=\"auto\">Any suggestions? Other than using an Aggregator, that is.</p>",
                "resourcePath": "/netty/netty/issues/11952",
                "createdAt": "2021-12-23T19:39:34Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Correctly calculate the elementSize when cache alignment is configured",
        "url": "https://github.com/netty/netty/pull/11987",
        "resourcePath": "/netty/netty/pull/11987",
        "createdAt": "2022-01-10T16:21:19Z",
        "number": 11987,
        "mergeCommit": {
          "oid": "ef69732a42d020a4af50de57d91087f4f4c4876c",
          "message": "Correctly calculate the elementSize when cache alignment is configured (#11987)\n\n\r\nMotivation:\r\n\r\nWe need to take the cache alignment into account when we pre-calculate the ementSize otherwise we fail later.\r\n\r\nModifications:\r\n\r\n- Fix pre-calculation\r\n- Add unit test\r\n- Fix incorrect unit test\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11955",
          "commitUrl": "https://github.com/netty/netty/commit/ef69732a42d020a4af50de57d91087f4f4c4876c",
          "parents": {
            "nodes": [
              {
                "oid": "bd7e0f72bdcae09beccb42f0562a862caaf8c89e",
                "message": "Remove unused import (#11978)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolArena.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolChunk.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolSubpage.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PooledByteBufAllocator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/SizeClasses.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/AlignedPooledByteBufAllocatorTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/PoolArenaTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84wvnjR2gAoMzAwYWUyNWQ5MTBiNDI0NGZmNTljMTE3MjgzMmU3YmViYmEyM2EzOA",
                "url": "https://github.com/netty/netty/pull/11987/commits/300ae25d910b4244ff59c1172832e7bebba23a38"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11955,
                "url": "https://github.com/netty/netty/issues/11955",
                "title": "Assertion error when resizing buffers that had an initial capacity of zero",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">ByteBuf.capacity() should be able to successfully resize up to maxCapacity regardless of it's initial state.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">If two zero length buffers are created and resized to 17, an AssertionError is thrown:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.AssertionError\n\tat __randomizedtesting.SeedInfo.seed([7DAACA0E7D79473:4594B38D5FFB07BE]:0)\n\tat io.netty.buffer.PoolChunk.initBufWithSubpage(PoolChunk.java:573)\n\tat io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache.initBuf(PoolThreadCache.java:315)\n\tat io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate(PoolThreadCache.java:376)\n\tat io.netty.buffer.PoolThreadCache.allocate(PoolThreadCache.java:167)\n\tat io.netty.buffer.PoolThreadCache.allocateSmall(PoolThreadCache.java:151)\n\tat io.netty.buffer.PoolArena.tcacheAllocateSmall(PoolArena.java:148)\n\tat io.netty.buffer.PoolArena.allocate(PoolArena.java:134)\n\tat io.netty.buffer.PoolArena.reallocate(PoolArena.java:286)\n\tat io.netty.buffer.PooledByteBuf.capacity(PooledByteBuf.java:118)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.AssertionError\n\tat __randomizedtesting.SeedInfo.seed([7DAACA0E7D79473:4594B38D5FFB07BE]:0)\n\tat io.netty.buffer.PoolChunk.initBufWithSubpage(PoolChunk.java:573)\n\tat io.netty.buffer.PoolThreadCache$SubPageMemoryRegionCache.initBuf(PoolThreadCache.java:315)\n\tat io.netty.buffer.PoolThreadCache$MemoryRegionCache.allocate(PoolThreadCache.java:376)\n\tat io.netty.buffer.PoolThreadCache.allocate(PoolThreadCache.java:167)\n\tat io.netty.buffer.PoolThreadCache.allocateSmall(PoolThreadCache.java:151)\n\tat io.netty.buffer.PoolArena.tcacheAllocateSmall(PoolArena.java:148)\n\tat io.netty.buffer.PoolArena.allocate(PoolArena.java:134)\n\tat io.netty.buffer.PoolArena.reallocate(PoolArena.java:286)\n\tat io.netty.buffer.PooledByteBuf.capacity(PooledByteBuf.java:118)\n</code></pre></div>\n<p dir=\"auto\">Note: Initializing the two buffers with a length of 1 appears to fix the issue.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Test\n    public void testNetty() {\n\n        ByteBufAllocator allocator = new PooledByteBufAllocator(true);\n\n        ByteBuf a = allocator.buffer(0, 16384);\n        ByteBuf b = allocator.buffer(0, 16384);\n\n        System.out.println(&quot;a.capacity(&quot; + 16 + &quot;)&quot;);\n        a.capacity(16);\n        System.out.println(&quot;b.capacity(&quot; + 16 + &quot;)&quot;);\n        b.capacity(16);\n        System.out.println(&quot;a.capacity(&quot; + 17 + &quot;)&quot;);\n        a.capacity(17);\n        System.out.println(&quot;b.capacity(&quot; + 17 + &quot;)&quot;);\n        b.capacity(17);\n\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    @Test\n    public void testNetty() {\n\n        ByteBufAllocator allocator = new PooledByteBufAllocator(true);\n\n        ByteBuf a = allocator.buffer(0, 16384);\n        ByteBuf b = allocator.buffer(0, 16384);\n\n        System.out.println(\"a.capacity(\" + 16 + \")\");\n        a.capacity(16);\n        System.out.println(\"b.capacity(\" + 16 + \")\");\n        b.capacity(16);\n        System.out.println(\"a.capacity(\" + 17 + \")\");\n        a.capacity(17);\n        System.out.println(\"b.capacity(\" + 17 + \")\");\n        b.capacity(17);\n\n    }\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.70.FINAL</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">17.0.1</p>",
                "resourcePath": "/netty/netty/issues/11955",
                "createdAt": "2021-12-24T16:30:13Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make \"pinned memory\" from PooledByteBufAllocator reflect buffers in use",
        "url": "https://github.com/netty/netty/pull/11990",
        "resourcePath": "/netty/netty/pull/11990",
        "createdAt": "2022-01-11T17:18:05Z",
        "number": 11990,
        "mergeCommit": {
          "oid": "33247074a0becce08c1f48eec61e8da0c7bbe4c0",
          "message": "Make \"pinned memory\" from PooledByteBufAllocator reflect buffers in use (#11990)\n\nMotivation:\r\nThe pinned memory accounting was being done from a bad place.\r\nNamely, it was being done at the same time as the PoolChunk free memory accounting was being done.\r\nThat means the thread local caching was messing up the accuracy of the numbers.\r\n\r\nModification:\r\nMove pinned memory accounting to the PooledByteBuf init and deallocation methods, so it's tied to the buffer life cycle.\r\n\r\nResult:\r\nThe pinned memory accounting is updated as part of the pooled buffer life cycle, and is no longer being tricked by the activities of the thread-local buffer cache.\r\n\r\nFixes #11984",
          "commitUrl": "https://github.com/netty/netty/commit/33247074a0becce08c1f48eec61e8da0c7bbe4c0",
          "parents": {
            "nodes": [
              {
                "oid": "d60ea595bcd2399530d8becbced45df0b9b22aa5",
                "message": "ensure the side which enable SO_LINGER and call showdownOutput to start TCP half-closure in fin_wait2 state can still receive and process the data which is send by another side in the close_wait state (#11982)\n\nMotivation:\r\n\r\nwe can not call `doDeregister` to cancel the key of the channel from the selector in the `io.netty.channel.AbstractChannel.AbstractUnsafe#shutdownOutput(io.netty.channel.ChannelPromise, java.lang.Throwable)` method\u3002\r\n\r\n- because we should ensure the side which enbale `SO_LINGER` and call `showdownOutput` to start TCP half-closure in fin_wait2 state can still receive and process the data which is send by another side in the close_wait state\u3002\r\n\r\n- and the shutdown function does not block regardless of the SO_LINGER setting on the socket,so we don't need to use GlobalEventExecutor to execute the shutdown\r\n\r\nModification:\r\n\r\nIn summary there is no need to call `prepareToClose()` in the `AbstractChannel.AbstractUnsafe#shutdownOutput` method\r\n\r\nResult:\r\n\r\nFixes issue #11981 \r\n\r\nclient in the FIN_WAIT2 state can read and process these data which is sended by server in the CLOSE_WAIT state\uff0cwhen SO_LINGGER is used in the TCP half-closed scenario\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolChunk.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PooledByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/PooledByteBufAllocatorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84wz_GE2gAoZDdiMjY1ZjcwNjY5MDYzZDIyZTZhNDFmNjQyNWJkOTY2Y2VlOTdlNg",
                "url": "https://github.com/netty/netty/pull/11990/commits/d7b265f70669063d22e6a41f6425bd966cee97e6"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11984,
                "url": "https://github.com/netty/netty/issues/11984",
                "title": "PooledByteBufAllocator.pinnedDirectMemory is sometimes returning 0 even if some direct buffers are used",
                "bodyHTML": "<p dir=\"auto\">I'm trying to monitor the estimate of memory that is used by in-use direct buffers.<br>\nTo do so, I'm trying to use the PooledByteBufAllocator.pinnedDirectMemory() method but sometimes, it seems that this method is returning 0 even if some buffers are currently allocated and used (not yet released).</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">PooledByteBufAllocator.pinnedDirectMemory() should not return 0 in case some buffers are currently allocated.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Sometimes, not always, it seems that the PooledByteBufAllocator.pinnedDirectMemory() is returning 0 even if some buffers are allocated.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Please check attached sample project:</p>\n<p dir=\"auto\"><a href=\"https://github.com/netty/netty/files/7835795/netty.pinnedMemory.test.tar.gz\">netty.pinnedMemory.test.tar.gz</a></p>\n<p dir=\"auto\">The Test class is allocating some buffers, and before releasing them, it displays the pinned direct memory. It also displays an estimate of used memory by traversing arena of direct buffers, and for each arena, it accumulates the diff between the  chunk size and the bytes that are not yet allocated by in-use buffers:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    static long usedMem(List&lt;PoolArenaMetric&gt; arenas) {\n        long totalUsed = 0;\n        for (PoolArenaMetric arenaMetrics : arenas) {\n            for (PoolChunkListMetric arenaMetric : arenaMetrics.chunkLists()) {\n                for (PoolChunkMetric chunkMetric : arenaMetric) {\n                    // chunkMetric.chunkSize() returns maximum of bytes that can be served out of the chunk\n                    // and chunkMetric.freeBytes() returns the bytes that are not yet allocated by in-use buffers\n                    totalUsed += (chunkMetric.chunkSize() - chunkMetric.freeBytes());\n                }\n            }\n        }\n        return totalUsed;\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    static long usedMem(List&lt;PoolArenaMetric&gt; arenas) {\n        long totalUsed = 0;\n        for (PoolArenaMetric arenaMetrics : arenas) {\n            for (PoolChunkListMetric arenaMetric : arenaMetrics.chunkLists()) {\n                for (PoolChunkMetric chunkMetric : arenaMetric) {\n                    // chunkMetric.chunkSize() returns maximum of bytes that can be served out of the chunk\n                    // and chunkMetric.freeBytes() returns the bytes that are not yet allocated by in-use buffers\n                    totalUsed += (chunkMetric.chunkSize() - chunkMetric.freeBytes());\n                }\n            }\n        }\n        return totalUsed;\n    }\n</code></pre></div>\n<p dir=\"auto\">To run the program:</p>\n<p dir=\"auto\">./gradlew jar<br>\n./gradlew runTest</p>\n<p dir=\"auto\">The program displays many logs, like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"used=1810432, pinned=1372971008\nused=2097152, pinned=1373257728\nused=1974272, pinned=1371643904\"><pre class=\"notranslate\"><code class=\"notranslate\">used=1810432, pinned=1372971008\nused=2097152, pinned=1373257728\nused=1974272, pinned=1371643904\n</code></pre></div>\n<p dir=\"auto\"><em>used</em> corresponds to the result of the <em>usedMem</em> method shown above, and <em>pinned</em> corresponds to the result of the call to alloc.pinnedDirectMemory().</p>\n<p dir=\"auto\">Now, sometimes, you will notice that the pinned memory is zero:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"used=2031616, pinned=1835008\nused=1892352, pinned=188416\nused=1916928, pinned=212992\nused=1892352, pinned=0\nused=2023424, pinned=0\nused=2072576, pinned=0\n...\nused=2220032, pinned=2146779136\nused=2310144, pinned=2146869248\nused=1843200, pinned=2144354304\nused=1974272, pinned=2144485376\nused=2007040, pinned=2144518144\nused=1998848, pinned=2143215616\nused=2138112, pinned=2143354880\"><pre class=\"notranslate\"><code class=\"notranslate\">used=2031616, pinned=1835008\nused=1892352, pinned=188416\nused=1916928, pinned=212992\nused=1892352, pinned=0\nused=2023424, pinned=0\nused=2072576, pinned=0\n...\nused=2220032, pinned=2146779136\nused=2310144, pinned=2146869248\nused=1843200, pinned=2144354304\nused=1974272, pinned=2144485376\nused=2007040, pinned=2144518144\nused=1998848, pinned=2143215616\nused=2138112, pinned=2143354880\n</code></pre></div>\n<p dir=\"auto\">To stop, just press CTRL-C</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Please see attached sample project above</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.72.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"1.8.0_302\"<br>\nOpenJDK Runtime Environment (Zulu 8.56.0.23-CA-macos-aarch64) (build 1.8.0_302-b08)<br>\nOpenJDK 64-Bit Server VM (Zulu 8.56.0.23-CA-macos-aarch64) (build 25.302-b08, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">MacOS M1:</p>\n<p dir=\"auto\">Darwin xxx 21.1.0 Darwin Kernel Version 21.1.0: Wed Oct 13 17:33:24 PDT 2021; root:xnu-8019.41.5~1/RELEASE_ARM64_T8101 arm64</p>\n<p dir=\"auto\">The issue is also observed on linux Ubuntu:</p>\n<p dir=\"auto\">Linux xxx 5.13.0-22-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1321311\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/22\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/22/hovercard\" href=\"https://github.com/netty/netty/pull/22\">#22</a>-Ubuntu SMP Fri Nov 5 13:21:36 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/11984",
                "createdAt": "2022-01-09T20:17:28Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Try to not recycle objects back to terminated threads",
        "url": "https://github.com/netty/netty/pull/11996",
        "resourcePath": "/netty/netty/pull/11996",
        "createdAt": "2022-01-12T19:35:11Z",
        "number": 11996,
        "mergeCommit": {
          "oid": "55cdaa75adfaff89c9929de9893c8ff7bd2891ae",
          "message": "Try to not recycle objects back to terminated threads (#11996)\n\nMotivation:\r\nThe Recycler uses thread-local caches, and if objects are shared across threads, they will return to the thread-local pool they were allocated from.\r\nHowever, if that thread has terminated, then it will have no use for any returning objects and the return process can be skipped.\r\n\r\nModification:\r\nIn the associated `onRemoval` for the thread-local, mark the local pool as dead, by setting the `pooledHandles` reference to `null`.\r\nReturning objects to their original pools is then guarded by a null-check.\r\nTo make this thread-safe, the `pooledHandles` reference changes from `final` to `volatile`.\r\nWith a newer JVM baseline, we could have made the field plain, and null it out with an opaque store, because the `handle.toAvailable()` call otherwise gives us the compiler barriers we need to make our null-check thread-safe.\r\n\r\nResult:\r\nRecycler-able objects can be garbage collected sooner after the termination of the allocating thread.\r\n\r\nFixes #11864",
          "commitUrl": "https://github.com/netty/netty/commit/55cdaa75adfaff89c9929de9893c8ff7bd2891ae",
          "parents": {
            "nodes": [
              {
                "oid": "81385e04793bc7b0272ffb80519f3248932cdb5b",
                "message": "Use LongCounter to count pinned memory (#11995)\n\nMotivation:\r\n\r\nWe can use LongCounter and so use LongAdder when on Java8+.\r\n\r\nModifications:\r\n\r\nReplace AtomicInteger with LongCounter\r\n\r\nResult:\r\n\r\nLess overhead"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/Recycler.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84w4IOO2gAoZmI4YTNkN2NmMzg3NzY1ZjUwYjA1YjZhZWM5ZDUyYjYxYjk5ZTliZA",
                "url": "https://github.com/netty/netty/pull/11996/commits/fb8a3d7cf387765f50b05b6aec9d52b61b99e9bd"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11864,
                "url": "https://github.com/netty/netty/issues/11864",
                "title": "Multithreading reclaiming objects in the Recycler object pool issue problem",
                "bodyHTML": "<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.70.final</p>\n<h3 dir=\"auto\">Issue</h3>\n<p dir=\"auto\">The issue shown in the picture below\uff0cThread 2 is recycling objects which belongs to stack1 created by thread 1\u3002</p>\n<p dir=\"auto\">If thread1 was GC'ed at this moment\uff0ci think thread2 does not need to add this object to the <code class=\"notranslate\">weakOrderQueue node</code> which is in the <code class=\"notranslate\">Stack1</code> any more\u3002 because <code class=\"notranslate\">stack1</code> will be GC'ed sooner or later\u3002This object will never be used again even if it is recycled.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5794695/143539720-36080ab2-458e-4c52-b6cb-db0c2f6f602d.png\"><img src=\"https://user-images.githubusercontent.com/5794695/143539720-36080ab2-458e-4c52-b6cb-db0c2f6f602d.png\" alt=\"netty recycler issue\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">But the <code class=\"notranslate\">Recycler</code>'s related source code about recycling objects does not deal with the situation of <code class=\"notranslate\">threadRef.get()  == null</code>,<br>\nand still continue to add objects to the weakOrderQueue node. I think this is a waste of time.  the sooner we deal with the situation of <code class=\"notranslate\">threadRef.get()  == null</code> , the better\u3002</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private static final class Stack&lt;T&gt; {\n\n        void push(DefaultHandle&lt;?&gt; item) {\n            Thread currentThread = Thread.currentThread();\n            if (threadRef.get() == currentThread) {\n                // The current Thread is the thread that belongs to the Stack, we can try to push the object now.\n                pushNow(item);\n            } else {\n                // The current Thread is not the one that belongs to the Stack\n                // (or the Thread that belonged to the Stack was collected already), we need to signal that the push\n                // happens later.\n                pushLater(item, currentThread);\n            }\n        }\n\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">private static final class Stack&lt;T&gt; {\n\n        void push(DefaultHandle&lt;?&gt; item) {\n            Thread currentThread = Thread.currentThread();\n            if (threadRef.get() == currentThread) {\n                // The current Thread is the thread that belongs to the Stack, we can try to push the object now.\n                pushNow(item);\n            } else {\n                // The current Thread is not the one that belongs to the Stack\n                // (or the Thread that belonged to the Stack was collected already), we need to signal that the push\n                // happens later.\n                pushLater(item, currentThread);\n            }\n        }\n\n}\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/11864",
                "createdAt": "2021-11-26T07:32:24Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "InboundHttp2ToHttpAdapter responds with 413 status code",
        "url": "https://github.com/netty/netty/pull/12004",
        "resourcePath": "/netty/netty/pull/12004",
        "createdAt": "2022-01-14T14:44:48Z",
        "number": 12004,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2Exception.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/InboundHttp2ToHttpAdapter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionHandlerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/InboundHttp2ToHttpAdapterTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84xCkiS2gAoZDBhNjRmOTRlMjkxYWRkNDRiNTQzZDliZTU3YmQyZTgyZmIxMjc5ZA",
                "url": "https://github.com/netty/netty/pull/12004/commits/d0a64f94e291add44b543d9be57bd2e82fb1279d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11994,
                "url": "https://github.com/netty/netty/issues/11994",
                "title": "InboundHttp2ToHttpAdapter maxContentLength exceeded causes connection error",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When using <code class=\"notranslate\">InboundHttp2ToHttpAdapter</code>, sending a payload that exceeds maxContentLength should return a status code of 413 before closing the stream.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">If a message payload exceeds maxContentLength, a connection error is thrown causing a GO_AWAY to be sent. This is confusing behavior to clients and we have seen load balancers treat these errors as 5xx errors when it's expected to be a client (4xx) error.</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/c6e65cc006c4e0623e84ef96a88dc5bd5cb00a82/codec-http2/src/main/java/io/netty/handler/codec/http2/InboundHttp2ToHttpAdapter.java#L237-L240\">netty/codec-http2/src/main/java/io/netty/handler/codec/http2/InboundHttp2ToHttpAdapter.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 237 to 240\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/c6e65cc006c4e0623e84ef96a88dc5bd5cb00a82\">c6e65cc</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L237\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"237\"></td>\n          <td id=\"LC237\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">content</span>.<span class=\"pl-en\">readableBytes</span>() &gt; <span class=\"pl-s1\">maxContentLength</span> - <span class=\"pl-s1\">dataReadableBytes</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L238\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"238\"></td>\n          <td id=\"LC238\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">throw</span> <span class=\"pl-en\">connectionError</span>(<span class=\"pl-c1\">INTERNAL_ERROR</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L239\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"239\"></td>\n          <td id=\"LC239\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-s\">\"Content length exceeded max of %d for stream id %d\"</span>, <span class=\"pl-s1\">maxContentLength</span>, <span class=\"pl-s1\">streamId</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L240\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"240\"></td>\n          <td id=\"LC240\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/c6e65cc006c4e0623e84ef96a88dc5bd5cb00a82/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java#L665-L678\">netty/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 665 to 678\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/c6e65cc006c4e0623e84ef96a88dc5bd5cb00a82\">c6e65cc</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L665\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"665\"></td>\n          <td id=\"LC665\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">protected</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">onConnectionError</span>(<span class=\"pl-smi\">ChannelHandlerContext</span> <span class=\"pl-s1\">ctx</span>, <span class=\"pl-smi\">boolean</span> <span class=\"pl-s1\">outbound</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L666\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"666\"></td>\n          <td id=\"LC666\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                                  <span class=\"pl-smi\">Throwable</span> <span class=\"pl-s1\">cause</span>, <span class=\"pl-smi\">Http2Exception</span> <span class=\"pl-s1\">http2Ex</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L667\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"667\"></td>\n          <td id=\"LC667\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">http2Ex</span> == <span class=\"pl-c1\">null</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L668\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"668\"></td>\n          <td id=\"LC668\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">http2Ex</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Http2Exception</span>(<span class=\"pl-c1\">INTERNAL_ERROR</span>, <span class=\"pl-s1\">cause</span>.<span class=\"pl-en\">getMessage</span>(), <span class=\"pl-s1\">cause</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L669\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"669\"></td>\n          <td id=\"LC669\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L670\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"670\"></td>\n          <td id=\"LC670\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L671\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"671\"></td>\n          <td id=\"LC671\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-smi\">ChannelPromise</span> <span class=\"pl-s1\">promise</span> = <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">newPromise</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L672\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"672\"></td>\n          <td id=\"LC672\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-smi\">ChannelFuture</span> <span class=\"pl-s1\">future</span> = <span class=\"pl-en\">goAway</span>(<span class=\"pl-s1\">ctx</span>, <span class=\"pl-s1\">http2Ex</span>, <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">newPromise</span>()); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L673\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"673\"></td>\n          <td id=\"LC673\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">http2Ex</span>.<span class=\"pl-en\">shutdownHint</span>() == <span class=\"pl-smi\">Http2Exception</span>.<span class=\"pl-s1\">ShutdownHint</span>.<span class=\"pl-c1\">GRACEFUL_SHUTDOWN</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L674\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"674\"></td>\n          <td id=\"LC674\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-en\">doGracefulShutdown</span>(<span class=\"pl-s1\">ctx</span>, <span class=\"pl-s1\">future</span>, <span class=\"pl-s1\">promise</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L675\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"675\"></td>\n          <td id=\"LC675\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } <span class=\"pl-k\">else</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L676\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"676\"></td>\n          <td id=\"LC676\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">future</span>.<span class=\"pl-en\">addListener</span>(<span class=\"pl-en\">newClosingChannelFutureListener</span>(<span class=\"pl-s1\">ctx</span>, <span class=\"pl-s1\">promise</span>)); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L677\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"677\"></td>\n          <td id=\"LC677\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L678\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"678\"></td>\n          <td id=\"LC678\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Curious if there's something I'm missing about why this results in a connection error.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Send a payload exceeding maxContentLength configured here to a pipeline using <code class=\"notranslate\">InboundHttp2ToHttpAdapter</code>: </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/c6e65cc006c4e0623e84ef96a88dc5bd5cb00a82/codec-http2/src/main/java/io/netty/handler/codec/http2/InboundHttp2ToHttpAdapterBuilder.java#L36-L39\">netty/codec-http2/src/main/java/io/netty/handler/codec/http2/InboundHttp2ToHttpAdapterBuilder.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 36 to 39\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/c6e65cc006c4e0623e84ef96a88dc5bd5cb00a82\">c6e65cc</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L36\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"36\"></td>\n          <td id=\"LC36\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L37\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"37\"></td>\n          <td id=\"LC37\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">InboundHttp2ToHttpAdapterBuilder</span> <span class=\"pl-en\">maxContentLength</span>(<span class=\"pl-smi\">int</span> <span class=\"pl-s1\">maxContentLength</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L38\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"38\"></td>\n          <td id=\"LC38\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">return</span> <span class=\"pl-en\">super</span>.<span class=\"pl-en\">maxContentLength</span>(<span class=\"pl-s1\">maxContentLength</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L39\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"39\"></td>\n          <td id=\"LC39\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.73.Final</p>",
                "resourcePath": "/netty/netty/issues/11994",
                "createdAt": "2022-01-12T12:51:11Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Don't strip scopeId when resolving ipv6 address",
        "url": "https://github.com/netty/netty/pull/12019",
        "resourcePath": "/netty/netty/pull/12019",
        "createdAt": "2022-01-18T15:25:50Z",
        "number": 12019,
        "mergeCommit": {
          "oid": "982b890095a11242fff0e90558f0f3b883f52bc9",
          "message": "Don't strip scopeId when resolving ipv6 address (#12019)\n\nMotivation:\r\n\r\nDue a bug we did strip the scopeId of the ipv6 address string when using the DnsNameResolver. This could later then result to things like \"No Route to host\" exceptions.\r\n\r\nModifications:\r\n\r\n- Add new method to NetUtil which will create the InetAddress for an string that contains an ip while still preserve the scopeId.\r\n- Use this new method\r\n- Add unit tests.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11563",
          "commitUrl": "https://github.com/netty/netty/commit/982b890095a11242fff0e90558f0f3b883f52bc9",
          "parents": {
            "nodes": [
              {
                "oid": "f3173c322dd04309dd0ba3d6651fee3b7a7b83c8",
                "message": "Fix incorrect comment in PoolThreadCache (#12020)\n\nMotivation:\r\n\r\nWe don't have tiny sizes anymore so we should also not mention these in the comments\r\n\r\nModifications:\r\n\r\nRemove old comment\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12015"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/NetUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/test/java/io/netty/resolver/dns/DnsNameResolverTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84xNbC82gAoNmQ5MGI4MDdkNTU3OTRmNWMxOTcwMzQ0ZDc0M2I2MTgxNzZiZDI3OA",
                "url": "https://github.com/netty/netty/pull/12019/commits/6d90b807d55794f5c1970344d743b618176bd278"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11563,
                "url": "https://github.com/netty/netty/issues/11563",
                "title": "MacOS IPv6 UDP - No Route to Host (Works on Linux and Windows)",
                "bodyHTML": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">I initially created this ticket over on Vert.x, but thought I'd also post it here just in case it is a Netty issue.</p>\n<p dir=\"auto\">I'm sorry for cross posting, since the stack trace shows both Netty and Vert.x I thought I'd share it in both places<br>\nin case it turns out to be both frameworks needing a fix.</p>\n<p dir=\"auto\">Please feel free to move or close the issue if this isn't the correct place.</p>\n<p dir=\"auto\">This bug is preventing me from converting our existing legacy Java networking code to using either Netty or Vert.x for UDP handling.</p>\n<p dir=\"auto\">Thanks!</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">This is the original bug I reported: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"962922690\" data-permission-text=\"Title is private\" data-url=\"https://github.com/eclipse-vertx/vert.x/issues/4059\" data-hovercard-type=\"issue\" data-hovercard-url=\"/eclipse-vertx/vert.x/issues/4059/hovercard\" href=\"https://github.com/eclipse-vertx/vert.x/issues/4059\">eclipse-vertx/vert.x#4059</a></p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Here is the repo where I have a pretty comprehensive test clients showing both Netty/Vertx and raw Java networking<br>\n<a href=\"https://github.com/tmulle/VertxNettyUDP6Tester\">https://github.com/tmulle/VertxNettyUDP6Tester</a></p>",
                "resourcePath": "/netty/netty/issues/11563",
                "createdAt": "2021-08-07T19:37:04Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix incorrect comment in PoolThreadCache",
        "url": "https://github.com/netty/netty/pull/12020",
        "resourcePath": "/netty/netty/pull/12020",
        "createdAt": "2022-01-18T16:07:50Z",
        "number": 12020,
        "mergeCommit": {
          "oid": "f3173c322dd04309dd0ba3d6651fee3b7a7b83c8",
          "message": "Fix incorrect comment in PoolThreadCache (#12020)\n\nMotivation:\r\n\r\nWe don't have tiny sizes anymore so we should also not mention these in the comments\r\n\r\nModifications:\r\n\r\nRemove old comment\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12015",
          "commitUrl": "https://github.com/netty/netty/commit/f3173c322dd04309dd0ba3d6651fee3b7a7b83c8",
          "parents": {
            "nodes": [
              {
                "oid": "1aa02c1c6dc5808c9fd68d6397d0ae36d83ec29e",
                "message": "Provide clarifications why SNI hostname has to be FQDN (#12014)\n\nMotivation:\r\n\r\nIt's not immediately clear why Netty discards non fully qualified domain names from the SNI extension and it may look like a bug.\r\n\r\nModification:\r\n\r\nProvided clarifications why SNI hostname has to be FQDN with links to the RFC\r\n\r\nResult:\r\n\r\nRelated to #12005\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolThreadCache.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84xNk9U2gAoNjc2NDExOTgyYmVjNzRmZTczZTQyOTgyNTkzMGU4ZDdjZjExNTUwMw",
                "url": "https://github.com/netty/netty/pull/12020/commits/676411982bec74fe73e429825930e8d7cf115503"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12015,
                "url": "https://github.com/netty/netty/issues/12015",
                "title": "The comment in PoolThreadCache is wrong, there is no longer tiny",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Remove tiny from comments</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Comments containing tiny<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/8465969/149874408-254c0e7a-04be-48a5-9ac4-f5ce4e7de59e.png\"><img src=\"https://user-images.githubusercontent.com/8465969/149874408-254c0e7a-04be-48a5-9ac4-f5ce4e7de59e.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>",
                "resourcePath": "/netty/netty/issues/12015",
                "createdAt": "2022-01-18T05:10:24Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use BeforeAll instead of static block to load Brotli4j library",
        "url": "https://github.com/netty/netty/pull/12029",
        "resourcePath": "/netty/netty/pull/12029",
        "createdAt": "2022-01-20T14:28:55Z",
        "number": 12029,
        "mergeCommit": {
          "oid": "fb4edb1ab87bc811960e092766b668dc04c3e309",
          "message": "Use BeforeAll instead of static block to load Brotli4j library (#12029)\n\nMotivation:\r\nAs of today, Brotli4j does not support macOS aarch64. Currently, in `BrotliEncoderTest`, we use the static block to load the Brotli4j library. However, this could lead to failure when performing this action on macOS aarch64.\r\n\r\nThe `DisabledIf` loads the `BrotliEncoderTest` class to see if the platform is supported or not. Loading this class triggers the static block which eventually leads to `ExceptionInInitializerError`.\r\n\r\nModification:\r\nUse `BeforeAll` instead of static block.\r\n\r\nResult:\r\nFixes #12024",
          "commitUrl": "https://github.com/netty/netty/commit/fb4edb1ab87bc811960e092766b668dc04c3e309",
          "parents": {
            "nodes": [
              {
                "oid": "b50ebe446f63cb902113a07759a556d603f099dc",
                "message": "Remove redundant  operator. (#12008)\n\nMotivation:\r\n\r\nThe isRun() method call !isSubpage(), so we can simplify the conditional.\r\n\r\nModification:\r\n\r\nIf and else change position, and we avoid the NOT operator.\r\n\r\nResult:\r\nFewer operations to execute."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/test/java/io/netty/handler/codec/compression/BrotliDecoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/test/java/io/netty/handler/codec/compression/BrotliEncoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84xVAYm2gAoZmVkZjQ4OWUxMDQzMmQ2ZWQ4NDExNzkzYTJlYzU5ZjJlYzM0NGU0Nw",
                "url": "https://github.com/netty/netty/pull/12029/commits/fedf489e10432d6ed8411793a2ec59f2ec344e47"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12024,
                "url": "https://github.com/netty/netty/issues/12024",
                "title": "Add support for M1 Silicon Macs - Can't build Netty",
                "bodyHTML": "<p dir=\"auto\">I know the M1 Macs are still relatively new and not all developers have them, I decided to try to build Netty for the first time ever on my M1 Mac and it failed.</p>\n<p dir=\"auto\">Just letting you know in case no one has tried before.</p>\n<p dir=\"auto\">I also wonder if the NATIVE-TRANSPORTS (kqueue) will also build on M1 Macs?</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">To be able to run <code class=\"notranslate\">mvn clean package</code> successfully</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Build fails with error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[INFO] Running io.netty.handler.codec.compression.BrotliEncoderTest\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0 s &lt;&lt;&lt; FAILURE! - in io.netty.handler.codec.compression.BrotliEncoderTest\n[ERROR] io.netty.handler.codec.compression.BrotliEncoderTest  Time elapsed: 0 s  &lt;&lt;&lt; ERROR!\njava.lang.ExceptionInInitializerError\n\tat io.netty.handler.codec.compression.BrotliEncoderTest.&lt;clinit&gt;(BrotliEncoderTest.java:35)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)\n\tat org.junit.jupiter.api.condition.MethodBasedCondition.invokeConditionMethod(MethodBasedCondition.java:82)\n\tat org.junit.jupiter.api.condition.MethodBasedCondition.lambda$evaluateExecutionCondition$1(MethodBasedCondition.java:52)\n\tat java.base/java.util.Optional.map(Optional.java:260)\n\tat org.junit.jupiter.api.condition.MethodBasedCondition.evaluateExecutionCondition(MethodBasedCondition.java:52)\n\tat org.junit.jupiter.engine.execution.ConditionEvaluator.evaluate(ConditionEvaluator.java:64)\n\tat org.junit.jupiter.engine.execution.ConditionEvaluator.lambda$evaluate$0(ConditionEvaluator.java:55)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.tryAdvance(StreamSpliterators.java:300)\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.tryAdvance(Streams.java:723)\n\tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)\n\tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647)\n\tat org.junit.jupiter.engine.execution.ConditionEvaluator.evaluate(ConditionEvaluator.java:57)\n\tat org.junit.jupiter.engine.descriptor.JupiterTestDescriptor.shouldBeSkipped(JupiterTestDescriptor.java:202)\n\tat org.junit.jupiter.engine.descriptor.JupiterTestDescriptor.shouldBeSkipped(JupiterTestDescriptor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$checkWhetherSkipped$2(NodeTestTask.java:119)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.checkWhetherSkipped(NodeTestTask.java:119)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:81)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\nCaused by: java.lang.UnsatisfiedLinkError: Failed to load Brotli native library\n\tat com.aayushatharva.brotli4j.Brotli4jLoader.ensureAvailability(Brotli4jLoader.java:78)\n\tat io.netty.handler.codec.compression.Brotli.ensureAvailability(Brotli.java:71)\n\tat io.netty.handler.codec.compression.BrotliEncoderTest.&lt;clinit&gt;(BrotliEncoderTest.java:33)\n\t... 53 more\nCaused by: java.lang.UnsupportedOperationException: Unsupported OS and Architecture: Mac OS X, aarch64\n\tat com.aayushatharva.brotli4j.Brotli4jLoader.getPlatform(Brotli4jLoader.java:106)\n\tat com.aayushatharva.brotli4j.Brotli4jLoader.&lt;clinit&gt;(Brotli4jLoader.java:38)\n\tat io.netty.handler.codec.compression.Brotli.&lt;clinit&gt;(Brotli.java:46)\n\tat io.netty.handler.codec.compression.BrotliDecoderTest.&lt;clinit&gt;(BrotliDecoderTest.java:49)\n\t... 53 more\"><pre class=\"notranslate\"><code class=\"notranslate\">[INFO] Running io.netty.handler.codec.compression.BrotliEncoderTest\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0 s &lt;&lt;&lt; FAILURE! - in io.netty.handler.codec.compression.BrotliEncoderTest\n[ERROR] io.netty.handler.codec.compression.BrotliEncoderTest  Time elapsed: 0 s  &lt;&lt;&lt; ERROR!\njava.lang.ExceptionInInitializerError\n\tat io.netty.handler.codec.compression.BrotliEncoderTest.&lt;clinit&gt;(BrotliEncoderTest.java:35)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)\n\tat org.junit.jupiter.api.condition.MethodBasedCondition.invokeConditionMethod(MethodBasedCondition.java:82)\n\tat org.junit.jupiter.api.condition.MethodBasedCondition.lambda$evaluateExecutionCondition$1(MethodBasedCondition.java:52)\n\tat java.base/java.util.Optional.map(Optional.java:260)\n\tat org.junit.jupiter.api.condition.MethodBasedCondition.evaluateExecutionCondition(MethodBasedCondition.java:52)\n\tat org.junit.jupiter.engine.execution.ConditionEvaluator.evaluate(ConditionEvaluator.java:64)\n\tat org.junit.jupiter.engine.execution.ConditionEvaluator.lambda$evaluate$0(ConditionEvaluator.java:55)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n\tat java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.tryAdvance(StreamSpliterators.java:300)\n\tat java.base/java.util.stream.Streams$ConcatSpliterator.tryAdvance(Streams.java:723)\n\tat java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)\n\tat java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647)\n\tat org.junit.jupiter.engine.execution.ConditionEvaluator.evaluate(ConditionEvaluator.java:57)\n\tat org.junit.jupiter.engine.descriptor.JupiterTestDescriptor.shouldBeSkipped(JupiterTestDescriptor.java:202)\n\tat org.junit.jupiter.engine.descriptor.JupiterTestDescriptor.shouldBeSkipped(JupiterTestDescriptor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$checkWhetherSkipped$2(NodeTestTask.java:119)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.checkWhetherSkipped(NodeTestTask.java:119)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:81)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\nCaused by: java.lang.UnsatisfiedLinkError: Failed to load Brotli native library\n\tat com.aayushatharva.brotli4j.Brotli4jLoader.ensureAvailability(Brotli4jLoader.java:78)\n\tat io.netty.handler.codec.compression.Brotli.ensureAvailability(Brotli.java:71)\n\tat io.netty.handler.codec.compression.BrotliEncoderTest.&lt;clinit&gt;(BrotliEncoderTest.java:33)\n\t... 53 more\nCaused by: java.lang.UnsupportedOperationException: Unsupported OS and Architecture: Mac OS X, aarch64\n\tat com.aayushatharva.brotli4j.Brotli4jLoader.getPlatform(Brotli4jLoader.java:106)\n\tat com.aayushatharva.brotli4j.Brotli4jLoader.&lt;clinit&gt;(Brotli4jLoader.java:38)\n\tat io.netty.handler.codec.compression.Brotli.&lt;clinit&gt;(Brotli.java:46)\n\tat io.netty.handler.codec.compression.BrotliDecoderTest.&lt;clinit&gt;(BrotliDecoderTest.java:49)\n\t... 53 more\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Clone Netty repo and run <code class=\"notranslate\">mvn clean package</code></p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">JDk11 and JDK17</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">21.2.0 Darwin Kernel Version 21.2.0: Sun Nov 28 20:28:41 PST 2021; root:xnu-8019.61.5~1/RELEASE_ARM64_T6000 arm64</p>",
                "resourcePath": "/netty/netty/issues/12024",
                "createdAt": "2022-01-19T14:55:59Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use correct exception message to notify about handler removal before \u2026",
        "url": "https://github.com/netty/netty/pull/12033",
        "resourcePath": "/netty/netty/pull/12033",
        "createdAt": "2022-01-21T10:42:33Z",
        "number": 12033,
        "mergeCommit": {
          "oid": "6618c50d2ca1d31a630e1ebcff37b71358ccc97a",
          "message": "Use correct exception message to notify about handler removal before \u2026 (#12033)\n\nMotivation:\r\n\r\nWe used a wrong exception msg when the handler was removed but the engine was not closeed yet. This is confusing for the user.\r\n\r\nModifications:\r\n\r\nFix exception message.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12027\r\n\r\nCo-authored-by: Baurzhan <baurzhansahariev@gmail.com>",
          "commitUrl": "https://github.com/netty/netty/commit/6618c50d2ca1d31a630e1ebcff37b71358ccc97a",
          "parents": {
            "nodes": [
              {
                "oid": "6c7cd59034fc6705ef9edb314b784b635064b902",
                "message": "Update java versions (#12032)\n\nMotivation:\r\n\r\nThere are new java version\r\n\r\nModifications:\r\n\r\nUpdate all java versions to latest patch release\r\n\r\nResult:\r\n\r\nUse latest java versions on the CI"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslHandler.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84xYFm12gAoNTRhZDEyOGExMjljN2Q5MDdhN2RiNDQ2MWU4NmQzYzQxNmE0Mzc5NQ",
                "url": "https://github.com/netty/netty/pull/12033/commits/54ad128a129c7d907a7db4461e86d3c416a43795"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12027,
                "url": "https://github.com/netty/netty/issues/12027",
                "title": "Unexpected cause in SslCloseCompletionEvent",
                "bodyHTML": "<p dir=\"auto\">I noticed one thing when trying to remove SslHandler to downgrade connection to plaintext -</p>\n<p dir=\"auto\">There is no check on handshake state here<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/d34212439068091bcec29a8fad4df82f0a82c638/handler/src/main/java/io/netty/handler/ssl/SslHandler.java#L700\">netty/handler/src/main/java/io/netty/handler/ssl/SslHandler.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 700\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/d34212439068091bcec29a8fad4df82f0a82c638\">d342124</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L700\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"700\"></td>\n          <td id=\"LC700\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (!<span class=\"pl-s1\">sslClosePromise</span>.<span class=\"pl-en\">isDone</span>()) { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">but message says  <code class=\"notranslate\">\"...before handshake completed\"</code> and sometimes it's not true - see reproducer, I can see that handshake is done but still see this message.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">either don't notify close promise if handshake is done by additional check like<br>\n<code class=\"notranslate\">if (!sslClosePromise.isDone() &amp;&amp; !handshakePromise.isDone()) </code></p>\n<p dir=\"auto\">or keep condition but rephrase error message like \"...removed before ssl close future is done\" - not sure it makes sense</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Handshake is done but message \"<code class=\"notranslate\">SslHandler removed before handshake completed\"</code> is shown (reproducer output below)</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"EventLoopGroup group = new NioEventLoopGroup();\nBootstrap bootstrap = new Bootstrap()\n    .group(group)\n    .channel(NioSocketChannel.class)\n    .handler(new ChannelInitializer&lt;Channel&gt;() {\n        @Override\n        protected void initChannel(Channel ch) throws Exception {\n            SslContext build = SslContextBuilder.forClient().trustManager(InsecureTrustManagerFactory.INSTANCE).build();\n            final SslHandler sslHandler = build.newHandler(ch.alloc());\n            sslHandler.engine().setUseClientMode(true);\n            ch.pipeline().addFirst(&quot;client-handler&quot;, sslHandler);\n        }\n    });\n\nServerBootstrap serverBootstrap = new ServerBootstrap()\n    .group(group)\n    .channel(NioServerSocketChannel.class)\n    .childHandler(new ChannelInitializer&lt;Channel&gt;() {\n        @Override\n        protected void initChannel(Channel ch) throws Exception {\n            SelfSignedCertificate ssc = new SelfSignedCertificate();\n            SslContext build = SslContextBuilder.forServer(ssc.certificate(), ssc.privateKey()).build();\n            final SslHandler sslHandler = build.newHandler(ch.alloc());\n            sslHandler.handshakeFuture().addListener(future -&gt; {\n                if (future.isSuccess()) {\n                    System.out.println(&quot;server: handshake is done&quot;);\n                    ch.pipeline().remove(&quot;server-handler&quot;);\n                }\n\n            });\n            sslHandler.sslCloseFuture().addListener(future -&gt; {\n                if (future.cause() != null) {\n                    System.out.println(&quot;server: close future has not non null casue&quot;);\n                    future.cause().printStackTrace();\n                }\n            });\n            ch.pipeline().addFirst(&quot;server-handler&quot;, sslHandler);\n        }\n    });\nserverBootstrap.bind(&quot;localhost&quot;, 1234).sync();\nbootstrap.connect(&quot;localhost&quot;, 1234).sync();\"><pre class=\"notranslate\"><code class=\"notranslate\">EventLoopGroup group = new NioEventLoopGroup();\nBootstrap bootstrap = new Bootstrap()\n    .group(group)\n    .channel(NioSocketChannel.class)\n    .handler(new ChannelInitializer&lt;Channel&gt;() {\n        @Override\n        protected void initChannel(Channel ch) throws Exception {\n            SslContext build = SslContextBuilder.forClient().trustManager(InsecureTrustManagerFactory.INSTANCE).build();\n            final SslHandler sslHandler = build.newHandler(ch.alloc());\n            sslHandler.engine().setUseClientMode(true);\n            ch.pipeline().addFirst(\"client-handler\", sslHandler);\n        }\n    });\n\nServerBootstrap serverBootstrap = new ServerBootstrap()\n    .group(group)\n    .channel(NioServerSocketChannel.class)\n    .childHandler(new ChannelInitializer&lt;Channel&gt;() {\n        @Override\n        protected void initChannel(Channel ch) throws Exception {\n            SelfSignedCertificate ssc = new SelfSignedCertificate();\n            SslContext build = SslContextBuilder.forServer(ssc.certificate(), ssc.privateKey()).build();\n            final SslHandler sslHandler = build.newHandler(ch.alloc());\n            sslHandler.handshakeFuture().addListener(future -&gt; {\n                if (future.isSuccess()) {\n                    System.out.println(\"server: handshake is done\");\n                    ch.pipeline().remove(\"server-handler\");\n                }\n\n            });\n            sslHandler.sslCloseFuture().addListener(future -&gt; {\n                if (future.cause() != null) {\n                    System.out.println(\"server: close future has not non null casue\");\n                    future.cause().printStackTrace();\n                }\n            });\n            ch.pipeline().addFirst(\"server-handler\", sslHandler);\n        }\n    });\nserverBootstrap.bind(\"localhost\", 1234).sync();\nbootstrap.connect(\"localhost\", 1234).sync();\n</code></pre></div>\n<p dir=\"auto\"><strong>Output:</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"server: handshake is done\nserver: close future has not non null casue\njavax.net.ssl.SSLHandshakeException: SslHandler removed before handshake completed\n\tat io.netty.handler.ssl.SslHandler.handlerRemoved0(SslHandler.java:695)\"><pre class=\"notranslate\"><code class=\"notranslate\">server: handshake is done\nserver: close future has not non null casue\njavax.net.ssl.SSLHandshakeException: SslHandler removed before handshake completed\n\tat io.netty.handler.ssl.SslHandler.handlerRemoved0(SslHandler.java:695)\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.73.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"15.0.2\" 2021-01-19</p>\n<p dir=\"auto\">P.S.<br>\nRemoving <code class=\"notranslate\">SslHandler</code> works in general and it looks like such <code class=\"notranslate\">SslCloseCompletionEvent</code> doesn't hurt but there is one case where code hangs - I tried adding <code class=\"notranslate\">if (!sslClosePromise.isDone() &amp;&amp; !handshakePromise.isDone())</code> to my local custom <code class=\"notranslate\">SslHandler</code> and this error was gone but it didn't help with hanging. I decided to report anyway since this message looked confusing.</p>",
                "resourcePath": "/netty/netty/issues/12027",
                "createdAt": "2022-01-20T09:39:34Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Propagate BindException in DnsNameResolver",
        "url": "https://github.com/netty/netty/pull/12034",
        "resourcePath": "/netty/netty/pull/12034",
        "createdAt": "2022-01-21T11:22:36Z",
        "number": 12034,
        "mergeCommit": {
          "oid": "9cd94547d0211c04b610878e5e267c8de2342b97",
          "message": "Propagate BindException in DnsNameResolver (#12034)\n\n\r\nMotivation:\r\n\r\nIf a user binds the DnsNameResolver to an address that is already in use we should include this as a cause of the failure so its easy to spot whats wrong\r\n\r\nModifications:\r\n\r\n- Correctly propagate the BindException\r\n- Add unit test\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12001",
          "commitUrl": "https://github.com/netty/netty/commit/9cd94547d0211c04b610878e5e267c8de2342b97",
          "parents": {
            "nodes": [
              {
                "oid": "716e499ad7444bc1fa9a92d35b865be8a0c67bb2",
                "message": "Avoid masking the cause of availability failures for the Mac DNS provider (#12039)\n\nMotivation:\r\nIf the MacOSDnsServerAddressStreamProvider is unavailable, we'd the root cause of it to show up.\r\n\r\nModification:\r\nMove the initialisation of the `MacOSDnsServerAddressStreamProvider.currentMappings` field to the constructor.\r\nObject initialisers run before the constructor does, so since `MacOSDnsServerAddressStreamProvider.retrieveCurrentMappings` relies on the native code, it would throw an `UnsatisfiedLinkError` before `ensureAvailability` would get to run.\r\nThis way, it was masking the root cause of the unavailability.\r\nNow, the `currentMappings` is initialised *after* we've called `ensureAvailability`, so we don't lose the root cause if we cannot use native DNS on Mac.\r\n\r\nResult:\r\nEasier to debug problems with initialising native MacOS DNS."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsQueryContext.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/test/java/io/netty/resolver/dns/DnsNameResolverTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84xYNcq2gAoNTE3NmIwNzNmNTMxOTEzZTNjODY4YTUwNjVlMmNmM2ZiZGY5MDk2Yw",
                "url": "https://github.com/netty/netty/pull/12034/commits/5176b073f531913e3c868a5065e2cf3fbdf9096c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12001,
                "url": "https://github.com/netty/netty/issues/12001",
                "title": "DnsNameResolver can not detect failure when bind to localAddress already in use",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">After this PR: <a href=\"https://github.com/netty/netty/pull/11061\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/11061/hovercard\">Allow to config dns bind address in DnsNameResolver #11061</a>, it is able to config DnsNameResolver localAddress.<br>\nWhen localAddress is already in use, it is expected to detect the failure:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        ChannelFuture future;\n        if (localAddress == null) {\n            future = b.register();\n        } else {\n            future = b.bind(localAddress); \n        }\n        Throwable cause = future.cause();\n        if (cause != null) { // should not be null when Address already in use\n            if (cause instanceof RuntimeException) {\n                throw (RuntimeException) cause;\n            }\n            if (cause instanceof Error) {\n                throw (Error) cause;\n            }\n            throw new IllegalStateException(&quot;Unable to create / register Channel&quot;, cause);\n        }\"><pre class=\"notranslate\">        <span class=\"pl-smi\">ChannelFuture</span> <span class=\"pl-s1\">future</span>;\n        <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">localAddress</span> == <span class=\"pl-c1\">null</span>) {\n            <span class=\"pl-s1\">future</span> = <span class=\"pl-s1\">b</span>.<span class=\"pl-en\">register</span>();\n        } <span class=\"pl-k\">else</span> {\n            <span class=\"pl-s1\">future</span> = <span class=\"pl-s1\">b</span>.<span class=\"pl-en\">bind</span>(<span class=\"pl-s1\">localAddress</span>); \n        }\n        <span class=\"pl-smi\">Throwable</span> <span class=\"pl-s1\">cause</span> = <span class=\"pl-s1\">future</span>.<span class=\"pl-en\">cause</span>();\n        <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">cause</span> != <span class=\"pl-c1\">null</span>) { <span class=\"pl-c\">// should not be null when Address already in use</span>\n            <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">cause</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">RuntimeException</span>) {\n                <span class=\"pl-k\">throw</span> (<span class=\"pl-smi\">RuntimeException</span>) <span class=\"pl-s1\">cause</span>;\n            }\n            <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">cause</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">Error</span>) {\n                <span class=\"pl-k\">throw</span> (<span class=\"pl-smi\">Error</span>) <span class=\"pl-s1\">cause</span>;\n            }\n            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalStateException</span>(<span class=\"pl-s\">\"Unable to create / register Channel\"</span>, <span class=\"pl-s1\">cause</span>);\n        }</pre></div>\n<p dir=\"auto\">Actually <code class=\"notranslate\">cause</code> will be null, I think it is beacause of the bind task is not completed yet here.<br>\nSimply change the code like this will solve the problem, but I'm not sure is it OK to block here.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"future = b.bind(localAddress).awaitUninterruptibly();\"><pre class=\"notranslate\"><span class=\"pl-s1\">future</span> = <span class=\"pl-s1\">b</span>.<span class=\"pl-en\">bind</span>(<span class=\"pl-s1\">localAddress</span>).<span class=\"pl-en\">awaitUninterruptibly</span>();</pre></div>\n<p dir=\"auto\">Any suggestion will be great appreciated!</p>\n<p dir=\"auto\">I'd like to submit a PR if there is a proper way to solve this.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.72</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">11.0.8</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">windows 10</p>",
                "resourcePath": "/netty/netty/issues/12001",
                "createdAt": "2022-01-13T14:57:17Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "enable mDNS for MacOS DNS resolver",
        "url": "https://github.com/netty/netty/pull/12053",
        "resourcePath": "/netty/netty/pull/12053",
        "createdAt": "2022-01-27T11:44:56Z",
        "number": 12053,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns-classes-macos/src/main/java/io/netty/resolver/dns/macos/MacOSDnsServerAddressStreamProvider.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84xq6Wg2gAoNDdkODFlOTNiZjYyYzczM2Y5OWUzYmFjODM0OWQ1Mzk3NDlhNWFiYw",
                "url": "https://github.com/netty/netty/pull/12053/commits/47d81e93bf62c733f99e3bac8349d539749a5abc"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12052,
                "url": "https://github.com/netty/netty/issues/12052",
                "title": "Can't resolve hosts created by Telepresence - Kubernetes locally on MacOS.",
                "bodyHTML": "<p dir=\"auto\">During authentication call by spring security to our keycloak, i have issue with dns name resolving locally on Macos.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"2022-01-27 13:51:53.364 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] o.s.w.r.f.client.ExchangeFunctions       : [3e2bd606] HTTP GET http://iam:29210/auth/realms/customers/protocol/openid-connect/certs\n2022-01-27 13:51:53.384 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] i.n.r.DefaultHostsFileEntriesResolver    : -Dio.netty.hostsFileRefreshInterval: 0\n2022-01-27 13:51:53.388 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] i.n.util.internal.NativeLibraryLoader    : -Dio.netty.native.workdir: /var/folders/fq/x3wjybvs7rz95trhgc7h9k640000gn/T (io.netty.tmpdir)\n2022-01-27 13:51:53.388 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] i.n.util.internal.NativeLibraryLoader    : -Dio.netty.native.deleteLibAfterLoading: true\n2022-01-27 13:51:53.388 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] i.n.util.internal.NativeLibraryLoader    : -Dio.netty.native.tryPatchShadedId: true\n2022-01-27 13:51:53.388 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] i.n.util.internal.NativeLibraryLoader    : -Dio.netty.native.detectNativeLibraryDuplicates: true\n2022-01-27 13:51:53.595 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] i.n.util.internal.NativeLibraryLoader    : Successfully loaded the library /var/folders/fq/x3wjybvs7rz95trhgc7h9k640000gn/T/libnetty_resolver_dns_native_macos_x86_6410423822835212203200.dylib\n2022-01-27 13:51:53.599 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] i.n.r.d.DnsServerAddressStreamProviders  : io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider: available\n2022-01-27 13:51:53.604 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] r.n.resources.PooledConnectionProvider   : Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [iam/&lt;unresolved&gt;:29210]\n2022-01-27 13:51:53.619 DEBUG [maas-api,,] 65717 --- [ctor-http-nio-5] r.n.resources.PooledConnectionProvider   : [537cd69e] Created a new pooled channel, now: 0 active connections, 0 inactive connections and 0 pending acquire requests.\n2022-01-27 13:51:53.626 DEBUG [maas-api,,] 65717 --- [ctor-http-nio-5] reactor.netty.transport.TransportConfig  : [537cd69e] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}\n2022-01-27 13:51:53.656 DEBUG [maas-api,,] 65717 --- [ctor-http-nio-4] i.n.util.ResourceLeakDetectorFactory     : Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5e7ff5a8\n2022-01-27 13:51:53.657 DEBUG [maas-api,,] 65717 --- [ctor-http-nio-4] io.netty.resolver.dns.DnsQueryContext    : [id: 0x1ffa5635] WRITE: UDP, [42308: /192.168.31.1:53], DefaultDnsQuestion(iam. IN A)\n2022-01-27 13:51:53.680 DEBUG [maas-api,,] 65717 --- [ctor-http-nio-4] io.netty.resolver.dns.DnsNameResolver    : [id: 0x1ffa5635] RECEIVED: UDP [42308: /192.168.31.1:53], DatagramDnsResponse(from: /192.168.31.1:53, to: /[0:0:0:0:0:0:0:0]:53793, 42308, QUERY(0), NoError(0), RD RA)\n        DefaultDnsQuestion(iam. IN A)\n        DefaultDnsRawRecord(OPT flags:0 udp:4096 0B)\n2022-01-27 13:51:53.680 DEBUG [maas-api,,] 65717 --- [ctor-http-nio-4] io.netty.resolver.dns.DnsQueryContext    : [id: 0x1ffa5635] WRITE: UDP, [29327: /192.168.31.1:53], DefaultDnsQuestion(iam. IN CNAME)\n2022-01-27 13:51:53.715 DEBUG [maas-api,,] 65717 --- [ctor-http-nio-4] io.netty.resolver.dns.DnsNameResolver    : [id: 0x1ffa5635] RECEIVED: UDP [29327: /192.168.31.1:53], DatagramDnsResponse(from: /192.168.31.1:53, to: /[0:0:0:0:0:0:0:0]:53793, 29327, QUERY(0), NXDomain(3), RD RA)\n        DefaultDnsQuestion(iam. IN CNAME)\n        DefaultDnsRawRecord(. 3600 IN SOA 64B)\n        DefaultDnsRawRecord(OPT flags:0 udp:4096 0B)\n2022-01-27 13:51:53.729 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [ctor-http-nio-4] reactor.core.publisher.MonoCacheTime     : expired onError(org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'iam' after 2 queries ; nested exception is java.net.UnknownHostException: Failed to resolve 'iam' after 2 queries )\n2022-01-27 13:51:53.730 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [ctor-http-nio-4] o.s.s.w.s.a.AuthenticationWebFilter      : Authentication failed: An error occurred while attempting to decode the Jwt: \"><pre class=\"notranslate\"><code class=\"notranslate\">2022-01-27 13:51:53.364 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] o.s.w.r.f.client.ExchangeFunctions       : [3e2bd606] HTTP GET http://iam:29210/auth/realms/customers/protocol/openid-connect/certs\n2022-01-27 13:51:53.384 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] i.n.r.DefaultHostsFileEntriesResolver    : -Dio.netty.hostsFileRefreshInterval: 0\n2022-01-27 13:51:53.388 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] i.n.util.internal.NativeLibraryLoader    : -Dio.netty.native.workdir: /var/folders/fq/x3wjybvs7rz95trhgc7h9k640000gn/T (io.netty.tmpdir)\n2022-01-27 13:51:53.388 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] i.n.util.internal.NativeLibraryLoader    : -Dio.netty.native.deleteLibAfterLoading: true\n2022-01-27 13:51:53.388 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] i.n.util.internal.NativeLibraryLoader    : -Dio.netty.native.tryPatchShadedId: true\n2022-01-27 13:51:53.388 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] i.n.util.internal.NativeLibraryLoader    : -Dio.netty.native.detectNativeLibraryDuplicates: true\n2022-01-27 13:51:53.595 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] i.n.util.internal.NativeLibraryLoader    : Successfully loaded the library /var/folders/fq/x3wjybvs7rz95trhgc7h9k640000gn/T/libnetty_resolver_dns_native_macos_x86_6410423822835212203200.dylib\n2022-01-27 13:51:53.599 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] i.n.r.d.DnsServerAddressStreamProviders  : io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider: available\n2022-01-27 13:51:53.604 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [     parallel-1] r.n.resources.PooledConnectionProvider   : Creating a new [http] client pool [PoolFactory{evictionInterval=PT0S, leasingStrategy=fifo, maxConnections=500, maxIdleTime=-1, maxLifeTime=-1, metricsEnabled=false, pendingAcquireMaxCount=1000, pendingAcquireTimeout=45000}] for [iam/&lt;unresolved&gt;:29210]\n2022-01-27 13:51:53.619 DEBUG [maas-api,,] 65717 --- [ctor-http-nio-5] r.n.resources.PooledConnectionProvider   : [537cd69e] Created a new pooled channel, now: 0 active connections, 0 inactive connections and 0 pending acquire requests.\n2022-01-27 13:51:53.626 DEBUG [maas-api,,] 65717 --- [ctor-http-nio-5] reactor.netty.transport.TransportConfig  : [537cd69e] Initialized pipeline DefaultChannelPipeline{(reactor.left.httpCodec = io.netty.handler.codec.http.HttpClientCodec), (reactor.left.httpDecompressor = io.netty.handler.codec.http.HttpContentDecompressor), (reactor.right.reactiveBridge = reactor.netty.channel.ChannelOperationsHandler)}\n2022-01-27 13:51:53.656 DEBUG [maas-api,,] 65717 --- [ctor-http-nio-4] i.n.util.ResourceLeakDetectorFactory     : Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5e7ff5a8\n2022-01-27 13:51:53.657 DEBUG [maas-api,,] 65717 --- [ctor-http-nio-4] io.netty.resolver.dns.DnsQueryContext    : [id: 0x1ffa5635] WRITE: UDP, [42308: /192.168.31.1:53], DefaultDnsQuestion(iam. IN A)\n2022-01-27 13:51:53.680 DEBUG [maas-api,,] 65717 --- [ctor-http-nio-4] io.netty.resolver.dns.DnsNameResolver    : [id: 0x1ffa5635] RECEIVED: UDP [42308: /192.168.31.1:53], DatagramDnsResponse(from: /192.168.31.1:53, to: /[0:0:0:0:0:0:0:0]:53793, 42308, QUERY(0), NoError(0), RD RA)\n        DefaultDnsQuestion(iam. IN A)\n        DefaultDnsRawRecord(OPT flags:0 udp:4096 0B)\n2022-01-27 13:51:53.680 DEBUG [maas-api,,] 65717 --- [ctor-http-nio-4] io.netty.resolver.dns.DnsQueryContext    : [id: 0x1ffa5635] WRITE: UDP, [29327: /192.168.31.1:53], DefaultDnsQuestion(iam. IN CNAME)\n2022-01-27 13:51:53.715 DEBUG [maas-api,,] 65717 --- [ctor-http-nio-4] io.netty.resolver.dns.DnsNameResolver    : [id: 0x1ffa5635] RECEIVED: UDP [29327: /192.168.31.1:53], DatagramDnsResponse(from: /192.168.31.1:53, to: /[0:0:0:0:0:0:0:0]:53793, 29327, QUERY(0), NXDomain(3), RD RA)\n        DefaultDnsQuestion(iam. IN CNAME)\n        DefaultDnsRawRecord(. 3600 IN SOA 64B)\n        DefaultDnsRawRecord(OPT flags:0 udp:4096 0B)\n2022-01-27 13:51:53.729 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [ctor-http-nio-4] reactor.core.publisher.MonoCacheTime     : expired onError(org.springframework.web.reactive.function.client.WebClientRequestException: Failed to resolve 'iam' after 2 queries ; nested exception is java.net.UnknownHostException: Failed to resolve 'iam' after 2 queries )\n2022-01-27 13:51:53.730 DEBUG [maas-api,ea6a341d96e68626,ea6a341d96e68626] 65717 --- [ctor-http-nio-4] o.s.s.w.s.a.AuthenticationWebFilter      : Authentication failed: An error occurred while attempting to decode the Jwt: \n</code></pre></div>\n<p dir=\"auto\">where <code class=\"notranslate\">iam</code> is host for keycloak in cluster and resolved locally by telepresence tunnels (mdns)</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ scutil --dns\n\nDNS configuration\n\nresolver #1\n  nameserver[0] : 192.168.31.1\n  if_index : 6 (en0)\n  flags    : Request A records\n  reach    : 0x00020002 (Reachable,Directly Reachable Address)\n\nresolver #2\n  domain   : local\n  options  : mdns\n  timeout  : 5\n  flags    : Request A records\n  reach    : 0x00000000 (Not Reachable)\n  order    : 300000\n\nresolver #3\n  domain   : 254.169.in-addr.arpa\n  options  : mdns\n  timeout  : 5\n  flags    : Request A records\n  reach    : 0x00000000 (Not Reachable)\n  order    : 300200\n\nresolver #4\n  domain   : 8.e.f.ip6.arpa\n  options  : mdns\n  timeout  : 5\n  flags    : Request A records\n  reach    : 0x00000000 (Not Reachable)\n  order    : 300400\n\nresolver #5\n  domain   : 9.e.f.ip6.arpa\n  options  : mdns\n  timeout  : 5\n  flags    : Request A records\n  reach    : 0x00000000 (Not Reachable)\n  order    : 300600\n\nresolver #6\n  domain   : a.e.f.ip6.arpa\n  options  : mdns\n  timeout  : 5\n  flags    : Request A records\n  reach    : 0x00000000 (Not Reachable)\n  order    : 300800\n\nresolver #7\n  domain   : b.e.f.ip6.arpa\n  options  : mdns\n  timeout  : 5\n  flags    : Request A records\n  reach    : 0x00000000 (Not Reachable)\n  order    : 301000\n\nresolver #8\n  domain   : tel2-search\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #9\n  domain   : sealed-secrets\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #10\n  domain   : playground\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #11\n  domain   : kube-system\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #12\n  domain   : flux-system\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #13\n  domain   : kube-public\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #14\n  domain   : dev\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #15\n  domain   : ambassador\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #16\n  domain   : cluster.local\n  search domain[0] : dev.svc.cluster.local\n  search domain[1] : cluster.local\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #17\n  domain   : aws\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #18\n  domain   : beta\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #19\n  domain   : default\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #20\n  domain   : gitlab-runner\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #21\n  domain   : omnidb\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #22\n  domain   : kafdrop\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #23\n  domain   : elk\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #24\n  domain   : kube-node-lease\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #25\n  domain   : ci\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nDNS configuration (for scoped queries)\n\nresolver #1\n  nameserver[0] : 192.168.31.1\n  if_index : 6 (en0)\n  flags    : Scoped, Request A records\n  reach    : 0x00020002 (Reachable,Directly Reachable Address)\n\"><pre class=\"notranslate\"><code class=\"notranslate\">$ scutil --dns\n\nDNS configuration\n\nresolver #1\n  nameserver[0] : 192.168.31.1\n  if_index : 6 (en0)\n  flags    : Request A records\n  reach    : 0x00020002 (Reachable,Directly Reachable Address)\n\nresolver #2\n  domain   : local\n  options  : mdns\n  timeout  : 5\n  flags    : Request A records\n  reach    : 0x00000000 (Not Reachable)\n  order    : 300000\n\nresolver #3\n  domain   : 254.169.in-addr.arpa\n  options  : mdns\n  timeout  : 5\n  flags    : Request A records\n  reach    : 0x00000000 (Not Reachable)\n  order    : 300200\n\nresolver #4\n  domain   : 8.e.f.ip6.arpa\n  options  : mdns\n  timeout  : 5\n  flags    : Request A records\n  reach    : 0x00000000 (Not Reachable)\n  order    : 300400\n\nresolver #5\n  domain   : 9.e.f.ip6.arpa\n  options  : mdns\n  timeout  : 5\n  flags    : Request A records\n  reach    : 0x00000000 (Not Reachable)\n  order    : 300600\n\nresolver #6\n  domain   : a.e.f.ip6.arpa\n  options  : mdns\n  timeout  : 5\n  flags    : Request A records\n  reach    : 0x00000000 (Not Reachable)\n  order    : 300800\n\nresolver #7\n  domain   : b.e.f.ip6.arpa\n  options  : mdns\n  timeout  : 5\n  flags    : Request A records\n  reach    : 0x00000000 (Not Reachable)\n  order    : 301000\n\nresolver #8\n  domain   : tel2-search\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #9\n  domain   : sealed-secrets\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #10\n  domain   : playground\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #11\n  domain   : kube-system\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #12\n  domain   : flux-system\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #13\n  domain   : kube-public\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #14\n  domain   : dev\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #15\n  domain   : ambassador\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #16\n  domain   : cluster.local\n  search domain[0] : dev.svc.cluster.local\n  search domain[1] : cluster.local\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #17\n  domain   : aws\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #18\n  domain   : beta\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #19\n  domain   : default\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #20\n  domain   : gitlab-runner\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #21\n  domain   : omnidb\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #22\n  domain   : kafdrop\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #23\n  domain   : elk\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #24\n  domain   : kube-node-lease\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nresolver #25\n  domain   : ci\n  nameserver[0] : 127.0.0.1\n  port     : -11272\n  flags    : Request A records, Request AAAA records\n  reach    : 0x00030002 (Reachable,Local Address,Directly Reachable Address)\n\nDNS configuration (for scoped queries)\n\nresolver #1\n  nameserver[0] : 192.168.31.1\n  if_index : 6 (en0)\n  flags    : Scoped, Request A records\n  reach    : 0x00020002 (Reachable,Directly Reachable Address)\n\n</code></pre></div>\n<p dir=\"auto\">and ping here</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"~\u276f ping iam                                                                                                                                                                                                                           13:28:35\nPING iam.dev.svc.cluster.local (172.20.242.51): 56 data bytes\nRequest timeout for icmp_seq 0\nRequest timeout for icmp_seq 1\nRequest timeout for icmp_seq 2\nRequest timeout for icmp_seq 3\"><pre class=\"notranslate\"><code class=\"notranslate\">~\u276f ping iam                                                                                                                                                                                                                           13:28:35\nPING iam.dev.svc.cluster.local (172.20.242.51): 56 data bytes\nRequest timeout for icmp_seq 0\nRequest timeout for icmp_seq 1\nRequest timeout for icmp_seq 2\nRequest timeout for icmp_seq 3\n</code></pre></div>\n<p dir=\"auto\">System related files:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ cat /etc/resolv.conf \n\n#\n# macOS Notice\n#\n# This file is not consulted for DNS hostname resolution, address\n# resolution, or the DNS query routing mechanism used by most\n# processes on this system.\n#\n# To view the DNS configuration used by this system, use:\n#   scutil --dns\n#\n# SEE ALSO\n#   dns-sd(1), scutil(8)\n#\n# This file is automatically generated.\n#\nnameserver 192.168.31.1\"><pre class=\"notranslate\"><code class=\"notranslate\">$ cat /etc/resolv.conf \n\n#\n# macOS Notice\n#\n# This file is not consulted for DNS hostname resolution, address\n# resolution, or the DNS query routing mechanism used by most\n# processes on this system.\n#\n# To view the DNS configuration used by this system, use:\n#   scutil --dns\n#\n# SEE ALSO\n#   dns-sd(1), scutil(8)\n#\n# This file is automatically generated.\n#\nnameserver 192.168.31.1\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\u276f ls -1 /etc/resolver/      \n                                                                             \ntelepresence.ambassador.local\ntelepresence.aws.local\ntelepresence.beta.local\ntelepresence.ci.local\ntelepresence.default.local\ntelepresence.dev.local\ntelepresence.elk.local\ntelepresence.flux-system.local\ntelepresence.gitlab-runner.local\ntelepresence.kafdrop.local\ntelepresence.kube-node-lease.local\ntelepresence.kube-public.local\ntelepresence.kube-system.local\ntelepresence.local\ntelepresence.omnidb.local\ntelepresence.playground.local\ntelepresence.sealed-secrets.local\ntelepresence.tel2-search.local\"><pre class=\"notranslate\"><code class=\"notranslate\">\u276f ls -1 /etc/resolver/      \n                                                                             \ntelepresence.ambassador.local\ntelepresence.aws.local\ntelepresence.beta.local\ntelepresence.ci.local\ntelepresence.default.local\ntelepresence.dev.local\ntelepresence.elk.local\ntelepresence.flux-system.local\ntelepresence.gitlab-runner.local\ntelepresence.kafdrop.local\ntelepresence.kube-node-lease.local\ntelepresence.kube-public.local\ntelepresence.kube-system.local\ntelepresence.local\ntelepresence.omnidb.local\ntelepresence.playground.local\ntelepresence.sealed-secrets.local\ntelepresence.tel2-search.local\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\u276f cat /etc/resolver/telepresence.local      \n                                     \n# Generated by telepresence\nport 54264\ndomain cluster.local\nnameserver 127.0.0.1\nsearch dev.svc.cluster.local cluster.local\"><pre class=\"notranslate\"><code class=\"notranslate\">\u276f cat /etc/resolver/telepresence.local      \n                                     \n# Generated by telepresence\nport 54264\ndomain cluster.local\nnameserver 127.0.0.1\nsearch dev.svc.cluster.local cluster.local\n</code></pre></div>\n<p dir=\"auto\">Seems, nameservers are populated correctly by MacOSDnsServerAddressStreamProvider<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/1492349/151356696-f11a68ce-7acf-43cd-96cb-a42130b98428.png\"><img src=\"https://user-images.githubusercontent.com/1492349/151356696-f11a68ce-7acf-43cd-96cb-a42130b98428.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><code class=\"notranslate\">ifconfig</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 16384\n\toptions=1203&lt;RXCSUM,TXCSUM,TXSTATUS,SW_TIMESTAMP&gt;\n\tinet 127.0.0.1 netmask 0xff000000 \n\tinet6 ::1 prefixlen 128 \n\tinet6 fe80::1%lo0 prefixlen 64 scopeid 0x1 \n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\ngif0: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1280\nstf0: flags=0&lt;&gt; mtu 1280\nen5: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500\n\tether ac:de:48:00:11:22 \n\tinet6 fe80::aede:48ff:fe00:1122%en5 prefixlen 64 scopeid 0x4 \n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\n\tmedia: autoselect (100baseTX &lt;full-duplex&gt;)\n\tstatus: active\nap1: flags=8802&lt;BROADCAST,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=400&lt;CHANNEL_IO&gt;\n\tether 3a:f9:d3:8d:c9:0e \n\tmedia: autoselect\n\tstatus: inactive\nen0: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=6463&lt;RXCSUM,TXCSUM,TSO4,TSO6,CHANNEL_IO,PARTIAL_CSUM,ZEROINVERT_CSUM&gt;\n\tether 38:f9:d3:8d:c9:0e \n\tinet6 fe80::86b:9c88:9081:acbc%en0 prefixlen 64 secured scopeid 0x6 \n\tinet 192.168.31.10 netmask 0xffffff00 broadcast 192.168.31.255\n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\n\tmedia: autoselect\n\tstatus: active\nawdl0: flags=8943&lt;UP,BROADCAST,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=400&lt;CHANNEL_IO&gt;\n\tether b6:b6:b6:8d:c5:f9 \n\tinet6 fe80::b4b6:b6ff:fe8d:c5f9%awdl0 prefixlen 64 scopeid 0x7 \n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\n\tmedia: autoselect\n\tstatus: active\nllw0: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=400&lt;CHANNEL_IO&gt;\n\tether b6:b6:b6:8d:c5:f9 \n\tinet6 fe80::b4b6:b6ff:fe8d:c5f9%llw0 prefixlen 64 scopeid 0x8 \n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\n\tmedia: autoselect\n\tstatus: active\nen2: flags=8963&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=460&lt;TSO4,TSO6,CHANNEL_IO&gt;\n\tether 82:4d:3b:0a:b8:00 \n\tmedia: autoselect &lt;full-duplex&gt;\n\tstatus: inactive\nen1: flags=8963&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=460&lt;TSO4,TSO6,CHANNEL_IO&gt;\n\tether 82:4d:3b:0a:b8:01 \n\tmedia: autoselect &lt;full-duplex&gt;\n\tstatus: inactive\nen3: flags=8963&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=460&lt;TSO4,TSO6,CHANNEL_IO&gt;\n\tether 82:4d:3b:0a:b8:05 \n\tmedia: autoselect &lt;full-duplex&gt;\n\tstatus: inactive\nen4: flags=8963&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=460&lt;TSO4,TSO6,CHANNEL_IO&gt;\n\tether 82:4d:3b:0a:b8:04 \n\tmedia: autoselect &lt;full-duplex&gt;\n\tstatus: inactive\nbridge0: flags=8822&lt;BROADCAST,SMART,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=63&lt;RXCSUM,TXCSUM,TSO4,TSO6&gt;\n\tether 82:4d:3b:0a:b8:01 \n\tConfiguration:\n\t\tid 0:0:0:0:0:0 priority 0 hellotime 0 fwddelay 0\n\t\tmaxage 0 holdcnt 0 proto stp maxaddr 100 timeout 1200\n\t\troot id 0:0:0:0:0:0 priority 0 ifcost 0 port 0\n\t\tipfilter disabled flags 0x0\n\tmember: en1 flags=3&lt;LEARNING,DISCOVER&gt;\n\t        ifmaxaddr 0 port 10 priority 0 path cost 0\n\tmember: en2 flags=3&lt;LEARNING,DISCOVER&gt;\n\t        ifmaxaddr 0 port 9 priority 0 path cost 0\n\tmember: en3 flags=3&lt;LEARNING,DISCOVER&gt;\n\t        ifmaxaddr 0 port 11 priority 0 path cost 0\n\tmember: en4 flags=3&lt;LEARNING,DISCOVER&gt;\n\t        ifmaxaddr 0 port 12 priority 0 path cost 0\n\tmedia: &lt;unknown type&gt;\n\tstatus: inactive\nutun0: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 1380\n\tinet6 fe80::532b:1ba7:f2e4:1d36%utun0 prefixlen 64 scopeid 0xe \n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\nutun1: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 2000\n\tinet6 fe80::7ad8:a39a:de17:9329%utun1 prefixlen 64 scopeid 0xf \n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\nutun2: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 1000\n\tinet6 fe80::ce81:b1c:bd2c:69e%utun2 prefixlen 64 scopeid 0x10 \n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\nutun3: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 1500\n\tinet 172.20.0.0 --&gt; 172.20.0.1 netmask 0xffff0000 \n\tinet 10.202.0.0 --&gt; 10.202.0.1 netmask 0xfffffc00 \"><pre class=\"notranslate\"><code class=\"notranslate\">lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 16384\n\toptions=1203&lt;RXCSUM,TXCSUM,TXSTATUS,SW_TIMESTAMP&gt;\n\tinet 127.0.0.1 netmask 0xff000000 \n\tinet6 ::1 prefixlen 128 \n\tinet6 fe80::1%lo0 prefixlen 64 scopeid 0x1 \n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\ngif0: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1280\nstf0: flags=0&lt;&gt; mtu 1280\nen5: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500\n\tether ac:de:48:00:11:22 \n\tinet6 fe80::aede:48ff:fe00:1122%en5 prefixlen 64 scopeid 0x4 \n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\n\tmedia: autoselect (100baseTX &lt;full-duplex&gt;)\n\tstatus: active\nap1: flags=8802&lt;BROADCAST,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=400&lt;CHANNEL_IO&gt;\n\tether 3a:f9:d3:8d:c9:0e \n\tmedia: autoselect\n\tstatus: inactive\nen0: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=6463&lt;RXCSUM,TXCSUM,TSO4,TSO6,CHANNEL_IO,PARTIAL_CSUM,ZEROINVERT_CSUM&gt;\n\tether 38:f9:d3:8d:c9:0e \n\tinet6 fe80::86b:9c88:9081:acbc%en0 prefixlen 64 secured scopeid 0x6 \n\tinet 192.168.31.10 netmask 0xffffff00 broadcast 192.168.31.255\n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\n\tmedia: autoselect\n\tstatus: active\nawdl0: flags=8943&lt;UP,BROADCAST,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=400&lt;CHANNEL_IO&gt;\n\tether b6:b6:b6:8d:c5:f9 \n\tinet6 fe80::b4b6:b6ff:fe8d:c5f9%awdl0 prefixlen 64 scopeid 0x7 \n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\n\tmedia: autoselect\n\tstatus: active\nllw0: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=400&lt;CHANNEL_IO&gt;\n\tether b6:b6:b6:8d:c5:f9 \n\tinet6 fe80::b4b6:b6ff:fe8d:c5f9%llw0 prefixlen 64 scopeid 0x8 \n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\n\tmedia: autoselect\n\tstatus: active\nen2: flags=8963&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=460&lt;TSO4,TSO6,CHANNEL_IO&gt;\n\tether 82:4d:3b:0a:b8:00 \n\tmedia: autoselect &lt;full-duplex&gt;\n\tstatus: inactive\nen1: flags=8963&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=460&lt;TSO4,TSO6,CHANNEL_IO&gt;\n\tether 82:4d:3b:0a:b8:01 \n\tmedia: autoselect &lt;full-duplex&gt;\n\tstatus: inactive\nen3: flags=8963&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=460&lt;TSO4,TSO6,CHANNEL_IO&gt;\n\tether 82:4d:3b:0a:b8:05 \n\tmedia: autoselect &lt;full-duplex&gt;\n\tstatus: inactive\nen4: flags=8963&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=460&lt;TSO4,TSO6,CHANNEL_IO&gt;\n\tether 82:4d:3b:0a:b8:04 \n\tmedia: autoselect &lt;full-duplex&gt;\n\tstatus: inactive\nbridge0: flags=8822&lt;BROADCAST,SMART,SIMPLEX,MULTICAST&gt; mtu 1500\n\toptions=63&lt;RXCSUM,TXCSUM,TSO4,TSO6&gt;\n\tether 82:4d:3b:0a:b8:01 \n\tConfiguration:\n\t\tid 0:0:0:0:0:0 priority 0 hellotime 0 fwddelay 0\n\t\tmaxage 0 holdcnt 0 proto stp maxaddr 100 timeout 1200\n\t\troot id 0:0:0:0:0:0 priority 0 ifcost 0 port 0\n\t\tipfilter disabled flags 0x0\n\tmember: en1 flags=3&lt;LEARNING,DISCOVER&gt;\n\t        ifmaxaddr 0 port 10 priority 0 path cost 0\n\tmember: en2 flags=3&lt;LEARNING,DISCOVER&gt;\n\t        ifmaxaddr 0 port 9 priority 0 path cost 0\n\tmember: en3 flags=3&lt;LEARNING,DISCOVER&gt;\n\t        ifmaxaddr 0 port 11 priority 0 path cost 0\n\tmember: en4 flags=3&lt;LEARNING,DISCOVER&gt;\n\t        ifmaxaddr 0 port 12 priority 0 path cost 0\n\tmedia: &lt;unknown type&gt;\n\tstatus: inactive\nutun0: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 1380\n\tinet6 fe80::532b:1ba7:f2e4:1d36%utun0 prefixlen 64 scopeid 0xe \n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\nutun1: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 2000\n\tinet6 fe80::7ad8:a39a:de17:9329%utun1 prefixlen 64 scopeid 0xf \n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\nutun2: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 1000\n\tinet6 fe80::ce81:b1c:bd2c:69e%utun2 prefixlen 64 scopeid 0x10 \n\tnd6 options=201&lt;PERFORMNUD,DAD&gt;\nutun3: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 1500\n\tinet 172.20.0.0 --&gt; 172.20.0.1 netmask 0xffff0000 \n\tinet 10.202.0.0 --&gt; 10.202.0.1 netmask 0xfffffc00 \n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/12052",
                "createdAt": "2022-01-27T11:31:18Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Introduce `Http2DataChunkedInput` to send chunked Http2 Data Frames",
        "url": "https://github.com/netty/netty/pull/12066",
        "resourcePath": "/netty/netty/pull/12066",
        "createdAt": "2022-02-02T06:45:57Z",
        "number": 12066,
        "mergeCommit": {
          "oid": "77ed04330487e7b7f319c41dbe8dd96568d46ba2",
          "message": "Introduce `Http2DataChunkedInput` to send chunked Http2 Data Frames (#12066)\n\nMotivation:\r\nCurrently, HTTP chunking is supported only in HTTP/1.X by Netty. And HTTP/2 implementation was missing.\r\n\r\nModification:\r\nAdded `Http2DataChunkedInput` to support chunked HTTP/2 Data frames.\r\n\r\nResult:\r\n\r\nFixes #10801\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/77ed04330487e7b7f319c41dbe8dd96568d46ba2",
          "parents": {
            "nodes": [
              {
                "oid": "2ab9d653f6199c1438653e1d28c9948b7b9a541c",
                "message": "Link to discord server in readme (#12079)\n\nCloses #12071"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2DataChunkedInput.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2DataChunkedInputTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "example/src/main/java/io/netty/example/http2/file/Http2StaticFileServer.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "example/src/main/java/io/netty/example/http2/file/Http2StaticFileServerHandler.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "example/src/main/java/io/netty/example/http2/file/Http2StaticFileServerInitializer.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84x8tkb2gAoNzE4MTFkMTQxMmUzZWQxZjU5MDg1ZjgxOWM0NWQ2OTNkZTgzNDdjMQ",
                "url": "https://github.com/netty/netty/pull/12066/commits/71811d1412e3ed1f59085f819c45d693de8347c1"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 10801,
                "url": "https://github.com/netty/netty/issues/10801",
                "title": "Considering supporting http2 chunked input",
                "bodyHTML": "<p dir=\"auto\">In Http1, we can use a <code class=\"notranslate\">ChunkedWriteHandler</code>  to write a <code class=\"notranslate\">HttpChunkedInput</code>,  but we can only use the <code class=\"notranslate\">Http2DataWriter#writeData(xx)</code> to write a <code class=\"notranslate\">ByteBuf</code> instance in Http2.</p>\n<p dir=\"auto\">Considering supporting <code class=\"notranslate\">writeChunked(xx)</code> or a unity class (probably implemetated by <code class=\"notranslate\">Http2RemoteFlowController#isWritable()</code> and <code class=\"notranslate\">Http2RemoteFlowController$Listener#writabilityChanged(stream)</code>) for writing a large data stream asynchronously which would cause OOM?</p>",
                "resourcePath": "/netty/netty/issues/10801",
                "createdAt": "2020-11-16T08:53:51Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Link to discord server in readme",
        "url": "https://github.com/netty/netty/pull/12079",
        "resourcePath": "/netty/netty/pull/12079",
        "createdAt": "2022-02-07T08:42:08Z",
        "number": 12079,
        "mergeCommit": {
          "oid": "2ab9d653f6199c1438653e1d28c9948b7b9a541c",
          "message": "Link to discord server in readme (#12079)\n\nCloses #12071",
          "commitUrl": "https://github.com/netty/netty/commit/2ab9d653f6199c1438653e1d28c9948b7b9a541c",
          "parents": {
            "nodes": [
              {
                "oid": "fb4a3206ea49364b5a251029ea9618cd61549380",
                "message": "Don't set the writerIndex to incorrect value when scattering reads are used for datagrams (#12076)\n\nMotivation:\r\n\r\nDue a bug we did set the writerIndex(...) of datagrams to an incorrect value sometimes when scattering reads are used.\r\n\r\nModifications:\r\n\r\n- Remove incorrect call to writerIndex(...)\r\n- Add comment\r\n\r\nResult:\r\n\r\nCorrect writerIndex is used"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "README.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84yJ7Cy2gAoNDU5ODRhY2M4YTc2YzE0MWNjOTcxZGZjYzNkYThlNGYzYzkxMTRiNA",
                "url": "https://github.com/netty/netty/pull/12079/commits/45984acc8a76c141cc971dfcc3da8e4f3c9114b4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12071,
                "url": "https://github.com/netty/netty/issues/12071",
                "title": "Clarify how to engage with the community",
                "bodyHTML": "<p dir=\"auto\"><em>Note: this is kind of a meta-issue, as it is not related to the code</em></p>\n<p dir=\"auto\">I have been working with Netty 4 for the past two months and it has been a great experience. At times I would have liked to talk to someone about design choices and general questions about the library, but I wasn't able to find a place where Netty users come together (e.g. an IRC channel, a Discord server, etc). Netty's website brought me to StackOverflow, but my impression was that most questions go unanswered. The website's link to IRC is broken, and when I checked out #netty on liberachat I only saw 3 users in the channel. This leaves me wondering: where does the Netty community hang around? It would be helpful to clarify this somewhere visible, because right now the first impression is that the project is not as active as it used to be.</p>\n<p dir=\"auto\">By the way, in case you are curious, I implemented a MySQL proxy from scratch (i.e. it receives MySQL connections and forwards them to arbitrary backends). I have the feeling that the library has helped me follow good design practices and that it has provided me a solid foundation to build upon, so thanks for that \ud83d\ude09 !</p>",
                "resourcePath": "/netty/netty/issues/12071",
                "createdAt": "2022-02-03T14:58:46Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow attaching additional metadata to ResourceLeakTrackers on creation",
        "url": "https://github.com/netty/netty/pull/12091",
        "resourcePath": "/netty/netty/pull/12091",
        "createdAt": "2022-02-10T08:56:23Z",
        "number": 12091,
        "mergeCommit": {
          "oid": "86603872776e3ff5a60dea3c104358e486eed588",
          "message": "Allow attaching additional metadata to ResourceLeakTrackers on creation (#12091)\n\n\r\nMotivation:\r\nAttaching metadata to the creation record of a ResourceLeakTracker allows implementations to give more context information about where the leak originated from, such as the currently running test case, or, for fuzzing tests, the input that caused the leak.\r\n\r\nModification:\r\nAdd a protected method getInitialHint to ResourceLeakDetector that is called to populate the hint of the first TraceRecord of a leak. The method returns null by default, keeping the old behavior.\r\n\r\nResult:\r\nSubclasses can override the new method to supply metadata that is then interpreted the same way as a hint passed to ResourceLeakTracker.track, and attached to the \"Created at:\" record.\r\n\r\nCo-authored-by: Chris Vest <christianvest_hansen@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/86603872776e3ff5a60dea3c104358e486eed588",
          "parents": {
            "nodes": [
              {
                "oid": "2b811c7895e8c11d64b25fa6c1308846392e2be0",
                "message": "Add check point to methods `FastThreadLocalThread.threadLocalMap()` and `FastThreadLocalThread.setThreadLocalMap(...)` (#12057)\n\nMotivation:\r\n\r\n`FastThreadLocalThread.threadLocalMap()` and `FastThreadLocalThread.setThreadLocalMap(...)` should firstly check whether the target thread is the current thread, and print warn log if not.\r\nActually, IMHO, we can throw `Exception` here, but for compatible consideration, it's might be better that we just print log.\r\nOR, we can change the field `threadLocalMap` to `volatile threadLocalMap`, which I think it's not good because it will hurts performance.\r\n\r\nModification:\r\n\r\nAdd check point of whether the target thread is the current thread to methods `FastThreadLocalThread.threadLocalMap()` and `FastThreadLocalThread.setThreadLocalMap(...)`, and print warn log if not.\r\n\r\nResult:\r\n\r\nPrints warn log if the target thread is not the current thread.\r\n\r\nCo-authored-by: laosijikaichele <laosijikaichele>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/ResourceLeakDetector.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/ResourceLeakDetectorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84yXBaS2gAoM2U4MmM3MmNkNzIyZWQ5ZmQ0Nzg0NGMxMzM2ODc0OWM2MzU2Nzc4Yw",
                "url": "https://github.com/netty/netty/pull/12091/commits/3e82c72cd722ed9fd47844c13368749c6356778c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12080,
                "url": "https://github.com/netty/netty/issues/12080",
                "title": "Allow attaching additional metadata to ResourceLeakTrackers",
                "bodyHTML": "<p dir=\"auto\">It would be useful to add an API to <code class=\"notranslate\">ResourceLeakDetector</code> that allows subclasses to supply custom metadata on <code class=\"notranslate\">DefaultResourceLeak</code> creation. This would make it easier to associate detected leaks with parameters of the code that caused the leak, e.g. the test case involved (or in my case, the fuzzer input).</p>\n<p dir=\"auto\">Right now there is no way to hook into the <code class=\"notranslate\">ResourceLeakTracker</code> creation at all, so the only workaround seems to be a custom allocator that <code class=\"notranslate\">touch</code>es any buffer on creation, but that doesn't work with separately tracked objects.</p>\n<p dir=\"auto\">IMO a sensible API to implement that would be to add a <code class=\"notranslate\">protected Object initialHint() { return null; }</code> method that is called for the \"creation\" <code class=\"notranslate\">TraceRecord</code>. This hint would then be reported alongside the \"Created at:\" stack trace.</p>\n<p dir=\"auto\">Another alternative is to make <code class=\"notranslate\">track(T obj)</code> not be final, so that subclasses can <code class=\"notranslate\">touch</code> the record with their own information.</p>\n<p dir=\"auto\">I can make a PR for this, if you think this is a sensible thing to support.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.73</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"17.0.1\" 2021-10-19<br>\nOpenJDK Runtime Environment Temurin-17.0.1+12 (build 17.0.1+12)<br>\nOpenJDK 64-Bit Server VM Temurin-17.0.1+12 (build 17.0.1+12, mixed mode, sharing)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux yawkat-oracle 5.13.0-28-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1893266\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/31\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/31/hovercard\" href=\"https://github.com/netty/netty/pull/31\">#31</a>-Ubuntu SMP Thu Jan 13 17:41:06 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/12080",
                "createdAt": "2022-02-07T09:30:50Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Reduce the default PooledByteBufAllocator chunk size from 16 MiB to 4 MiB",
        "url": "https://github.com/netty/netty/pull/12108",
        "resourcePath": "/netty/netty/pull/12108",
        "createdAt": "2022-02-17T17:35:16Z",
        "number": 12108,
        "mergeCommit": {
          "oid": "f650303911e308dfdf10761273c2b8e4436ea0a4",
          "message": "Reduce the default PooledByteBufAllocator chunk size from 16 MiB to 4 MiB (#12108)\n\nMotivation:\r\nBy default we allocate 2 arenas per core, and each arena that is put to use will allocate a chunk.\r\nIf we don't need a lot of memory, and certainly not compared to the number of cores on a system, then this will take up more memory than necessary, since each chunk is 16 MiB.\r\nBy reducing the chunk size to 4 MiB, we reduce the minimum memory usage by a good deal, in these cases where not much is needed.\r\nThe drawback is that we risk allocating more huge buffers, but this is a fair trade-off since Netty's use cases mostly involve very small buffers.\r\n\r\nModification:\r\nReduce the default max order from 11 to 9.\r\nAlso make similar configuration changes in PooledByteBufAllocatorTest, to reduce the memory usage during testing.\r\n\r\nResult:\r\nNetty now uses less memory when less memory is needed by the application.\r\nThis fixes #8536",
          "commitUrl": "https://github.com/netty/netty/commit/f650303911e308dfdf10761273c2b8e4436ea0a4",
          "parents": {
            "nodes": [
              {
                "oid": "1fe29bd1e5c9e70399eb34540658db5ed6cabd29",
                "message": "Fix typo in Snappy.java (#12121)\n\nwithing -> within"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PooledByteBufAllocator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/PooledByteBufAllocatorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84zAZ9G2gAoYzRiYTQ5N2Y1MmJiYmI3MTE0ZjRjYWMyYjJkYTJmMWIxZjg4OTU1Ng",
                "url": "https://github.com/netty/netty/pull/12108/commits/c4ba497f52bbbb7114f4cac2b2da2f1b1f889556"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 8536,
                "url": "https://github.com/netty/netty/issues/8536",
                "title": "[Netty 5] Default PooledByteBufAllocator configuration",
                "bodyHTML": "<p dir=\"auto\">Default memory per chunk that the arena allocates is 16MB. We allocate 2 times number of arenas for direct and for heap buffers. This can be a large amount of memory for applications that may not need it. We should consider reducing the default values to reduce the initial memory footprint, and applications can tune the allocator if they need more chunks.</p>",
                "resourcePath": "/netty/netty/issues/8536",
                "createdAt": "2018-11-13T14:08:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Correct javadocs of HttpUtil",
        "url": "https://github.com/netty/netty/pull/12114",
        "resourcePath": "/netty/netty/pull/12114",
        "createdAt": "2022-02-18T10:54:31Z",
        "number": 12114,
        "mergeCommit": {
          "oid": "ec0fc8fc725c1575be0bfabd79c663a8a60ebbb2",
          "message": "Correct javadocs of HttpUtil (#12114)\n\nMotivation:\r\n\r\nWe should mention that the method will throw if the number couldnt be parsed\r\n\r\nModifications:\r\n\r\nAdd some clarification to the javadocs\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12113",
          "commitUrl": "https://github.com/netty/netty/commit/ec0fc8fc725c1575be0bfabd79c663a8a60ebbb2",
          "parents": {
            "nodes": [
              {
                "oid": "28fcf2794745f91e9d9ec3a2e475c0d65d1b3826",
                "message": "Try stabilising build with CERN CentOS mirror (#12110)\n\nMotivation:\r\nRecently, our builds have been failing a lot with `PYCURL ERROR 7`, where the repository metadata fails to download.\r\nIt seems like the vault.centos.org server(s) are sometimes having trouble keeping up with their load.\r\nIn my local testing, the mirror site hosted by CERN seemed much more responsive.\r\n\r\nModification:\r\nSwitch to the CERN mirror of vault.centos.org.\r\n\r\nResult:\r\nHopefully we now have fewer builds fail because `yum` can't download repository metadata or download packages."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpUtil.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84zEigU2gAoOTM2ZDNlMWJjNDRlMWVjOGM5Y2ZkMDRkYTNmMjg0YzBlYmQ2YjM3Ng",
                "url": "https://github.com/netty/netty/pull/12114/commits/936d3e1bc44e1ec8c9cfd04da3f284c0ebd6b376"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12113,
                "url": "https://github.com/netty/netty/issues/12113",
                "title": "HttpUtil.getContentLength can throw parse error even when default value is supplied",
                "bodyHTML": "<p dir=\"auto\">Fairly straight-forward to fix, but not sure if we should actually change the behavior or just change the javadoc. I can contribute a PR.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Calling <code class=\"notranslate\">HttpUtil.getContentLength(HttpMessage, int)</code> should return the default value when the header is not a number, in accordance with <a href=\"https://javadoc.io/static/io.netty/netty-all/4.1.8.Final/io/netty/handler/codec/http/HttpUtil.html#getContentLength(io.netty.handler.codec.http.HttpMessage,%20int)\" rel=\"nofollow\">the javadoc</a>:</p>\n<blockquote>\n<p dir=\"auto\">Returns: the content length or defaultValue if this message does not have the \"Content-Length\" header or its value is not a number. Not to exceed the boundaries of integer.</p>\n</blockquote>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">For invalid inputs, the method throws an exception:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Exception in thread &quot;main&quot; java.lang.NumberFormatException: For input string: &quot;foo&quot;\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\tat java.base/java.lang.Long.parseLong(Long.java:711)\n\tat java.base/java.lang.Long.parseLong(Long.java:836)\n\tat io.netty.handler.codec.http.HttpUtil.getContentLength(HttpUtil.java:181)\n\tat io.netty.handler.codec.http.HttpUtil.getContentLength(HttpUtil.java:203)\n\tat io.micronaut.http.server.netty.fuzzing.X.main(X.java:12)\"><pre class=\"notranslate\"><code class=\"notranslate\">Exception in thread \"main\" java.lang.NumberFormatException: For input string: \"foo\"\n\tat java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)\n\tat java.base/java.lang.Long.parseLong(Long.java:711)\n\tat java.base/java.lang.Long.parseLong(Long.java:836)\n\tat io.netty.handler.codec.http.HttpUtil.getContentLength(HttpUtil.java:181)\n\tat io.netty.handler.codec.http.HttpUtil.getContentLength(HttpUtil.java:203)\n\tat io.micronaut.http.server.netty.fuzzing.X.main(X.java:12)\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Run the reproducer code.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"package io.micronaut.http.server.netty.fuzzing;\n\nimport io.netty.handler.codec.http.DefaultFullHttpRequest;\nimport io.netty.handler.codec.http.HttpMethod;\nimport io.netty.handler.codec.http.HttpUtil;\nimport io.netty.handler.codec.http.HttpVersion;\n\npublic class X {\n    public static void main(String[] args) {\n        DefaultFullHttpRequest request = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.GET, &quot;/&quot;);\n        request.headers().add(&quot;Content-Length&quot;, &quot;foo&quot;);\n        System.out.println(HttpUtil.getContentLength(request, 0));\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">package</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">micronaut</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">server</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">fuzzing</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">DefaultFullHttpRequest</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">HttpMethod</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">HttpUtil</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">HttpVersion</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">X</span> {\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) {\n        <span class=\"pl-smi\">DefaultFullHttpRequest</span> <span class=\"pl-s1\">request</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DefaultFullHttpRequest</span>(<span class=\"pl-smi\">HttpVersion</span>.<span class=\"pl-c1\">HTTP_1_1</span>, <span class=\"pl-smi\">HttpMethod</span>.<span class=\"pl-c1\">GET</span>, <span class=\"pl-s\">\"/\"</span>);\n        <span class=\"pl-s1\">request</span>.<span class=\"pl-en\">headers</span>().<span class=\"pl-en\">add</span>(<span class=\"pl-s\">\"Content-Length\"</span>, <span class=\"pl-s\">\"foo\"</span>);\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-smi\">HttpUtil</span>.<span class=\"pl-en\">getContentLength</span>(<span class=\"pl-s1\">request</span>, <span class=\"pl-c1\">0</span>));\n    }\n}</pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.73.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"17.0.1\" 2021-10-19<br>\nOpenJDK Runtime Environment Temurin-17.0.1+12 (build 17.0.1+12)<br>\nOpenJDK 64-Bit Server VM Temurin-17.0.1+12 (build 17.0.1+12, mixed mode, sharing)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux yawkat-oracle 5.13.0-28-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1893266\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/31\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/31/hovercard\" href=\"https://github.com/netty/netty/pull/31\">#31</a>-Ubuntu SMP Thu Jan 13 17:41:06 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/12113",
                "createdAt": "2022-02-18T09:42:50Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add PlatformDependent.estimateMaxDirectMemory",
        "url": "https://github.com/netty/netty/pull/12118",
        "resourcePath": "/netty/netty/pull/12118",
        "createdAt": "2022-02-22T18:31:37Z",
        "number": 12118,
        "mergeCommit": {
          "oid": "9c77e4021e3296ee445fe1512cf8b9c3ea3a7ab1",
          "message": "Add PlatformDependent.estimateMaxDirectMemory (#12118)\n\nMotivation:\r\nIntegrators may want to also have a cross-platform way to compute the max direct memory.\r\nSince we do this already, we can just as well expose the method.\r\nHowever, all methods in PlatformDependent remain internal and unsupported, so callers should be robust to changing signatures and method names.\r\n\r\nModification:\r\nRename the maxDirectMemory0 method to estimateMaxDirectMemory and make it public.\r\n\r\nResult:\r\nFixes #12103",
          "commitUrl": "https://github.com/netty/netty/commit/9c77e4021e3296ee445fe1512cf8b9c3ea3a7ab1",
          "parents": {
            "nodes": [
              {
                "oid": "ec0fc8fc725c1575be0bfabd79c663a8a60ebbb2",
                "message": "Correct javadocs of HttpUtil (#12114)\n\nMotivation:\r\n\r\nWe should mention that the method will throw if the number couldnt be parsed\r\n\r\nModifications:\r\n\r\nAdd some clarification to the javadocs\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12113"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/PlatformDependent.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84zTXKR2gAoZGFiYzViZjVkMGQwZjliNjg3ZWNmYmVhYjM4OWVjYjQ1M2MxZWVlOQ",
                "url": "https://github.com/netty/netty/pull/12118/commits/dabc5bf5d0d0f9b687ecfbeab389ecb453c1eee9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12103,
                "url": "https://github.com/netty/netty/issues/12103",
                "title": "[feautre request] Add a util method to get maxDirectMemory",
                "bodyHTML": "<p dir=\"auto\">Netty's <code class=\"notranslate\">PlatformDependent.maxDirectMemory()</code> is powerful and general.<br>\nIn other project, we want to read the <code class=\"notranslate\">maxDirectMemory</code> too.<br>\nBut we can't directly use <code class=\"notranslate\">PlatformDependent.maxDirectMemory()</code> , because it will wrong if user set <code class=\"notranslate\">io.netty.maxDirectMemory</code> greater than zero.<br>\nInstead of copy and paste netty's code(Under Apache License), I want a UtilityClass to get <code class=\"notranslate\">PlatformDependent.maxDirectMemory0</code> result.</p>\n<p dir=\"auto\">I am not very familiar with netty code,  I can work on this under guides.</p>\n<p dir=\"auto\">Thanks for your help.</p>",
                "resourcePath": "/netty/netty/issues/12103",
                "createdAt": "2022-02-16T01:05:49Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "feature"
                      }
                    },
                    {
                      "node": {
                        "name": "discussion"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix #12129",
        "url": "https://github.com/netty/netty/pull/12131",
        "resourcePath": "/netty/netty/pull/12131",
        "createdAt": "2022-02-28T15:35:40Z",
        "number": 12131,
        "mergeCommit": {
          "oid": "09dbf99ffaf9b00c1df8e55590d58a524ea639d2",
          "message": "Change MessageFormatter /  FormattingTuple to public  (#12131)\n\nMotivation:\r\n\r\nAllow other Logging integration to use optimised MessageFormatter implementation\r\n\r\nModifications:\r\n\r\nChange MessageFormatter /  FormattingTuple to public  \r\n\r\nResult:\r\n\r\nFix #12129",
          "commitUrl": "https://github.com/netty/netty/commit/09dbf99ffaf9b00c1df8e55590d58a524ea639d2",
          "parents": {
            "nodes": [
              {
                "oid": "f79acfcb20d0be2d6bf80e1404375b1d3e39563c",
                "message": "NetUtil static block should be whitelisted for blockhound (#12130)\n\nMotivation:\r\n\r\nWhen the NetUtil class is loaded it might produce a blockhound warning due it reading the proc filesystem. Let's whitelist this\r\n\r\nModifications:\r\n\r\nWhitelist the reading of the proc filesystemm during NetUtil init\r\n\r\nResult:\r\n\r\nLess warnings when using blockhound"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/logging/FormattingTuple.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/logging/MessageFormatter.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84zrBOn2gAoNjU3Y2UwMDFjMzg2ZmFlM2RmYTBkMDdhZTgwZjU3ZmUyYzQwYjQzZQ",
                "url": "https://github.com/netty/netty/pull/12131/commits/657ce001c386fae3dfa0d07ae80f57fe2c40b43e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12129,
                "url": "https://github.com/netty/netty/issues/12129",
                "title": "Internal Logging API - make MessageFormatter and FormattingTuple public",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">While trying to use netty with ZIO 2.x Logging support I found out that I can't implement properly AbstractInternalLogger  interface for integration with ZIO 2.x, relying on the optimised implementation of MessageFormatter.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Should be able to add new Logging integrations.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.74</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Not dependent on java version</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Not dependent on OS version.</p>",
                "resourcePath": "/netty/netty/issues/12129",
                "createdAt": "2022-02-28T12:11:18Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixed high CPU usage when using spliceTo()",
        "url": "https://github.com/netty/netty/pull/12138",
        "resourcePath": "/netty/netty/pull/12138",
        "createdAt": "2022-03-02T12:15:18Z",
        "number": 12138,
        "mergeCommit": {
          "oid": "4374612a4bedefd528d22daac5094e3c740baeb9",
          "message": "Fixed the inability to receive channelInactive() events when using spliceTo(). Fixed high CPU usage when using spliceTo() (#12138)\n\nMotivation:\r\n\r\n1. spliceTo() ignores RdHup, causing users to fail to receive channelInactive().\r\n2. When using spliceTo,epollInFinally() is meaningless,and epollInFinally will result in infinite calls to spliceIn(). spliceIn will return in only two cases: (1)There is no data to splice(). (2)sufficient length has been spliced. So just wait The next EPOLLIN event fires.\r\n3. lastBytesRead is not updated, which will cause handle.guess() to get smaller and smaller, resulting in high CPU usage.\r\n\r\nModifications:\r\n\r\n1. check isReceivedRdHup\r\n2. not call epollInFinally when using spliceTo()\r\n3. update lastBytesRead in spliceIn()\r\n\r\nResult:\r\n1. channelInactive() is correctly called back\r\n2. reduce cpu usage",
          "commitUrl": "https://github.com/netty/netty/commit/4374612a4bedefd528d22daac5094e3c740baeb9",
          "parents": {
            "nodes": [
              {
                "oid": "94cfa608a8071e8a9005e0d52e0199b3584f4ae7",
                "message": "Add ByteBufConvertible to Netty 4.1 (#12136)\n\n\r\nMotivation:\r\nThis interface is used in the main branch to bridge buffer implementations.\r\nMoving it to 4.1 will allow Netty 5 to use the 4.1 ByteBuf implementation.\r\n\r\nModification:\r\nCopy the ByteBufConvertible interface from the main branch to 4.1.\r\nAnd make ByteBuf implement the interface in the same way it does in the main branch.\r\n\r\nResult:\r\nThe current main branch code can theoretically be made to use the ByteBuf implementation from 4.1."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84z0yHi2gAoNjRkMTU2Y2Y4NmFhYzY3Y2MzNzQ2MTBlZGQ1MDFhYzU5ODQwMDAyOA",
                "url": "https://github.com/netty/netty/pull/12138/commits/64d156cf86aac67cc374610edd501ac598400028"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12123,
                "url": "https://github.com/netty/netty/issues/12123",
                "title": "About the bug of spliceTo()",
                "bodyHTML": "<p dir=\"auto\">When I use splice for traffic transmissions, if I still go to epollInReady when EPOLLRDHUP occurs, this will cause me to not receive channelInactive() events</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">when the other party closes the connection, I can receive channelinactive()</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Cannot receive channelinactive(),and CPU 100%</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/41415014/155658646-0fff6505-f1b9-4066-9852-087f0040fd50.png\"><img src=\"https://user-images.githubusercontent.com/41415014/155658646-0fff6505-f1b9-4066-9852-087f0040fd50.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">code</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"            channel1.config().setAutoRead(false);\n            channel2.config().setAutoRead(false);\n            EpollSocketChannel ch1 = (EpollSocketChannel) channel1;\n            EpollSocketChannel ch2 = (EpollSocketChannel) channel2;\n            channel1.pipeline().addLast(new ChannelInboundHandlerAdapter() {\n                @Override\n                public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n                    ctx.channel().close();\n                }\n            });\n            channel2.pipeline().addLast(new ChannelInboundHandlerAdapter() {\n                @Override\n                public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n                    ctx.channel().close();\n                }\n            });\n\n            ch1.spliceTo(ch2, Integer.MAX_VALUE).addListener(new ChannelFutureListener() {\n                @Override\n                public void operationComplete(ChannelFuture future) {\n                    if (!future.isSuccess()) {\n                        future.cancel(true);\n                        future.channel().close();\n                    }\n                }\n            });\n            ch2.spliceTo(ch1, Integer.MAX_VALUE).addListener(new ChannelFutureListener() {\n                @Override\n                public void operationComplete(ChannelFuture future) {\n                    if (!future.isSuccess()) {\n                        future.cancel(true);\n                        future.channel().close();\n                    }\n                }\n            });\n            channel1.config().setAutoRead(true);\n            channel2.config().setAutoRead(true);\n\"><pre class=\"notranslate\">            <span class=\"pl-s1\">channel1</span>.<span class=\"pl-en\">config</span>().<span class=\"pl-en\">setAutoRead</span>(<span class=\"pl-c1\">false</span>);\n            <span class=\"pl-s1\">channel2</span>.<span class=\"pl-en\">config</span>().<span class=\"pl-en\">setAutoRead</span>(<span class=\"pl-c1\">false</span>);\n            <span class=\"pl-smi\">EpollSocketChannel</span> <span class=\"pl-s1\">ch1</span> = (<span class=\"pl-smi\">EpollSocketChannel</span>) <span class=\"pl-s1\">channel1</span>;\n            <span class=\"pl-smi\">EpollSocketChannel</span> <span class=\"pl-s1\">ch2</span> = (<span class=\"pl-smi\">EpollSocketChannel</span>) <span class=\"pl-s1\">channel2</span>;\n            <span class=\"pl-s1\">channel1</span>.<span class=\"pl-en\">pipeline</span>().<span class=\"pl-en\">addLast</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">ChannelInboundHandlerAdapter</span>() {\n                <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">channelInactive</span>(<span class=\"pl-smi\">ChannelHandlerContext</span> <span class=\"pl-s1\">ctx</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n                    <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">close</span>();\n                }\n            });\n            <span class=\"pl-s1\">channel2</span>.<span class=\"pl-en\">pipeline</span>().<span class=\"pl-en\">addLast</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">ChannelInboundHandlerAdapter</span>() {\n                <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">channelInactive</span>(<span class=\"pl-smi\">ChannelHandlerContext</span> <span class=\"pl-s1\">ctx</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n                    <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">close</span>();\n                }\n            });\n\n            <span class=\"pl-s1\">ch1</span>.<span class=\"pl-en\">spliceTo</span>(<span class=\"pl-s1\">ch2</span>, <span class=\"pl-smi\">Integer</span>.<span class=\"pl-c1\">MAX_VALUE</span>).<span class=\"pl-en\">addListener</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">ChannelFutureListener</span>() {\n                <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">operationComplete</span>(<span class=\"pl-smi\">ChannelFuture</span> <span class=\"pl-s1\">future</span>) {\n                    <span class=\"pl-k\">if</span> (!<span class=\"pl-s1\">future</span>.<span class=\"pl-en\">isSuccess</span>()) {\n                        <span class=\"pl-s1\">future</span>.<span class=\"pl-en\">cancel</span>(<span class=\"pl-c1\">true</span>);\n                        <span class=\"pl-s1\">future</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">close</span>();\n                    }\n                }\n            });\n            <span class=\"pl-s1\">ch2</span>.<span class=\"pl-en\">spliceTo</span>(<span class=\"pl-s1\">ch1</span>, <span class=\"pl-smi\">Integer</span>.<span class=\"pl-c1\">MAX_VALUE</span>).<span class=\"pl-en\">addListener</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">ChannelFutureListener</span>() {\n                <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">operationComplete</span>(<span class=\"pl-smi\">ChannelFuture</span> <span class=\"pl-s1\">future</span>) {\n                    <span class=\"pl-k\">if</span> (!<span class=\"pl-s1\">future</span>.<span class=\"pl-en\">isSuccess</span>()) {\n                        <span class=\"pl-s1\">future</span>.<span class=\"pl-en\">cancel</span>(<span class=\"pl-c1\">true</span>);\n                        <span class=\"pl-s1\">future</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">close</span>();\n                    }\n                }\n            });\n            <span class=\"pl-s1\">channel1</span>.<span class=\"pl-en\">config</span>().<span class=\"pl-en\">setAutoRead</span>(<span class=\"pl-c1\">true</span>);\n            <span class=\"pl-s1\">channel2</span>.<span class=\"pl-en\">config</span>().<span class=\"pl-en\">setAutoRead</span>(<span class=\"pl-c1\">true</span>);</pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.70.Final</p>\n<h3 dir=\"auto\">Jdk version</h3>\n<p dir=\"auto\">openjdk version \"1.8.0_322\"</p>\n<h3 dir=\"auto\">Linux version</h3>\n<p dir=\"auto\">linux 3.10.0-229.el7.x86_64</p>\n<h3 dir=\"auto\">Solution</h3>\n<p dir=\"auto\">Modify epollRdHupReady()</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"       /**\n         * Called once EPOLLRDHUP event is ready to be processed\n         */\n        final void epollRdHupReady() {\n            // This must happen before we attempt to read. This will ensure reading continues until an error occurs.\n            recvBufAllocHandle().receivedRdHup();\n\n            if (isActive()) {\n                // here\n                if (AbstractEpollChannel.this instanceof AbstractEpollStreamChannel) {\n                    if (((AbstractEpollStreamChannel) AbstractEpollChannel.this).spliceQueue != null) {\n                        shutdownInput(true);\n                    }\n                } else {\n                    // If it is still active, we need to call epollInReady as otherwise we may miss to\n                    // read pending data from the underlying file descriptor.\n                    // See https://github.com/netty/netty/issues/3709\n                    epollInReady();\n                }\n            } else {\n                // Just to be safe make sure the input marked as closed.\n                shutdownInput(true);\n            }\n\n            // Clear the EPOLLRDHUP flag to prevent continuously getting woken up on this event.\n            clearEpollRdHup();\n        }\"><pre class=\"notranslate\">       <span class=\"pl-c\">/**</span>\n<span class=\"pl-c\">         * Called once EPOLLRDHUP event is ready to be processed</span>\n<span class=\"pl-c\">         */</span>\n        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">epollRdHupReady</span>() {\n            <span class=\"pl-c\">// This must happen before we attempt to read. This will ensure reading continues until an error occurs.</span>\n            <span class=\"pl-en\">recvBufAllocHandle</span>().<span class=\"pl-en\">receivedRdHup</span>();\n\n            <span class=\"pl-k\">if</span> (<span class=\"pl-en\">isActive</span>()) {\n                <span class=\"pl-c\">// here</span>\n                <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">AbstractEpollChannel</span>.<span class=\"pl-smi\">this</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">AbstractEpollStreamChannel</span>) {\n                    <span class=\"pl-k\">if</span> (((<span class=\"pl-smi\">AbstractEpollStreamChannel</span>) <span class=\"pl-smi\">AbstractEpollChannel</span>.<span class=\"pl-smi\">this</span>).<span class=\"pl-s1\">spliceQueue</span> != <span class=\"pl-c1\">null</span>) {\n                        <span class=\"pl-en\">shutdownInput</span>(<span class=\"pl-c1\">true</span>);\n                    }\n                } <span class=\"pl-k\">else</span> {\n                    <span class=\"pl-c\">// If it is still active, we need to call epollInReady as otherwise we may miss to</span>\n                    <span class=\"pl-c\">// read pending data from the underlying file descriptor.</span>\n                    <span class=\"pl-c\">// See https://github.com/netty/netty/issues/3709</span>\n                    <span class=\"pl-en\">epollInReady</span>();\n                }\n            } <span class=\"pl-k\">else</span> {\n                <span class=\"pl-c\">// Just to be safe make sure the input marked as closed.</span>\n                <span class=\"pl-en\">shutdownInput</span>(<span class=\"pl-c1\">true</span>);\n            }\n\n            <span class=\"pl-c\">// Clear the EPOLLRDHUP flag to prevent continuously getting woken up on this event.</span>\n            <span class=\"pl-en\">clearEpollRdHup</span>();\n        }</pre></div>",
                "resourcePath": "/netty/netty/issues/12123",
                "createdAt": "2022-02-25T05:13:26Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix race condition in setting ReferenceCountedOpenSslEngine.needTask flag",
        "url": "https://github.com/netty/netty/pull/12140",
        "resourcePath": "/netty/netty/pull/12140",
        "createdAt": "2022-03-02T15:05:38Z",
        "number": 12140,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84z1emx2gAoNTU2OGE4ZmM3ZGJlY2ZmODIxNTE5MWVkMzE5YTIzYmQ2OGRmNjc3NA",
                "url": "https://github.com/netty/netty/pull/12140/commits/5568a8fc7dbecff8215191ed319a23bd68df6774"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12139,
                "url": "https://github.com/netty/netty/issues/12139",
                "title": "Delegated tasks issue in ReferenceCountedOpenSslEngine",
                "bodyHTML": "<p dir=\"auto\">Sometimes the OpenSSL engine fails to properly handle delegated tasks.<br>\nThe cause of problems is probably a thread-safety issue in the <code class=\"notranslate\">io.netty.handler.ssl.ReferenceCountedOpenSslEngine</code> class.</p>\n<p dir=\"auto\">Executing the delegated tasks in a blocking manner seems to work correctly.</p>\n<p dir=\"auto\">If the tasks are executed in external threads the processing sometimes fails. The handshake \"hangs\" in the <code class=\"notranslate\">NEED_TASK</code> state.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">All delegated tasks are properly finished and the handshake status in the <code class=\"notranslate\">SSLEngine</code> gets value different from the <code class=\"notranslate\">NEED_TASK</code>.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Sometimes the <code class=\"notranslate\">ReferenceCountedOpenSslEngine</code> hangs in the <code class=\"notranslate\">NEED_TASK</code> handshake status.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Repeat the reproducer runs until it hits the issue:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"i=1; while mvn test; do echo &quot;Starting build $((++i))&quot;; done; echo &quot;Failed $i&quot;\"><pre class=\"notranslate\">i=1<span class=\"pl-k\">;</span> <span class=\"pl-k\">while</span> mvn <span class=\"pl-c1\">test</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Starting build <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-k\">++</span>i<span class=\"pl-pds\">))</span></span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed <span class=\"pl-smi\">$i</span><span class=\"pl-pds\">\"</span></span></pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">The reproducer is in this branch:<br>\n<a href=\"https://github.com/kwart/test-app/tree/netty-tcnative-NEED_TASK-issue\">https://github.com/kwart/test-app/tree/netty-tcnative-NEED_TASK-issue</a></p>\n<p dir=\"auto\">The main class <code class=\"notranslate\">App.java</code> can be switched from using the non-blocking task executor to blocking by:</p>\n<div class=\"highlight highlight-source-diff notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"-        app.run(false);\n+        app.run(true);\"><pre class=\"notranslate\"><span class=\"pl-md\"><span class=\"pl-md\">-</span>        app.run(false);</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        app.run(true);</span></pre></div>\n<p dir=\"auto\">In this case, we didn't hit see the problem occur.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">Tested with the latest available:</p>\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        &lt;dependency&gt;\n            &lt;groupId&gt;io.netty&lt;/groupId&gt;\n            &lt;artifactId&gt;netty-tcnative-boringssl-static&lt;/artifactId&gt;\n            &lt;version&gt;2.0.50.Final&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.netty&lt;/groupId&gt;\n            &lt;artifactId&gt;netty-handler&lt;/artifactId&gt;\n            &lt;version&gt;4.1.74.Final&lt;/version&gt;\n        &lt;/dependency&gt;\"><pre class=\"notranslate\">        &lt;<span class=\"pl-ent\">dependency</span>&gt;\n            &lt;<span class=\"pl-ent\">groupId</span>&gt;io.netty&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n            &lt;<span class=\"pl-ent\">artifactId</span>&gt;netty-tcnative-boringssl-static&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n            &lt;<span class=\"pl-ent\">version</span>&gt;2.0.50.Final&lt;/<span class=\"pl-ent\">version</span>&gt;\n        &lt;/<span class=\"pl-ent\">dependency</span>&gt;\n        &lt;<span class=\"pl-ent\">dependency</span>&gt;\n            &lt;<span class=\"pl-ent\">groupId</span>&gt;io.netty&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n            &lt;<span class=\"pl-ent\">artifactId</span>&gt;netty-handler&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n            &lt;<span class=\"pl-ent\">version</span>&gt;4.1.74.Final&lt;/<span class=\"pl-ent\">version</span>&gt;\n        &lt;/<span class=\"pl-ent\">dependency</span>&gt;</pre></div>\n<p dir=\"auto\">We hit the problem in the older netty versions too.</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">We tested this on Linux OpenJDK versions 8, 11, 17. Most often we hit the problem on Java 11, less often on 8, and sometimes<br>\non 17.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ j8\nopenjdk version &quot;1.8.0_312&quot;\nOpenJDK Runtime Environment (Zulu 8.58.0.13-CA-linux64) (build 1.8.0_312-b07)\nOpenJDK 64-Bit Server VM (Zulu 8.58.0.13-CA-linux64) (build 25.312-b07, mixed mode)\n$ j11\nopenjdk version &quot;11.0.13&quot; 2021-10-19 LTS\nOpenJDK Runtime Environment Zulu11.52+13-CA (build 11.0.13+8-LTS)\nOpenJDK 64-Bit Server VM Zulu11.52+13-CA (build 11.0.13+8-LTS, mixed mode)\n$ j17\nopenjdk version &quot;17&quot; 2021-09-14 LTS\nOpenJDK Runtime Environment Zulu17.28+13-CA (build 17+35-LTS)\nOpenJDK 64-Bit Server VM Zulu17.28+13-CA (build 17+35-LTS, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">$ j8\nopenjdk version \"1.8.0_312\"\nOpenJDK Runtime Environment (Zulu 8.58.0.13-CA-linux64) (build 1.8.0_312-b07)\nOpenJDK 64-Bit Server VM (Zulu 8.58.0.13-CA-linux64) (build 25.312-b07, mixed mode)\n$ j11\nopenjdk version \"11.0.13\" 2021-10-19 LTS\nOpenJDK Runtime Environment Zulu11.52+13-CA (build 11.0.13+8-LTS)\nOpenJDK 64-Bit Server VM Zulu11.52+13-CA (build 11.0.13+8-LTS, mixed mode)\n$ j17\nopenjdk version \"17\" 2021-09-14 LTS\nOpenJDK Runtime Environment Zulu17.28+13-CA (build 17+35-LTS)\nOpenJDK 64-Bit Server VM Zulu17.28+13-CA (build 17+35-LTS, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Ubuntu 20.04</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ uname -a\nLinux kwart-office 5.4.0-100-generic #113-Ubuntu SMP Thu Feb 3 18:43:29 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\"><pre class=\"notranslate\">$ uname -a\nLinux kwart-office 5.4.0-100-generic <span class=\"pl-c\"><span class=\"pl-c\">#</span>113-Ubuntu SMP Thu Feb 3 18:43:29 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</span></pre></div>",
                "resourcePath": "/netty/netty/issues/12139",
                "createdAt": "2022-03-02T12:27:31Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Reduce syscall overhead in native epoll transport when a lot of timeo\u2026",
        "url": "https://github.com/netty/netty/pull/12145",
        "resourcePath": "/netty/netty/pull/12145",
        "createdAt": "2022-03-04T16:05:30Z",
        "number": 12145,
        "mergeCommit": {
          "oid": "86004b7303621784f7ec8850323d9a707f17f9f8",
          "message": "Reduce syscall overhead in native epoll transport when a lot of timeouts are scheduled(#12145)\n\n\r\nMotivation:\r\n\r\nAt the moment we might end up calling timerfd_settime everytime a new timer is scheduled. This can produce quite some overhead. We should try to reduce the number of syscalls when possible.\r\n\r\nModifications:\r\n\r\n- If we are using Linux Kernel >= 5.11 use directly epoll_pwait2(...)\r\n- If the scheduled timeout is big enough just use epoll_wait(...) without timerfd_settime and accept some inaccuracy.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/11695",
          "commitUrl": "https://github.com/netty/netty/commit/86004b7303621784f7ec8850323d9a707f17f9f8",
          "parents": {
            "nodes": [
              {
                "oid": "40382fb1af275e931a765c5001f4b6bd8061991e",
                "message": "Give netty-all an automatic module name (#12188)\n\nMotivation\r\nThe netty-all module still produces an empty jar file, so it causes trouble for modular projects if this has no module name.\r\n\r\nModification:\r\nAdd an automatic module name for netty-all.\r\n\r\nResult:\r\nThe netty-all module can now be used in a modula project, under the `io.netty.all` name.\r\n\r\nFixes #12175"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoop.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/Native.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/c/netty_epoll_native.c"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84z9p482gAoMzg5YThjZDM0YWM2YjU4YWMzM2Q2NTM1OGUwODI5Zjc1ZGQxYzY3Yg",
                "url": "https://github.com/netty/netty/pull/12145/commits/389a8cd34ac6b58ac33d65358e0829f75dd1c67b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11695,
                "url": "https://github.com/netty/netty/issues/11695",
                "title": "Epoll consuming lot more CPU than Nio",
                "bodyHTML": "<p dir=\"auto\">I am building a websocket based broker. During load testing, we found that Epoll transport uses around 55% CPU compared to around 20% for Nio, just for maintaining the connections without doing any business specific IO on those connections. Is this expected? What could I be doing wrong?  Happy to share any more info required around this.</p>\n<p dir=\"auto\">Total concurrent connections: Around 27K<br>\nBoss Threads: 1<br>\nWorker Threads: 32</p>\n<p dir=\"auto\">Cores in the VM: 8</p>\n<p dir=\"auto\">Relevant code that sets up netty.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  EventExecutorChooserFactory chooserFactory = DefaultEventExecutorChooserFactory.INSTANCE;\n\n  ThreadFactory bossThreadFactory = ThreadFactoryUtil.createInstrumented(&quot;boss&quot;, metricRegistry);\n\n  Executor workerExecutor = new ThreadPerTaskExecutor(\n          ThreadFactoryUtil.createAffinityThreadFactory(&quot;worker.thread&quot;, metricRegistry));\n\nprivate void setupNioEventLoopGroups(EventExecutorChooserFactory chooserFactory, ThreadFactory bossThreadFactory,\n            Executor workerExecutor) {\n        bossPool = new NioEventLoopGroup(acceptorThreads, bossThreadFactory);\n        workerPool = new NioEventLoopGroup(workerThreads, workerExecutor, chooserFactory, SelectorProvider.provider(),\n                DefaultSelectStrategyFactory.INSTANCE);\n        channelType = NioServerSocketChannel.class;\n        log.info(&quot;Initialiazing Java NIO Event System&quot;);\n    }\n\n    private void setupEpollEventLoopGroups(EventExecutorChooserFactory chooserFactory, ThreadFactory bossThreadFactory,\n            Executor workerExecutor) {\n        bossPool = new EpollEventLoopGroup(acceptorThreads, bossThreadFactory);\n        workerPool = new EpollEventLoopGroup(workerThreads, workerExecutor, chooserFactory,\n                DefaultSelectStrategyFactory.INSTANCE);\n        channelType = EpollServerSocketChannel.class;\n        log.info(&quot;Initialiazing Epoll IO Event System&quot;);\n    }\n\n\n        ServerBootstrap serverBootstrap = new ServerBootstrap().group(bossPool, workerPool);\n\n        // Choose socket options.\n        Map&lt;ChannelOption&lt;?&gt;, Object&gt; channelOptions = new HashMap&lt;&gt;();\n        channelOptions.put(ChannelOption.SO_BACKLOG, 256);\n        channelOptions.put(ChannelOption.ALLOCATOR, new PooledByteBufAllocator(true));\n        channelOptions.put(ChannelOption.SO_TIMEOUT, 3000);\n\n        channelOptions.forEach(\n                (key, value) -&gt; serverBootstrap.option(ChannelOption.valueOf(String.valueOf(key)), value));\n\n        // Set transport options\n        serverBootstrap.childOption(ChannelOption.TCP_NODELAY, true);\n        serverBootstrap.childOption(ChannelOption.SO_KEEPALIVE, true);\n        serverBootstrap.childOption(ChannelOption.SO_LINGER, -1);\n        serverBootstrap.childOption(ChannelOption.SO_REUSEADDR, true);\n        serverBootstrap.childOption(ChannelOption.ALLOCATOR, PooledByteBufAllocator.DEFAULT);\n        serverBootstrap.childOption(ChannelOption.ALLOW_HALF_CLOSURE, false);\n        serverBootstrap.childOption(ChannelOption.SO_SNDBUF, 10 * 1024);\n        serverBootstrap.channel(serverGroup.getChannelType());\n        serverBootstrap.childHandler(channelInitializer);\n\"><pre class=\"notranslate\"><code class=\"notranslate\">  EventExecutorChooserFactory chooserFactory = DefaultEventExecutorChooserFactory.INSTANCE;\n\n  ThreadFactory bossThreadFactory = ThreadFactoryUtil.createInstrumented(\"boss\", metricRegistry);\n\n  Executor workerExecutor = new ThreadPerTaskExecutor(\n          ThreadFactoryUtil.createAffinityThreadFactory(\"worker.thread\", metricRegistry));\n\nprivate void setupNioEventLoopGroups(EventExecutorChooserFactory chooserFactory, ThreadFactory bossThreadFactory,\n            Executor workerExecutor) {\n        bossPool = new NioEventLoopGroup(acceptorThreads, bossThreadFactory);\n        workerPool = new NioEventLoopGroup(workerThreads, workerExecutor, chooserFactory, SelectorProvider.provider(),\n                DefaultSelectStrategyFactory.INSTANCE);\n        channelType = NioServerSocketChannel.class;\n        log.info(\"Initialiazing Java NIO Event System\");\n    }\n\n    private void setupEpollEventLoopGroups(EventExecutorChooserFactory chooserFactory, ThreadFactory bossThreadFactory,\n            Executor workerExecutor) {\n        bossPool = new EpollEventLoopGroup(acceptorThreads, bossThreadFactory);\n        workerPool = new EpollEventLoopGroup(workerThreads, workerExecutor, chooserFactory,\n                DefaultSelectStrategyFactory.INSTANCE);\n        channelType = EpollServerSocketChannel.class;\n        log.info(\"Initialiazing Epoll IO Event System\");\n    }\n\n\n        ServerBootstrap serverBootstrap = new ServerBootstrap().group(bossPool, workerPool);\n\n        // Choose socket options.\n        Map&lt;ChannelOption&lt;?&gt;, Object&gt; channelOptions = new HashMap&lt;&gt;();\n        channelOptions.put(ChannelOption.SO_BACKLOG, 256);\n        channelOptions.put(ChannelOption.ALLOCATOR, new PooledByteBufAllocator(true));\n        channelOptions.put(ChannelOption.SO_TIMEOUT, 3000);\n\n        channelOptions.forEach(\n                (key, value) -&gt; serverBootstrap.option(ChannelOption.valueOf(String.valueOf(key)), value));\n\n        // Set transport options\n        serverBootstrap.childOption(ChannelOption.TCP_NODELAY, true);\n        serverBootstrap.childOption(ChannelOption.SO_KEEPALIVE, true);\n        serverBootstrap.childOption(ChannelOption.SO_LINGER, -1);\n        serverBootstrap.childOption(ChannelOption.SO_REUSEADDR, true);\n        serverBootstrap.childOption(ChannelOption.ALLOCATOR, PooledByteBufAllocator.DEFAULT);\n        serverBootstrap.childOption(ChannelOption.ALLOW_HALF_CLOSURE, false);\n        serverBootstrap.childOption(ChannelOption.SO_SNDBUF, 10 * 1024);\n        serverBootstrap.channel(serverGroup.getChannelType());\n        serverBootstrap.childHandler(channelInitializer);\n\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.68</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"11.0.12\" 2021-07-20 LTS<br>\nOpenJDK Runtime Environment Zulu11.50+19-CA (build 11.0.12+7-LTS)<br>\nOpenJDK 64-Bit Server VM Zulu11.50+19-CA (build 11.0.12+7-LTS, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux bolt-004 5.8.0-1041-azure <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2156962\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/44\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/44/hovercard\" href=\"https://github.com/netty/netty/pull/44\">#44</a>~20.04.1-Ubuntu SMP Fri Aug 20 20:41:09 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</p>\n<p dir=\"auto\">Epoll<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/586275/134007274-c1dd0365-89d1-4858-80f7-c489288c3169.png\"><img width=\"1209\" alt=\"Screenshot 2021-09-20 at 6 36 30 PM\" src=\"https://user-images.githubusercontent.com/586275/134007274-c1dd0365-89d1-4858-80f7-c489288c3169.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Nio<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/586275/134007373-321b17c3-4639-4711-ab14-b616f2f02414.png\"><img width=\"1218\" alt=\"Screenshot 2021-09-20 at 6 22 49 PM\" src=\"https://user-images.githubusercontent.com/586275/134007373-321b17c3-4639-4711-ab14-b616f2f02414.png\" style=\"max-width: 100%;\"></a></p>",
                "resourcePath": "/netty/netty/issues/11695",
                "createdAt": "2021-09-20T13:08:37Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Define tcnative as optional again",
        "url": "https://github.com/netty/netty/pull/12146",
        "resourcePath": "/netty/netty/pull/12146",
        "createdAt": "2022-03-04T16:49:11Z",
        "number": 12146,
        "mergeCommit": {
          "oid": "b616d3eea479efe0e14e9469b71d418a4d84e90b",
          "message": "Define tcnative as optional again (#12146)\n\nMotivation:\r\n\r\nhttps://github.com/netty/netty/pull/11745 introduced some change but missed to mark the tcnative classes jar as optional\r\n\r\nModifications:\r\n\r\nMark the dependency as optional again\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12101 and https://github.com/netty/netty/issues/12132",
          "commitUrl": "https://github.com/netty/netty/commit/b616d3eea479efe0e14e9469b71d418a4d84e90b",
          "parents": {
            "nodes": [
              {
                "oid": "e138117390bd1ffc8014ddc6e6d1cbb2f90dc7aa",
                "message": "Change the access level of class PoolThreadLocalCache to private (#12141)\n\nMotivation:\r\n\r\nThe inner class `PoolThreadLocalCache` is only used within the class `PooledByteBufAllocator`, so it's better to change its access level to private.\r\n\r\nModification:\r\n\r\nChange the access level of class `PoolThreadLocalCache` to private.\r\n\r\nResult:\r\n\r\nChange the access level of class `PoolThreadLocalCache` to private.\r\n\r\nCo-authored-by: laosijikaichele <laosijikaichele>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84z9ypn2gAoOGRkNjNjMDFjYWVlYzFjZjAwZGVmNzhjY2M3MGYxZmM1NzljODM5Ng",
                "url": "https://github.com/netty/netty/pull/12146/commits/8dd63c01caeec1cf00def78ccc70f1fc579c8396"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12101,
                "url": "https://github.com/netty/netty/issues/12101",
                "title": "On a system without netty-tcnative: netty 4.1.74.Final unsuccessfully tries to load netty-tcnative, while netty 4.1.70.Final detects that netty-tcnative is not in the classpath",
                "bodyHTML": "<p dir=\"auto\">As the netty seems to work correctly despite the tcnative loader problem this seems be more like a cosmetical issue.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">It should be detected that netty-tcnative is not in the classpath like it was in netty 4.1.70.Final:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"22-02-15 08:25:41,387 D [Thread-1                  InternalThreadLocalMap           86] -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096\n22-02-15 08:25:41,419 D [Thread-1                  OpenSsl                         137] netty-tcnative not in the classpath; OpenSslEngine will be unavailable.\n22-02-15 08:25:41,622 D [Thread-1                  JdkSslContext                    97] Default protocols (JDK): [TLSv1.3, TLSv1.2] \"><pre class=\"notranslate\"><code class=\"notranslate\">22-02-15 08:25:41,387 D [Thread-1                  InternalThreadLocalMap           86] -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096\n22-02-15 08:25:41,419 D [Thread-1                  OpenSsl                         137] netty-tcnative not in the classpath; OpenSslEngine will be unavailable.\n22-02-15 08:25:41,622 D [Thread-1                  JdkSslContext                    97] Default protocols (JDK): [TLSv1.3, TLSv1.2] \n</code></pre></div>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">With netty 4.1.74.Final it's tried to load netty-tcnative which gives the following exception:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"22-02-15 09:44:10,576 D [Thread-0                  InternalThreadLocalMap           89] -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096\n22-02-15 09:44:10,607 D [Thread-0                  NativeLibraryLoader              78] -Dio.netty.native.workdir: C:\\Windows\\TEMP (io.netty.tmpdir)\n22-02-15 09:44:10,607 D [Thread-0                  NativeLibraryLoader              83] -Dio.netty.native.deleteLibAfterLoading: true\n22-02-15 09:44:10,607 D [Thread-0                  NativeLibraryLoader              87] -Dio.netty.native.tryPatchShadedId: true\n22-02-15 09:44:10,607 D [Thread-0                  NativeLibraryLoader              91] -Dio.netty.native.detectNativeLibraryDuplicates: true\n22-02-15 09:44:10,607 D [Thread-0                  OpenSsl                         149] Failed to load netty-tcnative; OpenSslEngine will be unavailable, unless the application has already loaded the symbols by some other means. See https://netty.io/wiki/forked-tomcat-native.html for more information.\njava.lang.IllegalArgumentException: Failed to load any of the given libraries: [netty_tcnative_windows_x86_64, netty_tcnative_x86_64, netty_tcnative]\n\tat io.netty.util.internal.NativeLibraryLoader.loadFirstAvailable(NativeLibraryLoader.java:114) ~[netty-common-4.1.74.Final.jar:4.1.74.Final]\n\tat io.netty.handler.ssl.OpenSsl.loadTcNative(OpenSsl.java:705) ~[netty-handler-4.1.74.Final.jar:4.1.74.Final]\n\tat io.netty.handler.ssl.OpenSsl.&lt;clinit&gt;(OpenSsl.java:146) [netty-handler-4.1.74.Final.jar:4.1.74.Final]\n\tat io.netty.handler.ssl.SslContext.defaultProvider(SslContext.java:124) [netty-handler-4.1.74.Final.jar:4.1.74.Final]\n\tat io.netty.handler.ssl.SslContext.defaultClientProvider(SslContext.java:120) [netty-handler-4.1.74.Final.jar:4.1.74.Final]\n\tat io.netty.handler.ssl.SslContext.newClientContextInternal(SslContext.java:817) [netty-handler-4.1.74.Final.jar:4.1.74.Final]\n\tat io.netty.handler.ssl.SslContextBuilder.build(SslContextBuilder.java:611) [netty-handler-4.1.74.Final.jar:4.1.74.Final]\n...\n22-02-15 09:44:11,092 D [Thread-0                  JdkSslContext                    97] Default protocols (JDK): [TLSv1.3, TLSv1.2] \"><pre class=\"notranslate\"><code class=\"notranslate\">22-02-15 09:44:10,576 D [Thread-0                  InternalThreadLocalMap           89] -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096\n22-02-15 09:44:10,607 D [Thread-0                  NativeLibraryLoader              78] -Dio.netty.native.workdir: C:\\Windows\\TEMP (io.netty.tmpdir)\n22-02-15 09:44:10,607 D [Thread-0                  NativeLibraryLoader              83] -Dio.netty.native.deleteLibAfterLoading: true\n22-02-15 09:44:10,607 D [Thread-0                  NativeLibraryLoader              87] -Dio.netty.native.tryPatchShadedId: true\n22-02-15 09:44:10,607 D [Thread-0                  NativeLibraryLoader              91] -Dio.netty.native.detectNativeLibraryDuplicates: true\n22-02-15 09:44:10,607 D [Thread-0                  OpenSsl                         149] Failed to load netty-tcnative; OpenSslEngine will be unavailable, unless the application has already loaded the symbols by some other means. See https://netty.io/wiki/forked-tomcat-native.html for more information.\njava.lang.IllegalArgumentException: Failed to load any of the given libraries: [netty_tcnative_windows_x86_64, netty_tcnative_x86_64, netty_tcnative]\n\tat io.netty.util.internal.NativeLibraryLoader.loadFirstAvailable(NativeLibraryLoader.java:114) ~[netty-common-4.1.74.Final.jar:4.1.74.Final]\n\tat io.netty.handler.ssl.OpenSsl.loadTcNative(OpenSsl.java:705) ~[netty-handler-4.1.74.Final.jar:4.1.74.Final]\n\tat io.netty.handler.ssl.OpenSsl.&lt;clinit&gt;(OpenSsl.java:146) [netty-handler-4.1.74.Final.jar:4.1.74.Final]\n\tat io.netty.handler.ssl.SslContext.defaultProvider(SslContext.java:124) [netty-handler-4.1.74.Final.jar:4.1.74.Final]\n\tat io.netty.handler.ssl.SslContext.defaultClientProvider(SslContext.java:120) [netty-handler-4.1.74.Final.jar:4.1.74.Final]\n\tat io.netty.handler.ssl.SslContext.newClientContextInternal(SslContext.java:817) [netty-handler-4.1.74.Final.jar:4.1.74.Final]\n\tat io.netty.handler.ssl.SslContextBuilder.build(SslContextBuilder.java:611) [netty-handler-4.1.74.Final.jar:4.1.74.Final]\n...\n22-02-15 09:44:11,092 D [Thread-0                  JdkSslContext                    97] Default protocols (JDK): [TLSv1.3, TLSv1.2] \n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.74.Final without tcnative in the classpath</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"11.0.11\" 2021-04-20<br>\nOpenJDK Runtime Environment AdoptOpenJDK-11.0.11+9 (build 11.0.11+9)<br>\nOpenJDK 64-Bit Server VM AdoptOpenJDK-11.0.11+9 (build 11.0.11+9, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows Server 2019 Datacenter<br>\nVersion 1809<br>\nOS build 17763.678</p>",
                "resourcePath": "/netty/netty/issues/12101",
                "createdAt": "2022-02-15T12:27:50Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow more permissive char set in SNI headers",
        "url": "https://github.com/netty/netty/pull/12147",
        "resourcePath": "/netty/netty/pull/12147",
        "createdAt": "2022-03-07T22:13:43Z",
        "number": 12147,
        "mergeCommit": {
          "oid": "673849d13dc71c2f165c5b042d72afe206f1edbc",
          "message": "Allow more permissive char set in SNI headers (#12147)\n\n\r\nMotivation:\r\n\r\nAs explained in issue #11819, certain chars such as \":\" in the SNI header cause the netty pipeline to blow up.\r\n\r\nModifications:\r\n\r\nBy converting strings to byte arrays first, we can allow chars like \":\"\r\n\r\nResult:\r\n\r\nNetty will have a more permissive char set allowed for SNI headers.\r\n\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>\r\nCo-authored-by: Aayush Atharva <hyperx.pro@outlook.com>",
          "commitUrl": "https://github.com/netty/netty/commit/673849d13dc71c2f165c5b042d72afe206f1edbc",
          "parents": {
            "nodes": [
              {
                "oid": "1a84c738497887387ff60d70d49632391a015346",
                "message": "AdoptOpenJDK has moved to different site (#12148)\n\nMotivation:\r\nAdoptOpenJDK has moved to https://adoptium.net/. So we should point OpenJDK URL to the new site.\r\n\r\nModification:\r\nChanged https://adoptopenjdk.net to https://adoptium.net/\r\n\r\nResult:\r\nLatest OpenJDK Adopt site"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/Java8SslUtils.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c840EjWy2gAoZWY2M2QzY2NmMDc0ZTJlNGM3YzQzODAwZWNlZTRkNWYyYTc4NDViNw",
                "url": "https://github.com/netty/netty/pull/12147/commits/ef63d3ccf074e2e4c7c43800ecee4d5f2a7845b7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11819,
                "url": "https://github.com/netty/netty/issues/11819",
                "title": "It would be good to allow configuring permissive SNI headers",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The user of netty can configure the ssl pipeline to both send and accept SNI headers that may not technically be legal. This is useful for proxies that want to specify not only the host, but also the port, eg <code class=\"notranslate\">foo.com:1234</code>.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Setting a sni header with a <code class=\"notranslate\">:</code> blows up the netty pipeline.</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"1.8.0_275\"</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin 20.6.0 Darwin Kernel Version 20.6.0</p>\n<p dir=\"auto\">This is related to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"833321334\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/11091\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/11091/hovercard\" href=\"https://github.com/netty/netty/pull/11091\">#11091</a>.</p>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/roanta/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/roanta\">@roanta</a>.</p>",
                "resourcePath": "/netty/netty/issues/11819",
                "createdAt": "2021-11-05T19:22:10Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix race when handling delegating tasks in ReferenceCountedOpenSslEngine",
        "url": "https://github.com/netty/netty/pull/12149",
        "resourcePath": "/netty/netty/pull/12149",
        "createdAt": "2022-03-08T10:50:39Z",
        "number": 12149,
        "mergeCommit": {
          "oid": "1df38d2c7be98e11fa13c7ee52aadbfbea7669e6",
          "message": "Fix race when handling delegating tasks in ReferenceCountedOpenSslEngine (#12149)\n\nMotivation:\r\n\r\nDue incorrect handling of delegating tasks in ReferenceCountedOpenSslEngine it was possible to observe handshake timeouts / failures.\r\n\r\nModification:\r\n\r\n- Only reset needsTask variable after we actually ran the task.\r\n- Add missing synchronized as otherwise we might end up calling native code concurrently which is not safe.\r\n- Change how we excute delegating tasks in our SSLEngineTest. This change would result in timeouts / failures before the fix.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12139",
          "commitUrl": "https://github.com/netty/netty/commit/1df38d2c7be98e11fa13c7ee52aadbfbea7669e6",
          "parents": {
            "nodes": [
              {
                "oid": "673849d13dc71c2f165c5b042d72afe206f1edbc",
                "message": "Allow more permissive char set in SNI headers (#12147)\n\n\r\nMotivation:\r\n\r\nAs explained in issue #11819, certain chars such as \":\" in the SNI header cause the netty pipeline to blow up.\r\n\r\nModifications:\r\n\r\nBy converting strings to byte arrays first, we can allow chars like \":\"\r\n\r\nResult:\r\n\r\nNetty will have a more permissive char set allowed for SNI headers.\r\n\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>\r\nCo-authored-by: Aayush Atharva <hyperx.pro@outlook.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/SSLEngineTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c840GQ442gAoNTBkODA3NjZkNWYwYTQzZmNjMDJhZWE2ZWUxYjJmMGIxMDhlMDFlYQ",
                "url": "https://github.com/netty/netty/pull/12149/commits/50d80766d5f0a43fcc02aea6ee1b2f0b108e01ea"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12139,
                "url": "https://github.com/netty/netty/issues/12139",
                "title": "Delegated tasks issue in ReferenceCountedOpenSslEngine",
                "bodyHTML": "<p dir=\"auto\">Sometimes the OpenSSL engine fails to properly handle delegated tasks.<br>\nThe cause of problems is probably a thread-safety issue in the <code class=\"notranslate\">io.netty.handler.ssl.ReferenceCountedOpenSslEngine</code> class.</p>\n<p dir=\"auto\">Executing the delegated tasks in a blocking manner seems to work correctly.</p>\n<p dir=\"auto\">If the tasks are executed in external threads the processing sometimes fails. The handshake \"hangs\" in the <code class=\"notranslate\">NEED_TASK</code> state.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">All delegated tasks are properly finished and the handshake status in the <code class=\"notranslate\">SSLEngine</code> gets value different from the <code class=\"notranslate\">NEED_TASK</code>.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Sometimes the <code class=\"notranslate\">ReferenceCountedOpenSslEngine</code> hangs in the <code class=\"notranslate\">NEED_TASK</code> handshake status.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Repeat the reproducer runs until it hits the issue:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"i=1; while mvn test; do echo &quot;Starting build $((++i))&quot;; done; echo &quot;Failed $i&quot;\"><pre class=\"notranslate\">i=1<span class=\"pl-k\">;</span> <span class=\"pl-k\">while</span> mvn <span class=\"pl-c1\">test</span><span class=\"pl-k\">;</span> <span class=\"pl-k\">do</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Starting build <span class=\"pl-s\"><span class=\"pl-pds\">$((</span><span class=\"pl-k\">++</span>i<span class=\"pl-pds\">))</span></span><span class=\"pl-pds\">\"</span></span><span class=\"pl-k\">;</span> <span class=\"pl-k\">done</span><span class=\"pl-k\">;</span> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed <span class=\"pl-smi\">$i</span><span class=\"pl-pds\">\"</span></span></pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">The reproducer is in this branch:<br>\n<a href=\"https://github.com/kwart/test-app/tree/netty-tcnative-NEED_TASK-issue\">https://github.com/kwart/test-app/tree/netty-tcnative-NEED_TASK-issue</a></p>\n<p dir=\"auto\">The main class <code class=\"notranslate\">App.java</code> can be switched from using the non-blocking task executor to blocking by:</p>\n<div class=\"highlight highlight-source-diff notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"-        app.run(false);\n+        app.run(true);\"><pre class=\"notranslate\"><span class=\"pl-md\"><span class=\"pl-md\">-</span>        app.run(false);</span>\n<span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span>        app.run(true);</span></pre></div>\n<p dir=\"auto\">In this case, we didn't hit see the problem occur.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">Tested with the latest available:</p>\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        &lt;dependency&gt;\n            &lt;groupId&gt;io.netty&lt;/groupId&gt;\n            &lt;artifactId&gt;netty-tcnative-boringssl-static&lt;/artifactId&gt;\n            &lt;version&gt;2.0.50.Final&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.netty&lt;/groupId&gt;\n            &lt;artifactId&gt;netty-handler&lt;/artifactId&gt;\n            &lt;version&gt;4.1.74.Final&lt;/version&gt;\n        &lt;/dependency&gt;\"><pre class=\"notranslate\">        &lt;<span class=\"pl-ent\">dependency</span>&gt;\n            &lt;<span class=\"pl-ent\">groupId</span>&gt;io.netty&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n            &lt;<span class=\"pl-ent\">artifactId</span>&gt;netty-tcnative-boringssl-static&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n            &lt;<span class=\"pl-ent\">version</span>&gt;2.0.50.Final&lt;/<span class=\"pl-ent\">version</span>&gt;\n        &lt;/<span class=\"pl-ent\">dependency</span>&gt;\n        &lt;<span class=\"pl-ent\">dependency</span>&gt;\n            &lt;<span class=\"pl-ent\">groupId</span>&gt;io.netty&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n            &lt;<span class=\"pl-ent\">artifactId</span>&gt;netty-handler&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n            &lt;<span class=\"pl-ent\">version</span>&gt;4.1.74.Final&lt;/<span class=\"pl-ent\">version</span>&gt;\n        &lt;/<span class=\"pl-ent\">dependency</span>&gt;</pre></div>\n<p dir=\"auto\">We hit the problem in the older netty versions too.</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">We tested this on Linux OpenJDK versions 8, 11, 17. Most often we hit the problem on Java 11, less often on 8, and sometimes<br>\non 17.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ j8\nopenjdk version &quot;1.8.0_312&quot;\nOpenJDK Runtime Environment (Zulu 8.58.0.13-CA-linux64) (build 1.8.0_312-b07)\nOpenJDK 64-Bit Server VM (Zulu 8.58.0.13-CA-linux64) (build 25.312-b07, mixed mode)\n$ j11\nopenjdk version &quot;11.0.13&quot; 2021-10-19 LTS\nOpenJDK Runtime Environment Zulu11.52+13-CA (build 11.0.13+8-LTS)\nOpenJDK 64-Bit Server VM Zulu11.52+13-CA (build 11.0.13+8-LTS, mixed mode)\n$ j17\nopenjdk version &quot;17&quot; 2021-09-14 LTS\nOpenJDK Runtime Environment Zulu17.28+13-CA (build 17+35-LTS)\nOpenJDK 64-Bit Server VM Zulu17.28+13-CA (build 17+35-LTS, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">$ j8\nopenjdk version \"1.8.0_312\"\nOpenJDK Runtime Environment (Zulu 8.58.0.13-CA-linux64) (build 1.8.0_312-b07)\nOpenJDK 64-Bit Server VM (Zulu 8.58.0.13-CA-linux64) (build 25.312-b07, mixed mode)\n$ j11\nopenjdk version \"11.0.13\" 2021-10-19 LTS\nOpenJDK Runtime Environment Zulu11.52+13-CA (build 11.0.13+8-LTS)\nOpenJDK 64-Bit Server VM Zulu11.52+13-CA (build 11.0.13+8-LTS, mixed mode)\n$ j17\nopenjdk version \"17\" 2021-09-14 LTS\nOpenJDK Runtime Environment Zulu17.28+13-CA (build 17+35-LTS)\nOpenJDK 64-Bit Server VM Zulu17.28+13-CA (build 17+35-LTS, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Ubuntu 20.04</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ uname -a\nLinux kwart-office 5.4.0-100-generic #113-Ubuntu SMP Thu Feb 3 18:43:29 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\"><pre class=\"notranslate\">$ uname -a\nLinux kwart-office 5.4.0-100-generic <span class=\"pl-c\"><span class=\"pl-c\">#</span>113-Ubuntu SMP Thu Feb 3 18:43:29 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</span></pre></div>",
                "resourcePath": "/netty/netty/issues/12139",
                "createdAt": "2022-03-02T12:27:31Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Update LengthFieldBasedFrameDecoder.java",
        "url": "https://github.com/netty/netty/pull/12172",
        "resourcePath": "/netty/netty/pull/12172",
        "createdAt": "2022-03-15T09:45:21Z",
        "number": 12172,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/LengthFieldBasedFrameDecoder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c840cyJ32gAoNjBhNDg3OTA2MTdmNTc5ODI1NTczMWFjODhhN2U0M2VjMDNjZjM2Mw",
                "url": "https://github.com/netty/netty/pull/12172/commits/60a48790617f5798255731ac88a7e43ec03cf363"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12171,
                "url": "https://github.com/netty/netty/issues/12171",
                "title": "LengthFieldBasedFrameDecoder Class Can be optimized",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">LengthFieldBasedFrameDecoder . decode(ChannelHandlerContext ctx, ByteBuf in) method\uff0cCan be optimized - Can we keep frameLengthInt in instance variable? so , When there is not enough data in the buffer, the length of the data frame does not need to be recalculated at the next decoding\u3002code:</p>\n<p dir=\"auto\">// LengthFieldBasedFrameDecoder class<br>\nprotected Object decode(ChannelHandlerContext ctx, ByteBuf in) throws Exception {<br>\n... // check maxFrame<br>\nint frameLengthInt = (int) frameLength;<br>\nif (in.readableBytes() &lt; frameLengthInt) {  <strong>//  When there is not enough data in the buffer, The above code will be executed again, and I just need to wait for the buffer to contain enough data . In fact, we can save the frameLengthInt variable without having to</strong><br>\nreturn null;<br>\n}<br>\n... // extract frame<br>\n}</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">When there is not enough data in the buffer, the length of the data frame  recalculate at the next decoding</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.X</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Non-Required</p>",
                "resourcePath": "/netty/netty/issues/12171",
                "createdAt": "2022-03-15T01:05:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Length field based frame decoder can be optimized",
        "url": "https://github.com/netty/netty/pull/12173",
        "resourcePath": "/netty/netty/pull/12173",
        "createdAt": "2022-03-15T10:07:46Z",
        "number": 12173,
        "mergeCommit": {
          "oid": "824a0b803431c58bd8dfe25a30413d7ff9759e8f",
          "message": "Length field based frame decoder can be optimized (#12173)\n\nMotivation:\r\n\r\nLengthFieldBasedFrameDecoder.decode(ChannelHandlerContext ctx, ByteBuf in) methodcan be optimized -So we keep frameLengthInt in instance variable to avoid unnecessary calculations .\r\n\r\nModification:\r\n\r\nAdd an instance variable to avoid unnecessary calculations\r\n\r\nResult:\r\n\r\nFixes #12171. \r\n\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/824a0b803431c58bd8dfe25a30413d7ff9759e8f",
          "parents": {
            "nodes": [
              {
                "oid": "30855c71c843db6d3d0c769d2547b948f61500a2",
                "message": "Removed unused imports and fix some tests (#12167)\n\nModification:\r\nRemoved unused imports and fix some tests\r\n\r\nResult:\r\nCleanup and more correct tests"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/LengthFieldBasedFrameDecoder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c840c4h62gAoMGMwYzEyMDY1YmU5ODNiZGEyMGI0NDUzN2UzZWFhMzg3MjA2ZjNlNA",
                "url": "https://github.com/netty/netty/pull/12173/commits/0c0c12065be983bda20b44537e3eaa387206f3e4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12171,
                "url": "https://github.com/netty/netty/issues/12171",
                "title": "LengthFieldBasedFrameDecoder Class Can be optimized",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">LengthFieldBasedFrameDecoder . decode(ChannelHandlerContext ctx, ByteBuf in) method\uff0cCan be optimized - Can we keep frameLengthInt in instance variable? so , When there is not enough data in the buffer, the length of the data frame does not need to be recalculated at the next decoding\u3002code:</p>\n<p dir=\"auto\">// LengthFieldBasedFrameDecoder class<br>\nprotected Object decode(ChannelHandlerContext ctx, ByteBuf in) throws Exception {<br>\n... // check maxFrame<br>\nint frameLengthInt = (int) frameLength;<br>\nif (in.readableBytes() &lt; frameLengthInt) {  <strong>//  When there is not enough data in the buffer, The above code will be executed again, and I just need to wait for the buffer to contain enough data . In fact, we can save the frameLengthInt variable without having to</strong><br>\nreturn null;<br>\n}<br>\n... // extract frame<br>\n}</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">When there is not enough data in the buffer, the length of the data frame  recalculate at the next decoding</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.X</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Non-Required</p>",
                "resourcePath": "/netty/netty/issues/12171",
                "createdAt": "2022-03-15T01:05:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Give netty-all an automatic module name",
        "url": "https://github.com/netty/netty/pull/12188",
        "resourcePath": "/netty/netty/pull/12188",
        "createdAt": "2022-03-17T01:11:40Z",
        "number": 12188,
        "mergeCommit": {
          "oid": "40382fb1af275e931a765c5001f4b6bd8061991e",
          "message": "Give netty-all an automatic module name (#12188)\n\nMotivation\r\nThe netty-all module still produces an empty jar file, so it causes trouble for modular projects if this has no module name.\r\n\r\nModification:\r\nAdd an automatic module name for netty-all.\r\n\r\nResult:\r\nThe netty-all module can now be used in a modula project, under the `io.netty.all` name.\r\n\r\nFixes #12175",
          "commitUrl": "https://github.com/netty/netty/commit/40382fb1af275e931a765c5001f4b6bd8061991e",
          "parents": {
            "nodes": [
              {
                "oid": "5cda0444187c6f7c54b03a97b1956c44a2f24ccc",
                "message": "Use windows-2019 in workflows (#12183)\n\nMotivation:\r\n\r\nwindows-2016 was removed so we need to use the next lowest which is 2019\r\n\r\nModifications:\r\n\r\n- Use windows-2019\r\n\r\nResult:\r\n\r\nBuilds on windows work again"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "all/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c840kfxP2gAoM2ZkODdjYzBlZjNiYTExYzA1ODFlOGI3NWUzMzllNTg2ZjZiZjhlNQ",
                "url": "https://github.com/netty/netty/pull/12188/commits/3fd87cc0ef3ba11c0581e8b75e339e586f6bf8e5"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12175,
                "url": "https://github.com/netty/netty/issues/12175",
                "title": "`io.netty:netty-all:4.1.75.Final` declares an empty automatic module name",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">If the <code class=\"notranslate\">Automatic-Module-Name</code> manifest property is present, it should be set to a meaningful value. This attribute is defined in the manifest for <code class=\"notranslate\">io.netty:netty-all:4.1.75.Final</code></p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">In <code class=\"notranslate\">io.netty:netty-all:4.1.75.Final</code> (and earlier versions), this is declared but not set. This causes any toolchain that attempts to use java modules to get upset.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"jar xvf ~/Downloads/netty-all-4.1.75.Final.jar META-INF/MANIFEST.MF\nhead META-INF/MANIFEST.MF\"><pre class=\"notranslate\">jar xvf <span class=\"pl-k\">~</span>/Downloads/netty-all-4.1.75.Final.jar META-INF/MANIFEST.MF\nhead META-INF/MANIFEST.MF</pre></div>\n<p dir=\"auto\">The output is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Manifest-Version: 1.0\nImplementation-Title: Netty/All-in-One\nBundle-Description: Netty is an asynchronous event-driven network appl\n ication framework for    rapid development of maintainable high perfo\n rmance protocol servers and    clients.\nAutomatic-Module-Name: \nBundle-License: https://www.apache.org/licenses/LICENSE-2.0\nBundle-SymbolicName: io.netty.all\nImplementation-Version: 4.1.75.Final\nBuilt-By: norman\"><pre class=\"notranslate\"><code class=\"notranslate\">Manifest-Version: 1.0\nImplementation-Title: Netty/All-in-One\nBundle-Description: Netty is an asynchronous event-driven network appl\n ication framework for    rapid development of maintainable high perfo\n rmance protocol servers and    clients.\nAutomatic-Module-Name: \nBundle-License: https://www.apache.org/licenses/LICENSE-2.0\nBundle-SymbolicName: io.netty.all\nImplementation-Version: 4.1.75.Final\nBuilt-By: norman\n</code></pre></div>\n<p dir=\"auto\">The problematic thing is that <code class=\"notranslate\">Automatic-Module-Name</code> is declared but not set.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.75.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">9+</p>",
                "resourcePath": "/netty/netty/issues/12175",
                "createdAt": "2022-03-15T16:43:58Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow to construct ReadTimeoutException and WriteTimeoutException",
        "url": "https://github.com/netty/netty/pull/12234",
        "resourcePath": "/netty/netty/pull/12234",
        "createdAt": "2022-03-25T09:07:24Z",
        "number": 12234,
        "mergeCommit": {
          "oid": "6a4dafc9e72c71cad544cb74688b37e83a46ccca",
          "message": "Allow to construct ReadTimeoutException and WriteTimeoutException (#12234)\n\nMotivation:\r\n\r\nThe userr might want to add more details to the exception so we should allow to construct it\r\n\r\nModifications:\r\n\r\nAdd public constructors\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12218",
          "commitUrl": "https://github.com/netty/netty/commit/6a4dafc9e72c71cad544cb74688b37e83a46ccca",
          "parents": {
            "nodes": [
              {
                "oid": "06db4dc2c11aeee727225dc48b273af670300759",
                "message": "fix typos in doc (#12233)\n\nMotivation:\r\n\r\nfix typos in doc\r\n\r\nModification:\r\n\r\nfix typos in doc"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/timeout/ReadTimeoutException.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/timeout/TimeoutException.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/timeout/WriteTimeoutException.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c841APQQ2gAoZDI3ZWZkMmQ4YmU2NGQ1MjZiZWY0MTEyMzUzZGY1OWI5NTY0ODRmYg",
                "url": "https://github.com/netty/netty/pull/12234/commits/d27efd2d8be64d526bef4112353df59b956484fb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12218,
                "url": "https://github.com/netty/netty/issues/12218",
                "title": "More useful exception logging on ReadTimeoutHandler",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When ReadTimeoutHandler throws a ReadTimeoutException, it would be useful if the exception message shows the timeout value.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Currently, it does not include any useful information to the user:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"io.netty.handler.timeout.ReadTimeoutException: null\"><pre class=\"notranslate\"><code class=\"notranslate\">io.netty.handler.timeout.ReadTimeoutException: null\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Perform a long HTTP request over the timeout.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.72.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Java 17</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Mac OS</p>",
                "resourcePath": "/netty/netty/issues/12218",
                "createdAt": "2022-03-23T17:26:04Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Automatically use boringssl-static when compiling on Mac M1",
        "url": "https://github.com/netty/netty/pull/12256",
        "resourcePath": "/netty/netty/pull/12256",
        "createdAt": "2022-03-31T09:27:04Z",
        "number": 12256,
        "mergeCommit": {
          "oid": "19d74affb0bc88118d64737df10569ac41ae1804",
          "message": "Automatically use boringssl-static when compiling on Mac M1 (#12256)\n\nMotivation:\r\n\r\nAs we only publish netty-tcnative-boringssl-static for Mac M1 we need to ensure we activate the correct profile.\r\n\r\nModifications:\r\n\r\nReplace incorrect family value (osx) with correct one (mac)\r\n\r\nResult:\r\n\r\nBe able to compile on Mac M1 without the need to specify the profile manually.\r\nFixes https://github.com/netty/netty/issues/12251",
          "commitUrl": "https://github.com/netty/netty/commit/19d74affb0bc88118d64737df10569ac41ae1804",
          "parents": {
            "nodes": [
              {
                "oid": "d88e0bf3ff2cd6e9506ccb749b53bbeadb09555e",
                "message": "Fix function name miss-spelling (#12253)\n\nMotivation:\r\n\r\nWe did have a typo in the function name.\r\n\r\nModifications:\r\n\r\nFix function name\r\n\r\nResult:\r\n\r\nCleanup"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c841YgXq2gAoN2Y0MTQ0YTFlM2M4NzhkNWY2MGFmNDBkZjAzMGNhNjdkZDNjY2VmNg",
                "url": "https://github.com/netty/netty/pull/12256/commits/7f4144a1e3c878d5f60af40df030ca67dd3ccef6"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12251,
                "url": "https://github.com/netty/netty/issues/12251",
                "title": "Cannot resolve io.netty:netty-tcnative:2.0.51.Final on Mac M1",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Compile the netty project successfully</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Cannot resolve io.netty:netty-tcnative:2.0.51.Final error during compilation</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Clone the repo and compile branch 4.1</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.76</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"11.0.11\" 2021-04-20<br>\nOpenJDK Runtime Environment AdoptOpenJDK-11.0.11+9 (build 11.0.11+9)<br>\nOpenJDK 64-Bit Server VM AdoptOpenJDK-11.0.11+9 (build 11.0.11+9, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin ip-1.xxx.internal 21.1.0 Darwin Kernel Version 21.1.0: Wed Oct 13 17:33:24 PDT 2021; root:xnu-8019.41.5~1/RELEASE_ARM64_T8101 arm64</p>",
                "resourcePath": "/netty/netty/issues/12251",
                "createdAt": "2022-03-30T11:46:31Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow explicit choice of internet family",
        "url": "https://github.com/netty/netty/pull/12270",
        "resourcePath": "/netty/netty/pull/12270",
        "createdAt": "2022-04-03T01:05:18Z",
        "number": 12270,
        "mergeCommit": {
          "oid": "960121db545f2d8aec7a87da8c54a9645fde266c",
          "message": "Allow explicit choice of internet family (#12270)\n\nMotivation:\r\n\r\nNetty should be able to bind to specific protocol family only (IPv4, IPv6) if requested by the caller.\r\n\r\nModification:\r\n\r\nAdded `InternetProtocolFamily` to `SocketChannel` constructors.\r\n\r\nResult:\r\n\r\nFixes #12269",
          "commitUrl": "https://github.com/netty/netty/commit/960121db545f2d8aec7a87da8c54a9645fde266c",
          "parents": {
            "nodes": [
              {
                "oid": "afbf8d26b17548896b55d4edbcdcc4f8bb625a7d",
                "message": "Upgrade to `Brotli4j` 1.7.1 and use new `ByteBuf` API (#12264)\n\nMotivation:\r\n`Brotli4j` v1.7.1 is released with the new `ByteBuf` API. It uses `ByteBuf` instead of `byte` array to minimize garbage creation and memory copy.\r\n\r\nModification:\r\nBumped to the `Brotli4j` to v1.7.1 and used new API for Encoder\r\n\r\nResult:\r\nNew update and better performance\r\n\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollServerSocketChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollSocketChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/LinuxSocket.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/BsdSocket.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDatagramChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueSocketChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/src/main/java/io/netty/channel/unix/Socket.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/socket/nio/NioServerSocketChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/socket/nio/NioSocketChannel.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c841iQS-2gAoOWY1NmQzZjFkMzRkMjM0NTFiMmVmZDg1ZWU4MTNmMTU3N2MzNGUyZg",
                "url": "https://github.com/netty/netty/pull/12270/commits/9f56d3f1d34d23451b2efd85ee813f1577c34e2f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12269,
                "url": "https://github.com/netty/netty/issues/12269",
                "title": "Allow explicitly choosing protocol family",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Netty should be able to bind to specific protocol family only (IPv4, IPv6) if requested by the caller.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Netty uses <code class=\"notranslate\">java.net.preferIPv4Stack</code> JVM property to determine whether to bind to IPv4 or IPv6 (possibly IPv6+IPv4 given by settings of IPV6_V6ONLY socket option).</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\t\t\t\t\tServerBootstrap b = new ServerBootstrap();\n\t\t\t\t\tb.group(bossGroup, workerGroup)\n\t\t\t\t\t\t\t.channelFactory(configAdapter.getServerChannel(address))\n\t\t\t\t\t\t\t.childHandler(channelInitializer).option(ChannelOption.SO_BACKLOG, Integer.MAX_VALUE)\n\t\t\t\t\t\t\t.childOption(ChannelOption.SO_KEEPALIVE, true);\n\n\t\t\t\t\tbindFuture = b.bind(address);\"><pre class=\"notranslate\"><code class=\"notranslate\">\t\t\t\t\tServerBootstrap b = new ServerBootstrap();\n\t\t\t\t\tb.group(bossGroup, workerGroup)\n\t\t\t\t\t\t\t.channelFactory(configAdapter.getServerChannel(address))\n\t\t\t\t\t\t\t.childHandler(channelInitializer).option(ChannelOption.SO_BACKLOG, Integer.MAX_VALUE)\n\t\t\t\t\t\t\t.childOption(ChannelOption.SO_KEEPALIVE, true);\n\n\t\t\t\t\tbindFuture = b.bind(address);\n</code></pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\"><a href=\"https://github.com/kvr000/netty-specific-family\">https://github.com/kvr000/netty-specific-family</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.75.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"18-ea\" 2022-03-15<br>\nOpenJDK Runtime Environment (build 18-ea+15-Ubuntu-4)<br>\nOpenJDK 64-Bit Server VM (build 18-ea+15-Ubuntu-4, mixed mode, sharing)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux ratteburg 5.13.0-37-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2153915\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/42\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/42/hovercard\" href=\"https://github.com/netty/netty/pull/42\">#42</a>-Ubuntu SMP Tue Mar 15 14:34:06 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</p>\n<h3 dir=\"auto\">Solution</h3>\n<p dir=\"auto\">Add <code class=\"notranslate\">InternetProtocolFamily</code> parameter to Netty <code class=\"notranslate\">SocketChannel</code> classes, so it can construct appropriate socket handler with correct family.  JDK supports specifying family since JDK 15, for Epoll and Kqueue, those need to be added.  Suggestion provided in Pull Request and confirmed as working (so far without automated tests though).</p>\n<p dir=\"auto\">Pull request: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1190778646\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/12270\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/12270/hovercard\" href=\"https://github.com/netty/netty/pull/12270\">#12270</a></p>",
                "resourcePath": "/netty/netty/issues/12269",
                "createdAt": "2022-04-03T01:03:59Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Correctly encode result even if no timeout is used",
        "url": "https://github.com/netty/netty/pull/12283",
        "resourcePath": "/netty/netty/pull/12283",
        "createdAt": "2022-04-05T08:57:59Z",
        "number": 12283,
        "mergeCommit": {
          "oid": "005a6a4e7b3632d6719640eac621690d3268fd1f",
          "message": "Correctly encode result even if no timeout is used (#12283)\n\n\r\nMotivation:\r\n\r\n86004b7303621784f7ec8850323d9a707f17f9f8 did introduce a change to reduc the syscalls but missed to correctly encode the result in the case of no timeout used.\r\n\r\nModifications:\r\n\r\nCorrectly shift the result\r\n\r\nResult:\r\n\r\nCorrectly behaviour even when no timeout is used.  Fixes #12280",
          "commitUrl": "https://github.com/netty/netty/commit/005a6a4e7b3632d6719640eac621690d3268fd1f",
          "parents": {
            "nodes": [
              {
                "oid": "5e23212172a761c416ec682c55f462852c381e92",
                "message": "Break loop early if possible (#12254)\n\nMotivation:\r\n\r\nThere is no need to finish inner loop when condensedInUse[i] setting as true.\r\n\r\nResult:\r\n\r\nSmall optimization"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/Native.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollEventLoopTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c841o_zw2gAoMzUyYzkwNGQyZTYyOTMxYzVhODE5NGEzNzYwNWQxNGRlYjFlYmY2Mg",
                "url": "https://github.com/netty/netty/pull/12283/commits/352c904d2e62931c5a8194a37605d14deb1ebf62"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12280,
                "url": "https://github.com/netty/netty/issues/12280",
                "title": "Native#epollWait(FileDescriptor, EpollEventArray, FileDescriptor, int, int, long) returns different types of result",
                "bodyHTML": "<p dir=\"auto\">Some of Reactor Netty tests fail with the change <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/netty/netty/commit/86004b7303621784f7ec8850323d9a707f17f9f8/hovercard\" href=\"https://github.com/netty/netty/commit/86004b7303621784f7ec8850323d9a707f17f9f8\"><tt>86004b7</tt></a></p>\n<p dir=\"auto\">I think that this is because the method below returns different types of result </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/34ae67a5b1fb1f119c1ed509f576c205d1e7fd78/transport-classes-epoll/src/main/java/io/netty/channel/epoll/Native.java#L170\">netty/transport-classes-epoll/src/main/java/io/netty/channel/epoll/Native.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 170\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/34ae67a5b1fb1f119c1ed509f576c205d1e7fd78\">34ae67a</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L170\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"170\"></td>\n          <td id=\"LC170\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">long</span> <span class=\"pl-en\">epollWait</span>(<span class=\"pl-smi\">FileDescriptor</span> <span class=\"pl-s1\">epollFd</span>, <span class=\"pl-smi\">EpollEventArray</span> <span class=\"pl-s1\">events</span>, <span class=\"pl-smi\">FileDescriptor</span> <span class=\"pl-s1\">timerFd</span>, </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">This one does not require <code class=\"notranslate\">unpack</code> of the result<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/34ae67a5b1fb1f119c1ed509f576c205d1e7fd78/transport-classes-epoll/src/main/java/io/netty/channel/epoll/Native.java#L174\">netty/transport-classes-epoll/src/main/java/io/netty/channel/epoll/Native.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 174\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/34ae67a5b1fb1f119c1ed509f576c205d1e7fd78\">34ae67a</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L174\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"174\"></td>\n          <td id=\"LC174\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">return</span> <span class=\"pl-en\">epollWait</span>(<span class=\"pl-s1\">epollFd</span>, <span class=\"pl-s1\">events</span>, <span class=\"pl-c1\">0</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">While this one requires  <code class=\"notranslate\">unpack</code> of the result<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/34ae67a5b1fb1f119c1ed509f576c205d1e7fd78/transport-classes-epoll/src/main/java/io/netty/channel/epoll/Native.java#L181\">netty/transport-classes-epoll/src/main/java/io/netty/channel/epoll/Native.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 181\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/34ae67a5b1fb1f119c1ed509f576c205d1e7fd78\">34ae67a</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L181\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"181\"></td>\n          <td id=\"LC181\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-smi\">long</span> <span class=\"pl-s1\">result</span> = <span class=\"pl-en\">epollWait0</span>(<span class=\"pl-s1\">epollFd</span>.<span class=\"pl-en\">intValue</span>(), <span class=\"pl-s1\">events</span>.<span class=\"pl-en\">memoryAddress</span>(), <span class=\"pl-s1\">events</span>.<span class=\"pl-en\">length</span>(), <span class=\"pl-s1\">timerFd</span>.<span class=\"pl-en\">intValue</span>(), </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">This method is used in the code below where it always performs <code class=\"notranslate\">unpack</code> and this leads to the problems that I observe  </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/34ae67a5b1fb1f119c1ed509f576c205d1e7fd78/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoop.java#L354-L357\">netty/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoop.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 354 to 357\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/34ae67a5b1fb1f119c1ed509f576c205d1e7fd78\">34ae67a</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L354\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"354\"></td>\n          <td id=\"LC354\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-smi\">long</span> <span class=\"pl-s1\">result</span> = <span class=\"pl-en\">epollWait</span>(<span class=\"pl-s1\">curDeadlineNanos</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L355\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"355\"></td>\n          <td id=\"LC355\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">// The result contains the actual return value and if a timer was used or not.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L356\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"356\"></td>\n          <td id=\"LC356\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">// We need to \"unpack\" using the helper methods exposed in Native.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L357\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"357\"></td>\n          <td id=\"LC357\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-s1\">strategy</span> = <span class=\"pl-smi\">Native</span>.<span class=\"pl-en\">epollReady</span>(<span class=\"pl-s1\">result</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Native#epollWait(FileDescriptor, EpollEventArray, FileDescriptor, int, int, long) returns same types of result</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Native#epollWait(FileDescriptor, EpollEventArray, FileDescriptor, int, int, long) returns different types of result</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Unfortunately I'm unable to extract an example with vanilla Netty</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">v4.1.76.Final-SNAPSHOT</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Distribution: temurin<br>\nVersion: 8.0.322+6</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Ubuntu 20.04</p>",
                "resourcePath": "/netty/netty/issues/12280",
                "createdAt": "2022-04-05T06:56:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Don't call strdup on packagePrefix (#12273)",
        "url": "https://github.com/netty/netty/pull/12322",
        "resourcePath": "/netty/netty/pull/12322",
        "createdAt": "2022-04-20T17:55:10Z",
        "number": 12322,
        "mergeCommit": {
          "oid": "0d653f08cd108a3ba6cf76d9fc052b8141ea3196",
          "message": "Don't call strdup on packagePrefix. (#12273) (#12322)\n\nMotivation:\r\n\r\nWe should improve must compat by not calling strdup.\r\n\r\nMotifications:\r\n\r\n- Update jni-util version and update code for changes\r\n- Adjust CFLAGS\r\n\r\nResult:\r\nImproves musl compatibility and slightly improves efficiency. Fixes #11701.\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>\r\n\r\nCo-authored-by: Alex Xu <351006+Hello71@users.noreply.github.com>",
          "commitUrl": "https://github.com/netty/netty/commit/0d653f08cd108a3ba6cf76d9fc052b8141ea3196",
          "parents": {
            "nodes": [
              {
                "oid": "eba838104474ae7350ab7e237d395552e200c178",
                "message": "Enable debugging of asynchronous tasks in Intellij (#12316) (#12319)\n\n\r\nMotivation:\r\nEvented systems like Netty can be much harder to debug than sequential and blocking code.\r\nFortunately, with a few strategically placed hints, we can significantly improve the tooling support.\r\n\r\nModification:\r\nAdd a dependency on the JetBrains annotations, and use the `Schedule` and `Execute` annotations to tell the Intellij IDEA debugger how our event loops and executors handle asynchronous task execution.\r\nBasically, we tell it where tasks are scheduled for asynchronous execution, and we tell it where this execution is picked up.\r\n\r\nResult:\r\nThe Intellij IDEA debugger can then bridge the schedule and execute points, and present a unified, or spliced stack trace.\r\nThis way, we are able to see who scheduled what tasks, and why.\r\n\r\nCo-authored-by: Chris Vest <christianvest_hansen@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns-native-macos/src/main/c/netty_resolver_dns_macos.c"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/c/netty_epoll_native.c"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/src/main/c/netty_kqueue_native.c"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c842giI22gAoNjVmMWE4ZTgwZTdjNDNlYjg4YjI4ZTg4OWRjMmEwNzgyYzBkNmFhNw",
                "url": "https://github.com/netty/netty/pull/12322/commits/65f1a8e80e7c43eb88b28e889dc2a0782c0d6aa7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11701,
                "url": "https://github.com/netty/netty/issues/11701",
                "title": "Throwing an exception in case glibc is missing instead of segfaulting the JVM",
                "bodyHTML": "<p dir=\"auto\">It seems Netty's native support depends on glibc (btw is this documented?).<br>\nWhen glibc is missing (for example using vanilla Alpine), the JVM could end up with a crash (<code class=\"notranslate\">SIGSEGV</code>), see details in this issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"996663427\" data-permission-text=\"Title is private\" data-url=\"https://github.com/micrometer-metrics/micrometer/issues/2776\" data-hovercard-type=\"issue\" data-hovercard-url=\"/micrometer-metrics/micrometer/issues/2776/hovercard\" href=\"https://github.com/micrometer-metrics/micrometer/issues/2776\">micrometer-metrics/micrometer#2776</a></p>\n<p dir=\"auto\">It also seems that <code class=\"notranslate\">Epoll.isAvailable()</code> returns <code class=\"notranslate\">true</code> even if glibc is missing.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Throwing an exception</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">JVM crash</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Using Netty native with an environment that does not have glibc, e.g.: vanilla Alpine</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">This seems to be a known issue, please let me know if you really need a reproducer.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\"><code class=\"notranslate\">4.1.68</code> (latest)</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Latest 11:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" \u276f docker run --rm 'azul/zulu-openjdk-alpine:11-jre' 'sh' '-c' 'java --version'\nopenjdk 11.0.12 2021-07-20 LTS\nOpenJDK Runtime Environment Zulu11.50+19-CA (build 11.0.12+7-LTS)\nOpenJDK 64-Bit Server VM Zulu11.50+19-CA (build 11.0.12+7-LTS, mixed mode)\"><pre class=\"notranslate\"> \u276f docker run --rm <span class=\"pl-s\"><span class=\"pl-pds\">'</span>azul/zulu-openjdk-alpine:11-jre<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>sh<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>-c<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>java --version<span class=\"pl-pds\">'</span></span>\nopenjdk 11.0.12 2021-07-20 LTS\nOpenJDK Runtime Environment Zulu11.50+19-CA (build 11.0.12+7-LTS)\nOpenJDK 64-Bit Server VM Zulu11.50+19-CA (build 11.0.12+7-LTS, mixed mode)</pre></div>\n<p dir=\"auto\">Or also latest 17:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" \u276f docker run --rm 'bellsoft/liberica-openjdk-alpine-musl:17' 'sh' '-c' 'java --version'\nopenjdk 17 2021-09-14 LTS\nOpenJDK Runtime Environment (build 17+35-LTS)\nOpenJDK 64-Bit Server VM (build 17+35-LTS, mixed mode)\"><pre class=\"notranslate\"> \u276f docker run --rm <span class=\"pl-s\"><span class=\"pl-pds\">'</span>bellsoft/liberica-openjdk-alpine-musl:17<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>sh<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>-c<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>java --version<span class=\"pl-pds\">'</span></span>\nopenjdk 17 2021-09-14 LTS\nOpenJDK Runtime Environment (build 17+35-LTS)\nOpenJDK 64-Bit Server VM (build 17+35-LTS, mixed mode)</pre></div>\n<p dir=\"auto\">I assume this is an issue in every JRE that is currently supported.</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Both images above have the same output:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" \u276f docker run --rm 'azul/zulu-openjdk-alpine:11-jre' 'sh' '-c' 'uname -a'\nLinux 1ee8d1090f14 5.10.47-linuxkit #1 SMP Sat Jul 3 21:51:47 UTC 2021 x86_64 Linux\"><pre class=\"notranslate\"> \u276f docker run --rm <span class=\"pl-s\"><span class=\"pl-pds\">'</span>azul/zulu-openjdk-alpine:11-jre<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>sh<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>-c<span class=\"pl-pds\">'</span></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>uname -a<span class=\"pl-pds\">'</span></span>\nLinux 1ee8d1090f14 5.10.47-linuxkit <span class=\"pl-c\"><span class=\"pl-c\">#</span>1 SMP Sat Jul 3 21:51:47 UTC 2021 x86_64 Linux</span></pre></div>\n<p dir=\"auto\">I assume this is an issue in every OS where glibc is missing.</p>",
                "resourcePath": "/netty/netty/issues/11701",
                "createdAt": "2021-09-22T02:15:46Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Check if epoll_pwait2 is implemented",
        "url": "https://github.com/netty/netty/pull/12345",
        "resourcePath": "/netty/netty/pull/12345",
        "createdAt": "2022-04-27T21:53:17Z",
        "number": 12345,
        "mergeCommit": {
          "oid": "626f94f069647f4e60a6863ca6540be1722e6e45",
          "message": "Check if epoll_pwait2 is implemented (#12345)\n\n\r\nMotivation:\r\n\r\nIts possible that while there is an epoll_pwait2(...) system call it is not implemented and so fail with ENOSYS.\r\n\r\nModifications:\r\n\r\nCheck if we can actually use epoll_pwait2(...) and it not fails due not implemented.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12343",
          "commitUrl": "https://github.com/netty/netty/commit/626f94f069647f4e60a6863ca6540be1722e6e45",
          "parents": {
            "nodes": [
              {
                "oid": "f17b5fe3cd7155a0281d081edabe223e131ba332",
                "message": "Fix typos (#12336)\n\nMotivation:\r\n\r\nThere are a few typos.\r\n\r\nModifications:\r\n\r\nFixed typos.\r\n\r\nResult:\r\n\r\nCleanup\r\n\r\nSigned-off-by: cuishuang <imcusg@gmail.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/c/netty_epoll_native.c"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84254No2gAoNzUwNTY1OTIzYWYzMjQ3ODkzNTY2ZmZiOTgxYjZlOTk3NDcyMzJlZg",
                "url": "https://github.com/netty/netty/pull/12345/commits/750565923af3247893566ffb981b6e99747232ef"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12343,
                "url": "https://github.com/netty/netty/issues/12343",
                "title": "\"epoll_wait(..) failed: Function not implemented\" on Ubuntu 22.04",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Running an application with some exposed endpoints, when you call an endpoint you get a response back.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Works fine in Ubuntu <code class=\"notranslate\">20.04</code>, but in Ubuntu <code class=\"notranslate\">22.04</code> - with any service and any endpoint - I get the following error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"io.netty.channel.epoll.EpollEventLoop : Unexpected exception in the selector loop.\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\nreactor.netty.http.client.HttpClient USER_EVENT: SslHandshakeCompletionEvent(io.netty.handler.ssl.SslHandshakeTimeoutException: handshake timed out after 10000ms)\"><pre class=\"notranslate\"><code class=\"notranslate\">io.netty.channel.epoll.EpollEventLoop : Unexpected exception in the selector loop.\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\nreactor.netty.http.client.HttpClient USER_EVENT: SslHandshakeCompletionEvent(io.netty.handler.ssl.SslHandshakeTimeoutException: handshake timed out after 10000ms)\n</code></pre></div>\n<details>\n  <summary>Stack trace</summary>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"2022-04-27 14:35:58.522 [] DEBUG 7800 --- [or-http-epoll-3] reactor.netty.http.client.HttpClient     : [18c0f162] REGISTERED\n2022-04-27 14:35:58.574 []  WARN 7800 --- [or-http-epoll-2] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:35:59.576 []  WARN 7800 --- [or-http-epoll-2] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:00.578 []  WARN 7800 --- [or-http-epoll-2] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:01.579 []  WARN 7800 --- [or-http-epoll-2] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:02.581 []  WARN 7800 --- [or-http-epoll-2] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:03.592 []  WARN 7800 --- [or-http-epoll-2] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:04.593 []  WARN 7800 --- [or-http-epoll-2] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:05.595 []  WARN 7800 --- [or-http-epoll-2] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:06.597 []  WARN 7800 --- [or-http-epoll-2] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:07.598 []  WARN 7800 --- [or-http-epoll-2] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:08.614 [] DEBUG 7800 --- [or-http-epoll-3] reactor.netty.http.client.HttpClient     : [18c0f162] CONNECT: xxx.xxx.xxx/n.n.n.n:443\n2022-04-27 14:36:08.622 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:09.624 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:10.625 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:11.626 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:12.627 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:13.678 [] DEBUG 7800 --- [or-http-epoll-3] reactor.netty.http.client.HttpClient     : [18c0f162, L:/m.m.m.m:49216 - R:xxx.xxx.xxx/n.n.n.n:443] ACTIVE\n2022-04-27 14:36:13.679 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:14.680 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:15.683 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:16.684 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:17.687 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:18.689 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:19.691 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:20.694 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:21.696 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:22.698 []  WARN 7800 --- [or-http-epoll-3] io.netty.channel.epoll.EpollEventLoop    : Unexpected exception in the selector loop.\n\nio.netty.channel.unix.Errors$NativeIoException: epoll_wait(..) failed: Function not implemented\n\n2022-04-27 14:36:23.718 [] DEBUG 7800 --- [or-http-epoll-3] reactor.netty.http.client.HttpClient     : [18c0f162, L:/m.m.m.m:49216 - R:xxx.xxx.xxx/n.n.n.n:443] READ COMPLETE\n2022-04-27 14:36:23.900 [] DEBUG 7800 --- [or-http-epoll-3] reactor.netty.http.client.HttpClient     : [18c0f162, L:/m.m.m.m:49216 - R:xxx.xxx.xxx/n.n.n.n:443] READ COMPLETE\n2022-04-27 14:36:23.901 [] DEBUG 7800 --- [or-http-epoll-3] reactor.netty.http.client.HttpClient     : [18c0f162, L:/m.m.m.m:49216 - R:xxx.xxx.xxx/n.n.n.n:443] USER_EVENT: SslHandshakeCompletionEvent(io.netty.handler.ssl.SslHandshakeTimeoutException: handshake timed out after 10000ms)\n2022-04-27 14:36:23.907 [630e08e6-806d-4d81-af13-4841ac8d2c37]  INFO 7800 --- [or-http-epoll-3] n.e.partner.core.config.LoggingFilter    : GET /endpoint/\n2022-04-27 14:36:23.914 [] ERROR 7800 --- [or-http-epoll-3] a.w.r.e.AbstractErrorWebExceptionHandler : [4336f075]  500 Server Error for HTTP GET &quot;/endpoint/&quot;\n\norg.springframework.web.reactive.function.client.WebClientRequestException: handshake timed out after 10000ms; nested exception is io.netty.handler.ssl.SslHandshakeTimeoutException: handshake timed out after 10000ms\n        at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141) ~[spring-webflux-5.3.19.jar:5.3.19]\n        Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException:\nAssembly trace from producer [reactor.core.publisher.MonoErrorSupplied] :\n        reactor.core.publisher.Mono.error\n        org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.wrapException(ExchangeFunctions.java:141)\nError has been observed at the following site(s):\n        *______________Mono.error \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.wrapException(ExchangeFunctions.java:141)\n        |_                        \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$exchange$4(ExchangeFunctions.java:106)\n        *______Mono.onErrorResume \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.exchange(ExchangeFunctions.java:106)\n        |_               Mono.map \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.exchange(ExchangeFunctions.java:107)\n        |_          Mono.doOnEach \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.client.MetricsWebClientFilterFunction.lambda$instrumentResponse$3(MetricsWebClientFilterFunction.java:83)\n        |_         Mono.doFinally \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.client.MetricsWebClientFilterFunction.lambda$instrumentResponse$3(MetricsWebClientFilterFunction.java:89)\n        *____Mono.deferContextual \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.client.MetricsWebClientFilterFunction.instrumentResponse(MetricsWebClientFilterFunction.java:83)\n        |_                        \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.client.MetricsWebClientFilterFunction.lambda$filter$0(MetricsWebClientFilterFunction.java:77)\n        |_      Mono.contextWrite \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.client.MetricsWebClientFilterFunction.filter(MetricsWebClientFilterFunction.java:78)\n        |_                        \u21e2 at org.springframework.web.reactive.function.client.ExchangeFilterFunction.lambda$apply$2(ExchangeFilterFunction.java:74)\n        |_             checkpoint \u21e2 Request to GET https://xxx.xxx.xxx/endpoint2 [DefaultWebClient]\n        |_     Mono.switchIfEmpty \u21e2 at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultRequestBodyUriSpec.lambda$exchange$7(DefaultWebClient.java:433)\n        *______________Mono.defer \u21e2 at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultRequestBodyUriSpec.exchange(DefaultWebClient.java:430)\n        |_           Mono.flatMap \u21e2 at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.bodyToMono(DefaultWebClient.java:540)\n        |_                        \u21e2 at xxx.xxx.xxx.shared.restclient.RestClient.lambda$requestToMono$6(RestClient.java:132)\n        *____________Mono.flatMap \u21e2 at xxx.xxx.xxx.shared.restclient.RestClient.requestToMono(RestClient.java:132)\n        |_          Mono.doOnNext \u21e2 at xxx.xxx.xxx.shared.restclient.RestClient.requestToMono(RestClient.java:146)\n        |_                        \u21e2 at xxx.xxx.xxx.shared.restclient.RestClient.lambda$get$1(RestClient.java:80)\n        *____Mono.deferContextual \u21e2 at xxx.xxx.xxx.shared.restclient.RestClient.get(RestClient.java:77)\n        |_                        \u21e2 at xxx.xxx.xxx.module.ExtService.getUser(ExtService.java:90)\n        |_        Mono.filterWhen \u21e2 at xxx.xxx.xxx.user.UserController.getUser(UserController.java:86)\n        |_     Mono.switchIfEmpty \u21e2 at xxx.xxx.xxx.user.UserController.getUser(UserController.java:87)\n        |_               Mono.map \u21e2 at xxx.xxx.xxx.user.UserController.getUser(UserController.java:93)\n        |_              Mono.from \u21e2 at org.springframework.core.ReactiveAdapterRegistry$ReactorAdapter.toPublisher(ReactiveAdapterRegistry.java:237)\n        |_              Mono.from \u21e2 at org.springframework.http.codec.json.AbstractJackson2Encoder.encode(AbstractJackson2Encoder.java:149)\n        |_               Mono.map \u21e2 at org.springframework.http.codec.json.AbstractJackson2Encoder.encode(AbstractJackson2Encoder.java:150)\n        |_              Mono.flux \u21e2 at org.springframework.http.codec.json.AbstractJackson2Encoder.encode(AbstractJackson2Encoder.java:151)\n        |_     Flux.singleOrEmpty \u21e2 at org.springframework.http.codec.EncoderHttpMessageWriter.write(EncoderHttpMessageWriter.java:129)\n        |_     Mono.switchIfEmpty \u21e2 at org.springframework.http.codec.EncoderHttpMessageWriter.write(EncoderHttpMessageWriter.java:130)\n        |_           Mono.flatMap \u21e2 at org.springframework.http.codec.EncoderHttpMessageWriter.write(EncoderHttpMessageWriter.java:134)\n        |_       Mono.doOnDiscard \u21e2 at org.springframework.http.codec.EncoderHttpMessageWriter.write(EncoderHttpMessageWriter.java:140)\n        |_                        \u21e2 at org.springframework.http.codec.EncoderHttpMessageWriter.write(EncoderHttpMessageWriter.java:217)\n        |_                        \u21e2 at org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler.writeBody(AbstractMessageWriterResultHandler.java:106)\n        |_                        \u21e2 at org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler.handleResult(ResponseBodyResultHandler.java:86)\n        |_             checkpoint \u21e2 Handler xxx.xxx.xxx.user.UserController#getUser(Long, Long) [DispatcherHandler]\n        |_     Mono.onErrorResume \u21e2 at org.springframework.web.reactive.DispatcherHandler.handleResult(DispatcherHandler.java:181)\n        |_                        \u21e2 at org.springframework.web.reactive.DispatcherHandler.lambda$handle$2(DispatcherHandler.java:154)\n        *____________Mono.flatMap \u21e2 at org.springframework.web.reactive.DispatcherHandler.lambda$handleResult$5(DispatcherHandler.java:182)\n        *____________Mono.flatMap \u21e2 at org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:154)\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        |_                        \u21e2 at springfox.boot.starter.autoconfigure.SwaggerUiWebFluxConfiguration$CustomWebFilter.filter(SwaggerUiWebFluxConfiguration.java:49)\n        |_             checkpoint \u21e2 springfox.boot.starter.autoconfigure.SwaggerUiWebFluxConfiguration$CustomWebFilter [DefaultWebFilterChain]\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        |_          Mono.doOnEach \u21e2 at xxx.xxx.xxx.core.config.LoggingFilter.filter(LoggingFilter.java:37)\n        |_      Mono.contextWrite \u21e2 at xxx.xxx.xxx.core.config.LoggingFilter.filter(LoggingFilter.java:49)\n        |_             checkpoint \u21e2 xxx.xxx.xxx.core.config.LoggingFilter$$EnhancerBySpringCGLIB$$37584577 [DefaultWebFilterChain]\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        *______Mono.switchIfEmpty \u21e2 at org.springframework.security.web.server.authorization.AuthorizationWebFilter.filter(AuthorizationWebFilter.java:55)\n        |_             checkpoint \u21e2 org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        |_     Mono.onErrorResume \u21e2 at org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter.filter(ExceptionTranslationWebFilter.java:58)\n        |_             checkpoint \u21e2 org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        *_______________Mono.then \u21e2 at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:62)\n        *______Mono.switchIfEmpty \u21e2 at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:62)\n        |_               Mono.map \u21e2 at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:62)\n        |_           Mono.flatMap \u21e2 at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:63)\n        |_           Mono.flatMap \u21e2 at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:63)\n        |_             checkpoint \u21e2 org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        |_                        \u21e2 at org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter.lambda$filter$1(ServerRequestCacheWebFilter.java:39)\n        *____________Mono.flatMap \u21e2 at org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter.filter(ServerRequestCacheWebFilter.java:39)\n        |_             checkpoint \u21e2 org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        |_                        \u21e2 at org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter.filter(SecurityContextServerWebExchangeWebFilter.java:38)\n        |_             checkpoint \u21e2 org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        |_                        \u21e2 at org.springframework.security.web.server.authentication.WebFilterChainServerAuthenticationSuccessHandler.onAuthenticationSuccess(WebFilterChainServerAuthenticationSuccessHandler.java:36)\n        *_______________Mono.then \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.onAuthenticationSuccess(AuthenticationWebFilter.java:135)\n        |_ Mono.subscriberContext \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.onAuthenticationSuccess(AuthenticationWebFilter.java:136)\n        |_                        \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.lambda$authenticate$7(AuthenticationWebFilter.java:124)\n        *____________Mono.flatMap \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.authenticate(AuthenticationWebFilter.java:124)\n        |_         Mono.doOnError \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.authenticate(AuthenticationWebFilter.java:126)\n        |_                        \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.lambda$filter$3(AuthenticationWebFilter.java:114)\n        *____________Mono.flatMap \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.filter(AuthenticationWebFilter.java:114)\n        |_     Mono.onErrorResume \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.filter(AuthenticationWebFilter.java:115)\n        |_             checkpoint \u21e2 org.springframework.security.web.server.authentication.AuthenticationWebFilter [DefaultWebFilterChain]\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        |_ Mono.subscriberContext \u21e2 at org.springframework.security.web.server.context.ReactorContextWebFilter.filter(ReactorContextWebFilter.java:47)\n        |_             checkpoint \u21e2 org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        |_                        \u21e2 at org.springframework.security.web.server.header.HttpHeaderWriterWebFilter.filter(HttpHeaderWriterWebFilter.java:44)\n        |_             checkpoint \u21e2 org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        |_ Mono.subscriberContext \u21e2 at org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter.filter(ServerHttpSecurity.java:3042)\n        |_             checkpoint \u21e2 org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        |_                        \u21e2 at org.springframework.web.server.handler.FilteringWebHandler.handle(FilteringWebHandler.java:59)\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        |_                        \u21e2 at org.springframework.security.web.server.WebFilterChainProxy.lambda$filter$4(WebFilterChainProxy.java:56)\n        *____________Mono.flatMap \u21e2 at org.springframework.security.web.server.WebFilterChainProxy.filter(WebFilterChainProxy.java:56)\n        |_             checkpoint \u21e2 org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        |_          Mono.doOnEach \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter.filter(MetricsWebFilter.java:87)\n        |_        Mono.doOnCancel \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter.filter(MetricsWebFilter.java:88)\n        *__Mono.transformDeferred \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter.filter(MetricsWebFilter.java:82)\n        |_             checkpoint \u21e2 org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]\n        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)\n        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)\n        |_                        \u21e2 at org.springframework.web.server.handler.FilteringWebHandler.handle(FilteringWebHandler.java:59)\n        |_                        \u21e2 at org.springframework.web.server.handler.WebHandlerDecorator.handle(WebHandlerDecorator.java:56)\n        |_     Mono.onErrorResume \u21e2 at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:77)\n        *______________Mono.error \u21e2 at org.springframework.web.server.handler.ExceptionHandlingWebHandler$CheckpointInsertingHandler.handle(ExceptionHandlingWebHandler.java:98)\n        |_             checkpoint \u21e2 HTTP GET &quot;/endpoint/&quot; [ExceptionHandlingWebHandler]\n        |_                        \u21e2 at org.springframework.web.server.handler.ExceptionHandlingWebHandler.lambda$handle$0(ExceptionHandlingWebHandler.java:77)\nOriginal Stack Trace:\n                at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141) ~[spring-webflux-5.3.19.jar:5.3.19]\n                at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.Mono.subscribe(Mono.java:4400) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:234) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:234) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:234) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307) ~[reactor-netty-http-1.0.18.jar:1.0.18]\n                at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:204) ~[reactor-netty-core-1.0.18.jar:1.0.18]\n                at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:454) ~[reactor-netty-core-1.0.18.jar:1.0.18]\n                at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:129) ~[reactor-netty-core-1.0.18.jar:1.0.18]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:302) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:273) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:302) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:273) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at reactor.netty.tcp.SslProvider$SslReadHandler.userEventTriggered(SslProvider.java:804) ~[reactor-netty-core-1.0.18.jar:1.0.18]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:346) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:332) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.fireUserEventTriggered(AbstractChannelHandlerContext.java:324) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.handler.logging.LoggingHandler.userEventTriggered(LoggingHandler.java:222) ~[netty-handler-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:346) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:332) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.fireUserEventTriggered(AbstractChannelHandlerContext.java:324) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.handler.ssl.SslUtils.handleHandshakeFailure(SslUtils.java:443) ~[netty-handler-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.handler.ssl.SslHandler$7.run(SslHandler.java:2117) ~[netty-handler-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:391) ~[netty-transport-classes-epoll-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at java.base/java.lang.Thread.run(Thread.java:871) ~[na:na]\nCaused by: io.netty.handler.ssl.SslHandshakeTimeoutException: handshake timed out after 10000ms\n        at io.netty.handler.ssl.SslHandler$7.run(SslHandler.java:2113) ~[netty-handler-4.1.76.Final.jar:4.1.76.Final]\n        Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException:\nAssembly trace from producer [reactor.core.publisher.MonoCreate] :\n        reactor.core.publisher.Mono.create\n        reactor.netty.resources.PooledConnectionProvider.acquire(PooledConnectionProvider.java:121)\nError has been observed at the following site(s):\n        *_______Mono.create \u21e2 at reactor.netty.resources.PooledConnectionProvider.acquire(PooledConnectionProvider.java:121)\n        |_                  \u21e2 at reactor.netty.tcp.TcpResources.acquire(TcpResources.java:161)\n        |_                  \u21e2 at reactor.netty.http.client.HttpConnectionProvider.acquire(HttpConnectionProvider.java:48)\n        *_______Mono.create \u21e2 at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:210)\n        |_   Mono.retryWhen \u21e2 at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:271)\n        *____Flux.concatMap \u21e2 at reactor.util.retry.RetrySpec.generateCompanion(RetrySpec.java:356)\n        *__________________ \u21e2 at reactor.netty.http.client.HttpClientFinalizer._connect(HttpClientFinalizer.java:156)\n        |_ Mono.flatMapMany \u21e2 at reactor.netty.http.client.HttpClientFinalizer.responseConnection(HttpClientFinalizer.java:101)\n        |_        Flux.next \u21e2 at org.springframework.http.client.reactive.ReactorClientHttpConnector.connect(ReactorClientHttpConnector.java:116)\n        |_  Mono.doOnCancel \u21e2 at org.springframework.http.client.reactive.ReactorClientHttpConnector.connect(ReactorClientHttpConnector.java:117)\n        |_ Mono.doOnRequest \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.exchange(ExchangeFunctions.java:104)\n        |_  Mono.doOnCancel \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.exchange(ExchangeFunctions.java:105)\nOriginal Stack Trace:\n                at io.netty.handler.ssl.SslHandler$7.run(SslHandler.java:2113) ~[netty-handler-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:391) ~[netty-transport-classes-epoll-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at java.base/java.lang.Thread.run(Thread.java:871) ~[na:na]\n\n2022-04-27 14:36:23.922 []  WARN 7800 --- [or-http-epoll-3] r.netty.http.client.HttpClientConnect    : [18c0f162, L:/m.m.m.m:49216 - R:xxx.xxx.xxx/n.n.n.n:443] The connection observed an error\n\nio.netty.handler.ssl.SslHandshakeTimeoutException: handshake timed out after 10000ms\n        at io.netty.handler.ssl.SslHandler$7.run(SslHandler.java:2113) ~[netty-handler-4.1.76.Final.jar:4.1.76.Final]\n        Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException:\nAssembly trace from producer [reactor.core.publisher.MonoCreate] :\n        reactor.core.publisher.Mono.create\n        reactor.netty.resources.PooledConnectionProvider.acquire(PooledConnectionProvider.java:121)\nError has been observed at the following site(s):\n        *_______Mono.create \u21e2 at reactor.netty.resources.PooledConnectionProvider.acquire(PooledConnectionProvider.java:121)\n        |_                  \u21e2 at reactor.netty.tcp.TcpResources.acquire(TcpResources.java:161)\n        |_                  \u21e2 at reactor.netty.http.client.HttpConnectionProvider.acquire(HttpConnectionProvider.java:48)\n        *_______Mono.create \u21e2 at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:210)\n        |_   Mono.retryWhen \u21e2 at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:271)\n        *____Flux.concatMap \u21e2 at reactor.util.retry.RetrySpec.generateCompanion(RetrySpec.java:356)\n        *__________________ \u21e2 at reactor.netty.http.client.HttpClientFinalizer._connect(HttpClientFinalizer.java:156)\n        |_ Mono.flatMapMany \u21e2 at reactor.netty.http.client.HttpClientFinalizer.responseConnection(HttpClientFinalizer.java:101)\n        |_        Flux.next \u21e2 at org.springframework.http.client.reactive.ReactorClientHttpConnector.connect(ReactorClientHttpConnector.java:116)\n        |_  Mono.doOnCancel \u21e2 at org.springframework.http.client.reactive.ReactorClientHttpConnector.connect(ReactorClientHttpConnector.java:117)\n        |_ Mono.doOnRequest \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.exchange(ExchangeFunctions.java:104)\n        |_  Mono.doOnCancel \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.exchange(ExchangeFunctions.java:105)\nOriginal Stack Trace:\n                at io.netty.handler.ssl.SslHandler$7.run(SslHandler.java:2113) ~[netty-handler-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:391) ~[netty-transport-classes-epoll-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at java.base/java.lang.Thread.run(Thread.java:871) ~[na:na]\n\n2022-04-27 14:36:23.937 [] DEBUG 7800 --- [or-http-epoll-3] reactor.netty.http.client.HttpClient     : [18c0f162, L:/m.m.m.m:49216 ! R:xxx.xxx.xxx/n.n.n.n:443] USER_EVENT: SslCloseCompletionEvent(java.nio.channels.ClosedChannelException)\n2022-04-27 14:36:23.937 [] DEBUG 7800 --- [or-http-epoll-3] reactor.netty.http.client.HttpClient     : [18c0f162, L:/m.m.m.m:49216 ! R:xxx.xxx.xxx/n.n.n.n:443] INACTIVE\n2022-04-27 14:36:23.938 [] DEBUG 7800 --- [or-http-epoll-3] reactor.netty.http.client.HttpClient     : [18c0f162, L:/m.m.m.m:49216 ! R:xxx.xxx.xxx/n.n.n.n:443] UNREGISTERED\"><pre class=\"notranslate\"><span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">35</span>:<span class=\"pl-c1\">58.522</span> [] <span class=\"pl-c1\">DEBUG</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">reactor</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">http</span>.<span class=\"pl-smi\">client</span>.<span class=\"pl-smi\">HttpClient</span>     : [<span class=\"pl-c1\">18</span><span class=\"pl-s1\">c0f162</span>] <span class=\"pl-c1\">REGISTERED</span>\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">35</span>:<span class=\"pl-c1\">58.574</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">2</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">35</span>:<span class=\"pl-c1\">59.576</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">2</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">00.578</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">2</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">01.579</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">2</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">02.581</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">2</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">03.592</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">2</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">04.593</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">2</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">05.595</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">2</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">06.597</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">2</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">07.598</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">2</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">08.614</span> [] <span class=\"pl-c1\">DEBUG</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">reactor</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">http</span>.<span class=\"pl-smi\">client</span>.<span class=\"pl-smi\">HttpClient</span>     : [<span class=\"pl-c1\">18</span><span class=\"pl-s1\">c0f162</span>] <span class=\"pl-c1\">CONNECT</span>: <span class=\"pl-s1\">xxx</span>.<span class=\"pl-s1\">xxx</span>.<span class=\"pl-s1\">xxx</span>/<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>:<span class=\"pl-c1\">443</span>\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">08.622</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">09.624</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">10.625</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">11.626</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">12.627</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">13.678</span> [] <span class=\"pl-c1\">DEBUG</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">reactor</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">http</span>.<span class=\"pl-smi\">client</span>.<span class=\"pl-smi\">HttpClient</span>     : [<span class=\"pl-c1\">18</span><span class=\"pl-s1\">c0f162</span>, <span class=\"pl-s1\">L</span>:/<span class=\"pl-smi\">m</span>.<span class=\"pl-smi\">m</span>.<span class=\"pl-smi\">m</span>.<span class=\"pl-smi\">m</span>:<span class=\"pl-c1\">49216</span> - <span class=\"pl-s1\">R</span>:<span class=\"pl-s1\">xxx</span>.<span class=\"pl-s1\">xxx</span>.<span class=\"pl-s1\">xxx</span>/<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>:<span class=\"pl-c1\">443</span>] <span class=\"pl-c1\">ACTIVE</span>\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">13.679</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">14.680</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">15.683</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">16.684</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">17.687</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">18.689</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">19.691</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">20.694</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">21.696</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">22.698</span> []  <span class=\"pl-c1\">WARN</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">epoll</span>.<span class=\"pl-smi\">EpollEventLoop</span>    : <span class=\"pl-s1\">Unexpected</span> <span class=\"pl-s1\">exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">the</span> <span class=\"pl-s1\">selector</span> <span class=\"pl-smi\">loop</span>.\n\n<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">channel</span>.<span class=\"pl-smi\">unix</span>.<span class=\"pl-smi\">Errors$NativeIoException</span>: <span class=\"pl-s1\">epoll_wait</span>(..) <span class=\"pl-s1\">failed</span>: <span class=\"pl-smi\">Function</span> <span class=\"pl-s1\">not</span> <span class=\"pl-s1\">implemented</span>\n\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">23.718</span> [] <span class=\"pl-c1\">DEBUG</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">reactor</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">http</span>.<span class=\"pl-smi\">client</span>.<span class=\"pl-smi\">HttpClient</span>     : [<span class=\"pl-c1\">18</span><span class=\"pl-s1\">c0f162</span>, <span class=\"pl-s1\">L</span>:/<span class=\"pl-smi\">m</span>.<span class=\"pl-smi\">m</span>.<span class=\"pl-smi\">m</span>.<span class=\"pl-smi\">m</span>:<span class=\"pl-c1\">49216</span> - <span class=\"pl-s1\">R</span>:<span class=\"pl-s1\">xxx</span>.<span class=\"pl-s1\">xxx</span>.<span class=\"pl-s1\">xxx</span>/<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>:<span class=\"pl-c1\">443</span>] <span class=\"pl-c1\">READ</span> <span class=\"pl-c1\">COMPLETE</span>\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">23.900</span> [] <span class=\"pl-c1\">DEBUG</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">reactor</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">http</span>.<span class=\"pl-smi\">client</span>.<span class=\"pl-smi\">HttpClient</span>     : [<span class=\"pl-c1\">18</span><span class=\"pl-s1\">c0f162</span>, <span class=\"pl-s1\">L</span>:/<span class=\"pl-smi\">m</span>.<span class=\"pl-smi\">m</span>.<span class=\"pl-smi\">m</span>.<span class=\"pl-smi\">m</span>:<span class=\"pl-c1\">49216</span> - <span class=\"pl-s1\">R</span>:<span class=\"pl-s1\">xxx</span>.<span class=\"pl-s1\">xxx</span>.<span class=\"pl-s1\">xxx</span>/<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>:<span class=\"pl-c1\">443</span>] <span class=\"pl-c1\">READ</span> <span class=\"pl-c1\">COMPLETE</span>\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">23.901</span> [] <span class=\"pl-c1\">DEBUG</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">reactor</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">http</span>.<span class=\"pl-smi\">client</span>.<span class=\"pl-smi\">HttpClient</span>     : [<span class=\"pl-c1\">18</span><span class=\"pl-s1\">c0f162</span>, <span class=\"pl-s1\">L</span>:/<span class=\"pl-smi\">m</span>.<span class=\"pl-smi\">m</span>.<span class=\"pl-smi\">m</span>.<span class=\"pl-smi\">m</span>:<span class=\"pl-c1\">49216</span> - <span class=\"pl-s1\">R</span>:<span class=\"pl-s1\">xxx</span>.<span class=\"pl-s1\">xxx</span>.<span class=\"pl-s1\">xxx</span>/<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>.<span class=\"pl-smi\">n</span>:<span class=\"pl-c1\">443</span>] <span class=\"pl-c1\">USER_EVENT</span>: <span class=\"pl-en\">SslHandshakeCompletionEvent</span>(<span class=\"pl-smi\">io</span>.<span class=\"pl-smi\">netty</span>.<span class=\"pl-smi\">handler</span>.<span class=\"pl-smi\">ssl</span>.<span class=\"pl-smi\">SslHandshakeTimeoutException</span>: <span class=\"pl-s1\">handshake</span> <span class=\"pl-s1\">timed</span> <span class=\"pl-s1\">out</span> <span class=\"pl-s1\">after</span> <span class=\"pl-c1\">10000</span><span class=\"pl-s1\">ms</span>)\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">23.907</span> [<span class=\"pl-c1\">630e08</span><span class=\"pl-s1\">e6</span>-<span class=\"pl-c1\">806d</span>-<span class=\"pl-c1\">4d</span><span class=\"pl-c1\">81</span>-<span class=\"pl-s1\">af13</span>-<span class=\"pl-c1\">4841</span><span class=\"pl-s1\">ac8d2c37</span>]  <span class=\"pl-c1\">INFO</span> <span class=\"pl-c1\">7800</span> ---<span class=\"pl-s1\"></span> [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-s1\">n</span>.<span class=\"pl-s1\">e</span>.<span class=\"pl-s1\">partner</span>.<span class=\"pl-s1\">core</span>.<span class=\"pl-s1\">config</span>.<span class=\"pl-s1\">LoggingFilter</span>    : <span class=\"pl-c1\">GET</span> /<span class=\"pl-s1\">endpoint</span>/\n<span class=\"pl-c1\">2022</span>-<span class=\"pl-c1\">04</span>-<span class=\"pl-c1\">27</span> <span class=\"pl-c1\">14</span>:<span class=\"pl-c1\">36</span>:<span class=\"pl-c1\">23.914</span> [] <span class=\"pl-c1\">ERROR</span> <span class=\"pl-c1\">7800</span> --- [<span class=\"pl-s1\">or</span>-<span class=\"pl-s1\">http</span>-<span class=\"pl-s1\">epoll</span>-<span class=\"pl-c1\">3</span>] <span class=\"pl-smi\">a</span>.<span class=\"pl-smi\">w</span>.<span class=\"pl-smi\">r</span>.<span class=\"pl-smi\">e</span>.<span class=\"pl-smi\">AbstractErrorWebExceptionHandler</span> : [<span class=\"pl-c1\">4336f</span><span class=\"pl-c1\">075</span>]  <span class=\"pl-c1\">500</span> <span class=\"pl-s1\">Server</span> <span class=\"pl-s1\">Error</span> <span class=\"pl-k\">for</span> <span class=\"pl-c1\">HTTP</span> <span class=\"pl-c1\">GET</span> \"/<span class=\"pl-s1\">endpoint</span>/<span class=\"pl-s\">\"</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">org.springframework.web.reactive.function.client.WebClientRequestException: handshake timed out after 10000ms; nested exception is io.netty.handler.ssl.SslHandshakeTimeoutException: handshake timed out after 10000ms</span>\n<span class=\"pl-s\">        at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141) ~[spring-webflux-5.3.19.jar:5.3.19]</span>\n<span class=\"pl-s\">        Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException:</span>\n<span class=\"pl-s\">Assembly trace from producer [reactor.core.publisher.MonoErrorSupplied] :</span>\n<span class=\"pl-s\">        reactor.core.publisher.Mono.error</span>\n<span class=\"pl-s\">        org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.wrapException(ExchangeFunctions.java:141)</span>\n<span class=\"pl-s\">Error has been observed at the following site(s):</span>\n<span class=\"pl-s\">        *______________Mono.error \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.wrapException(ExchangeFunctions.java:141)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$exchange$4(ExchangeFunctions.java:106)</span>\n<span class=\"pl-s\">        *______Mono.onErrorResume \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.exchange(ExchangeFunctions.java:106)</span>\n<span class=\"pl-s\">        |_               Mono.map \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.exchange(ExchangeFunctions.java:107)</span>\n<span class=\"pl-s\">        |_          Mono.doOnEach \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.client.MetricsWebClientFilterFunction.lambda$instrumentResponse$3(MetricsWebClientFilterFunction.java:83)</span>\n<span class=\"pl-s\">        |_         Mono.doFinally \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.client.MetricsWebClientFilterFunction.lambda$instrumentResponse$3(MetricsWebClientFilterFunction.java:89)</span>\n<span class=\"pl-s\">        *____Mono.deferContextual \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.client.MetricsWebClientFilterFunction.instrumentResponse(MetricsWebClientFilterFunction.java:83)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.client.MetricsWebClientFilterFunction.lambda$filter$0(MetricsWebClientFilterFunction.java:77)</span>\n<span class=\"pl-s\">        |_      Mono.contextWrite \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.client.MetricsWebClientFilterFunction.filter(MetricsWebClientFilterFunction.java:78)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.reactive.function.client.ExchangeFilterFunction.lambda$apply$2(ExchangeFilterFunction.java:74)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 Request to GET https://xxx.xxx.xxx/endpoint2 [DefaultWebClient]</span>\n<span class=\"pl-s\">        |_     Mono.switchIfEmpty \u21e2 at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultRequestBodyUriSpec.lambda$exchange$7(DefaultWebClient.java:433)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultRequestBodyUriSpec.exchange(DefaultWebClient.java:430)</span>\n<span class=\"pl-s\">        |_           Mono.flatMap \u21e2 at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.bodyToMono(DefaultWebClient.java:540)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at xxx.xxx.xxx.shared.restclient.RestClient.lambda$requestToMono$6(RestClient.java:132)</span>\n<span class=\"pl-s\">        *____________Mono.flatMap \u21e2 at xxx.xxx.xxx.shared.restclient.RestClient.requestToMono(RestClient.java:132)</span>\n<span class=\"pl-s\">        |_          Mono.doOnNext \u21e2 at xxx.xxx.xxx.shared.restclient.RestClient.requestToMono(RestClient.java:146)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at xxx.xxx.xxx.shared.restclient.RestClient.lambda$get$1(RestClient.java:80)</span>\n<span class=\"pl-s\">        *____Mono.deferContextual \u21e2 at xxx.xxx.xxx.shared.restclient.RestClient.get(RestClient.java:77)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at xxx.xxx.xxx.module.ExtService.getUser(ExtService.java:90)</span>\n<span class=\"pl-s\">        |_        Mono.filterWhen \u21e2 at xxx.xxx.xxx.user.UserController.getUser(UserController.java:86)</span>\n<span class=\"pl-s\">        |_     Mono.switchIfEmpty \u21e2 at xxx.xxx.xxx.user.UserController.getUser(UserController.java:87)</span>\n<span class=\"pl-s\">        |_               Mono.map \u21e2 at xxx.xxx.xxx.user.UserController.getUser(UserController.java:93)</span>\n<span class=\"pl-s\">        |_              Mono.from \u21e2 at org.springframework.core.ReactiveAdapterRegistry$ReactorAdapter.toPublisher(ReactiveAdapterRegistry.java:237)</span>\n<span class=\"pl-s\">        |_              Mono.from \u21e2 at org.springframework.http.codec.json.AbstractJackson2Encoder.encode(AbstractJackson2Encoder.java:149)</span>\n<span class=\"pl-s\">        |_               Mono.map \u21e2 at org.springframework.http.codec.json.AbstractJackson2Encoder.encode(AbstractJackson2Encoder.java:150)</span>\n<span class=\"pl-s\">        |_              Mono.flux \u21e2 at org.springframework.http.codec.json.AbstractJackson2Encoder.encode(AbstractJackson2Encoder.java:151)</span>\n<span class=\"pl-s\">        |_     Flux.singleOrEmpty \u21e2 at org.springframework.http.codec.EncoderHttpMessageWriter.write(EncoderHttpMessageWriter.java:129)</span>\n<span class=\"pl-s\">        |_     Mono.switchIfEmpty \u21e2 at org.springframework.http.codec.EncoderHttpMessageWriter.write(EncoderHttpMessageWriter.java:130)</span>\n<span class=\"pl-s\">        |_           Mono.flatMap \u21e2 at org.springframework.http.codec.EncoderHttpMessageWriter.write(EncoderHttpMessageWriter.java:134)</span>\n<span class=\"pl-s\">        |_       Mono.doOnDiscard \u21e2 at org.springframework.http.codec.EncoderHttpMessageWriter.write(EncoderHttpMessageWriter.java:140)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.http.codec.EncoderHttpMessageWriter.write(EncoderHttpMessageWriter.java:217)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler.writeBody(AbstractMessageWriterResultHandler.java:106)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler.handleResult(ResponseBodyResultHandler.java:86)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 Handler xxx.xxx.xxx.user.UserController#getUser(Long, Long) [DispatcherHandler]</span>\n<span class=\"pl-s\">        |_     Mono.onErrorResume \u21e2 at org.springframework.web.reactive.DispatcherHandler.handleResult(DispatcherHandler.java:181)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.reactive.DispatcherHandler.lambda$handle$2(DispatcherHandler.java:154)</span>\n<span class=\"pl-s\">        *____________Mono.flatMap \u21e2 at org.springframework.web.reactive.DispatcherHandler.lambda$handleResult$5(DispatcherHandler.java:182)</span>\n<span class=\"pl-s\">        *____________Mono.flatMap \u21e2 at org.springframework.web.reactive.DispatcherHandler.handle(DispatcherHandler.java:154)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at springfox.boot.starter.autoconfigure.SwaggerUiWebFluxConfiguration$CustomWebFilter.filter(SwaggerUiWebFluxConfiguration.java:49)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 springfox.boot.starter.autoconfigure.SwaggerUiWebFluxConfiguration$CustomWebFilter [DefaultWebFilterChain]</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        |_          Mono.doOnEach \u21e2 at xxx.xxx.xxx.core.config.LoggingFilter.filter(LoggingFilter.java:37)</span>\n<span class=\"pl-s\">        |_      Mono.contextWrite \u21e2 at xxx.xxx.xxx.core.config.LoggingFilter.filter(LoggingFilter.java:49)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 xxx.xxx.xxx.core.config.LoggingFilter$$EnhancerBySpringCGLIB$$37584577 [DefaultWebFilterChain]</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        *______Mono.switchIfEmpty \u21e2 at org.springframework.security.web.server.authorization.AuthorizationWebFilter.filter(AuthorizationWebFilter.java:55)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        |_     Mono.onErrorResume \u21e2 at org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter.filter(ExceptionTranslationWebFilter.java:58)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        *_______________Mono.then \u21e2 at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:62)</span>\n<span class=\"pl-s\">        *______Mono.switchIfEmpty \u21e2 at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:62)</span>\n<span class=\"pl-s\">        |_               Mono.map \u21e2 at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:62)</span>\n<span class=\"pl-s\">        |_           Mono.flatMap \u21e2 at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:63)</span>\n<span class=\"pl-s\">        |_           Mono.flatMap \u21e2 at org.springframework.security.web.server.authentication.logout.LogoutWebFilter.filter(LogoutWebFilter.java:63)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter.lambda$filter$1(ServerRequestCacheWebFilter.java:39)</span>\n<span class=\"pl-s\">        *____________Mono.flatMap \u21e2 at org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter.filter(ServerRequestCacheWebFilter.java:39)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter.filter(SecurityContextServerWebExchangeWebFilter.java:38)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.security.web.server.authentication.WebFilterChainServerAuthenticationSuccessHandler.onAuthenticationSuccess(WebFilterChainServerAuthenticationSuccessHandler.java:36)</span>\n<span class=\"pl-s\">        *_______________Mono.then \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.onAuthenticationSuccess(AuthenticationWebFilter.java:135)</span>\n<span class=\"pl-s\">        |_ Mono.subscriberContext \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.onAuthenticationSuccess(AuthenticationWebFilter.java:136)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.lambda$authenticate$7(AuthenticationWebFilter.java:124)</span>\n<span class=\"pl-s\">        *____________Mono.flatMap \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.authenticate(AuthenticationWebFilter.java:124)</span>\n<span class=\"pl-s\">        |_         Mono.doOnError \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.authenticate(AuthenticationWebFilter.java:126)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.lambda$filter$3(AuthenticationWebFilter.java:114)</span>\n<span class=\"pl-s\">        *____________Mono.flatMap \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.filter(AuthenticationWebFilter.java:114)</span>\n<span class=\"pl-s\">        |_     Mono.onErrorResume \u21e2 at org.springframework.security.web.server.authentication.AuthenticationWebFilter.filter(AuthenticationWebFilter.java:115)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 org.springframework.security.web.server.authentication.AuthenticationWebFilter [DefaultWebFilterChain]</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        |_ Mono.subscriberContext \u21e2 at org.springframework.security.web.server.context.ReactorContextWebFilter.filter(ReactorContextWebFilter.java:47)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.security.web.server.header.HttpHeaderWriterWebFilter.filter(HttpHeaderWriterWebFilter.java:44)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        |_ Mono.subscriberContext \u21e2 at org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter.filter(ServerHttpSecurity.java:3042)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.FilteringWebHandler.handle(FilteringWebHandler.java:59)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.security.web.server.WebFilterChainProxy.lambda$filter$4(WebFilterChainProxy.java:56)</span>\n<span class=\"pl-s\">        *____________Mono.flatMap \u21e2 at org.springframework.security.web.server.WebFilterChainProxy.filter(WebFilterChainProxy.java:56)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        |_          Mono.doOnEach \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter.filter(MetricsWebFilter.java:87)</span>\n<span class=\"pl-s\">        |_        Mono.doOnCancel \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter.filter(MetricsWebFilter.java:88)</span>\n<span class=\"pl-s\">        *__Mono.transformDeferred \u21e2 at org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter.filter(MetricsWebFilter.java:82)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter [DefaultWebFilterChain]</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.lambda$filter$0(DefaultWebFilterChain.java:120)</span>\n<span class=\"pl-s\">        *______________Mono.defer \u21e2 at org.springframework.web.server.handler.DefaultWebFilterChain.filter(DefaultWebFilterChain.java:119)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.FilteringWebHandler.handle(FilteringWebHandler.java:59)</span>\n<span class=\"pl-s\">        |_                        \u21e2 at org.springframework.web.server.handler.WebHandlerDecorator.handle(WebHandlerDecorator.java:56)</span>\n<span class=\"pl-s\">        |_     Mono.onErrorResume \u21e2 at org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:77)</span>\n<span class=\"pl-s\">        *______________Mono.error \u21e2 at org.springframework.web.server.handler.ExceptionHandlingWebHandler$CheckpointInsertingHandler.handle(ExceptionHandlingWebHandler.java:98)</span>\n<span class=\"pl-s\">        |_             checkpoint \u21e2 HTTP GET \"</span>/<span class=\"pl-s1\">endpoint</span>/\" [ExceptionHandlingWebHandler]\n        |_                        \u21e2 at org.springframework.web.server.handler.ExceptionHandlingWebHandler.lambda$handle$0(ExceptionHandlingWebHandler.java:77)\nOriginal Stack Trace:\n                at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.lambda$wrapException$9(ExchangeFunctions.java:141) ~[spring-webflux-5.3.19.jar:5.3.19]\n                at reactor.core.publisher.MonoErrorSupplied.subscribe(MonoErrorSupplied.java:55) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.Mono.subscribe(Mono.java:4400) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:103) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:234) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:234) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onError(FluxPeekFuseable.java:234) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:93) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.MonoFlatMapMany$FlatMapManyMain.onError(MonoFlatMapMany.java:204) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.SerializedSubscriber.onError(SerializedSubscriber.java:124) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.whenError(FluxRetryWhen.java:225) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber.onError(FluxRetryWhen.java:274) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:415) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onNext(FluxConcatMap.java:251) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.EmitterProcessor.drain(EmitterProcessor.java:491) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.EmitterProcessor.tryEmitNext(EmitterProcessor.java:299) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.SinkManySerialized.tryEmitNext(SinkManySerialized.java:100) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.InternalManySink.emitNext(InternalManySink.java:27) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber.onError(FluxRetryWhen.java:190) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect$ClientTransportSubscriber.onError(HttpClientConnect.java:307) ~[reactor-netty-http-1.0.18.jar:1.0.18]\n                at reactor.core.publisher.MonoCreate$DefaultMonoSink.error(MonoCreate.java:201) ~[reactor-core-3.4.17.jar:3.4.17]\n                at reactor.netty.resources.DefaultPooledConnectionProvider$DisposableAcquire.onUncaughtException(DefaultPooledConnectionProvider.java:204) ~[reactor-netty-core-1.0.18.jar:1.0.18]\n                at reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnection.onUncaughtException(DefaultPooledConnectionProvider.java:454) ~[reactor-netty-core-1.0.18.jar:1.0.18]\n                at reactor.netty.channel.ChannelOperationsHandler.exceptionCaught(ChannelOperationsHandler.java:129) ~[reactor-netty-core-1.0.18.jar:1.0.18]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:302) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:273) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireExceptionCaught(CombinedChannelDuplexHandler.java:424) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.ChannelHandlerAdapter.exceptionCaught(ChannelHandlerAdapter.java:92) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.CombinedChannelDuplexHandler$1.fireExceptionCaught(CombinedChannelDuplexHandler.java:145) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.ChannelInboundHandlerAdapter.exceptionCaught(ChannelInboundHandlerAdapter.java:143) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.CombinedChannelDuplexHandler.exceptionCaught(CombinedChannelDuplexHandler.java:231) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:302) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeExceptionCaught(AbstractChannelHandlerContext.java:281) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.fireExceptionCaught(AbstractChannelHandlerContext.java:273) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at reactor.netty.tcp.SslProvider$SslReadHandler.userEventTriggered(SslProvider.java:804) ~[reactor-netty-core-1.0.18.jar:1.0.18]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:346) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:332) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.fireUserEventTriggered(AbstractChannelHandlerContext.java:324) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.handler.logging.LoggingHandler.userEventTriggered(LoggingHandler.java:222) ~[netty-handler-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:346) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.invokeUserEventTriggered(AbstractChannelHandlerContext.java:332) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.AbstractChannelHandlerContext.fireUserEventTriggered(AbstractChannelHandlerContext.java:324) ~[netty-transport-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.handler.ssl.SslUtils.handleHandshakeFailure(SslUtils.java:443) ~[netty-handler-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.handler.ssl.SslHandler$7.run(SslHandler.java:2117) ~[netty-handler-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:391) ~[netty-transport-classes-epoll-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at java.base/java.lang.Thread.run(Thread.java:871) ~[na:na]\nCaused by: io.netty.handler.ssl.SslHandshakeTimeoutException: handshake timed out after 10000ms\n        at io.netty.handler.ssl.SslHandler$7.run(SslHandler.java:2113) ~[netty-handler-4.1.76.Final.jar:4.1.76.Final]\n        Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException:\nAssembly trace from producer [reactor.core.publisher.MonoCreate] :\n        reactor.core.publisher.Mono.create\n        reactor.netty.resources.PooledConnectionProvider.acquire(PooledConnectionProvider.java:121)\nError has been observed at the following site(s):\n        *_______Mono.create \u21e2 at reactor.netty.resources.PooledConnectionProvider.acquire(PooledConnectionProvider.java:121)\n        |_                  \u21e2 at reactor.netty.tcp.TcpResources.acquire(TcpResources.java:161)\n        |_                  \u21e2 at reactor.netty.http.client.HttpConnectionProvider.acquire(HttpConnectionProvider.java:48)\n        *_______Mono.create \u21e2 at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:210)\n        |_   Mono.retryWhen \u21e2 at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:271)\n        *____Flux.concatMap \u21e2 at reactor.util.retry.RetrySpec.generateCompanion(RetrySpec.java:356)\n        *__________________ \u21e2 at reactor.netty.http.client.HttpClientFinalizer._connect(HttpClientFinalizer.java:156)\n        |_ Mono.flatMapMany \u21e2 at reactor.netty.http.client.HttpClientFinalizer.responseConnection(HttpClientFinalizer.java:101)\n        |_        Flux.next \u21e2 at org.springframework.http.client.reactive.ReactorClientHttpConnector.connect(ReactorClientHttpConnector.java:116)\n        |_  Mono.doOnCancel \u21e2 at org.springframework.http.client.reactive.ReactorClientHttpConnector.connect(ReactorClientHttpConnector.java:117)\n        |_ Mono.doOnRequest \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.exchange(ExchangeFunctions.java:104)\n        |_  Mono.doOnCancel \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.exchange(ExchangeFunctions.java:105)\nOriginal Stack Trace:\n                at io.netty.handler.ssl.SslHandler$7.run(SslHandler.java:2113) ~[netty-handler-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:391) ~[netty-transport-classes-epoll-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at java.base/java.lang.Thread.run(Thread.java:871) ~[na:na]\n\n2022-04-27 14:36:23.922 []  WARN 7800 --- [or-http-epoll-3] r.netty.http.client.HttpClientConnect    : [18c0f162, L:/m.m.m.m:49216 - R:xxx.xxx.xxx/n.n.n.n:443] The connection observed an error\n\nio.netty.handler.ssl.SslHandshakeTimeoutException: handshake timed out after 10000ms\n        at io.netty.handler.ssl.SslHandler$7.run(SslHandler.java:2113) ~[netty-handler-4.1.76.Final.jar:4.1.76.Final]\n        Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException:\nAssembly trace from producer [reactor.core.publisher.MonoCreate] :\n        reactor.core.publisher.Mono.create\n        reactor.netty.resources.PooledConnectionProvider.acquire(PooledConnectionProvider.java:121)\nError has been observed at the following site(s):\n        *_______Mono.create \u21e2 at reactor.netty.resources.PooledConnectionProvider.acquire(PooledConnectionProvider.java:121)\n        |_                  \u21e2 at reactor.netty.tcp.TcpResources.acquire(TcpResources.java:161)\n        |_                  \u21e2 at reactor.netty.http.client.HttpConnectionProvider.acquire(HttpConnectionProvider.java:48)\n        *_______Mono.create \u21e2 at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:210)\n        |_   Mono.retryWhen \u21e2 at reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:271)\n        *____Flux.concatMap \u21e2 at reactor.util.retry.RetrySpec.generateCompanion(RetrySpec.java:356)\n        *__________________ \u21e2 at reactor.netty.http.client.HttpClientFinalizer._connect(HttpClientFinalizer.java:156)\n        |_ Mono.flatMapMany \u21e2 at reactor.netty.http.client.HttpClientFinalizer.responseConnection(HttpClientFinalizer.java:101)\n        |_        Flux.next \u21e2 at org.springframework.http.client.reactive.ReactorClientHttpConnector.connect(ReactorClientHttpConnector.java:116)\n        |_  Mono.doOnCancel \u21e2 at org.springframework.http.client.reactive.ReactorClientHttpConnector.connect(ReactorClientHttpConnector.java:117)\n        |_ Mono.doOnRequest \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.exchange(ExchangeFunctions.java:104)\n        |_  Mono.doOnCancel \u21e2 at org.springframework.web.reactive.function.client.ExchangeFunctions$DefaultExchangeFunction.exchange(ExchangeFunctions.java:105)\nOriginal Stack Trace:\n                at io.netty.handler.ssl.SslHandler$7.run(SslHandler.java:2113) ~[netty-handler-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.PromiseTask.runTask(PromiseTask.java:98) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.ScheduledFutureTask.run(ScheduledFutureTask.java:170) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:469) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:391) ~[netty-transport-classes-epoll-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.76.Final.jar:4.1.76.Final]\n                at java.base/java.lang.Thread.run(Thread.java:871) ~[na:na]\n\n2022-04-27 14:36:23.937 [] DEBUG 7800 --- [or-http-epoll-3] reactor.netty.http.client.HttpClient     : [18c0f162, L:/m.m.m.m:49216 ! R:xxx.xxx.xxx/n.n.n.n:443] USER_EVENT: SslCloseCompletionEvent(java.nio.channels.ClosedChannelException)\n2022-04-27 14:36:23.937 [] DEBUG 7800 --- [or-http-epoll-3] reactor.netty.http.client.HttpClient     : [18c0f162, L:/m.m.m.m:49216 ! R:xxx.xxx.xxx/n.n.n.n:443] INACTIVE\n2022-04-27 14:36:23.938 [] DEBUG 7800 --- [or-http-epoll-3] reactor.netty.http.client.HttpClient     : [18c0f162, L:/m.m.m.m:49216 ! R:xxx.xxx.xxx/n.n.n.n:443] UNREGISTERED</pre></div>\n</details>\n<h3 dir=\"auto\">Netty version</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.springframework.boot:spring-boot-starter-webflux:2.6.7\norg.springframework.boot:spring-boot-reactor-netty:2.6.7\nio.projectreactor.netty:reactor-netty-http:1.0.18\nio.netty:netty-*:4.1.76.Final\"><pre class=\"notranslate\"><code class=\"notranslate\">org.springframework.boot:spring-boot-starter-webflux:2.6.7\norg.springframework.boot:spring-boot-reactor-netty:2.6.7\nio.projectreactor.netty:reactor-netty-http:1.0.18\nio.netty:netty-*:4.1.76.Final\n</code></pre></div>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ java -version\nopenjdk version &quot;11.0.15&quot; 2022-04-19\nIBM Semeru Runtime Open Edition 11.0.15.0 (build 11.0.15+10)\nEclipse OpenJ9 VM 11.0.15.0 (build openj9-0.32.0, JRE 11 Linux amd64-64-Bit Compressed References 20220422_425 (JIT enabled, AOT enabled)\nOpenJ9   - 9a84ec34e\nOMR      - ab24b6666\nJCL      - b7b5b42ea6 based on jdk-11.0.15+10)\"><pre class=\"notranslate\"><code class=\"notranslate\">$ java -version\nopenjdk version \"11.0.15\" 2022-04-19\nIBM Semeru Runtime Open Edition 11.0.15.0 (build 11.0.15+10)\nEclipse OpenJ9 VM 11.0.15.0 (build openj9-0.32.0, JRE 11 Linux amd64-64-Bit Compressed References 20220422_425 (JIT enabled, AOT enabled)\nOpenJ9   - 9a84ec34e\nOMR      - ab24b6666\nJCL      - b7b5b42ea6 based on jdk-11.0.15+10)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ uname -a\nLinux Ubuntu-22.04 5.10.102.1-microsoft-standard-WSL2 #1 SMP Wed Mar 2 00:30:59 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\"><pre class=\"notranslate\"><code class=\"notranslate\">$ uname -a\nLinux Ubuntu-22.04 5.10.102.1-microsoft-standard-WSL2 #1 SMP Wed Mar 2 00:30:59 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/12343",
                "createdAt": "2022-04-27T12:08:37Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "HTTP2: flush preface / settings frames when channel become active",
        "url": "https://github.com/netty/netty/pull/12349",
        "resourcePath": "/netty/netty/pull/12349",
        "createdAt": "2022-05-02T03:50:18Z",
        "number": 12349,
        "mergeCommit": {
          "oid": "f7cbe4bf4824777a72e00bb86b48928907dcce1b",
          "message": "HTTP2: flush preface / settings frames when channel become active (#12349)\n\n\r\nMotivation:\r\n\r\nWe need to manually flush the channl when it becomes active and we wrote the preface / settigns frame as otherwise the remote peer might never see it.\r\n\r\nModifications:\r\n\r\n- Flush after writing preface / settings\r\n- Adjust unit test to verify the new behaviour\r\n- Adjust unit tests to complete mocking everything before the connection is actually established\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12089\r\n\r\n\r\nCo-authored-by: Maksym Ostroverkhov <m.ostroverkhov@gmail.com>",
          "commitUrl": "https://github.com/netty/netty/commit/f7cbe4bf4824777a72e00bb86b48928907dcce1b",
          "parents": {
            "nodes": [
              {
                "oid": "064e5577bf6715cbb4f5cf76bc2a10b4532ae1d0",
                "message": "Bump gson from 2.7 to 2.8.9 (#12416)\n\nBumps [gson](https://github.com/google/gson) from 2.7 to 2.8.9.\r\n- [Release notes](https://github.com/google/gson/releases)\r\n- [Changelog](https://github.com/google/gson/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/google/gson/compare/gson-parent-2.7...gson-parent-2.8.9)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.google.code.gson:gson\r\n  dependency-type: direct:development\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandlerBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameCodec.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameCodecBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2MultiplexCodec.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2MultiplexCodecBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/HttpToHttp2ConnectionHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/HttpToHttp2ConnectionHandlerBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionHandlerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionRoundtripTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2FrameCodecTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c843JQX_2gAoMjI1YjVjYjdiZmE1ZTNkNzk5NTdlOTQ4N2ZmZGU1NDRiNjU2ZTVkNw",
                "url": "https://github.com/netty/netty/pull/12349/commits/225b5cb7bfa5e3d79957e9487ffde544b656e5d7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12089,
                "url": "https://github.com/netty/netty/issues/12089",
                "title": "Client Http2ConnectionHandler: preface is not flushed on http2 start with prior-knowledge",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Preface is flushed by client <code class=\"notranslate\">Http2ConnectionHandler</code> on http2 start with prior-knowledge (aka plaintext) so connection is established (SETTINGS of both sides are sent) in timely manner - which corresponds to netty's http2 <code class=\"notranslate\">tls/alpn</code> start.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Preface may be <a href=\"https://github.com/netty/netty/blob/51eda20432568ffdf736a673abc6b5a44839413f/codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java#L358\">not flushed</a> on http2 start with prior-knowledge, so http2 connection is not established unless \"next\" handler knows this peculiarity and does initial redundant flush (e.g. in <code class=\"notranslate\">channelActive()</code>).</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Currently <a href=\"https://github.com/jauntsdn/netty-websocket-http2/commit/97d037ac8209750a724b8e38483c388760cd2620\">test</a> in netty based project, passes with <a href=\"https://github.com/jauntsdn/netty-websocket-http2/commit/668bf0ef26a2f0d2cf7d28b913f708c72c2a0aca\">workaround</a>.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.74.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/12089",
                "createdAt": "2022-02-09T18:43:34Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix a bug where Netty fails to load a shaded native library",
        "url": "https://github.com/netty/netty/pull/12358",
        "resourcePath": "/netty/netty/pull/12358",
        "createdAt": "2022-05-04T09:39:11Z",
        "number": 12358,
        "mergeCommit": {
          "oid": "eb005907caab01256c1d8baf6d96b06beae95be4",
          "message": "Fix a bug where Netty fails to load a shaded native library (#12358)\n\n\r\nRelated: https://github.com/netty/netty-jni-util/pull/13\r\n\r\nMotivation:\r\n\r\nNetty can't load a shaded native library because `netty-jni-util` has a\r\nbug that appends an extra `/` when attmpting JNI `FindClass`. For\r\nexample, `parsePackagePrefix()` returns `shaded//` instead of `shaded/`,\r\nleading to a bad attempt to load `shaded//io/netty/...`.\r\n\r\nNetty also doesn't handle the case where a shaded package name contains\r\nan underscore (`_`), such as `my_shaded_deps.io.netty.*`, because it\r\nsimply replaces `.` with `_` and vice versa. JNI specification defines\r\na mangling rule to avoid this issue:\r\n\r\n- https://docs.oracle.com/javase/8/docs/technotes/guides/jni/spec/design.html#resolving_native_method_names\r\n\r\nModifications:\r\n\r\n- Replace `_` into `_1` so that `parsePackagePrefix()` in\r\n  `netty-jni-utils.c` can get the correct package name later.\r\n- Update the `docker-compose.yaml` so that the integration tests in\r\n  `testsuite-shading` are always run as a part of CI, so we don't have\r\n  a regression in the future.\r\n\r\nResult:\r\n\r\n- A user can use a functionality that requires a native library even if\r\n  they shaded Netty *and* the shaded package name contains an underscore\r\n  (`_`).",
          "commitUrl": "https://github.com/netty/netty/commit/eb005907caab01256c1d8baf6d96b06beae95be4",
          "parents": {
            "nodes": [
              {
                "oid": "8e8e9cc7b4e05b5bfd81a2aeba23b4e550466494",
                "message": "Include classifier in Automatic-Module-Name (#12354)\n\nMotivation:\r\n\r\nTo be able to have multiple native versions (for different architectures) on the classpath we need to include the classifier in the module name\r\n\r\nModifications:\r\n\r\nAdd classifier in the module name\r\n\r\nResult:\r\n\r\nBe able to have native bits for different architectures on the classpath when using modules"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/NativeLibraryLoader.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "docker/docker-compose.yaml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite-shading/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c843R16K2gAoZjk2OWEwYWQ4YjY4ODJmYTY3N2IxNzBjYWYyMDRjOGMxMTYwY2VhNg",
                "url": "https://github.com/netty/netty/pull/12358/commits/f969a0ad8b6882fa677b170caf204c8c1160cea6"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12351,
                "url": "https://github.com/netty/netty/issues/12351",
                "title": "`ShadingIT` fails on macOS and Linux",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The following commands should succeed:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ ./mvnw install -DskipTests\n$ cd testsuite-shading\n$ ../mvnw clean integration-test failsafe:verify\"><pre class=\"notranslate\"><code class=\"notranslate\">$ ./mvnw install -DskipTests\n$ cd testsuite-shading\n$ ../mvnw clean integration-test failsafe:verify\n</code></pre></div>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The above command fails with the following error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[ERROR] Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 1.19 s &lt;&lt;&lt; FAILURE! - in io.netty.testsuite.shading.ShadingIT\n[ERROR] testShadingNativeTransport  Time elapsed: 0.374 s  &lt;&lt;&lt; ERROR!\njava.lang.UnsatisfiedLinkError: failed to load the required native library\n\tat io.netty.testsuite.shading.ShadingIT.testShading0(ShadingIT.java:54)\n\tat io.netty.testsuite.shading.ShadingIT.testShadingNativeTransport(ShadingIT.java:37)\nCaused by: java.lang.NoClassDefFoundError: shaded2/io/netty/channel/kqueue/KQueueStaticallyReferencedJniMethods (wrong name: shaded2//io/netty/channel/kqueue/KQueueStaticallyReferencedJniMethods)\n\tat io.netty.testsuite.shading.ShadingIT.testShading0(ShadingIT.java:52)\n\tat io.netty.testsuite.shading.ShadingIT.testShadingNativeTransport(ShadingIT.java:37)\"><pre class=\"notranslate\"><code class=\"notranslate\">[ERROR] Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 1.19 s &lt;&lt;&lt; FAILURE! - in io.netty.testsuite.shading.ShadingIT\n[ERROR] testShadingNativeTransport  Time elapsed: 0.374 s  &lt;&lt;&lt; ERROR!\njava.lang.UnsatisfiedLinkError: failed to load the required native library\n\tat io.netty.testsuite.shading.ShadingIT.testShading0(ShadingIT.java:54)\n\tat io.netty.testsuite.shading.ShadingIT.testShadingNativeTransport(ShadingIT.java:37)\nCaused by: java.lang.NoClassDefFoundError: shaded2/io/netty/channel/kqueue/KQueueStaticallyReferencedJniMethods (wrong name: shaded2//io/netty/channel/kqueue/KQueueStaticallyReferencedJniMethods)\n\tat io.netty.testsuite.shading.ShadingIT.testShading0(ShadingIT.java:52)\n\tat io.netty.testsuite.shading.ShadingIT.testShadingNativeTransport(ShadingIT.java:37)\n</code></pre></div>\n<details>\n<summary>The complete test output:</summary>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"22:01:56.060 [main] DEBUG io.netty.util.internal.logging.InternalLoggerFactory - Using SLF4J as the default logging framework\n22:01:56.062 [main] DEBUG io.netty.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false\n22:01:56.062 [main] DEBUG io.netty.util.internal.PlatformDependent0 - Java version: 11\n22:01:56.063 [main] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available\n22:01:56.063 [main] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available\n22:01:56.063 [main] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available\n22:01:56.063 [main] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Buffer.address: available\n22:01:56.063 [main] DEBUG io.netty.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled\n22:01:56.064 [main] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true\n22:01:56.064 [main] DEBUG io.netty.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @75e32c4c\n22:01:56.065 [main] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.&lt;init&gt;(long, int): unavailable\n22:01:56.065 [main] DEBUG io.netty.util.internal.PlatformDependent - sun.misc.Unsafe: available\n22:01:56.071 [main] DEBUG io.netty.util.internal.PlatformDependent - maxDirectMemory: 8589934592 bytes (maybe)\n22:01:56.071 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/90/dr7vn6w14vzdt65wm4tfswwc0000gp/T (java.io.tmpdir)\n22:01:56.071 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)\n22:01:56.072 [main] DEBUG io.netty.util.internal.PlatformDependent - Platform: MacOS\n22:01:56.072 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes\n22:01:56.072 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1\n22:01:56.073 [main] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available\n22:01:56.073 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false\n22:01:56.076 [main] DEBUG shaded2.io.netty.util.internal.logging.InternalLoggerFactory - Using SLF4J as the default logging framework\n22:01:56.090 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false\n22:01:56.090 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - Java version: 11\n22:01:56.090 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available\n22:01:56.090 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available\n22:01:56.091 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available\n22:01:56.091 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - java.nio.Buffer.address: available\n22:01:56.091 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled\n22:01:56.091 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true\n22:01:56.092 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class shaded2.io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @75e32c4c\n22:01:56.092 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.&lt;init&gt;(long, int): unavailable\n22:01:56.092 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - sun.misc.Unsafe: available\n22:01:56.092 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - maxDirectMemory: 8589934592 bytes (maybe)\n22:01:56.092 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/90/dr7vn6w14vzdt65wm4tfswwc0000gp/T (java.io.tmpdir)\n22:01:56.092 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)\n22:01:56.092 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - Platform: MacOS\n22:01:56.093 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes\n22:01:56.093 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1\n22:01:56.093 [main] DEBUG shaded2.io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available\n22:01:56.093 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false\n22:01:56.095 [main] DEBUG shaded2.io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.workdir: /var/folders/90/dr7vn6w14vzdt65wm4tfswwc0000gp/T (io.netty.tmpdir)\n22:01:56.095 [main] DEBUG shaded2.io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.deleteLibAfterLoading: true\n22:01:56.095 [main] DEBUG shaded2.io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.tryPatchShadedId: true\n22:01:56.095 [main] DEBUG shaded2.io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.detectNativeLibraryDuplicates: true\n22:01:56.110 [main] DEBUG shaded2.io.netty.util.internal.NativeLibraryLoader - Execution of 'install_name_tool -id Zu9wWlVpYUcosy50wS6A1VvqOI5ddgPAT8eIVm /var/folders/90/dr7vn6w14vzdt65wm4tfswwc0000gp/T/libshaded2_netty_transport_native_kqueue_aarch_641290578488165430543.dylib' succeed: 0\n22:01:56.149 [main] DEBUG shaded2.io.netty.util.internal.NativeLibraryLoader - Execution of 'codesign -s - /var/folders/90/dr7vn6w14vzdt65wm4tfswwc0000gp/T/libshaded2_netty_transport_native_kqueue_aarch_641290578488165430543.dylib' succeed: 0\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.392 s &lt;&lt;&lt; FAILURE! - in io.netty.testsuite.shading.ShadingIT\n[ERROR] testShadingNativeTransport  Time elapsed: 0.385 s  &lt;&lt;&lt; ERROR!\njava.lang.UnsatisfiedLinkError: failed to load the required native library\n\tat io.netty.testsuite.shading.ShadingIT.testShading0(ShadingIT.java:54)\n\tat io.netty.testsuite.shading.ShadingIT.testShadingNativeTransport(ShadingIT.java:37)\nCaused by: java.lang.NoClassDefFoundError: shaded2/io/netty/channel/kqueue/KQueueStaticallyReferencedJniMethods (wrong name: shaded2//io/netty/channel/kqueue/KQueueStaticallyReferencedJniMethods)\n\tat io.netty.testsuite.shading.ShadingIT.testShading0(ShadingIT.java:52)\n\tat io.netty.testsuite.shading.ShadingIT.testShadingNativeTransport(ShadingIT.java:37)\"><pre class=\"notranslate\"><code class=\"notranslate\">22:01:56.060 [main] DEBUG io.netty.util.internal.logging.InternalLoggerFactory - Using SLF4J as the default logging framework\n22:01:56.062 [main] DEBUG io.netty.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false\n22:01:56.062 [main] DEBUG io.netty.util.internal.PlatformDependent0 - Java version: 11\n22:01:56.063 [main] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available\n22:01:56.063 [main] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available\n22:01:56.063 [main] DEBUG io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available\n22:01:56.063 [main] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Buffer.address: available\n22:01:56.063 [main] DEBUG io.netty.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled\n22:01:56.064 [main] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true\n22:01:56.064 [main] DEBUG io.netty.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @75e32c4c\n22:01:56.065 [main] DEBUG io.netty.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.&lt;init&gt;(long, int): unavailable\n22:01:56.065 [main] DEBUG io.netty.util.internal.PlatformDependent - sun.misc.Unsafe: available\n22:01:56.071 [main] DEBUG io.netty.util.internal.PlatformDependent - maxDirectMemory: 8589934592 bytes (maybe)\n22:01:56.071 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/90/dr7vn6w14vzdt65wm4tfswwc0000gp/T (java.io.tmpdir)\n22:01:56.071 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)\n22:01:56.072 [main] DEBUG io.netty.util.internal.PlatformDependent - Platform: MacOS\n22:01:56.072 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes\n22:01:56.072 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1\n22:01:56.073 [main] DEBUG io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available\n22:01:56.073 [main] DEBUG io.netty.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false\n22:01:56.076 [main] DEBUG shaded2.io.netty.util.internal.logging.InternalLoggerFactory - Using SLF4J as the default logging framework\n22:01:56.090 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - -Dio.netty.noUnsafe: false\n22:01:56.090 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - Java version: 11\n22:01:56.090 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.theUnsafe: available\n22:01:56.090 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.copyMemory: available\n22:01:56.091 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - sun.misc.Unsafe.storeFence: available\n22:01:56.091 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - java.nio.Buffer.address: available\n22:01:56.091 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - direct buffer constructor: unavailable: Reflective setAccessible(true) disabled\n22:01:56.091 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - java.nio.Bits.unaligned: available, true\n22:01:56.092 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: class shaded2.io.netty.util.internal.PlatformDependent0$7 cannot access class jdk.internal.misc.Unsafe (in module java.base) because module java.base does not export jdk.internal.misc to unnamed module @75e32c4c\n22:01:56.092 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent0 - java.nio.DirectByteBuffer.&lt;init&gt;(long, int): unavailable\n22:01:56.092 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - sun.misc.Unsafe: available\n22:01:56.092 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - maxDirectMemory: 8589934592 bytes (maybe)\n22:01:56.092 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - -Dio.netty.tmpdir: /var/folders/90/dr7vn6w14vzdt65wm4tfswwc0000gp/T (java.io.tmpdir)\n22:01:56.092 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - -Dio.netty.bitMode: 64 (sun.arch.data.model)\n22:01:56.092 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - Platform: MacOS\n22:01:56.093 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - -Dio.netty.maxDirectMemory: -1 bytes\n22:01:56.093 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - -Dio.netty.uninitializedArrayAllocationThreshold: -1\n22:01:56.093 [main] DEBUG shaded2.io.netty.util.internal.CleanerJava9 - java.nio.ByteBuffer.cleaner(): available\n22:01:56.093 [main] DEBUG shaded2.io.netty.util.internal.PlatformDependent - -Dio.netty.noPreferDirect: false\n22:01:56.095 [main] DEBUG shaded2.io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.workdir: /var/folders/90/dr7vn6w14vzdt65wm4tfswwc0000gp/T (io.netty.tmpdir)\n22:01:56.095 [main] DEBUG shaded2.io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.deleteLibAfterLoading: true\n22:01:56.095 [main] DEBUG shaded2.io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.tryPatchShadedId: true\n22:01:56.095 [main] DEBUG shaded2.io.netty.util.internal.NativeLibraryLoader - -Dio.netty.native.detectNativeLibraryDuplicates: true\n22:01:56.110 [main] DEBUG shaded2.io.netty.util.internal.NativeLibraryLoader - Execution of 'install_name_tool -id Zu9wWlVpYUcosy50wS6A1VvqOI5ddgPAT8eIVm /var/folders/90/dr7vn6w14vzdt65wm4tfswwc0000gp/T/libshaded2_netty_transport_native_kqueue_aarch_641290578488165430543.dylib' succeed: 0\n22:01:56.149 [main] DEBUG shaded2.io.netty.util.internal.NativeLibraryLoader - Execution of 'codesign -s - /var/folders/90/dr7vn6w14vzdt65wm4tfswwc0000gp/T/libshaded2_netty_transport_native_kqueue_aarch_641290578488165430543.dylib' succeed: 0\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.392 s &lt;&lt;&lt; FAILURE! - in io.netty.testsuite.shading.ShadingIT\n[ERROR] testShadingNativeTransport  Time elapsed: 0.385 s  &lt;&lt;&lt; ERROR!\njava.lang.UnsatisfiedLinkError: failed to load the required native library\n\tat io.netty.testsuite.shading.ShadingIT.testShading0(ShadingIT.java:54)\n\tat io.netty.testsuite.shading.ShadingIT.testShadingNativeTransport(ShadingIT.java:37)\nCaused by: java.lang.NoClassDefFoundError: shaded2/io/netty/channel/kqueue/KQueueStaticallyReferencedJniMethods (wrong name: shaded2//io/netty/channel/kqueue/KQueueStaticallyReferencedJniMethods)\n\tat io.netty.testsuite.shading.ShadingIT.testShading0(ShadingIT.java:52)\n\tat io.netty.testsuite.shading.ShadingIT.testShadingNativeTransport(ShadingIT.java:37)\n</code></pre></div>\n</details>\n<p dir=\"auto\">I see the similar failure for epoll on Linux ARM64 as well:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"...\nCaused by: java.lang.NoClassDefFoundError: shaded2/io/netty/channel/epoll/NativeStaticallyReferencedJniMethods (wrong name: shaded2//io/netty/channel/epoll/NativeStaticallyReferencedJniMethods)\n\tat io.netty.testsuite.shading.ShadingIT.testShading0(ShadingIT.java:52)\n\tat io.netty.testsuite.shading.ShadingIT.testShadingNativeTransport(ShadingIT.java:37)\"><pre class=\"notranslate\"><code class=\"notranslate\">...\nCaused by: java.lang.NoClassDefFoundError: shaded2/io/netty/channel/epoll/NativeStaticallyReferencedJniMethods (wrong name: shaded2//io/netty/channel/epoll/NativeStaticallyReferencedJniMethods)\n\tat io.netty.testsuite.shading.ShadingIT.testShading0(ShadingIT.java:52)\n\tat io.netty.testsuite.shading.ShadingIT.testShadingNativeTransport(ShadingIT.java:37)\n</code></pre></div>\n<p dir=\"auto\">What's the current state of <code class=\"notranslate\">testsuite-shading</code>? It is running as a part of the CI process?</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">Branch <code class=\"notranslate\">4.1</code> <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/netty/netty/commit/f901ea2e712d9d16e199aaeb7b622e36944eb8dd/hovercard\" href=\"https://github.com/netty/netty/commit/f901ea2e712d9d16e199aaeb7b622e36944eb8dd\"><tt>f901ea2</tt></a></p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">macOS:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\u276f java -version\nopenjdk version &quot;11.0.14&quot; 2022-01-18 LTS\nOpenJDK Runtime Environment Zulu11.54+23-CA (build 11.0.14+9-LTS)\nOpenJDK 64-Bit Server VM Zulu11.54+23-CA (build 11.0.14+9-LTS, mixed mode)\"><pre class=\"notranslate\"><code class=\"notranslate\">\u276f java -version\nopenjdk version \"11.0.14\" 2022-01-18 LTS\nOpenJDK Runtime Environment Zulu11.54+23-CA (build 11.0.14+9-LTS)\nOpenJDK 64-Bit Server VM Zulu11.54+23-CA (build 11.0.14+9-LTS, mixed mode)\n</code></pre></div>\n<p dir=\"auto\">Linux:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\u276f java -version\nopenjdk version &quot;11.0.8&quot; 2020-07-14 LTS\nOpenJDK Runtime Environment Zulu11.41+75-CA (build 11.0.8+10-LTS)\nOpenJDK 64-Bit Server VM Zulu11.41+75-CA (build 11.0.8+10-LTS, mixed mode)\"><pre class=\"notranslate\"><code class=\"notranslate\">\u276f java -version\nopenjdk version \"11.0.8\" 2020-07-14 LTS\nOpenJDK Runtime Environment Zulu11.41+75-CA (build 11.0.8+10-LTS)\nOpenJDK 64-Bit Server VM Zulu11.41+75-CA (build 11.0.8+10-LTS, mixed mode)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">macOS:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\u276f uname -a\nDarwin ... 21.4.0 Darwin Kernel Version 21.4.0: Mon Feb 21 20:35:58 PST 2022; root:xnu-8020.101.4~2/RELEASE_ARM64_T6000 arm64\"><pre class=\"notranslate\"><code class=\"notranslate\">\u276f uname -a\nDarwin ... 21.4.0 Darwin Kernel Version 21.4.0: Mon Feb 21 20:35:58 PST 2022; root:xnu-8020.101.4~2/RELEASE_ARM64_T6000 arm64\n</code></pre></div>\n<p dir=\"auto\">Linux:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\u276f uname -a\nLinux ... 5.15.0-27-generic #28-Ubuntu SMP Thu Apr 14 12:56:31 UTC 2022 aarch64 aarch64 aarch64 GNU/Linux\"><pre class=\"notranslate\"><code class=\"notranslate\">\u276f uname -a\nLinux ... 5.15.0-27-generic #28-Ubuntu SMP Thu Apr 14 12:56:31 UTC 2022 aarch64 aarch64 aarch64 GNU/Linux\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/12351",
                "createdAt": "2022-05-02T12:48:31Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "ci"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix typo in Blockhound integration",
        "url": "https://github.com/netty/netty/pull/12414",
        "resourcePath": "/netty/netty/pull/12414",
        "createdAt": "2022-05-18T23:29:01Z",
        "number": 12414,
        "mergeCommit": {
          "oid": "cb35e4b13485c674ea6118e9ecf99fba913a4804",
          "message": "Fix typo in Blockhound integration (#12414)\n\nMotivation:\r\nWe have a typo in the list of places where Blockhound should allow blocking calls.\r\nThis caused Blockhound to sometimes flag NetUtil as making blocking calls, instead of allowing them.\r\n\r\nModification:\r\nFix the typo in the allow-list to match the NetUtil class.\r\n\r\nResult:\r\nFixes #12411",
          "commitUrl": "https://github.com/netty/netty/commit/cb35e4b13485c674ea6118e9ecf99fba913a4804",
          "parents": {
            "nodes": [
              {
                "oid": "b61d7d40f40e3a797e8a60cd567f849a9799c771",
                "message": "Fix the default chunk size to 4MiB (#12407)\n\nMotivation:\r\n\r\nSince the defaultMaxOrder equals 9, fix the try catch block with setting defaultMaxOrder with 9, to meet the requirement of default 4 MiB chunk size\r\n\r\nModification:\r\n\r\nmodify the try catch block cope with defaultMaxOrder to 9"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/Hidden.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c844ELxe2gAoOGQyY2U4MDdhYjY3YTJhMGExYzU0YTljN2RkYzk4ZTc2M2FiOGU5NA",
                "url": "https://github.com/netty/netty/pull/12414/commits/8d2ce807ab67a2a0a1c54a9c7ddc98e763ab8e94"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12411,
                "url": "https://github.com/netty/netty/issues/12411",
                "title": "BlockHound detects blocking call with webflux webclient for simple http calling",
                "bodyHTML": "<p dir=\"auto\">I am on spring boot 2.6.7</p>\n<p dir=\"auto\">Calling</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"webClient\n                .get()\n                .uri(&quot;/me&quot;, queryString)\n                .exchangeToMono(clientResponse -&gt; {\n                    if (clientResponse.statusCode().equals(HttpStatus.OK)) {\n                        return clientResponse.bodyToMono(FacebookAuthResponse.class);\n                    }\n                    return Mono.empty();\n                })\n                .filter(facebookAuthResponse -&gt;\n                        StringUtils.hasLength(facebookAuthResponse.getId())\n                                &amp;&amp; StringUtils.hasLength(facebookAuthResponse.getName())\n                                &amp;&amp; StringUtils.hasLength(facebookAuthResponse.getEmail())\n                )\n                .switchIfEmpty(Mono.error(new Exception()))\n                .onErrorResume((ex) -&gt; {ex.printStackTrace(); return Mono.empty();})\n                ;\"><pre class=\"notranslate\"><code class=\"notranslate\">webClient\n                .get()\n                .uri(\"/me\", queryString)\n                .exchangeToMono(clientResponse -&gt; {\n                    if (clientResponse.statusCode().equals(HttpStatus.OK)) {\n                        return clientResponse.bodyToMono(FacebookAuthResponse.class);\n                    }\n                    return Mono.empty();\n                })\n                .filter(facebookAuthResponse -&gt;\n                        StringUtils.hasLength(facebookAuthResponse.getId())\n                                &amp;&amp; StringUtils.hasLength(facebookAuthResponse.getName())\n                                &amp;&amp; StringUtils.hasLength(facebookAuthResponse.getEmail())\n                )\n                .switchIfEmpty(Mono.error(new Exception()))\n                .onErrorResume((ex) -&gt; {ex.printStackTrace(); return Mono.empty();})\n                ;\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: reactor.blockhound.BlockingOperationError: Blocking call! java.io.FileInputStream#readBytes\n\tat java.base/java.io.FileInputStream.readBytes(FileInputStream.java)\n\tat java.base/java.io.FileInputStream.read(FileInputStream.java:276)\n\tat java.base/sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:270)\n\tat java.base/sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:313)\n\tat java.base/sun.nio.cs.StreamDecoder.read(StreamDecoder.java:188)\n\tat java.base/java.io.InputStreamReader.read(InputStreamReader.java:177)\n\tat java.base/java.io.BufferedReader.fill(BufferedReader.java:162)\n\tat java.base/java.io.BufferedReader.readLine(BufferedReader.java:329)\n\tat java.base/java.io.BufferedReader.readLine(BufferedReader.java:396)\n\tat io.netty.util.NetUtil$SoMaxConnAction.run(NetUtil.java:171)\n\tat io.netty.util.NetUtil$SoMaxConnAction.run(NetUtil.java:155)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:318)\n\tat io.netty.util.NetUtil.&lt;clinit&gt;(NetUtil.java:152)\n\tat reactor.netty.transport.AddressUtils.attemptParsingIpString(AddressUtils.java:238)\n\tat reactor.netty.transport.AddressUtils.createForIpString(AddressUtils.java:259)\n\tat reactor.netty.transport.AddressUtils.createInetSocketAddress(AddressUtils.java:56)\n\tat reactor.netty.transport.AddressUtils.createUnresolved(AddressUtils.java:86)\n\tat reactor.netty.http.client.UriEndpointFactory.lambda$createUriEndpoint$0(UriEndpointFactory.java:64)\n\tat reactor.netty.http.client.UriEndpoint.toExternalForm(UriEndpoint.java:63)\n\tat reactor.netty.http.client.HttpClientConnect$HttpClientHandler.&lt;init&gt;(HttpClientConnect.java:510)\n\tat reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:208)\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\n\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:238)\n\tat reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)\n\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\n\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\n\tat reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:113)\n\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\n\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)\n\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)\n\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)\n\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)\n\tat reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:200)\n\tat reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:57)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\n\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:282)\n\tat reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:863)\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\n\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)\n\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onNext(FluxConcatArray.java:201)\n\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398)\n\tat reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onSubscribe(FluxConcatArray.java:193)\n\tat reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:258)\n\tat reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:78)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:451)\n\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:219)\n\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)\n\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:263)\n\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)\n\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:236)\n\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onComplete(FluxFilterWhen.java:153)\n\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:294)\n\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:230)\n\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\n\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)\n\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:263)\n\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.Mono.subscribeWith(Mono.java:4515)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4371)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4307)\n\tat org.springframework.test.web.reactive.server.HttpHandlerConnector.lambda$doConnect$2(HttpHandlerConnector.java:98)\n\tat org.springframework.mock.http.client.reactive.MockClientHttpRequest.lambda$null$2(MockClientHttpRequest.java:124)\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.FluxConcatIterable$ConcatIterableSubscriber.onComplete(FluxConcatIterable.java:147)\n\tat reactor.core.publisher.FluxConcatIterable.subscribe(FluxConcatIterable.java:60)\n\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\n\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\n\tat reactor.core.publisher.Operators$MonoInnerProducerBase.complete(Operators.java:2664)\n\tat reactor.core.publisher.MonoSingle$SingleSubscriber.onComplete(MonoSingle.java:180)\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\n\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\n\tat reactor.core.publisher.MonoSingle$SingleSubscriber.doOnRequest(MonoSingle.java:103)\n\tat reactor.core.publisher.Operators$MonoInnerProducerBase.request(Operators.java:2731)\n\tat reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2194)\n\tat reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2068)\n\tat reactor.core.publisher.MonoSingle$SingleSubscriber.onSubscribe(MonoSingle.java:115)\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\n\tat reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.Mono.subscribeWith(Mono.java:4515)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4371)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4307)\n\tat org.springframework.test.web.reactive.server.HttpHandlerConnector.doConnect(HttpHandlerConnector.java:112)\n\tat org.springframework.test.web.reactive.server.HttpHandlerConnector.lambda$connect$0(HttpHandlerConnector.java:79)\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:126)\n\tat reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)\n\tat reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: reactor.blockhound.BlockingOperationError: Blocking call! java.io.FileInputStream#readBytes\n\tat java.base/java.io.FileInputStream.readBytes(FileInputStream.java)\n\tat java.base/java.io.FileInputStream.read(FileInputStream.java:276)\n\tat java.base/sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:270)\n\tat java.base/sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:313)\n\tat java.base/sun.nio.cs.StreamDecoder.read(StreamDecoder.java:188)\n\tat java.base/java.io.InputStreamReader.read(InputStreamReader.java:177)\n\tat java.base/java.io.BufferedReader.fill(BufferedReader.java:162)\n\tat java.base/java.io.BufferedReader.readLine(BufferedReader.java:329)\n\tat java.base/java.io.BufferedReader.readLine(BufferedReader.java:396)\n\tat io.netty.util.NetUtil$SoMaxConnAction.run(NetUtil.java:171)\n\tat io.netty.util.NetUtil$SoMaxConnAction.run(NetUtil.java:155)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:318)\n\tat io.netty.util.NetUtil.&lt;clinit&gt;(NetUtil.java:152)\n\tat reactor.netty.transport.AddressUtils.attemptParsingIpString(AddressUtils.java:238)\n\tat reactor.netty.transport.AddressUtils.createForIpString(AddressUtils.java:259)\n\tat reactor.netty.transport.AddressUtils.createInetSocketAddress(AddressUtils.java:56)\n\tat reactor.netty.transport.AddressUtils.createUnresolved(AddressUtils.java:86)\n\tat reactor.netty.http.client.UriEndpointFactory.lambda$createUriEndpoint$0(UriEndpointFactory.java:64)\n\tat reactor.netty.http.client.UriEndpoint.toExternalForm(UriEndpoint.java:63)\n\tat reactor.netty.http.client.HttpClientConnect$HttpClientHandler.&lt;init&gt;(HttpClientConnect.java:510)\n\tat reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:208)\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:249)\n\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:238)\n\tat reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)\n\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\n\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\n\tat reactor.core.publisher.FluxFilter$FilterSubscriber.onNext(FluxFilter.java:113)\n\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:151)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:295)\n\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\n\tat reactor.core.publisher.Operators$MonoSubscriber.complete(Operators.java:1816)\n\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:159)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126)\n\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)\n\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onSubscribe(MonoCollect.java:103)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)\n\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)\n\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)\n\tat reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:200)\n\tat reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:57)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\n\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:282)\n\tat reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:863)\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:120)\n\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)\n\tat reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\n\tat reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onNext(FluxConcatArray.java:201)\n\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2398)\n\tat reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onSubscribe(FluxConcatArray.java:193)\n\tat reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.FluxConcatArray$ConcatArraySubscriber.onComplete(FluxConcatArray.java:258)\n\tat reactor.core.publisher.FluxConcatArray.subscribe(FluxConcatArray.java:78)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.drain(FluxConcatMap.java:451)\n\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.onSubscribe(FluxConcatMap.java:219)\n\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)\n\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:263)\n\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onComplete(MonoNext.java:102)\n\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.drain(FluxFilterWhen.java:236)\n\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onComplete(FluxFilterWhen.java:153)\n\tat reactor.core.publisher.FluxIterable$IterableSubscription.slowPath(FluxIterable.java:294)\n\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:230)\n\tat reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber.onSubscribe(FluxFilterWhen.java:200)\n\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:165)\n\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:87)\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:64)\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:52)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:263)\n\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.Mono.subscribeWith(Mono.java:4515)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4371)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4307)\n\tat org.springframework.test.web.reactive.server.HttpHandlerConnector.lambda$doConnect$2(HttpHandlerConnector.java:98)\n\tat org.springframework.mock.http.client.reactive.MockClientHttpRequest.lambda$null$2(MockClientHttpRequest.java:124)\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.FluxConcatIterable$ConcatIterableSubscriber.onComplete(FluxConcatIterable.java:147)\n\tat reactor.core.publisher.FluxConcatIterable.subscribe(FluxConcatIterable.java:60)\n\tat reactor.core.publisher.MonoFromFluxOperator.subscribe(MonoFromFluxOperator.java:81)\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:157)\n\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\n\tat reactor.core.publisher.Operators$MonoInnerProducerBase.complete(Operators.java:2664)\n\tat reactor.core.publisher.MonoSingle$SingleSubscriber.onComplete(MonoSingle.java:180)\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:150)\n\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2400)\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:169)\n\tat reactor.core.publisher.MonoSingle$SingleSubscriber.doOnRequest(MonoSingle.java:103)\n\tat reactor.core.publisher.Operators$MonoInnerProducerBase.request(Operators.java:2731)\n\tat reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2194)\n\tat reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2068)\n\tat reactor.core.publisher.MonoSingle$SingleSubscriber.onSubscribe(MonoSingle.java:115)\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\n\tat reactor.core.publisher.MonoJust.subscribe(MonoJust.java:55)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.Mono.subscribeWith(Mono.java:4515)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4371)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4307)\n\tat org.springframework.test.web.reactive.server.HttpHandlerConnector.doConnect(HttpHandlerConnector.java:112)\n\tat org.springframework.test.web.reactive.server.HttpHandlerConnector.lambda$connect$0(HttpHandlerConnector.java:79)\n\tat reactor.core.publisher.MonoDefer.subscribe(MonoDefer.java:44)\n\tat reactor.core.publisher.Mono.subscribe(Mono.java:4400)\n\tat reactor.core.publisher.MonoSubscribeOn$SubscribeOnSubscriber.run(MonoSubscribeOn.java:126)\n\tat reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84)\n\tat reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/12411",
                "createdAt": "2022-05-18T20:52:43Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow blocking calls in JdkSslContext class initializer",
        "url": "https://github.com/netty/netty/pull/12435",
        "resourcePath": "/netty/netty/pull/12435",
        "createdAt": "2022-05-31T22:58:36Z",
        "number": 12435,
        "mergeCommit": {
          "oid": "56f7c50d19125dad36b97ed33d9797da941a7591",
          "message": "Allow blocking calls in JdkSslContext class initializer (#12435)\n\nMotivation:\r\nClasses might be initialized inside the event loop where blocking calls are otherwise forbidden.\r\nThe JdkSslContext has a blocking call in its class initializer through initializing the Java SSLContext which does IO to deserialize its key store.\r\n\r\nModification:\r\nCollect the class initialization code in a method, and allow it to have blocking calls in blockhound.\r\n\r\nResult:\r\nNo more blockhound warnings about blocking calls in JdkSslContext class initializer.\r\n\r\nFixes #12425\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/56f7c50d19125dad36b97ed33d9797da941a7591",
          "parents": {
            "nodes": [
              {
                "oid": "8098219df6874ac88c702e9556de0a63671d81b4",
                "message": "Makes Brotli more native compilation friendly (#12409)\n\nMotivation:\r\nCompressorHttp2ConnectionEncoder shouldn't load anything specific to Brotli if it isn't available\r\n\r\nModification:\r\nAllows a null Brotli option to be passed to CompressorHttp2ConnectionEncoder\r\n\r\nResult:\r\nGraalVM Native compilation without Brotli doesn't requires Brotli classes"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/Hidden.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/JdkSslContext.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c844xgcd2gAoYTdmY2ExOWQyMjFhZGZhYTA5YjJlMTg3NDI3YzUzYzUxYmM4M2NkNw",
                "url": "https://github.com/netty/netty/pull/12435/commits/a7fca19d221adfaa09b2e187427c53c51bc83cd7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12425,
                "url": "https://github.com/netty/netty/issues/12425",
                "title": "Jdk sslhandler have blocking call",
                "bodyHTML": "<p dir=\"auto\">I tried to integrate some reactive tests with miku-mysql and blockhound (which uses netty-handler under the hood), and noticed that there's a blocking call when using jdkssl implementation (leading to noclassdeffound in the end).<br>\nWith the netty version embedded in spring-boot-webflux 2.6.7 (tried to upgrade netty-handler version, with no more luck).</p>\n<p dir=\"auto\">What info do you need?</p>\n<p dir=\"auto\">Bests</p>",
                "resourcePath": "/netty/netty/issues/12425",
                "createdAt": "2022-05-25T13:56:26Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove the last references to JUnit 4",
        "url": "https://github.com/netty/netty/pull/12442",
        "resourcePath": "/netty/netty/pull/12442",
        "createdAt": "2022-06-03T00:30:43Z",
        "number": 12442,
        "mergeCommit": {
          "oid": "c42a207f7242b2bdd170cc463b49bf50c7334165",
          "message": "Remove the last references to JUnit 4 (#12442)\n\nMotivation:\r\nThis completes our migration to JUnit 5.\r\n\r\nModification:\r\nRemove all JUnit 4 dependencies.\r\nReplace or remove the last references to JUnit 4 types in the code.\r\nAdd a revapi exception because a public TestUtils method was exposing JUnit 4 types and had to be removed.\r\n\r\nResult:\r\nNo more JUnit 4 in our project.\r\n\r\nFixes #10757",
          "commitUrl": "https://github.com/netty/netty/commit/c42a207f7242b2bdd170cc463b49bf50c7334165",
          "parents": {
            "nodes": [
              {
                "oid": "56f7c50d19125dad36b97ed33d9797da941a7591",
                "message": "Allow blocking calls in JdkSslContext class initializer (#12435)\n\nMotivation:\r\nClasses might be initialized inside the event loop where blocking calls are otherwise forbidden.\r\nThe JdkSslContext has a blocking call in its class initializer through initializing the Java SSLContext which does IO to deserialize its key store.\r\n\r\nModification:\r\nCollect the class initialization code in a method, and allow it to have blocking calls in blockhound.\r\n\r\nResult:\r\nNo more blockhound warnings about blocking calls in JdkSslContext class initializer.\r\n\r\nFixes #12425\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/test/resources/io/netty/handler/codec/xml/sample-04.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "microbench/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite-native/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite-shading/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite/src/main/java/io/netty/testsuite/transport/socket/DatagramUnicastIPv6Test.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite/src/main/java/io/netty/testsuite/util/TestUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common-tests/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common-tests/src/main/java/io/netty/channel/unix/tests/SocketTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c845Bf1U2gAoNTBhMmU3YmFiMmNiMWNlYTIyNzAzM2Q1NmU5ZjgwN2Y1ZTliYzFlMQ",
                "url": "https://github.com/netty/netty/pull/12442/commits/50a2e7bab2cb1cea227033d56e9f807f5e9bc1e1"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 10757,
                "url": "https://github.com/netty/netty/issues/10757",
                "title": "Migrating to JUnit 5",
                "bodyHTML": "<p dir=\"auto\">I propose that we start migrating the test suite for Netty 5 (the <code class=\"notranslate\">master</code> branch) to JUnit 5.</p>\n<p dir=\"auto\">JUnit 5 is more expressive, extensible, and composable in many ways, and it's better able to run tests in parallel.<br>\nIt can also directly run JUnit 4 tests, using the vintage engine, which means we can do this in small steps; there's no need to migrate all tests all at once.</p>\n<p dir=\"auto\">Once the JUnit 5 infrastructure is there, tests or modules can be migrated one by one, or be left as is for the time being. Regardless, new tests that are only added to the <code class=\"notranslate\">master</code> branch can immediately use the new JUnit 5 test APIs.</p>\n<p dir=\"auto\">Some benefits I anticipate are:</p>\n<ol dir=\"auto\">\n<li>Some tests will become easier to write, because JUnit 5 is more capable at expressing nesting of tests, and parameterisations.</li>\n<li>Builds should complete faster because JUnit 5 is better able to run tests in parallel. This is something that needs to be enabled explicitly, however, since it can cause latent test isolation failures to pop up.</li>\n<li>JUnit 5 is extensible enough that something like <code class=\"notranslate\">TimedOutTestsListener</code> won't need to live in the <code class=\"notranslate\">netty-build</code> anymore.</li>\n</ol>\n<p dir=\"auto\">A drawback I can think of is that forward porting changes to a JUnit 4 test in Netty <code class=\"notranslate\">4.1</code>, to a migrated JUnit 5 test in <code class=\"notranslate\">master</code>, will be more challenging and add to the workload of doing changes in <code class=\"notranslate\">4.1</code>.</p>\n<p dir=\"auto\">What do people think?</p>",
                "resourcePath": "/netty/netty/issues/10757",
                "createdAt": "2020-10-30T15:10:12Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "help wanted"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow controlling time flow for EmbeddedEventLoop",
        "url": "https://github.com/netty/netty/pull/12459",
        "resourcePath": "/netty/netty/pull/12459",
        "createdAt": "2022-06-10T12:58:27Z",
        "number": 12459,
        "mergeCommit": {
          "oid": "c18fc2bc68c08805b2553336a3bf02f0c8c50972",
          "message": "Allow controlling time flow for EmbeddedEventLoop (#12459)\n\nMotivation:\r\n\r\nTests using EmbeddedEventLoop can run faster if they can \"advance time\" so that scheduled tasks (e.g. timeouts) run earlier. Additionally, \"freeze time\" functionality can improve reliability of such tests.\r\n\r\nModification:\r\n\r\n- Introduce a protected method `AbstractScheduledEventExecutor.getCurrentTimeNanos` that replaces the previous static `nanoTime` method (now deprecated). Replace usages of `nanoTime` with the new method.\r\n- Override `getCurrentTimeNanos` with the new time control (freeze, unfreeze, advanceBy) features in `EmbeddedEventLoop`.\r\n- Add a microbenchmark that tests one of the sites that seemed most likely to see negative performance impact by the change (`ScheduledFutureTask.delayNanos`).\r\n\r\nResult:\r\n\r\nFixes  #12433. \r\n\r\nLocal runs of the `ScheduleFutureTaskBenchmark` microbenchmark shows no evidence for performance impact (within error bounds of each other):\r\n\r\n```\r\nbefore:\r\nBenchmark                                                   (num)   Mode  Cnt    Score    Error  Units\r\nScheduleFutureTaskBenchmark.scheduleCancelLotsOutsideLoop  100000  thrpt   20  132.437 \u00b1 15.116  ops/s\r\nScheduleFutureTaskBenchmark.scheduleLots                   100000  thrpt   20  694.475 \u00b1  8.184  ops/s\r\nScheduleFutureTaskBenchmark.scheduleLotsOutsideLoop        100000  thrpt   20   88.037 \u00b1  4.013  ops/s\r\nafter:\r\nBenchmark                                                   (num)   Mode  Cnt    Score   Error  Units\r\nScheduleFutureTaskBenchmark.scheduleCancelLotsOutsideLoop  100000  thrpt   20  149.629 \u00b1 7.514  ops/s\r\nScheduleFutureTaskBenchmark.scheduleLots                   100000  thrpt   20  688.954 \u00b1 7.831  ops/s\r\nScheduleFutureTaskBenchmark.scheduleLotsOutsideLoop        100000  thrpt   20   85.426 \u00b1 1.104  ops/s\r\n```\r\n\r\nThe new `ScheduleFutureTaskDeadlineBenchmark` shows some performance degradation:\r\n\r\n```\r\nbefore:\r\nBenchmark                                             Mode  Cnt         Score        Error  Units\r\nScheduleFutureTaskDeadlineBenchmark.requestDeadline  thrpt   20  60726336.795 \u00b1 280054.533  ops/s\r\nafter:\r\nBenchmark                                             Mode  Cnt         Score        Error  Units\r\nScheduleFutureTaskDeadlineBenchmark.requestDeadline  thrpt   20  56948231.480 \u00b1 188264.092  ops/s\r\n```\r\n\r\nThe difference is small, but it's there, so I investigated this further using jitwatch. Looking at the generated assembly, the call to `getCurrentTimeNanos` is devirtualized and inlined in the absence of `EmbeddedEventLoop`, so the code is mostly identical. However there is the added getfield and checkcast for the executor, which probably explains the discrepancy.\r\n\r\nIn my opinion this is acceptable, because the performance impact is not severe, this use is likely the worst case (virtual call through `scheduledExecutorService()`), and it is never as hot as in this benchmark.\r\n\r\nNote that if an `EmbeddedEventLoop` is present in the application, the performance impact is likely substantially higher, because this would necessitate a virtual call. However this is not an issue for production applications, and the affected code is still not very hot.\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/c18fc2bc68c08805b2553336a3bf02f0c8c50972",
          "parents": {
            "nodes": [
              {
                "oid": "db8d5c5ae73e25131cc8e48d2126cfabdcd686c1",
                "message": "Fix race in FlowControlHandlerTest that could lead to a NPE (#12457)\n\nMotivation:\r\n\r\nHow we accessed the internal state of the handler was not thread safe and so we could see a NPE during testing like:\r\n\r\n```\r\n2022-06-09T10:27:09.1309221Z java.lang.NullPointerException: Cannot invoke \"io.netty5.handler.flow.FlowControlHandler$RecyclableArrayDeque.isEmpty()\" because \"this.queue\" is null\r\n2022-06-09T10:27:09.1310056Z \tat io.netty5.handler.flow.FlowControlHandler.isQueueEmpty(FlowControlHandler.java:90)\r\n2022-06-09T10:27:09.1310829Z \tat io.netty5.handler.flow.FlowControlHandlerTest.testFlowAutoReadOff(FlowControlHandlerTest.java:370)\r\n2022-06-09T10:27:09.1311575Z \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n2022-06-09T10:27:09.1312301Z \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n2022-06-09T10:27:09.1313093Z \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n2022-06-09T10:27:09.1313760Z \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n2022-06-09T10:27:09.1314400Z \tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)\r\n2022-06-09T10:27:09.1315137Z \tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\r\n2022-06-09T10:27:09.1315983Z \tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\r\n2022-06-09T10:27:09.1316828Z \tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\r\n2022-06-09T10:27:09.1317641Z \tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\r\n2022-06-09T10:27:09.1318493Z \tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\r\n2022-06-09T10:27:09.1319348Z \tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\r\n2022-06-09T10:27:09.1320165Z \tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\r\n2022-06-09T10:27:09.1321012Z \tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\r\n2022-06-09T10:27:09.1322136Z \tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\r\n2022-06-09T10:27:09.1323045Z \tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\r\n2022-06-09T10:27:09.1323943Z \tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\r\n2022-06-09T10:27:09.1324743Z \tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\r\n2022-06-09T10:27:09.1325482Z \tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\r\n2022-06-09T10:27:09.1326315Z \tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)\r\n2022-06-09T10:27:09.1327204Z \tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n2022-06-09T10:27:09.1328123Z \tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)\r\n2022-06-09T10:27:09.1329864Z \tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)\r\n2022-06-09T10:27:09.1330733Z \tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)\r\n2022-06-09T10:27:09.1331591Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\r\n2022-06-09T10:27:09.1332454Z \tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n2022-06-09T10:27:09.1333319Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n2022-06-09T10:27:09.1334081Z \tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n2022-06-09T10:27:09.1334851Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n2022-06-09T10:27:09.1335715Z \tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n2022-06-09T10:27:09.1336583Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n2022-06-09T10:27:09.1337418Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n2022-06-09T10:27:09.1338067Z \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n2022-06-09T10:27:09.1338985Z \tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n2022-06-09T10:27:09.1340052Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n2022-06-09T10:27:09.1340908Z \tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n2022-06-09T10:27:09.1341965Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n2022-06-09T10:27:09.1342739Z \tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n2022-06-09T10:27:09.1343508Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n2022-06-09T10:27:09.1344444Z \tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n2022-06-09T10:27:09.1345330Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n2022-06-09T10:27:09.1346176Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n2022-06-09T10:27:09.1346868Z \tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n2022-06-09T10:27:09.1347789Z \tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\r\n2022-06-09T10:27:09.1348854Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\r\n2022-06-09T10:27:09.1349822Z \tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n2022-06-09T10:27:09.1350695Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\r\n2022-06-09T10:27:09.1351529Z \tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\r\n2022-06-09T10:27:09.1352298Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\r\n2022-06-09T10:27:09.1353161Z \tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\r\n2022-06-09T10:27:09.1354049Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\r\n2022-06-09T10:27:09.1354894Z \tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\r\n2022-06-09T10:27:09.1355997Z \tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\r\n2022-06-09T10:27:09.1357115Z \tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\r\n2022-06-09T10:27:09.1358070Z \tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\r\n2022-06-09T10:27:09.1358898Z \tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\r\n2022-06-09T10:27:09.1359628Z \tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\r\n2022-06-09T10:27:09.1360424Z \tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\r\n2022-06-09T10:27:09.1361216Z \tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\r\n2022-06-09T10:27:09.1361937Z \tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\r\n2022-06-09T10:27:09.1362790Z \tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)\r\n2022-06-09T10:27:09.1363688Z \tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)\r\n2022-06-09T10:27:09.1364571Z \tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n2022-06-09T10:27:09.1365399Z \tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n2022-06-09T10:27:09.1366134Z \tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n2022-06-09T10:27:09.1366804Z \tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\n2022-06-09T10:27:09.1375974Z\r\n```\r\n\r\nModifications:\r\n\r\nDispatch the EventLoop before accessing the state\r\n\r\nResult:\r\n\r\nNo more NPE possible"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/concurrent/AbstractScheduledEventExecutor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/concurrent/GlobalEventExecutor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/concurrent/ScheduledFutureTask.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/concurrent/SingleThreadEventExecutor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/concurrent/AbstractScheduledEventExecutorTest.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "common/src/test/java/io/netty/util/concurrent/ScheduledFutureTaskTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "microbench/src/main/java/io/netty/util/concurrent/ScheduledFutureTaskDeadlineBenchmark.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/embedded/EmbeddedChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/embedded/EmbeddedEventLoop.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/channel/embedded/EmbeddedChannelTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c845dwI22gAoY2YxNzU0OWMwN2YyNTYxMWZlMjA0MjBiNTUyMDExNTdiYzQ5MWI4MA",
                "url": "https://github.com/netty/netty/pull/12459/commits/cf17549c07f25611fe20420b55201157bc491b80"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12433,
                "url": "https://github.com/netty/netty/issues/12433",
                "title": "Allow EmbeddedChannel users to control the scheduler time",
                "bodyHTML": "<p dir=\"auto\">It would be useful if EmbeddedChannel provided a way to manage the scheduler time (e.g. freeze or advance the nanoTime used internally). This would allow race-free testing of time-based algorithms.</p>\n<p dir=\"auto\">I want to try working on this, this issue is to make sure it's not a stupid idea that will be rejected :)</p>\n<p dir=\"auto\">Constraints are:</p>\n<ul dir=\"auto\">\n<li>performance of normal (non-embedded) EventExecutor should not be affected.</li>\n<li>compatibility with current EmbeddedEventLoop behavior must be retained.</li>\n</ul>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Tests using EmbeddedChannel should be able to (1) stop scheduled tasks from executing too early even if they're scheduled very tightly, and (2) execute future tasks earlier than their nominal deadline.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Tests have to use Thread.sleep to wait for scheduled tasks to reach their deadline.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.77.Final</p>",
                "resourcePath": "/netty/netty/issues/12433",
                "createdAt": "2022-05-30T12:14:20Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix FlowControlHandler's autoreading breakage.",
        "url": "https://github.com/netty/netty/pull/12467",
        "resourcePath": "/netty/netty/pull/12467",
        "createdAt": "2022-06-14T12:39:00Z",
        "number": 12467,
        "mergeCommit": {
          "oid": "7971075bbe9f5509c8b20c0e702ec2affb37d76e",
          "message": "Fix FlowControlHandler's autoreading breakage. (#12467)\n\n \r\nMotivation:\r\n\r\nFlowControlHandler breaks auto-reading (i.e. the channel does not auto-read even though its config has auto-read set to true). This happens when auto-read is turned on when the queue is not empty. The reason is that FlowControlHandler.read() does not pass the call to the ChannelHandlerContext if at least one message has been dequeued. This is a problem when FlowControlHandler.read() has been called as a result of auto-read having been turned on (DefaultChannelConfig.setAutoRead() calling read() in case of autoRead && !oldAutoRead).\r\n \r\nModifications:\r\n\r\nAlways pass the call to read() down the pipeline.\r\n \r\nResult:\r\n\r\nAuto-reading works, regardless of the handler's queue state in the moment it is turned on.\r\nFixes #12445",
          "commitUrl": "https://github.com/netty/netty/commit/7971075bbe9f5509c8b20c0e702ec2affb37d76e",
          "parents": {
            "nodes": [
              {
                "oid": "7c05db4ce6ba5c832a6ee778808f4e5e95814281",
                "message": "[maven-release-plugin] prepare for next development iteration"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/flow/FlowControlHandler.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c845oWPa2gAoZmVhNjI0NWUzMjhhZmI2ZTRiYWYwNTNiYmJhOGEwMWY0ZTA3YjBlZA",
                "url": "https://github.com/netty/netty/pull/12467/commits/fea6245e328afb6e4baf053bbba8a01f4e07b0ed"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12445,
                "url": "https://github.com/netty/netty/issues/12445",
                "title": "FlowControlHandler breaks auto-reading",
                "bodyHTML": "<p dir=\"auto\"><em>FlowControlHandler</em> breaks auto-reading (i.e. the channel does not auto-read even though its config has auto-read set to true). This happens when auto-read is turned on when the queue is not empty. The reason is that <em>FlowControlHandler.read()</em> does not pass the call to the <em>ChannelHandlerContext</em> if at least one message has been dequeued. This is a problem when <em>FlowControlHandler.read()</em> has been called as a result of auto-read having been turned on (<em>DefaultChannelConfig.setAutoRead()</em> calling read() in case of <em>autoRead &amp;&amp; !oldAutoRead</em>).<br>\nTaking <em>ctx.read();</em> out of the body of the if statement fixes the bug and I also did not notice any unwanted side effects. I.e.:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public void read(ChannelHandlerContext ctx) throws Exception {\n    if (dequeue(ctx, 1) == 0) {\n        shouldConsume = true;\n    }\n    ctx.read();\n}\n\"><pre class=\"notranslate\"><code class=\"notranslate\">public void read(ChannelHandlerContext ctx) throws Exception {\n    if (dequeue(ctx, 1) == 0) {\n        shouldConsume = true;\n    }\n    ctx.read();\n}\n\n</code></pre></div>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Auto-reading.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Reading the messages that are already in the queue and then no auto-reading.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">On a channel with a FlowControlHandler in its pipeline, turn auto-read off while a message is in the process of being added to the handler's queue.  When the message is already in the queue, turn auto-read back on.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">It is a bit hard to reproduce with simple code so I hope that you understand the issue from my description.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">any</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">any</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">any</p>",
                "resourcePath": "/netty/netty/issues/12445",
                "createdAt": "2022-06-06T17:15:26Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Opt-out from blocking reads of OS files for classifiers",
        "url": "https://github.com/netty/netty/pull/12483",
        "resourcePath": "/netty/netty/pull/12483",
        "createdAt": "2022-06-17T15:31:45Z",
        "number": 12483,
        "mergeCommit": {
          "oid": "f43a9dd0a384eb6226e31648b7168e4fa241527d",
          "message": "Opt-out from blocking reads of OS files for classifiers (#12483)\n\nMotivation:\r\n\r\nOn initialization netty does blocking reads of /etc/os-release, /usr/lib/os-release for specific classifiers that are never available on some popular distros (e.g. ubuntu, alpine). It would be helpful to avoid such blocking reads with system property containing distro classifier.\r\n\r\nModification:\r\n\r\nIntroduce system property `io.netty.osClassifiers` containing 0, 1 or 2(comma separated) distro classifiers that are used instead of reading etc/os-release, /usr/lib/os-release.\r\n\r\nResult:\r\n\r\nSkip blocking reads of OS files for distro classifiers if `io.netty.osClassifiers` system property is present with said classifiers.",
          "commitUrl": "https://github.com/netty/netty/commit/f43a9dd0a384eb6226e31648b7168e4fa241527d",
          "parents": {
            "nodes": [
              {
                "oid": "b1a63697465ea86ccd5a6f972ca274cd2563b4a9",
                "message": "Check and skip if post body parameter name and value are empty (#12427)\n\n\r\nHTTP form bodies sometimes have RFC illegal extra ampersands in them; this has become accepted by lots of frameworks and so it makes it difficult to migrate to Netty.\r\n\r\nThis builds on top of #12016\r\n\r\nContextual information:\r\nA POST body with the following was not accepted by Netty:\r\n&foo=bar&baz=bang\r\nNow it will be.\r\n\r\nModification:\r\n\r\nSkips name and valueless attributes silently\r\n\r\nResult:\r\n\r\nLibrary now compatible with the broken internets\r\n\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/PlatformDependent.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "common/src/test/java/io/netty/util/internal/OsClassifiersTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c8453H-32gAoMmQ5ZGFjZGVhMmU5ZThiMzUyMTE0ZTY2ZWY2MjAyZDg1MzAzYjBkMw",
                "url": "https://github.com/netty/netty/pull/12483/commits/2d9dacdea2e9e8b352114e66ef6202d85303b0d3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12480,
                "url": "https://github.com/netty/netty/issues/12480",
                "title": "Opt-out from blocking reads of OS files for classifiers",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Less of redundant blocking IO in netty</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">On initialization netty does <a href=\"https://github.com/netty/netty/blob/c87c911c010c3a34a69e550d52299df20e5fc740/common/src/main/java/io/netty/util/internal/PlatformDependent.java#L231\">blocking</a> reads of <code class=\"notranslate\">/etc/os-release</code>, <code class=\"notranslate\">/usr/lib/os-release</code> for<br>\nspecific classifiers that are never available on some popular distros (e.g. ubuntu, alpine).<br>\nIt would be helpful to avoid such blocking calls with system property - e.g. <code class=\"notranslate\">-Dio.netty.readOsClassifiers=false</code>.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.78.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/12480",
                "createdAt": "2022-06-16T21:52:24Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix OSGi processor directive on aarch64",
        "url": "https://github.com/netty/netty/pull/12498",
        "resourcePath": "/netty/netty/pull/12498",
        "createdAt": "2022-06-21T23:31:52Z",
        "number": 12498,
        "mergeCommit": {
          "oid": "86d4ee41cd917e7b28a691cca1b1d0720e1d5df6",
          "message": "Fix OSGi processor directive on aarch64 (#12498)\n\nMotivation:\r\nOSGi has a limited set of permitted platform architecture names, which does not include `aarch_64` (with the underscore).\r\n\r\nModification:\r\nSince our ARM builds use separate profiles, we can fix the hardcoded OSGi processor directive to use `aarch64` as it expects, without impacting our native code loading.\r\n\r\nResult:\r\nOSGi can now load our native code modules.\r\nExcept, probably, on FreeBSD and OpenBSD, which do not have separate ARM profiles and instead rely on our `os.detected.arch` which would include the underscore.",
          "commitUrl": "https://github.com/netty/netty/commit/86d4ee41cd917e7b28a691cca1b1d0720e1d5df6",
          "parents": {
            "nodes": [
              {
                "oid": "d0f8e736c5254a04a93631ead291cd51052139e8",
                "message": "Fix race in DefaultHttp2PushPromiseFrameTest that could produce a NPE (#12521)\n\nMotivation:\n\nWe need to ensure channelActive(...) was called before trying to access ChannelHandlerContext, otherwise we might produce a NPE\n\nModifications:\n\nAdd a CountdownLatch to ensure channelActive(...) was called\n\nResult:\n\nNo more NPE possible"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns-native-macos/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c846EmsG2gAoMjBhY2FhMDZhMmViNWUxM2Y1OWJlMTFiNjRlYTUwMDhlOTRmYmYyNA",
                "url": "https://github.com/netty/netty/pull/12498/commits/20acaa06a2eb5e13f59be11b64ea5008e94fbf24"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12494,
                "url": "https://github.com/netty/netty/issues/12494",
                "title": "Use correct name alias for processor in OSGi Bundle Manifests",
                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/f43a9dd0a384eb6226e31648b7168e4fa241527d/transport-native-epoll/pom.xml#L342\">netty/transport-native-epoll/pom.xml</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 342\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/f43a9dd0a384eb6226e31648b7168e4fa241527d\">f43a9dd</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L342\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"342\"></td>\n          <td id=\"LC342\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> &lt;<span class=\"pl-ent\">Bundle-NativeCode</span>&gt;META-INF/native/libnetty_transport_native_epoll_aarch_64.so; osname=Linux; processor=aarch_64,*&lt;/<span class=\"pl-ent\">Bundle-NativeCode</span>&gt; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\"><strong>processor</strong> directive value should be \"AArch64\", not \"aarch_64\" according to:<br>\n<a href=\"http://docs.osgi.org/reference/osnames.html\" rel=\"nofollow\">http://docs.osgi.org/reference/osnames.html</a></p>\n<p dir=\"auto\">See also:<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"618995490\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty-tcnative/issues/547\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty-tcnative/pull/547/hovercard\" href=\"https://github.com/netty/netty-tcnative/pull/547\">netty/netty-tcnative#547</a></p>\n<p dir=\"auto\">Otherwise you get this error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[2022-06-10 09:50:41,357] ERROR {Framework} - FrameworkEvent ERROR org.osgi.framework.BundleException: Could not resolve module: io.netty.tcnative-boringssl-static [73]\n  Unresolved requirement: Require-Capability: osgi.native; native.paths.0:List&lt;String&gt;=&quot;META-INF/native/libnetty_tcnative_osx_x86_64.jnilib&quot;; native.paths.2:List&lt;String&gt;=&quot;META-INF/native/libnetty_tcnative_linux_x86_64.so&quot;; native.paths.1:List&lt;String&gt;=&quot;META-INF/native/libnetty_tcnative_osx_aarch_64.jnilib&quot;; native.paths.4:List&lt;String&gt;=&quot;META-INF/native/netty_tcnative_windows_x86_64.dll&quot;; native.paths.3:List&lt;String&gt;=&quot;META-INF/native/libnetty_tcnative_linux_aarch_64.so&quot;; filter:=&quot;(|(&amp;(|(osgi.native.osname~=macos)(osgi.native.osname~=macosx))(osgi.native.processor~=x86_64))(&amp;(|(osgi.native.osname~=macos)(osgi.native.osname~=macosx))(osgi.native.processor~=aarch_64))(&amp;(osgi.native.osname~=linux)(osgi.native.processor~=x86_64))(&amp;(osgi.native.osname~=linux)(osgi.native.processor~=aarch_64))(&amp;(osgi.native.osname~=win32)(osgi.native.processor~=x86_64)))&quot;\n\n at org.eclipse.osgi.container.Module.start(Module.java:457)\n at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$1.run(ModuleContainer.java:1820)\n at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$2$1.execute(EquinoxContainerAdaptor.java:150)\n at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1813)\n at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1770)\n at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1735)\n at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1661)\n at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)\n at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)\n at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)\"><pre class=\"notranslate\"><code class=\"notranslate\">[2022-06-10 09:50:41,357] ERROR {Framework} - FrameworkEvent ERROR org.osgi.framework.BundleException: Could not resolve module: io.netty.tcnative-boringssl-static [73]\n  Unresolved requirement: Require-Capability: osgi.native; native.paths.0:List&lt;String&gt;=\"META-INF/native/libnetty_tcnative_osx_x86_64.jnilib\"; native.paths.2:List&lt;String&gt;=\"META-INF/native/libnetty_tcnative_linux_x86_64.so\"; native.paths.1:List&lt;String&gt;=\"META-INF/native/libnetty_tcnative_osx_aarch_64.jnilib\"; native.paths.4:List&lt;String&gt;=\"META-INF/native/netty_tcnative_windows_x86_64.dll\"; native.paths.3:List&lt;String&gt;=\"META-INF/native/libnetty_tcnative_linux_aarch_64.so\"; filter:=\"(|(&amp;(|(osgi.native.osname~=macos)(osgi.native.osname~=macosx))(osgi.native.processor~=x86_64))(&amp;(|(osgi.native.osname~=macos)(osgi.native.osname~=macosx))(osgi.native.processor~=aarch_64))(&amp;(osgi.native.osname~=linux)(osgi.native.processor~=x86_64))(&amp;(osgi.native.osname~=linux)(osgi.native.processor~=aarch_64))(&amp;(osgi.native.osname~=win32)(osgi.native.processor~=x86_64)))\"\n\n at org.eclipse.osgi.container.Module.start(Module.java:457)\n at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel$1.run(ModuleContainer.java:1820)\n at org.eclipse.osgi.internal.framework.EquinoxContainerAdaptor$2$1.execute(EquinoxContainerAdaptor.java:150)\n at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1813)\n at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.incStartLevel(ModuleContainer.java:1770)\n at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.doContainerStartLevel(ModuleContainer.java:1735)\n at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1661)\n at org.eclipse.osgi.container.ModuleContainer$ContainerStartLevel.dispatchEvent(ModuleContainer.java:1)\n at org.eclipse.osgi.framework.eventmgr.EventManager.dispatchEvent(EventManager.java:234)\n at org.eclipse.osgi.framework.eventmgr.EventManager$EventThread.run(EventManager.java:345)\n</code></pre></div>\n<p dir=\"auto\">when running on a container based on the public.ecr.aws/docker/library/openjdk:11-jdk-slim base image for ARM64 architecture.</p>",
                "resourcePath": "/netty/netty/issues/12494",
                "createdAt": "2022-06-21T14:45:42Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Exception from release should not shadow encode exception",
        "url": "https://github.com/netty/netty/pull/12500",
        "resourcePath": "/netty/netty/pull/12500",
        "createdAt": "2022-06-22T21:07:51Z",
        "number": 12500,
        "mergeCommit": {
          "oid": "4e439264df0523fb6efce5f8f6c7c7fa74addd07",
          "message": "Exception from release should not shadow encode exception (#12500)\n\nMotivation:\r\nSince release may throw, we can end up shadowing a root cause exception if we release from a finally-clause.\r\n\r\nModification:\r\nIn MessageToMessageEncoder, if encode() throws an exception, we release using safeRelease(), which will not throw.\r\nOtherwise we release with release() like usual.\r\n\r\nResult:\r\nExceptions from encode() in MessageToMessageEncoder can no longer be shadowed by exceptions from release().\r\n\r\nFixes #12499",
          "commitUrl": "https://github.com/netty/netty/commit/4e439264df0523fb6efce5f8f6c7c7fa74addd07",
          "parents": {
            "nodes": [
              {
                "oid": "c6c3bc606d4e716cf5a08ab68eb950ebb8f989b1",
                "message": "Make SslHandler.handlerRemoved(...) more rebust in case it is called because handlerAdded(...) throws. (#12490)\n\nMotivation:\r\n\r\nWe should ensure we do a null check in handlerRemoved(...) as handlerAdded(...) might throw before it inits the pendingUnencryptedWrites .\r\n\r\nModifications:\r\n\r\n- Add null check\r\n- init pendingUnencryptedWrites before we try to do anything else that might throw\r\n\r\nResult:\r\n\r\nMore rebust handling of failures during handlerAdded(...). Related to https://github.com/netty/netty/issues/12473."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/MessageToMessageEncoder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c846KYqi2gAoZjk1NTZlOGQ0ZTU1NjBjNTc3NGFmYWQwM2MxOWI1ODA2ZTc0ZDZjYg",
                "url": "https://github.com/netty/netty/pull/12500/commits/f9556e8d4e5560c5774afad03c19b5806e74d6cb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12499,
                "url": "https://github.com/netty/netty/issues/12499",
                "title": "ReferenceCountUtil.release(cast) could shade the exception of encode at function write of MessageToMessageEncoder",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/10280338/174937458-9bceea3c-4099-43e7-81c0-0022969f29dc.png\"><img src=\"https://user-images.githubusercontent.com/10280338/174937458-9bceea3c-4099-43e7-81c0-0022969f29dc.png\" alt=\"image\" style=\"max-width: 100%;\"></a><br>\nFunction <code class=\"notranslate\">encode</code> at line 89 is declared to throw exceptions, and then if <code class=\"notranslate\">ReferenceCountUtil.release(cast)</code> at line 91 throws an exception too, the exception threw by <code class=\"notranslate\">encode</code> will be shown before the exception threw by <code class=\"notranslate\">ReferenceCountUtil.release(cast)</code>.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The excpetion threw by <code class=\"notranslate\">encode</code> will be shaded by the exception threw by <code class=\"notranslate\">ReferenceCountUtil.release(cast)</code>.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">on branch 4.1</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"1.8.0_201\"</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/12499",
                "createdAt": "2022-06-22T03:47:28Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add escaping for stomp headers",
        "url": "https://github.com/netty/netty/pull/12585",
        "resourcePath": "/netty/netty/pull/12585",
        "createdAt": "2022-07-08T17:47:57Z",
        "number": 12585,
        "mergeCommit": {
          "oid": "f01f3cb1ca9c8b0fe9d45dc4db2ed573a7730abe",
          "message": "Add escaping for stomp headers, see https://stomp.github.io/stomp-specification-1.2.html#Value_Encoding (#12585)\n\nMotivation:\r\n\r\nCurrently we compatible with STOMP 1.2 but one important thing like escaping has not been implemented, see \r\nhttps://stomp.github.io/stomp-specification-1.2.html#Value_Encoding\r\n\r\nModification:\r\n\r\nAdd escaping to stomp encoder/decoder according specification.\r\n\r\nResult:\r\n\r\nFixes #4448 \r\n\r\nStomp codec comply with STOMP 1.2 and in most case backward compatible with 1.1 and 1.0.",
          "commitUrl": "https://github.com/netty/netty/commit/f01f3cb1ca9c8b0fe9d45dc4db2ed573a7730abe",
          "parents": {
            "nodes": [
              {
                "oid": "e158794363a7a2a6d06004f26e3e8b15e4fc3254",
                "message": "Use netty-tcnative-boringssl-static when on linux aarch64 (#12632)\n\nMotivation:\r\n\r\nWe only publish netty-tcnative-boringssl-static foor linux aarch64.\r\n\r\nModifications:\r\n\r\nUse boringssl version\r\n\r\nResult:\r\n\r\nBuild works on linux aarch64"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-stomp/src/main/java/io/netty/handler/codec/stomp/StompSubframeDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-stomp/src/main/java/io/netty/handler/codec/stomp/StompSubframeEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-stomp/src/test/java/io/netty/handler/codec/stomp/StompSubframeDecoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-stomp/src/test/java/io/netty/handler/codec/stomp/StompSubframeEncoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-stomp/src/test/java/io/netty/handler/codec/stomp/StompTestConstants.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "microbench/src/main/java/io/netty/microbench/stomp/ExampleStompHeadersSubframe.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c847H1Wq2gAoNTVmYWIxZTA2Y2UxYTYyMjBjZjJiMmE1NDU2MjNiZjllN2U1YjcyYQ",
                "url": "https://github.com/netty/netty/pull/12585/commits/55fab1e06ce1a6220cf2b2a545623bf9e7e5b72a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 4448,
                "url": "https://github.com/netty/netty/issues/4448",
                "title": "STOMP codec does not comply with STOMP 1.2 spec",
                "bodyHTML": "<p dir=\"auto\">The Netty STOMP codec does not fully comply with the STOMP 1.2 specification (<a href=\"https://stomp.github.io/stomp-specification-1.2.html\" rel=\"nofollow\">https://stomp.github.io/stomp-specification-1.2.html</a>).</p>\n<p dir=\"auto\">The most important violation is about header value encoding (see <a href=\"https://stomp.github.io/stomp-specification-1.2.html#Value_Encoding\" rel=\"nofollow\">https://stomp.github.io/stomp-specification-1.2.html#Value_Encoding</a>) which is completely missing. As a consequence, a header value with a colon (such as foo:bar) will be decoded by Netty as a value with \\c instead (such as foo\\cbar).</p>\n<p dir=\"auto\">Solving this is tricky since the codec must know which version of STOMP is spoken in order to \"do the right thing\" and this version is negotiated as part of the first two frames (CONNECT/CONNECTED).</p>",
                "resourcePath": "/netty/netty/issues/4448",
                "createdAt": "2015-11-06T09:09:18Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "SingleThreadedEventLoop: add read-only iterator of channels",
        "url": "https://github.com/netty/netty/pull/12608",
        "resourcePath": "/netty/netty/pull/12608",
        "createdAt": "2022-07-14T15:16:44Z",
        "number": 12608,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoop.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueEventLoop.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/SingleThreadEventLoop.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/nio/NioEventLoop.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c847ahWC2gAoMTllMDA4YmE0YWRhNTgzMDI3OWQ5NDExN2NkMTQxMzg5Y2EwYTUyMA",
                "url": "https://github.com/netty/netty/pull/12608/commits/19e008ba4ada5830279d94117cd141389ca0a520"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12595,
                "url": "https://github.com/netty/netty/issues/12595",
                "title": "SingleThreadedEventLoop: add read-only iterator of channels",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">For servers there is a need for per eventloop \"watchdog\" timer that ticks for all eventloop channels. For moderately high number of connections, It is cheaper cpu-wise than per channel scheduling.</p>\n<p dir=\"auto\">Now this requires additional data structure to hold active channels - which is wasteful as It duplicates the one from <code class=\"notranslate\">SingleThreadedEventLoop</code> (its practically useful impls - epoll, kqueue, nio).</p>\n<p dir=\"auto\">It would be convenient to avoid this redundant additional data structure, and instead have read-only iterator of eventloop channels exposed on <code class=\"notranslate\">SingleThreadedEventLoop</code> as <code class=\"notranslate\">Iterator&lt;Channel&gt; registeredChannelsIterator()</code> (complementary to existing <code class=\"notranslate\">int registeredChannels()</code> for channels count).</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.79</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/12595",
                "createdAt": "2022-07-12T06:13:31Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "SingleThreadedEventLoop: add read-only iterator of channels",
        "url": "https://github.com/netty/netty/pull/12610",
        "resourcePath": "/netty/netty/pull/12610",
        "createdAt": "2022-07-14T19:20:07Z",
        "number": 12610,
        "mergeCommit": {
          "oid": "af686b8acef63b34aa0d265357dd6442ad205f44",
          "message": "SingleThreadedEventLoop: add read-only iterator of channels (#12610)\n\n\r\nMotivation:\r\n\r\nFor servers there is a need for per eventloop \"watchdog\" timer that ticks for all eventloop channels. For moderately high number of connections, It is cheaper cpu-wise than per channel scheduling.\r\n\r\nNow this requires additional data structure to hold active channels - which is wasteful as It duplicates the one from SingleThreadedEventLoop (its practically useful impls - epoll, kqueue, nio).\r\n\r\nModification:\r\n\r\nAdd read-only iterator of eventloop channels exposed on SingleThreadedEventLoop as Iterator<Channel> registeredChannelsIterator()\r\n\r\nResult:\r\n\r\nSingleThreadedEventLoop channels may be iterated without additional redundant data structures\r\n\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/af686b8acef63b34aa0d265357dd6442ad205f44",
          "parents": {
            "nodes": [
              {
                "oid": "4ebc4ee66f9202c5b49e4f403cc19a719444d0d9",
                "message": "Add check for |Connection| and |Upgrade| headers inside WebSocketServerHandshaker13, see https://datatracker.ietf.org/doc/html/rfc6455#section-4.2.1 (#12606)\n\nMotivation:\r\n\r\nWe faced with problem between proxies and Netty backend server. If we received a handshake request which doesn't contain a |Connection| or |Upgrade| headers with proper value the Netty accept this request and upgrade pipeline to handle websocket frames. But proxy thinks that is not upgrade request and can reuse this connection to any others http requests which we don't expect.\r\n\r\nModification:\r\n\r\nAdd check for |Connection| and |Upgrade| headers inside `WebSocketServerrHandshaker13` according spec\r\nhttps://datatracker.ietf.org/doc/html/rfc6455#section-4.2.1. \r\n\r\nResult:\r\n\r\nProper handshake request handling for websocket version 13."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite/src/main/java/io/netty/testsuite/transport/AbstractSingleThreadEventLoopTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite/src/main/java/io/netty/testsuite/transport/DefaultEventLoopTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite/src/main/java/io/netty/testsuite/transport/NioEventLoopTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollEventLoop.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueEventLoop.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollEventLoopTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KQueueEventLoopTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/SingleThreadEventLoop.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/nio/NioEventLoop.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c847bZEu2gAoM2JkNTA3MjMxYzQzNjI3MWI5M2ZkMDU4YjJhMjJjMTlmMWIxMDU3Ng",
                "url": "https://github.com/netty/netty/pull/12610/commits/3bd507231c436271b93fd058b2a22c19f1b10576"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12595,
                "url": "https://github.com/netty/netty/issues/12595",
                "title": "SingleThreadedEventLoop: add read-only iterator of channels",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">For servers there is a need for per eventloop \"watchdog\" timer that ticks for all eventloop channels. For moderately high number of connections, It is cheaper cpu-wise than per channel scheduling.</p>\n<p dir=\"auto\">Now this requires additional data structure to hold active channels - which is wasteful as It duplicates the one from <code class=\"notranslate\">SingleThreadedEventLoop</code> (its practically useful impls - epoll, kqueue, nio).</p>\n<p dir=\"auto\">It would be convenient to avoid this redundant additional data structure, and instead have read-only iterator of eventloop channels exposed on <code class=\"notranslate\">SingleThreadedEventLoop</code> as <code class=\"notranslate\">Iterator&lt;Channel&gt; registeredChannelsIterator()</code> (complementary to existing <code class=\"notranslate\">int registeredChannels()</code> for channels count).</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.79</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/12595",
                "createdAt": "2022-07-12T06:13:31Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Improve HpackEncoder performance for headers with many distinct values.",
        "url": "https://github.com/netty/netty/pull/12620",
        "resourcePath": "/netty/netty/pull/12620",
        "createdAt": "2022-07-19T06:50:54Z",
        "number": 12620,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12615,
                "url": "https://github.com/netty/netty/issues/12615",
                "title": "HpackEncoder lookup performance for headers with unique values",
                "bodyHTML": "<p dir=\"auto\">Profiling one of our services which uses gRPC, I noticed that the call to <code class=\"notranslate\">HpackEncoder::getEntryInsensitive</code> is cpu intensive.<br>\nThe reason is that we are using tracing, which is implemented by having a header with trace id as value. So each header value is unique.<br>\nThis is a worst case scenario for <code class=\"notranslate\">getEntryInsensitive</code>, as the hash map it uses is keyed by header name. So there's a single bucket with dozens of entries, all of which have the same name but different values, and all of them are traversed each time the tracing header is being looked up. Of course if there is any other header which happens to fall to the same hash bucket, it suffers the same fate.</p>\n<p dir=\"auto\">A possible workaround is to make the header sensitive, so that it won't be added to the hash map. But this is a bit hackish, as it's not a sensitive header. Also, <code class=\"notranslate\">HpackEncoder</code> is not configurable using <a href=\"https://github.com/grpc/grpc-java\">grpc-java</a>.</p>\n<p dir=\"auto\">A more robust approach is to have an additional hash map keyed by header name and value, instead of just the name. I implemented this approach, so if there's interest I can create a PR.</p>\n<p dir=\"auto\">WDYT?</p>",
                "resourcePath": "/netty/netty/issues/12615",
                "createdAt": "2022-07-18T09:15:30Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Track independent refCnt in MixedAttribute and MixedFileUpload",
        "url": "https://github.com/netty/netty/pull/12650",
        "resourcePath": "/netty/netty/pull/12650",
        "createdAt": "2022-07-27T10:20:04Z",
        "number": 12650,
        "mergeCommit": {
          "oid": "f191f89a827d4a4151faffb38d215385e91fa3d3",
          "message": "Track independent refCnt in MixedAttribute and MixedFileUpload (#12650)\n\nMotivation:\r\n\r\nBefore this patch, MixedAttribute and MixedFileUpload delegated reference counting to their underlying memory or file representation. When the representation changes from memory to disk because the memory size limit was exceeded, the reference count of the old representation is not transferred, so the reference attribute resets to 1. This may leak the memory of the old representation, and may lead to exceptions when users try to release the mixed data.\r\n\r\nModification:\r\n\r\nIntroduce a new AbstractMixedHttpData class, analogous to the existing abstract classes for disk and memory data. This new class does its own reference counting, and unifies the swapping mechanism for attributes and file uploads.\r\n\r\nThe change is fairly big, but it's mostly copied from the old implementations. Makes it a bit annoying to review though, so I might have missed a bug.\r\n\r\nI tried inheriting from AbstractHttpData, but it didn't really reduce the code size much, and makes some code less clear because it leads to two copies of the name, charset, etc.\r\n\r\nRegarding compatibility, I managed to fix most compat issues reported by revapi. However inheriting from a new class in a non-final class is apparently a breaking change no matter what we do, and additionally AbstractReferenceCounted.setRefCnt is problematic. I think both of these errors are unlikely to affect anyone, and are justifiable. I've added an exclusion to the pom.\r\n\r\nThere is a new test class to test the retain/refCnt behavior. I didn't add it to the HttpDataTest, because the data defined there does not have a size limit we can use to test easily.\r\n\r\nResult:\r\n\r\nMixedAttribute and MixedFileUpload now behave like any other reference counted object.",
          "commitUrl": "https://github.com/netty/netty/commit/f191f89a827d4a4151faffb38d215385e91fa3d3",
          "parents": {
            "nodes": [
              {
                "oid": "c37c637f096e7be3dffd36edee3455c8e90cb1b0",
                "message": "Avoid including header values in header validation failure exceptions (#12642)\n\nMotivation:\r\nException messages may end up in logs, or other error reporting mechanisms, and we cannot necessarily tell at header validation time if the header value is sensitive information or not.\r\nHence, it's better to not include it, and instead rely on the header name as a debugging aid.\r\n\r\nModification:\r\nRemove the inclusion of the header value that fails header validation.\r\nAnd instead add the name of the header that fails validation.\r\n\r\nResult:\r\nIf sensitive information fails header validation, it will no longer be exposed through the exception messages."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/AbstractMixedHttpData.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/MixedAttribute.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/MixedFileUpload.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/MixedTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c848K1Tm2gAoOWY3MTBhNmRkODZiNmUyMzBlYmMzMDE0NDM4OGIwZjVmMTJlNDExZA",
                "url": "https://github.com/netty/netty/pull/12650/commits/9f710a6dd86b6e230ebc30144388b0f5f12e411d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12627,
                "url": "https://github.com/netty/netty/issues/12627",
                "title": "`MixedFileUpload` has inconsistent `ReferenceCounted` behavior when migrating from memory to disk",
                "bodyHTML": "<p dir=\"auto\">I can work on a patch for this. My proposed solution is to make <code class=\"notranslate\">MixedFileUpload</code> use its own ref counting, like <code class=\"notranslate\">MemoryFileUpload</code> already does. However this would be a big change to <code class=\"notranslate\">MixedFileUpload</code> so I'm not sure about its compat implications.</p>\n<hr>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">MixedFileUpload</code> should behave like a normal <code class=\"notranslate\">ReferenceCounted</code> object: Every retain should have a corresponding release that should succeed.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Migration of <code class=\"notranslate\">MixedFileUpload</code> from memory to disk, when the memory limit is reached, essentially resets the <code class=\"notranslate\">refCnt</code> to 1, so if there were more <code class=\"notranslate\">retain</code> calls before, their <code class=\"notranslate\">release</code> calls will fail.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Run the test case below. The test case passes if migration is not triggered, e.g. by removing the <code class=\"notranslate\">addContent</code> line, or by changing the <code class=\"notranslate\">limitSize</code> parameter to a higher value. If migration is triggered, the test case fails with:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"io.netty.util.IllegalReferenceCountException: refCnt: 1, decrement: 2\n\tat app//io.netty.util.internal.ReferenceCountUpdater.retryRelease0(ReferenceCountUpdater.java:183)\n\tat app//io.netty.util.internal.ReferenceCountUpdater.nonFinalRelease0(ReferenceCountUpdater.java:167)\n\tat app//io.netty.util.internal.ReferenceCountUpdater.release(ReferenceCountUpdater.java:154)\n\tat app//io.netty.util.AbstractReferenceCounted.release(AbstractReferenceCounted.java:81)\n\tat app//io.netty.handler.codec.http.multipart.MixedFileUpload.release(MixedFileUpload.java:370)\n\tat app//com.example.MixedFileUploadTest.multipleRetain(MixedFileUploadTest.java:48)\n...\"><pre class=\"notranslate\"><code class=\"notranslate\">io.netty.util.IllegalReferenceCountException: refCnt: 1, decrement: 2\n\tat app//io.netty.util.internal.ReferenceCountUpdater.retryRelease0(ReferenceCountUpdater.java:183)\n\tat app//io.netty.util.internal.ReferenceCountUpdater.nonFinalRelease0(ReferenceCountUpdater.java:167)\n\tat app//io.netty.util.internal.ReferenceCountUpdater.release(ReferenceCountUpdater.java:154)\n\tat app//io.netty.util.AbstractReferenceCounted.release(AbstractReferenceCounted.java:81)\n\tat app//io.netty.handler.codec.http.multipart.MixedFileUpload.release(MixedFileUpload.java:370)\n\tat app//com.example.MixedFileUploadTest.multipleRetain(MixedFileUploadTest.java:48)\n...\n</code></pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"package com.example;\n\nimport io.netty.buffer.Unpooled;\nimport io.netty.handler.codec.http.multipart.MixedFileUpload;\nimport org.junit.jupiter.api.AfterEach;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\n\nimport java.io.IOException;\nimport java.io.UncheckedIOException;\nimport java.nio.charset.StandardCharsets;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\n\npublic class MixedFileUploadTest {\n    private Path tmpDir;\n\n    @BeforeEach\n    public void setUp() throws IOException {\n        tmpDir = Files.createTempDirectory(&quot;MixedFileUploadTest&quot;);\n    }\n\n    @AfterEach\n    public void tearDown() throws IOException {\n        Files.list(tmpDir).forEach(path -&gt; {\n            try {\n                Files.delete(path);\n            } catch (IOException e) {\n                throw new UncheckedIOException(e);\n            }\n        });\n        Files.delete(tmpDir);\n    }\n\n    @Test\n    public void multipleRetain() throws IOException {\n        MixedFileUpload mixedFileUpload = new MixedFileUpload(\n                &quot;foo&quot;, &quot;foo&quot;, &quot;foo&quot;, &quot;foo&quot;,\n                StandardCharsets.UTF_8,\n                -1, 2, tmpDir.toString(), false\n        );\n\n        mixedFileUpload.retain();\n\n        // trigger moving to disk\n        mixedFileUpload.addContent(Unpooled.wrappedBuffer(new byte[5]), true);\n\n        mixedFileUpload.release(2);\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">package</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">example</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">buffer</span>.<span class=\"pl-s1\">Unpooled</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">multipart</span>.<span class=\"pl-s1\">MixedFileUpload</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">AfterEach</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">BeforeEach</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">Test</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">IOException</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">UncheckedIOException</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">charset</span>.<span class=\"pl-s1\">StandardCharsets</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">file</span>.<span class=\"pl-s1\">Files</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">file</span>.<span class=\"pl-s1\">Path</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MixedFileUploadTest</span> {\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">Path</span> <span class=\"pl-s1\">tmpDir</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">BeforeEach</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">setUp</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">IOException</span> {\n        <span class=\"pl-s1\">tmpDir</span> = <span class=\"pl-smi\">Files</span>.<span class=\"pl-en\">createTempDirectory</span>(<span class=\"pl-s\">\"MixedFileUploadTest\"</span>);\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">AfterEach</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">tearDown</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">IOException</span> {\n        <span class=\"pl-smi\">Files</span>.<span class=\"pl-en\">list</span>(<span class=\"pl-s1\">tmpDir</span>).<span class=\"pl-en\">forEach</span>(<span class=\"pl-s1\">path</span> -&gt; {\n            <span class=\"pl-k\">try</span> {\n                <span class=\"pl-smi\">Files</span>.<span class=\"pl-en\">delete</span>(<span class=\"pl-s1\">path</span>);\n            } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">IOException</span> <span class=\"pl-s1\">e</span>) {\n                <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">UncheckedIOException</span>(<span class=\"pl-s1\">e</span>);\n            }\n        });\n        <span class=\"pl-smi\">Files</span>.<span class=\"pl-en\">delete</span>(<span class=\"pl-s1\">tmpDir</span>);\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">multipleRetain</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">IOException</span> {\n        <span class=\"pl-smi\">MixedFileUpload</span> <span class=\"pl-s1\">mixedFileUpload</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">MixedFileUpload</span>(\n                <span class=\"pl-s\">\"foo\"</span>, <span class=\"pl-s\">\"foo\"</span>, <span class=\"pl-s\">\"foo\"</span>, <span class=\"pl-s\">\"foo\"</span>,\n                <span class=\"pl-smi\">StandardCharsets</span>.<span class=\"pl-c1\">UTF_8</span>,\n                -<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-s1\">tmpDir</span>.<span class=\"pl-en\">toString</span>(), <span class=\"pl-c1\">false</span>\n        );\n\n        <span class=\"pl-s1\">mixedFileUpload</span>.<span class=\"pl-en\">retain</span>();\n\n        <span class=\"pl-c\">// trigger moving to disk</span>\n        <span class=\"pl-s1\">mixedFileUpload</span>.<span class=\"pl-en\">addContent</span>(<span class=\"pl-smi\">Unpooled</span>.<span class=\"pl-en\">wrappedBuffer</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">byte</span>[<span class=\"pl-c1\">5</span>]), <span class=\"pl-c1\">true</span>);\n\n        <span class=\"pl-s1\">mixedFileUpload</span>.<span class=\"pl-en\">release</span>(<span class=\"pl-c1\">2</span>);\n    }\n}</pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.77.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openjdk version &quot;17.0.1&quot; 2021-10-19\nOpenJDK Runtime Environment Temurin-17.0.1+12 (build 17.0.1+12)\nOpenJDK 64-Bit Server VM Temurin-17.0.1+12 (build 17.0.1+12, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">openjdk version \"17.0.1\" 2021-10-19\nOpenJDK Runtime Environment Temurin-17.0.1+12 (build 17.0.1+12)\nOpenJDK 64-Bit Server VM Temurin-17.0.1+12 (build 17.0.1+12, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Linux yawkat-oracle 5.15.0-41-generic #44-Ubuntu SMP Wed Jun 22 14:20:53 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\"><pre class=\"notranslate\"><code class=\"notranslate\">Linux yawkat-oracle 5.15.0-41-generic #44-Ubuntu SMP Wed Jun 22 14:20:53 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/12627",
                "createdAt": "2022-07-20T11:37:20Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Improve error message when ByteToMessageDecoder subclasses release their input buffers",
        "url": "https://github.com/netty/netty/pull/12662",
        "resourcePath": "/netty/netty/pull/12662",
        "createdAt": "2022-08-02T22:30:49Z",
        "number": 12662,
        "mergeCommit": {
          "oid": "731b7c6240ab1944710982217feca6ddc346e620",
          "message": "Improve error message when ByteToMessageDecoder subclasses release their input buffers (#12662)\n\nMotivation:\r\nReleasing the buffer in the decode() method is a violation of the API, but this is not obvious without reading the javadocs carefully.\r\nThe error message people get, are difficult to act on and debug.\r\n\r\nModification:\r\nCapture the precise class name of the ByteToMessageDecoder subclass that released the buffer, in the error message.\r\nThis will tell people what code to investigate, when they get this error.\r\n\r\nResult:\r\nIt is now easier for people to debug issues that arise when they mess up the reference counting of buffers",
          "commitUrl": "https://github.com/netty/netty/commit/731b7c6240ab1944710982217feca6ddc346e620",
          "parents": {
            "nodes": [
              {
                "oid": "114762840b2d39018e2254883055c8d34e5846f6",
                "message": "Add Blockhound exceptions for the PooledByteBufAllocator (#12653)\n\nMotivation:\r\nIn #12622 we replaced a number of synchronised blocks with explicit locks.\r\nIt turns out that blockhound ignores synchronised blocks for some reason, and now complain about the explicit locks.\r\n\r\nModification:\r\nAdd exceptions and allow blocking calls in select methods in the PooledByteBufAllocator.\r\nAlso add a test that create races inside the pooled allocator in an attempt to get the thread blocked on the locks while blockhound is watching.\r\n\r\nResult:\r\nNo more blockhound complaints."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/ByteToMessageDecoder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c848ibim2gAoZGI0OTRmZDY1MjdkYmI1Mzc1NjMxYThiMmExN2I4OGI1NzJlYzM4NA",
                "url": "https://github.com/netty/netty/pull/12662/commits/db494fd6527dbb5375631a8b2a17b88b572ec384"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12360,
                "url": "https://github.com/netty/netty/issues/12360",
                "title": "'io.netty.util.IllegalReferenceCountException: refCnt: 0, decrement: 1'",
                "bodyHTML": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">We are sending GET requests to our application. We are encountering the issue mentioned below frequently.</p>\n<p dir=\"auto\">Dependencies<br>\nSpring Cloud Gateway - 3.0.3<br>\nSpring Boot - 2.5.5<br>\nSpring webflux - 5.3.10<br>\nReactor netty - 1.0.11<br>\nNetty - 4.1.63.Final<br>\nOS - Cent OS / Linux</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{&quot;instant&quot;:{&quot;epochSecond&quot;:1651180720,&quot;nanoOfSecond&quot;:289955175},&quot;thread&quot;:&quot;ingress-h2c-epoll-3&quot;,&quot;level&quot;:&quot;WARN&quot;,&quot;loggerName&quot;:&quot;io.netty.channel.DefaultChannelPipeline&quot;,&quot;message&quot;:&quot;An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.&quot;,&quot;thrown&quot;:{&quot;commonElementCount&quot;:0,&quot;localizedMessage&quot;:&quot;refCnt: 0, decrement: 1&quot;,&quot;message&quot;:&quot;refCnt: 0, decrement: 1&quot;,&quot;name&quot;:&quot;io.netty.util.IllegalReferenceCountException&quot;,&quot;extendedStackTrace&quot;:[{&quot;class&quot;:&quot;io.netty.util.internal.ReferenceCountUpdater&quot;,&quot;method&quot;:&quot;toLiveRealRefCnt&quot;,&quot;file&quot;:&quot;ReferenceCountUpdater.java&quot;,&quot;line&quot;:74,&quot;exact&quot;:false,&quot;location&quot;:&quot;netty-common-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.util.internal.ReferenceCountUpdater&quot;,&quot;method&quot;:&quot;release&quot;,&quot;file&quot;:&quot;ReferenceCountUpdater.java&quot;,&quot;line&quot;:138,&quot;exact&quot;:false,&quot;location&quot;:&quot;netty-common-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.buffer.AbstractReferenceCountedByteBuf&quot;,&quot;method&quot;:&quot;release&quot;,&quot;file&quot;:&quot;AbstractReferenceCountedByteBuf.java&quot;,&quot;line&quot;:100,&quot;exact&quot;:false,&quot;location&quot;:&quot;netty-buffer-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.handler.codec.ByteToMessageDecoder&quot;,&quot;method&quot;:&quot;channelRead&quot;,&quot;file&quot;:&quot;ByteToMessageDecoder.java&quot;,&quot;line&quot;:285,&quot;exact&quot;:false,&quot;location&quot;:&quot;netty-codec-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.AbstractChannelHandlerContext&quot;,&quot;method&quot;:&quot;invokeChannelRead&quot;,&quot;file&quot;:&quot;AbstractChannelHandlerContext.java&quot;,&quot;line&quot;:379,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.AbstractChannelHandlerContext&quot;,&quot;method&quot;:&quot;invokeChannelRead&quot;,&quot;file&quot;:&quot;AbstractChannelHandlerContext.java&quot;,&quot;line&quot;:365,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.AbstractChannelHandlerContext&quot;,&quot;method&quot;:&quot;fireChannelRead&quot;,&quot;file&quot;:&quot;AbstractChannelHandlerContext.java&quot;,&quot;line&quot;:357,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.handler.logging.LoggingHandler&quot;,&quot;method&quot;:&quot;channelRead&quot;,&quot;file&quot;:&quot;LoggingHandler.java&quot;,&quot;line&quot;:271,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-handler-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.AbstractChannelHandlerContext&quot;,&quot;method&quot;:&quot;invokeChannelRead&quot;,&quot;file&quot;:&quot;AbstractChannelHandlerContext.java&quot;,&quot;line&quot;:379,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.AbstractChannelHandlerContext&quot;,&quot;method&quot;:&quot;invokeChannelRead&quot;,&quot;file&quot;:&quot;AbstractChannelHandlerContext.java&quot;,&quot;line&quot;:365,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.AbstractChannelHandlerContext&quot;,&quot;method&quot;:&quot;fireChannelRead&quot;,&quot;file&quot;:&quot;AbstractChannelHandlerContext.java&quot;,&quot;line&quot;:357,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.ChannelInboundHandlerAdapter&quot;,&quot;method&quot;:&quot;channelRead&quot;,&quot;file&quot;:&quot;ChannelInboundHandlerAdapter.java&quot;,&quot;line&quot;:93,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;ocpm.cne.gateway.util.ConnectionCountHandler&quot;,&quot;method&quot;:&quot;channelRead&quot;,&quot;file&quot;:&quot;ConnectionCountHandler.java&quot;,&quot;line&quot;:46,&quot;exact&quot;:true,&quot;location&quot;:&quot;classes!/&quot;,&quot;version&quot;:&quot;?&quot;},{&quot;class&quot;:&quot;io.netty.channel.AbstractChannelHandlerContext&quot;,&quot;method&quot;:&quot;invokeChannelRead&quot;,&quot;file&quot;:&quot;AbstractChannelHandlerContext.java&quot;,&quot;line&quot;:379,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.AbstractChannelHandlerContext&quot;,&quot;method&quot;:&quot;invokeChannelRead&quot;,&quot;file&quot;:&quot;AbstractChannelHandlerContext.java&quot;,&quot;line&quot;:365,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.AbstractChannelHandlerContext&quot;,&quot;method&quot;:&quot;fireChannelRead&quot;,&quot;file&quot;:&quot;AbstractChannelHandlerContext.java&quot;,&quot;line&quot;:357,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.DefaultChannelPipeline$HeadContext&quot;,&quot;method&quot;:&quot;channelRead&quot;,&quot;file&quot;:&quot;DefaultChannelPipeline.java&quot;,&quot;line&quot;:1410,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.AbstractChannelHandlerContext&quot;,&quot;method&quot;:&quot;invokeChannelRead&quot;,&quot;file&quot;:&quot;AbstractChannelHandlerContext.java&quot;,&quot;line&quot;:379,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.AbstractChannelHandlerContext&quot;,&quot;method&quot;:&quot;invokeChannelRead&quot;,&quot;file&quot;:&quot;AbstractChannelHandlerContext.java&quot;,&quot;line&quot;:365,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.DefaultChannelPipeline&quot;,&quot;method&quot;:&quot;fireChannelRead&quot;,&quot;file&quot;:&quot;DefaultChannelPipeline.java&quot;,&quot;line&quot;:919,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe&quot;,&quot;method&quot;:&quot;epollInReady&quot;,&quot;file&quot;:&quot;AbstractEpollStreamChannel.java&quot;,&quot;line&quot;:795,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-native-epoll-4.1.63.Final-linux-x86_64.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.epoll.EpollEventLoop&quot;,&quot;method&quot;:&quot;processReady&quot;,&quot;file&quot;:&quot;EpollEventLoop.java&quot;,&quot;line&quot;:480,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-native-epoll-4.1.63.Final-linux-x86_64.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.channel.epoll.EpollEventLoop&quot;,&quot;method&quot;:&quot;run&quot;,&quot;file&quot;:&quot;EpollEventLoop.java&quot;,&quot;line&quot;:378,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-transport-native-epoll-4.1.63.Final-linux-x86_64.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.util.concurrent.SingleThreadEventExecutor$4&quot;,&quot;method&quot;:&quot;run&quot;,&quot;file&quot;:&quot;SingleThreadEventExecutor.java&quot;,&quot;line&quot;:989,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-common-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.util.internal.ThreadExecutorMap$2&quot;,&quot;method&quot;:&quot;run&quot;,&quot;file&quot;:&quot;ThreadExecutorMap.java&quot;,&quot;line&quot;:74,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-common-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;io.netty.util.concurrent.FastThreadLocalRunnable&quot;,&quot;method&quot;:&quot;run&quot;,&quot;file&quot;:&quot;FastThreadLocalRunnable.java&quot;,&quot;line&quot;:30,&quot;exact&quot;:true,&quot;location&quot;:&quot;netty-common-4.1.63.Final.jar!/&quot;,&quot;version&quot;:&quot;4.1.63.Final&quot;},{&quot;class&quot;:&quot;java.lang.Thread&quot;,&quot;method&quot;:&quot;run&quot;,&quot;file&quot;:&quot;Thread.java&quot;,&quot;line&quot;:833,&quot;exact&quot;:true,&quot;location&quot;:&quot;?&quot;,&quot;version&quot;:&quot;?&quot;}]},&quot;endOfBatch&quot;:false,&quot;loggerFqcn&quot;:&quot;io.netty.util.internal.logging.LocationAwareSlf4JLogger&quot;,&quot;contextMap&quot;:{},&quot;threadId&quot;:104,&quot;threadPriority&quot;:5,&quot;messageTimestamp&quot;:&quot;2022-04-28T21:18:40.289+0000&quot;,&quot;ocLogId&quot;:&quot;${ctx:ocLogId}&quot;,&quot;pod&quot;:&quot;${ctx:hostname}&quot;,&quot;processId&quot;:&quot;1&quot;,&quot;instanceType&quot;:&quot;prod&quot;,&quot;ingressTxId&quot;:&quot;${ctx:ingressTxId}&quot;}\"><pre class=\"notranslate\"><code class=\"notranslate\">{\"instant\":{\"epochSecond\":1651180720,\"nanoOfSecond\":289955175},\"thread\":\"ingress-h2c-epoll-3\",\"level\":\"WARN\",\"loggerName\":\"io.netty.channel.DefaultChannelPipeline\",\"message\":\"An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\",\"thrown\":{\"commonElementCount\":0,\"localizedMessage\":\"refCnt: 0, decrement: 1\",\"message\":\"refCnt: 0, decrement: 1\",\"name\":\"io.netty.util.IllegalReferenceCountException\",\"extendedStackTrace\":[{\"class\":\"io.netty.util.internal.ReferenceCountUpdater\",\"method\":\"toLiveRealRefCnt\",\"file\":\"ReferenceCountUpdater.java\",\"line\":74,\"exact\":false,\"location\":\"netty-common-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.util.internal.ReferenceCountUpdater\",\"method\":\"release\",\"file\":\"ReferenceCountUpdater.java\",\"line\":138,\"exact\":false,\"location\":\"netty-common-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.buffer.AbstractReferenceCountedByteBuf\",\"method\":\"release\",\"file\":\"AbstractReferenceCountedByteBuf.java\",\"line\":100,\"exact\":false,\"location\":\"netty-buffer-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.handler.codec.ByteToMessageDecoder\",\"method\":\"channelRead\",\"file\":\"ByteToMessageDecoder.java\",\"line\":285,\"exact\":false,\"location\":\"netty-codec-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.AbstractChannelHandlerContext\",\"method\":\"invokeChannelRead\",\"file\":\"AbstractChannelHandlerContext.java\",\"line\":379,\"exact\":true,\"location\":\"netty-transport-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.AbstractChannelHandlerContext\",\"method\":\"invokeChannelRead\",\"file\":\"AbstractChannelHandlerContext.java\",\"line\":365,\"exact\":true,\"location\":\"netty-transport-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.AbstractChannelHandlerContext\",\"method\":\"fireChannelRead\",\"file\":\"AbstractChannelHandlerContext.java\",\"line\":357,\"exact\":true,\"location\":\"netty-transport-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.handler.logging.LoggingHandler\",\"method\":\"channelRead\",\"file\":\"LoggingHandler.java\",\"line\":271,\"exact\":true,\"location\":\"netty-handler-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.AbstractChannelHandlerContext\",\"method\":\"invokeChannelRead\",\"file\":\"AbstractChannelHandlerContext.java\",\"line\":379,\"exact\":true,\"location\":\"netty-transport-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.AbstractChannelHandlerContext\",\"method\":\"invokeChannelRead\",\"file\":\"AbstractChannelHandlerContext.java\",\"line\":365,\"exact\":true,\"location\":\"netty-transport-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.AbstractChannelHandlerContext\",\"method\":\"fireChannelRead\",\"file\":\"AbstractChannelHandlerContext.java\",\"line\":357,\"exact\":true,\"location\":\"netty-transport-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.ChannelInboundHandlerAdapter\",\"method\":\"channelRead\",\"file\":\"ChannelInboundHandlerAdapter.java\",\"line\":93,\"exact\":true,\"location\":\"netty-transport-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"ocpm.cne.gateway.util.ConnectionCountHandler\",\"method\":\"channelRead\",\"file\":\"ConnectionCountHandler.java\",\"line\":46,\"exact\":true,\"location\":\"classes!/\",\"version\":\"?\"},{\"class\":\"io.netty.channel.AbstractChannelHandlerContext\",\"method\":\"invokeChannelRead\",\"file\":\"AbstractChannelHandlerContext.java\",\"line\":379,\"exact\":true,\"location\":\"netty-transport-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.AbstractChannelHandlerContext\",\"method\":\"invokeChannelRead\",\"file\":\"AbstractChannelHandlerContext.java\",\"line\":365,\"exact\":true,\"location\":\"netty-transport-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.AbstractChannelHandlerContext\",\"method\":\"fireChannelRead\",\"file\":\"AbstractChannelHandlerContext.java\",\"line\":357,\"exact\":true,\"location\":\"netty-transport-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.DefaultChannelPipeline$HeadContext\",\"method\":\"channelRead\",\"file\":\"DefaultChannelPipeline.java\",\"line\":1410,\"exact\":true,\"location\":\"netty-transport-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.AbstractChannelHandlerContext\",\"method\":\"invokeChannelRead\",\"file\":\"AbstractChannelHandlerContext.java\",\"line\":379,\"exact\":true,\"location\":\"netty-transport-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.AbstractChannelHandlerContext\",\"method\":\"invokeChannelRead\",\"file\":\"AbstractChannelHandlerContext.java\",\"line\":365,\"exact\":true,\"location\":\"netty-transport-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.DefaultChannelPipeline\",\"method\":\"fireChannelRead\",\"file\":\"DefaultChannelPipeline.java\",\"line\":919,\"exact\":true,\"location\":\"netty-transport-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe\",\"method\":\"epollInReady\",\"file\":\"AbstractEpollStreamChannel.java\",\"line\":795,\"exact\":true,\"location\":\"netty-transport-native-epoll-4.1.63.Final-linux-x86_64.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.epoll.EpollEventLoop\",\"method\":\"processReady\",\"file\":\"EpollEventLoop.java\",\"line\":480,\"exact\":true,\"location\":\"netty-transport-native-epoll-4.1.63.Final-linux-x86_64.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.channel.epoll.EpollEventLoop\",\"method\":\"run\",\"file\":\"EpollEventLoop.java\",\"line\":378,\"exact\":true,\"location\":\"netty-transport-native-epoll-4.1.63.Final-linux-x86_64.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.util.concurrent.SingleThreadEventExecutor$4\",\"method\":\"run\",\"file\":\"SingleThreadEventExecutor.java\",\"line\":989,\"exact\":true,\"location\":\"netty-common-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.util.internal.ThreadExecutorMap$2\",\"method\":\"run\",\"file\":\"ThreadExecutorMap.java\",\"line\":74,\"exact\":true,\"location\":\"netty-common-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"io.netty.util.concurrent.FastThreadLocalRunnable\",\"method\":\"run\",\"file\":\"FastThreadLocalRunnable.java\",\"line\":30,\"exact\":true,\"location\":\"netty-common-4.1.63.Final.jar!/\",\"version\":\"4.1.63.Final\"},{\"class\":\"java.lang.Thread\",\"method\":\"run\",\"file\":\"Thread.java\",\"line\":833,\"exact\":true,\"location\":\"?\",\"version\":\"?\"}]},\"endOfBatch\":false,\"loggerFqcn\":\"io.netty.util.internal.logging.LocationAwareSlf4JLogger\",\"contextMap\":{},\"threadId\":104,\"threadPriority\":5,\"messageTimestamp\":\"2022-04-28T21:18:40.289+0000\",\"ocLogId\":\"${ctx:ocLogId}\",\"pod\":\"${ctx:hostname}\",\"processId\":\"1\",\"instanceType\":\"prod\",\"ingressTxId\":\"${ctx:ingressTxId}\"}\n</code></pre></div>\n<p dir=\"auto\">Please let us know how to resolve this issue?</p>",
                "resourcePath": "/netty/netty/issues/12360",
                "createdAt": "2022-05-05T05:29:24Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Handle content-type optional parameters other than charset (netty#12663)",
        "url": "https://github.com/netty/netty/pull/12664",
        "resourcePath": "/netty/netty/pull/12664",
        "createdAt": "2022-08-03T10:22:09Z",
        "number": 12664,
        "mergeCommit": {
          "oid": "839eda075531ec4bbdb247c6db2cf286e34a130b",
          "message": "Handle content-type optional parameters other than charset (netty#12663) (#12664)\n\nMotivation:\r\n\r\nWhen receiving multipart/form-data where the form-data includes a file with optional parameter, in my case a codec parameter, the content-type was incorrectly set to the parameter value. Currently this only behaves correctly if the optional parameter is a character set parameter.\r\n\r\nModification:\r\n\r\nWhen processing the content-type header contents, after splitting the header into the String[], check each item to see if it is a name=value pair, indicating it is an optional parameter. Add an attribute using the split name and value.\r\n\r\nResult:\r\n\r\nWhen processing the content-type header, the code now correctly sets the content-type and adds additional attributes for the optional parameters.\r\n\r\nFixes #12663",
          "commitUrl": "https://github.com/netty/netty/commit/839eda075531ec4bbdb247c6db2cf286e34a130b",
          "parents": {
            "nodes": [
              {
                "oid": "91f8ecc361deef82ce5a7fa0a2057e29805c2a99",
                "message": "Support for pkcs1 (#12670)\n\n\r\nMotivation:\r\n\r\nMotivated by a stale [PR](https://github.com/netty/netty/pull/7451) that was closed. This change adds support for keys in the PKCS#1 format. Currently netty only supports PKCS#8 keys.\r\n\r\nModification:\r\n\r\nThis change introduces a class called `BouncyCastlePemReader` which is only used if BouncyCastle is available on the classpath and uses BouncyCastle's PEMParser to parse the private keys. See list of supported types [here](https://www.bouncycastle.org/docs/pkixdocs1.5on/org/bouncycastle/openssl/PEMParser.html). \r\n\r\nTests are added in `SSLContextTest` including tests with PKCS#8 keys (encrypted + unencrypted) to show these working with BouncyCastle.\r\n\r\nResult:\r\n\r\nFixes [#7323](https://github.com/netty/netty/issues/7323)\r\n\r\nSigned-off-by: Craig Perkins <cwperx@amazon.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostMultipartRequestDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostMultiPartRequestDecoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/StringUtil.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c848kLVg2gAoMmNjYjRkNTJlYThmYjAwNTE1OWU2ZDdmZTNhNjQyZGYzMTZlYTNkOQ",
                "url": "https://github.com/netty/netty/pull/12664/commits/2ccb4d52ea8fb005159e6d7fe3a642df316ea3d9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12663,
                "url": "https://github.com/netty/netty/issues/12663",
                "title": "Parsing multipart/form-data requests with form-data content-type including optional parameters uses last parameter as content-type",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When passed a content type header with optional parameter, content type should be correctly set and optional parameters should be attributes.</p>\n<p dir=\"auto\">e.g.</p>\n<p dir=\"auto\">contnet-type: audio/ogg; codecs=opus should have content type of audio/ogg and a codecs attribute of opus</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">content type is currently set to codecs=opus</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Create a request with a content type containing an optional parameter on the content type header</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">The following test added to HttpPostMultiPartRequestDecoderTest will currently fail.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Test\n    public void testDecodeFullHttpRequestWithOptionalParameters() {\n        String content = &quot;\\n--861fbeab-cd20-470c-9609-d40a0f704466\\r\\n&quot; +\n                &quot;content-disposition: form-data; &quot; +\n                &quot;name=\\&quot;file\\&quot;; filename=\\&quot;myfile.ogg\\&quot;\\r\\n&quot; +\n                &quot;content-type: audio/ogg; codecs=opus; charset=UTF8\\r\\ncontent-transfer-encoding: binary\\r\\n&quot; +\n                &quot;\\r\\n\\u0001\\u0002\\u0003\\u0004\\r\\n--861fbeab-cd20-470c-9609-d40a0f704466--\\r\\n\\&quot;,\\n&quot;;\n\n        FullHttpRequest req = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.POST, &quot;/upload&quot;,\n                Unpooled.copiedBuffer(content, CharsetUtil.US_ASCII));\n        req.headers().set(&quot;content-type&quot;, &quot;multipart/form-data; boundary=861fbeab-cd20-470c-9609-d40a0f704466&quot;);\n        req.headers().set(&quot;content-length&quot;, content.length());\n\n        HttpPostMultipartRequestDecoder test = new HttpPostMultipartRequestDecoder(req);\n        assertEquals(&quot;audio/ogg&quot;, ((MixedFileUpload)test.getBodyHttpDatas(&quot;file&quot;).get(0)).getContentType());\n    }\n\"><pre class=\"notranslate\"><code class=\"notranslate\">    @Test\n    public void testDecodeFullHttpRequestWithOptionalParameters() {\n        String content = \"\\n--861fbeab-cd20-470c-9609-d40a0f704466\\r\\n\" +\n                \"content-disposition: form-data; \" +\n                \"name=\\\"file\\\"; filename=\\\"myfile.ogg\\\"\\r\\n\" +\n                \"content-type: audio/ogg; codecs=opus; charset=UTF8\\r\\ncontent-transfer-encoding: binary\\r\\n\" +\n                \"\\r\\n\\u0001\\u0002\\u0003\\u0004\\r\\n--861fbeab-cd20-470c-9609-d40a0f704466--\\r\\n\\\",\\n\";\n\n        FullHttpRequest req = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.POST, \"/upload\",\n                Unpooled.copiedBuffer(content, CharsetUtil.US_ASCII));\n        req.headers().set(\"content-type\", \"multipart/form-data; boundary=861fbeab-cd20-470c-9609-d40a0f704466\");\n        req.headers().set(\"content-length\", content.length());\n\n        HttpPostMultipartRequestDecoder test = new HttpPostMultipartRequestDecoder(req);\n        assertEquals(\"audio/ogg\", ((MixedFileUpload)test.getBodyHttpDatas(\"file\").get(0)).getContentType());\n    }\n\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.74</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"1.8.0_302\"<br>\nOpenJDK Runtime Environment (Temurin)(build 1.8.0_302-b08)<br>\nOpenJDK 64-Bit Server VM (Temurin)(build 25.302-b08, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows 10, Ubuntu 18.04</p>",
                "resourcePath": "/netty/netty/issues/12663",
                "createdAt": "2022-08-03T09:44:29Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "LengthFieldBasedFrameDecoder allow repeat read frame",
        "url": "https://github.com/netty/netty/pull/12666",
        "resourcePath": "/netty/netty/pull/12666",
        "createdAt": "2022-08-04T04:38:42Z",
        "number": 12666,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "microbench/src/main/java/io/netty5/microbench/concurrent/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "microbench/src/main/java/io/netty5/microbench/handler/ssl/AbstractSslEngineBenchmark.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "microbench/src/main/java/io/netty5/microbench/handler/ssl/AbstractSslEngineThroughputBenchmark.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "microbench/src/main/java/io/netty5/microbench/handler/ssl/AbstractSslHandlerBenchmark.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "microbench/src/main/java/io/netty5/microbench/handler/ssl/AbstractSslHandlerThroughputBenchmark.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "microbench/src/main/java/io/netty5/microbench/handler/ssl/SslEngineEchoBenchmark.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "microbench/src/main/java/io/netty5/microbench/handler/ssl/SslEngineHandshakeBenchmark.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "microbench/src/main/java/io/netty5/microbench/handler/ssl/SslEngineWrapBenchmark.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "microbench/src/main/java/io/netty5/microbench/handler/ssl/SslHandlerEchoBenchmark.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "microbench/src/main/java/io/netty5/microbench/handler/ssl/package-info.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c848nsMo2gAoMTA5MDUxNWYxYThlMmUyOWM4OGE2MDRlYWI5YThiZTAwOGM0MTVmNQ",
                "url": "https://github.com/netty/netty/pull/12666/commits/1090515f1a8e2e29c88a604eab9a8be008c415f5"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12171,
                "url": "https://github.com/netty/netty/issues/12171",
                "title": "LengthFieldBasedFrameDecoder Class Can be optimized",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">LengthFieldBasedFrameDecoder . decode(ChannelHandlerContext ctx, ByteBuf in) method\uff0cCan be optimized - Can we keep frameLengthInt in instance variable? so , When there is not enough data in the buffer, the length of the data frame does not need to be recalculated at the next decoding\u3002code:</p>\n<p dir=\"auto\">// LengthFieldBasedFrameDecoder class<br>\nprotected Object decode(ChannelHandlerContext ctx, ByteBuf in) throws Exception {<br>\n... // check maxFrame<br>\nint frameLengthInt = (int) frameLength;<br>\nif (in.readableBytes() &lt; frameLengthInt) {  <strong>//  When there is not enough data in the buffer, The above code will be executed again, and I just need to wait for the buffer to contain enough data . In fact, we can save the frameLengthInt variable without having to</strong><br>\nreturn null;<br>\n}<br>\n... // extract frame<br>\n}</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">When there is not enough data in the buffer, the length of the data frame  recalculate at the next decoding</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.X</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Non-Required</p>",
                "resourcePath": "/netty/netty/issues/12171",
                "createdAt": "2022-03-15T01:05:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Length field based frame decoder can be optimized",
        "url": "https://github.com/netty/netty/pull/12667",
        "resourcePath": "/netty/netty/pull/12667",
        "createdAt": "2022-08-04T04:48:45Z",
        "number": 12667,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/LengthFieldBasedFrameDecoder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c848ntc42gAoMTRmNWNhNjVkMDg3NmJiODFjMmYzZjQwNDgzMzg3NWRhN2NjZTQ4Nw",
                "url": "https://github.com/netty/netty/pull/12667/commits/14f5ca65d0876bb81c2f3f404833875da7cce487"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12171,
                "url": "https://github.com/netty/netty/issues/12171",
                "title": "LengthFieldBasedFrameDecoder Class Can be optimized",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">LengthFieldBasedFrameDecoder . decode(ChannelHandlerContext ctx, ByteBuf in) method\uff0cCan be optimized - Can we keep frameLengthInt in instance variable? so , When there is not enough data in the buffer, the length of the data frame does not need to be recalculated at the next decoding\u3002code:</p>\n<p dir=\"auto\">// LengthFieldBasedFrameDecoder class<br>\nprotected Object decode(ChannelHandlerContext ctx, ByteBuf in) throws Exception {<br>\n... // check maxFrame<br>\nint frameLengthInt = (int) frameLength;<br>\nif (in.readableBytes() &lt; frameLengthInt) {  <strong>//  When there is not enough data in the buffer, The above code will be executed again, and I just need to wait for the buffer to contain enough data . In fact, we can save the frameLengthInt variable without having to</strong><br>\nreturn null;<br>\n}<br>\n... // extract frame<br>\n}</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">When there is not enough data in the buffer, the length of the data frame  recalculate at the next decoding</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.X</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Non-Required</p>",
                "resourcePath": "/netty/netty/issues/12171",
                "createdAt": "2022-03-15T01:05:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "allow LengthFieldBasedFrameDecoder repeat read frame ",
        "url": "https://github.com/netty/netty/pull/12668",
        "resourcePath": "/netty/netty/pull/12668",
        "createdAt": "2022-08-04T04:53:12Z",
        "number": 12668,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/LengthFieldBasedFrameDecoder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c848nt8o2gAoMTRlMzNkYmMyZWQ4NWM5OTY1ZWU2ZGMzNDE4ZjY5ZDIwYmQxMzU0Ng",
                "url": "https://github.com/netty/netty/pull/12668/commits/14e33dbc2ed85c9965ee6dc3418f69d20bd13546"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12171,
                "url": "https://github.com/netty/netty/issues/12171",
                "title": "LengthFieldBasedFrameDecoder Class Can be optimized",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">LengthFieldBasedFrameDecoder . decode(ChannelHandlerContext ctx, ByteBuf in) method\uff0cCan be optimized - Can we keep frameLengthInt in instance variable? so , When there is not enough data in the buffer, the length of the data frame does not need to be recalculated at the next decoding\u3002code:</p>\n<p dir=\"auto\">// LengthFieldBasedFrameDecoder class<br>\nprotected Object decode(ChannelHandlerContext ctx, ByteBuf in) throws Exception {<br>\n... // check maxFrame<br>\nint frameLengthInt = (int) frameLength;<br>\nif (in.readableBytes() &lt; frameLengthInt) {  <strong>//  When there is not enough data in the buffer, The above code will be executed again, and I just need to wait for the buffer to contain enough data . In fact, we can save the frameLengthInt variable without having to</strong><br>\nreturn null;<br>\n}<br>\n... // extract frame<br>\n}</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">When there is not enough data in the buffer, the length of the data frame  recalculate at the next decoding</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.X</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Non-Required</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Non-Required</p>",
                "resourcePath": "/netty/netty/issues/12171",
                "createdAt": "2022-03-15T01:05:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support for pkcs1",
        "url": "https://github.com/netty/netty/pull/12670",
        "resourcePath": "/netty/netty/pull/12670",
        "createdAt": "2022-08-05T18:43:29Z",
        "number": 12670,
        "mergeCommit": {
          "oid": "91f8ecc361deef82ce5a7fa0a2057e29805c2a99",
          "message": "Support for pkcs1 (#12670)\n\n\r\nMotivation:\r\n\r\nMotivated by a stale [PR](https://github.com/netty/netty/pull/7451) that was closed. This change adds support for keys in the PKCS#1 format. Currently netty only supports PKCS#8 keys.\r\n\r\nModification:\r\n\r\nThis change introduces a class called `BouncyCastlePemReader` which is only used if BouncyCastle is available on the classpath and uses BouncyCastle's PEMParser to parse the private keys. See list of supported types [here](https://www.bouncycastle.org/docs/pkixdocs1.5on/org/bouncycastle/openssl/PEMParser.html). \r\n\r\nTests are added in `SSLContextTest` including tests with PKCS#8 keys (encrypted + unencrypted) to show these working with BouncyCastle.\r\n\r\nResult:\r\n\r\nFixes [#7323](https://github.com/netty/netty/issues/7323)\r\n\r\nSigned-off-by: Craig Perkins <cwperx@amazon.com>",
          "commitUrl": "https://github.com/netty/netty/commit/91f8ecc361deef82ce5a7fa0a2057e29805c2a99",
          "parents": {
            "nodes": [
              {
                "oid": "d399f15f95602926587a29dd7794e39047c05fc3",
                "message": "Fix unit test failure on macOS (#12686)\n\nMotivation:\n\nThere needs to be special handling of any addresses as otherwise the test might fail with `NoRouteToHostException`.\n\n```\n\njava.net.NoRouteToHostException: No route to host\n\n\tat java.base/sun.nio.ch.DatagramChannelImpl.send0(Native Method)\n\tat java.base/sun.nio.ch.DatagramChannelImpl.sendFromNativeBuffer(DatagramChannelImpl.java:901)\n\tat java.base/sun.nio.ch.DatagramChannelImpl.send(DatagramChannelImpl.java:863)\n\tat java.base/sun.nio.ch.DatagramChannelImpl.send(DatagramChannelImpl.java:821)\n\tat java.base/sun.nio.ch.DatagramChannelImpl.blockingSend(DatagramChannelImpl.java:853)\n\tat java.base/sun.nio.ch.DatagramSocketAdaptor.send(DatagramSocketAdaptor.java:218)\n\tat java.base/java.net.DatagramSocket.send(DatagramSocket.java:669)\n\tat io.netty5.testsuite.transport.socket.DatagramUnicastTest.testReceiveEmptyDatagrams(DatagramUnicastTest.java:201)\n\tat io.netty5.testsuite.transport.socket.DatagramUnicastTest$1.run(DatagramUnicastTest.java:170)\n\tat io.netty5.testsuite.transport.socket.DatagramUnicastTest$1.run(DatagramUnicastTest.java:167)\n\tat io.netty5.testsuite.transport.AbstractComboTestsuiteTest.run(AbstractComboTestsuiteTest.java:54)\n\tat io.netty5.testsuite.transport.socket.DatagramUnicastTest.testReceiveEmptyDatagrams(DatagramUnicastTest.java:167)\n        ...\n```\n\nModifications:\n\nCall sendToAddress(...)\n\nResult:\n\nNo more test failures"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/dsa_pkcs1_aes_encrypted.key"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/dsa_pkcs1_des3_encrypted.key"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/dsa_pkcs1_unencrypted.key"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/generate-certs.sh"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/rsa_pkcs1_aes_encrypted.key"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/rsa_pkcs1_des3_encrypted.key"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/rsa_pkcs1_unencrypted.key"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/rsa_pkcs8_aes_encrypted.key"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/rsa_pkcs8_des3_encrypted.key"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/rsa_pkcs8_unencrypted.key"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c848vF-V2gAoZThkMWYzMDdiNmZmMjJkMWM0OWE2ZGQxNDgyODg2ODVkY2I2ZWM0YQ",
                "url": "https://github.com/netty/netty/pull/12670/commits/e8d1f307b6ff22d1c49a6dd148288685dcb6ec4a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 7323,
                "url": "https://github.com/netty/netty/issues/7323",
                "title": "Feature request: Support PKCS#1 keys when dealing with certificates",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">PKCS#1 is supported alongside with PKCS#8 keys.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">PKCS#1 is not supported</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4</p>",
                "resourcePath": "/netty/netty/issues/7323",
                "createdAt": "2017-10-21T23:24:56Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove shutdown hooks for default buffer allocators",
        "url": "https://github.com/netty/netty/pull/12682",
        "resourcePath": "/netty/netty/pull/12682",
        "createdAt": "2022-08-08T21:55:31Z",
        "number": 12682,
        "mergeCommit": {
          "oid": "ba129384131dc714496947d8227b1a5a9f7a177c",
          "message": "Remove shutdown hooks for default buffer allocators (#12682)\n\nMotivation:\r\nShutdown hooks can race with application threads, and this can cause problems since the allocators may still be in use during the shutdown process.\r\n\r\nIt is also not necessary to shut the allocators down, since the process is about to terminate anyway, at which point all memory will be returned to the OS regardlesss of what we do.\r\n\r\nModification:\r\nAvoid installing any shutdown hooks for closing the DefaultBufferAllocators.\r\n\r\nResult:\r\nWe should no longer see any \"closed allocator exceptions\" when shutting the JVM down - at least not any that are caused by these shared allocators.\r\n\r\nFixes #12671",
          "commitUrl": "https://github.com/netty/netty/commit/ba129384131dc714496947d8227b1a5a9f7a177c",
          "parents": {
            "nodes": [
              {
                "oid": "77ed82fc0e2f10f16622b83a9cbc4040adec4fac",
                "message": "Ensure we try to read again if RDHUP / eof is detected (#12683)\n\nMotivation:\r\n\r\nf9704477e85152c34cf894fee9ff6b4e16facb8e did introduce a change to just dispatch a read() when RDHUP / eof is detected. While this correct we also need to ensure we actually submit the read task later on.\r\n\r\nModifications:\r\n\r\nAdd check for RDHUP / eof\r\n\r\nResult:\r\n\r\nNo more random stales"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty5/buffer/api/DefaultBufferAllocators.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c8482C0n2gAoZTk2YzkxOWM2MzAyMDQ2M2I3YjBhY2QwNmE2MjkxZDI5NjE0OTMyMA",
                "url": "https://github.com/netty/netty/pull/12682/commits/e96c919c63020463b7b0acd06a6291d296149320"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12671,
                "url": "https://github.com/netty/netty/issues/12671",
                "title": "[netty 5] ByteToMessageDecoder tries to allocate from a closed allocator",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">ByteToMessageDecoder shouldn't try to allocate a buffer from a closed allocator.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">ByteToMessageDecoder tries to call decode when a channel becomes inactive which tries to allocate a buffer from a closed buffer allocator: <a href=\"https://gist.github.com/derklaro/38899e5d645adc058785e2197da0cdc6\">https://gist.github.com/derklaro/38899e5d645adc058785e2197da0cdc6</a></p>\n<p dir=\"auto\">Not sure if I am using something wrong (wrong call order?)... This seems to only sometimes happen during shutdown \ud83e\udd14</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">5.0.0.Alpha4</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openjdk version &quot;20-ea&quot; 2023-03-21\nOpenJDK Runtime Environment (build 20-ea+9-505)\nOpenJDK 64-Bit Server VM (build 20-ea+9-505, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">openjdk version \"20-ea\" 2023-03-21\nOpenJDK Runtime Environment (build 20-ea+9-505)\nOpenJDK 64-Bit Server VM (build 20-ea+9-505, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\"><code class=\"notranslate\">Linux testing 5.10.0-16-amd64 #1 SMP Debian 5.10.127-1 (2022-06-30) x86_64 GNU/Linux</code></p>",
                "resourcePath": "/netty/netty/issues/12671",
                "createdAt": "2022-08-06T17:58:23Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Merge readable and writable buffer component iteration",
        "url": "https://github.com/netty/netty/pull/12694",
        "resourcePath": "/netty/netty/pull/12694",
        "createdAt": "2022-08-12T22:43:23Z",
        "number": 12694,
        "mergeCommit": {
          "oid": "620fdc05b519af42e953108507ce3870e6a5033c",
          "message": "Merge readable and writable buffer component iteration (#12694)\n\nMotivation:\r\nIt should be possible to iterate the components of a buffer, even when it has no readable or writable bytes.\r\nFor the purpose of pointer arithmetic, it should also be possible to get a base pointer for off-heap buffers.\r\nIt additionally turns out that unifying ReadableComponent and WritableComponent into a single BufferComponent, allow us to make the iteration entirely allocation free for non-composite buffers.\r\nThis in turn allow us to simplify the API by removing the internal iteration methods and only keep a single forEachComponent iteration method.\r\n\r\nModification:\r\n- Remove WritableComponent and ReadableComponent, and their processors.\r\n- And in their place have a single BufferComponent which contain both of the APIs from the readable and writable components.\r\n- Add a baseNativeAddress method to BufferComponent.\r\n- Change all usages sites of both the internal and external versions of forEachReadable/Writable, to use the new forEachComponent.\r\n- Add firstReadable and firstWritable convenience methods to ComponentIterator, which will skip over components that are not readable or writable, respectively.\r\n- Add nextReadable and nextWritable methods to ComponentIterator.Next, which do the same.\r\n- Change places like EngineWrapper, IovArray, etc. to no longer rely on internal iteration but use external iteration instead.\r\n- Remove processor classes that only existed to be used for internal iteration.\r\n- Read-only buffers no longer have any \"writable bytes\".\r\n\r\nResult:\r\nIterating the components of non-composite buffers is now always allocation-free; no capturing-lambda or iterator objects are constructed.\r\nThe APIs are also simpler; fewer methods and fewer classes.\r\n\r\nFixes #12609 and closes #12611 \r\n\r\nCo-authored-by: Aayush Atharva <hyperx.pro@outlook.com>",
          "commitUrl": "https://github.com/netty/netty/commit/620fdc05b519af42e953108507ce3870e6a5033c",
          "parents": {
            "nodes": [
              {
                "oid": "52e2da93644494a4ac13960ee28e3f32f4f545a9",
                "message": "Include any core dumps in the build failure archives (#12703)\n\nMotivation:\r\nWe occasionally get JIT compiler crashes.\r\nThese produce core dumps, at least on Linux.\r\nIt's not clear where these dumps are placed, but if they are placed in our build directory, then it makes sense to include them in our failed build archives, so they have a chance to be debugged.\r\n\r\nModification:\r\nAlso include any `core` files produced in our build directory, in the failed build archive.\r\n\r\nResult:\r\nJIT and GC crashes now have a fighting chance of being debugged, when they occur."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty5/channel/epoll/NativeDatagramPacketArray.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-kqueue/src/main/java/io/netty5/channel/kqueue/AbstractKQueueChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-kqueue/src/main/java/io/netty5/channel/kqueue/KQueueDatagramChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-kqueue/src/main/java/io/netty5/channel/kqueue/KQueueSocketChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/src/main/java/io/netty5/channel/unix/IovArray.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport-native-unix-common/src/main/java/io/netty5/channel/unix/RecvFromAddressDomainSocket.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/src/main/java/io/netty5/channel/unix/SocketWritableByteChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty5/channel/ChannelOutboundBuffer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty5/channel/socket/nio/NioDatagramChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty5/channel/ChannelOutboundBufferTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c849HtPk2gAoYzBlMTdiNmNiYjhjMzcyNjRlZjNkOWVhODg2MmM3MTk3ODAyYzQwZQ",
                "url": "https://github.com/netty/netty/pull/12694/commits/c0e17b6cbb8c37264ef3d9ea8862c7197802c40e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12609,
                "url": "https://github.com/netty/netty/issues/12609",
                "title": "Hard to get direct memory address for netty5 Buffer",
                "bodyHTML": "<p dir=\"auto\">I want to get a direct memory address for Buffer where <code class=\"notranslate\">writerOffset() == readerOffset()</code> but current design of Buffer in netty5 is hard.<br>\nIf <code class=\"notranslate\">writerOffset() == readerOffset() &amp;&amp; writerOffset() == capacity()</code> then <code class=\"notranslate\">forEachReadable</code> and <code class=\"notranslate\">forEachWritable</code> do not <code class=\"notranslate\">foreach</code>.<br>\nIf there any readable or writable bytes then this <em>solution</em> add something similar of netty4 ByteBuf memoryAddress:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"var address = 0L\nbuf.forEachReadable(\n  0,\n  (_, component) =&gt;\n    address = component.readableNativeAddress() - buf.readerOffset()\n    false\n)\nif address == 0 then\n  buf.forEachWritable(\n    0,\n    (_, component) =&gt;\n      address = component.writableNativeAddress() - buf.writerOffset()\n      false\n  )\naddress match\n  case 0L =&gt; throw BufferMemoryAddressIsZero\n  case _ =&gt; address\"><pre class=\"notranslate\"><code class=\"notranslate\">var address = 0L\nbuf.forEachReadable(\n  0,\n  (_, component) =&gt;\n    address = component.readableNativeAddress() - buf.readerOffset()\n    false\n)\nif address == 0 then\n  buf.forEachWritable(\n    0,\n    (_, component) =&gt;\n      address = component.writableNativeAddress() - buf.writerOffset()\n      false\n  )\naddress match\n  case 0L =&gt; throw BufferMemoryAddressIsZero\n  case _ =&gt; address\n</code></pre></div>\n<p dir=\"auto\">Why this is so hard in netty5? Previous ByteBuf'er is easy to use with native code (JEP-419).</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When I parsing a Buffer and get to the end I want to get raw memoryAddress of my single offheap Buffer and pass it to native code with my offset and length variables by myself, for example to check integrity in STUN protocol.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">forEachReadable and forEachWritable do not foreach without changing writerOffset or readerOffset. And there no ability to get direct memory address without a proxy class like SingleComponentIterator.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">netty-5.0.0.Alpha3</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/12609",
                "createdAt": "2022-07-14T15:35:04Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Skip api compatibility validations for the microbench module",
        "url": "https://github.com/netty/netty/pull/12718",
        "resourcePath": "/netty/netty/pull/12718",
        "createdAt": "2022-08-18T13:26:08Z",
        "number": 12718,
        "mergeCommit": {
          "oid": "b7ecda0759087b970260e841bbd65aa7b85d7b66",
          "message": "Skip revapi check for the microbench (#12718)\n\nMotivation:\r\nWe should be able to evolve and change our benchmark code and infrastructure without worrying about compatibility.\r\n\r\nModification:\r\nSkip revapi check for the microbench module and remove benchmarking specific configuration from the revapi plugin.\r\n\r\nResult:\r\nThe microbench module is no longer subject to compatibility checks.\r\n\r\nCo-authored-by: ahadadi <ahadadi@outbrain.com>",
          "commitUrl": "https://github.com/netty/netty/commit/b7ecda0759087b970260e841bbd65aa7b85d7b66",
          "parents": {
            "nodes": [
              {
                "oid": "b6b458433cb0361fe5b16e269e5115fff8344be4",
                "message": "Add heap / thread dumps to .gitignore (#12711)\n\nMotivation:\r\n\r\nWe should not commit heap / thread dumps by mistake.\r\n\r\nModifications:\r\n\r\nAdd dump related files to .gitignore\r\n\r\nResult:\r\n\r\nNo commit dumps by mistake"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "microbench/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c849ZH1K2gAoNTExYWZjMDBmMjIyYWJjMzliYjdjNGZmMGU4MjUwNzVlNGQ0Y2U5Nw",
                "url": "https://github.com/netty/netty/pull/12718/commits/511afc00f222abc39bb7c4ff0e825075e4d4ce97"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12716,
                "url": "https://github.com/netty/netty/issues/12716",
                "title": "microbench module is subject to API compatibility validations",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">All changes in the <code class=\"notranslate\">microbench</code> module should not be subjected to API compatibility validations.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Some changes in the <code class=\"notranslate\">microbench</code> module are subjected to API compatibility validations.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Remove a method from a benchmark class that's not in the <code class=\"notranslate\">io.netty.microbench</code> package and run <code class=\"notranslate\">mvn clean install -am -pl microbench</code>. This will fail on compatibility issues.</p>",
                "resourcePath": "/netty/netty/issues/12716",
                "createdAt": "2022-08-18T12:51:04Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix bug in SslContext private key reading fall-back path",
        "url": "https://github.com/netty/netty/pull/12746",
        "resourcePath": "/netty/netty/pull/12746",
        "createdAt": "2022-08-26T23:58:59Z",
        "number": 12746,
        "mergeCommit": {
          "oid": "6c81a3fa025f31bc0308d7913f8ecbf540f99247",
          "message": "Fix bug in SslContext private key reading fall-back path (#12746)\n\nMotivation:\r\nWe first try to read private keys with BouncyCastle, and then fall back to our own code if that fails.\r\nIt could be the case, that BouncyCastle read some data before it failed, and in that case we need to make sure that our fallback code gets to read the key data from the original stream position - not whatever position caused a failure in BouncyCastle.\r\n\r\nModification:\r\nUse the mark and reset methods of InputStream to reset the key stream position, if BouncyCastle cannot read a key.\r\nIf the provided input stream does not already support marking, then we wrap it in a BufferedInputStream which does.\r\nWe allow up to 1 MiB of data to be buffered for this purpose.\r\nIf the key is bigger than this, and BouncyCastle reads more than this before failing, then resetting will throw an exception so we don't get silent failures.\r\n\r\nResult:\r\nFixed private key fallback code path.\r\nFixes #12745",
          "commitUrl": "https://github.com/netty/netty/commit/6c81a3fa025f31bc0308d7913f8ecbf540f99247",
          "parents": {
            "nodes": [
              {
                "oid": "f53a5ef79ed63e98b6359e81c280c56d930a302e",
                "message": "Fix regression in SslContext private key loading (#12743)\n\nMotivation:\r\nThe BouncyCastlePemReader checked that the bcprov dependency was available, but not the bcpkix dependency, which is also required to use the Bouncy Castle PEM reader.\r\nThis means SslContext could be tricked into using  Bouncy Castle for PEM reading, when the required classes were not actually available.\r\n\r\nModification:\r\nAdd another check for bcpkix, and avoid using Bouncy Castle for PEM reading if its PEMReader is not available.\r\n\r\nResult:\r\nWe no longer get the following exception:\r\n\r\n```\r\njava.lang.NoClassDefFoundError: org/bouncycastle/openssl/PEMParser\r\n\tat io.netty.handler.ssl.BouncyCastlePemReader.newParser(BouncyCastlePemReader.java:203)\r\n\tat io.netty.handler.ssl.BouncyCastlePemReader.getPrivateKey(BouncyCastlePemReader.java:134)\r\n\tat io.netty.handler.ssl.SslContext.toPrivateKey(SslContext.java:1126)\r\n```"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslContext.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c8495aT_2gAoNzdhMjlkYzkwNGY2ZDYyNTMwODc5NzZmMjdkYzUxZjIyNTA0MTk4Yw",
                "url": "https://github.com/netty/netty/pull/12746/commits/77a29dc904f6d6253087976f27dc51f22504198c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12745,
                "url": "https://github.com/netty/netty/issues/12745",
                "title": "Fallback to PemReader fails when BouncyCastlePemReader encounters an unsupported type",
                "bodyHTML": "<p dir=\"auto\">While I'm not completely certain this is a common scenario, we observed this failure on upgrading to Netty <code class=\"notranslate\">4.1.80</code> and when using a custom bundle for a private key.</p>\n<p dir=\"auto\">From a quick glance, it looks like it should be resolved by ensuring that the input stream passed to the <code class=\"notranslate\">BouncyCastlePemReader</code> is a copy, and processed independently of the original stream processed by <code class=\"notranslate\">PemReader</code></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.80 w/ tcnative 2.0.54</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"17.0.4\" 2022-07-19 LTS</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1330268519\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/12670\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/12670/hovercard\" href=\"https://github.com/netty/netty/pull/12670\">#12670</a> introduced a change that enforces eager parsing by <code class=\"notranslate\">BouncyCastlePemReader</code> when the classpath includes the <code class=\"notranslate\">BouncyCastleProvider</code></p>\n<p dir=\"auto\">The intended behavior should be the fallback to <code class=\"notranslate\">PemReader</code> kicking in when the key type does not match one of the supported variants.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">In the case where there is a <code class=\"notranslate\">BouncyCastleProvider</code> on the classpath, but the key type is of a format that is not supported by <code class=\"notranslate\">BouncyCastlePemReader</code>, the <strong>input stream has already been read</strong>.</p>\n<p dir=\"auto\">This renders the fallback to trigger, but fails decoding.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.lang.IllegalArgumentException: Input stream does not contain valid private key.\n        at io.netty.handler.ssl.SslContextBuilder.keyManager(SslContextBuilder.java:416)\n        at io.netty.handler.ssl.SslContextBuilder.keyManager(SslContextBuilder.java:341)\n        at io.netty.handler.ssl.SslContextBuilder.forServer(SslContextBuilder.java:84)\n....\nCaused by: java.security.KeyException: could not find a PKCS #8 private key in input stream (see https://netty.io/wiki/sslcontextbuilder-and-private-key.html for more information)\n        at io.netty.handler.ssl.PemReader.keyNotFoundException(PemReader.java:156)\n        at io.netty.handler.ssl.PemReader.readPrivateKey(PemReader.java:137)\n        at io.netty.handler.ssl.SslContext.toPrivateKey(SslContext.java:1152)\n        at io.netty.handler.ssl.SslContextBuilder.keyManager(SslContextBuilder.java:414)\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: java.lang.IllegalArgumentException: Input stream does not contain valid private key.\n        at io.netty.handler.ssl.SslContextBuilder.keyManager(SslContextBuilder.java:416)\n        at io.netty.handler.ssl.SslContextBuilder.keyManager(SslContextBuilder.java:341)\n        at io.netty.handler.ssl.SslContextBuilder.forServer(SslContextBuilder.java:84)\n....\nCaused by: java.security.KeyException: could not find a PKCS #8 private key in input stream (see https://netty.io/wiki/sslcontextbuilder-and-private-key.html for more information)\n        at io.netty.handler.ssl.PemReader.keyNotFoundException(PemReader.java:156)\n        at io.netty.handler.ssl.PemReader.readPrivateKey(PemReader.java:137)\n        at io.netty.handler.ssl.SslContext.toPrivateKey(SslContext.java:1152)\n        at io.netty.handler.ssl.SslContextBuilder.keyManager(SslContextBuilder.java:414)\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Use a key with a format not supported  by the <code class=\"notranslate\">BouncyCastlePemReader</code>, and trigger the fallback logic.</p>",
                "resourcePath": "/netty/netty/issues/12745",
                "createdAt": "2022-08-26T23:07:17Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Properly make MessageFormatter and FormattingTuple public",
        "url": "https://github.com/netty/netty/pull/12763",
        "resourcePath": "/netty/netty/pull/12763",
        "createdAt": "2022-09-01T15:51:24Z",
        "number": 12763,
        "mergeCommit": {
          "oid": "5256f3628c553081e674f7b27e93a97350141715",
          "message": "Properly make MessageFormatter and FormattingTuple public (#12763)\n\nMotivation:\r\n\r\n_Taken from #12761_\r\n\r\nClasses `io.netty.util.internal.logging.FormattingTuple` and `io.netty.util.internal.logging.MessageFormatter` are public classes, but the latters's format methods are package-private while the former's constructor is package-private making their use in custom in InternalLoggerFactory implementations impossible.\r\n\r\nModification:\r\n\r\nMake necessary methods public\r\n\r\nResult:\r\n\r\nFixes #12761.",
          "commitUrl": "https://github.com/netty/netty/commit/5256f3628c553081e674f7b27e93a97350141715",
          "parents": {
            "nodes": [
              {
                "oid": "9f10a284712bbd7f4f8ded7711a50bfaff38f567",
                "message": "HttpMessages implementing HttpContent types too aren't handled correctly (Fixes #12750) (#12751)\n\n\r\nMotivation:\r\n\r\nChanges due to #12709 have added a code path.\r\n\r\nModifications:\r\n\r\nRestore the \"just http message\" case as separated by the http content ones\r\n\r\nResult:\r\n\r\nSame encoding as original code\r\n\r\n\r\nCo-authored-by: Chris Vest <christianvest_hansen@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/logging/FormattingTuple.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/logging/MessageFormatter.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84-ORNZ2gAoNTA2MDc3M2M3NzAzNTM1NWI0NGJhYWEzMjI2YTUyMDg4ZGFiNTViMQ",
                "url": "https://github.com/netty/netty/pull/12763/commits/5060773c77035355b44baaa3226a52088dab55b1"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12761,
                "url": "https://github.com/netty/netty/issues/12761",
                "title": "Make MessageFormatter and FormattingTuple public",
                "bodyHTML": "<p dir=\"auto\">Classes <code class=\"notranslate\">io.netty.util.internal.logging.FormattingTuple</code> and <code class=\"notranslate\">io.netty.util.internal.logging.MessageFormatter</code> are <code class=\"notranslate\">public</code> classes, but the latter's <code class=\"notranslate\">format</code> methods are package-private while the former's <code class=\"notranslate\">constructor</code> is package-private making their use in custom in <code class=\"notranslate\">InternalLoggerFactory</code> implementations impossible.</p>\n<p dir=\"auto\">We ran into this issue in Quarkus and had to resort to copying them.</p>",
                "resourcePath": "/netty/netty/issues/12761",
                "createdAt": "2022-09-01T13:09:08Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix bug in forEachByte on nested composite bytebuf with leak detection",
        "url": "https://github.com/netty/netty/pull/12790",
        "resourcePath": "/netty/netty/pull/12790",
        "createdAt": "2022-09-09T18:39:30Z",
        "number": 12790,
        "mergeCommit": {
          "oid": "1440435865aa86a350094881b31005cb232424fc",
          "message": "Fix bug in forEachByte on nested composite bytebuf with leak detection (#12790)\n\nMotivation:\r\nAn NPE could occur when forEachByte was called on nested leak-aware composite byte buffers.\r\n\r\nModification:\r\nWrappedCompositeByteBuf extends CompositeByteBuf but must delegate all calls to the wrapped instance.\r\nAdd delegation calls for forEachByteAsc0 and forEachByteDesc0.\r\nWithout delegation, those calls would, from an outer composite buffer, go to the composite structure of the wrapper buffer, which have no components.\r\n\r\nResult:\r\nNo more NPE when calling forEachByte on nested composite leak-aware buffers.\r\n\r\nFixes #12787",
          "commitUrl": "https://github.com/netty/netty/commit/1440435865aa86a350094881b31005cb232424fc",
          "parents": {
            "nodes": [
              {
                "oid": "ef4a9dffeb3004a51b89e72330bd309a875f58e3",
                "message": "Maven must run in batch mode when listing staged releases\n\nMotivation:\nWe're grepping the output of the command, and terminal color codes get in the way of that.\n\nModification:\nAsk maven to run in batch mode, to prevent colored output.\n\nResult:\nThe list_staged_release.sh script no longer fails to find any staged releases in the maven output."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/WrappedCompositeByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/AbstractCompositeByteBufTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84-sqgS2gAoZTE4OWMwN2RhOTJiNjI0ODA4Zjc2ZTliYWZjMDFmOGY5ZTY4ODdlNw",
                "url": "https://github.com/netty/netty/pull/12790/commits/e189c07da92b624808f76e9bafc01f8f9e6887e7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12787,
                "url": "https://github.com/netty/netty/issues/12787",
                "title": "NPE with Paranoid leak detector and using a ByteProcessor on a CompositeBuffer of CompositeBuffer",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">No exception</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Getting a NullPointerException</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.lang.NullPointerException\n    at io.netty.buffer.CompositeByteBuf.toComponentIndex0(CompositeByteBuf.java:930)\n    at io.netty.buffer.CompositeByteBuf.forEachByteAsc0(CompositeByteBuf.java:672)\n    at io.netty.buffer.CompositeByteBuf.forEachByteAsc0(CompositeByteBuf.java:682)\n    at io.netty.buffer.AbstractByteBuf.forEachByte(AbstractByteBuf.java:1281)\n    at io.netty.buffer.WrappedCompositeByteBuf.forEachByte(WrappedCompositeByteBuf.java:393)\n    at io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.forEachByte(AdvancedLeakAwareCompositeByteBuf.java:657)\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: java.lang.NullPointerException\n    at io.netty.buffer.CompositeByteBuf.toComponentIndex0(CompositeByteBuf.java:930)\n    at io.netty.buffer.CompositeByteBuf.forEachByteAsc0(CompositeByteBuf.java:672)\n    at io.netty.buffer.CompositeByteBuf.forEachByteAsc0(CompositeByteBuf.java:682)\n    at io.netty.buffer.AbstractByteBuf.forEachByte(AbstractByteBuf.java:1281)\n    at io.netty.buffer.WrappedCompositeByteBuf.forEachByte(WrappedCompositeByteBuf.java:393)\n    at io.netty.buffer.AdvancedLeakAwareCompositeByteBuf.forEachByte(AdvancedLeakAwareCompositeByteBuf.java:657)\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ul dir=\"auto\">\n<li>set ResourceLeakDetector in Paranoid mode</li>\n<li>create a CompositeBuffer of CompositeBuffer of Buffers</li>\n<li>run a ByteProcessor on the ByteBuf</li>\n</ul>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\"><a href=\"https://github.com/netty/netty/files/9535586/netty-paranoid-leak.zip\">netty-paranoid-leak.zip</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.81.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">11.0.16</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Ubuntu 20.04.5 LTS</p>",
                "resourcePath": "/netty/netty/issues/12787",
                "createdAt": "2022-09-09T13:06:22Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Automatically generate native-image conditional metadata for ChannelHandler implementations.",
        "url": "https://github.com/netty/netty/pull/12794",
        "resourcePath": "/netty/netty/pull/12794",
        "createdAt": "2022-09-11T01:02:40Z",
        "number": 12794,
        "mergeCommit": {
          "oid": "5327fae519e651ab7930c2af1d6ea2353006b590",
          "message": "Automatically generate native-image conditional metadata for ChannelHandler implementations. (#12794)\n\nMotivation:\r\nAnalogous to https://github.com/netty/netty/pull/12738, this PR introduces automatic conditional native-image metadata generation for different ChannelHandler implementations\r\n\r\nModification:\r\nThis PR is basically the same as https://github.com/netty/netty/pull/12738, but adapted to conform to the Java language level 6.\r\nThis PR also adds the metadata generation to more subprojects that contain ChannelHandler implementations.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12725",
          "commitUrl": "https://github.com/netty/netty/commit/5327fae519e651ab7930c2af1d6ea2353006b590",
          "parents": {
            "nodes": [
              {
                "oid": "980f48a9089849adda1d5035eb3ac5ba567a3b23",
                "message": "Reject HTTP/2 header values with invalid characters (#12760)\n\nMotivation:\r\nIn https://datatracker.ietf.org/doc/html/rfc7540#section-10.3 it says that only certain characters are valid in a header value:\r\n\r\n> Any request or response that contains a character not permitted\r\n> in a header field value MUST be treated as malformed (Section 8.1.2.6).\r\n> Valid characters are defined by the \"field-content\" ABNF rule in\r\n> Section 3.2 of [RFC7230].\r\n\r\nModification:\r\nAdd a header value validation step to HpackDecoder.\r\n\r\nResult:\r\nHeader values are now validated against the Section 10.3, etc. rules."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns/src/main/resources/META-INF/native-image/resolver-dns-handlers/reflect-config.json"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns/src/test/java/io/netty/resolver/dns/NativeImageHandlerMetadataTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-sctp/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-sctp/src/main/resources/META-INF/native-image/transport-sctp-handlers/reflect-config.json"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-sctp/src/test/java/io/netty/handler/codec/sctp/NativeImageHandlerMetadataTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport/src/main/resources/META-INF/native-image/transport-handlers/reflect-config.json"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport/src/test/java/io/netty/channel/NativeImageHandlerMetadataTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport/src/test/java/io/netty/nativeimage/ChannelHandlerMetadataUtil.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84-uce12gAoMjE3ODdhOGMzZmNmYjg2YWUzOTZhOWU4YmQ3ODI2ZmI0ODg3YjlkZg",
                "url": "https://github.com/netty/netty/pull/12794/commits/21787a8c3fcfb86ae396a9e8bd7826fb4887b9df"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12725,
                "url": "https://github.com/netty/netty/issues/12725",
                "title": "Native builds using GraalVM 22.2 throw NoSuchMethodException at runtime",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Server/Client using netty reply to requests/gets responses.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Native binaries built with GraalVM 22.2 results in Server/Client freeze and many <code class=\"notranslate\">NoSuchMethodException</code> are logged for different classes and methods, here below one of them:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NoSuchMethodException: io.netty.channel.DefaultChannelPipeline$TailContext.channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)\n\tat java.lang.Class.getMethod(DynamicHub.java:2108)\n\tat io.netty.channel.ChannelHandlerMask$2.run(ChannelHandlerMask.java:174)\n\tat io.netty.channel.ChannelHandlerMask$2.run(ChannelHandlerMask.java:169)\n\tat java.security.AccessController.executePrivileged(AccessController.java:145)\n\tat java.security.AccessController.doPrivileged(AccessController.java:98)\n\tat io.netty.channel.ChannelHandlerMask.isSkippable(ChannelHandlerMask.java:169)\n\tat io.netty.channel.ChannelHandlerMask.mask0(ChannelHandlerMask.java:115)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.NoSuchMethodException: io.netty.channel.DefaultChannelPipeline$TailContext.channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)\n\tat java.lang.Class.getMethod(DynamicHub.java:2108)\n\tat io.netty.channel.ChannelHandlerMask$2.run(ChannelHandlerMask.java:174)\n\tat io.netty.channel.ChannelHandlerMask$2.run(ChannelHandlerMask.java:169)\n\tat java.security.AccessController.executePrivileged(AccessController.java:145)\n\tat java.security.AccessController.doPrivileged(AccessController.java:98)\n\tat io.netty.channel.ChannelHandlerMask.isSkippable(ChannelHandlerMask.java:169)\n\tat io.netty.channel.ChannelHandlerMask.mask0(ChannelHandlerMask.java:115)\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ul dir=\"auto\">\n<li>download the 'reproducer' project from the link below</li>\n<li>open a shell in the project directory and start local server:</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"cd local-server\n../gradlew run\"><pre class=\"notranslate\"><code class=\"notranslate\">cd local-server\n../gradlew run\n</code></pre></div>\n<ul dir=\"auto\">\n<li>open another shell in the project directory and compile and run the application:</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"cd test-app\n../gradlew nativeCompile\nbuild/native/nativeCompile/application\"><pre class=\"notranslate\"><code class=\"notranslate\">cd test-app\n../gradlew nativeCompile\nbuild/native/nativeCompile/application\n</code></pre></div>\n<ul dir=\"auto\">\n<li>try the echo (will hang):</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"curl http://localhost:8080/test/echo\"><pre class=\"notranslate\"><code class=\"notranslate\">curl http://localhost:8080/test/echo\n</code></pre></div>\n<ul dir=\"auto\">\n<li>try the call to the local server (will hang):</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"curl http://localhost:8080/test/call\"><pre class=\"notranslate\"><code class=\"notranslate\">curl http://localhost:8080/test/call\n</code></pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\"><a href=\"https://github.com/asantare/http-client-test\">https://github.com/asantare/http-client-test</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.79.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"11.0.16\" 2022-07-19<br>\nOpenJDK Runtime Environment GraalVM CE 22.2.0 (build 11.0.16+8-jvmci-22.2-b06)<br>\nOpenJDK 64-Bit Server VM GraalVM CE 22.2.0 (build 11.0.16+8-jvmci-22.2-b06, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin Kernel Version 21.6.0</p>",
                "resourcePath": "/netty/netty/issues/12725",
                "createdAt": "2022-08-22T09:54:53Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Avoid failing HTTP/2 requests with `upgrade-insecure-requests`",
        "url": "https://github.com/netty/netty/pull/12799",
        "resourcePath": "/netty/netty/pull/12799",
        "createdAt": "2022-09-13T01:27:13Z",
        "number": 12799,
        "mergeCommit": {
          "oid": "570c5d75bd172fbb2f6f68685326d4acb3978482",
          "message": "Avoid failing HTTP/2 requests with `upgrade-insecure-requests` (#12799)\n\nMotivation:\r\nThis is a non-standard header that is not _explicitly_ called out as connection related, even though it can be argued that it is.\r\nRegardless, Chrome and Firefox do actually send this header in their HTTP/2 requests, so rejecting these is quite troublesome.\r\nSafari doesn't send this header.\r\n\r\nModification:\r\nRemove the check for `upgrade-insecure-requests` in the header validation in HpackDecoder.\r\nAlso update tests to match.\r\n\r\nResult:\r\nHTTP/2 requests from Chrome and Firefox are no longer rejected by the header validation.\r\n\r\nFixes #12798",
          "commitUrl": "https://github.com/netty/netty/commit/570c5d75bd172fbb2f6f68685326d4acb3978482",
          "parents": {
            "nodes": [
              {
                "oid": "75982ea652eee022287c0af29ed629be4d0a1bfd",
                "message": "DefaultLastHttpContent doesn't allow setting trailingHeaders while other default types do (#12796)\n\nMotivation:\r\n\r\nSetting trailingHeaders directly can help users to duplicate code to workaround it\r\n\r\nModifications:\r\n\r\nExpose setting trailingHeaders but giving up on headers validation\r\n\r\nResult:\r\n\r\nLife easier for users"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/HpackDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2HeadersDecoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84-06-j2gAoMWQzM2UxNzM2OTM1ODE3ZjYzZDVjMTMzZTdiOTA2MzIzYjk2Mzk0Zg",
                "url": "https://github.com/netty/netty/pull/12799/commits/1d33e1736935817f63d5c133e7b906323b96394f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12798,
                "url": "https://github.com/netty/netty/issues/12798",
                "title": "Chrome/Firefox send `upgrade-insecure-requests` header",
                "bodyHTML": "<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1356411771\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/12755\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/12755/hovercard\" href=\"https://github.com/netty/netty/pull/12755\">#12755</a> is unfortunately breaking Chrome and Firefox which both (rightly or wrongly) send the <code class=\"notranslate\">upgrade-insecure-requests</code> header:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[DEBUG|2022-09-13 10:23:29.419|netty-worker1 ||io.netty.handler.codec.http2.Http2FrameCodec] Stream exception thrown for unknown stream 1.\nio.netty.handler.codec.http2.Http2Exception$StreamException: Illegal connection-specific header 'upgrade-insecure-requests' encountered.\n\tat io.netty.handler.codec.http2.Http2Exception.streamError(Http2Exception.java:153)\n\tat io.netty.handler.codec.http2.HpackDecoder.validate(HpackDecoder.java:412)\n\tat io.netty.handler.codec.http2.HpackDecoder.access$000(HpackDecoder.java:56)\n\tat io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink.appendToHeaderList(HpackDecoder.java:639)\n\tat io.netty.handler.codec.http2.HpackDecoder.insertHeader(HpackDecoder.java:506)\n\tat io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:294)\n\tat io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:131)\"><pre class=\"notranslate\"><code class=\"notranslate\">[DEBUG|2022-09-13 10:23:29.419|netty-worker1 ||io.netty.handler.codec.http2.Http2FrameCodec] Stream exception thrown for unknown stream 1.\nio.netty.handler.codec.http2.Http2Exception$StreamException: Illegal connection-specific header 'upgrade-insecure-requests' encountered.\n\tat io.netty.handler.codec.http2.Http2Exception.streamError(Http2Exception.java:153)\n\tat io.netty.handler.codec.http2.HpackDecoder.validate(HpackDecoder.java:412)\n\tat io.netty.handler.codec.http2.HpackDecoder.access$000(HpackDecoder.java:56)\n\tat io.netty.handler.codec.http2.HpackDecoder$Http2HeadersSink.appendToHeaderList(HpackDecoder.java:639)\n\tat io.netty.handler.codec.http2.HpackDecoder.insertHeader(HpackDecoder.java:506)\n\tat io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:294)\n\tat io.netty.handler.codec.http2.HpackDecoder.decode(HpackDecoder.java:131)\n</code></pre></div>\n<p dir=\"auto\">With Netty 4.1.80 and below I was able to run with <code class=\"notranslate\">validateHeaders(true)</code> (the default). However with Netty 4.1.81 the only work around I've found is;</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        Http2FrameCodecBuilder builder = Http2FrameCodecBuilder.forServer();\n        builder.validateHeaders(false);\"><pre class=\"notranslate\"><code class=\"notranslate\">        Http2FrameCodecBuilder builder = Http2FrameCodecBuilder.forServer();\n        builder.validateHeaders(false);\n</code></pre></div>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/chrisvest/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/chrisvest\">@chrisvest</a> My thanks for implementing these extra validations. And my thanks too for helping me investigate this. I am running with a particularly restrictive 'Content-Security-Policy' header - but that doesn't seem to be related as the exception above occurs well before a cache-clean web-browser sends the <code class=\"notranslate\">upgrade-insecure-requests</code> header.</p>",
                "resourcePath": "/netty/netty/issues/12798",
                "createdAt": "2022-09-13T00:57:02Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use local stored Unsafe instance",
        "url": "https://github.com/netty/netty/pull/12813",
        "resourcePath": "/netty/netty/pull/12813",
        "createdAt": "2022-09-16T09:21:27Z",
        "number": 12813,
        "mergeCommit": {
          "oid": "46524db7d885b73a55c3a49622237cdd7d39fd0a",
          "message": "Use local stored Unsafe instance (#12813)\n\nMotivation:\r\n\r\nWe already store the Unsafe instance in a local variable. No need to retrieve it again\r\n\r\nModifications:\r\n\r\nUse local stored Unsafe instance\r\n\r\nResult:\r\n\r\nCleanup, fixes https://github.com/netty/netty/issues/12812",
          "commitUrl": "https://github.com/netty/netty/commit/46524db7d885b73a55c3a49622237cdd7d39fd0a",
          "parents": {
            "nodes": [
              {
                "oid": "d684f15cf8bcfc3da8c41eda5763fd5149170ef8",
                "message": "Fix test isolation failure with DeleteFileOnExitHooks (#12809)\n\nMotivation:\r\nDiskAttributes add themselves to a static mutable map when their `deleteOnExit` is `true`.\r\nThe `DeleteOnExitHooksTest` manipulates this map and deletes the files in it, causing random test isolation failures.\r\n\r\nModification:\r\nMake the `DeleteFileOnExitHookTest` isolated.\r\nAlso make the test use a new random temp directory every time.\r\n\r\nResult:\r\nNo more tests in the http module randomly failing with \"file not found\"."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/nio/NioEventLoop.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84_FeEJ2gAoNDNiZjBhYmE4NzZhMmIxNDhiYjE4ZmE3MGJkMGRjOGM2MWUxMTM1Mw",
                "url": "https://github.com/netty/netty/pull/12813/commits/43bf0aba876a2b148bb18fa70bd0dc8c61e11353"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12812,
                "url": "https://github.com/netty/netty/issues/12812",
                "title": "Question about unsafe used in processSelectedKey in 4.1",
                "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/43713766/190537971-d5d46654-2106-4069-9ffa-6511c9b839af.png\"><img src=\"https://user-images.githubusercontent.com/43713766/190537971-d5d46654-2106-4069-9ffa-6511c9b839af.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">why the OP_WRITE branch do not use unsafe directly?</p>\n<p dir=\"auto\">the code url is <a href=\"https://github.com/netty/netty/blob/4.1/transport/src/main/java/io/netty/channel/nio/NioEventLoop.java\">https://github.com/netty/netty/blob/4.1/transport/src/main/java/io/netty/channel/nio/NioEventLoop.java</a></p>",
                "resourcePath": "/netty/netty/issues/12812",
                "createdAt": "2022-09-16T01:40:34Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove Apache commons logging related classes",
        "url": "https://github.com/netty/netty/pull/12857",
        "resourcePath": "/netty/netty/pull/12857",
        "createdAt": "2022-10-01T21:07:32Z",
        "number": 12857,
        "mergeCommit": {
          "oid": "481d1dd046f6a77030227d25547fd43e0f2e9524",
          "message": "Remove Apache commons logging related classes (#12857)\n\nMotivation:\r\nApache commons logging has not been updated since 2014. and Netty's classes that support for it was marked as deprecated since 2016. (#5615)\r\n\r\nModifications:\r\n\r\nRemove Apache commons logging related classes and its dependencies\r\n\r\nResult:\r\nClean up(#12856)",
          "commitUrl": "https://github.com/netty/netty/commit/481d1dd046f6a77030227d25547fd43e0f2e9524",
          "parents": {
            "nodes": [
              {
                "oid": "2b35972e35013dd58008210e691a0a6f00f14e2a",
                "message": "Remove a duplicated property (#12855)\n\nMotivation:\r\nDuplicate property is error-prone. we better remove it.\r\n\r\nModifications:\r\nremove the property with older version.\r\n\r\nResult:\r\nClean up"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "NOTICE.txt"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "common/src/main/java/io/netty5/util/internal/logging/CommonsLogger.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "common/src/main/java/io/netty5/util/internal/logging/CommonsLoggerFactory.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "common/src/test/java/io/netty5/util/internal/logging/CommonsLoggerFactoryTest.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "common/src/test/java/io/netty5/util/internal/logging/CommonsLoggerTest.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "license/LICENSE.commons-logging.txt"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c84__vpe2gAoMjBjNWEyNGM5YTBiOThiYTVlNDM2NTc3ZDRiYzYwNWUwNGY2YzM4OA",
                "url": "https://github.com/netty/netty/pull/12857/commits/20c5a24c9a0b98ba5e436577d4bc605e04f6c388"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12856,
                "url": "https://github.com/netty/netty/issues/12856",
                "title": "Proposal)Netty5)Remove Apache commons logging related classes",
                "bodyHTML": "<p dir=\"auto\">Apache commons logging has not been updated since 2014.<br>\nand Netty's classes that support for it was marked as deprecated in 2016. (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"168634251\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/5615\" data-hovercard-type=\"issue\" data-hovercard-url=\"/netty/netty/issues/5615/hovercard\" href=\"https://github.com/netty/netty/issues/5615\">#5615</a>)<br>\nI think now is a good time to get rid of deprecated classes and their dependencies.</p>\n<p dir=\"auto\">Please let me know If I can create a PR.</p>",
                "resourcePath": "/netty/netty/issues/12856",
                "createdAt": "2022-10-01T17:37:33Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Optimize FastThreadLocal",
        "url": "https://github.com/netty/netty/pull/12893",
        "resourcePath": "/netty/netty/pull/12893",
        "createdAt": "2022-10-13T17:13:36Z",
        "number": 12893,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/concurrent/FastThreadLocal.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/InternalThreadLocalMap.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/concurrent/FastThreadLocalTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85AwUqs2gAoNDcyZTBjYzY5MWJhYjNiNGFjMGE3OWI1ZGU4MjJiZTIwOTQ1NTY1MQ",
                "url": "https://github.com/netty/netty/pull/12893/commits/472e0cc691bab3b4ac0a79b5de822be209455651"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11937,
                "url": "https://github.com/netty/netty/issues/11937",
                "title": "`FastThreadLocal` does not have the same behavior with Java's `ThreadLocal`",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">FastThreadLocal</code> should have the same behavior with Java's <code class=\"notranslate\">ThreadLocal</code>.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">FastThreadLocal</code> does not have the same behavior with Java's <code class=\"notranslate\">ThreadLocal</code>.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import io.netty.util.concurrent.FastThreadLocal;\n\n    public static void main(String[] args) {\n        /**\n         * The 'for loop' simulates following scene:\n         * The application continuously create 'FastThreadLocal' instances, but GC-ed them subsequently.\n         * The application running for a long time.\n         */\n        for (long i = 0; i &lt; Integer.MAX_VALUE; i++) {\n            FastThreadLocal&lt;Object&gt; fst_1 = new FastThreadLocal&lt;&gt;();\n            // ... do some business logic with 'fst_1'... //\n            fst_1 = null; // GC-ed 'fst_1'.\n        }\n\n        // One day, suddenly the application can not create FastThreadLocal instance anymore,\n        // unless restart the JVM.\n        FastThreadLocal&lt;Object&gt; fst_2 = new FastThreadLocal&lt;&gt;(); // Throws Exception\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">import io.netty.util.concurrent.FastThreadLocal;\n\n    public static void main(String[] args) {\n        /**\n         * The 'for loop' simulates following scene:\n         * The application continuously create 'FastThreadLocal' instances, but GC-ed them subsequently.\n         * The application running for a long time.\n         */\n        for (long i = 0; i &lt; Integer.MAX_VALUE; i++) {\n            FastThreadLocal&lt;Object&gt; fst_1 = new FastThreadLocal&lt;&gt;();\n            // ... do some business logic with 'fst_1'... //\n            fst_1 = null; // GC-ed 'fst_1'.\n        }\n\n        // One day, suddenly the application can not create FastThreadLocal instance anymore,\n        // unless restart the JVM.\n        FastThreadLocal&lt;Object&gt; fst_2 = new FastThreadLocal&lt;&gt;(); // Throws Exception\n    }\n</code></pre></div>\n<p dir=\"auto\">The code above simulates a specific scene with <code class=\"notranslate\">FastThreadLocal</code>,  it throws exception after run:</p>\n<blockquote>\n<p dir=\"auto\">Exception in thread \"main\" java.lang.IllegalStateException: too many thread-local indexed variables<br>\nat io.netty.util.internal.InternalThreadLocalMap.nextVariableIndex(InternalThreadLocalMap.java:140)<br>\nat io.netty.util.concurrent.FastThreadLocal.(FastThreadLocal.java:128)<br>\nat XXX.main(XXX.java:19)</p>\n</blockquote>\n<p dir=\"auto\">If we replace <code class=\"notranslate\">FastThreadLocal</code> with Java 's <code class=\"notranslate\">ThreadLocal</code> in the code above, re-run it, it works fine with no error.</p>\n<p dir=\"auto\">The reason why this happens is because the <code class=\"notranslate\">FastThreadLocal</code>'s index generator is a global static <code class=\"notranslate\">AtomicInteger</code>, it is oneway-increased and will throw exception after it reaches <code class=\"notranslate\">Integer.MAX_VALUE</code>.</p>\n<p dir=\"auto\">Possible solutions:</p>\n<ol dir=\"auto\">\n<li>Slow the index generator's increasing speed:<br>\n(a). Generate the 'index' when set/init <code class=\"notranslate\">FastThreadLocal</code>'s value, rather than when constructing <code class=\"notranslate\">FastThreadLocal</code>.<br>\n(b). Change the index generator to thread scope, and every thread sees its own thread scope 'index' of the <code class=\"notranslate\">FastThreadLocal</code> instance.</li>\n<li>Recycle 'index' when the generator reaches <code class=\"notranslate\">Integer.MAX_VALUE</code>.</li>\n<li>After the index generator reaches <code class=\"notranslate\">Integer.MAX_VALUE</code>, use Java's <code class=\"notranslate\">ThreadLocal</code> instance instead(but still wrapped in the <code class=\"notranslate\">FastThreadLocal</code> ). \u3010I think this solution may be preferred\u3011.</li>\n</ol>\n<p dir=\"auto\">Any suggestion?</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.72.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">8</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">MacOS</p>",
                "resourcePath": "/netty/netty/issues/11937",
                "createdAt": "2021-12-19T02:56:10Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add entry for creating temporary files for BlockHound configuration",
        "url": "https://github.com/netty/netty/pull/12913",
        "resourcePath": "/netty/netty/pull/12913",
        "createdAt": "2022-10-19T08:08:25Z",
        "number": 12913,
        "mergeCommit": {
          "oid": "956c2331fa9d2c208861171e5458b15f16279ddd",
          "message": "Add entry for creating temporary files for BlockHound configuration (#12913)\n\nMotivation:\r\n\r\nWe sometimes need to create temporary files which might trigger BlockHound.\r\n\r\nModifications:\r\n\r\nAdd extra config to allow these calls\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12908",
          "commitUrl": "https://github.com/netty/netty/commit/956c2331fa9d2c208861171e5458b15f16279ddd",
          "parents": {
            "nodes": [
              {
                "oid": "321afcebf2394ad9e8b122c0b44245846d098f48",
                "message": "Remove deprecated/unused goal definitions which will break maven 4 (#12911)\n\nMotivation:\r\n\r\nThe netty BOM includes a deprecated element in the POM which will be removed in Maven 4. This causes the following exception when trying to import it:\r\n```\r\nCaused by: org.apache.maven.model.building.ModelBuildingException: 1 problem was encountered while building the effective model for /Users/gnodet/work/git/camel/parent/pom.xml\r\n[FATAL] Unrecognised tag: 'goals' (position: START_TAG seen ...</version>\\n        <goals>... @77:16)  @ io.netty:netty-bom:4.1.84.Final, /Users/gnodet/.m2/repository/io/netty/netty-bom/4.1.84.Final/netty-bom-4.1.84.Final.pom, line 77, column 16\r\n\r\n\tat org.apache.maven.model.building.DefaultModelProblemCollector.newModelBuildingException(DefaultModelProblemCollector.java:197)\r\n\tat org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:772)\r\n\tat org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:460)\r\n\tat org.apache.maven.model.building.DefaultModelBuilder.build(DefaultModelBuilder.java:439)\r\n\tat org.codehaus.mojo.flatten.ModelBuilderThreadSafetyWorkaround.build(ModelBuilderThreadSafetyWorkaround.java:130)\r\n\tat org.codehaus.mojo.flatten.FlattenMojo.createEffectivePom(FlattenMojo.java:902)\r\n\t... 19 common frames omitted\r\n```\r\nThe `build > plugins > plugin > goals` element has been deprecated since a long time and it not actually used by recent maven versions.\r\n\r\nModification:\r\n\r\nRemove the undesired xml element.\r\n\r\nResult:\r\n\r\nBOM can be parsed with maven 4."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/Hidden.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85BFZFr2gAoMmZiYjdhZTE1OTg5NWUyMGM4M2E2N2QyMTI2MzU1OTViMGEzNDFjYQ",
                "url": "https://github.com/netty/netty/pull/12913/commits/2fbb7ae159895e20c83a67d212635595b0a341ca"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12908,
                "url": "https://github.com/netty/netty/issues/12908",
                "title": "Blocking call in MacOSDnsServerAddressStreamProvider",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">No blocking calls reported by BlockHound</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.reflect.InvocationTargetException: null\n\tat jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]\n\tat jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders.&lt;clinit&gt;(DnsServerAddressStreamProviders.java:64) ~[netty-resolver-dns-4.1.82.Final.jar:4.1.82.Final]\n\tat io.netty.resolver.dns.DnsNameResolverBuilder.&lt;init&gt;(DnsNameResolverBuilder.java:60) ~[netty-resolver-dns-4.1.82.Final.jar:4.1.82.Final]\n\tat reactor.netty.transport.NameResolverProvider.newNameResolverGroup(NameResolverProvider.java:479) ~[reactor-netty-core-1.0.23.jar:1.0.23]\n\tat reactor.netty.tcp.TcpResources.getOrCreateDefaultResolver(TcpResources.java:315) ~[reactor-netty-core-1.0.23.jar:1.0.23]\n\tat reactor.netty.http.HttpResources.getOrCreateDefaultResolver(HttpResources.java:162) ~[reactor-netty-http-1.0.23.jar:1.0.23]\n\tat reactor.netty.http.client.HttpClientConfig.defaultAddressResolverGroup(HttpClientConfig.java:381) ~[reactor-netty-http-1.0.23.jar:1.0.23]\n\tat reactor.netty.transport.ClientTransportConfig.resolverInternal(ClientTransportConfig.java:224) ~[reactor-netty-core-1.0.23.jar:1.0.23]\n\tat reactor.netty.http.client.HttpClientConfig.resolverInternal(HttpClientConfig.java:435) ~[reactor-netty-http-1.0.23.jar:1.0.23]\n\tat reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.lambda$subscribe$0(HttpClientConnect.java:266) ~[reactor-netty-http-1.0.23.jar:1.0.23]\n\tat reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:58) ~[reactor-core-3.4.23.jar:3.4.23]\n\tat reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:77) ~[reactor-core-3.4.23.jar:3.4.23]\n\tat reactor.core.publisher.MonoRetryWhen.subscribeOrReturn(MonoRetryWhen.java:46) ~[reactor-core-3.4.23.jar:3.4.23]\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:57) ~[reactor-core-3.4.23.jar:3.4.23]\n\tat reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:273) ~[reactor-netty-http-1.0.23.jar:1.0.23]\n\t(cut)\nCaused by: java.lang.UnsatisfiedLinkError: failed to load the required native library\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.ensureAvailability(MacOSDnsServerAddressStreamProvider.java:110) ~[netty-resolver-dns-classes-macos-4.1.82.Final.jar:4.1.82.Final]\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.&lt;init&gt;(MacOSDnsServerAddressStreamProvider.java:120) ~[netty-resolver-dns-classes-macos-4.1.82.Final.jar:4.1.82.Final]\n\t... 33 more\nCaused by: reactor.blockhound.BlockingOperationError: Blocking call! java.io.FileInputStream#readBytes\n\tat java.io.FileInputStream.readBytes(FileInputStream.java) ~[?:?]\n\tat java.io.FileInputStream.read(FileInputStream.java:279) ~[?:?]\n\tat java.io.FilterInputStream.read(FilterInputStream.java:133) ~[?:?]\n\tat sun.security.provider.NativePRNG$RandomIO.readFully(NativePRNG.java:424) ~[?:?]\n\tat sun.security.provider.NativePRNG$RandomIO.ensureBufferValid(NativePRNG.java:526) ~[?:?]\n\tat sun.security.provider.NativePRNG$RandomIO.implNextBytes(NativePRNG.java:545) ~[?:?]\n\tat sun.security.provider.NativePRNG.engineNextBytes(NativePRNG.java:220) ~[?:?]\n\tat java.security.SecureRandom.nextBytes(SecureRandom.java:751) ~[?:?]\n\tat java.security.SecureRandom.next(SecureRandom.java:808) ~[?:?]\n\tat java.util.Random.nextLong(Random.java:424) ~[?:?]\n\tat java.nio.file.TempFileHelper.generatePath(TempFileHelper.java:57) ~[?:?]\n\tat java.nio.file.TempFileHelper.create(TempFileHelper.java:126) ~[?:?]\n\tat java.nio.file.TempFileHelper.createTempFile(TempFileHelper.java:160) ~[?:?]\n\tat java.nio.file.Files.createTempFile(Files.java:868) ~[?:?]\n\tat io.netty.util.internal.PlatformDependent.createTempFile(PlatformDependent.java:1487) ~[netty-common-4.1.82.Final.jar:4.1.82.Final]\n\tat io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:196) ~[netty-common-4.1.82.Final.jar:4.1.82.Final]\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.loadNativeLibrary(MacOSDnsServerAddressStreamProvider.java:92) ~[netty-resolver-dns-classes-macos-4.1.82.Final.jar:4.1.82.Final]\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.&lt;clinit&gt;(MacOSDnsServerAddressStreamProvider.java:77) ~[netty-resolver-dns-classes-macos-4.1.82.Final.jar:4.1.82.Final]\n\tat java.lang.Class.forName0(Native Method) ~[?:?]\n\tat java.lang.Class.forName(Class.java:398) ~[?:?]\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders$1.run(DnsServerAddressStreamProviders.java:50) ~[netty-resolver-dns-4.1.82.Final.jar:4.1.82.Final]\n\tat java.security.AccessController.doPrivileged(Native Method) ~[?:?]\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders.&lt;clinit&gt;(DnsServerAddressStreamProviders.java:46) ~[netty-resolver-dns-4.1.82.Final.jar:4.1.82.Final]\n\t... 28 more\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.reflect.InvocationTargetException: null\n\tat jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]\n\tat jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:?]\n\tat jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:490) ~[?:?]\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders.&lt;clinit&gt;(DnsServerAddressStreamProviders.java:64) ~[netty-resolver-dns-4.1.82.Final.jar:4.1.82.Final]\n\tat io.netty.resolver.dns.DnsNameResolverBuilder.&lt;init&gt;(DnsNameResolverBuilder.java:60) ~[netty-resolver-dns-4.1.82.Final.jar:4.1.82.Final]\n\tat reactor.netty.transport.NameResolverProvider.newNameResolverGroup(NameResolverProvider.java:479) ~[reactor-netty-core-1.0.23.jar:1.0.23]\n\tat reactor.netty.tcp.TcpResources.getOrCreateDefaultResolver(TcpResources.java:315) ~[reactor-netty-core-1.0.23.jar:1.0.23]\n\tat reactor.netty.http.HttpResources.getOrCreateDefaultResolver(HttpResources.java:162) ~[reactor-netty-http-1.0.23.jar:1.0.23]\n\tat reactor.netty.http.client.HttpClientConfig.defaultAddressResolverGroup(HttpClientConfig.java:381) ~[reactor-netty-http-1.0.23.jar:1.0.23]\n\tat reactor.netty.transport.ClientTransportConfig.resolverInternal(ClientTransportConfig.java:224) ~[reactor-netty-core-1.0.23.jar:1.0.23]\n\tat reactor.netty.http.client.HttpClientConfig.resolverInternal(HttpClientConfig.java:435) ~[reactor-netty-http-1.0.23.jar:1.0.23]\n\tat reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.lambda$subscribe$0(HttpClientConnect.java:266) ~[reactor-netty-http-1.0.23.jar:1.0.23]\n\tat reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:58) ~[reactor-core-3.4.23.jar:3.4.23]\n\tat reactor.core.publisher.FluxRetryWhen.subscribe(FluxRetryWhen.java:77) ~[reactor-core-3.4.23.jar:3.4.23]\n\tat reactor.core.publisher.MonoRetryWhen.subscribeOrReturn(MonoRetryWhen.java:46) ~[reactor-core-3.4.23.jar:3.4.23]\n\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:57) ~[reactor-core-3.4.23.jar:3.4.23]\n\tat reactor.netty.http.client.HttpClientConnect$MonoHttpConnect.subscribe(HttpClientConnect.java:273) ~[reactor-netty-http-1.0.23.jar:1.0.23]\n\t(cut)\nCaused by: java.lang.UnsatisfiedLinkError: failed to load the required native library\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.ensureAvailability(MacOSDnsServerAddressStreamProvider.java:110) ~[netty-resolver-dns-classes-macos-4.1.82.Final.jar:4.1.82.Final]\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.&lt;init&gt;(MacOSDnsServerAddressStreamProvider.java:120) ~[netty-resolver-dns-classes-macos-4.1.82.Final.jar:4.1.82.Final]\n\t... 33 more\nCaused by: reactor.blockhound.BlockingOperationError: Blocking call! java.io.FileInputStream#readBytes\n\tat java.io.FileInputStream.readBytes(FileInputStream.java) ~[?:?]\n\tat java.io.FileInputStream.read(FileInputStream.java:279) ~[?:?]\n\tat java.io.FilterInputStream.read(FilterInputStream.java:133) ~[?:?]\n\tat sun.security.provider.NativePRNG$RandomIO.readFully(NativePRNG.java:424) ~[?:?]\n\tat sun.security.provider.NativePRNG$RandomIO.ensureBufferValid(NativePRNG.java:526) ~[?:?]\n\tat sun.security.provider.NativePRNG$RandomIO.implNextBytes(NativePRNG.java:545) ~[?:?]\n\tat sun.security.provider.NativePRNG.engineNextBytes(NativePRNG.java:220) ~[?:?]\n\tat java.security.SecureRandom.nextBytes(SecureRandom.java:751) ~[?:?]\n\tat java.security.SecureRandom.next(SecureRandom.java:808) ~[?:?]\n\tat java.util.Random.nextLong(Random.java:424) ~[?:?]\n\tat java.nio.file.TempFileHelper.generatePath(TempFileHelper.java:57) ~[?:?]\n\tat java.nio.file.TempFileHelper.create(TempFileHelper.java:126) ~[?:?]\n\tat java.nio.file.TempFileHelper.createTempFile(TempFileHelper.java:160) ~[?:?]\n\tat java.nio.file.Files.createTempFile(Files.java:868) ~[?:?]\n\tat io.netty.util.internal.PlatformDependent.createTempFile(PlatformDependent.java:1487) ~[netty-common-4.1.82.Final.jar:4.1.82.Final]\n\tat io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:196) ~[netty-common-4.1.82.Final.jar:4.1.82.Final]\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.loadNativeLibrary(MacOSDnsServerAddressStreamProvider.java:92) ~[netty-resolver-dns-classes-macos-4.1.82.Final.jar:4.1.82.Final]\n\tat io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider.&lt;clinit&gt;(MacOSDnsServerAddressStreamProvider.java:77) ~[netty-resolver-dns-classes-macos-4.1.82.Final.jar:4.1.82.Final]\n\tat java.lang.Class.forName0(Native Method) ~[?:?]\n\tat java.lang.Class.forName(Class.java:398) ~[?:?]\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders$1.run(DnsServerAddressStreamProviders.java:50) ~[netty-resolver-dns-4.1.82.Final.jar:4.1.82.Final]\n\tat java.security.AccessController.doPrivileged(Native Method) ~[?:?]\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders.&lt;clinit&gt;(DnsServerAddressStreamProviders.java:46) ~[netty-resolver-dns-4.1.82.Final.jar:4.1.82.Final]\n\t... 28 more\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Make an http request</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.82.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"11.0.13\" 2021-10-19 LTS<br>\nOpenJDK Runtime Environment Zulu11.52+13-CA (build 11.0.13+8-LTS)<br>\nOpenJDK 64-Bit Server VM Zulu11.52+13-CA (build 11.0.13+8-LTS, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin My-MacBook-Pro.local 20.6.0 Darwin Kernel Version 20.6.0: Wed Jun 23 00:26:27 PDT 2021; root:xnu-7195.141.2~5/RELEASE_ARM64_T8101 arm64</p>\n<p dir=\"auto\">It seems similar to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"784449627\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/10925\" data-hovercard-type=\"issue\" data-hovercard-url=\"/netty/netty/issues/10925/hovercard\" href=\"https://github.com/netty/netty/issues/10925\">#10925</a></p>",
                "resourcePath": "/netty/netty/issues/12908",
                "createdAt": "2022-10-18T14:49:26Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Implement Early hints response status, do not poll the encoding with HTTP 1xx codes",
        "url": "https://github.com/netty/netty/pull/12918",
        "resourcePath": "/netty/netty/pull/12918",
        "createdAt": "2022-10-20T13:31:09Z",
        "number": 12918,
        "mergeCommit": {
          "oid": "de8a7efd054d1eedc833303b1c2c8c76e519d5e1",
          "message": "Implement Early hints response status, do not poll the encoding with HTTP 1xx codes (#12918)\n\n\r\nMotivation:\r\n\r\nHttp 1xx codes should expect another response next\r\n\r\nModifications:\r\n\r\nReplace code == 100 with code == 1xx\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12904",
          "commitUrl": "https://github.com/netty/netty/commit/de8a7efd054d1eedc833303b1c2c8c76e519d5e1",
          "parents": {
            "nodes": [
              {
                "oid": "e1437fb468c5647f7f02fcd49b405af1259d8716",
                "message": "Avoid ignoring interrupts in testsuite (#12958)\n\nMotivation:\r\nJUnit relies on interrupts to communicate test timeouts.\r\nWhen we silently swallow interrupts, we break this mechanism.\r\n\r\nModification:\r\nMake the loops in the testsuite throw their interrupts instead of silently swallowing them.\r\n\r\nResult:\r\nThe tests now responds to timeouts."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpClientCodec.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpContentEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseStatus.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpContentCompressorTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2StreamFrameToHttpObjectCodec.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2StreamFrameToHttpObjectCodecTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85BMjLo2gAoZDM0ODhmYmE3OTY2YzI5NjA2Y2ZhMWZiM2YyMTUxNGNmYmYwNzJiMA",
                "url": "https://github.com/netty/netty/pull/12918/commits/d3488fba7966c29606cfa1fb3f21514cfbf072b0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12904,
                "url": "https://github.com/netty/netty/issues/12904",
                "title": "Exception when using other \"1xx Informational Response\" codes",
                "bodyHTML": "<p dir=\"auto\">Issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"100633049\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/4079\" data-hovercard-type=\"issue\" data-hovercard-url=\"/netty/netty/issues/4079/hovercard\" href=\"https://github.com/netty/netty/issues/4079\">#4079</a> fixed a bug with 100 continue, but that workaround should be applied to all 1xx codes, not just 100.</p>\n<p dir=\"auto\">This is the problematic code:<br>\n<a class=\"commit-link\" href=\"https://github.com/netty/netty/commit/f8019ba481e014ffcd8b58cac52d09bfaf1f7ed8#r87007654\"><tt>f8019ba</tt>#r87007654</a></p>",
                "resourcePath": "/netty/netty/issues/12904",
                "createdAt": "2022-10-17T09:08:41Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use Stream Compression instead of Single-shot Compression in `BrotliEncoder`",
        "url": "https://github.com/netty/netty/pull/12924",
        "resourcePath": "/netty/netty/pull/12924",
        "createdAt": "2022-10-21T16:15:40Z",
        "number": 12924,
        "mergeCommit": {
          "oid": "1ce52aa062d169410b1ab90aeda62a5764c672e2",
          "message": "Use Stream Compression instead of Single-shot Compression (#12924)\n\nMotivation:\r\nAs per the current implementation, `BrotliEncoder` compress a `ByteBuf` in a single operation. This approach is good when we have small data set to work with. However, In the case of stream, there are multiple `ByteBuf`, and compressing each `ByteBuf` using the Single-shot method is the wrong approach.\r\n\r\nModification:\r\nUse streaming compression.\r\n\r\nResult:\r\nFixes #12909.",
          "commitUrl": "https://github.com/netty/netty/commit/1ce52aa062d169410b1ab90aeda62a5764c672e2",
          "parents": {
            "nodes": [
              {
                "oid": "ee9bb63aa5382bf9930eb0df4b690286173f126a",
                "message": "HPACK dynamic table size update must happen at the beginning of the h\u2026 (#12988)\n\n\r\nMotivation:\r\n\r\nHpackDecoder accepts dynamic table size updates at any stage of a header block. Such modification should always happen before the table is modified as per RFC 7541.\r\n\r\nModifications:\r\n\r\nCheck the header block first for dynamic table size updates in a separate method. Then reject any table size update when processing unpacking the rest of the block. Dynamic table size update could have been done with the current switch/case but it requires to keep track of the modifications which is not hard but introduces complexity in the loop (a simple boolean that must be switched for any modification but the table size update). Instead a table size update is achieved first in a simpler loop and then any table size update is rejected.\r\n\r\nResult:\r\n\r\nFixes #12981\r\n\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/BrotliEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/test/java/io/netty/handler/codec/compression/BrotliEncoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85BTIEo2gAoNjczNjczNzgwYzc3ZWQ5MGRjYTBmODVkMGRiNzEyMDRmNzI4ZTEyNg",
                "url": "https://github.com/netty/netty/pull/12924/commits/673673780c77ed90dca0f85d0db71204f728e126"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12909,
                "url": "https://github.com/netty/netty/issues/12909",
                "title": "Broken BrotliDecoder",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Transparent stream compression</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<details>\n  <summary>io.netty.handler.codec.compression.DecompressionException: Brotli stream corrupted</summary>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"io.netty.handler.codec.compression.DecompressionException: Brotli stream corrupted\n\tat io.netty.handler.codec.compression.BrotliDecoder.decode(BrotliDecoder.java:141)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:491)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:430)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)\n\tat io.netty.handler.codec.ByteToMessageDecoder.handlerRemoved(ByteToMessageDecoder.java:238)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:496)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:430)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)\n\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:248)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n\tat eu.exante.atp.protocol.tcpserver.pipeline.MetricsHandler.channelRead(MetricsHandler.scala:15)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)\n\tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1273)\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1084)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:491)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:430)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n\tat eu.exante.atp.protocol.tcpserver.pipeline.MetricsHandler.channelRead(MetricsHandler.scala:15)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\n\tat java.lang.Thread.run(Thread.java:750)\n\"><pre class=\"notranslate\"><code class=\"notranslate\">io.netty.handler.codec.compression.DecompressionException: Brotli stream corrupted\n\tat io.netty.handler.codec.compression.BrotliDecoder.decode(BrotliDecoder.java:141)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:491)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:430)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)\n\tat io.netty.handler.codec.ByteToMessageDecoder.handlerRemoved(ByteToMessageDecoder.java:238)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:496)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:430)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)\n\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:248)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n\tat eu.exante.atp.protocol.tcpserver.pipeline.MetricsHandler.channelRead(MetricsHandler.scala:15)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)\n\tat io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1273)\n\tat io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1084)\n\tat io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:491)\n\tat io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:430)\n\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\n\tat eu.exante.atp.protocol.tcpserver.pipeline.MetricsHandler.channelRead(MetricsHandler.scala:15)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)\n\tat io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138)\n\tat java.lang.Thread.run(Thread.java:750)\n\n</code></pre></div>\n</details>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Just run example. It work with zlib, lz4 and others codecs. But not with brotli.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\"><a href=\"https://github.com/fshp/brotli_netty\">https://github.com/fshp/brotli_netty</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.84.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"11.0.8\" 2020-07-14<br>\nOpenJDK Runtime Environment AdoptOpenJDK (build 11.0.8+10)<br>\nOpenJDK 64-Bit Server VM AdoptOpenJDK (build 11.0.8+10, mixed mode)</p>\n<p dir=\"auto\">openjdk 17.0.2 2022-01-18<br>\nOpenJDK Runtime Environment (build 17.0.2+8-86)<br>\nOpenJDK 64-Bit Server VM (build 17.0.2+8-86, mixed mode, sharing)</p>\n<p dir=\"auto\">java version \"1.8.0_162\"<br>\nJava(TM) SE Runtime Environment (build 1.8.0_162-b12)<br>\nJava HotSpot(TM) 64-Bit Server VM (build 25.162-b12, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">macOS 12.6 - Darwin host 21.6.0 Darwin Kernel Version 21.6.0: Mon Aug 22 20:17:10 PDT 2022; root:xnu-8020.140.49~2/RELEASE_X86_64 x86_64</p>\n<p dir=\"auto\">Linux host 5.10.0-18-amd64 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"418688\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/1\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/1/hovercard\" href=\"https://github.com/netty/netty/pull/1\">#1</a> SMP Debian 5.10.140-1 (2022-09-02) x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/12909",
                "createdAt": "2022-10-18T22:03:52Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix generating the `Origin` header value for websocket handshake request",
        "url": "https://github.com/netty/netty/pull/12941",
        "resourcePath": "/netty/netty/pull/12941",
        "createdAt": "2022-10-31T11:23:19Z",
        "number": 12941,
        "mergeCommit": {
          "oid": "ae9b82388e49cdc904e0ef4e81439486105d9d30",
          "message": "Fix generating the `Origin` header value for websocket handshake request (#12941)\n\nMotivation:\r\n\r\nWe have the old erroneous behavior of generating the `Origin| Sec-WebSocket-Origin` for client websocket handshake request (https://github.com/netty/netty/issues/9673). In Netty5 this fixed and auto-generation has been deleted at all, only if the client passed the `Origin` header via custom headers. The same we can do for Netty4 but it could potentially break some clients (unlikely), or introduce an additional parameter to disable or enable this behavior.\r\n\r\nModification:\r\n\r\nIntroduce new `generateOriginHeader` parameter in client config and generate the `Origin|Sec-WebSocket-Origin` header value only if it enabled. Add additional check for webSocketURI if it contains host or passed through `customHeaders` to prevent NPE in `newHandshakeRequest()`.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/9673 https://github.com/netty/netty/issues/12933 \r\n\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/ae9b82388e49cdc904e0ef4e81439486105d9d30",
          "parents": {
            "nodes": [
              {
                "oid": "bb86eb096f3336cdb38c23906095033ea0205014",
                "message": "[maven-release-plugin] prepare for next development iteration"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker13.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakerFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolConfig.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker00Test.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker07Test.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker08Test.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshaker13Test.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/websocketx/WebSocketClientHandshakerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85B4CSp2gAoZTc3ODJiYzMwZTczZTNiNzU4Zjg3NzM5ODcxY2E4YTY3OTVkOTRjYQ",
                "url": "https://github.com/netty/netty/pull/12941/commits/e7782bc30e73e3b758f87739871ca8a6795d94ca"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 9673,
                "url": "https://github.com/netty/netty/issues/9673",
                "title": "Origin header is always sent from WebSocket client",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">No 'Origin' header sent by default.<br>\nA way to set custom 'Origin' header when it is needed.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">'Origin' header is set.<br>\n'Origin' header is auto-resolved into meaningless value. In my case - IP of the intermediate proxy between client and server sides.<br>\nEnforced 'Origin' header leads to cors check failure on server side and denial of service for legitim client.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Open WebSocket connection with v13 handshaker</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"WebSocketClientHandshaker13.newHandshakeRequest:\n\nif (!headers.contains(HttpHeaderNames.ORIGIN)) {\n    headers.set(HttpHeaderNames.ORIGIN, websocketOriginValue(wsURL));\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">WebSocketClientHandshaker13.newHandshakeRequest:\n\nif (!headers.contains(HttpHeaderNames.ORIGIN)) {\n    headers.set(HttpHeaderNames.ORIGIN, websocketOriginValue(wsURL));\n}\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.39</p>\n<p dir=\"auto\">Related issues: PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"462890467\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/9312\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/9312/hovercard\" href=\"https://github.com/netty/netty/pull/9312\">#9312</a> and PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"478012567\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/9435\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/9435/hovercard\" href=\"https://github.com/netty/netty/pull/9435\">#9435</a>.</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">1.8.0_223-b27</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<ul dir=\"auto\">\n<li>Windows 7 Enterprise</li>\n<li>Linux gmafxu42 3.0.101-108.98-default <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"418688\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/1\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/1/hovercard\" href=\"https://github.com/netty/netty/pull/1\">#1</a> SMP Mon Jul 15 13:58:06 UTC 2019 (262a94d) x86_64 x86_64 x86_64 GNU/Linux</li>\n</ul>",
                "resourcePath": "/netty/netty/issues/9673",
                "createdAt": "2019-10-15T19:07:17Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use the recommended directory layout for native-image metadata",
        "url": "https://github.com/netty/netty/pull/12951",
        "resourcePath": "/netty/netty/pull/12951",
        "createdAt": "2022-11-01T13:54:47Z",
        "number": 12951,
        "mergeCommit": {
          "oid": "fe0b5ce16c4508387f999e530a85f2d968e90a3c",
          "message": "Use the recommended directory layout for native-image metadata. Simplify automatic handler metadata generator usage. (#12951)\n\nMotivation:\r\n\r\nThe recommended directory layout for native-image metadata is `META-INF/native-image/<groupId>/<artifactId>/...`. Recent Native Build Tools versions will print a warning if a `native-image.properties` file is detected and it's path doesn't adhere to the above layout.\r\n\r\nModification:\r\n\r\nThis PR moves all native-image related metadata so that it conforms to the above layout.\r\nThis PR also ensures the above layout is used for the automatically generated handler metadata. The new layout of this metadata is `META-INF/native-image/<groupId>/<artifactId>/automatic/handlers`.\r\n\r\nResult:\r\n\r\nFixes #12934",
          "commitUrl": "https://github.com/netty/netty/commit/fe0b5ce16c4508387f999e530a85f2d968e90a3c",
          "parents": {
            "nodes": [
              {
                "oid": "a45feed4ef1ceb9f560446db18e9d21cd1a7d1df",
                "message": "Update java versions (#12949)\n\nMotivation:\r\n\r\nWe used old java versions when compiling on the CI.\r\n\r\nModifications:\r\n\r\n- Update all versions to latest release\r\n- Replace Java18 with Java19 usage as its the latest LTS\r\n- Fix a few cases where variadic methods and generic target typing were interacting poorly.\r\n\r\nResult:\r\n\r\nUse latest java versions on the CI\r\n\r\nCo-authored-by: Chris Vest <christianvest_hansen@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "RENAMED",
                "path": "resolver-dns/src/main/resources/META-INF/native-image/io.netty/netty-resolver-dns/generated/handlers/reflect-config.json"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "resolver-dns/src/main/resources/META-INF/native-image/io.netty/netty-resolver-dns/native-image.properties"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/test/java/io/netty/resolver/dns/NativeImageHandlerMetadataTest.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport-sctp/src/main/resources/META-INF/native-image/io.netty/netty-transport-sctp/generated/handlers/reflect-config.json"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-sctp/src/test/java/io/netty/handler/codec/sctp/NativeImageHandlerMetadataTest.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport/src/main/resources/META-INF/native-image/io.netty/netty-transport/generated/handlers/reflect-config.json"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport/src/main/resources/META-INF/native-image/io.netty/netty-transport/native-image.properties"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport/src/main/resources/META-INF/native-image/io.netty/netty-transport/reflection-config.json"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/channel/NativeImageHandlerMetadataTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/nativeimage/ChannelHandlerMetadataUtil.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85B-BEl2gAoYzUwNThmOThlODEyZGM1YWM0YzYwYmZkNjliNDRhNThlMjJmZTlkZg",
                "url": "https://github.com/netty/netty/pull/12951/commits/c5058f98e812dc5ac4c60bfd69b44a58e22fe9df"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12934,
                "url": "https://github.com/netty/netty/issues/12934",
                "title": "Maybe the GraalVM reachability metadata generated by Netty 4.1 is placed in the wrong path",
                "bodyHTML": "<ul dir=\"auto\">\n<li>When I'm using GraalVM 23.0 CE Dev For JDK17 and GraalVM Native Build Tools 0.9.16 to build a GraalVM Native Image related to <code class=\"notranslate\">Netty 4.1.84.Final</code>, <a href=\"https://github.com/apache/shardingsphere/actions/runs/3322527648/jobs/5491672262\">https://github.com/apache/shardingsphere/actions/runs/3322527648/jobs/5491672262</a> 's logs have been seen some Netty related  warning logs.</li>\n</ul>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Warning: Properties file at 'jar:file:///home/runner/.m2/repository/io/netty/netty-codec-http2/4.1.84.Final/netty-codec-http2-4.1.84.Final.jar!/META-INF/native-image/io.netty/codec-http2/native-image.properties' does not match the recommended 'META-INF/native-image/io.netty/netty-codec-http2/native-image.properties' layout.\nWarning:  Properties file at 'jar:file:///home/runner/.m2/repository/io/netty/netty-resolver-dns/4.1.84.Final/netty-resolver-dns-4.1.84.Final.jar!/META-INF/native-image/io.netty/resolver-dns/native-image.properties' does not match the recommended 'META-INF/native-image/io.netty/netty-resolver-dns/native-image.properties' layout.\nWarning:  Properties file at 'jar:file:///home/runner/.m2/repository/io/netty/netty-transport/4.1.84.Final/netty-transport-4.1.84.Final.jar!/META-INF/native-image/io.netty/transport/native-image.properties' does not match the recommended 'META-INF/native-image/io.netty/netty-transport/native-image.properties' layout.\nWarning: Properties file at 'jar:file:///home/runner/.m2/repository/io/netty/netty-common/4.1.84.Final/netty-common-4.1.84.Final.jar!/META-INF/native-image/io.netty/common/native-image.properties' does not match the recommended 'META-INF/native-image/io.netty/netty-common/native-image.properties' layout.\nWarning:  Properties file at 'jar:file:///home/runner/.m2/repository/io/netty/netty-codec/4.1.84.Final/netty-codec-4.1.84.Final.jar!/META-INF/native-image/codec-handlers/native-image.properties' does not match the recommended 'META-INF/native-image/io.netty/netty-codec/native-image.properties' layout.\nWarning:  Properties file at 'jar:file:///home/runner/.m2/repository/io/netty/netty-handler/4.1.84.Final/netty-handler-4.1.84.Final.jar!/META-INF/native-image/io.netty/handler/native-image.properties' does not match the recommended 'META-INF/native-image/io.netty/netty-handler/native-image.properties' layout.\nWarning:  Properties file at 'jar:file:///home/runner/.m2/repository/io/netty/netty-codec-http/4.1.84.Final/netty-codec-http-4.1.84.Final.jar!/META-INF/native-image/io.netty/codec-http/native-image.properties' does not match the recommended 'META-INF/native-image/io.netty/netty-codec-http/native-image.properties' layout.\nWarning:  Properties file at 'jar:file:///home/runner/.m2/repository/io/netty/netty-buffer/4.1.84.Final/netty-buffer-4.1.84.Final.jar!/META-INF/native-image/io.netty/buffer/native-image.properties' does not match the recommended 'META-INF/native-image/io.netty/netty-buffer/native-image.properties' layout.\nWarning: Could not register io.netty.handler.codec.compression.Lz4FrameDecoder: queryAllPublicMethods for reflection. Reason: java.lang.NoClassDefFoundError: net/jpountz/lz4/LZ4Exception.\nWarning: Could not register io.netty.handler.codec.compression.Lz4FrameEncoder: queryAllPublicMethods for reflection. Reason: java.lang.NoClassDefFoundError: net/jpountz/lz4/LZ4Exception.\nWarning: Could not register io.netty.handler.codec.marshalling.CompatibleMarshallingDecoder: queryAllPublicMethods for reflection. Reason: java.lang.NoClassDefFoundError: org/jboss/marshalling/ByteInput.\nWarning: Could not register io.netty.handler.codec.marshalling.CompatibleMarshallingEncoder: queryAllPublicMethods for reflection. Reason: java.lang.NoClassDefFoundError: org/jboss/marshalling/ByteOutput.\nWarning: Could not register io.netty.handler.codec.marshalling.MarshallingDecoder: queryAllPublicMethods for reflection. Reason: java.lang.NoClassDefFoundError: org/jboss/marshalling/ByteInput.\nWarning: Could not register io.netty.handler.codec.marshalling.MarshallingEncoder: queryAllPublicMethods for reflection. Reason: java.lang.NoClassDefFoundError: org/jboss/marshalling/ByteOutput.\"><pre class=\"notranslate\">Warning: Properties file at <span class=\"pl-s\"><span class=\"pl-pds\">'</span>jar:file:///home/runner/.m2/repository/io/netty/netty-codec-http2/4.1.84.Final/netty-codec-http2-4.1.84.Final.jar!/META-INF/native-image/io.netty/codec-http2/native-image.properties<span class=\"pl-pds\">'</span></span> does not match the recommended <span class=\"pl-s\"><span class=\"pl-pds\">'</span>META-INF/native-image/io.netty/netty-codec-http2/native-image.properties<span class=\"pl-pds\">'</span></span> layout.\nWarning:  Properties file at <span class=\"pl-s\"><span class=\"pl-pds\">'</span>jar:file:///home/runner/.m2/repository/io/netty/netty-resolver-dns/4.1.84.Final/netty-resolver-dns-4.1.84.Final.jar!/META-INF/native-image/io.netty/resolver-dns/native-image.properties<span class=\"pl-pds\">'</span></span> does not match the recommended <span class=\"pl-s\"><span class=\"pl-pds\">'</span>META-INF/native-image/io.netty/netty-resolver-dns/native-image.properties<span class=\"pl-pds\">'</span></span> layout.\nWarning:  Properties file at <span class=\"pl-s\"><span class=\"pl-pds\">'</span>jar:file:///home/runner/.m2/repository/io/netty/netty-transport/4.1.84.Final/netty-transport-4.1.84.Final.jar!/META-INF/native-image/io.netty/transport/native-image.properties<span class=\"pl-pds\">'</span></span> does not match the recommended <span class=\"pl-s\"><span class=\"pl-pds\">'</span>META-INF/native-image/io.netty/netty-transport/native-image.properties<span class=\"pl-pds\">'</span></span> layout.\nWarning: Properties file at <span class=\"pl-s\"><span class=\"pl-pds\">'</span>jar:file:///home/runner/.m2/repository/io/netty/netty-common/4.1.84.Final/netty-common-4.1.84.Final.jar!/META-INF/native-image/io.netty/common/native-image.properties<span class=\"pl-pds\">'</span></span> does not match the recommended <span class=\"pl-s\"><span class=\"pl-pds\">'</span>META-INF/native-image/io.netty/netty-common/native-image.properties<span class=\"pl-pds\">'</span></span> layout.\nWarning:  Properties file at <span class=\"pl-s\"><span class=\"pl-pds\">'</span>jar:file:///home/runner/.m2/repository/io/netty/netty-codec/4.1.84.Final/netty-codec-4.1.84.Final.jar!/META-INF/native-image/codec-handlers/native-image.properties<span class=\"pl-pds\">'</span></span> does not match the recommended <span class=\"pl-s\"><span class=\"pl-pds\">'</span>META-INF/native-image/io.netty/netty-codec/native-image.properties<span class=\"pl-pds\">'</span></span> layout.\nWarning:  Properties file at <span class=\"pl-s\"><span class=\"pl-pds\">'</span>jar:file:///home/runner/.m2/repository/io/netty/netty-handler/4.1.84.Final/netty-handler-4.1.84.Final.jar!/META-INF/native-image/io.netty/handler/native-image.properties<span class=\"pl-pds\">'</span></span> does not match the recommended <span class=\"pl-s\"><span class=\"pl-pds\">'</span>META-INF/native-image/io.netty/netty-handler/native-image.properties<span class=\"pl-pds\">'</span></span> layout.\nWarning:  Properties file at <span class=\"pl-s\"><span class=\"pl-pds\">'</span>jar:file:///home/runner/.m2/repository/io/netty/netty-codec-http/4.1.84.Final/netty-codec-http-4.1.84.Final.jar!/META-INF/native-image/io.netty/codec-http/native-image.properties<span class=\"pl-pds\">'</span></span> does not match the recommended <span class=\"pl-s\"><span class=\"pl-pds\">'</span>META-INF/native-image/io.netty/netty-codec-http/native-image.properties<span class=\"pl-pds\">'</span></span> layout.\nWarning:  Properties file at <span class=\"pl-s\"><span class=\"pl-pds\">'</span>jar:file:///home/runner/.m2/repository/io/netty/netty-buffer/4.1.84.Final/netty-buffer-4.1.84.Final.jar!/META-INF/native-image/io.netty/buffer/native-image.properties<span class=\"pl-pds\">'</span></span> does not match the recommended <span class=\"pl-s\"><span class=\"pl-pds\">'</span>META-INF/native-image/io.netty/netty-buffer/native-image.properties<span class=\"pl-pds\">'</span></span> layout.\nWarning: Could not register io.netty.handler.codec.compression.Lz4FrameDecoder: queryAllPublicMethods <span class=\"pl-k\">for</span> reflection. Reason: java.lang.NoClassDefFoundError: net/jpountz/lz4/LZ4Exception.\nWarning: Could not register io.netty.handler.codec.compression.Lz4FrameEncoder: queryAllPublicMethods <span class=\"pl-k\">for</span> reflection. Reason: java.lang.NoClassDefFoundError: net/jpountz/lz4/LZ4Exception.\nWarning: Could not register io.netty.handler.codec.marshalling.CompatibleMarshallingDecoder: queryAllPublicMethods <span class=\"pl-k\">for</span> reflection. Reason: java.lang.NoClassDefFoundError: org/jboss/marshalling/ByteInput.\nWarning: Could not register io.netty.handler.codec.marshalling.CompatibleMarshallingEncoder: queryAllPublicMethods <span class=\"pl-k\">for</span> reflection. Reason: java.lang.NoClassDefFoundError: org/jboss/marshalling/ByteOutput.\nWarning: Could not register io.netty.handler.codec.marshalling.MarshallingDecoder: queryAllPublicMethods <span class=\"pl-k\">for</span> reflection. Reason: java.lang.NoClassDefFoundError: org/jboss/marshalling/ByteInput.\nWarning: Could not register io.netty.handler.codec.marshalling.MarshallingEncoder: queryAllPublicMethods <span class=\"pl-k\">for</span> reflection. Reason: java.lang.NoClassDefFoundError: org/jboss/marshalling/ByteOutput.</pre></div>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">The view at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1419697595\" data-permission-text=\"Title is private\" data-url=\"https://github.com/oracle/graalvm-reachability-metadata/issues/89\" data-hovercard-type=\"issue\" data-hovercard-url=\"/oracle/graalvm-reachability-metadata/issues/89/hovercard?comment_id=1288911522&amp;comment_type=issue_comment\" href=\"https://github.com/oracle/graalvm-reachability-metadata/issues/89#issuecomment-1288911522\">oracle/graalvm-reachability-metadata#89 (comment)</a> is that this is due to the Netty Project making GraalVM Reachability metadata accessible at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1368770379\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/12794\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/12794/hovercard\" href=\"https://github.com/netty/netty/pull/12794\">#12794</a>  was generated to the wrong path.  This conflicts with the definition at <a href=\"https://github.com/oracle/graalvm-reachability-metadata\">https://github.com/oracle/graalvm-reachability-metadata</a>.  I think maybe something should be done within Netty.</p>\n</li>\n<li>\n<p dir=\"auto\">Just link to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1397717337\" data-permission-text=\"Title is private\" data-url=\"https://github.com/apache/shardingsphere/issues/21347\" data-hovercard-type=\"issue\" data-hovercard-url=\"/apache/shardingsphere/issues/21347/hovercard?comment_id=1287861777&amp;comment_type=issue_comment\" href=\"https://github.com/apache/shardingsphere/issues/21347#issuecomment-1287861777\">apache/shardingsphere#21347 (comment)</a>, where the earliest context was found.</p>\n</li>\n</ul>",
                "resourcePath": "/netty/netty/issues/12934",
                "createdAt": "2022-10-26T12:45:04Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Subclasses of FastThreadLocalThread can selectively permit blocking calls",
        "url": "https://github.com/netty/netty/pull/12978",
        "resourcePath": "/netty/netty/pull/12978",
        "createdAt": "2022-11-08T22:14:45Z",
        "number": 12978,
        "mergeCommit": {
          "oid": "ecf489fb75d25d0fd35992d53f2e9bc6d9861e47",
          "message": "Subclasses of FastThreadLocalThread can selectively permit blocking calls (#12978)\n\nMotivation:\r\nPeople sometimes make use of FastThreadLocalThreads outside of event-loops, e.g. for task-offload, or to make ues of Netty's thread-locals.\r\nOur Blockhound integration is currently preventing these threads from performing blocking calls, which is overly restrictive.\r\n\r\nModification:\r\nAdd an escape hatch for subclasses of FastThreadLocalThread to permit blocking calls.\r\n\r\nResult:\r\nIt is now possible to use FastThreadLocalThreads outside of event-loops, make use of blocking calls, and not be flagged by Blockhound.\r\n\r\nFixes #12959",
          "commitUrl": "https://github.com/netty/netty/commit/ecf489fb75d25d0fd35992d53f2e9bc6d9861e47",
          "parents": {
            "nodes": [
              {
                "oid": "a4c37bc06d16ba2267a3f8cac151f29bd9118aad",
                "message": "Close EmbeddedChannel and release all buffers once test completes (#12962)\n\nMotivation:\r\n\r\nde8a7efd054d1eedc833303b1c2c8c76e519d5e1 added some new tests but missed to close the EmbeddedChannel and release the still buffered data once done. This results in a leak.\r\n\r\nModifications:\r\n\r\nCall finishAndReleaseAll() once test completes\r\n\r\nResult:\r\n\r\nNo more leaks"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/concurrent/FastThreadLocalThread.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/Hidden.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-blockhound-tests/src/test/java/io/netty/util/internal/NettyBlockHoundIntegrationTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85Cdygb2gAoNmU1YTYzNDdiYjdlY2U4MmZkOGZmMjZkMGQzNTEzMTMzNTBhMDUxMA",
                "url": "https://github.com/netty/netty/pull/12978/commits/6e5a6347bb7ece82fd8ff26d0d351313350a0510"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12959,
                "url": "https://github.com/netty/netty/issues/12959",
                "title": "Netty's BlockHound integration assumes `FastThreadLocalThread` is always non-blocking",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The motivation is similar to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1150852745\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/12125\" data-hovercard-type=\"issue\" data-hovercard-url=\"/netty/netty/issues/12125/hovercard\" href=\"https://github.com/netty/netty/issues/12125\">#12125</a> which has already been reported and closed.</p>\n<p dir=\"auto\">I'm wondering if <code class=\"notranslate\">FastThreadLocalThread</code> can be used for executing blocking tasks while integrating with Netty's <code class=\"notranslate\">BlockHound</code> integration.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Some libraries utilize <code class=\"notranslate\">FastThreadLocalThread</code> not only for event loops but also for blocking task executors.<br>\nFor this case, it is acceptable that a blocking task is executed within a <code class=\"notranslate\">FastThreadLocalThread</code>.</p>\n<p dir=\"auto\">However, Netty's <code class=\"notranslate\">BlockHound</code> integration assumes that all <code class=\"notranslate\">FastThreadLocalThread</code> instances should be non-blocking.</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/cfcc5144578d3f998d353cc3c3b448fc56333e0d/common/src/main/java/io/netty/util/internal/Hidden.java#L173\">netty/common/src/main/java/io/netty/util/internal/Hidden.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 173\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/cfcc5144578d3f998d353cc3c3b448fc56333e0d\">cfcc514</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L173\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"173\"></td>\n          <td id=\"LC173\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">return</span> <span class=\"pl-s1\">p</span>.<span class=\"pl-en\">test</span>(<span class=\"pl-s1\">thread</span>) || <span class=\"pl-s1\">thread</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">FastThreadLocalThread</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">I'm wondering if it would be possible to define a separate <code class=\"notranslate\">FastThreadLocalThread</code> (e.g. <code class=\"notranslate\">NonBlockingFastThreadLocalThread</code>) and apply <code class=\"notranslate\">BlockHound</code> predicates on the <code class=\"notranslate\">NonBlocking</code> variant instead.</p>\n<p dir=\"auto\">I guess users may override <code class=\"notranslate\">DefaultThreadFactory#newThread</code> and apply their own <code class=\"notranslate\">FastThreadLocalThread</code> variant if they would like.</p>\n<p dir=\"auto\">A potential diffset:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"diff --git a/common/src/main/java/io/netty/util/concurrent/DefaultThreadFactory.java b/common/src/main/java/io/netty/util/concurrent/DefaultThreadFactory.java\nindex a18f236309..6e2b25f67c 100644\n--- a/common/src/main/java/io/netty/util/concurrent/DefaultThreadFactory.java\n+++ b/common/src/main/java/io/netty/util/concurrent/DefaultThreadFactory.java\n@@ -118,6 +118,6 @@ public class DefaultThreadFactory implements ThreadFactory {\n     }\n \n     protected Thread newThread(Runnable r, String name) {\n-        return new FastThreadLocalThread(threadGroup, r, name);\n+        return new NonBlockingFastThreadLocalThread(threadGroup, r, name);\n     }\n }\ndiff --git a/common/src/main/java/io/netty/util/concurrent/NonBlockingFastThreadLocalThread.java b/common/src/main/java/io/netty/util/concurrent/NonBlockingFastThreadLocalThread.java\nnew file mode 100644\nindex 0000000000..00b2455e43\n--- /dev/null\n+++ b/common/src/main/java/io/netty/util/concurrent/NonBlockingFastThreadLocalThread.java\n@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2022 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the &quot;License&quot;); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package io.netty.util.concurrent;\n+\n+/**\n+ * A special {@link Thread} that provides fast access to {@link FastThreadLocal} variables.\n+ */\n+public final class NonBlockingFastThreadLocalThread extends FastThreadLocalThread {\n+\n+    public NonBlockingFastThreadLocalThread(ThreadGroup threadGroup, Runnable r, String name) {\n+        super(threadGroup, r, name);\n+    }\n+\n+    public NonBlockingFastThreadLocalThread(Runnable runnable) {\n+        super(runnable);\n+    }\n+}\ndiff --git a/common/src/main/java/io/netty/util/internal/Hidden.java b/common/src/main/java/io/netty/util/internal/Hidden.java\nindex fec14d1254..4c67b7f166 100644\n--- a/common/src/main/java/io/netty/util/internal/Hidden.java\n+++ b/common/src/main/java/io/netty/util/internal/Hidden.java\n@@ -16,13 +16,13 @@\n \n package io.netty.util.internal;\n \n-import io.netty.util.concurrent.FastThreadLocalThread;\n-import reactor.blockhound.BlockHound;\n-import reactor.blockhound.integration.BlockHoundIntegration;\n-\n import java.util.function.Function;\n import java.util.function.Predicate;\n \n+import io.netty.util.concurrent.NonBlockingFastThreadLocalThread;\n+import reactor.blockhound.BlockHound;\n+import reactor.blockhound.integration.BlockHoundIntegration;\n+\n /**\n  * Contains classes that must have public visibility but are not public API.\n  */\n@@ -170,7 +170,7 @@ class Hidden {\n                         @Override\n                         @SuppressJava6Requirement(reason = &quot;Predicate#test&quot;)\n                         public boolean test(Thread thread) {\n-                            return p.test(thread) || thread instanceof FastThreadLocalThread;\n+                            return p.test(thread) || thread instanceof NonBlockingFastThreadLocalThread;\n                         }\n                     };\n                 }\ndiff --git a/common/src/main/java/io/netty/util/internal/ObjectCleaner.java b/common/src/main/java/io/netty/util/internal/ObjectCleaner.java\nindex 0eb7b3495f..e1e76e6688 100644\n--- a/common/src/main/java/io/netty/util/internal/ObjectCleaner.java\n+++ b/common/src/main/java/io/netty/util/internal/ObjectCleaner.java\n@@ -15,7 +15,8 @@\n  */\n package io.netty.util.internal;\n \n-import io.netty.util.concurrent.FastThreadLocalThread;\n+import static io.netty.util.internal.SystemPropertyUtil.getInt;\n+import static java.lang.Math.max;\n \n import java.lang.ref.ReferenceQueue;\n import java.lang.ref.WeakReference;\n@@ -24,8 +25,7 @@ import java.security.PrivilegedAction;\n import java.util.Set;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n-import static io.netty.util.internal.SystemPropertyUtil.getInt;\n-import static java.lang.Math.max;\n+import io.netty.util.concurrent.NonBlockingFastThreadLocalThread;\n \n /**\n  * Allows a way to register some {@link Runnable} that will executed once there are no references to an {@link Object}\n@@ -100,7 +100,7 @@ public final class ObjectCleaner {\n \n         // Check if there is already a cleaner running.\n         if (CLEANER_RUNNING.compareAndSet(false, true)) {\n-            final Thread cleanupThread = new FastThreadLocalThread(CLEANER_TASK);\n+            final Thread cleanupThread = new NonBlockingFastThreadLocalThread(CLEANER_TASK);\n             cleanupThread.setPriority(Thread.MIN_PRIORITY);\n             // Set to null to ensure we not create classloader leaks by holding a strong reference to the inherited\n             // classloader.\n\n\"><pre class=\"notranslate\"><code class=\"notranslate\">diff --git a/common/src/main/java/io/netty/util/concurrent/DefaultThreadFactory.java b/common/src/main/java/io/netty/util/concurrent/DefaultThreadFactory.java\nindex a18f236309..6e2b25f67c 100644\n--- a/common/src/main/java/io/netty/util/concurrent/DefaultThreadFactory.java\n+++ b/common/src/main/java/io/netty/util/concurrent/DefaultThreadFactory.java\n@@ -118,6 +118,6 @@ public class DefaultThreadFactory implements ThreadFactory {\n     }\n \n     protected Thread newThread(Runnable r, String name) {\n-        return new FastThreadLocalThread(threadGroup, r, name);\n+        return new NonBlockingFastThreadLocalThread(threadGroup, r, name);\n     }\n }\ndiff --git a/common/src/main/java/io/netty/util/concurrent/NonBlockingFastThreadLocalThread.java b/common/src/main/java/io/netty/util/concurrent/NonBlockingFastThreadLocalThread.java\nnew file mode 100644\nindex 0000000000..00b2455e43\n--- /dev/null\n+++ b/common/src/main/java/io/netty/util/concurrent/NonBlockingFastThreadLocalThread.java\n@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2022 The Netty Project\n+ *\n+ * The Netty Project licenses this file to you under the Apache License,\n+ * version 2.0 (the \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at:\n+ *\n+ *   https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package io.netty.util.concurrent;\n+\n+/**\n+ * A special {@link Thread} that provides fast access to {@link FastThreadLocal} variables.\n+ */\n+public final class NonBlockingFastThreadLocalThread extends FastThreadLocalThread {\n+\n+    public NonBlockingFastThreadLocalThread(ThreadGroup threadGroup, Runnable r, String name) {\n+        super(threadGroup, r, name);\n+    }\n+\n+    public NonBlockingFastThreadLocalThread(Runnable runnable) {\n+        super(runnable);\n+    }\n+}\ndiff --git a/common/src/main/java/io/netty/util/internal/Hidden.java b/common/src/main/java/io/netty/util/internal/Hidden.java\nindex fec14d1254..4c67b7f166 100644\n--- a/common/src/main/java/io/netty/util/internal/Hidden.java\n+++ b/common/src/main/java/io/netty/util/internal/Hidden.java\n@@ -16,13 +16,13 @@\n \n package io.netty.util.internal;\n \n-import io.netty.util.concurrent.FastThreadLocalThread;\n-import reactor.blockhound.BlockHound;\n-import reactor.blockhound.integration.BlockHoundIntegration;\n-\n import java.util.function.Function;\n import java.util.function.Predicate;\n \n+import io.netty.util.concurrent.NonBlockingFastThreadLocalThread;\n+import reactor.blockhound.BlockHound;\n+import reactor.blockhound.integration.BlockHoundIntegration;\n+\n /**\n  * Contains classes that must have public visibility but are not public API.\n  */\n@@ -170,7 +170,7 @@ class Hidden {\n                         @Override\n                         @SuppressJava6Requirement(reason = \"Predicate#test\")\n                         public boolean test(Thread thread) {\n-                            return p.test(thread) || thread instanceof FastThreadLocalThread;\n+                            return p.test(thread) || thread instanceof NonBlockingFastThreadLocalThread;\n                         }\n                     };\n                 }\ndiff --git a/common/src/main/java/io/netty/util/internal/ObjectCleaner.java b/common/src/main/java/io/netty/util/internal/ObjectCleaner.java\nindex 0eb7b3495f..e1e76e6688 100644\n--- a/common/src/main/java/io/netty/util/internal/ObjectCleaner.java\n+++ b/common/src/main/java/io/netty/util/internal/ObjectCleaner.java\n@@ -15,7 +15,8 @@\n  */\n package io.netty.util.internal;\n \n-import io.netty.util.concurrent.FastThreadLocalThread;\n+import static io.netty.util.internal.SystemPropertyUtil.getInt;\n+import static java.lang.Math.max;\n \n import java.lang.ref.ReferenceQueue;\n import java.lang.ref.WeakReference;\n@@ -24,8 +25,7 @@ import java.security.PrivilegedAction;\n import java.util.Set;\n import java.util.concurrent.atomic.AtomicBoolean;\n \n-import static io.netty.util.internal.SystemPropertyUtil.getInt;\n-import static java.lang.Math.max;\n+import io.netty.util.concurrent.NonBlockingFastThreadLocalThread;\n \n /**\n  * Allows a way to register some {@link Runnable} that will executed once there are no references to an {@link Object}\n@@ -100,7 +100,7 @@ public final class ObjectCleaner {\n \n         // Check if there is already a cleaner running.\n         if (CLEANER_RUNNING.compareAndSet(false, true)) {\n-            final Thread cleanupThread = new FastThreadLocalThread(CLEANER_TASK);\n+            final Thread cleanupThread = new NonBlockingFastThreadLocalThread(CLEANER_TASK);\n             cleanupThread.setPriority(Thread.MIN_PRIORITY);\n             // Set to null to ensure we not create classloader leaks by holding a strong reference to the inherited\n             // classloader.\n\n\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.82</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">n/a</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">n/a</p>",
                "resourcePath": "/netty/netty/issues/12959",
                "createdAt": "2022-11-02T14:07:07Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "HttpConnectionHandler should send a GO_AWAY frame with PROTOCOL_ERROR\u2026",
        "url": "https://github.com/netty/netty/pull/12985",
        "resourcePath": "/netty/netty/pull/12985",
        "createdAt": "2022-11-10T23:12:46Z",
        "number": 12985,
        "mergeCommit": null,
        "potentialMergeCommit": {
          "oid": "c9cb1744601c48735ce23b095a0851b8753f2495",
          "message": "Merge 618950443cebf3ca2dfd79cf3609fcb4cb351aa0 into 2e413d6c73aac00d4541bab119c7a2c330bf8235",
          "commitUrl": "https://github.com/netty/netty/commit/c9cb1744601c48735ce23b095a0851b8753f2495",
          "parents": {
            "nodes": [
              {
                "oid": "2e413d6c73aac00d4541bab119c7a2c330bf8235",
                "message": "Add more JDK versions to the devcontainers (#14008)\n\nMotivation:\n\nWe should add also other JDKs to the docker images that are used by\ndevcontainers so its easier to debug with different JDKs\n\nModifications:\n\nAdd Java 8,11,17\n\nResult:\n\nEasier to debug with devcontainers\n\n---------\n\nCo-authored-by: Chris Vest <christianvest_hansen@apple.com>"
              },
              {
                "oid": "618950443cebf3ca2dfd79cf3609fcb4cb351aa0",
                "message": "Update codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java"
              }
            ]
          }
        },
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionRoundtripTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85CqbJY2gAoNjE4OTUwNDQzY2ViZjNjYTJkZmQ3OWNmMzYwOWZjYjRjYjM1MWFhMA",
                "url": "https://github.com/netty/netty/pull/12985/commits/618950443cebf3ca2dfd79cf3609fcb4cb351aa0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12974,
                "url": "https://github.com/netty/netty/issues/12974",
                "title": "Incorrect behavior when an HTTP/2 server receives an unknown stream id",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The server will send a GO_AWAY frame with a PROTOCOL_ERROR and close the connection (as per RFC 7540).</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The server sends a RST_STREAM instead.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ol dir=\"auto\">\n<li>establish an HTTP/2 connection2.</li>\n<li>send a header frame with a valid identifier, e.g 5</li>\n<li>send a header frame with a lower identifier, e.g 34.</li>\n<li>observe the serve response5.</li>\n</ol>\n<p dir=\"auto\">The <code class=\"notranslate\">Http2ConnectionHandler#onStreamError</code> implementation resets the stream instead of sending a GO_AWAY frame.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        if (stream == null) {\n            if (!outbound || connection().local().mayHaveCreatedStream(streamId)) {\n                // Should instead send a GO_AWAY frame\n                resetUnknownStream(ctx, streamId, http2Ex.error().code(), ctx.newPromise());\n            }\n        } else {\n            resetStream(ctx, stream, http2Ex.error().code(), ctx.newPromise());\n        }\"><pre class=\"notranslate\">        <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">stream</span> == <span class=\"pl-c1\">null</span>) {\n            <span class=\"pl-k\">if</span> (!<span class=\"pl-s1\">outbound</span> || <span class=\"pl-en\">connection</span>().<span class=\"pl-en\">local</span>().<span class=\"pl-en\">mayHaveCreatedStream</span>(<span class=\"pl-s1\">streamId</span>)) {\n                <span class=\"pl-c\">// Should instead send a GO_AWAY frame</span>\n                <span class=\"pl-en\">resetUnknownStream</span>(<span class=\"pl-s1\">ctx</span>, <span class=\"pl-s1\">streamId</span>, <span class=\"pl-s1\">http2Ex</span>.<span class=\"pl-en\">error</span>().<span class=\"pl-en\">code</span>(), <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">newPromise</span>());\n            }\n        } <span class=\"pl-k\">else</span> {\n            <span class=\"pl-en\">resetStream</span>(<span class=\"pl-s1\">ctx</span>, <span class=\"pl-s1\">stream</span>, <span class=\"pl-s1\">http2Ex</span>.<span class=\"pl-en\">error</span>().<span class=\"pl-en\">code</span>(), <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">newPromise</span>());\n        }</pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">N/A</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.84.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">N/A</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">N/A</p>",
                "resourcePath": "/netty/netty/issues/12974",
                "createdAt": "2022-11-08T16:39:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "HPACK dynamic table size update must happen at the beginning of the h\u2026",
        "url": "https://github.com/netty/netty/pull/12988",
        "resourcePath": "/netty/netty/pull/12988",
        "createdAt": "2022-11-11T09:32:53Z",
        "number": 12988,
        "mergeCommit": {
          "oid": "ee9bb63aa5382bf9930eb0df4b690286173f126a",
          "message": "HPACK dynamic table size update must happen at the beginning of the h\u2026 (#12988)\n\n\r\nMotivation:\r\n\r\nHpackDecoder accepts dynamic table size updates at any stage of a header block. Such modification should always happen before the table is modified as per RFC 7541.\r\n\r\nModifications:\r\n\r\nCheck the header block first for dynamic table size updates in a separate method. Then reject any table size update when processing unpacking the rest of the block. Dynamic table size update could have been done with the current switch/case but it requires to keep track of the modifications which is not hard but introduces complexity in the loop (a simple boolean that must be switched for any modification but the table size update). Instead a table size update is achieved first in a simpler loop and then any table size update is rejected.\r\n\r\nResult:\r\n\r\nFixes #12981\r\n\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/ee9bb63aa5382bf9930eb0df4b690286173f126a",
          "parents": {
            "nodes": [
              {
                "oid": "55e7f43d798ddfba668293c909b2d70f1ab40874",
                "message": "Fix data race bug in UnorderedThreadPoolEventExecutorTest (#12986)\n\nMotivation:\nThis test could sometimes (about 1 in 100.000) fail because addListener and promise completion could race to notify listeners, causing an extra task to be observed by the queue inspection, after the CountDownLatch had opened.\n\nModification:\nUse an Exchanger to delay the completion of the first task until after we've attached a listener to the promise of the second task.\nThis way, the completion of the second task will no longer race with `addListener`.\nThis works because the UnorderedThreadPoolEventExecutor used by the test is single-threaded.\n\nResult:\nThe UnorderedThreadPoolEventExecutorTest is no longer flaky."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/HpackDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/HpackDecoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85CsHj92gAoYzFiZjI4MzQzYjM3OTk3MDJhYzQyYzBkOTE0NzRhYTAxZjc5NDQyMw",
                "url": "https://github.com/netty/netty/pull/12988/commits/c1bf28343b3799702ac42c0d91474aa01f794423"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12981,
                "url": "https://github.com/netty/netty/issues/12981",
                "title": "HPACK dynamic table size update must happen at the beginning of the header block",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">HPACK decoder accepts dynamic table size update at the beginning of the block.</p>\n<p dir=\"auto\">Cf RFC 7531, section 4.2</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">HPACK decoder tolerates dynamic table size update anywhere in the block</p>\n<p dir=\"auto\"><code class=\"notranslate\">io.netty.handler.codec.http2.HpackDecoder</code> can be modified to only allow setDynamicTableSize to be called only if that is the first of the block processing and fail otherwise with a connection error like it does already.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Send an HTTP/2 header frame with a dynamic table size update anywhere, e.g at the end of the stream</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">N/A</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.84.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">N/A</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">N/A</p>",
                "resourcePath": "/netty/netty/issues/12981",
                "createdAt": "2022-11-09T15:22:23Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make Handler-Ssl-Ocsp releasable",
        "url": "https://github.com/netty/netty/pull/13004",
        "resourcePath": "/netty/netty/pull/13004",
        "createdAt": "2022-11-16T12:23:20Z",
        "number": 13004,
        "mergeCommit": {
          "oid": "6e935e073fe877a73ef55d5b2df0ba913d52de47",
          "message": "Make Handler-Ssl-Ocsp releasable (#13004)\n\nMotivation:\r\nWe should make Handler-Ssl-Ocsp releasable.\r\n\r\nModification:\r\nAdded handler-ssl-ocsp into `bom` and `all` modules.\r\n\r\nResult:\r\nFixes #13003 .",
          "commitUrl": "https://github.com/netty/netty/commit/6e935e073fe877a73ef55d5b2df0ba913d52de47",
          "parents": {
            "nodes": [
              {
                "oid": "e9e8ee5087f30d63426cd7e066379cbd7b3f3832",
                "message": "Fix parent version for handler-ssl-ocsp\n\nMotivation:\n\n09ac33766f6c30d445dcdfb4285f589aedf5d7fe introduced handler-ssl-ocsp but used the wrong version for the parent\n\nModifications:\n\nFix version\n\nResult:\n\nProject builds again"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "all/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "bom/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler-ssl-ocsp/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85DBPAn2gAoMGRiZTM0Y2IyODExY2Y2OTRkNjQ1Yzg5YTk0ZDA4NGViOGY4ODQwNg",
                "url": "https://github.com/netty/netty/pull/13004/commits/0dbe34cb2811cf694d645c89a94d084eb8f88406"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13003,
                "url": "https://github.com/netty/netty/issues/13003",
                "title": "Release Handler-Ssl-Ocsp",
                "bodyHTML": "<p dir=\"auto\">Netty <a href=\"https://github.com/netty/netty/commit/09ac33766f6c30d445dcdfb4285f589aedf5d7fe\">Handler-Ssl-Ocsp</a> was merged but the module is not present in bom.xml. Hence, snapshots are not being deployed.</p>",
                "resourcePath": "/netty/netty/issues/13003",
                "createdAt": "2022-11-16T12:08:43Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Correctly handle unresolvable InetSocketAddress when using DatagramCh\u2026",
        "url": "https://github.com/netty/netty/pull/13017",
        "resourcePath": "/netty/netty/pull/13017",
        "createdAt": "2022-11-24T11:27:26Z",
        "number": 13017,
        "mergeCommit": {
          "oid": "91527ff889384b436a21de4c2293ff3e915b0781",
          "message": "Correctly handle unresolvable InetSocketAddress when using DatagramChannel (#13017)\n\n\r\nMotivation:\r\n\r\nWe should consistent handle the case when a DatagramPacket was send to an unresolvable InetSocketAddress.\r\n\r\nModifications:\r\n\r\nConsistently fail in the case of unresolvable InetSocketAddress\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13015",
          "commitUrl": "https://github.com/netty/netty/commit/91527ff889384b436a21de4c2293ff3e915b0781",
          "parents": {
            "nodes": [
              {
                "oid": "b64a6e22b2f410d3092f4a2e9f8edcf8c51262b2",
                "message": "Revert#12888 for potential scheduling problems (#13021)\n\nMotivation:\r\n\r\nThe code I commited in #12888 may cause unexpected task scheduling problems.\r\n\r\n\r\nModification:\r\n\r\nRevert this commit.\r\n\r\n\r\nResult:\r\n\r\nFixes #13018 ."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite/src/main/java/io/netty/testsuite/transport/socket/DatagramUnicastTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDatagramChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/socket/nio/NioDatagramChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/socket/oio/OioDatagramChannel.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85Do40h2gAoODIyMjQwMGI4ZjhmYzRkMmRjMTBiMDZiYTE2OWU3NzdmNDY1MTJlYg",
                "url": "https://github.com/netty/netty/pull/13017/commits/8222400b8f8fc4d2dc10b06ba169e777f46512eb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13015,
                "url": "https://github.com/netty/netty/issues/13015",
                "title": "EpollDatagramChannel NullPointerException when sending to unresolved address leading to ChannelOutputShutdown",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">EpollDatagramChannel</code> remains open after writing to unresolved address, similarly to <code class=\"notranslate\">NioDatagramChannel</code></p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">EpollDatagramChannel</code> shuts down with a <code class=\"notranslate\">NullPointerException</code>, while <code class=\"notranslate\">NioDatagramChannel</code> remains open after throwing an <code class=\"notranslate\">UnresolvedAddressException</code></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\"><code class=\"notranslate\">EpollDatagramChannel.write</code> to unresolved address</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n        InetSocketAddress goodHost = new InetSocketAddress(&quot;localhost&quot;, SERVER_PORT);\n        InetSocketAddress unresolvedHost = new InetSocketAddress(&quot;NOT_A_REAL_ADDRESS&quot;, SERVER_PORT);\n\n        Assert.assertFalse(goodHost.isUnresolved());\n        Assert.assertTrue(unresolvedHost.isUnresolved());\n\n        String message = &quot;hello world!&quot;;\n        udpClientChannel.writeAndFlush(getDatagramPacket(message, goodHost)).await();\n        udpClientChannel.writeAndFlush(getDatagramPacket(message, unresolvedHost)).await();\n\n        // DatagramChannel should still be open after sending to unresolved address\n        Assert.assertTrue(udpClientChannel.isOpen());\n\n        // DatagramChannel should still be able to send messages outbound\n        udpClientChannel.writeAndFlush(getDatagramPacket(message, goodHost)).await();\n        udpClientChannel.writeAndFlush(getDatagramPacket(message, unresolvedHost)).await();\n\n        Assert.assertTrue(udpClientChannel.isOpen());\"><pre class=\"notranslate\"><code class=\"notranslate\">\n        InetSocketAddress goodHost = new InetSocketAddress(\"localhost\", SERVER_PORT);\n        InetSocketAddress unresolvedHost = new InetSocketAddress(\"NOT_A_REAL_ADDRESS\", SERVER_PORT);\n\n        Assert.assertFalse(goodHost.isUnresolved());\n        Assert.assertTrue(unresolvedHost.isUnresolved());\n\n        String message = \"hello world!\";\n        udpClientChannel.writeAndFlush(getDatagramPacket(message, goodHost)).await();\n        udpClientChannel.writeAndFlush(getDatagramPacket(message, unresolvedHost)).await();\n\n        // DatagramChannel should still be open after sending to unresolved address\n        Assert.assertTrue(udpClientChannel.isOpen());\n\n        // DatagramChannel should still be able to send messages outbound\n        udpClientChannel.writeAndFlush(getDatagramPacket(message, goodHost)).await();\n        udpClientChannel.writeAndFlush(getDatagramPacket(message, unresolvedHost)).await();\n\n        Assert.assertTrue(udpClientChannel.isOpen());\n</code></pre></div>\n<p dir=\"auto\">Full gist: <a href=\"https://gist.github.com/nmonsees/d45d01764c65e2900c55061f11ae2041\">https://gist.github.com/nmonsees/d45d01764c65e2900c55061f11ae2041</a></p>\n<p dir=\"auto\">With <code class=\"notranslate\">NioDatagramChannel</code> this test succeeds and the channel remains open, but <code class=\"notranslate\">EpollDatagramChannel</code> closes after the first attempted write to the unresolved address.</p>\n<p dir=\"auto\"><code class=\"notranslate\">EpollDatagramChannel</code> stacktrace:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    [junit] /0:0:0:0:0:0:0:0%0:16600 error while writing: \n    [junit] io.netty.channel.socket.ChannelOutputShutdownException: Channel output shutdown\n    [junit] \tat io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:638)\n    [junit] \tat io.netty.channel.AbstractChannel$AbstractUnsafe.handleWriteError(AbstractChannel.java:963)\n    [junit] \tat io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:943)\n    [junit] \tat io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.flush0(AbstractEpollChannel.java:520)\n    [junit] \tat io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:905)\n    [junit] \tat io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1372)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:750)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:742)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:728)\n    [junit] \tat io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:127)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:750)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:765)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext$WriteTask.run(AbstractChannelHandlerContext.java:1071)\n    [junit] \tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\n    [junit] \tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)\n    [junit] \tat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:384)\n    [junit] \tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n    [junit] \tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n    [junit] \tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n    [junit] \tat java.base/java.lang.Thread.run(Thread.java:829)\n    [junit] Caused by: java.lang.NullPointerException\n    [junit] \tat io.netty.channel.unix.Socket.sendToAddress(Socket.java:150)\n    [junit] \tat io.netty.channel.epoll.EpollDatagramChannel.doWriteMessage(EpollDatagramChannel.java:376)\n    [junit] \tat io.netty.channel.epoll.EpollDatagramChannel.doWrite(EpollDatagramChannel.java:329)\n    [junit] \tat io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:941)\n    [junit] \t... 17 more\"><pre class=\"notranslate\"><code class=\"notranslate\">    [junit] /0:0:0:0:0:0:0:0%0:16600 error while writing: \n    [junit] io.netty.channel.socket.ChannelOutputShutdownException: Channel output shutdown\n    [junit] \tat io.netty.channel.AbstractChannel$AbstractUnsafe.shutdownOutput(AbstractChannel.java:638)\n    [junit] \tat io.netty.channel.AbstractChannel$AbstractUnsafe.handleWriteError(AbstractChannel.java:963)\n    [junit] \tat io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:943)\n    [junit] \tat io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.flush0(AbstractEpollChannel.java:520)\n    [junit] \tat io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:905)\n    [junit] \tat io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1372)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:750)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:742)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:728)\n    [junit] \tat io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:127)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:750)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:765)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext$WriteTask.run(AbstractChannelHandlerContext.java:1071)\n    [junit] \tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\n    [junit] \tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)\n    [junit] \tat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:384)\n    [junit] \tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n    [junit] \tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n    [junit] \tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n    [junit] \tat java.base/java.lang.Thread.run(Thread.java:829)\n    [junit] Caused by: java.lang.NullPointerException\n    [junit] \tat io.netty.channel.unix.Socket.sendToAddress(Socket.java:150)\n    [junit] \tat io.netty.channel.epoll.EpollDatagramChannel.doWriteMessage(EpollDatagramChannel.java:376)\n    [junit] \tat io.netty.channel.epoll.EpollDatagramChannel.doWrite(EpollDatagramChannel.java:329)\n    [junit] \tat io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:941)\n    [junit] \t... 17 more\n</code></pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">NioDatagramChannel</code> stacktrace:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    [junit] /0:0:0:0:0:0:0:0:16600 error while writing: \n    [junit] java.nio.channels.UnresolvedAddressException\n    [junit] \tat java.base/sun.nio.ch.Net.checkAddress(Net.java:131)\n    [junit] \tat java.base/sun.nio.ch.Net.checkAddress(Net.java:139)\n    [junit] \tat java.base/sun.nio.ch.DatagramChannelImpl.send(DatagramChannelImpl.java:502)\n    [junit] \tat io.netty.channel.socket.nio.NioDatagramChannel.doWriteMessage(NioDatagramChannel.java:295)\n    [junit] \tat io.netty.channel.nio.AbstractNioMessageChannel.doWrite(AbstractNioMessageChannel.java:142)\n    [junit] \tat io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:941)\n    [junit] \tat io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:354)\n    [junit] \tat io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:905)\n    [junit] \tat io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1372)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:750)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:742)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:728)\n    [junit] \tat io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:127)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:750)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:765)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext$WriteTask.run(AbstractChannelHandlerContext.java:1071)\n    [junit] \tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\n    [junit] \tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)\n    [junit] \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)\n    [junit] \tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n    [junit] \tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n    [junit] \tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n    [junit] \tat java.base/java.lang.Thread.run(Thread.java:829)\"><pre class=\"notranslate\"><code class=\"notranslate\">    [junit] /0:0:0:0:0:0:0:0:16600 error while writing: \n    [junit] java.nio.channels.UnresolvedAddressException\n    [junit] \tat java.base/sun.nio.ch.Net.checkAddress(Net.java:131)\n    [junit] \tat java.base/sun.nio.ch.Net.checkAddress(Net.java:139)\n    [junit] \tat java.base/sun.nio.ch.DatagramChannelImpl.send(DatagramChannelImpl.java:502)\n    [junit] \tat io.netty.channel.socket.nio.NioDatagramChannel.doWriteMessage(NioDatagramChannel.java:295)\n    [junit] \tat io.netty.channel.nio.AbstractNioMessageChannel.doWrite(AbstractNioMessageChannel.java:142)\n    [junit] \tat io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:941)\n    [junit] \tat io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:354)\n    [junit] \tat io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:905)\n    [junit] \tat io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1372)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:750)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:742)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:728)\n    [junit] \tat io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:127)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:750)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext.invokeWriteAndFlush(AbstractChannelHandlerContext.java:765)\n    [junit] \tat io.netty.channel.AbstractChannelHandlerContext$WriteTask.run(AbstractChannelHandlerContext.java:1071)\n    [junit] \tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\n    [junit] \tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)\n    [junit] \tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:500)\n    [junit] \tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n    [junit] \tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n    [junit] \tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n    [junit] \tat java.base/java.lang.Thread.run(Thread.java:829)\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.59</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/13015",
                "createdAt": "2022-11-23T19:58:43Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Revert #12888 for potential task scheduling problems",
        "url": "https://github.com/netty/netty/pull/13021",
        "resourcePath": "/netty/netty/pull/13021",
        "createdAt": "2022-11-27T00:16:58Z",
        "number": 13021,
        "mergeCommit": {
          "oid": "b64a6e22b2f410d3092f4a2e9f8edcf8c51262b2",
          "message": "Revert#12888 for potential scheduling problems (#13021)\n\nMotivation:\r\n\r\nThe code I commited in #12888 may cause unexpected task scheduling problems.\r\n\r\n\r\nModification:\r\n\r\nRevert this commit.\r\n\r\n\r\nResult:\r\n\r\nFixes #13018 .",
          "commitUrl": "https://github.com/netty/netty/commit/b64a6e22b2f410d3092f4a2e9f8edcf8c51262b2",
          "parents": {
            "nodes": [
              {
                "oid": "3bff0bee692b5bcb67f8fe5f900d2e899a7fa1f8",
                "message": "Replace LinkedList with ArrayList (#13016)\n\nMotivation:\r\n\r\nArrayList is more efficient than LinkedList in the space cost.\r\nArrayList is almost as efficient as LinkedList in the time cost of tail insertion, which are the practical use cases of the two lists I modified.\r\n\r\nModification:\r\n\r\nReplace LinkedList with ArrayList.\r\n\r\nResult:\r\n\r\nLess space cost.\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/HashedWheelTimer.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85DvrPb2gAoYzViNGNjOWJjMzZjNzQ0YWFjYmU3M2Y3YTRiNDI1MTJmYmYzMjI0ZQ",
                "url": "https://github.com/netty/netty/pull/13021/commits/c5b4cc9bc36c744aacbe73f7a4b42512fbf3224e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13018,
                "url": "https://github.com/netty/netty/issues/13018",
                "title": "HashedWheelTimer task scheduling behavior changed in 4.1.85",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The expectation is that task scheduling behavior of HashedWheelTimer doesn't change significantly between Netty 4.1.x releases.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The HashedWheelTimer behavior changed in some way that makes multiple integration tests to fail in Apache Pulsar. The only change in HashedWheelTimer in 4.1.85.Final is the PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1407003889\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/12888\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/12888/hovercard\" href=\"https://github.com/netty/netty/pull/12888\">#12888</a> .</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">There are steps to reproduce by running a specific test in Apache Pulsar project. The instructions are in a PR in the Apache Pulsar repo:<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1463056816\" data-permission-text=\"Title is private\" data-url=\"https://github.com/apache/pulsar/issues/18599\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/apache/pulsar/pull/18599/hovercard?comment_id=1327794984&amp;comment_type=issue_comment\" href=\"https://github.com/apache/pulsar/pull/18599#issuecomment-1327794984\">apache/pulsar#18599 (comment)</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.85.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openjdk version &quot;17.0.5&quot; 2022-10-18\nOpenJDK Runtime Environment Temurin-17.0.5+8 (build 17.0.5+8)\nOpenJDK 64-Bit Server VM Temurin-17.0.5+8 (build 17.0.5+8, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">openjdk version \"17.0.5\" 2022-10-18\nOpenJDK Runtime Environment Temurin-17.0.5+8 (build 17.0.5+8)\nOpenJDK 64-Bit Server VM Temurin-17.0.5+8 (build 17.0.5+8, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux x86_64</p>",
                "resourcePath": "/netty/netty/issues/13018",
                "createdAt": "2022-11-25T19:20:42Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Search Domains and DNS Resolver on Windows",
        "url": "https://github.com/netty/netty/pull/13022",
        "resourcePath": "/netty/netty/pull/13022",
        "createdAt": "2022-11-27T21:16:22Z",
        "number": 13022,
        "mergeCommit": {
          "oid": "281c1ff3d41386264ba2deabaeb97946db128a11",
          "message": "Search Domains and DNS Resolver on Windows (#13022)\n\nMotivation:\r\nOn Windows with JDK 9+ the search domain and dns servers are missing.\r\n\r\nModification:\r\n\r\nThis PR uses JNI to fetch the DNS Servers from the operating system.\r\n\r\nResult:\r\n\r\nFixes #12712 #11885. \r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/281c1ff3d41386264ba2deabaeb97946db128a11",
          "parents": {
            "nodes": [
              {
                "oid": "ba804498ac1baf4da91275326eeba45552ab6ebf",
                "message": "Remove LGTM annotations (#13157)\n\nMotivation:\r\nLGTM is [superseded](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/) by GitHub CodeQL. So we should remove it and its components such as LGTM suppress comments.\r\n\r\nModification:\r\nRemoved LGTM and its components\r\n\r\nResult:\r\nRemoved dead modules"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns-native-windows/src/main/c/src/netty_window_dns_native.c"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns-native-windows/src/main/java/io/netty/resolver/dns/windows/NetworkAdapter.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns-native-windows/src/main/java/io/netty/resolver/dns/windows/WindowsAdapterInfo.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns-native-windows/src/main/java/io/netty/resolver/dns/windows/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns-native-windows/src/test/java/io/netty/resolver/dns/windows/WindowsAdapterInfoTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsServerAddressStreamProviders.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/windows/WindowsResolverDnsServerAddressStreamProvider.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/windows/package-info.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85DwjLw2gAoYzZjNzAxZjAwYzVjNWQ5ZTc0MTQzYTg3YTQ1NGI0MjJmM2FlMjQwMg",
                "url": "https://github.com/netty/netty/pull/13022/commits/c6c701f00c5c5d9e74143a87a454b422f3ae2402"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12712,
                "url": "https://github.com/netty/netty/issues/12712",
                "title": "Hosts with DNS suffixes cannot be resolved in Windows 10 and Java 9+",
                "bodyHTML": "<p dir=\"auto\">I am using Spring WebClient based on netty and it cannot resolve hosts with DNS suffixes on Windows and Java 9+. I think this <a href=\"https://github.com/netty/netty/blob/9cd94547d0211c04b610878e5e267c8de2342b97/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java#L189:L202\">hack</a> is responsible for such behaviour.</p>\n<p dir=\"auto\">Why is reflection used here? You can acquire instance of ResolverConfiguration via static method, no?</p>\n<p dir=\"auto\">Java 8 works fine though. I think issue is simillar to <a href=\"https://github.com/netty/netty/issues/11885\" data-hovercard-type=\"issue\" data-hovercard-url=\"/netty/netty/issues/11885/hovercard\">this</a>.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Hosts with dns suffixes resolves succesfully</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">UnknownHostException</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.net.UnknownHostException: failed to resolve 'my-host' after 8 queries \n\tat io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1046)\n\tat io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:999)\n\tat io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:417)\n\tat io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:628)\n\tat io.netty.resolver.dns.DnsResolveContext.access$400(DnsResolveContext.java:65)\n\tat io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:461)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)\n\tat io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)\n\tat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)\n\tat io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:201)\n\tat io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:193)\n\tat io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1301)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n\tat io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: java.net.UnknownHostException: failed to resolve 'my-host' after 8 queries \n\tat io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1046)\n\tat io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:999)\n\tat io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:417)\n\tat io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:628)\n\tat io.netty.resolver.dns.DnsResolveContext.access$400(DnsResolveContext.java:65)\n\tat io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:461)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)\n\tat io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)\n\tat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)\n\tat io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:201)\n\tat io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:193)\n\tat io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1301)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n\tat io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Configure DNS suffixes on Windows. This can be achieved like this: edit SearchList property at registry path HKLM\\SYSTEM\\CurrentControlSet\\services\\Tcpip\\Parameters.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.77.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openjdk version &quot;17.0.2&quot; 2022-01-18\nOpenJDK Runtime Environment (build 17.0.2+8-86)\nOpenJDK 64-Bit Server VM (build 17.0.2+8-86, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">openjdk version \"17.0.2\" 2022-01-18\nOpenJDK Runtime Environment (build 17.0.2+8-86)\nOpenJDK 64-Bit Server VM (build 17.0.2+8-86, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows 10</p>",
                "resourcePath": "/netty/netty/issues/12712",
                "createdAt": "2022-08-18T07:45:39Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Cache NetworkInterfaces after retrieval to speedup initialization time",
        "url": "https://github.com/netty/netty/pull/13060",
        "resourcePath": "/netty/netty/pull/13060",
        "createdAt": "2022-12-16T09:57:32Z",
        "number": 13060,
        "mergeCommit": {
          "oid": "350bd0f6c3e61cdc327d54bcc8fe765203d4b59f",
          "message": "Cache NetworkInterfaces after retrieval to speedup initialization time (#13060)\n\nMotivation:\r\n\r\nWe can justt cache the NetworkInterfaces once and so cut down on initialization time\r\n\r\nModifications:\r\n\r\n- Cache once and expose via NetUtil\r\n- Update code to use the new static method.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13054",
          "commitUrl": "https://github.com/netty/netty/commit/350bd0f6c3e61cdc327d54bcc8fe765203d4b59f",
          "parents": {
            "nodes": [
              {
                "oid": "dcf123765f00b1a20b40992e396d55162f9a2e0c",
                "message": "Extend DNS address supplier interface to provide feedback (#12991)\n\nMotivation:\r\n\r\nThis change allows the start of building out a resolver that is more performant. Most standalone DNS resolvers have some mechanism to find and prioritize nameservers that are giving the best service (either lower error rate or faster response times)\r\n\r\nE.g. https://unbound.docs.nlnetlabs.nl/en/latest/reference/history/info-timeout-server-selection.html\r\n\r\nModification:\r\n\r\nAdded a new interface that extends DnsServerAddressStream to provide a mechanism for DnsResolverContext to provide feedback back to the class that is providing DNS servers in the form of InetSocketAddress\r\n\r\nResult:\r\n\r\nThe DnsServerAddressStream is now able to know the response times of queries for each InetSocketAddress that it returned, or that the InetSocketAddress had a failure when used\r\n\r\nCo-authored-by: Ryan Watson <rfwatson@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/NetUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/NetUtilInitializations.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/MacAddressUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite/src/main/java/io/netty/testsuite/transport/socket/DatagramMulticastTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85Fn_Xw2gAoMDA0ZDEwNWNjMjIxZmNhZmVlMmFkNDAyYTViNjJjMzE4ODU5NjZmYg",
                "url": "https://github.com/netty/netty/pull/13060/commits/004d105cc221fcafee2ad402a5b62c31885966fb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13054,
                "url": "https://github.com/netty/netty/issues/13054",
                "title": "Netty classloading duplicate calls to NetworkInterface.getNetworkInterfaces()",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Can we avoid this duplicate call by caching NetUtil loaded network interfaces<br>\nand adapt MacAddressUtil to call NetUtil.getNetworkInterfaces() ?</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">MacAddressUtil,bestAvailableMac() method is calling once NetworkInterface.getNetworkInterfaces()<br>\nBut just before its triggering also NetUtil class loading that's invoking static method where NetworkInterface.getNetworkInterfaces() is called.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/1820647/207843989-486cda44-339e-48b4-9633-54fc5bfd299c.PNG\"><img src=\"https://user-images.githubusercontent.com/1820647/207843989-486cda44-339e-48b4-9633-54fc5bfd299c.PNG\" alt=\"NettyDupCalls\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">It's causing slowness for us during Grpc bootstrap process.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Call MacAddressUtil,bestAvailableMac()</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">Latest</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">1.8</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows 10</p>",
                "resourcePath": "/netty/netty/issues/13054",
                "createdAt": "2022-12-15T11:12:11Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Explicit disable TLSv1.3 in the OpenSSL options if not supported",
        "url": "https://github.com/netty/netty/pull/13066",
        "resourcePath": "/netty/netty/pull/13066",
        "createdAt": "2022-12-20T08:48:00Z",
        "number": 13066,
        "mergeCommit": {
          "oid": "d9d8722ff2a843595fbdf78c665821fe07b48aed",
          "message": "Explicit disable TLSv1.3 in the OpenSSL options if not supported (#13066)\n\nMotivation:\r\n\r\nIf TLSv1.3 is not supported we should set SSL_OP_NO_TLSv1_3 explicit to ensure we never \"advertise\" it.\r\n\r\nModifications:\r\n\r\nSet SSL_OP_NO_TLSv1_3 if TLSv1.3 is not supported\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/12968",
          "commitUrl": "https://github.com/netty/netty/commit/d9d8722ff2a843595fbdf78c665821fe07b48aed",
          "parents": {
            "nodes": [
              {
                "oid": "0bcc6c8a5d41535fe0f9f428dd53235b53c8d4e2",
                "message": "Support handshake timeout in SniHandler. (#13041)\n\n\r\nMotivation: \r\nThe SslHandler has a configurable timeout that is triggered when the handshake is not completed within that limit. The SniHandler should also have a similar timeout, such timeout would be fired when the the client has not sent enough data to trigger the SNI completion and propagated to the SslHandler it creates.\r\n\r\nModifications:\r\nAdded a handshake timeout in the SniHandler that creates a timer task to fire a failed sni completion event, as well as setting the handshake timeout on the SslHandler when it creates it.\r\n\r\nResult:\r\nConsequently, SniHandler supports handshake timeouts.\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85F2SJY2gAoZDkyMjcyYWJmY2RkNDY5MzQ2YjJmYTUwYTAxMGVjZTljNmUzNDU5ZQ",
                "url": "https://github.com/netty/netty/pull/13066/commits/d92272abfcdd469346b2fa50a010ece9c6e3459e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12968,
                "url": "https://github.com/netty/netty/issues/12968",
                "title": "ReferenceCountedOpenSslEngine on jdk without TLSv1.3 should set SSL_OP_NO_TLSv1_3",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Using an older jdk such as 1.8.0_172 without support for TLSv1.3 should set the <code class=\"notranslate\">SSL_OP_NO_TLSv1_3</code> bit in openssl options.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The <code class=\"notranslate\">SSL_OP_NO_TLSv1_3</code>-bit (\"do not use TLSv1.3\"-bit) is only set if the list of protocols is explicitly specified, even if the jdk lacks support for TLSv1.3.</p>\n<p dir=\"auto\">The consequence of this bit not being set is that tls handshakes for a server on such a jdk will use TLSv1.3, eventhough it is not fully supported.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ol dir=\"auto\">\n<li>Run on a jdk that does not have support for TLSv1.3, or hardcode <code class=\"notranslate\">io.netty.handler.ssl.SslUtils::isTLSv13SupportedByJDK</code> to always return <code class=\"notranslate\">false</code></li>\n<li>Do not set \"allowed protocols\"</li>\n<li>Create <code class=\"notranslate\">ReferenceCountedOpenSslEngine</code></li>\n<li>Examine the <code class=\"notranslate\">SSL_OP_NO_TLSv1_3</code>-bit in openssl options</li>\n<li>Expected behaviour is that the bit should be set, since the jdk does not have support for TLSv1.3</li>\n</ol>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public static void main(String[] args) {\n\ttry {\n\t\tfinal SslProvider openssl = SslProvider.OPENSSL_REFCNT;\n\t\tSystem.out.println(&quot;java.version                 : &quot; + System.getProperty(&quot;java.vm.name&quot;) + &quot; &quot; + System.getProperty(&quot;java.version&quot;));\n\t\tSystem.out.println(&quot;OpenSsl.versionString        : &quot; + OpenSsl.versionString());\n\t\tSystem.out.println(&quot;SslProvider.isTlsv13Supported: &quot; + SslProvider.isTlsv13Supported(openssl));\n\t\tfinal SelfSignedCertificate cert = new SelfSignedCertificate();\n\t\tfinal ReferenceCountedOpenSslEngine sslEngine = (ReferenceCountedOpenSslEngine) SslContextBuilder.forServer(cert.key(), cert.cert())\n\t\t\t\t.sslProvider(openssl)\n\t\t\t\t.build()\n\t\t\t\t.newEngine(UnpooledByteBufAllocator.DEFAULT);\n\t\tSystem.out.println(&quot;sslEngine.getEnabledProtocols: &quot; + Arrays.asList(sslEngine.getEnabledProtocols()));\n\t\tSystem.out.println(&quot;'Do not use TLSv1.3' before  : &quot; + hasSetOptionsBit_DoNotUseTlsv13(sslEngine));\n\t\tsslEngine.setEnabledProtocols(sslEngine.getEnabledProtocols());\n\t\tSystem.out.println(&quot;'Do not use TLSv1.3' after   : &quot; + hasSetOptionsBit_DoNotUseTlsv13(sslEngine));\n\t} catch (Exception e) {\n\t\te.printStackTrace();\n\t}\n}\n\nprivate static boolean hasSetOptionsBit_DoNotUseTlsv13(ReferenceCountedOpenSslEngine sslEngine) {\n\treturn (SSL.getOptions(sslEngine.sslPointer()) &amp; SSL.SSL_OP_NO_TLSv1_3) != 0;\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) {\n\t<span class=\"pl-k\">try</span> {\n\t\t<span class=\"pl-k\">final</span> <span class=\"pl-smi\">SslProvider</span> <span class=\"pl-s1\">openssl</span> = <span class=\"pl-smi\">SslProvider</span>.<span class=\"pl-c1\">OPENSSL_REFCNT</span>;\n\t\t<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"java.version                 : \"</span> + <span class=\"pl-smi\">System</span>.<span class=\"pl-en\">getProperty</span>(<span class=\"pl-s\">\"java.vm.name\"</span>) + <span class=\"pl-s\">\" \"</span> + <span class=\"pl-smi\">System</span>.<span class=\"pl-en\">getProperty</span>(<span class=\"pl-s\">\"java.version\"</span>));\n\t\t<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"OpenSsl.versionString        : \"</span> + <span class=\"pl-smi\">OpenSsl</span>.<span class=\"pl-en\">versionString</span>());\n\t\t<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"SslProvider.isTlsv13Supported: \"</span> + <span class=\"pl-smi\">SslProvider</span>.<span class=\"pl-en\">isTlsv13Supported</span>(<span class=\"pl-s1\">openssl</span>));\n\t\t<span class=\"pl-k\">final</span> <span class=\"pl-smi\">SelfSignedCertificate</span> <span class=\"pl-s1\">cert</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SelfSignedCertificate</span>();\n\t\t<span class=\"pl-k\">final</span> <span class=\"pl-smi\">ReferenceCountedOpenSslEngine</span> <span class=\"pl-s1\">sslEngine</span> = (<span class=\"pl-smi\">ReferenceCountedOpenSslEngine</span>) <span class=\"pl-smi\">SslContextBuilder</span>.<span class=\"pl-en\">forServer</span>(<span class=\"pl-s1\">cert</span>.<span class=\"pl-en\">key</span>(), <span class=\"pl-s1\">cert</span>.<span class=\"pl-en\">cert</span>())\n\t\t\t\t.<span class=\"pl-en\">sslProvider</span>(<span class=\"pl-s1\">openssl</span>)\n\t\t\t\t.<span class=\"pl-en\">build</span>()\n\t\t\t\t.<span class=\"pl-en\">newEngine</span>(<span class=\"pl-smi\">UnpooledByteBufAllocator</span>.<span class=\"pl-c1\">DEFAULT</span>);\n\t\t<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"sslEngine.getEnabledProtocols: \"</span> + <span class=\"pl-smi\">Arrays</span>.<span class=\"pl-en\">asList</span>(<span class=\"pl-s1\">sslEngine</span>.<span class=\"pl-en\">getEnabledProtocols</span>()));\n\t\t<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"'Do not use TLSv1.3' before  : \"</span> + <span class=\"pl-en\">hasSetOptionsBit_DoNotUseTlsv13</span>(<span class=\"pl-s1\">sslEngine</span>));\n\t\t<span class=\"pl-s1\">sslEngine</span>.<span class=\"pl-en\">setEnabledProtocols</span>(<span class=\"pl-s1\">sslEngine</span>.<span class=\"pl-en\">getEnabledProtocols</span>());\n\t\t<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"'Do not use TLSv1.3' after   : \"</span> + <span class=\"pl-en\">hasSetOptionsBit_DoNotUseTlsv13</span>(<span class=\"pl-s1\">sslEngine</span>));\n\t} <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> <span class=\"pl-s1\">e</span>) {\n\t\t<span class=\"pl-s1\">e</span>.<span class=\"pl-en\">printStackTrace</span>();\n\t}\n}\n\n<span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">boolean</span> <span class=\"pl-s1\">hasSetOptionsBit_DoNotUseTlsv13</span>(<span class=\"pl-smi\">ReferenceCountedOpenSslEngine</span> <span class=\"pl-s1\">sslEngine</span>) {\n\t<span class=\"pl-k\">return</span> (<span class=\"pl-smi\">SSL</span>.<span class=\"pl-en\">getOptions</span>(<span class=\"pl-s1\">sslEngine</span>.<span class=\"pl-en\">sslPointer</span>()) &amp; <span class=\"pl-smi\">SSL</span>.<span class=\"pl-s1\">SSL_OP_NO_TLSv1_3</span>) != <span class=\"pl-c1\">0</span>;\n}</pre></div>\n<p dir=\"auto\">Output from above code:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.version                 : Java HotSpot(TM) 64-Bit Server VM 1.8.0_172\nOpenSsl.versionString        : BoringSSL\nSslProvider.isTlsv13Supported: false\nsslEngine.getEnabledProtocols: [SSLv2Hello, TLSv1.2]\n'Do not use TLSv1.3' before  : false\n'Do not use TLSv1.3' after   : true\"><pre class=\"notranslate\"><code class=\"notranslate\">java.version                 : Java HotSpot(TM) 64-Bit Server VM 1.8.0_172\nOpenSsl.versionString        : BoringSSL\nSslProvider.isTlsv13Supported: false\nsslEngine.getEnabledProtocols: [SSLv2Hello, TLSv1.2]\n'Do not use TLSv1.3' before  : false\n'Do not use TLSv1.3' after   : true\n</code></pre></div>\n<ul dir=\"auto\">\n<li>Above code reproduces the problem on Oracle jdk 1.8.0_172, which does not have support for TLSv1.3</li>\n<li>To reproduce on a later jdk, it might be easiest to temporarily hardcode <code class=\"notranslate\">io.netty.handler.ssl.SslUtils::isTLSv13SupportedByJDK</code> to always return <code class=\"notranslate\">false</code></li>\n<li>Expected behaviour is that <code class=\"notranslate\">'Do not use TLSv1.3' before</code> should also print <code class=\"notranslate\">true</code>.</li>\n</ul>\n<h3 dir=\"auto\">Netty version</h3>\n<ul dir=\"auto\">\n<li>io.netty:netty-handler: <code class=\"notranslate\">4.1.84.Final</code></li>\n<li>io.netty:netty-tcnative-boringssl-static: <code class=\"notranslate\">2.0.54.Final</code></li>\n</ul>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java version &quot;1.8.0_172&quot;\nJava(TM) SE Runtime Environment (build 1.8.0_172-b11)\nJava HotSpot(TM) 64-Bit Server VM (build 25.172-b11, mixed mode)\"><pre class=\"notranslate\"><code class=\"notranslate\">java version \"1.8.0_172\"\nJava(TM) SE Runtime Environment (build 1.8.0_172-b11)\nJava HotSpot(TM) 64-Bit Server VM (build 25.172-b11, mixed mode)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Linux hostname 4.18.0-372.9.1.el8.x86_64 #1 SMP Fri Apr 15 22:12:19 EDT 2022 x86_64 x86_64 x86_64 GNU/Linux\"><pre class=\"notranslate\"><code class=\"notranslate\">Linux hostname 4.18.0-372.9.1.el8.x86_64 #1 SMP Fri Apr 15 22:12:19 EDT 2022 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre></div>\n<h3 dir=\"auto\">Workarounds</h3>\n<p dir=\"auto\">If either of the following things is done, the issue does not happen:</p>\n<ul dir=\"auto\">\n<li>Using a newer jdk that has support for TLSv1.3</li>\n<li>Using <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1369876953\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/12797\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/12797/hovercard\" href=\"https://github.com/netty/netty/pull/12797\">#12797</a> and setting <code class=\"notranslate\">-Djdk.tls.server.protocols=TLSv1.2</code></li>\n<li>Explicitly setting the list of protocols via <code class=\"notranslate\">SslContextBuilder::protocols</code> or <code class=\"notranslate\">ReferenceCountedOpenSslEngine::setEnabledProtocols</code></li>\n<li>Calling <code class=\"notranslate\">sslEngine.setEnabledProtocols(sslEngine.getEnabledProtocols())</code> as indicated in above reproducer-code</li>\n</ul>\n<p dir=\"auto\">Now, using such an old jdk might be a niche use-case and possibly something that is not supported. But the fact that calling <code class=\"notranslate\">e.setEnabledProtocols(e.getEnabledProtocols())</code> has an effect on the options-bits seems unexpected.</p>",
                "resourcePath": "/netty/netty/issues/12968",
                "createdAt": "2022-11-07T07:15:16Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Return correct value from SSLSession.getPacketSize() when using nativ\u2026",
        "url": "https://github.com/netty/netty/pull/13095",
        "resourcePath": "/netty/netty/pull/13095",
        "createdAt": "2023-01-04T15:44:50Z",
        "number": 13095,
        "mergeCommit": {
          "oid": "e530cd610d17cdaaca7f3adf5e7c8d224571e89c",
          "message": " Return correct value from SSLSession.getPacketSize() when using native SSL implementation (#13095)\n\n\r\nMotivation:\r\n\r\nWe didnt return the maximum size of SSL packet and tried to calculate it. This didnt work as SSL_max_seal_overhead(...) can only be used to calculate the maximum overhead for when encrypting ourself (and not the remote peer).\r\nBecause of this we sometimes returned a smaller number then what is possible. This had the affect that when users did use getPacketSize() to size the ByteBuffer we could end up in a situation that would never produce a bug enough ByteBuffer and so never finish the handshake.\r\n\r\nThis issue only accoured when users use the SSLEngine directly. When using our SslHandler we were not affected by this as we use a different approach there.\r\n\r\nModifications:\r\n\r\n- Upgrade netty-tcnative to be able to reuse the the defined constant\r\n- Add unit test that did loop forever before this change\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13073",
          "commitUrl": "https://github.com/netty/netty/commit/e530cd610d17cdaaca7f3adf5e7c8d224571e89c",
          "parents": {
            "nodes": [
              {
                "oid": "fdfbb0441d49f16068903fa85b623790cce889ff",
                "message": "Remove Redundant bitwise operations (#13094)\n\nMotivation:\r\n\r\ninverseMask is redundant since we will rightShift it with exact same amount\r\n\r\nModifications:\r\n\r\nremoved redundant operations\r\n\r\nResult:\r\n\r\nclean up"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "bom/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/SSLEngineTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85GozI32gAoYTRjYjdjMDMwYjQxODIzM2ZmMjU5MGRkNTUzOTRjMWZiZjRiYWUxOA",
                "url": "https://github.com/netty/netty/pull/13095/commits/a4cb7c030b418233ff2590dd55394c1fbf4bae18"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13073,
                "url": "https://github.com/netty/netty/issues/13073",
                "title": "OpenSslEngine fails the TLSv1.3 handshake in some configurations",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">TLS handshake finishes successfully.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">OpenSSL / TLS 1.3 handshake fails to complete when mutual authentication is enabled, and the default <code class=\"notranslate\">TrustManagerFactory</code> is used.</p>\n<p dir=\"auto\">With this configuration client's <code class=\"notranslate\">SSLEngine</code> reports <code class=\"notranslate\">BUFFER_OVERFLOW</code>for the <code class=\"notranslate\">unwrap()</code> operation and<br>\nthe value of <code class=\"notranslate\">SSLSession.getApllicationBufferSize()</code> got increased.</p>\n<p dir=\"auto\">Even if we try to increase the application buffer size, there is a subsequent issue with the <code class=\"notranslate\">BUFFER_UNDERFLOW</code> for the <code class=\"notranslate\">wrap()</code> operation.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\"><a href=\"https://github.com/kwart/test-app/tree/netty-tcnative-default-truststore-issue\">https://github.com/kwart/test-app/tree/netty-tcnative-default-truststore-issue</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        &lt;dependency&gt;\n            &lt;groupId&gt;io.netty&lt;/groupId&gt;\n            &lt;artifactId&gt;netty-tcnative-boringssl-static&lt;/artifactId&gt;\n            &lt;version&gt;2.0.54.Final&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;io.netty&lt;/groupId&gt;\n            &lt;artifactId&gt;netty-handler&lt;/artifactId&gt;\n            &lt;version&gt;4.1.84.Final&lt;/version&gt;\n        &lt;/dependency&gt;\"><pre class=\"notranslate\">        &lt;<span class=\"pl-ent\">dependency</span>&gt;\n            &lt;<span class=\"pl-ent\">groupId</span>&gt;io.netty&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n            &lt;<span class=\"pl-ent\">artifactId</span>&gt;netty-tcnative-boringssl-static&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n            &lt;<span class=\"pl-ent\">version</span>&gt;2.0.54.Final&lt;/<span class=\"pl-ent\">version</span>&gt;\n        &lt;/<span class=\"pl-ent\">dependency</span>&gt;\n        &lt;<span class=\"pl-ent\">dependency</span>&gt;\n            &lt;<span class=\"pl-ent\">groupId</span>&gt;io.netty&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n            &lt;<span class=\"pl-ent\">artifactId</span>&gt;netty-handler&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n            &lt;<span class=\"pl-ent\">version</span>&gt;4.1.84.Final&lt;/<span class=\"pl-ent\">version</span>&gt;\n        &lt;/<span class=\"pl-ent\">dependency</span>&gt;</pre></div>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Tested with Java 8 and 11 (Azul Zulu).</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Ubuntu 22.04, 5.15.0-56-generic, x86_64</p>",
                "resourcePath": "/netty/netty/issues/13073",
                "createdAt": "2022-12-22T11:11:52Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add `StacklessSSLHandshakeException` for `ClosedChannelException`",
        "url": "https://github.com/netty/netty/pull/13099",
        "resourcePath": "/netty/netty/pull/13099",
        "createdAt": "2023-01-05T19:39:01Z",
        "number": 13099,
        "mergeCommit": {
          "oid": "52db529c9daf1017422e3c4a8810da09e66d14a6",
          "message": "Add `StacklessSSLHandshakeException` for `ClosedChannelException` (#13099)\n\nMotivation:\r\nWhen a channel is closed during the SSL handshake then `java.nio.channels.ClosedChannelException` is thrown. This is correct when we see it from a low-level transport perspective but from a high-level, this error is not detailed enough to debug. And when we log `ClosedChannelException`, we get this line: `java.nio.channels.ClosedChannelException: null` in the stack trace. \r\n\r\nModification:\r\nTo combat this, we should throw `StacklessSSLHandshakeException` with the message `\"Connection closed while SSL/TLS handshake was in progress\"` as suppressed with`ClosedChannelException`. This will explicitly declare that the handshake failed due to connection closure.\r\n\r\nResult:\r\nFixes #12000\r\n\r\nCo-authored-by: Idel Pivnitskiy <idel.pivnitskiy@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/52db529c9daf1017422e3c4a8810da09e66d14a6",
          "parents": {
            "nodes": [
              {
                "oid": "f8977fd8dbda1de76bce886c0042785e453eabed",
                "message": "Add SslProvider.isOptionSupported(...) (#13145)\n\nMotivation:\r\n\r\nSometimes it is useful to understand if an SslContextOption is supported or not by a given SslProvider.\r\n\r\nModifications:\r\n\r\nAdd new static method which allows to check if an option is supported or not\r\n\r\nResult:\r\n\r\nEasier to reason about if an option is supported or not"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslHandler.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/main/java/io/netty/handler/ssl/StacklessSSLHandshakeException.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/SslHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85GwCe-2gAoNjIyMzUyNmUxYjhiNmNlZDljOTlhZDcyNDY3YmE4ZWJlNWQyOTVhZQ",
                "url": "https://github.com/netty/netty/pull/13099/commits/6223526e1b8b6ced9c99ad72467ba8ebe5d295ae"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12000,
                "url": "https://github.com/netty/netty/issues/12000",
                "title": "exception when  close channel before SSL ",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">close channel no exception</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">2022/01/13 17:56:07.897 [] [reactor-http-epoll-2] [WARN] i.n.h.s.ApplicationProtocolNegotiationHandler - [id: 0xa03cf599, L:/189.11.24.119:8443 ! R:/189.11.24.38:39277] Failed to select the application-level protocol:<br>\njava.nio.channels.ClosedChannelException: null<br>\nat io.netty.handler.ssl.SslHandler.channelInactive(SslHandler.java:1063) [netty-handler-4.1.72.Final.jar!/:4.1.72.Final]<br>\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262) [netty-transport-4.1.72.Final.jar!/:4.1.72.Final]<br>\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248) [netty-transport-4.1.72.Final.jar!/:4.1.72.Final]<br>\nat io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:241) [netty-transport-4.1.72.Final.jar!/:4.1.72.Final]<br>\nat io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405) [netty-transport-4.1.72.Final.jar!/:4.1.72.Final]<br>\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:262) [netty-transport-4.1.72.Final.jar!/:4.1.72.Final]<br>\nat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:248) [netty-transport-4.1.72.Final.jar!/:4.1.72.Final]<br>\nat io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901) [netty-transport-4.1.72.Final.jar!/:4.1.72.Final]<br>\nat io.netty.channel.AbstractChannel$AbstractUnsafe$8.run(AbstractChannel.java:831)</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">server is 189.11.24.119 8443<br>\nclient is 189.11.24.38<br>\nThe tcpdump packet capture result is as follows:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/13596975/149335475-2972a124-bafa-482a-90f1-4cc94f4a8710.png\"><img src=\"https://user-images.githubusercontent.com/13596975/149335475-2972a124-bafa-482a-90f1-4cc94f4a8710.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">NA</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.72.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk 11.0.8</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">linux x86</p>",
                "resourcePath": "/netty/netty/issues/12000",
                "createdAt": "2022-01-13T13:06:59Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Modify CloseWebSocketFrame#statusCode() to change the fetch c\u2026",
        "url": "https://github.com/netty/netty/pull/13114",
        "resourcePath": "/netty/netty/pull/13114",
        "createdAt": "2023-01-10T14:15:52Z",
        "number": 13114,
        "mergeCommit": {
          "oid": "c769fd8c2c2865d5738c225a00c72535a996969d",
          "message": "Modify changed CloseWebSocketFrame#statusCode() to change the fetch code to unsigned (#13114)\n\nMotivation:\r\n\r\nAccording to the websocket protocol description, change the get code method in the CloseWebSocketFrame to unsigned.\r\n\r\nModification:\r\n\r\nModify changed CloseWebSocketFrame#statusCode() to change the fetch code to unsigned\r\n\r\nResult:\r\n\r\nFixes #13113. \r\n\r\nCo-authored-by: jinying.zhang <jinying.zhang@okg.com>",
          "commitUrl": "https://github.com/netty/netty/commit/c769fd8c2c2865d5738c225a00c72535a996969d",
          "parents": {
            "nodes": [
              {
                "oid": "1bb171fc2a9138a3764af6619c0ca900fe3bbb1b",
                "message": "Replace 'size > 0' check with '!empty' (#13121)\n\nMotivation:\r\nWe manually fetch the collection size and then check if the size is greater than zero or not to see if it's non-empty.\r\n\r\nModification:\r\nWe can use the inverted `Collection#isEmpty` method to do the exact same thing in a much clean way.\r\n\r\nResult:\r\nCleaner code"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/CloseWebSocketFrame.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/websocketx/CloseWebSocketFrameTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85HExoR2gAoOGM4YTZiN2FkY2NjZmRjMTU3ZGY3YzgxYjlkNjlkN2ZiOGZjMTI5Nw",
                "url": "https://github.com/netty/netty/pull/13114/commits/8c8a6b7adcccfdc157df7c81b9d69d7fb8fc1297"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13113,
                "url": "https://github.com/netty/netty/issues/13113",
                "title": "CloseWebSocketFrame statusCode() get unexpected results",
                "bodyHTML": "<p dir=\"auto\">Set the  CloseWebSocketFrame code to 60000, and the result obtained by statusCode() is negative;</p>\n<p dir=\"auto\">The WebSocket protocol states that Code is  a 2-byte unsigned integer (in network byte order)\uff0cBut netty acquisition is obtained by signs.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/11245691/211527112-5c0f2923-c6ba-4d29-9d4b-da5b228dcbdd.png\"><img src=\"https://user-images.githubusercontent.com/11245691/211527112-5c0f2923-c6ba-4d29-9d4b-da5b228dcbdd.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/11245691/211527879-19400bf7-f95c-4394-8301-8e3567245e63.png\"><img src=\"https://user-images.githubusercontent.com/11245691/211527879-19400bf7-f95c-4394-8301-8e3567245e63.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Here, getShort should be changed to getUnsignedShort.</p>\n<p dir=\"auto\">Minimal yet complete reproducer code (or URL to code)<br>\nNetty version<br>\n4.1.80</p>\n<p dir=\"auto\">JVM version (e.g. java -version)<br>\nopenjdk 1.8.0_272</p>\n<p dir=\"auto\">OS version (e.g. uname -a)<br>\nlinux 4.19.36 aarch64</p>",
                "resourcePath": "/netty/netty/issues/13113",
                "createdAt": "2023-01-10T10:32:32Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix FlowControlHandler's behaviour to pass read events when auto-reading is turned off",
        "url": "https://github.com/netty/netty/pull/13146",
        "resourcePath": "/netty/netty/pull/13146",
        "createdAt": "2023-01-23T21:03:04Z",
        "number": 13146,
        "mergeCommit": {
          "oid": "ae93d8c544387077fa831101b0c1737922f244f8",
          "message": "Fix FlowControlHandler's behaviour to pass read events when auto-reading is turned off (#13146)\n\nMotivation:\r\nCurrently, in FlowControlHandler read events are passed onto the pipeline in every case regardless of the auto-reading configuration of the channel.\r\n\r\nModification:\r\nThe read method in FlowControlHandler has been adjusted accordingly.\r\n\r\nResult:\r\nNot passing read events onto the pipeline (calling ctx.read() which results in reading from the client socket) when the queue is not empty and auto-reading is turned off for the channel.\r\n\r\nFixes #13104. \r\n\r\nCo-authored-by: Angelov <ivan.angelov01@sap.com>",
          "commitUrl": "https://github.com/netty/netty/commit/ae93d8c544387077fa831101b0c1737922f244f8",
          "parents": {
            "nodes": [
              {
                "oid": "6c40a21a2eb76064c1e195f4c08488609d6b52c0",
                "message": "Optionally depend on bctls-jdk15on (#13156)\n\nMotivation:\r\n\r\nThe fix for #13106 upgraded maven-bundle-plugin, which detects classes\r\npassed to Class.forName(String) and generates Import-Package\r\nrequirements.\r\n\r\nThis means Netty-4.1.87.Final's io.netty.handler now requires\r\norg.bouncycastle.jsse in OSGi environments.\r\n\r\nModifications:\r\n\r\nAdd an optional dependency on bctls-jdk15on.\r\n\r\nResult:\r\n\r\nMANIFEST.MF lists org.bouncycastle.jsse with ;resolution:=optional.\r\n\r\nSigned-off-by: Robert Varga <robert.varga@pantheon.tech>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/flow/FlowControlHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/flow/FlowControlHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85IXWl02gAoZDE4MTJhNzc0YzExYmRkNzZkZDc5MzI5Njg1MTNhNDhkNTE2MDRjOQ",
                "url": "https://github.com/netty/netty/pull/13146/commits/d1812a774c11bdd76dd7932968513a48d51604c9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13104,
                "url": "https://github.com/netty/netty/issues/13104",
                "title": "FlowControlHandler is passing read events when auto-reading is turned off",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Not passing read events onto the pipeline (calling ctx.read() which results in reading from the client socket) when the queue is not empty and auto-reading is turned off for the channel. I would suggest that the expected behavior should look something like the following piece of code:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (dequeue(ctx, 1) == 0) {\n\tshouldConsume = true;\n\tctx.read();\n} else if (ctx.channel().config().isAutoRead()) {\n\tctx.read();\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">if (dequeue(ctx, 1) == 0) {\n\tshouldConsume = true;\n\tctx.read();\n} else if (ctx.channel().config().isAutoRead()) {\n\tctx.read();\n}\n</code></pre></div>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Read events are passed onto the pipeline in every case regardless of the auto-reading configuration of the channel.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ol dir=\"auto\">\n<li>Let's suppose we have a channel with a FlowControlHandler in its pipeline.</li>\n<li>Turn auto-reading off for the channel.</li>\n<li>Manually call ctx.read()</li>\n<li>For every ctx.read() call, the FlowControlHandler's read method will pass the read event onto the pipeline which will result in reading from the client socket.</li>\n<li>If the messages, which we read are not processed fast enough according to our custom logic, all of this can lead to a significant amount of data being stored in memory which leads to out-of-memory errors.</li>\n</ol>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">n/a</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.85.Final and above</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">any</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">any</p>",
                "resourcePath": "/netty/netty/issues/13104",
                "createdAt": "2023-01-09T08:19:53Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add necessary native-image configuration files for epoll",
        "url": "https://github.com/netty/netty/pull/13158",
        "resourcePath": "/netty/netty/pull/13158",
        "createdAt": "2023-01-26T18:53:30Z",
        "number": 13158,
        "mergeCommit": {
          "oid": "79b347234af27f34344fecc2b5651295f3cd3e7c",
          "message": "Add necessary native-image configuration files for epoll (#13158)\n\nMotivation:\r\n\r\nEpoll currently doesn't work out of the box on native-image without passing in additional flags and metadata.\r\n\r\nModification:\r\n\r\nThis PR adds the necessary metadata so that epoll works out of the box with native-image. The metadata is conditional - it should only be included in an image if epoll is actually used.\r\n\r\nResult:\r\n\r\nFixes #10616",
          "commitUrl": "https://github.com/netty/netty/commit/79b347234af27f34344fecc2b5651295f3cd3e7c",
          "parents": {
            "nodes": [
              {
                "oid": "0ee487edbccaf6c1c64d92b84dc60a3abb5ab6af",
                "message": "Update multiple actions to v3 (#13164)\n\nMotivation:\r\nActions such as `checkout`, `cache`, `download-artifact`, and `upload-artifact` have a major upgrade available which is v3. We should consider upgrading to them for extended functionalities and support.\r\n\r\nModification:\r\nUpgraded all of those above-mentioned actions to v3.\r\n\r\nResult:\r\nLatest actions version"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-classes-epoll/src/main/resources/META-INF/native-image/io.netty/netty-transport-classes-epoll/jni-config.json"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-classes-epoll/src/main/resources/META-INF/native-image/io.netty/netty-transport-classes-epoll/native-image.properties"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-classes-epoll/src/main/resources/META-INF/native-image/io.netty/netty-transport-classes-epoll/reflect-config.json"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-classes-epoll/src/main/resources/META-INF/native-image/io.netty/netty-transport-classes-epoll/resource-config.json"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85Ina2x2gAoYjgwM2YyMTU5ODE2ZjE5YWIyZGI0MjE3MTlhYzU4OThjNjg2NDIwYQ",
                "url": "https://github.com/netty/netty/pull/13158/commits/b803f2159816f19ab2db421719ac5898c686420a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 10616,
                "url": "https://github.com/netty/netty/issues/10616",
                "title": "native-image compilation of epoll transport fails",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">My small repro compiles as a native image and works as expected if I use Nio* family of transports. My expectation was that switching to epoll transport would similarly work.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">If I switch to epoll (linux-x86_64) I get a compilation error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Error: Classes that should be initialized at run time got initialized during image building:\n io.netty.util.AbstractReferenceCounted the class was requested to be initialized at build time (from the command line). io.netty.util.AbstractReferenceCounted has been initialized without the native-image initialization instrumentation and the stack trace can't be tracked. Try avoiding to initialize the class that caused initialization of io.netty.util.AbstractReferenceCounted\n\ncom.oracle.svm.core.util.UserError$UserException: Classes that should be initialized at run time got initialized during image building:\n io.netty.util.AbstractReferenceCounted the class was requested to be initialized at build time (from the command line). io.netty.util.AbstractReferenceCounted has been initialized without the native-image initialization instrumentation and the stack trace can't be tracked. Try avoiding to initialize the class that caused initialization of io.netty.util.AbstractReferenceCounted\n\n\tat com.oracle.svm.core.util.UserError.abort(UserError.java:65)\n\tat com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.checkDelayedInitialization(ConfigurableClassInitialization.java:510)\n\tat com.oracle.svm.hosted.classinitialization.ClassInitializationFeature.duringAnalysis(ClassInitializationFeature.java:187)\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$8(NativeImageGenerator.java:710)\n\tat com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:63)\n\tat com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:710)\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:530)\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:445)\n\tat java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1407)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\"><pre class=\"notranslate\"><code class=\"notranslate\">Error: Classes that should be initialized at run time got initialized during image building:\n io.netty.util.AbstractReferenceCounted the class was requested to be initialized at build time (from the command line). io.netty.util.AbstractReferenceCounted has been initialized without the native-image initialization instrumentation and the stack trace can't be tracked. Try avoiding to initialize the class that caused initialization of io.netty.util.AbstractReferenceCounted\n\ncom.oracle.svm.core.util.UserError$UserException: Classes that should be initialized at run time got initialized during image building:\n io.netty.util.AbstractReferenceCounted the class was requested to be initialized at build time (from the command line). io.netty.util.AbstractReferenceCounted has been initialized without the native-image initialization instrumentation and the stack trace can't be tracked. Try avoiding to initialize the class that caused initialization of io.netty.util.AbstractReferenceCounted\n\n\tat com.oracle.svm.core.util.UserError.abort(UserError.java:65)\n\tat com.oracle.svm.hosted.classinitialization.ConfigurableClassInitialization.checkDelayedInitialization(ConfigurableClassInitialization.java:510)\n\tat com.oracle.svm.hosted.classinitialization.ClassInitializationFeature.duringAnalysis(ClassInitializationFeature.java:187)\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$runPointsToAnalysis$8(NativeImageGenerator.java:710)\n\tat com.oracle.svm.hosted.FeatureHandler.forEachFeature(FeatureHandler.java:63)\n\tat com.oracle.svm.hosted.NativeImageGenerator.runPointsToAnalysis(NativeImageGenerator.java:710)\n\tat com.oracle.svm.hosted.NativeImageGenerator.doRun(NativeImageGenerator.java:530)\n\tat com.oracle.svm.hosted.NativeImageGenerator.lambda$run$0(NativeImageGenerator.java:445)\n\tat java.base/java.util.concurrent.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1407)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n</code></pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Here's a repro: <a href=\"https://github.com/perezd/netty-epoll-native-repro\">https://github.com/perezd/netty-epoll-native-repro</a></p>\n<p dir=\"auto\">w/ Bazel 3.5.0 installed, run this command from the root of the project:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"bazel run :main-native\"><pre class=\"notranslate\"><code class=\"notranslate\">bazel run :main-native\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.52.Final (linux-x86_64)</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">java -version<br>\nopenjdk version \"11.0.8\" 2020-07-14<br>\nOpenJDK Runtime Environment (build 11.0.8+10-post-Ubuntu-0ubuntu120.04)<br>\nOpenJDK 64-Bit Server VM (build 11.0.8+10-post-Ubuntu-0ubuntu120.04, mixed mode, sharing)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux desktop 5.4.0-48-generic <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2218184\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/52\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/52/hovercard\" href=\"https://github.com/netty/netty/pull/52\">#52</a>-Ubuntu SMP Thu Sep 10 10:58:49 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux</p>\n<p dir=\"auto\">I've searched around and attempted various workarounds but nothing seems to work.</p>",
                "resourcePath": "/netty/netty/issues/10616",
                "createdAt": "2020-09-28T00:33:12Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "graal"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Search Domains and DNS Resolver on Windows (#13022)",
        "url": "https://github.com/netty/netty/pull/13163",
        "resourcePath": "/netty/netty/pull/13163",
        "createdAt": "2023-01-27T14:03:41Z",
        "number": 13163,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns-native-windows/src/main/c/src/netty_window_dns_native.c"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns-native-windows/src/main/java/io/netty/resolver/dns/windows/NetworkAdapter.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns-native-windows/src/main/java/io/netty/resolver/dns/windows/WindowsAdapterInfo.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns-native-windows/src/main/java/io/netty/resolver/dns/windows/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns-native-windows/src/test/java/io/netty/resolver/dns/windows/WindowsAdapterInfoTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsServerAddressStreamProviders.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/windows/WindowsResolverDnsServerAddressStreamProvider.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/windows/package-info.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85Irh0I2gAoOTQyNmUxNDI3NjQ5MjRkMjk0OGVmN2QzY2U0YTU4ZjVlZGEzNDBiZg",
                "url": "https://github.com/netty/netty/pull/13163/commits/9426e142764924d2948ef7d3ce4a58f5eda340bf"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12712,
                "url": "https://github.com/netty/netty/issues/12712",
                "title": "Hosts with DNS suffixes cannot be resolved in Windows 10 and Java 9+",
                "bodyHTML": "<p dir=\"auto\">I am using Spring WebClient based on netty and it cannot resolve hosts with DNS suffixes on Windows and Java 9+. I think this <a href=\"https://github.com/netty/netty/blob/9cd94547d0211c04b610878e5e267c8de2342b97/resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java#L189:L202\">hack</a> is responsible for such behaviour.</p>\n<p dir=\"auto\">Why is reflection used here? You can acquire instance of ResolverConfiguration via static method, no?</p>\n<p dir=\"auto\">Java 8 works fine though. I think issue is simillar to <a href=\"https://github.com/netty/netty/issues/11885\" data-hovercard-type=\"issue\" data-hovercard-url=\"/netty/netty/issues/11885/hovercard\">this</a>.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Hosts with dns suffixes resolves succesfully</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">UnknownHostException</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.net.UnknownHostException: failed to resolve 'my-host' after 8 queries \n\tat io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1046)\n\tat io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:999)\n\tat io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:417)\n\tat io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:628)\n\tat io.netty.resolver.dns.DnsResolveContext.access$400(DnsResolveContext.java:65)\n\tat io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:461)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)\n\tat io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)\n\tat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)\n\tat io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:201)\n\tat io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:193)\n\tat io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1301)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n\tat io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: java.net.UnknownHostException: failed to resolve 'my-host' after 8 queries \n\tat io.netty.resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1046)\n\tat io.netty.resolver.dns.DnsResolveContext.tryToFinishResolve(DnsResolveContext.java:999)\n\tat io.netty.resolver.dns.DnsResolveContext.query(DnsResolveContext.java:417)\n\tat io.netty.resolver.dns.DnsResolveContext.onResponse(DnsResolveContext.java:628)\n\tat io.netty.resolver.dns.DnsResolveContext.access$400(DnsResolveContext.java:65)\n\tat io.netty.resolver.dns.DnsResolveContext$2.operationComplete(DnsResolveContext.java:461)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:578)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:571)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:550)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:491)\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:616)\n\tat io.netty.util.concurrent.DefaultPromise.setSuccess0(DefaultPromise.java:605)\n\tat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)\n\tat io.netty.resolver.dns.DnsQueryContext.trySuccess(DnsQueryContext.java:201)\n\tat io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:193)\n\tat io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:1301)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\n\tat io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:97)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:719)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:655)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:581)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:986)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Configure DNS suffixes on Windows. This can be achieved like this: edit SearchList property at registry path HKLM\\SYSTEM\\CurrentControlSet\\services\\Tcpip\\Parameters.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.77.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openjdk version &quot;17.0.2&quot; 2022-01-18\nOpenJDK Runtime Environment (build 17.0.2+8-86)\nOpenJDK 64-Bit Server VM (build 17.0.2+8-86, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">openjdk version \"17.0.2\" 2022-01-18\nOpenJDK Runtime Environment (build 17.0.2+8-86)\nOpenJDK 64-Bit Server VM (build 17.0.2+8-86, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows 10</p>",
                "resourcePath": "/netty/netty/issues/12712",
                "createdAt": "2022-08-18T07:45:39Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make releasing objects back to Recycler faster",
        "url": "https://github.com/netty/netty/pull/13174",
        "resourcePath": "/netty/netty/pull/13174",
        "createdAt": "2023-01-31T18:30:37Z",
        "number": 13174,
        "mergeCommit": {
          "oid": "8a8337eceb34ef4ff18c37b73f8c4d2bb1eb85ef",
          "message": "Make releasing objects back to Recycler faster (#13174)\n\n\r\nMotivation:\r\nThe Recycler implementation was changed in https://github.com/netty/netty/pull/11858 to rely on an MPSC queue implementation for delivering released objects back to their originating thread local pool.\r\nTypically, the release will often happen from the same thread that claimed the object, so the overhead of having a thread-safe release goes to waste.\r\n\r\nModification:\r\nWe add an unsynchronized ArrayDeque for batching claims out of the `pooledHandles`.\r\nThis amortises `claim` calls.\r\n\r\nWe then also re-introduce the concept of an owner thread (but by default only if said thread is a FastThreadLocalThread), and release directly into the claim `batch` if the release is from the owner thread.\r\n\r\nResult:\r\nThe `RecyclerBenchmark.recyclerGetAndRecycle` benchmark sees a 27.4% improvement, and the `RecyclerBenchmark.producerConsumer` benchmark sees a 22.5% improvement.\r\n\r\nFixes https://github.com/netty/netty/issues/13153\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/8a8337eceb34ef4ff18c37b73f8c4d2bb1eb85ef",
          "parents": {
            "nodes": [
              {
                "oid": "5ee9da5820f79a9ce5fd1c20cf85f72694a080d8",
                "message": "Allow PcapWriteHandler instances to write to the same OutputStream (#13118)\n\nMotivation:\r\nCurrently, PcapWriteHandler expects a dedicated OutputStream, and cannot support multiple streams written to a single PCAP file. These modifications are intended to support sharing the OutputStream between multiple concurrent PcapWriteHandler instances.\r\n\r\nModification:\r\nAdded a \"shareOutputStream\" flag to PcapWriteHandler (and PcapWriter) to enable synchronization on the OutputStream in order to prevent interleaved writes. Also, provide a method to write the PCAP Global Header to the OutputStream.\r\n\r\nResult:\r\nAllows multiple channels to write to the same PCAP file.\r\n\r\nThis PR adds further improvement done in PR #12337 and supersedes it.\r\nOriginal Author: @RoganDawes"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/Recycler.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "common/src/test/java/io/netty/util/RecyclerFastThreadLocalTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/RecyclerTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "common/src/test/java/io/netty/util/RunInFastThreadLocalThreadExtension.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85I8K2W2gAoZjFmMTU5N2ZmNGMzNjBmNzlkZjMxZDAyZTA1ZGU2OTI2NDgzOGVhYw",
                "url": "https://github.com/netty/netty/pull/13174/commits/f1f1597ff4c360f79df31d02e05de69264838eac"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13153,
                "url": "https://github.com/netty/netty/issues/13153",
                "title": "Makes Buffer's release faster",
                "bodyHTML": "<p dir=\"auto\">After the changes in the <code class=\"notranslate\">Recycler</code>, <code class=\"notranslate\">Recycler$LocalPool.release</code> often appear in heavy load scenarios even for cases where the buffer is not escaping the event loop it has reused it.</p>\n<p dir=\"auto\">The orginal <code class=\"notranslate\">Recycler</code> implementation was very complex and with some wider effects on GC, hence I still think it was the right move, but according to the profiling data the JCTools offering (based on a atomic CAS) is still too much costy.<br>\nI suggest to record some information re the event loop where the allocation first happen and use a (event loop)-local stack/queue where short-circuit the buffer recycling.</p>\n<p dir=\"auto\">In short:</p>\n<ul dir=\"auto\">\n<li>allocation happen from event loop X: always use the event-loop-local pool first. If empty, use the \"shared\" one using the JCTools q (using relaxed poll, pretty cheap)</li>\n<li>if release happen on the same originating event loop, there's no need to use any atomic construct and can release it to the event-loop-local pool (if not full? I'm open to suggestions here) or fall-back to the shared one, based on some policy.</li>\n</ul>\n<p dir=\"auto\">It's not nice to have 2 separate structures, but the benefit from common usages should be significant</p>",
                "resourcePath": "/netty/netty/issues/13153",
                "createdAt": "2023-01-26T05:04:14Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "improvement"
                      }
                    },
                    {
                      "node": {
                        "name": "discussion"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Correctly keep track of validExtensions per request / response",
        "url": "https://github.com/netty/netty/pull/13180",
        "resourcePath": "/netty/netty/pull/13180",
        "createdAt": "2023-02-02T10:35:15Z",
        "number": 13180,
        "mergeCommit": {
          "oid": "f761ab5620335eb4bdf5c3fc15f7cd66e1fdd342",
          "message": "Correctly keep track of validExtensions per request / response (#13180)\n\n\r\nMotivation:\r\n\r\nAt the moment we not correctly reset state between different request / response pairs. This can lead to situations when invalid extensions are used.\r\n\r\nModifications:\r\n\r\n- Use a Queue to keep track of extensions per request / response\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13176",
          "commitUrl": "https://github.com/netty/netty/commit/f761ab5620335eb4bdf5c3fc15f7cd66e1fdd342",
          "parents": {
            "nodes": [
              {
                "oid": "fd9694e1b3945056ab39704de5a06d521c7d5800",
                "message": "Remove git checkout HEAD^2 from CodeQL GHA workflow (#13189)\n\nMotivation:\r\n\r\nThe CodeQL workflow is reporting a warning\r\n\r\n`\"1 issue was detected with this workflow: git checkout HEAD^2 is no longer necessary. Please remove this step as Code Scanning recommends analyzing the merge commit for best results.\"`\r\n\r\nModification:\r\n\r\nRemoved the unnecessary part following the instruction from [link](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow#warning-git-checkout-head2-is-no-longer-necessary)\r\n\r\nResult:\r\n\r\nNo more warnings."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/extensions/WebSocketServerExtensionHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/websocketx/extensions/WebSocketServerExtensionHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85JGHsT2gAoN2Y2ZjBkZGU1YzBlMzE2MjM3NjQ2YWJmOWFiNTNlYjRhZWZmNTQ3MQ",
                "url": "https://github.com/netty/netty/pull/13180/commits/7f6f0dde5c0e316237646abf9ab53eb4aeff5471"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13176,
                "url": "https://github.com/netty/netty/issues/13176",
                "title": "websockets.exceptions.NegotiationError: Unsupported extension: name = permessage-deflate, params = []",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">validExtensions</code>List inside <code class=\"notranslate\">io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler</code>  should be cleand after every request, otherwise it is leading to <code class=\"notranslate\">Unsupported extension: name = premessage-deflate</code></p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">While I am sending requests to the WebSocket an exception was occurred by some requests:<br>\n<code class=\"notranslate\">Unsupported extension: name = premessage-deflate</code><br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/124066624/216022207-d4debff5-1605-49c2-92ef-84782388d9c7.png\"><img src=\"https://user-images.githubusercontent.com/124066624/216022207-d4debff5-1605-49c2-92ef-84782388d9c7.png\" alt=\"image\" style=\"max-width: 100%;\"></a><br>\nAfter debugging sessions it was noticed that the <code class=\"notranslate\">validExtensions</code>List inside the method  <code class=\"notranslate\">channelRead </code>in <code class=\"notranslate\">io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler</code> had already an extension: <code class=\"notranslate\">premessage-deflate</code> inside of it <br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/124066624/216064150-a717b462-2790-4b4f-849f-deaa650c375e.png\"><img src=\"https://user-images.githubusercontent.com/124066624/216064150-a717b462-2790-4b4f-849f-deaa650c375e.png\" alt=\"image\" style=\"max-width: 100%;\"></a><br>\nin and the line 92 the extension was added again to the  validExtensions, which later lead to an exception in the method <code class=\"notranslate\">checkDuplicateName </code>inside <code class=\"notranslate\">io.netty.channel.DefaultChannelPipeline</code>.<br>\nSo as a workaround I emptied the list validExtensions everytime the method chaneelRead was called and it worked fine for me, so I am asking here if I can use this workaround for now, and if some can support me with the case so we can find a solution together.<br>\nThe Workaround:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/124066624/216023280-9ff576f5-32e5-4313-9350-f64245e97fdd.png\"><img src=\"https://user-images.githubusercontent.com/124066624/216023280-9ff576f5-32e5-4313-9350-f64245e97fdd.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">the fastest way to reproduce it for me was to make some WebSocket connection requests like 3-5 with correct credentials and then one time with incorrect credentials. repeating that like 2-3 times will lead to the exception.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.77</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Java 11</p>\n<h3 dir=\"auto\">Stacktrace</h3>\n<p dir=\"auto\">\"message\": \"An exception was thrown by io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler$1.operationComplete()\",<br>\n\"level\": \"WARN\",<br>\n\"loggerName\": \"io.netty.util.concurrent.DefaultPromise\",<br>\n\"thrown\": {<br>\n\"name\": \"java.lang.IllegalArgumentException\",<br>\n\"message\": \"Duplicate handler name: io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateDecoder\",<br>\n\"localizedMessage\": \"Duplicate handler name: io.netty.handler.codec.http.websocketx.extensions.compression.PerMessageDeflateDecoder\",<br>\n\"stackTrace\": [<br>\n{<br>\n\"class\": \"io.netty.channel.DefaultChannelPipeline\",<br>\n\"method\": \"checkDuplicateName\",<br>\n\"file\": \"DefaultChannelPipeline.java\",<br>\n\"line\": 1055<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.DefaultChannelPipeline\",<br>\n\"method\": \"filterName\",<br>\n\"file\": \"DefaultChannelPipeline.java\",<br>\n\"line\": 284<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.DefaultChannelPipeline\",<br>\n\"method\": \"addAfter\",<br>\n\"file\": \"DefaultChannelPipeline.java\",<br>\n\"line\": 301<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.DefaultChannelPipeline\",<br>\n\"method\": \"addAfter\",<br>\n\"file\": \"DefaultChannelPipeline.java\",<br>\n\"line\": 290<br>\n},<br>\n{<br>\n\"class\": \"io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler$1\",<br>\n\"method\": \"operationComplete\",<br>\n\"file\": \"WebSocketServerExtensionHandler.java\",<br>\n\"line\": 142<br>\n},<br>\n{<br>\n\"class\": \"io.netty.handler.codec.http.websocketx.extensions.WebSocketServerExtensionHandler$1\",<br>\n\"method\": \"operationComplete\",<br>\n\"file\": \"WebSocketServerExtensionHandler.java\",<br>\n\"line\": 133<br>\n},<br>\n{<br>\n\"class\": \"io.netty.util.concurrent.DefaultPromise\",<br>\n\"method\": \"notifyListener0\",<br>\n\"file\": \"DefaultPromise.java\",<br>\n\"line\": 578<br>\n},<br>\n{<br>\n\"class\": \"io.netty.util.concurrent.DefaultPromise\",<br>\n\"method\": \"notifyListeners0\",<br>\n\"file\": \"DefaultPromise.java\",<br>\n\"line\": 571<br>\n},<br>\n{<br>\n\"class\": \"io.netty.util.concurrent.DefaultPromise\",<br>\n\"method\": \"notifyListenersNow\",<br>\n\"file\": \"DefaultPromise.java\",<br>\n\"line\": 550<br>\n},<br>\n{<br>\n\"class\": \"io.netty.util.concurrent.DefaultPromise\",<br>\n\"method\": \"notifyListeners\",<br>\n\"file\": \"DefaultPromise.java\",<br>\n\"line\": 491<br>\n},<br>\n{<br>\n\"class\": \"io.netty.util.concurrent.DefaultPromise\",<br>\n\"method\": \"setValue0\",<br>\n\"file\": \"DefaultPromise.java\",<br>\n\"line\": 616<br>\n},<br>\n{<br>\n\"class\": \"io.netty.util.concurrent.DefaultPromise\",<br>\n\"method\": \"setSuccess0\",<br>\n\"file\": \"DefaultPromise.java\",<br>\n\"line\": 605<br>\n},<br>\n{<br>\n\"class\": \"io.netty.util.concurrent.DefaultPromise\",<br>\n\"method\": \"trySuccess\",<br>\n\"file\": \"DefaultPromise.java\",<br>\n\"line\": 104<br>\n},<br>\n{<br>\n\"class\": \"io.netty.util.internal.PromiseNotificationUtil\",<br>\n\"method\": \"trySuccess\",<br>\n\"file\": \"PromiseNotificationUtil.java\",<br>\n\"line\": 48<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.ChannelOutboundBuffer\",<br>\n\"method\": \"safeSuccess\",<br>\n\"file\": \"ChannelOutboundBuffer.java\",<br>\n\"line\": 717<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.ChannelOutboundBuffer\",<br>\n\"method\": \"remove\",<br>\n\"file\": \"ChannelOutboundBuffer.java\",<br>\n\"line\": 272<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.ChannelOutboundBuffer\",<br>\n\"method\": \"removeBytes\",<br>\n\"file\": \"ChannelOutboundBuffer.java\",<br>\n\"line\": 352<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.socket.nio.NioSocketChannel\",<br>\n\"method\": \"doWrite\",<br>\n\"file\": \"NioSocketChannel.java\",<br>\n\"line\": 414<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.AbstractChannel$AbstractUnsafe\",<br>\n\"method\": \"flush0\",<br>\n\"file\": \"AbstractChannel.java\",<br>\n\"line\": 949<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe\",<br>\n\"method\": \"flush0\",<br>\n\"file\": \"AbstractNioChannel.java\",<br>\n\"line\": 354<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.AbstractChannel$AbstractUnsafe\",<br>\n\"method\": \"flush\",<br>\n\"file\": \"AbstractChannel.java\",<br>\n\"line\": 913<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.DefaultChannelPipeline$HeadContext\",<br>\n\"method\": \"flush\",<br>\n\"file\": \"DefaultChannelPipeline.java\",<br>\n\"line\": 1372<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.AbstractChannelHandlerContext\",<br>\n\"method\": \"invokeFlush0\",<br>\n\"file\": \"AbstractChannelHandlerContext.java\",<br>\n\"line\": 750<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.AbstractChannelHandlerContext\",<br>\n\"method\": \"invokeFlush\",<br>\n\"file\": \"AbstractChannelHandlerContext.java\",<br>\n\"line\": 742<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.AbstractChannelHandlerContext\",<br>\n\"method\": \"flush\",<br>\n\"file\": \"AbstractChannelHandlerContext.java\",<br>\n\"line\": 728<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.ChannelDuplexHandler\",<br>\n\"method\": \"flush\",<br>\n\"file\": \"ChannelDuplexHandler.java\",<br>\n\"line\": 127<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.AbstractChannelHandlerContext\",<br>\n\"method\": \"invokeFlush0\",<br>\n\"file\": \"AbstractChannelHandlerContext.java\",<br>\n\"line\": 750<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.AbstractChannelHandlerContext\",<br>\n\"method\": \"invokeWriteAndFlush\",<br>\n\"file\": \"AbstractChannelHandlerContext.java\",<br>\n\"line\": 765<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.AbstractChannelHandlerContext\",<br>\n\"method\": \"write\",<br>\n\"file\": \"AbstractChannelHandlerContext.java\",<br>\n\"line\": 790<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.AbstractChannelHandlerContext\",<br>\n\"method\": \"writeAndFlush\",<br>\n\"file\": \"AbstractChannelHandlerContext.java\",<br>\n\"line\": 758<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.AbstractChannelHandlerContext\",<br>\n\"method\": \"writeAndFlush\",<br>\n\"file\": \"AbstractChannelHandlerContext.java\",<br>\n\"line\": 808<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.DefaultChannelPipeline\",<br>\n\"method\": \"writeAndFlush\",<br>\n\"file\": \"DefaultChannelPipeline.java\",<br>\n\"line\": 1025<br>\n},<br>\n{<br>\n\"class\": \"io.netty.channel.AbstractChannel\",<br>\n\"method\": \"writeAndFlush\",<br>\n\"file\": \"AbstractChannel.java\",<br>\n\"line\": 306<br>\n},<br>\n{<br>\n\"class\": \"io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker\",<br>\n\"method\": \"handshake\",<br>\n\"file\": \"WebSocketServerHandshaker.java\",<br>\n\"line\": 223<br>\n},<br>\n{<br>\n\"class\": \"io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker\",<br>\n\"method\": \"handshake\",<br>\n\"file\": \"WebSocketServerHandshaker.java\",<br>\n\"line\": 273<br>\n},<br>\n{<br>\n\"class\": \"io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker\",<br>\n\"method\": \"handshake\",<br>\n\"file\": \"WebSocketServerHandshaker.java\",<br>\n\"line\": 250<br>\n},<br>\n{<br>\n\"class\": \"io.vertx.core.http.impl.ServerWebSocketImpl\",<br>\n\"method\": \"doHandshake\",<br>\n\"file\": \"ServerWebSocketImpl.java\",<br>\n\"line\": 184<br>\n},<br>\n{<br>\n\"class\": \"io.vertx.core.http.impl.ServerWebSocketImpl\",<br>\n\"method\": \"handleHandshake\",<br>\n\"file\": \"ServerWebSocketImpl.java\",<br>\n\"line\": 172<br>\n},<br>\n{<br>\n\"class\": \"io.vertx.core.http.impl.ServerWebSocketImpl\",<br>\n\"method\": \"lambda$setHandshake$1\",<br>\n\"file\": \"ServerWebSocketImpl.java\",<br>\n\"line\": 232<br>\n},<br>\n{<br>\n\"class\": \"io.vertx.core.impl.FutureImpl\",<br>\n\"method\": \"dispatch\",<br>\n\"file\": \"FutureImpl.java\",<br>\n\"line\": 105<br>\n},<br>\n{<br>\n\"class\": \"io.vertx.core.impl.FutureImpl\",<br>\n\"method\": \"onComplete\",<br>\n\"file\": \"FutureImpl.java\",<br>\n\"line\": 83<br>\n},<br>\n{<br>\n\"class\": \"io.vertx.core.http.impl.ServerWebSocketImpl\",<br>\n\"method\": \"setHandshake\",<br>\n\"file\": \"ServerWebSocketImpl.java\",<br>\n\"line\": 230<br>\n},<br>\n{<br>\n\"class\": \"io.vertx.core.http.impl.ServerWebSocketImpl\",<br>\n\"method\": \"setHandshake\",<br>\n\"file\": \"ServerWebSocketImpl.java\",<br>\n\"line\": 214<br>\n},<br>\n{<br>\n\"class\": \"io.vertx.core.http.impl.ServerWebSocketImpl\",<br>\n\"method\": \"tryHandshake\",<br>\n\"file\": \"ServerWebSocketImpl.java\",<br>\n\"line\": 206<br>\n},<br>\n{<br>\n\"class\": \"io.vertx.core.http.impl.ServerWebSocketImpl\",<br>\n\"method\": \"accept\",<br>\n\"file\": \"ServerWebSocketImpl.java\",<br>\n\"line\": 95<br>\n},<br>\n{<br>\n\"class\": \"io.vertx.core.http.impl.HttpServerRequestImpl\",<br>\n\"method\": \"upgrade\",<br>\n\"file\": \"HttpServerRequestImpl.java\",<br>\n\"line\": 424<br>\n},<br>\n{<br>\n\"class\": \"io.vertx.core.http.HttpServerRequest\",<br>\n\"method\": \"toWebSocket\",<br>\n\"file\": \"HttpServerRequest.java\",<br>\n\"line\": 386<br>\n},</p>",
                "resourcePath": "/netty/netty/issues/13176",
                "createdAt": "2023-02-01T14:04:39Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Adding header name of the header which failed validation.",
        "url": "https://github.com/netty/netty/pull/13209",
        "resourcePath": "/netty/netty/pull/13209",
        "createdAt": "2023-02-10T09:22:22Z",
        "number": 13209,
        "mergeCommit": {
          "oid": "1cfe7103fbf7acdc5e21365419e9565955540703",
          "message": "Adding header name of the header which failed validation. (#13208) (#13209)\n\nMotivation:\r\n\r\nUsers should know which header failed the value validation.\r\n\r\nModification:\r\n\r\nCatch IllegalArgumentException and wrap in other exception with the header name in the message.\r\n\r\nResult:\r\n\r\nError message now has header name which failed validation.",
          "commitUrl": "https://github.com/netty/netty/commit/1cfe7103fbf7acdc5e21365419e9565955540703",
          "parents": {
            "nodes": [
              {
                "oid": "3acad41e942fe181f83c977eb7991f580aa6c018",
                "message": "Fix HttpHeaders.names for non-String headers (#13219)\n\nMotivation:\r\n\r\nWith #12321, the HttpHeaders object returned by the standard HTTP/1 pipeline now contains AsciiStrings, not Strings. This uncovered a bug where HttpHeaders.names() did not behave properly as a Set<String> when the backing HttpHeaders contained a CharSequence type other than String. This leads to .contains incorrectly returning false when the header is present.\r\n\r\nModification:\r\n\r\nReplace CharSequenceDelegatingStringSet with a class that delegates directly to the Headers object, instead of Headers.names(), for the .contains call.\r\n\r\nResult:\r\n\r\n- The .contains call works properly even when the backing Headers aren't Strings.\r\n- Mutation methods were removed. This is an improvement imo, names() previously returned a copy, so changes would not be reflected in the Headers anyway.\r\n- .contains is now case-insensitive."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/DefaultHttpHeadersTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/DefaultHeaders.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85JsZFf2gAoNzIyYzE2Mjk0YmYwMGExMTNjMTRhNTM1YzBkNTZhMTc4NTk4MDEwZQ",
                "url": "https://github.com/netty/netty/pull/13209/commits/722c16294bf00a113c14a535c0d56a178598010e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13208,
                "url": "https://github.com/netty/netty/issues/13208",
                "title": "Display which header failed validation",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Currently if a HeaderValue fails validation we get an IllegalArgumentException which has the message <code class=\"notranslate\">a header value contains prohibited character {some_invalid_character} at index {index}</code>. Seeing this in production makes it hard to debug which header is having this problem.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">We should instead have the message, `Header value for {header_name} contains prohibited character {some_invalid_character} at index {index}</p>\n<p dir=\"auto\">To fix this I am suggesting to change the interface of ValueValidator to also take in the key which will be purely used for adding debug information.</p>",
                "resourcePath": "/netty/netty/issues/13208",
                "createdAt": "2023-02-10T09:12:50Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "MixedFileUpload should honor specified baseDir & deleteOnExit (#13218)",
        "url": "https://github.com/netty/netty/pull/13227",
        "resourcePath": "/netty/netty/pull/13227",
        "createdAt": "2023-02-17T14:46:39Z",
        "number": 13227,
        "mergeCommit": {
          "oid": "dd71a339b2f53d3c26b6e4a914637710bcec2cfb",
          "message": "MixedFileUpload should honor specified baseDir & deleteOnExit (#13218) (#13227)\n\nMotivation:\r\n\r\nIf the DiskFileUpload is created in the MixedFileUpload constructor then\r\nbasedDire & deleteOnExit parameters are not taken into account and so created\r\nusing the default ones.\r\n\r\nModifications:\r\n\r\nForward specified baseDir & deleteOnExit when creating a DiskFileUpload into\r\nMixedFileUpload constructor.\r\n\r\nResult:\r\n\r\nDiskFileUploads created by MixedFileUpload are always honoring the specified\r\nbaseDir & deleteOnExit parameters.",
          "commitUrl": "https://github.com/netty/netty/commit/dd71a339b2f53d3c26b6e4a914637710bcec2cfb",
          "parents": {
            "nodes": [
              {
                "oid": "53b6dd4f6565dd07b4f378f54359f5645da48ab4",
                "message": "implement NonStickyEventExecutorGroup.inEventLoop (#13233)\n\nMotivation:\r\n\r\nCurrent implementation of `NonStickyEventExecutor.inEventLoop()` always returns `false`, causing behavior changes when `DefaultEventExecutor` is replaced with `NonStickyEventExecutor`\r\n\r\nModification:\r\n\r\nThread , currently executing `NonStickyEventExecutor.run()` is stored in a volatile and used to check if in event loop.\r\n\r\n\r\nResult:\r\n\r\nCalls to `inEventLoop()` inside runnable executed by `NonStickyEventExecutor` return `true` and return `false` otherwise\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/MixedFileUpload.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/MixedTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85KOZRB2gAoNzY1ODk0ZTYyMDZlZmQyYTc1ZmVjMWViOGE4N2JlMTlhYTM3NGU5OA",
                "url": "https://github.com/netty/netty/pull/13227/commits/765894e6206efd2a75fec1eb8a87be19aa374e98"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13218,
                "url": "https://github.com/netty/netty/issues/13218",
                "title": "MixedFileUpload does not always create DiskFileUpload under the specified baseDir",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">MixedFileUpload</code> should always used the specified <code class=\"notranslate\">baseDir</code> to create <code class=\"notranslate\">DiskFileUpload</code>.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">If the <code class=\"notranslate\">DiskFileUpload</code> is created in the <code class=\"notranslate\">MixedFileUpload</code> constructor then <code class=\"notranslate\">basedDire</code> &amp; <code class=\"notranslate\">deleteOnExit</code> parameters are not taken into account and so created the default ones, i.e <code class=\"notranslate\">DiskFileUpload.baseDirectory</code> &amp; <code class=\"notranslate\">DiskFileUpload.deleteOnExitTemporaryFile</code>:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"    public MixedFileUpload(String name, String filename, String contentType,\n            String contentTransferEncoding, Charset charset, long size,\n            long limitSize, String baseDir, boolean deleteOnExit) {\n        this.limitSize = limitSize;\n        if (size &gt; this.limitSize) {\n            fileUpload = new DiskFileUpload(name, filename, contentType,\n                    contentTransferEncoding, charset, size);\n        } else {\n            fileUpload = new MemoryFileUpload(name, filename, contentType,\n                    contentTransferEncoding, charset, size);\n        }\n        definedSize = size;\n        this.baseDir = baseDir;\n        this.deleteOnExit = deleteOnExit;\n    }\"><pre class=\"notranslate\">    <span class=\"pl-k\">public</span> <span class=\"pl-s1\">MixedFileUpload</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">name</span>, <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">filename</span>, <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">contentType</span>,\n            <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">contentTransferEncoding</span>, <span class=\"pl-smi\">Charset</span> <span class=\"pl-s1\">charset</span>, <span class=\"pl-smi\">long</span> <span class=\"pl-s1\">size</span>,\n            <span class=\"pl-smi\">long</span> <span class=\"pl-s1\">limitSize</span>, <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">baseDir</span>, <span class=\"pl-smi\">boolean</span> <span class=\"pl-s1\">deleteOnExit</span>) {\n        <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">limitSize</span> = <span class=\"pl-s1\">limitSize</span>;\n        <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">size</span> &gt; <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">limitSize</span>) {\n            <span class=\"pl-s1\">fileUpload</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DiskFileUpload</span>(<span class=\"pl-s1\">name</span>, <span class=\"pl-s1\">filename</span>, <span class=\"pl-s1\">contentType</span>,\n                    <span class=\"pl-s1\">contentTransferEncoding</span>, <span class=\"pl-s1\">charset</span>, <span class=\"pl-s1\">size</span>);\n        } <span class=\"pl-k\">else</span> {\n            <span class=\"pl-s1\">fileUpload</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">MemoryFileUpload</span>(<span class=\"pl-s1\">name</span>, <span class=\"pl-s1\">filename</span>, <span class=\"pl-s1\">contentType</span>,\n                    <span class=\"pl-s1\">contentTransferEncoding</span>, <span class=\"pl-s1\">charset</span>, <span class=\"pl-s1\">size</span>);\n        }\n        <span class=\"pl-s1\">definedSize</span> = <span class=\"pl-s1\">size</span>;\n        <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">baseDir</span> = <span class=\"pl-s1\">baseDir</span>;\n        <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">deleteOnExit</span> = <span class=\"pl-s1\">deleteOnExit</span>;\n    }</pre></div>\n<p dir=\"auto\">However if the <code class=\"notranslate\">DiskFileUpload</code> is created later through <code class=\"notranslate\">addContent</code> method then these parameters are correctly passed to the <code class=\"notranslate\">DiskFileUpload</code> constructor:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"    @Override\n    public void addContent(ByteBuf buffer, boolean last)\n            throws IOException {\n        if (fileUpload instanceof MemoryFileUpload) {\n            try {\n                checkSize(fileUpload.length() + buffer.readableBytes());\n                if (fileUpload.length() + buffer.readableBytes() &gt; limitSize) {\n                    DiskFileUpload diskFileUpload = new DiskFileUpload(fileUpload\n                            .getName(), fileUpload.getFilename(), fileUpload\n                            .getContentType(), fileUpload\n                            .getContentTransferEncoding(), fileUpload.getCharset(),\n                            definedSize, baseDir, deleteOnExit);\n                    diskFileUpload.setMaxSize(maxSize);\n                    ByteBuf data = fileUpload.getByteBuf();\n                    if (data != null &amp;&amp; data.isReadable()) {\n                        diskFileUpload.addContent(data.retain(), false);\n                    }\n                    // release old upload\n                    fileUpload.release();\n\n                    fileUpload = diskFileUpload;\n                }\n            } catch (IOException e) {\n                buffer.release();\n                throw e;\n            }\n        }\n        fileUpload.addContent(buffer, last);\n    }\"><pre class=\"notranslate\">    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">addContent</span>(<span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">buffer</span>, <span class=\"pl-smi\">boolean</span> <span class=\"pl-s1\">last</span>)\n            <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">IOException</span> {\n        <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">fileUpload</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">MemoryFileUpload</span>) {\n            <span class=\"pl-k\">try</span> {\n                <span class=\"pl-en\">checkSize</span>(<span class=\"pl-s1\">fileUpload</span>.<span class=\"pl-en\">length</span>() + <span class=\"pl-s1\">buffer</span>.<span class=\"pl-en\">readableBytes</span>());\n                <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">fileUpload</span>.<span class=\"pl-en\">length</span>() + <span class=\"pl-s1\">buffer</span>.<span class=\"pl-en\">readableBytes</span>() &gt; <span class=\"pl-s1\">limitSize</span>) {\n                    <span class=\"pl-smi\">DiskFileUpload</span> <span class=\"pl-s1\">diskFileUpload</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DiskFileUpload</span>(<span class=\"pl-s1\">fileUpload</span>\n                            .<span class=\"pl-en\">getName</span>(), <span class=\"pl-s1\">fileUpload</span>.<span class=\"pl-en\">getFilename</span>(), <span class=\"pl-s1\">fileUpload</span>\n                            .<span class=\"pl-en\">getContentType</span>(), <span class=\"pl-s1\">fileUpload</span>\n                            .<span class=\"pl-en\">getContentTransferEncoding</span>(), <span class=\"pl-s1\">fileUpload</span>.<span class=\"pl-en\">getCharset</span>(),\n                            <span class=\"pl-s1\">definedSize</span>, <span class=\"pl-s1\">baseDir</span>, <span class=\"pl-s1\">deleteOnExit</span>);\n                    <span class=\"pl-s1\">diskFileUpload</span>.<span class=\"pl-en\">setMaxSize</span>(<span class=\"pl-s1\">maxSize</span>);\n                    <span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">data</span> = <span class=\"pl-s1\">fileUpload</span>.<span class=\"pl-en\">getByteBuf</span>();\n                    <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">data</span> != <span class=\"pl-c1\">null</span> &amp;&amp; <span class=\"pl-s1\">data</span>.<span class=\"pl-en\">isReadable</span>()) {\n                        <span class=\"pl-s1\">diskFileUpload</span>.<span class=\"pl-en\">addContent</span>(<span class=\"pl-s1\">data</span>.<span class=\"pl-en\">retain</span>(), <span class=\"pl-c1\">false</span>);\n                    }\n                    <span class=\"pl-c\">// release old upload</span>\n                    <span class=\"pl-s1\">fileUpload</span>.<span class=\"pl-en\">release</span>();\n\n                    <span class=\"pl-s1\">fileUpload</span> = <span class=\"pl-s1\">diskFileUpload</span>;\n                }\n            } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">IOException</span> <span class=\"pl-s1\">e</span>) {\n                <span class=\"pl-s1\">buffer</span>.<span class=\"pl-en\">release</span>();\n                <span class=\"pl-k\">throw</span> <span class=\"pl-s1\">e</span>;\n            }\n        }\n        <span class=\"pl-s1\">fileUpload</span>.<span class=\"pl-en\">addContent</span>(<span class=\"pl-s1\">buffer</span>, <span class=\"pl-s1\">last</span>);\n    }</pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Create a <code class=\"notranslate\">MixedFileUpload</code> with <code class=\"notranslate\">size &gt; limitSize</code> while specifying a <code class=\"notranslate\">baseDir</code>.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import static java.nio.charset.StandardCharsets.UTF_8;\n\nimport io.netty.buffer.Unpooled;\nimport io.netty.handler.codec.http.multipart.DiskFileUpload;\nimport io.netty.handler.codec.http.multipart.MixedFileUpload;\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport java.util.Arrays;\n\nclass MixedFileUploadBug {\n  public static void main(String[] args) throws IOException {\n    var defaultDirectory = Files.createTempDirectory(null);\n    DiskFileUpload.baseDirectory = defaultDirectory.toString();\n\n    var specifiedDirectory = Files.createTempDirectory(null);\n    var mixedFileUpload =\n        new MixedFileUpload(\n            &quot;name&quot;,\n            &quot;filename&quot;,\n            &quot;contentType&quot;,\n            &quot;contentTransferEncoding&quot;,\n            UTF_8,\n            100,\n            10,\n            specifiedDirectory.toString(),\n            true);\n    mixedFileUpload.addContent(Unpooled.wrappedBuffer(new byte[100]), true);\n\n    System.out.printf(&quot;defaultDirectory: %s%n&quot;, Arrays.toString(defaultDirectory.toFile().list()));\n    System.out.printf(\n        &quot;specifiedDirectory: %s%n&quot;, Arrays.toString(specifiedDirectory.toFile().list()));\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">charset</span>.<span class=\"pl-s1\">StandardCharsets</span>.<span class=\"pl-c1\">UTF_8</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">buffer</span>.<span class=\"pl-s1\">Unpooled</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">multipart</span>.<span class=\"pl-s1\">DiskFileUpload</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">http</span>.<span class=\"pl-s1\">multipart</span>.<span class=\"pl-s1\">MixedFileUpload</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">IOException</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">file</span>.<span class=\"pl-s1\">Files</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">Arrays</span>;\n\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">MixedFileUploadBug</span> {\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">IOException</span> {\n    <span class=\"pl-smi\">var</span> <span class=\"pl-s1\">defaultDirectory</span> = <span class=\"pl-smi\">Files</span>.<span class=\"pl-en\">createTempDirectory</span>(<span class=\"pl-c1\">null</span>);\n    <span class=\"pl-smi\">DiskFileUpload</span>.<span class=\"pl-s1\">baseDirectory</span> = <span class=\"pl-s1\">defaultDirectory</span>.<span class=\"pl-en\">toString</span>();\n\n    <span class=\"pl-smi\">var</span> <span class=\"pl-s1\">specifiedDirectory</span> = <span class=\"pl-smi\">Files</span>.<span class=\"pl-en\">createTempDirectory</span>(<span class=\"pl-c1\">null</span>);\n    <span class=\"pl-smi\">var</span> <span class=\"pl-s1\">mixedFileUpload</span> =\n        <span class=\"pl-k\">new</span> <span class=\"pl-smi\">MixedFileUpload</span>(\n            <span class=\"pl-s\">\"name\"</span>,\n            <span class=\"pl-s\">\"filename\"</span>,\n            <span class=\"pl-s\">\"contentType\"</span>,\n            <span class=\"pl-s\">\"contentTransferEncoding\"</span>,\n            <span class=\"pl-c1\">UTF_8</span>,\n            <span class=\"pl-c1\">100</span>,\n            <span class=\"pl-c1\">10</span>,\n            <span class=\"pl-s1\">specifiedDirectory</span>.<span class=\"pl-en\">toString</span>(),\n            <span class=\"pl-c1\">true</span>);\n    <span class=\"pl-s1\">mixedFileUpload</span>.<span class=\"pl-en\">addContent</span>(<span class=\"pl-smi\">Unpooled</span>.<span class=\"pl-en\">wrappedBuffer</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">byte</span>[<span class=\"pl-c1\">100</span>]), <span class=\"pl-c1\">true</span>);\n\n    <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">printf</span>(<span class=\"pl-s\">\"defaultDirectory: %s%n\"</span>, <span class=\"pl-smi\">Arrays</span>.<span class=\"pl-en\">toString</span>(<span class=\"pl-s1\">defaultDirectory</span>.<span class=\"pl-en\">toFile</span>().<span class=\"pl-en\">list</span>()));\n    <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">printf</span>(\n        <span class=\"pl-s\">\"specifiedDirectory: %s%n\"</span>, <span class=\"pl-smi\">Arrays</span>.<span class=\"pl-en\">toString</span>(<span class=\"pl-s1\">specifiedDirectory</span>.<span class=\"pl-en\">toFile</span>().<span class=\"pl-en\">list</span>()));\n  }\n}</pre></div>\n<p dir=\"auto\">Ouput:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"defaultDirectory: [FUp_9153067335013617885_upload]\nspecifiedDirectory: []\"><pre class=\"notranslate\"><code class=\"notranslate\">defaultDirectory: [FUp_9153067335013617885_upload]\nspecifiedDirectory: []\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\"><code class=\"notranslate\">4.1.77.Final</code></p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\u276f java -version\nopenjdk version &quot;17.0.5&quot; 2022-10-18 LTS\nOpenJDK Runtime Environment Zulu17.38+21-CA (build 17.0.5+8-LTS)\nOpenJDK 64-Bit Server VM Zulu17.38+21-CA (build 17.0.5+8-LTS, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">\u276f java -version\nopenjdk version \"17.0.5\" 2022-10-18 LTS\nOpenJDK Runtime Environment Zulu17.38+21-CA (build 17.0.5+8-LTS)\nOpenJDK 64-Bit Server VM Zulu17.38+21-CA (build 17.0.5+8-LTS, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\u276f uname -a\nDarwin COMP-RTYGPQ9CDC 21.6.0 Darwin Kernel Version 21.6.0: Sun Nov  6 23:31:13 PST 2022; root:xnu-8020.240.14~1/RELEASE_ARM64_T6000 arm64 arm Darwin\"><pre class=\"notranslate\"><code class=\"notranslate\">\u276f uname -a\nDarwin COMP-RTYGPQ9CDC 21.6.0 Darwin Kernel Version 21.6.0: Sun Nov  6 23:31:13 PST 2022; root:xnu-8020.240.14~1/RELEASE_ARM64_T6000 arm64 arm Darwin\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/13218",
                "createdAt": "2023-02-14T10:07:34Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make decodeParams and findPathEndIndex static methods public available.",
        "url": "https://github.com/netty/netty/pull/13243",
        "resourcePath": "/netty/netty/pull/13243",
        "createdAt": "2023-02-25T19:49:50Z",
        "number": 13243,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85Kwv5X2gAoOTc4OGFmYjdkMjI0ZjUxM2MyNzIyZTA3ZTAwZjEwNDk2ZWJlNzMxYw",
                "url": "https://github.com/netty/netty/pull/13243/commits/9788afb7d224f513c2722e07e00f10496ebe731c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13239,
                "url": "https://github.com/netty/netty/issues/13239",
                "title": "Request: Make decodeParams and decodeParams in QueryStringDecoder publicly available",
                "bodyHTML": "<p dir=\"auto\">We would like to reuse the decodeParams method in QueryStringDecoder to <a href=\"https://github.com/reactor/reactor-netty/issues/68\" data-hovercard-type=\"issue\" data-hovercard-url=\"/reactor/reactor-netty/issues/68/hovercard\">support query parameters in Reactor Netty</a> without creating a QueryStringDecoder object. Could you make <code class=\"notranslate\">decodeParams</code> and <code class=\"notranslate\">findPathEndIndex</code> publicly available for others to use? Since findPathEndIndex helps determine where the end of path is in order to begin parsing, I include it in the request.</p>\n<p dir=\"auto\">I can create a PR for this if you greenlight this request.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    public static Map&lt;String, List&lt;String&gt;&gt; decodeParams(String s, int from, Charset charset, int paramsLimit,\n                                                      boolean semicolonIsNormalChar) {\n    public static int findPathEndIndex(String uri) {\"><pre class=\"notranslate\"><code class=\"notranslate\">    public static Map&lt;String, List&lt;String&gt;&gt; decodeParams(String s, int from, Charset charset, int paramsLimit,\n                                                      boolean semicolonIsNormalChar) {\n    public static int findPathEndIndex(String uri) {\n</code></pre></div>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/d34212439068091bcec29a8fad4df82f0a82c638/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java#L226-L227\">netty/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 226 to 227\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/d34212439068091bcec29a8fad4df82f0a82c638\">d342124</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L226\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"226\"></td>\n          <td id=\"LC226\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">Map</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">String</span>&gt;&gt; <span class=\"pl-en\">decodeParams</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">s</span>, <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">from</span>, <span class=\"pl-smi\">Charset</span> <span class=\"pl-s1\">charset</span>, <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">paramsLimit</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L227\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"227\"></td>\n          <td id=\"LC227\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                                                       <span class=\"pl-smi\">boolean</span> <span class=\"pl-s1\">semicolonIsNormalChar</span>) { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/d34212439068091bcec29a8fad4df82f0a82c638/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java#L383\">netty/codec-http/src/main/java/io/netty/handler/codec/http/QueryStringDecoder.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 383\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/d34212439068091bcec29a8fad4df82f0a82c638\">d342124</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L383\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"383\"></td>\n          <td id=\"LC383\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">int</span> <span class=\"pl-en\">findPathEndIndex</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">uri</span>) { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>",
                "resourcePath": "/netty/netty/issues/13239",
                "createdAt": "2023-02-22T18:43:49Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "fix too many flush",
        "url": "https://github.com/netty/netty/pull/13244",
        "resourcePath": "/netty/netty/pull/13244",
        "createdAt": "2023-02-26T06:58:37Z",
        "number": 13244,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2StreamChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2MultiplexTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85KxLcU2gAoNmM2ZTY5MjcxODY5OTczMmQwZTBhMmNiYjM5NzU5N2ZmMjMxNWI0Nw",
                "url": "https://github.com/netty/netty/pull/13244/commits/6c6e692718699732d0e0a2cbb397597ff2315b47"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13232,
                "url": "https://github.com/netty/netty/issues/13232",
                "title": "too many `flush` in http2 write end header",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">do not flush when writing <code class=\"notranslate\">end header</code>, I will call <code class=\"notranslate\">ctx.flush()</code></p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">when I call <code class=\"notranslate\">ctx.write(new DefaultHttp2HeadersFrame(headers, true), promise)</code>, <code class=\"notranslate\">flush</code> is also called<br>\ninvoke flush when <code class=\"notranslate\">notifyClosed</code> stream,<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/42876375/219943494-691017d2-e691-4085-873c-b5bbc1046d42.png\"><img width=\"1105\" alt=\"image\" src=\"https://user-images.githubusercontent.com/42876375/219943494-691017d2-e691-4085-873c-b5bbc1046d42.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/42876375/219943632-7d5626a3-0b75-4d9e-94bb-f1a25adab923.png\"><img width=\"1087\" alt=\"image\" src=\"https://user-images.githubusercontent.com/42876375/219943632-7d5626a3-0b75-4d9e-94bb-f1a25adab923.png\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.87.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">1.8.0_231</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">19.6.0 Darwin Kernel Version 19.6.0</p>",
                "resourcePath": "/netty/netty/issues/13232",
                "createdAt": "2023-02-19T10:57:10Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use MacOS SDK 10.9 to prevent apple notarization failures",
        "url": "https://github.com/netty/netty/pull/13253",
        "resourcePath": "/netty/netty/pull/13253",
        "createdAt": "2023-02-28T09:16:10Z",
        "number": 13253,
        "mergeCommit": {
          "oid": "971aa8ad9c7288a6744d3bbe07ded785fa170d9d",
          "message": "Use MacOS SDK 10.9 to prevent apple notarization failures (#13253)\n\nMotivation:\r\n\r\nWhen using an SDK older then 10.9 the notarization process fails and Apple sends the reason for the failure is that \"The binary uses an SDK older than the 10.9 SDK\r\n\r\nModifications:\r\n\r\nUpdate to 10.9\r\n\r\nResult:\r\n\r\nNo more problems with apple notarization.",
          "commitUrl": "https://github.com/netty/netty/commit/971aa8ad9c7288a6744d3bbe07ded785fa170d9d",
          "parents": {
            "nodes": [
              {
                "oid": "5d1f99655918c9c034ca090d51b64eced73f742f",
                "message": "Increase errno cache and guard against IOOBE (#13254)\n\nMotivation:\r\n\r\nIn the past we cached up to 512 errno values and used this cache to lookup the string representation without checking if the value if > 512. This value might be a bit low as more errno values are added over the time.\r\n\r\nModifications:\r\n\r\n- Cache up to errno code 2048\r\n- Use JNI call if errno code was not cached and so not throw an IOOBE.\r\n\r\nResult:\r\n\r\nNo more exceptions on un-cached errno codes"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns-native-macos/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85K6JH72gAoNTc2MTU4MjU2MjU1NGEwOThjN2M4OWIzY2M5ZDkxMjRiZWYxYWJlNw",
                "url": "https://github.com/netty/netty/pull/13253/commits/5761582562554a098c7c89b3cc9d9124bef1abe7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13228,
                "url": "https://github.com/netty/netty/issues/13228",
                "title": "macOS App Using resolver-dns-native-macos Fails Apple Notarization",
                "bodyHTML": "<p dir=\"auto\">I am working on a project where we are building a macOS app using netty-resolver-dns-native-macos. When I attempt to have my app notarized by Apple in order to distribute to users, the notarization process fails and Apple sends the reason for the failure is that \"The binary uses an SDK older than the 10.9 SDK\". The binary in question is \"libnetty_resolver_dns_native_macos_x86_64.jnilib\" which seems to have been compiled with Mac OS X SDK 10.6 according to this pom.xml file <a href=\"https://github.com/netty/netty/blob/4.1/resolver-dns-native-macos/pom.xml\">https://github.com/netty/netty/blob/4.1/resolver-dns-native-macos/pom.xml</a>. I am wondering if it would be possible to raise the Mac OS X SDK to 10.9? Or what is the reasoning for staying at such an old SDK?</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Apple successfully notarizes the application.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Apple rejects the application due to the usage of Mac OS X SDK 10.6 as it is now a requirement to use SDK 10.9 or later<br>\n<a href=\"https://developer.apple.com/documentation/security/notarizing_macos_software_before_distribution/resolving_common_notarization_issues#3087723\" rel=\"nofollow\">https://developer.apple.com/documentation/security/notarizing_macos_software_before_distribution/resolving_common_notarization_issues#3087723</a></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Send an application using netty-resolver-dns-native-macos to be notarized by Apple</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\"><a href=\"https://github.com/netty/netty/tree/4.1/resolver-dns-native-macos\">https://github.com/netty/netty/tree/4.1/resolver-dns-native-macos</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">netty-resolver-dns-native-macos-4.1.87.Final-osx-x86_64.jar</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">17</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Mac OS X Mojave (10.14) and later</p>",
                "resourcePath": "/netty/netty/issues/13228",
                "createdAt": "2023-02-17T23:02:02Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Don't reset BCSSLParameters when setting application protocols",
        "url": "https://github.com/netty/netty/pull/13262",
        "resourcePath": "/netty/netty/pull/13262",
        "createdAt": "2023-03-07T09:25:42Z",
        "number": 13262,
        "mergeCommit": {
          "oid": "8fac718b1f7246c6a8b9db6123750429b0a5b4ad",
          "message": "Don't reset BCSSLParameters when setting application protocols (#13262)\n\n\r\nMotivation:\r\n\r\nWe had a bug that lead to resetting the BCSSLParameters during setting the applications protocols.\r\n\r\nModifications:\r\n\r\nRetrieve already configured BCSSLParameters and use these to set the application protocol\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13261",
          "commitUrl": "https://github.com/netty/netty/commit/8fac718b1f7246c6a8b9db6123750429b0a5b4ad",
          "parents": {
            "nodes": [
              {
                "oid": "c353f4fea52559d09b3811492c92a38aa1887501",
                "message": "Faster Recycler's claim/release (Fixes #13153) (#13220)\n\nMotivation:\r\n\r\nRecycler's claim/release can be made faster by saving expensive volatile ops, when not needed. For claim, always, while for release, if the owner thread is performing release itself.\r\n\r\nModification:\r\n\r\nReplacing expensive volatile ops with ordered ones.\r\n\r\nResult:\r\n\r\nFaster Recycler's claim/release"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/BouncyCastleAlpnSslUtils.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85LdDOb2gAoNzk2NWUzNzYyMTc5NTMwODVjMWIyOWYxZDIzODJjZGU3NTlkNzgwNQ",
                "url": "https://github.com/netty/netty/pull/13262/commits/7965e376217953085c1b29f1d2382cde759d7805"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13261,
                "url": "https://github.com/netty/netty/issues/13261",
                "title": "HTTP/2 ALPN not working with BC FIPS TLS provider ",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Netty http/2 client includes the ALPN extension at the beginning of the TLS handshake to send a list of supported application protocols to the server as part of the ClientHello</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Netty http/2 client does not include the ALPN extension at the beginning of the TLS handshake to send a list of supported application protocols to the server as part of the ClientHello when used with BC FIPS TLS provider (bctls-fips-1.0.13,jar)</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Run a Netty based http/2 server  with multiple application protocols configured (http/1.1 , http/2)<br>\nRun a Netty based http/2 client  with multiple application protocols configured (http/1.1 , http/2)<br>\nThe server and client is configured for TLS ,<br>\nSet crypto provider to bc-fips (bc-fips-1.0.2.3.jar)  , Set jsse provider BC FIPS TLS (bctls-fips-1.0.13)<br>\nThe connection fails as the ALPN extension is not included in the client hello</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\"><a href=\"https://github.com/rajeshpnair/nettyfipsissue/tree/main/HTTP2NettyTest\">https://github.com/rajeshpnair/nettyfipsissue/tree/main/HTTP2NettyTest</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.89</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">11.0.16</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows_NT ICGLEBM432 10 00 x64</p>",
                "resourcePath": "/netty/netty/issues/13261",
                "createdAt": "2023-03-07T07:39:34Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix for tls alpn extension issue with bc jsse provider (netty #13261)",
        "url": "https://github.com/netty/netty/pull/13263",
        "resourcePath": "/netty/netty/pull/13263",
        "createdAt": "2023-03-07T12:23:58Z",
        "number": 13263,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/BouncyCastleAlpnSslUtils.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85LeDhV2gAoMGU3OGY4NjRhYWFiYjIwYzBhMTM3OGQ0YzMxM2E5YTQwNTA1MzVkMw",
                "url": "https://github.com/netty/netty/pull/13263/commits/0e78f864aaabb20c0a1378d4c313a9a4050535d3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13261,
                "url": "https://github.com/netty/netty/issues/13261",
                "title": "HTTP/2 ALPN not working with BC FIPS TLS provider ",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Netty http/2 client includes the ALPN extension at the beginning of the TLS handshake to send a list of supported application protocols to the server as part of the ClientHello</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Netty http/2 client does not include the ALPN extension at the beginning of the TLS handshake to send a list of supported application protocols to the server as part of the ClientHello when used with BC FIPS TLS provider (bctls-fips-1.0.13,jar)</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Run a Netty based http/2 server  with multiple application protocols configured (http/1.1 , http/2)<br>\nRun a Netty based http/2 client  with multiple application protocols configured (http/1.1 , http/2)<br>\nThe server and client is configured for TLS ,<br>\nSet crypto provider to bc-fips (bc-fips-1.0.2.3.jar)  , Set jsse provider BC FIPS TLS (bctls-fips-1.0.13)<br>\nThe connection fails as the ALPN extension is not included in the client hello</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\"><a href=\"https://github.com/rajeshpnair/nettyfipsissue/tree/main/HTTP2NettyTest\">https://github.com/rajeshpnair/nettyfipsissue/tree/main/HTTP2NettyTest</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.89</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">11.0.16</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows_NT ICGLEBM432 10 00 x64</p>",
                "resourcePath": "/netty/netty/issues/13261",
                "createdAt": "2023-03-07T07:39:34Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Http types slow path checks (Fixes #13268) ",
        "url": "https://github.com/netty/netty/pull/13269",
        "resourcePath": "/netty/netty/pull/13269",
        "createdAt": "2023-03-10T08:27:51Z",
        "number": 13269,
        "mergeCommit": {
          "oid": "f67a55609d252e0eac9707df51997cc79ed22093",
          "message": "Http types slow path checks (Fixes #13268)  (#13269)\n\nMotivation:\r\n\r\nHttp encoders/decoders and websocket handlers perform slow type checks\r\ni.e. O(N) search among all implemented interfaces for non-implemented interfaces.\r\n\r\nModifications:\r\n\r\nPerform instance exact matches and/or class type check vs common used types, while exposing\r\nunstable APIs to allow users to do the same, if necessary.\r\n\r\nResult:\r\n\r\nBetter performance of Http pipeline with/without websocket handler.\r\nFixes #13261",
          "commitUrl": "https://github.com/netty/netty/commit/f67a55609d252e0eac9707df51997cc79ed22093",
          "parents": {
            "nodes": [
              {
                "oid": "de876d197a945e2b3a4a96b90a65c00611b77806",
                "message": "Deprecates LazyRunnable (#13336)\n\nMotivation:\r\n\r\nType check vs LazyRunnable receive an always-on performance hit for a common operation that users shouldn't pay if they won't use it.\r\n\r\nModifications:\r\n\r\nDeprecates LazyRunnable providing a comment to help\r\nexisting users an alternative mechanism.\r\n\r\nResult:\r\n\r\nFixes #13335\r\n\r\nCo-authored-by: Chris Vest <mr.chrisvest@gmail.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpRequestDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpResponseEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/extensions/WebSocketServerExtensionHandler.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "microbench/src/main/java/io/netty/microbench/http/HttpRequestResponseBenchmark.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85Lvtbe2gAoZDY3MTg1ZTQyMzkxZTI5MzJiYzcxZjg3Y2Y0MDRlMzAyMmRjNGM1Yw",
                "url": "https://github.com/netty/netty/pull/13269/commits/d67185e42391e2932bc71f87cf404e3022dc4c5c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13261,
                "url": "https://github.com/netty/netty/issues/13261",
                "title": "HTTP/2 ALPN not working with BC FIPS TLS provider ",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Netty http/2 client includes the ALPN extension at the beginning of the TLS handshake to send a list of supported application protocols to the server as part of the ClientHello</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Netty http/2 client does not include the ALPN extension at the beginning of the TLS handshake to send a list of supported application protocols to the server as part of the ClientHello when used with BC FIPS TLS provider (bctls-fips-1.0.13,jar)</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Run a Netty based http/2 server  with multiple application protocols configured (http/1.1 , http/2)<br>\nRun a Netty based http/2 client  with multiple application protocols configured (http/1.1 , http/2)<br>\nThe server and client is configured for TLS ,<br>\nSet crypto provider to bc-fips (bc-fips-1.0.2.3.jar)  , Set jsse provider BC FIPS TLS (bctls-fips-1.0.13)<br>\nThe connection fails as the ALPN extension is not included in the client hello</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\"><a href=\"https://github.com/rajeshpnair/nettyfipsissue/tree/main/HTTP2NettyTest\">https://github.com/rajeshpnair/nettyfipsissue/tree/main/HTTP2NettyTest</a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.89</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">11.0.16</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows_NT ICGLEBM432 10 00 x64</p>",
                "resourcePath": "/netty/netty/issues/13261",
                "createdAt": "2023-03-07T07:39:34Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Chunked HTTP length decoding should account for whitespaces/ctrl chars (Fixes #13273)",
        "url": "https://github.com/netty/netty/pull/13274",
        "resourcePath": "/netty/netty/pull/13274",
        "createdAt": "2023-03-13T22:49:48Z",
        "number": 13274,
        "mergeCommit": {
          "oid": "0e8af543c51209d84162952fc0e607e4189e5c88",
          "message": "Chunked HTTP length decoding should account for whitespaces/ctrl chars (Fixes #13273) (#13274)\n\n\r\nMotivation:\r\n\r\n#12321 introduces the assumption that whitespaces/ctrl chars are already stripped out hex chars of HTTP chunk length. It was a wrong assumption.\r\n\r\nModifications:\r\n\r\nCorrectly check for whitespace and ctrl chars and re-introduce whitespace (leading) trim\r\n\r\nResult:\r\n\r\nFixes #13273\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/0e8af543c51209d84162952fc0e607e4189e5c88",
          "parents": {
            "nodes": [
              {
                "oid": "ab5c411c9f917426c240fb6b97c118313f69dc4f",
                "message": "Handle NullPointerException thrown from NetworkInterface.getNetworkInterfaces() on android. (#13278)\n\nMotivation:\r\n\r\nOn earlier version of Android NetworkInterface.getNetworkInterfaces() might throw an NPE.\r\n\r\nModifications:\r\n\r\nCatch NPE and only rethrow if not on Android.\r\n\r\nResult:\r\n\r\nBe able to use netty on earlier versions of Android. Fixes https://github.com/netty/netty/issues/13272"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpResponseDecoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85L8Qre2gAoNzliNTg4NGJiMWRhNmI1N2IxMGM0YTBlOTBhYzAwZDE5MWExZjNlYg",
                "url": "https://github.com/netty/netty/pull/13274/commits/79b5884bb1da6b57b10c4a0e90ac00d191a1f3eb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13273,
                "url": "https://github.com/netty/netty/issues/13273",
                "title": "HttpObjectDecoder.getChunkedSize trips over whitespace",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">the chunked size is calculated correctly</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">java.lang.NumberFormatException is thrown</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">See code below.</p>\n<p dir=\"auto\">Please be aware that I'm not at all familiar with the netty code. Added a few comments in the code below.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import io.netty.util.internal.StringUtil;\nimport java.nio.charset.StandardCharsets;\n\npublic class JavaTester {\n\n     private static int getChunkSizeNewFixed(byte[] hex, int start, int length) {\n        // byte[] is produced by LineParse::parseLine that already skip ISO CTRL and Whitespace chars\n        // COMMENT: ^ I could see handling for control chars but not whitespaces ^, but maybe I'm missing something.\n        int result = 0;\n        for (int i = 0; i &lt; length; i++) {\n            final int digit = StringUtil.decodeHexNibble(hex[start + i]);\n            if (digit == -1) {\n                // COMMENT: Until version 4.1.87.final the whitespace and control char checks where in there\n                if (hex[start + i] == ';' || Character.isWhitespace(hex[start + i])) {\n                    return result;\n                }\n                throw new NumberFormatException();\n            }\n            result *= 16;\n            result += digit;\n        }\n        return result;\n    }\n\n    private static int getChunkSizeNew(byte[] hex, int start, int length) {\n        // byte[] is produced by LineParse::parseLine that already skip ISO CTRL and Whitespace chars\n        int result = 0;\n        for (int i = 0; i &lt; length; i++) {\n            final int digit = StringUtil.decodeHexNibble(hex[start + i]);\n            if (digit == -1) {\n                // uncommon path\n                if (hex[start + i] == ';') {\n                    return result;\n                }\n                throw new NumberFormatException();\n            }\n            result *= 16;\n            result += digit;\n        }\n        return result;\n    }\n\n    public static void main(String... args) {\n        String toTest = &quot;BDC Cookie: NSC_wTfswfs_c2cjoufhsbujpo=ffffffff099b5f1f45525d5f4f58455e445a4a42378b;expires=Mon, 13-Mar-2023 14:16:06 GMT;path=/;secure;httponly&quot;;\n        System.out.println(getChunkSizeNewFixed(toTest.getBytes(StandardCharsets.UTF_8), 0, 4));\n        System.out.println(getChunkSizeNew(toTest.getBytes(StandardCharsets.UTF_8), 0, 4)); &lt;-- throws NumberFormatException\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">import io.netty.util.internal.StringUtil;\nimport java.nio.charset.StandardCharsets;\n\npublic class JavaTester {\n\n     private static int getChunkSizeNewFixed(byte[] hex, int start, int length) {\n        // byte[] is produced by LineParse::parseLine that already skip ISO CTRL and Whitespace chars\n        // COMMENT: ^ I could see handling for control chars but not whitespaces ^, but maybe I'm missing something.\n        int result = 0;\n        for (int i = 0; i &lt; length; i++) {\n            final int digit = StringUtil.decodeHexNibble(hex[start + i]);\n            if (digit == -1) {\n                // COMMENT: Until version 4.1.87.final the whitespace and control char checks where in there\n                if (hex[start + i] == ';' || Character.isWhitespace(hex[start + i])) {\n                    return result;\n                }\n                throw new NumberFormatException();\n            }\n            result *= 16;\n            result += digit;\n        }\n        return result;\n    }\n\n    private static int getChunkSizeNew(byte[] hex, int start, int length) {\n        // byte[] is produced by LineParse::parseLine that already skip ISO CTRL and Whitespace chars\n        int result = 0;\n        for (int i = 0; i &lt; length; i++) {\n            final int digit = StringUtil.decodeHexNibble(hex[start + i]);\n            if (digit == -1) {\n                // uncommon path\n                if (hex[start + i] == ';') {\n                    return result;\n                }\n                throw new NumberFormatException();\n            }\n            result *= 16;\n            result += digit;\n        }\n        return result;\n    }\n\n    public static void main(String... args) {\n        String toTest = \"BDC Cookie: NSC_wTfswfs_c2cjoufhsbujpo=ffffffff099b5f1f45525d5f4f58455e445a4a42378b;expires=Mon, 13-Mar-2023 14:16:06 GMT;path=/;secure;httponly\";\n        System.out.println(getChunkSizeNewFixed(toTest.getBytes(StandardCharsets.UTF_8), 0, 4));\n        System.out.println(getChunkSizeNew(toTest.getBytes(StandardCharsets.UTF_8), 0, 4)); &lt;-- throws NumberFormatException\n    }\n}\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">from 4.1.88 onwards.</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"1.8.0_292\"<br>\nOpenJDK Runtime Environment (AdoptOpenJDK)(build 1.8.0_292-b10)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">MacOS and Ubuntu</p>",
                "resourcePath": "/netty/netty/issues/13273",
                "createdAt": "2023-03-13T15:26:06Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "defect"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Handle NullPointerException thrown from NetworkInterface.getNetworkIn\u2026",
        "url": "https://github.com/netty/netty/pull/13278",
        "resourcePath": "/netty/netty/pull/13278",
        "createdAt": "2023-03-14T07:35:04Z",
        "number": 13278,
        "mergeCommit": {
          "oid": "ab5c411c9f917426c240fb6b97c118313f69dc4f",
          "message": "Handle NullPointerException thrown from NetworkInterface.getNetworkInterfaces() on android. (#13278)\n\nMotivation:\r\n\r\nOn earlier version of Android NetworkInterface.getNetworkInterfaces() might throw an NPE.\r\n\r\nModifications:\r\n\r\nCatch NPE and only rethrow if not on Android.\r\n\r\nResult:\r\n\r\nBe able to use netty on earlier versions of Android. Fixes https://github.com/netty/netty/issues/13272",
          "commitUrl": "https://github.com/netty/netty/commit/ab5c411c9f917426c240fb6b97c118313f69dc4f",
          "parents": {
            "nodes": [
              {
                "oid": "ebfc79c85deb8ba6fda54b8cb7fa925573076b21",
                "message": "WebSocketClientProtocolHandler: add option to disable UTF8 validation of text frames (#13265)\n\nMotivation:\r\n\r\nWebSocketClientProtocolHandler unconditionally adds UTF8 validation handler, even if one is not necessary (e.g. text frames are not used by application)\r\n\r\nModification:\r\n\r\nadd WebSocketClientProtocolConfig.withUTF8Validator option\r\n\r\nWebSocketClientProtocolHandler uses .withUTF8Validator option when adding Utf8FrameValidator to channel pipeline\r\n\r\nResult:\r\n\r\nconfigurable UTF8 validation of text frames payload in WebSocketClientProtocolHandler"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/NetUtilInitializations.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85L987u2gAoNWE5NmMwNmIzMTM0N2QzNjVkNzA1N2U1NDI1YzA5ZmQzNTE4NTNlMw",
                "url": "https://github.com/netty/netty/pull/13278/commits/5a96c06b31347d365d7057e5425c09fd351853e3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13272,
                "url": "https://github.com/netty/netty/issues/13272",
                "title": "NPE in NetworkInterface.getNetworkInterfaces",
                "bodyHTML": "<p dir=\"auto\">I face NPE during initialization of <code class=\"notranslate\">netty</code> classes on Android in method <code class=\"notranslate\">NetworkInterface.getNetworkInterfaces()</code>.<br>\n<a href=\"https://developer.android.com/reference/java/net/NetworkInterface#getNetworkInterfaces()\" rel=\"nofollow\">Documentation</a> says:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ANDROID NOTE: On Android versions before S (API level 31), this method may throw a NullPointerException if called in an environment where there is a virtual interface without a parent interface present.\"><pre class=\"notranslate\"><code class=\"notranslate\">ANDROID NOTE: On Android versions before S (API level 31), this method may throw a NullPointerException if called in an environment where there is a virtual interface without a parent interface present.\n</code></pre></div>\n<p dir=\"auto\">Would be nice too catch this NPE in <code class=\"notranslate\">NetUtilInitializations.java</code>.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">No NPE</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">NPE on some android devices</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">I have no devices to reproduce by myself, but exception documented in code.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\"><code class=\"notranslate\">4.1.82</code></p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Android API level &lt;31</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Android version &lt;12</p>",
                "resourcePath": "/netty/netty/issues/13272",
                "createdAt": "2023-03-13T10:59:14Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "add reflect config for EpollDatagramChannel",
        "url": "https://github.com/netty/netty/pull/13279",
        "resourcePath": "/netty/netty/pull/13279",
        "createdAt": "2023-03-15T06:45:40Z",
        "number": 13279,
        "mergeCommit": {
          "oid": "dabbe44b95d18f15baf2ee6247383b11bdf77d49",
          "message": "add reflect config for EpollDatagramChannel (#13279)\n\nMotivation:\r\n\r\nEpollDatagramChannel failed to reflect with graalvm native image. Spring data redis always require it when running in linux.\r\n\r\n\r\nModification:\r\n\r\nadd configuration for EpollDatagramChannel in reflect-config.json.\r\n\r\nResult:\r\n\r\nFixes [spring-data-redis #2527](https://github.com/spring-projects/spring-data-redis/issues/2527).",
          "commitUrl": "https://github.com/netty/netty/commit/dabbe44b95d18f15baf2ee6247383b11bdf77d49",
          "parents": {
            "nodes": [
              {
                "oid": "a7cdfc153c9980b7a781afa280d595efc870567c",
                "message": "Allow setting null TrustManager (#13277)\n\nMotivation:\r\n\r\nI sometimes use a default (null) TrustManager, but want to set this using the same code as when I do use a TrustManager.\r\n\r\nModification:\r\n\r\nAllow setting a null TrustManager. Same as how it is for KeyManager.\r\n\r\nResult:\r\n\r\nAllow setting null TrustManager"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/resources/META-INF/native-image/io.netty/netty-transport-classes-epoll/reflect-config.json"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85MEjZa2gAoODI5N2U1MDMxYzhjN2Q3YWM4YmUzYzAwYWM0Y2ZjMjQ0ZTc2NDZlZA",
                "url": "https://github.com/netty/netty/pull/13279/commits/8297e5031c8c7d7ac8be3c00ac4cfc244e7646ed"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2527,
                "url": "https://github.com/spring-projects/spring-data-redis/issues/2527",
                "title": "DnsAddressResolverGroup failed to initialize and threw NoSuchMethodException when running native app in Linux environment",
                "bodyHTML": "<p dir=\"auto\">I use spring boot 3.0 with spring-boot-starter-data-redis to build a native app in Ubuntu 22, it run success before. After spring-boot-starter-parent was updated from <code class=\"notranslate\">3.0.2</code> to <code class=\"notranslate\">3.0.3</code>,  native app ran fail because of <code class=\"notranslate\">error creating bean with name 'lettuceClientResources'</code>. But it's still ok in win10.</p>\n<p dir=\"auto\">It seems that DnsAddressResolverGroup failed to initialize because of  EpollDatagramChannel reflect not success. I am not sure the error caused by spring-data-redis or netty.</p>\n<p dir=\"auto\">Full stack log:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lettuceClientResources': Instantiation of supplied bean failed\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.obtainInstanceFromSupplier(AbstractAutowireCapableBeanFactory.java:1237) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.obtainFromSupplier(AbstractAutowireCapableBeanFactory.java:1211) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1158) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:961) ~[demo:6.0.5]\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917) ~[demo:6.0.5]\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584) ~[demo:6.0.5]\n        at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66) ~[demo:3.0.3]\n        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732) ~[demo:3.0.3]\n        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) ~[demo:3.0.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:310) ~[demo:3.0.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304) ~[demo:3.0.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293) ~[demo:3.0.3]\n        at com.example.demo.DemoApplication.main(DemoApplication.java:10) ~[demo:na]\nCaused by: java.lang.ExceptionInInitializerError: null\n        at io.lettuce.core.resource.AddressResolverGroupProvider.&lt;clinit&gt;(AddressResolverGroupProvider.java:35) ~[na:na]\n        at io.lettuce.core.resource.DefaultClientResources.&lt;clinit&gt;(DefaultClientResources.java:112) ~[demo:6.2.3.RELEASE]\n        at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:71) ~[demo:na]\n        at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration__BeanDefinitions.lambda$getLettuceClientResourcesInstanceSupplier$1(LettuceConnectionConfiguration__BeanDefinitions.java:41) ~[na:na]\n        at org.springframework.util.function.ThrowingBiFunction.apply(ThrowingBiFunction.java:68) ~[demo:6.0.5]\n        at org.springframework.util.function.ThrowingBiFunction.apply(ThrowingBiFunction.java:54) ~[demo:6.0.5]\n        at org.springframework.beans.factory.aot.BeanInstanceSupplier.lambda$get$2(BeanInstanceSupplier.java:208) ~[na:na]\n        at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:59) ~[demo:6.0.5]\n        at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:47) ~[demo:6.0.5]\n        at org.springframework.beans.factory.aot.BeanInstanceSupplier.invokeBeanSupplier(BeanInstanceSupplier.java:220) ~[na:na]\n        at org.springframework.beans.factory.aot.BeanInstanceSupplier.get(BeanInstanceSupplier.java:208) ~[na:na]\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.obtainInstanceFromSupplier(AbstractAutowireCapableBeanFactory.java:1226) ~[demo:6.0.5]\n        ... 18 common frames omitted\nCaused by: java.lang.IllegalArgumentException: Class EpollDatagramChannel does not have a public non-arg constructor\n        at io.netty.channel.ReflectiveChannelFactory.&lt;init&gt;(ReflectiveChannelFactory.java:36) ~[na:na]\n        at io.netty.resolver.dns.DnsNameResolverBuilder.channelType(DnsNameResolverBuilder.java:120) ~[na:na]\n        at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.&lt;clinit&gt;(AddressResolverGroupProvider.java:57) ~[na:na]\n        ... 30 common frames omitted\nCaused by: java.lang.NoSuchMethodException: io.netty.channel.epoll.EpollDatagramChannel.&lt;init&gt;()\n        at java.base@17.0.6/java.lang.Class.getConstructor0(DynamicHub.java:3585) ~[demo:na]\n        at java.base@17.0.6/java.lang.Class.getConstructor(DynamicHub.java:2271) ~[demo:na]\n        at io.netty.channel.ReflectiveChannelFactory.&lt;init&gt;(ReflectiveChannelFactory.java:34) ~[na:na]\n        ... 32 common frames omitted\n\"><pre class=\"notranslate\"><code class=\"notranslate\">org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'lettuceClientResources': Instantiation of supplied bean failed\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.obtainInstanceFromSupplier(AbstractAutowireCapableBeanFactory.java:1237) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.obtainFromSupplier(AbstractAutowireCapableBeanFactory.java:1211) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1158) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[demo:6.0.5]\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:961) ~[demo:6.0.5]\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:917) ~[demo:6.0.5]\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584) ~[demo:6.0.5]\n        at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66) ~[demo:3.0.3]\n        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:732) ~[demo:3.0.3]\n        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:434) ~[demo:3.0.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:310) ~[demo:3.0.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1304) ~[demo:3.0.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1293) ~[demo:3.0.3]\n        at com.example.demo.DemoApplication.main(DemoApplication.java:10) ~[demo:na]\nCaused by: java.lang.ExceptionInInitializerError: null\n        at io.lettuce.core.resource.AddressResolverGroupProvider.&lt;clinit&gt;(AddressResolverGroupProvider.java:35) ~[na:na]\n        at io.lettuce.core.resource.DefaultClientResources.&lt;clinit&gt;(DefaultClientResources.java:112) ~[demo:6.2.3.RELEASE]\n        at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.lettuceClientResources(LettuceConnectionConfiguration.java:71) ~[demo:na]\n        at org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration__BeanDefinitions.lambda$getLettuceClientResourcesInstanceSupplier$1(LettuceConnectionConfiguration__BeanDefinitions.java:41) ~[na:na]\n        at org.springframework.util.function.ThrowingBiFunction.apply(ThrowingBiFunction.java:68) ~[demo:6.0.5]\n        at org.springframework.util.function.ThrowingBiFunction.apply(ThrowingBiFunction.java:54) ~[demo:6.0.5]\n        at org.springframework.beans.factory.aot.BeanInstanceSupplier.lambda$get$2(BeanInstanceSupplier.java:208) ~[na:na]\n        at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:59) ~[demo:6.0.5]\n        at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:47) ~[demo:6.0.5]\n        at org.springframework.beans.factory.aot.BeanInstanceSupplier.invokeBeanSupplier(BeanInstanceSupplier.java:220) ~[na:na]\n        at org.springframework.beans.factory.aot.BeanInstanceSupplier.get(BeanInstanceSupplier.java:208) ~[na:na]\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.obtainInstanceFromSupplier(AbstractAutowireCapableBeanFactory.java:1226) ~[demo:6.0.5]\n        ... 18 common frames omitted\nCaused by: java.lang.IllegalArgumentException: Class EpollDatagramChannel does not have a public non-arg constructor\n        at io.netty.channel.ReflectiveChannelFactory.&lt;init&gt;(ReflectiveChannelFactory.java:36) ~[na:na]\n        at io.netty.resolver.dns.DnsNameResolverBuilder.channelType(DnsNameResolverBuilder.java:120) ~[na:na]\n        at io.lettuce.core.resource.AddressResolverGroupProvider$DefaultDnsAddressResolverGroupWrapper.&lt;clinit&gt;(AddressResolverGroupProvider.java:57) ~[na:na]\n        ... 30 common frames omitted\nCaused by: java.lang.NoSuchMethodException: io.netty.channel.epoll.EpollDatagramChannel.&lt;init&gt;()\n        at java.base@17.0.6/java.lang.Class.getConstructor0(DynamicHub.java:3585) ~[demo:na]\n        at java.base@17.0.6/java.lang.Class.getConstructor(DynamicHub.java:2271) ~[demo:na]\n        at io.netty.channel.ReflectiveChannelFactory.&lt;init&gt;(ReflectiveChannelFactory.java:34) ~[na:na]\n        ... 32 common frames omitted\n\n</code></pre></div>\n<p dir=\"auto\">Add a reflect-config.json can solve this error which content like this:</p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"[\n  {\n    &quot;condition&quot;: {\n      &quot;typeReachable&quot;: &quot;io.netty.channel.epoll.Native&quot;\n    },\n    &quot;name&quot;:&quot;io.netty.channel.epoll.EpollDatagramChannel&quot;,\n    &quot;allDeclaredConstructors&quot;: true\n  }\n]\"><pre class=\"notranslate\">[\n  {\n    <span class=\"pl-ent\">\"condition\"</span>: {\n      <span class=\"pl-ent\">\"typeReachable\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>io.netty.channel.epoll.Native<span class=\"pl-pds\">\"</span></span>\n    },\n    <span class=\"pl-ent\">\"name\"</span>:<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>io.netty.channel.epoll.EpollDatagramChannel<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"allDeclaredConstructors\"</span>: <span class=\"pl-c1\">true</span>\n  }\n]</pre></div>",
                "resourcePath": "/spring-projects/spring-data-redis/issues/2527",
                "createdAt": "2023-03-14T10:55:22Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "for: external-project"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Connect without password if server returns NO_AUTH when using Socks5",
        "url": "https://github.com/netty/netty/pull/13298",
        "resourcePath": "/netty/netty/pull/13298",
        "createdAt": "2023-03-24T14:34:56Z",
        "number": 13298,
        "mergeCommit": {
          "oid": "34047463cf3a51fbbf071e8acd57c99cd4b333c4",
          "message": "Connect without password if server returns NO_AUTH when using Socks5 (#13298)\n\nMotivation:\r\n\r\nWhen the server response with NO_AUTH we should just connect directly and not use a password at all in all cases\r\n\r\nModifications:\r\n\r\n- Connect without password if the server tells jus to do so.\r\n- Add unit test\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13287",
          "commitUrl": "https://github.com/netty/netty/commit/34047463cf3a51fbbf071e8acd57c99cd4b333c4",
          "parents": {
            "nodes": [
              {
                "oid": "44b7e5b12d8dff3d07dfb773680120cc20f7e203",
                "message": "Build on JDK20 during PR verification (#13295)\n\n\r\nMotivation:\r\n\r\nJDK20 was released so we should try to build with it for PRs\r\n\r\nModifications:\r\n\r\n- Replace CI job that uses JDK19 with JDK20\r\n- Add profiles for JDK20\r\n- Use reflection in OpenJdkSelfSignedCertGenerator to be able to build on JDK20 as well\r\n\r\nResult:\r\n\r\nVerify PRs with latest JDK"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler-proxy/src/main/java/io/netty/handler/proxy/Socks5ProxyHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler-proxy/src/test/java/io/netty/handler/proxy/ProxyHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85M1wr52gAoMDVhYTdhNzg3YjU5NGZlOTY5NTk5MGFjNjMxODBjZDU5N2IwNTEzNw",
                "url": "https://github.com/netty/netty/pull/13298/commits/05aa7a787b594fe9695990ac63180cd597b05137"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13287,
                "url": "https://github.com/netty/netty/issues/13287",
                "title": "Socks5ProxyHandler May need repair",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">client send username and password, but server authMethod is NO_AUTH; connect success</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">can not connected, fail</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/43597696/226239413-a5103792-4606-4626-b47c-6df86670e3d7.jpg\"><img src=\"https://user-images.githubusercontent.com/43597696/226239413-a5103792-4606-4626-b47c-6df86670e3d7.jpg\" alt=\"img_v2_0273bdb3-318d-46bf-8788-602e9116149g\" style=\"max-width: 100%;\"></a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/43597696/226239418-a32d9fdc-0098-4ba9-b97a-1d5f02e48174.jpg\"><img src=\"https://user-images.githubusercontent.com/43597696/226239418-a32d9fdc-0098-4ba9-b97a-1d5f02e48174.jpg\" alt=\"img_v2_3011d3eb-3b79-44b6-99cf-89087dddf77g\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">all</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">jdk8</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/13287",
                "createdAt": "2023-03-20T03:20:54Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "NetUtil should be able to handle -Djava.net.preferIPv6Addresses=syste\u2026",
        "url": "https://github.com/netty/netty/pull/13301",
        "resourcePath": "/netty/netty/pull/13301",
        "createdAt": "2023-03-27T14:18:28Z",
        "number": 13301,
        "mergeCommit": {
          "oid": "ea1af147cf41b33933f313678102ea5fd9d72e15",
          "message": "NetUtil should be able to handle -Djava.net.preferIPv6Addresses=system without logging an error (#13301)\n\nMotivation:\r\n\r\nSince java11 its supported to use \"system\" as a value for -Djava.net.preferIPv6Addresses.\r\n\r\nModifications:\r\n\r\nJust fallback to \"false\" if -Djava.net.preferIPv6Addresses is not \"true\" without logging an error\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13300",
          "commitUrl": "https://github.com/netty/netty/commit/ea1af147cf41b33933f313678102ea5fd9d72e15",
          "parents": {
            "nodes": [
              {
                "oid": "34047463cf3a51fbbf071e8acd57c99cd4b333c4",
                "message": "Connect without password if server returns NO_AUTH when using Socks5 (#13298)\n\nMotivation:\r\n\r\nWhen the server response with NO_AUTH we should just connect directly and not use a password at all in all cases\r\n\r\nModifications:\r\n\r\n- Connect without password if the server tells jus to do so.\r\n- Add unit test\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13287"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/NetUtil.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85M-ep52gAoMzgzNDE3YTAwZjU3Nzg5M2FlMDQzODA5ODYwYzgxYTE4Yzg1NzY4Yw",
                "url": "https://github.com/netty/netty/pull/13301/commits/383417a00f577893ae043809860c81a18c85768c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13300,
                "url": "https://github.com/netty/netty/issues/13300",
                "title": "Missing support for java.net.preferIPv6Addresses=system  (OpenJDK 11)",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">OpenJDK 11 allows specifying</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.net.preferIPv6Addresses=system\"><pre class=\"notranslate\"><code class=\"notranslate\">java.net.preferIPv6Addresses=system\n</code></pre></div>\n<p dir=\"auto\"><a href=\"https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/net/InetAddress.java\">https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/net/InetAddress.java</a></p>\n<p dir=\"auto\">So setting it this way should be supported.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"grep 'preferIPv6Addresses' /usr/share/dcache/defaults/*\n/usr/share/dcache/defaults/dcache.properties:    -Djava.net.preferIPv6Addresses=system \\\"><pre class=\"notranslate\"><code class=\"notranslate\">grep 'preferIPv6Addresses' /usr/share/dcache/defaults/*\n/usr/share/dcache/defaults/dcache.properties:    -Djava.net.preferIPv6Addresses=system \\\n</code></pre></div>\n<p dir=\"auto\">results in</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[] Unable to parse the boolean system property 'java.net.preferIPv6Addresses':system - using the default value: false\"><pre class=\"notranslate\"><code class=\"notranslate\">[] Unable to parse the boolean system property 'java.net.preferIPv6Addresses':system - using the default value: false\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Start the JVM with this property set to <code class=\"notranslate\">system</code></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.77.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java -version \nopenjdk version &quot;11.0.14.1&quot; 2022-02-08 LTS\nOpenJDK Runtime Environment 18.9 (build 11.0.14.1+1-LTS)\nOpenJDK 64-Bit Server VM 18.9 (build 11.0.14.1+1-LTS, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">java -version \nopenjdk version \"11.0.14.1\" 2022-02-08 LTS\nOpenJDK Runtime Environment 18.9 (build 11.0.14.1+1-LTS)\nOpenJDK 64-Bit Server VM 18.9 (build 11.0.14.1+1-LTS, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Linux cmsdcadisk01new.fnal.gov 3.10.0-1160.81.1.el7.x86_64 #1 SMP Tue Dec 13 09:53:21 CST 2022 x86_64 x86_64 x86_64 GNU/Linux\"><pre class=\"notranslate\"><code class=\"notranslate\">Linux cmsdcadisk01new.fnal.gov 3.10.0-1160.81.1.el7.x86_64 #1 SMP Tue Dec 13 09:53:21 CST 2022 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre></div>\n<p dir=\"auto\">It would seem that the internal <code class=\"notranslate\">getBoolean</code> method defeats this</p>\n<p dir=\"auto\"><a href=\"http://www.java2s.com/example/java-src/pkg/io/netty/util/internal/systempropertyutil-86905.html\" rel=\"nofollow\">http://www.java2s.com/example/java-src/pkg/io/netty/util/internal/systempropertyutil-86905.html</a></p>",
                "resourcePath": "/netty/netty/issues/13300",
                "createdAt": "2023-03-27T12:24:24Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use optional resolution of sun.net.dns",
        "url": "https://github.com/netty/netty/pull/13303",
        "resourcePath": "/netty/netty/pull/13303",
        "createdAt": "2023-03-28T08:21:12Z",
        "number": 13303,
        "mergeCommit": {
          "oid": "cf5c467f4ead5ba5e1e36f5c4903af78bd49c35c",
          "message": "Use optional resolution of sun.net.dns (#13303)\n\nMotivation:\r\n\r\nTo be able to use our DNS resolver with OSGI we should use an optional resolution of sun.net.dns\r\n\r\nModifications:\r\n\r\nAdd config to pom.xml\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13297",
          "commitUrl": "https://github.com/netty/netty/commit/cf5c467f4ead5ba5e1e36f5c4903af78bd49c35c",
          "parents": {
            "nodes": [
              {
                "oid": "ea1af147cf41b33933f313678102ea5fd9d72e15",
                "message": "NetUtil should be able to handle -Djava.net.preferIPv6Addresses=system without logging an error (#13301)\n\nMotivation:\r\n\r\nSince java11 its supported to use \"system\" as a value for -Djava.net.preferIPv6Addresses.\r\n\r\nModifications:\r\n\r\nJust fallback to \"false\" if -Djava.net.preferIPv6Addresses is not \"true\" without logging an error\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13300"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85NCs7A2gAoNzU1MmFlNDA5YWQ3YTg0MGRkMzA4YzFlZmIwYThkZmQ3ODc2MTk5Zg",
                "url": "https://github.com/netty/netty/pull/13303/commits/7552ae409ad7a840dd308c1efb0a8dfd7876199f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13297,
                "url": "https://github.com/netty/netty/issues/13297",
                "title": "Netty/Resolver/DNS \u00bb 4.1.87.Final requires sun.net.dns",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Netty starts up in a OSGI environment on Java 8</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Issues resolving sun.net.dns in that environment.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Try to start Netty in an OSGI environment with Java 8</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.87.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">1.8.0_362 25.362-b09 (Azul Zulu)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\"><code class=\"notranslate\">4.18.0-425.10.1.el8_7.x86_64 #1 SMP Wed Dec 14 16:00:01 EST 2022 x86_64 x86_64 x86_64 GNU/Linux </code></p>\n<p dir=\"auto\">Error in Application Log</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.apache.felix.resolver.reason.ReasonException: Unable to resolve root: missing requirement [root] osgi.identity; osgi.identity=thirdparty-netty; type=karaf.feature; version=0; filter:=&quot;(&amp;(osgi.identity=thirdparty-netty)(type=karaf.feature)(version&gt;=0.0.0))&quot; [caused by: Unable to resolve thirdparty-netty/4.1.90.Final: missing requirement [thirdparty-netty/4.1.90.Final] osgi.identity; osgi.identity=io.netty.resolver-dns; type=osgi.bundle; version=&quot;[4.1.90.Final,4.1.90.Final]&quot;; resolution:=mandatory [caused by: Unable to resolve io.netty.resolver-dns [33](R 33.0): missing requirement [io.netty.resolver-dns [33](R 33.0)] osgi.wiring.package; (osgi.wiring.package=sun.net.dns)]]\n\tat org.apache.felix.resolver.Candidates$MissingRequirementError.toException(Candidates.java:1343)\n\tat org.apache.felix.resolver.ResolverImpl.doResolve(ResolverImpl.java:392)\n\tat org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:378)\n\tat org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:332)\n\tat org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:257)\n\tat org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:401)\n\tat org.apache.karaf.features.internal.service.Deployer.handlePrerequisites(Deployer.java:1124)\n\tat org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:396)\n\tat org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1063)\n\tat org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$13(FeaturesServiceImpl.java:998)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\nCaused by: org.apache.felix.resolver.reason.ReasonException: Unable to resolve thirdparty-netty/4.1.90.Final: missing requirement [thirdparty-netty/4.1.90.Final] osgi.identity; osgi.identity=io.netty.resolver-dns; type=osgi.bundle; version=&quot;[4.1.90.Final,4.1.90.Final]&quot;; resolution:=mandatory [caused by: Unable to resolve io.netty.resolver-dns [33](R 33.0): missing requirement [io.netty.resolver-dns [33](R 33.0)] osgi.wiring.package; (osgi.wiring.package=sun.net.dns)]\n\tat org.apache.felix.resolver.Candidates$MissingRequirementError.toException(Candidates.java:1343)\n\t... 14 more\nCaused by: org.apache.felix.resolver.reason.ReasonException: Unable to resolve io.netty.resolver-dns [33](R 33.0): missing requirement [io.netty.resolver-dns [33](R 33.0)] osgi.wiring.package; (osgi.wiring.package=sun.net.dns)\n\tat org.apache.felix.resolver.Candidates$MissingRequirementError.toException(Candidates.java:1343)\n\t... 15 more\n\"><pre class=\"notranslate\"><code class=\"notranslate\">org.apache.felix.resolver.reason.ReasonException: Unable to resolve root: missing requirement [root] osgi.identity; osgi.identity=thirdparty-netty; type=karaf.feature; version=0; filter:=\"(&amp;(osgi.identity=thirdparty-netty)(type=karaf.feature)(version&gt;=0.0.0))\" [caused by: Unable to resolve thirdparty-netty/4.1.90.Final: missing requirement [thirdparty-netty/4.1.90.Final] osgi.identity; osgi.identity=io.netty.resolver-dns; type=osgi.bundle; version=\"[4.1.90.Final,4.1.90.Final]\"; resolution:=mandatory [caused by: Unable to resolve io.netty.resolver-dns [33](R 33.0): missing requirement [io.netty.resolver-dns [33](R 33.0)] osgi.wiring.package; (osgi.wiring.package=sun.net.dns)]]\n\tat org.apache.felix.resolver.Candidates$MissingRequirementError.toException(Candidates.java:1343)\n\tat org.apache.felix.resolver.ResolverImpl.doResolve(ResolverImpl.java:392)\n\tat org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:378)\n\tat org.apache.felix.resolver.ResolverImpl.resolve(ResolverImpl.java:332)\n\tat org.apache.karaf.features.internal.region.SubsystemResolver.resolve(SubsystemResolver.java:257)\n\tat org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:401)\n\tat org.apache.karaf.features.internal.service.Deployer.handlePrerequisites(Deployer.java:1124)\n\tat org.apache.karaf.features.internal.service.Deployer.deploy(Deployer.java:396)\n\tat org.apache.karaf.features.internal.service.FeaturesServiceImpl.doProvision(FeaturesServiceImpl.java:1063)\n\tat org.apache.karaf.features.internal.service.FeaturesServiceImpl.lambda$doProvisionInThread$13(FeaturesServiceImpl.java:998)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\nCaused by: org.apache.felix.resolver.reason.ReasonException: Unable to resolve thirdparty-netty/4.1.90.Final: missing requirement [thirdparty-netty/4.1.90.Final] osgi.identity; osgi.identity=io.netty.resolver-dns; type=osgi.bundle; version=\"[4.1.90.Final,4.1.90.Final]\"; resolution:=mandatory [caused by: Unable to resolve io.netty.resolver-dns [33](R 33.0): missing requirement [io.netty.resolver-dns [33](R 33.0)] osgi.wiring.package; (osgi.wiring.package=sun.net.dns)]\n\tat org.apache.felix.resolver.Candidates$MissingRequirementError.toException(Candidates.java:1343)\n\t... 14 more\nCaused by: org.apache.felix.resolver.reason.ReasonException: Unable to resolve io.netty.resolver-dns [33](R 33.0): missing requirement [io.netty.resolver-dns [33](R 33.0)] osgi.wiring.package; (osgi.wiring.package=sun.net.dns)\n\tat org.apache.felix.resolver.Candidates$MissingRequirementError.toException(Candidates.java:1343)\n\t... 15 more\n\n</code></pre></div>\n<p dir=\"auto\">MANIFEST.MF from 4.1.85.Final</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Manifest-Version: 1.0\nImplementation-Title: Netty/Resolver/DNS\nBundle-Description: Netty is an asynchronous event-driven network appl\n ication framework for    rapid development of maintainable high perfo\n rmance protocol servers and    clients.\nAutomatic-Module-Name: io.netty.resolver.dns\nBundle-License: https://www.apache.org/licenses/LICENSE-2.0\nBundle-SymbolicName: io.netty.resolver-dns\nImplementation-Version: 4.1.85.Final\nBuilt-By: chris\nBnd-LastModified: 1668019079041\nBundle-ManifestVersion: 2\nImplementation-Vendor-Id: io.netty\nBundle-DocURL: https://netty.io/\nBundle-Vendor: The Netty Project\nImport-Package: io.netty.bootstrap;version=&quot;[4.1,5)&quot;,io.netty.buffer;v\n ersion=&quot;[4.1,5)&quot;,io.netty.channel;version=&quot;[4.1,5)&quot;,io.netty.channel.\n socket;version=&quot;[4.1,5)&quot;,io.netty.handler.codec;version=&quot;[4.1,5)&quot;,io.\n netty.handler.codec.dns;version=&quot;[4.1,5)&quot;,io.netty.handler.logging;ve\n rsion=&quot;[4.1,5)&quot;,io.netty.resolver,io.netty.util;version=&quot;[4.1,5)&quot;,io.\n netty.util.collection;version=&quot;[4.1,5)&quot;,io.netty.util.concurrent;vers\n ion=&quot;[4.1,5)&quot;,io.netty.util.internal;version=&quot;[4.1,5)&quot;,io.netty.util.\n internal.logging;version=&quot;[4.1,5)&quot;,javax.naming,javax.naming.director\n y,sun.nio.ch;resolution:=optional,org.eclipse.jetty.npn;version=&quot;[1,2\n )&quot;;resolution:=optional,org.eclipse.jetty.alpn;version=&quot;[1,2)&quot;;resolu\n tion:=optional\nRequire-Capability: osgi.ee;filter:=&quot;(&amp;(osgi.ee=JavaSE)(version=1.6))&quot;\nTool: Bnd-2.4.1.201501161923\nImplementation-Vendor: The Netty Project\nExport-Package: io.netty.resolver.dns;uses:=&quot;io.netty.channel,io.netty\n .channel.socket,io.netty.handler.codec.dns,io.netty.handler.logging,i\n o.netty.resolver,io.netty.util.concurrent&quot;;version=&quot;4.1.85&quot;\nBundle-Name: Netty/Resolver/DNS\nBundle-Version: 4.1.85.Final\nCreated-By: Apache Maven Bundle Plugin\nBuild-Jdk: 1.8.0_312\nImplementation-URL: https://netty.io/netty-resolver-dns/\"><pre class=\"notranslate\"><code class=\"notranslate\">Manifest-Version: 1.0\nImplementation-Title: Netty/Resolver/DNS\nBundle-Description: Netty is an asynchronous event-driven network appl\n ication framework for    rapid development of maintainable high perfo\n rmance protocol servers and    clients.\nAutomatic-Module-Name: io.netty.resolver.dns\nBundle-License: https://www.apache.org/licenses/LICENSE-2.0\nBundle-SymbolicName: io.netty.resolver-dns\nImplementation-Version: 4.1.85.Final\nBuilt-By: chris\nBnd-LastModified: 1668019079041\nBundle-ManifestVersion: 2\nImplementation-Vendor-Id: io.netty\nBundle-DocURL: https://netty.io/\nBundle-Vendor: The Netty Project\nImport-Package: io.netty.bootstrap;version=\"[4.1,5)\",io.netty.buffer;v\n ersion=\"[4.1,5)\",io.netty.channel;version=\"[4.1,5)\",io.netty.channel.\n socket;version=\"[4.1,5)\",io.netty.handler.codec;version=\"[4.1,5)\",io.\n netty.handler.codec.dns;version=\"[4.1,5)\",io.netty.handler.logging;ve\n rsion=\"[4.1,5)\",io.netty.resolver,io.netty.util;version=\"[4.1,5)\",io.\n netty.util.collection;version=\"[4.1,5)\",io.netty.util.concurrent;vers\n ion=\"[4.1,5)\",io.netty.util.internal;version=\"[4.1,5)\",io.netty.util.\n internal.logging;version=\"[4.1,5)\",javax.naming,javax.naming.director\n y,sun.nio.ch;resolution:=optional,org.eclipse.jetty.npn;version=\"[1,2\n )\";resolution:=optional,org.eclipse.jetty.alpn;version=\"[1,2)\";resolu\n tion:=optional\nRequire-Capability: osgi.ee;filter:=\"(&amp;(osgi.ee=JavaSE)(version=1.6))\"\nTool: Bnd-2.4.1.201501161923\nImplementation-Vendor: The Netty Project\nExport-Package: io.netty.resolver.dns;uses:=\"io.netty.channel,io.netty\n .channel.socket,io.netty.handler.codec.dns,io.netty.handler.logging,i\n o.netty.resolver,io.netty.util.concurrent\";version=\"4.1.85\"\nBundle-Name: Netty/Resolver/DNS\nBundle-Version: 4.1.85.Final\nCreated-By: Apache Maven Bundle Plugin\nBuild-Jdk: 1.8.0_312\nImplementation-URL: https://netty.io/netty-resolver-dns/\n</code></pre></div>\n<p dir=\"auto\">MANIFEST.MF from 4.1.87.Final</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Manifest-Version: 1.0\nImplementation-Title: Netty/Resolver/DNS\nBundle-Description: Netty is an asynchronous event-driven network appl\n ication framework for    rapid development of maintainable high perfo\n rmance protocol servers and    clients.\nAutomatic-Module-Name: io.netty.resolver.dns\nBundle-License: https://www.apache.org/licenses/LICENSE-2.0\nBundle-SymbolicName: io.netty.resolver-dns\nImplementation-Version: 4.1.87.Final\nBuilt-By: norman\nBnd-LastModified: 1673539407305\nBundle-ManifestVersion: 2\nImplementation-Vendor-Id: io.netty\nBundle-DocURL: https://netty.io/\nBundle-Vendor: The Netty Project\nImport-Package: io.netty.bootstrap;version=&quot;[4.1,5)&quot;,io.netty.buffer;v\n ersion=&quot;[4.1,5)&quot;,io.netty.channel;version=&quot;[4.1,5)&quot;,io.netty.channel.\n socket;version=&quot;[4.1,5)&quot;,io.netty.handler.codec;version=&quot;[4.1,5)&quot;,io.\n netty.handler.codec.dns;version=&quot;[4.1,5)&quot;,io.netty.handler.logging;ve\n rsion=&quot;[4.1,5)&quot;,io.netty.resolver;version=&quot;[4.1,5)&quot;,io.netty.util;ver\n sion=&quot;[4.1,5)&quot;,io.netty.util.collection;version=&quot;[4.1,5)&quot;,io.netty.ut\n il.concurrent;version=&quot;[4.1,5)&quot;,io.netty.util.internal;version=&quot;[4.1,\n 5)&quot;,io.netty.util.internal.logging;version=&quot;[4.1,5)&quot;,javax.naming,jav\n ax.naming.directory,sun.net.dns,sun.nio.ch;resolution:=optional,org.e\n clipse.jetty.npn;version=&quot;[1,2)&quot;;resolution:=optional,org.eclipse.jet\n ty.alpn;version=&quot;[1,2)&quot;;resolution:=optional\nRequire-Capability: osgi.ee;filter:=&quot;(&amp;(osgi.ee=JavaSE)(version=1.6))&quot;\nTool: Bnd-6.3.1.202206071316\nImplementation-Vendor: The Netty Project\nExport-Package: io.netty.resolver.dns;uses:=&quot;io.netty.channel,io.netty\n .channel.socket,io.netty.handler.codec.dns,io.netty.handler.logging,i\n o.netty.resolver,io.netty.util.concurrent&quot;;version=&quot;4.1.87&quot;\nBundle-Name: Netty/Resolver/DNS\nBundle-Version: 4.1.87.Final\nBuild-Jdk-Spec: 1.8\nCreated-By: Apache Maven Bundle Plugin 5.1.8\nBuild-Jdk: 1.8.0_252\nImplementation-URL: https://netty.io/netty-resolver-dns/\"><pre class=\"notranslate\"><code class=\"notranslate\">Manifest-Version: 1.0\nImplementation-Title: Netty/Resolver/DNS\nBundle-Description: Netty is an asynchronous event-driven network appl\n ication framework for    rapid development of maintainable high perfo\n rmance protocol servers and    clients.\nAutomatic-Module-Name: io.netty.resolver.dns\nBundle-License: https://www.apache.org/licenses/LICENSE-2.0\nBundle-SymbolicName: io.netty.resolver-dns\nImplementation-Version: 4.1.87.Final\nBuilt-By: norman\nBnd-LastModified: 1673539407305\nBundle-ManifestVersion: 2\nImplementation-Vendor-Id: io.netty\nBundle-DocURL: https://netty.io/\nBundle-Vendor: The Netty Project\nImport-Package: io.netty.bootstrap;version=\"[4.1,5)\",io.netty.buffer;v\n ersion=\"[4.1,5)\",io.netty.channel;version=\"[4.1,5)\",io.netty.channel.\n socket;version=\"[4.1,5)\",io.netty.handler.codec;version=\"[4.1,5)\",io.\n netty.handler.codec.dns;version=\"[4.1,5)\",io.netty.handler.logging;ve\n rsion=\"[4.1,5)\",io.netty.resolver;version=\"[4.1,5)\",io.netty.util;ver\n sion=\"[4.1,5)\",io.netty.util.collection;version=\"[4.1,5)\",io.netty.ut\n il.concurrent;version=\"[4.1,5)\",io.netty.util.internal;version=\"[4.1,\n 5)\",io.netty.util.internal.logging;version=\"[4.1,5)\",javax.naming,jav\n ax.naming.directory,sun.net.dns,sun.nio.ch;resolution:=optional,org.e\n clipse.jetty.npn;version=\"[1,2)\";resolution:=optional,org.eclipse.jet\n ty.alpn;version=\"[1,2)\";resolution:=optional\nRequire-Capability: osgi.ee;filter:=\"(&amp;(osgi.ee=JavaSE)(version=1.6))\"\nTool: Bnd-6.3.1.202206071316\nImplementation-Vendor: The Netty Project\nExport-Package: io.netty.resolver.dns;uses:=\"io.netty.channel,io.netty\n .channel.socket,io.netty.handler.codec.dns,io.netty.handler.logging,i\n o.netty.resolver,io.netty.util.concurrent\";version=\"4.1.87\"\nBundle-Name: Netty/Resolver/DNS\nBundle-Version: 4.1.87.Final\nBuild-Jdk-Spec: 1.8\nCreated-By: Apache Maven Bundle Plugin 5.1.8\nBuild-Jdk: 1.8.0_252\nImplementation-URL: https://netty.io/netty-resolver-dns/\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/13297",
                "createdAt": "2023-03-24T13:02:58Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Update: Add snappy support on HttpContentDecoder",
        "url": "https://github.com/netty/netty/pull/13312",
        "resourcePath": "/netty/netty/pull/13312",
        "createdAt": "2023-03-30T19:36:44Z",
        "number": 13312,
        "mergeCommit": {
          "oid": "cd540193b98e1ffb9cdaaf2629e4a6d28665a2c5",
          "message": "Update: Add snappy support on HttpContentDecoder (#13312)\n\n\r\nMotivation:\r\nI want to allow logstash http input to be able to read snappy compressed\r\ndata.\r\n\r\nModifications:\r\nTo allow the HttpContentDecoder to support snappy it created a new\r\ncontrol flow to test for snappy content encoding.\r\n\r\nIf it is present, we are using a specific snappy decompressor to read\r\nthe data.\r\n\r\nIn order to make sure it was working I also included a e2e test on the\r\nbehaior of HttpContentDecoder.\r\n\r\nResult:\r\nWe should be able to send snappy traffic to a server using\r\nHttpContentDocder and be ale to uncompresse the traffic.\r\n\r\nCo-authored-by: Aayush Atharva <hyperx.pro@outlook.com>\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/cd540193b98e1ffb9cdaaf2629e4a6d28665a2c5",
          "parents": {
            "nodes": [
              {
                "oid": "76d83fe21295dba4dea7b18aa0cc92681eeed232",
                "message": "Handle EHOSTUNREACH errors in io.netty.channel.unix.Errors (#13317) (#13318)\n\nMotivation:\r\n\r\n    We should throw a NoRouteToHostException when a socket connection fails with EHOSTUNREACH in the same way as\r\n    ENETUNREACH.\r\n\r\n    Modifications:\r\n\r\n    Add handling for EHOSTUNREACH\r\n\r\n    Result:\r\n\r\n    Correct exception is thrown."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecompressor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaderValues.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpContentDecoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85NSt292gAoODllMDg3MDgyNmIwYTMzOWFmMDIzNjIwOThiN2ExY2U4NWRhNDBlNA",
                "url": "https://github.com/netty/netty/pull/13312/commits/89e0870826b0a339af02362098b7a1ce85da40e4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13307,
                "url": "https://github.com/netty/netty/issues/13307",
                "title": "Extend decompression of HttpContentDecompressor.java",
                "bodyHTML": "<h3 dir=\"auto\">Actual behaviour</h3>\n<p dir=\"auto\">At the moment the <a href=\"https://github.com/netty/netty/blob/cf5c467f4ead5ba5e1e36f5c4903af78bd49c35c/codec-http/src/main/java/io/netty/handler/codec/http/HttpContentDecompressor.java#LL58C9-L73\">HttpContentDecompressor.java</a> support:</p>\n<ul dir=\"auto\">\n<li>deflate</li>\n<li>gzip</li>\n<li>brotli</li>\n</ul>\n<p dir=\"auto\">I wonder if we should extend it ?<br>\nI am specifically in need of supporting <code class=\"notranslate\">snappy</code></p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        if (GZIP.contentEqualsIgnoreCase(contentEncoding) ||\n            X_GZIP.contentEqualsIgnoreCase(contentEncoding)) {\n            return new EmbeddedChannel(ctx.channel().id(), ctx.channel().metadata().hasDisconnect(),\n                    ctx.channel().config(), ZlibCodecFactory.newZlibDecoder(ZlibWrapper.GZIP));\n        }\n        if (DEFLATE.contentEqualsIgnoreCase(contentEncoding) ||\n            X_DEFLATE.contentEqualsIgnoreCase(contentEncoding)) {\n            final ZlibWrapper wrapper = strict ? ZlibWrapper.ZLIB : ZlibWrapper.ZLIB_OR_NONE;\n            // To be strict, 'deflate' means ZLIB, but some servers were not implemented correctly.\n            return new EmbeddedChannel(ctx.channel().id(), ctx.channel().metadata().hasDisconnect(),\n                    ctx.channel().config(), ZlibCodecFactory.newZlibDecoder(wrapper));\n        }\n        if (Brotli.isAvailable() &amp;&amp; BR.contentEqualsIgnoreCase(contentEncoding)) {\n            return new EmbeddedChannel(ctx.channel().id(), ctx.channel().metadata().hasDisconnect(),\n              ctx.channel().config(), new BrotliDecoder());\n        }\"><pre class=\"notranslate\">        <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">GZIP</span>.<span class=\"pl-en\">contentEqualsIgnoreCase</span>(<span class=\"pl-s1\">contentEncoding</span>) ||\n            <span class=\"pl-smi\">X_GZIP</span>.<span class=\"pl-en\">contentEqualsIgnoreCase</span>(<span class=\"pl-s1\">contentEncoding</span>)) {\n            <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">EmbeddedChannel</span>(<span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">id</span>(), <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">metadata</span>().<span class=\"pl-en\">hasDisconnect</span>(),\n                    <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">config</span>(), <span class=\"pl-smi\">ZlibCodecFactory</span>.<span class=\"pl-en\">newZlibDecoder</span>(<span class=\"pl-smi\">ZlibWrapper</span>.<span class=\"pl-c1\">GZIP</span>));\n        }\n        <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">DEFLATE</span>.<span class=\"pl-en\">contentEqualsIgnoreCase</span>(<span class=\"pl-s1\">contentEncoding</span>) ||\n            <span class=\"pl-smi\">X_DEFLATE</span>.<span class=\"pl-en\">contentEqualsIgnoreCase</span>(<span class=\"pl-s1\">contentEncoding</span>)) {\n            <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ZlibWrapper</span> <span class=\"pl-s1\">wrapper</span> = <span class=\"pl-s1\">strict</span> ? <span class=\"pl-smi\">ZlibWrapper</span>.<span class=\"pl-c1\">ZLIB</span> : <span class=\"pl-smi\">ZlibWrapper</span>.<span class=\"pl-c1\">ZLIB_OR_NONE</span>;\n            <span class=\"pl-c\">// To be strict, 'deflate' means ZLIB, but some servers were not implemented correctly.</span>\n            <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">EmbeddedChannel</span>(<span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">id</span>(), <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">metadata</span>().<span class=\"pl-en\">hasDisconnect</span>(),\n                    <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">config</span>(), <span class=\"pl-smi\">ZlibCodecFactory</span>.<span class=\"pl-en\">newZlibDecoder</span>(<span class=\"pl-s1\">wrapper</span>));\n        }\n        <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">Brotli</span>.<span class=\"pl-en\">isAvailable</span>() &amp;&amp; <span class=\"pl-smi\">BR</span>.<span class=\"pl-en\">contentEqualsIgnoreCase</span>(<span class=\"pl-s1\">contentEncoding</span>)) {\n            <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">EmbeddedChannel</span>(<span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">id</span>(), <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">metadata</span>().<span class=\"pl-en\">hasDisconnect</span>(),\n              <span class=\"pl-s1\">ctx</span>.<span class=\"pl-en\">channel</span>().<span class=\"pl-en\">config</span>(), <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BrotliDecoder</span>());\n        }</pre></div>\n<p dir=\"auto\">I am opening this issue to talk about that.<br>\nIs it something Netty would be interested in seeing happening ?<br>\nI could be doing the PR if needed.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1</p>",
                "resourcePath": "/netty/netty/issues/13307",
                "createdAt": "2023-03-29T13:52:42Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Handle EHOSTUNREACH errors in io.netty.channel.unix.Errors (#13317)",
        "url": "https://github.com/netty/netty/pull/13318",
        "resourcePath": "/netty/netty/pull/13318",
        "createdAt": "2023-04-02T16:12:48Z",
        "number": 13318,
        "mergeCommit": {
          "oid": "76d83fe21295dba4dea7b18aa0cc92681eeed232",
          "message": "Handle EHOSTUNREACH errors in io.netty.channel.unix.Errors (#13317) (#13318)\n\nMotivation:\r\n\r\n    We should throw a NoRouteToHostException when a socket connection fails with EHOSTUNREACH in the same way as\r\n    ENETUNREACH.\r\n\r\n    Modifications:\r\n\r\n    Add handling for EHOSTUNREACH\r\n\r\n    Result:\r\n\r\n    Correct exception is thrown.",
          "commitUrl": "https://github.com/netty/netty/commit/76d83fe21295dba4dea7b18aa0cc92681eeed232",
          "parents": {
            "nodes": [
              {
                "oid": "e1fad99ee2f7d8cf628d05f28ff8779254f11cc8",
                "message": "`StacklessSSLHandshakeException`: add a short stack-trace (#13315)\n\nMotivation:\r\n\r\nCurrently, `StacklessSSLHandshakeException` doesn't have any stack-trace\r\nwhich makes it harder to understand where it comes from.\r\n\r\nModifications:\r\n\r\n- Add one-line stack-trace using `ThrowableUtil.unknownStackTrace`\r\nutility;\r\n\r\nResult:\r\n\r\nSimilar to `StacklessClosedChannelException`,\r\n`StacklessSSLHandshakeException` always has one-line stack-trace to\r\nindicate where it was originated."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/src/main/c/netty_unix_errors.c"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/src/main/java/io/netty/channel/unix/Errors.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/src/main/java/io/netty/channel/unix/ErrorsStaticallyReferencedJniMethods.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85Nb2Vd2gAoODhhODFhMDkyYWFhYzJjNWY3MTU4MmM4YWQ0OTBhNTQwYjc2OWQxNA",
                "url": "https://github.com/netty/netty/pull/13318/commits/88a81a092aaac2c5f71582c8ad490a540b769d14"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13317,
                "url": "https://github.com/netty/netty/issues/13317",
                "title": "io.netty.channel.unix.Errors should rethrow EHOSTUNREACH as NoRouteToHostException instead of generic ConnectException",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Connecting to an unreachable host should throw a <code class=\"notranslate\">NoRouteToHostException</code></p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Netty throws <code class=\"notranslate\">java.net.ConnectException: finishConnect(..) failed: No route to host</code></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Attempt to connec to an unreachable host</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.90.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">11</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux</p>\n<p dir=\"auto\">The code in <code class=\"notranslate\">io.netty.channel.unix.Errors.newConnectException0()</code> should handle <code class=\"notranslate\">EHOSTUNREACH</code> as it already handles <code class=\"notranslate\">ENETUNREACH</code></p>",
                "resourcePath": "/netty/netty/issues/13317",
                "createdAt": "2023-04-02T16:08:52Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Deprecates LazyRunnable",
        "url": "https://github.com/netty/netty/pull/13336",
        "resourcePath": "/netty/netty/pull/13336",
        "createdAt": "2023-04-17T09:51:25Z",
        "number": 13336,
        "mergeCommit": {
          "oid": "de876d197a945e2b3a4a96b90a65c00611b77806",
          "message": "Deprecates LazyRunnable (#13336)\n\nMotivation:\r\n\r\nType check vs LazyRunnable receive an always-on performance hit for a common operation that users shouldn't pay if they won't use it.\r\n\r\nModifications:\r\n\r\nDeprecates LazyRunnable providing a comment to help\r\nexisting users an alternative mechanism.\r\n\r\nResult:\r\n\r\nFixes #13335\r\n\r\nCo-authored-by: Chris Vest <mr.chrisvest@gmail.com>",
          "commitUrl": "https://github.com/netty/netty/commit/de876d197a945e2b3a4a96b90a65c00611b77806",
          "parents": {
            "nodes": [
              {
                "oid": "1314ede822a4a94be2446042d4b112649ae9ddc7",
                "message": "Pseudo-header with empty value results in RST_STREAM with PROTOCOL_ERROR reason (#13238)\n\nMotivation:\r\nAccording to RFC9113 https://datatracker.ietf.org/doc/html/rfc9113#section-8.3.1\r\nPseudo-header ':path' must not have empty value.\r\n\r\nModifications:\r\n- Extend DefaultHttp2Headers#validateValue with validation for pseudo-header :path\r\n- Add junit test\r\n\r\nResult:\r\nPseudo-header :path with empty value results in RST_STREAM with PROTOCOL_ERROR reason.\r\n\r\nRelated to #13235"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/concurrent/AbstractEventExecutor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/concurrent/SingleThreadEventExecutor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/concurrent/SingleThreadEventExecutorTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/SingleThreadEventLoop.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85OdTSB2gAoYjQ0ZWYzMjNjMDE0OTdmMDJkMjNmYmNjYjUxNDFjYTFlZWViYjlmOQ",
                "url": "https://github.com/netty/netty/pull/13336/commits/b44ef323c01497f02d23fbccb5141ca1eeebb9f9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13335,
                "url": "https://github.com/netty/netty/issues/13335",
                "title": "Deprecates LazyRunnable",
                "bodyHTML": "<p dir=\"auto\"><a href=\"https://ionutbalosin.com/2023/03/jvm-performance-comparison-for-jdk-17/#typecheckbenchmark\" rel=\"nofollow\">https://ionutbalosin.com/2023/03/jvm-performance-comparison-for-jdk-17/#typecheckbenchmark</a> shows how bad currently JITs handle type checking of interfaces not implemented by a concrete type.</p>\n<p dir=\"auto\">I've built an <a href=\"https://github.com/RedHatPerf/type-pollution-agent\">agent</a> that can detect such slow paths and by using it in a <a href=\"https://hyperfoil.io/\" rel=\"nofollow\">https://hyperfoil.io/</a> workload it has reported:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"--------------------------\n5:      io.vertx.core.net.impl.ConnectionBase$$Lambda$281/0x0000000800fd0fc8\nCount:  3065706\nTypes:\n        io.netty.util.concurrent.AbstractEventExecutor$LazyRunnable\nTraces:\n        io.netty.util.concurrent.SingleThreadEventExecutor.execute0(SingleThreadEventExecutor.java:827)\n                class: io.netty.util.concurrent.AbstractEventExecutor$LazyRunnable\n                count: 3065706\n--------------------------\n6:      io.vertx.core.http.impl.Http1xServerConnection$$Lambda$284/0x0000000800fd2330\nCount:  3064004\nTypes:\n        io.netty.util.concurrent.AbstractEventExecutor$LazyRunnable\nTraces:\n        io.netty.util.concurrent.SingleThreadEventExecutor.execute0(SingleThreadEventExecutor.java:827)\n                class: io.netty.util.concurrent.AbstractEventExecutor$LazyRunnable\n                count: 3064004\n--------------------------\"><pre class=\"notranslate\"><code class=\"notranslate\">--------------------------\n5:      io.vertx.core.net.impl.ConnectionBase$$Lambda$281/0x0000000800fd0fc8\nCount:  3065706\nTypes:\n        io.netty.util.concurrent.AbstractEventExecutor$LazyRunnable\nTraces:\n        io.netty.util.concurrent.SingleThreadEventExecutor.execute0(SingleThreadEventExecutor.java:827)\n                class: io.netty.util.concurrent.AbstractEventExecutor$LazyRunnable\n                count: 3065706\n--------------------------\n6:      io.vertx.core.http.impl.Http1xServerConnection$$Lambda$284/0x0000000800fd2330\nCount:  3064004\nTypes:\n        io.netty.util.concurrent.AbstractEventExecutor$LazyRunnable\nTraces:\n        io.netty.util.concurrent.SingleThreadEventExecutor.execute0(SingleThreadEventExecutor.java:827)\n                class: io.netty.util.concurrent.AbstractEventExecutor$LazyRunnable\n                count: 3064004\n--------------------------\n</code></pre></div>\n<p dir=\"auto\">that means that event submission always receive such hit, without providing any benefit for such a common use case.<br>\nI'm sending a PR to deprecate it on Netty 4.1</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/njhill/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/njhill\">@njhill</a> Let me know if you need any more info about the issue</p>",
                "resourcePath": "/netty/netty/issues/13335",
                "createdAt": "2023-04-17T09:45:03Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "cleanup"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Release websocket handshake response if pipeline checks fail",
        "url": "https://github.com/netty/netty/pull/13338",
        "resourcePath": "/netty/netty/pull/13338",
        "createdAt": "2023-04-17T14:42:48Z",
        "number": 13338,
        "mergeCommit": {
          "oid": "f2eca0f4e9bed48e6b139c30d626a9368249942f",
          "message": "Release websocket handshake response if pipeline checks fail (#13338)\n\nMotivation:\r\nThe WebSocketServerHandshaker require that either an HttpRequestDecoder or an HttpServerCodec exist in the pipeline.\r\nIf they do not, we can't send a websocket handshake response.\r\nThe handshake response is allocated prior to the pipeline checks.\r\nTherefor, if the checks fail, we need to release the response before returning the failed future.\r\n\r\nIt might be possible to delay the allocation of the response until after the pipeline checks, but doing so breaks assumptions made by numerous tests.\r\n\r\nModification:\r\nIf the pipeline checks fail, release the handshake response before returning the failed promise.\r\n\r\nResult:\r\nWe no longer leak a buffer in the handshake response if the pipeline checks fail.",
          "commitUrl": "https://github.com/netty/netty/commit/f2eca0f4e9bed48e6b139c30d626a9368249942f",
          "parents": {
            "nodes": [
              {
                "oid": "79af2f2e1db8e89a386b0ca9eeeee8d6d181c5e6",
                "message": "Add support for local and remote addresses on the server for child channels when UDS (#13323)\n\nMotivation:\r\nLocal and remote addresses are not available on the server for child channels when\r\nUnix Domain Sockets is used. There are use cases where one may need this information\r\nin order to collect metrics per local or remote addresses.\r\n\r\nModifications:\r\n- Add JNI code for obtaining local/remote address\r\n- When creating a child channel initialise the local/remote addresses.\r\n- Add junit tests\r\n\r\nResult:\r\nLocal and remote addresses are now available on the server for child channels when\r\nUnix Domain Sockets is used."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/websocketx/WebSocketServerHandshaker.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85OfJNr2gAoZjAyYzg5Y2MxODc2OTM4Y2Q5ZmQ0N2I1MTA2OGRmNmY2MjA4MDgzYg",
                "url": "https://github.com/netty/netty/pull/13338/commits/f02c89cc1876938cd9fd47b51068df6f6208083b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13337,
                "url": "https://github.com/netty/netty/issues/13337",
                "title": "WebSocketServerHandshaker.handshake not call ByteBuf.release()",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">2023-02-08 01:32:25.622 [nioEventLoopGroup-3-11-] ERROR io.netty.util.ResourceLeakDetector - LEAK: ByteBuf.release() was not called before it's garbage-collected. See <a href=\"https://netty.io/wiki/reference-counted-objects.html\" rel=\"nofollow\">https://netty.io/wiki/reference-counted-objects.html</a> for more information.<br>\nRecent access records:<br>\nCreated at:<br>\nio.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:349)<br>\nio.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:187)<br>\nio.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:178)<br>\nio.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:115)<br>\nio.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13.newHandshakeResponse(WebSocketServerHandshaker13.java:143)<br>\nio.netty.handler.codec.http.websocketx.WebSocketServerHandshaker.handshake(WebSocketServerHandshaker.java:194)<br>\nio.netty.handler.codec.http.websocketx.WebSocketServerHandshaker.handshake(WebSocketServerHandshaker.java:169)<br>\ncom.game.netty.handler.WsServerProtocolHandler.lambda$channelRead$0(WsServerProtocolHandler.java:65)</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">public final ChannelFuture handshake(Channel channel, FullHttpRequest req, HttpHeaders responseHeaders, final ChannelPromise promise) {<br>\nif (logger.isDebugEnabled()) {<br>\nlogger.debug(\"{} WebSocket version {} server handshake\", channel, this.version());<br>\n}</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    ChannelPipeline p = channel.pipeline();\n    if (p.get(HttpObjectAggregator.class) != null) {\n        p.remove(HttpObjectAggregator.class);\n    }\n\n    if (p.get(HttpContentCompressor.class) != null) {\n        p.remove(HttpContentCompressor.class);\n    }\n\n    ChannelHandlerContext ctx = p.context(HttpRequestDecoder.class);\n    final String encoderName;\n    if (ctx == null) {\n        ctx = p.context(HttpServerCodec.class);\n        if (ctx == null) {\n            promise.setFailure(new IllegalStateException(&quot;No HttpDecoder and no HttpServerCodec in the pipeline&quot;));\n            return promise;\n        }\n\n        p.addBefore(ctx.name(), &quot;wsencoder&quot;, this.newWebSocketEncoder());\n        p.addBefore(ctx.name(), &quot;wsdecoder&quot;, this.newWebsocketDecoder());\n        encoderName = ctx.name();\n    } else {\n        p.replace(ctx.name(), &quot;wsdecoder&quot;, this.newWebsocketDecoder());\n        encoderName = p.context(HttpResponseEncoder.class).name();\n        p.addBefore(encoderName, &quot;wsencoder&quot;, this.newWebSocketEncoder());\n    }\n\n    FullHttpResponse response = this.newHandshakeResponse(req, responseHeaders);\n    channel.writeAndFlush(response).addListener(new ChannelFutureListener() {\n        public void operationComplete(ChannelFuture future) throws Exception {\n            if (future.isSuccess()) {\n                ChannelPipeline p = future.channel().pipeline();\n                p.remove(encoderName);\n                promise.setSuccess();\n            } else {\n                promise.setFailure(future.cause());\n            }\n\n        }\n    });\n   return promise;\"><pre class=\"notranslate\"><code class=\"notranslate\">    ChannelPipeline p = channel.pipeline();\n    if (p.get(HttpObjectAggregator.class) != null) {\n        p.remove(HttpObjectAggregator.class);\n    }\n\n    if (p.get(HttpContentCompressor.class) != null) {\n        p.remove(HttpContentCompressor.class);\n    }\n\n    ChannelHandlerContext ctx = p.context(HttpRequestDecoder.class);\n    final String encoderName;\n    if (ctx == null) {\n        ctx = p.context(HttpServerCodec.class);\n        if (ctx == null) {\n            promise.setFailure(new IllegalStateException(\"No HttpDecoder and no HttpServerCodec in the pipeline\"));\n            return promise;\n        }\n\n        p.addBefore(ctx.name(), \"wsencoder\", this.newWebSocketEncoder());\n        p.addBefore(ctx.name(), \"wsdecoder\", this.newWebsocketDecoder());\n        encoderName = ctx.name();\n    } else {\n        p.replace(ctx.name(), \"wsdecoder\", this.newWebsocketDecoder());\n        encoderName = p.context(HttpResponseEncoder.class).name();\n        p.addBefore(encoderName, \"wsencoder\", this.newWebSocketEncoder());\n    }\n\n    FullHttpResponse response = this.newHandshakeResponse(req, responseHeaders);\n    channel.writeAndFlush(response).addListener(new ChannelFutureListener() {\n        public void operationComplete(ChannelFuture future) throws Exception {\n            if (future.isSuccess()) {\n                ChannelPipeline p = future.channel().pipeline();\n                p.remove(encoderName);\n                promise.setSuccess();\n            } else {\n                promise.setFailure(future.cause());\n            }\n\n        }\n    });\n   return promise;\n</code></pre></div>\n<p dir=\"auto\">}</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.91.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/13337",
                "createdAt": "2023-04-17T14:02:11Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Guard against unbounded grow of suppressed exceptions storage",
        "url": "https://github.com/netty/netty/pull/13351",
        "resourcePath": "/netty/netty/pull/13351",
        "createdAt": "2023-04-21T08:11:57Z",
        "number": 13351,
        "mergeCommit": {
          "oid": "ba1ff7a3c6bad4bddb24da2a6ae6416906dc2e0f",
          "message": "Guard against unbounded grow of suppressed exceptions storage (#13351)\n\n\r\nMotivation:\r\n\r\nWe should guard against unbounded grows of suppressed exceptions in our SSLEngine implementation to prevent possible OOME\r\n\r\nModifications:\r\n\r\n- Check if a suppressed exception was already added for a specific error code before adding it again\r\n- Ensure we always null out pending exception field.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13350",
          "commitUrl": "https://github.com/netty/netty/commit/ba1ff7a3c6bad4bddb24da2a6ae6416906dc2e0f",
          "parents": {
            "nodes": [
              {
                "oid": "c1f8cb0d3ed636a58a82ecde49d6fc05a4dbe26f",
                "message": "Ensure we never read uninitialized memory when handling sockaddr (#13346)\n\nMotivation:\r\n\r\nWe should init the struct to ensure we not end up reading uninitialized memory\r\n\r\nModifications:\r\n\r\nAssign to 0\r\n\r\nResult:\r\n\r\nNo more reading of uninit memory"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/EmptyArrays.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/ThrowableUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85O1ui_2gAoNWY3MWM2MjQ5YWUwZTEzOTQ2MTlkNGExNmIyMTNkMjIzNzk4ODI0OQ",
                "url": "https://github.com/netty/netty/pull/13351/commits/5f71c6249ae0e1394619d4a16b213d2237988249"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13350,
                "url": "https://github.com/netty/netty/issues/13350",
                "title": "OOM in ReferenceCountedOpenSslEngine due to suppressed exceptions accumulating in pendingException",
                "bodyHTML": "<h3 dir=\"auto\">Discussed in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"5111761\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/discussions/13349\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/netty/netty/discussions/13349/hovercard\" href=\"https://github.com/netty/netty/discussions/13349\">#13349</a></h3>\n<div type=\"discussions-op-text\" dir=\"auto\">\n<p dir=\"auto\"><sup>Originally posted by <strong>tkowalcz</strong> April 20, 2023</sup><br>\n<code class=\"notranslate\">ReferenceCountedOpenSslEngine</code> has a <code class=\"notranslate\">pendingException</code> field, it's purpose seems to be to store exceptions, do some cleanup and rethrow them later at a more convenient time. There is also code that appends subsequent exceptions to <code class=\"notranslate\">pendingException</code> as <code class=\"notranslate\">suppressed</code>:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"ThrowableUtil.addSuppressed(pendingException, exception);\"><pre class=\"notranslate\"><span class=\"pl-smi\">ThrowableUtil</span>.<span class=\"pl-en\">addSuppressed</span>(<span class=\"pl-s1\">pendingException</span>, <span class=\"pl-s1\">exception</span>);</pre></div>\n<p dir=\"auto\">In my particular case this led to OOM error where <code class=\"notranslate\">ReferenceCountedOpenSslEngine</code> occupied almost 8gb of heap with 12 million of suppressed exceptions.</p>\n<p dir=\"auto\">Screenshot from Eclipse MAT:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/309611/233486130-9ad57b1b-9d62-417b-96ed-460575faffe6.png\"><img width=\"1046\" alt=\"image\" src=\"https://user-images.githubusercontent.com/309611/233486130-9ad57b1b-9d62-417b-96ed-460575faffe6.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Netty version where this occurred is <code class=\"notranslate\">4.1.53.Final</code>. It does not look like handling these exceptions is different compared to master. We also used <code class=\"notranslate\">netty-tcnative-boringssl-static</code> in version <code class=\"notranslate\">2.0.46.Final</code>.</p>\n<p dir=\"auto\">What might be interesting is that the underlying SSL error is <code class=\"notranslate\">TOO_MANY_KEY_UPDATES</code>. I found <a href=\"https://lists.apache.org/list.html?user@cassandra.apache.org\" rel=\"nofollow\">this report similar</a> but without OOM. Here is the BoringSSL code reporting this error: <a href=\"https://github.com/google/boringssl/blob/bcecc7d834fc44ad257b2f23f88e1cf597ab2736/ssl/tls13_both.cc#L677\">https://github.com/google/boringssl/blob/bcecc7d834fc44ad257b2f23f88e1cf597ab2736/ssl/tls13_both.cc#L677</a>.</p>\n<p dir=\"auto\">I have trouble reproducing <code class=\"notranslate\">TOO_MANY_KEY_UPDATES</code> error. I will appreciate any pointers on how to trigger that, then I'll try to make a reproducer based on master branch.</p></div><p dir=\"auto\"></p>",
                "resourcePath": "/netty/netty/issues/13350",
                "createdAt": "2023-04-21T08:11:03Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Do not throw exception when resolveCache and TTLs are both configured",
        "url": "https://github.com/netty/netty/pull/13386",
        "resourcePath": "/netty/netty/pull/13386",
        "createdAt": "2023-05-17T06:17:45Z",
        "number": 13386,
        "mergeCommit": {
          "oid": "91f484371b8db359bab06df691e2d3d0300a4670",
          "message": "Do not throw exception when resolveCache and TTLs are both configured (#13386)\n\nMotivation:\r\nThe configured `DnsNameResolverBuilder#TTLs` (`minTtl`, `maxTtl` and\r\n`negativeTtl`) are used for creating default `resolveCache`,\r\n`cnameCache` and `authoritativeDnsServerCache`. Configuring a custom\r\n`resolveCache`(or `cnameCache`, or `authoritativeDnsServerCache`) does\r\nnot mean that `TTLs` are not needed anymore for the rest of the caches\r\nthat are not configured. With the current implementation there is no way\r\nfor the user to specify a custom `resolveCache`, but to leave `Netty` to\r\ncreate `cnameCache` and `authoritativeDnsServerCache`.\r\n\r\nModifications:\r\n- `DnsNameResolverBuilder` does not throw `IllegalStateException`, but\r\nlogs when a custom\r\n`resolveCache`/`cnameCache`/`authoritativeDnsServerCache` and `TTLs` are\r\nconfigured, indicating that for the custom\r\n`resolveCache`/`cnameCache`/`authoritativeDnsServerCache`, the `TTLs`\r\nwill be ignored.\r\n- junit tests are added\r\n\r\nResult:\r\nFixes #13384",
          "commitUrl": "https://github.com/netty/netty/commit/91f484371b8db359bab06df691e2d3d0300a4670",
          "parents": {
            "nodes": [
              {
                "oid": "29bdca4ed4fdcb0d3693a9065de052664a00cb53",
                "message": "Reset byte buffer in loop for AbstractDiskHttpData.setContent. (#13320)\n\nMotivation:\r\nWhen the number of bytes available from a single InputStream.read-call\r\nvaries between invocations (like can be the case for resources served\r\nfrom within a jar), the first invocation of flip() sets the limit to\r\nthis smaller value. As InputStream.read(byte[]) is used, that call does\r\nnot see the new limit and might read more bytes causing the next call to\r\nByteBuffer.position() to fail.\r\n\r\nModification:\r\n\r\nResetting the limit in between resolves this issue.\r\n\r\nResult:\r\nCalling setContent() with an InputStream that has varying chunk-size now\r\nsucceeds and does not throw an IllegalArgumentException anymore."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DefaultAuthoritativeDnsServerCache.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DefaultDnsCnameCache.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns/src/test/java/io/netty/resolver/dns/DnsNameResolverBuilderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85QrWp82gAoMTllODBmMWM1OWI2M2UzN2M1ZjUwZWI2NmQ3MWU5MTY2ZDE3ZDU0Zg",
                "url": "https://github.com/netty/netty/pull/13386/commits/19e80f1c59b63e37c5f50eb66d71e9166d17d54f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13384,
                "url": "https://github.com/netty/netty/issues/13384",
                "title": "Unable to supply resolveCache to DnsNameResolverBuilder and use TTL's for other two caches",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">If a resolveCache is set in the DnsNameResolverBuilder the min, max and negative TTL fields must be null. However, this means the cname cache and authoritative DNS server cache will be built with default (fallback) TTLs as opposed to a TTL which the user may want to set.</p>\n<p dir=\"auto\">I'd expect to be able to provide the resolveCache and also TTL's which should be applied to the cname and authoritative DNS server caches.  This is not possible due to the following code:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"       if (resolveCache != null &amp;&amp; (minTtl != null || maxTtl != null || negativeTtl != null)) {\n            throw new IllegalStateException(&quot;resolveCache and TTLs are mutually exclusive&quot;);\n        }\n\n        if (authoritativeDnsServerCache != null &amp;&amp; (minTtl != null || maxTtl != null || negativeTtl != null)) {\n            throw new IllegalStateException(&quot;authoritativeDnsServerCache and TTLs are mutually exclusive&quot;);\n        }\"><pre class=\"notranslate\"><code class=\"notranslate\">       if (resolveCache != null &amp;&amp; (minTtl != null || maxTtl != null || negativeTtl != null)) {\n            throw new IllegalStateException(\"resolveCache and TTLs are mutually exclusive\");\n        }\n\n        if (authoritativeDnsServerCache != null &amp;&amp; (minTtl != null || maxTtl != null || negativeTtl != null)) {\n            throw new IllegalStateException(\"authoritativeDnsServerCache and TTLs are mutually exclusive\");\n        }\n</code></pre></div>\n<p dir=\"auto\">This means the building of the cname cache is forced to use default values (0, Integer.MAX_VALUE)</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    private DnsCnameCache newCnameCache() {\n        return new DefaultDnsCnameCache(\n                intValue(minTtl, 0), intValue(maxTtl, Integer.MAX_VALUE));\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    private DnsCnameCache newCnameCache() {\n        return new DefaultDnsCnameCache(\n                intValue(minTtl, 0), intValue(maxTtl, Integer.MAX_VALUE));\n    }\n</code></pre></div>\n<h3 dir=\"auto\">Actual behavior</h3>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Use DnsNameResolverBuilder to with a supplied resolveCache and minTtl, maxTtl or negativeTtl values.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.92</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/13384",
                "createdAt": "2023-05-16T10:41:26Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "H2/H2C server stream channels deactivated while write still in progress",
        "url": "https://github.com/netty/netty/pull/13388",
        "resourcePath": "/netty/netty/pull/13388",
        "createdAt": "2023-05-19T15:17:59Z",
        "number": 13388,
        "mergeCommit": {
          "oid": "f76d6462412fa5c2f6baf82b216356196ebb10bd",
          "message": "H2/H2C server stream channels deactivated while write still in progress (#13388)\n\nMotivation:\r\n\r\nIn the context of Reactor-Netty, we experience an issue during HTTP2 (or\r\nH2C) load tests.\r\nWe have an HTTP2 (or H2C, it does not matter) server which is using in\r\nthe pipeline an Http2FrameCodec, followed by a Http2MultiplexHandler,\r\nand when the client sends a new request, then the Http2MultiplexHandler\r\nwill create a child `Http2MultiplexHandlerStreamChannel` that will\r\ncontain in its pipeline an Http2StreamFrameToHttpObjectCodec followed by\r\nsome other specific reactor-netty handlers.\r\n\r\nNow, the issue is the following: when the client sends the last request\r\nframe (with EOS flag=true), and when the server sends the last response\r\nframe (also with EOS flag = true), then in the server the stream will be\r\nclosed, and the stream channel handlers will be called in\r\n`channelInactive` (that is ok).\r\nBut sometimes, under high load, when the last server response can't be\r\nflushed when the parent channel is non-writtable, then we see that the\r\nserver stream channel handlers may be called in`channelInactive` while\r\nthe server last response frame is still writing and is not yet flushed.\r\nIn other words, the `ChannelFuture` of the last server response sent to\r\nthe client is not \"success\", but is \"incomplete\" at the time the child\r\nstream channel handlers are called in `channelInactive`.\r\n\r\nNormally, if I'm correct, when a channel handler is called in\r\n`channelInactive`, it means that it is now inactive and has reached its\r\nend of lifetime. So when our handlers are called in `channelInactive`\r\nwhile the response is not yet flushed (because parent channel was\r\nnon-writable), then then we are getting into troubles, because we are\r\nthen trying to cleanup resources, like the buffer of the last server\r\nresponse, but a bit later, when the last response is now flushed, then\r\nthe buffer will be freed again, and we end up with many\r\nIllegalReferenceCountExceptions. So, we think that `channelInactive`\r\nshould only be invoked after the last response is fully written and\r\nreleased.\r\n\r\nTo reproduce the issue and investigate it with the debugger, you can\r\nfirst run the\r\n`Http2MultiplexTransportTest.streamHandlerInactivatedResponseFlushed`\r\nfrom this PR, but without applying the patch. Only pay attention to the\r\n\"serverloop\" thread.\r\n\r\nI tend to think that the problem may start from\r\n`DefaultHttp2RemoteFlowController.FlowState.writeAllocatedBytes(int\r\nallocated)`, line 368, where `frame.writeComplete()` is called: this\r\nmethod will indirectly trigger\r\n`AbstractHttp2StreamChannel.fireChannelInactiveAndDeregister(), line\r\n742`, but without waiting for the frame promise to complete (the promise\r\nis in `DefaultHttp2ConnectionEncoder.FlowControlledBase`).\r\n\r\nModification:\r\n\r\n\r\nAdded a reproducer test\r\nin`Http2MultiplexTransportTest.streamHandlerInactivatedResponseFlushed`test.\r\nThis test simulates non-writable socket by configuring the SO_SNDBUF of\r\nthe server side connection to `1`. This will trigger the issue, because\r\nwhen the server will respond, it will get many writability events and\r\nthe response won't be flushed immediately.\r\n\r\nI have tried to apply the following simple patch which seems to resolve\r\nthe problem: In. `Http2ConnectionHandler.closeStream` method, ensures\r\nthat the stream is closed once the future is completed:\r\n\r\ninstead of doing:\r\n\r\n```\r\n    @Override\r\n    public void closeStream(final Http2Stream stream, ChannelFuture future) {\r\n        stream.close();\r\n\r\n        if (future.isDone()) {\r\n            checkCloseConnection(future);\r\n        } else {\r\n            future.addListener(new ChannelFutureListener() {\r\n                @Override\r\n                public void operationComplete(ChannelFuture future) throws Exception {\r\n                    checkCloseConnection(future);\r\n                }\r\n            });\r\n        }\r\n    }\r\n```\r\n\r\nthe closing is then done in the future listener, like this:\r\n```\r\nOverride\r\n    public void closeStream(final Http2Stream stream, ChannelFuture future) {\r\n        if (future.isDone()) {\r\n            doCloseStream(stream, future);\r\n        } else {\r\n            future.addListener(f -> doCloseStream(stream, future));\r\n        }\r\n    }\r\n    \r\n    private void doCloseStream(final Http2Stream stream, ChannelFuture future) {\r\n        stream.close();\r\n        checkCloseConnection(future);\r\n    }\r\n```\r\n\r\nThis seems to resolve the issue, because the stream will be closed only\r\nonce the last response frame has been fully flushed.\r\nThe Http2ConnectionHandlerTest.canCloseStreamWithVoidPromise has also\r\nbeen modified in order to set the promise to success before doing the\r\ntest:\r\n\r\n```\r\n    @Test\r\n    public void canCloseStreamWithVoidPromise() throws Exception {\r\n        handler = newHandler();\r\n        handler.closeStream(stream, ctx.voidPromise().setSuccess());\r\n        verify(stream, times(1)).close();\r\n        verifyNoMoreInteractions(stream);\r\n    }\r\n```\r\n\r\nResult:\r\n\r\nFixes https://github.com/reactor/reactor-netty/issues/2760",
          "commitUrl": "https://github.com/netty/netty/commit/f76d6462412fa5c2f6baf82b216356196ebb10bd",
          "parents": {
            "nodes": [
              {
                "oid": "439e9074b4022e96881d82c976dd6df7d4c3a701",
                "message": "Set top level permission to remaining workflows (#13385)\n\nMotivation:\r\n\r\nSetting minimum permissions on workflow's top level is good practice.\r\nSimilar changes were previously discussed in\r\nhttps://github.com/netty/netty/pull/12462. Since some workflows were\r\nleft out of the previous PR, this PR is a small update to restrict their\r\npermissions.\r\n\r\nModification:\r\n\r\nSet top level read only permission to `ci-deploy.yml`, `ci-pr.yml`,\r\n`ci-release.yml` and `ci-release5.yml`\r\n\r\nI wasn't able to test the workflows:\r\n\r\n- `ci-release.yml` and `ci-release5.yml`: although I wasn't able to test\r\nsuccessfully, considering that they are basically using personalized\r\nsecrets and not the standard GITHUB_TOKEN (github.token), I've\r\nconsidered that no write permission would be needed to it. To avoid\r\nerrors I've opted for `read-all` instead of `contents: read`.\r\n\r\n- `ci-deploy.yml` also seems to not be working so I wasn't able to\r\nprovide a success example either.\r\n\r\n- `ci-pr.yml` run example\r\nhttps://github.com/joycebrum/netty/actions/runs/4994205584. Not sure why\r\nit didn't run on my fork but the errors seems not to be related to any\r\npermission. Anyway, I've changed the permission to read-all which\r\ncertainly will be enough since it runs on pull request (which will\r\nalways be no more than read-all to external PRs).\r\n\r\nResult:\r\n\r\nSimilar change discussed at https://github.com/netty/netty/pull/12462:\r\nsince github workflow default behavior is to grant write all permission\r\nto any workflow it is both a recommendation from [OpenSSF\r\nScorecard](https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions)\r\nand the\r\n[Github](https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions)\r\nto always use credentials that are minimally scoped.\r\n\r\n---------\r\n\r\nSigned-off-by: Joyce <joycebrum@google.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2ConnectionHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionHandlerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2MultiplexTransportTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85Q5tyM2gAoZjMzM2Y1ZDcyMTlmYjA0Y2UxYTIyOTQ4YTBjNDRmNWY2NDU5NjBiYQ",
                "url": "https://github.com/netty/netty/pull/13388/commits/f333f5d7219fb04ce1a22948a0c44f5f645960ba"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2760,
                "url": "https://github.com/reactor/reactor-netty/issues/2760",
                "title": "IllegalReferenceCountException when using sendObject",
                "bodyHTML": "<p dir=\"auto\">When an HTTP2 reactor-netty server is using <code class=\"notranslate\">sendObject</code> when returning the response, sometimes, we see this exception on the server:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"12:53:50.905 [reactor-http-nio-1] WARN  i.n.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.util.IllegalReferenceCountException: refCnt: 0\n\tat io.netty.buffer.AbstractByteBuf.ensureAccessible(AbstractByteBuf.java:1454)\n\tat io.netty.buffer.AbstractByteBuf.checkIndex(AbstractByteBuf.java:1383)\n\tat io.netty.buffer.PooledByteBuf.internalNioBuffer(PooledByteBuf.java:203)\n\tat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:1026)\n\tat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:829)\n\tat io.netty.handler.ssl.SslHandler.wrapAndFlush(SslHandler.java:800)\n\tat io.netty.handler.ssl.SslHandler.flush(SslHandler.java:781)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:925)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:907)\n\tat io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:893)\n\tat io.netty.handler.logging.LoggingHandler.flush(LoggingHandler.java:304)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:923)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:907)\n\tat io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:893)\n\tat io.netty.handler.codec.http2.Http2ConnectionHandler.flush(Http2ConnectionHandler.java:197)\n\tat io.netty.handler.codec.http2.Http2ConnectionHandler.channelReadComplete(Http2ConnectionHandler.java:555)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:486)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:463)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelReadComplete(AbstractChannelHandlerContext.java:456)\n\tat reactor.netty.tcp.SslProvider$SslReadHandler.channelReadComplete(SslProvider.java:842)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:486)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:463)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelReadComplete(AbstractChannelHandlerContext.java:456)\n\tat io.netty.handler.logging.LoggingHandler.channelReadComplete(LoggingHandler.java:272)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:484)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:463)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelReadComplete(AbstractChannelHandlerContext.java:456)\n\tat io.netty.handler.ssl.SslHandler.channelReadComplete0(SslHandler.java:1313)\n\tat io.netty.handler.ssl.SslHandler.channelReadComplete(SslHandler.java:1302)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:486)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:463)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelReadComplete(AbstractChannelHandlerContext.java:456)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelReadComplete(DefaultChannelPipeline.java:1415)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:482)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:463)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelReadComplete(DefaultChannelPipeline.java:925)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:171)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.base/java.lang.Thread.run(Thread.java:1589)\n\"><pre class=\"notranslate\"><code class=\"notranslate\">12:53:50.905 [reactor-http-nio-1] WARN  i.n.channel.DefaultChannelPipeline - An exceptionCaught() event was fired, and it reached at the tail of the pipeline. It usually means the last handler in the pipeline did not handle the exception.\nio.netty.util.IllegalReferenceCountException: refCnt: 0\n\tat io.netty.buffer.AbstractByteBuf.ensureAccessible(AbstractByteBuf.java:1454)\n\tat io.netty.buffer.AbstractByteBuf.checkIndex(AbstractByteBuf.java:1383)\n\tat io.netty.buffer.PooledByteBuf.internalNioBuffer(PooledByteBuf.java:203)\n\tat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:1026)\n\tat io.netty.handler.ssl.SslHandler.wrap(SslHandler.java:829)\n\tat io.netty.handler.ssl.SslHandler.wrapAndFlush(SslHandler.java:800)\n\tat io.netty.handler.ssl.SslHandler.flush(SslHandler.java:781)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:925)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:907)\n\tat io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:893)\n\tat io.netty.handler.logging.LoggingHandler.flush(LoggingHandler.java:304)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:923)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:907)\n\tat io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:893)\n\tat io.netty.handler.codec.http2.Http2ConnectionHandler.flush(Http2ConnectionHandler.java:197)\n\tat io.netty.handler.codec.http2.Http2ConnectionHandler.channelReadComplete(Http2ConnectionHandler.java:555)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:486)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:463)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelReadComplete(AbstractChannelHandlerContext.java:456)\n\tat reactor.netty.tcp.SslProvider$SslReadHandler.channelReadComplete(SslProvider.java:842)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:486)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:463)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelReadComplete(AbstractChannelHandlerContext.java:456)\n\tat io.netty.handler.logging.LoggingHandler.channelReadComplete(LoggingHandler.java:272)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:484)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:463)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelReadComplete(AbstractChannelHandlerContext.java:456)\n\tat io.netty.handler.ssl.SslHandler.channelReadComplete0(SslHandler.java:1313)\n\tat io.netty.handler.ssl.SslHandler.channelReadComplete(SslHandler.java:1302)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:486)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:463)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelReadComplete(AbstractChannelHandlerContext.java:456)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelReadComplete(DefaultChannelPipeline.java:1415)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:482)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelReadComplete(AbstractChannelHandlerContext.java:463)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelReadComplete(DefaultChannelPipeline.java:925)\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:171)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.base/java.lang.Thread.run(Thread.java:1589)\n\n</code></pre></div>\n<h2 dir=\"auto\">Expected Behavior</h2>\n<h2 dir=\"auto\">Actual Behavior</h2>\n<h2 dir=\"auto\">Steps to Reproduce</h2>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"static Consumer&lt;? super HttpServerRoutes&gt; routesBuilder() {\n\treturn r -&gt; r.get(&quot;/user/{id}&quot;, findUser());\n    }\n    \nstatic BiFunction&lt;HttpServerRequest, HttpServerResponse, Publisher&lt;Void&gt;&gt; findUser() {\n\treturn (req, res) -&gt;\n\t\t\tres.header(&quot;Content-Type&quot;, &quot;application/json&quot;)\n\t\t\t\t\t.sendObject(toByteBuf(new User(req.param(&quot;id&quot;), &quot;Ben Chmark&quot;)));\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">static Consumer&lt;? super HttpServerRoutes&gt; routesBuilder() {\n\treturn r -&gt; r.get(\"/user/{id}\", findUser());\n    }\n    \nstatic BiFunction&lt;HttpServerRequest, HttpServerResponse, Publisher&lt;Void&gt;&gt; findUser() {\n\treturn (req, res) -&gt;\n\t\t\tres.header(\"Content-Type\", \"application/json\")\n\t\t\t\t\t.sendObject(toByteBuf(new User(req.param(\"id\"), \"Ben Chmark\")));\n}\n</code></pre></div>\n<p dir=\"auto\">See attached reproducer.tgz:<br>\n<a href=\"https://github.com/reactor/reactor-netty/files/11137662/reproducer.tgz\">reproducer.tgz</a></p>\n<p dir=\"auto\">To reproduce:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Use java 19</p>\n</li>\n<li>\n<p dir=\"auto\">./gradlew build</p>\n</li>\n<li>\n<p dir=\"auto\">from one console, start the frontend server (using java19):<br>\njava -DPROTOCOL=H2 -jar frontend-rn-11x/build/libs/frontend-rn-11x-1.0.0.jar</p>\n</li>\n<li>\n<p dir=\"auto\">from another console, start gatling (using java19):<br>\njava -DPROTOCOL=H2 -DDURATION=20 -jar gatling/build/libs/gatling-1.0.0-all.jar application \u201cH2 simulation / JsonGet\u201d JsonGet</p>\n</li>\n</ul>\n<p dir=\"auto\">You should then see the IllegalReferenceCountException from the frontend console.</p>\n<p dir=\"auto\">Analysis:</p>\n<p dir=\"auto\">sometimes, it seems that we are facing this situation:</p>\n<ul dir=\"auto\">\n<li>A buffer is currently present in the SSLHandler.pendingUnencryptedWrites data structure <a href=\"https://github.com/netty/netty/blob/4.1/handler/src/main/java/io/netty/handler/ssl/SslHandler.java#L399\">here</a>.</li>\n<li>Then, the buffer is released by <a href=\"https://github.com/reactor/reactor-netty/blob/main/reactor-netty-http/src/main/java/reactor/netty/http/HttpOperations.java#L491\">HttpOperations here, line 491</a>. This is because the stream is being cancelled/closed from this stacktrace:</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" &quot;reactor.netty.http.HttpOperations$PostHeadersNettyOutbound.run(HttpOperations.java:491)&quot;\n &quot;reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.cancel(FluxPeekFuseable.java:152)&quot;\n &quot;reactor.core.publisher.Operators.terminate(Operators.java:1277)&quot;\n &quot;reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:481)&quot;\n &quot;reactor.netty.http.server.HttpServerOperations.onInboundClose(HttpServerOperations.java:677)&quot;\n &quot;reactor.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:73)&quot;\n &quot;io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305)&quot;\n &quot;io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)&quot;\n &quot;io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)&quot;\n &quot;io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)&quot;\n &quot;io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)&quot;\n &quot;io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)&quot;\n &quot;io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)&quot;\n &quot;io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe$2.run(AbstractHttp2StreamChannel.java:737)&quot;\n &quot;io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)&quot;\n &quot;io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)&quot;\n &quot;io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)&quot;\n &quot;io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)&quot;\n &quot;io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)&quot;\n &quot;io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)&quot;\n &quot;io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)&quot;\n &quot;java.base/java.lang.Thread.run(Thread.java:1589)&quot;\"><pre class=\"notranslate\"><code class=\"notranslate\"> \"reactor.netty.http.HttpOperations$PostHeadersNettyOutbound.run(HttpOperations.java:491)\"\n \"reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.cancel(FluxPeekFuseable.java:152)\"\n \"reactor.core.publisher.Operators.terminate(Operators.java:1277)\"\n \"reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:481)\"\n \"reactor.netty.http.server.HttpServerOperations.onInboundClose(HttpServerOperations.java:677)\"\n \"reactor.netty.channel.ChannelOperationsHandler.channelInactive(ChannelOperationsHandler.java:73)\"\n \"io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305)\"\n \"io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)\"\n \"io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274)\"\n \"io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405)\"\n \"io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301)\"\n \"io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281)\"\n \"io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901)\"\n \"io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe$2.run(AbstractHttp2StreamChannel.java:737)\"\n \"io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174)\"\n \"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167)\"\n \"io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470)\"\n \"io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:566)\"\n \"io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\"\n \"io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\"\n \"io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\"\n \"java.base/java.lang.Thread.run(Thread.java:1589)\"\n</code></pre></div>\n<p dir=\"auto\">In fact, the above stack trace is triggered by this one (the stream is being closed):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"fireChannelInactiveAndDeregister:733, AbstractHttp2StreamChannel$Http2ChannelUnsafe (io.netty.handler.codec.http2)\nclose:702, AbstractHttp2StreamChannel$Http2ChannelUnsafe (io.netty.handler.codec.http2)\ncloseForcibly:707, AbstractHttp2StreamChannel$Http2ChannelUnsafe (io.netty.handler.codec.http2)\ndoBeginRead:805, AbstractHttp2StreamChannel$Http2ChannelUnsafe (io.netty.handler.codec.http2)\nstreamClosed:299, AbstractHttp2StreamChannel (io.netty.handler.codec.http2)\nuserEventTriggered:249, Http2MultiplexHandler (io.netty.handler.codec.http2)\ninvokeUserEventTriggered:398, AbstractChannelHandlerContext (io.netty.channel)\ninvokeUserEventTriggered:376, AbstractChannelHandlerContext (io.netty.channel)\nfireUserEventTriggered:368, AbstractChannelHandlerContext (io.netty.channel)\nonHttp2StreamStateChanged:703, Http2FrameCodec (io.netty.handler.codec.http2)\nonHttp2StreamStateChanged0:524, Http2FrameCodec$ConnectionListener (io.netty.handler.codec.http2)\nonStreamClosed:513, Http2FrameCodec$ConnectionListener (io.netty.handler.codec.http2)\nnotifyClosed:357, DefaultHttp2Connection (io.netty.handler.codec.http2)\nremoveFromActiveStreams:1007, DefaultHttp2Connection$ActiveStreams (io.netty.handler.codec.http2)\ndeactivate:963, DefaultHttp2Connection$ActiveStreams (io.netty.handler.codec.http2)\nclose:515, DefaultHttp2Connection$DefaultStream (io.netty.handler.codec.http2)\nclose:521, DefaultHttp2Connection$DefaultStream (io.netty.handler.codec.http2)\ncloseStream:628, Http2ConnectionHandler (io.netty.handler.codec.http2)\ncloseStreamLocal:601, Http2ConnectionHandler (io.netty.handler.codec.http2)\nwriteComplete:623, DefaultHttp2ConnectionEncoder$FlowControlledBase (io.netty.handler.codec.http2)\nwriteAllocatedBytes:368, DefaultHttp2RemoteFlowController$FlowState (io.netty.handler.codec.http2)\nwrite:547, DefaultHttp2RemoteFlowController$WritabilityMonitor (io.netty.handler.codec.http2)\nwrite:612, WeightedFairQueueByteDistributor$State (io.netty.handler.codec.http2)\ndistribute:292, WeightedFairQueueByteDistributor (io.netty.handler.codec.http2)\ndistributeToChildren:325, WeightedFairQueueByteDistributor (io.netty.handler.codec.http2)\ndistribute:273, WeightedFairQueueByteDistributor (io.netty.handler.codec.http2)\nwritePendingBytes:627, DefaultHttp2RemoteFlowController$WritabilityMonitor (io.netty.handler.codec.http2)\nwritePendingBytes:267, DefaultHttp2RemoteFlowController (io.netty.handler.codec.http2)\nflush:196, Http2ConnectionHandler (io.netty.handler.codec.http2)\ninvokeFlush0:925, AbstractChannelHandlerContext (io.netty.channel)\ninvokeFlush:907, AbstractChannelHandlerContext (io.netty.channel)\nflush:893, AbstractChannelHandlerContext (io.netty.channel)\nprocessPendingReadCompleteQueue:349, Http2MultiplexHandler (io.netty.handler.codec.http2)\nchannelReadComplete:330, Http2MultiplexHandler (io.netty.handler.codec.http2)\ninvokeChannelReadComplete:484, AbstractChannelHandlerContext (io.netty.channel)\ninvokeChannelReadComplete:463, AbstractChannelHandlerContext (io.netty.channel)\nfireChannelReadComplete:456, AbstractChannelHandlerContext (io.netty.channel)\nchannelReadComplete0:570, Http2ConnectionHandler (io.netty.handler.codec.http2)\nchannelReadComplete:553, Http2ConnectionHandler (io.netty.handler.codec.http2)\ninvokeChannelReadComplete:486, AbstractChannelHandlerContext (io.netty.channel)\ninvokeChannelReadComplete:463, AbstractChannelHandlerContext (io.netty.channel)\nfireChannelReadComplete:456, AbstractChannelHandlerContext (io.netty.channel)\nchannelReadComplete:272, LoggingHandler (io.netty.handler.logging)\ninvokeChannelReadComplete:484, AbstractChannelHandlerContext (io.netty.channel)\ninvokeChannelReadComplete:463, AbstractChannelHandlerContext (io.netty.channel)\nfireChannelReadComplete:456, AbstractChannelHandlerContext (io.netty.channel)\nchannelReadComplete0:1329, SslHandler (io.netty.handler.ssl)\nchannelReadComplete:1318, SslHandler (io.netty.handler.ssl)\ninvokeChannelReadComplete:486, AbstractChannelHandlerContext (io.netty.channel)\ninvokeChannelReadComplete:463, AbstractChannelHandlerContext (io.netty.channel)\nfireChannelReadComplete:456, AbstractChannelHandlerContext (io.netty.channel)\nchannelReadComplete:1415, DefaultChannelPipeline$HeadContext (io.netty.channel)\ninvokeChannelReadComplete:482, AbstractChannelHandlerContext (io.netty.channel)\ninvokeChannelReadComplete:463, AbstractChannelHandlerContext (io.netty.channel)\nfireChannelReadComplete:925, DefaultChannelPipeline (io.netty.channel)\nread:171, AbstractNioByteChannel$NioByteUnsafe (io.netty.channel.nio)\nprocessSelectedKey:788, NioEventLoop (io.netty.channel.nio)\nprocessSelectedKeysOptimized:724, NioEventLoop (io.netty.channel.nio)\nprocessSelectedKeys:650, NioEventLoop (io.netty.channel.nio)\nrun:562, NioEventLoop (io.netty.channel.nio)\nrun:997, SingleThreadEventExecutor$4 (io.netty.util.concurrent)\nrun:74, ThreadExecutorMap$2 (io.netty.util.internal)\nrun:30, FastThreadLocalRunnable (io.netty.util.concurrent)\nrun:1589, Thread (java.lang)\"><pre class=\"notranslate\"><code class=\"notranslate\">fireChannelInactiveAndDeregister:733, AbstractHttp2StreamChannel$Http2ChannelUnsafe (io.netty.handler.codec.http2)\nclose:702, AbstractHttp2StreamChannel$Http2ChannelUnsafe (io.netty.handler.codec.http2)\ncloseForcibly:707, AbstractHttp2StreamChannel$Http2ChannelUnsafe (io.netty.handler.codec.http2)\ndoBeginRead:805, AbstractHttp2StreamChannel$Http2ChannelUnsafe (io.netty.handler.codec.http2)\nstreamClosed:299, AbstractHttp2StreamChannel (io.netty.handler.codec.http2)\nuserEventTriggered:249, Http2MultiplexHandler (io.netty.handler.codec.http2)\ninvokeUserEventTriggered:398, AbstractChannelHandlerContext (io.netty.channel)\ninvokeUserEventTriggered:376, AbstractChannelHandlerContext (io.netty.channel)\nfireUserEventTriggered:368, AbstractChannelHandlerContext (io.netty.channel)\nonHttp2StreamStateChanged:703, Http2FrameCodec (io.netty.handler.codec.http2)\nonHttp2StreamStateChanged0:524, Http2FrameCodec$ConnectionListener (io.netty.handler.codec.http2)\nonStreamClosed:513, Http2FrameCodec$ConnectionListener (io.netty.handler.codec.http2)\nnotifyClosed:357, DefaultHttp2Connection (io.netty.handler.codec.http2)\nremoveFromActiveStreams:1007, DefaultHttp2Connection$ActiveStreams (io.netty.handler.codec.http2)\ndeactivate:963, DefaultHttp2Connection$ActiveStreams (io.netty.handler.codec.http2)\nclose:515, DefaultHttp2Connection$DefaultStream (io.netty.handler.codec.http2)\nclose:521, DefaultHttp2Connection$DefaultStream (io.netty.handler.codec.http2)\ncloseStream:628, Http2ConnectionHandler (io.netty.handler.codec.http2)\ncloseStreamLocal:601, Http2ConnectionHandler (io.netty.handler.codec.http2)\nwriteComplete:623, DefaultHttp2ConnectionEncoder$FlowControlledBase (io.netty.handler.codec.http2)\nwriteAllocatedBytes:368, DefaultHttp2RemoteFlowController$FlowState (io.netty.handler.codec.http2)\nwrite:547, DefaultHttp2RemoteFlowController$WritabilityMonitor (io.netty.handler.codec.http2)\nwrite:612, WeightedFairQueueByteDistributor$State (io.netty.handler.codec.http2)\ndistribute:292, WeightedFairQueueByteDistributor (io.netty.handler.codec.http2)\ndistributeToChildren:325, WeightedFairQueueByteDistributor (io.netty.handler.codec.http2)\ndistribute:273, WeightedFairQueueByteDistributor (io.netty.handler.codec.http2)\nwritePendingBytes:627, DefaultHttp2RemoteFlowController$WritabilityMonitor (io.netty.handler.codec.http2)\nwritePendingBytes:267, DefaultHttp2RemoteFlowController (io.netty.handler.codec.http2)\nflush:196, Http2ConnectionHandler (io.netty.handler.codec.http2)\ninvokeFlush0:925, AbstractChannelHandlerContext (io.netty.channel)\ninvokeFlush:907, AbstractChannelHandlerContext (io.netty.channel)\nflush:893, AbstractChannelHandlerContext (io.netty.channel)\nprocessPendingReadCompleteQueue:349, Http2MultiplexHandler (io.netty.handler.codec.http2)\nchannelReadComplete:330, Http2MultiplexHandler (io.netty.handler.codec.http2)\ninvokeChannelReadComplete:484, AbstractChannelHandlerContext (io.netty.channel)\ninvokeChannelReadComplete:463, AbstractChannelHandlerContext (io.netty.channel)\nfireChannelReadComplete:456, AbstractChannelHandlerContext (io.netty.channel)\nchannelReadComplete0:570, Http2ConnectionHandler (io.netty.handler.codec.http2)\nchannelReadComplete:553, Http2ConnectionHandler (io.netty.handler.codec.http2)\ninvokeChannelReadComplete:486, AbstractChannelHandlerContext (io.netty.channel)\ninvokeChannelReadComplete:463, AbstractChannelHandlerContext (io.netty.channel)\nfireChannelReadComplete:456, AbstractChannelHandlerContext (io.netty.channel)\nchannelReadComplete:272, LoggingHandler (io.netty.handler.logging)\ninvokeChannelReadComplete:484, AbstractChannelHandlerContext (io.netty.channel)\ninvokeChannelReadComplete:463, AbstractChannelHandlerContext (io.netty.channel)\nfireChannelReadComplete:456, AbstractChannelHandlerContext (io.netty.channel)\nchannelReadComplete0:1329, SslHandler (io.netty.handler.ssl)\nchannelReadComplete:1318, SslHandler (io.netty.handler.ssl)\ninvokeChannelReadComplete:486, AbstractChannelHandlerContext (io.netty.channel)\ninvokeChannelReadComplete:463, AbstractChannelHandlerContext (io.netty.channel)\nfireChannelReadComplete:456, AbstractChannelHandlerContext (io.netty.channel)\nchannelReadComplete:1415, DefaultChannelPipeline$HeadContext (io.netty.channel)\ninvokeChannelReadComplete:482, AbstractChannelHandlerContext (io.netty.channel)\ninvokeChannelReadComplete:463, AbstractChannelHandlerContext (io.netty.channel)\nfireChannelReadComplete:925, DefaultChannelPipeline (io.netty.channel)\nread:171, AbstractNioByteChannel$NioByteUnsafe (io.netty.channel.nio)\nprocessSelectedKey:788, NioEventLoop (io.netty.channel.nio)\nprocessSelectedKeysOptimized:724, NioEventLoop (io.netty.channel.nio)\nprocessSelectedKeys:650, NioEventLoop (io.netty.channel.nio)\nrun:562, NioEventLoop (io.netty.channel.nio)\nrun:997, SingleThreadEventExecutor$4 (io.netty.util.concurrent)\nrun:74, ThreadExecutorMap$2 (io.netty.util.internal)\nrun:30, FastThreadLocalRunnable (io.netty.util.concurrent)\nrun:1589, Thread (java.lang)\n</code></pre></div>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">So, the buffer is released at HttpOperations.java:491, but the buffer has already been written to the channel (either <a href=\"https://github.com/reactor/reactor-netty/blob/main/reactor-netty-http/src/main/java/reactor/netty/http/HttpOperations.java#L185\">here</a> or <a href=\"https://github.com/reactor/reactor-netty/blob/main/reactor-netty-http/src/main/java/reactor/netty/http/HttpOperations.java#L187\">here</a>:), but is not yet flushed and still present in the SSLHandler.pendingUnencryptedWrites data structure</p>\n</li>\n<li>\n<p dir=\"auto\">Finally, when SSLHandler.flush is called after channelReadComplete, then it gets the IllegalReferenceCountException when accessing to the buffer from the pendingUnencryptedWrites data structure, because the buffer has already been released at  HttpOperations.java:491</p>\n</li>\n</ul>\n<h2 dir=\"auto\">Possible Solution</h2>\n<h2 dir=\"auto\">Your Environment</h2>\n<ul dir=\"auto\">\n<li>Reactor version(s) used: latest 1.0.x branch</li>\n<li>JVM version: 19</li>\n</ul>",
                "resourcePath": "/reactor/reactor-netty/issues/2760",
                "createdAt": "2023-04-03T11:16:00Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "for/netty"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix possible NPE when calling PoolArena.toString()",
        "url": "https://github.com/netty/netty/pull/13393",
        "resourcePath": "/netty/netty/pull/13393",
        "createdAt": "2023-05-22T06:31:57Z",
        "number": 13393,
        "mergeCommit": {
          "oid": "92f67bf6da68e7944484564d9aac2d0e9bbacc65",
          "message": "Fix possible NPE when calling PoolArena.toString() (#13393)\n\nMotivation:\r\n\r\nWe did miss a null check and so risk a NPE during generating the String\r\nrepresentation of the PoolArena.\r\n\r\nModifications:\r\n\r\nAdd null checks\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13390.",
          "commitUrl": "https://github.com/netty/netty/commit/92f67bf6da68e7944484564d9aac2d0e9bbacc65",
          "parents": {
            "nodes": [
              {
                "oid": "0e8b0252fb595ccf7c4fdc7cce461264c68b4b1c",
                "message": "Channel#bytesBefore[un]writable off by 1 (#13389)\n\nMotivation:\r\nChannel#bytesBefore[un]writable methods are described as returning the\r\nnumber of bytes until writability state changes. The ChannelConfig\r\nbuffer high/low water marks are described as the thresholds must be\r\nexceeded before writability changes. The implementation of\r\nbytesBefore[un]writable methods return the number of bytes until the\r\nthreshold is meet but not exceeded. If implementations depend upon this\r\nto drive readability they may hang.\r\n\r\nModifications:\r\n- Channel#bytesBefore[un]writable implementations in http/2 and\r\nChannelOutboundBuffer increment the value by 1 to return how much is\r\nrequired to cross the water mark therefore trigger a change in\r\nwritability.\r\n\r\nResult:\r\n\r\nNo more stales when implementations use `bytesBeforeWritable` / `bytesBeforeUnwritable`"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolArena.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85Q-vwB2gAoYzdhNzMwNmExMjYyMzMwZTVjNDMxNzNiZDU3MTM3ZWU1NjYyZWI4NA",
                "url": "https://github.com/netty/netty/pull/13393/commits/c7a7306a1262330e5c43173bd57137ee5662eb84"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13390,
                "url": "https://github.com/netty/netty/issues/13390",
                "title": "NettyBlockHoundIntegrationTest.pooledBufferAllocation NPE",
                "bodyHTML": "<p dir=\"auto\"><a href=\"https://github.com/netty/netty/actions/runs/5034227132/jobs/9028943652?pr=13389\">https://github.com/netty/netty/actions/runs/5034227132/jobs/9028943652?pr=13389</a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"2023-05-20T23:07:22.3086895Z java.lang.NullPointerException: Cannot read field &quot;next&quot; because &quot;s&quot; is null\n2023-05-20T23:07:22.3087659Z    at io.netty.buffer.PoolArena.appendPoolSubPages(PoolArena.java:580)\n2023-05-20T23:07:22.3088358Z    at io.netty.buffer.PoolArena.toString(PoolArena.java:559)\n2023-05-20T23:07:22.3089179Z    at java.base/java.lang.String.valueOf(String.java:4216)\n2023-05-20T23:07:22.3089842Z    at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)\n2023-05-20T23:07:22.3090616Z    at io.netty.buffer.PooledByteBufAllocator.dumpStats(PooledByteBufAllocator.java:772)\n2023-05-20T23:07:22.3091955Z    at io.netty.util.internal.NettyBlockHoundIntegrationTest.pooledBufferAllocation(NettyBlockHoundIntegrationTest.java:390)\"><pre class=\"notranslate\"><code class=\"notranslate\">2023-05-20T23:07:22.3086895Z java.lang.NullPointerException: Cannot read field \"next\" because \"s\" is null\n2023-05-20T23:07:22.3087659Z    at io.netty.buffer.PoolArena.appendPoolSubPages(PoolArena.java:580)\n2023-05-20T23:07:22.3088358Z    at io.netty.buffer.PoolArena.toString(PoolArena.java:559)\n2023-05-20T23:07:22.3089179Z    at java.base/java.lang.String.valueOf(String.java:4216)\n2023-05-20T23:07:22.3089842Z    at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)\n2023-05-20T23:07:22.3090616Z    at io.netty.buffer.PooledByteBufAllocator.dumpStats(PooledByteBufAllocator.java:772)\n2023-05-20T23:07:22.3091955Z    at io.netty.util.internal.NettyBlockHoundIntegrationTest.pooledBufferAllocation(NettyBlockHoundIntegrationTest.java:390)\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/13390",
                "createdAt": "2023-05-21T00:09:22Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Obtain the local address from the fd when the client connects only with remote address (UDS)",
        "url": "https://github.com/netty/netty/pull/13419",
        "resourcePath": "/netty/netty/pull/13419",
        "createdAt": "2023-06-02T13:06:51Z",
        "number": 13419,
        "mergeCommit": {
          "oid": "22ce6d17032c30307840744e5c4c38d7af189673",
          "message": "Obtain the local address from the fd when the client connects only with remote address (UDS) (#13419)\n\nMotivation:\r\nClient can use only a remote address for connecting to the server.\r\n\r\nModifications:\r\n- Obtain the local address from the fd when the client uses only a\r\nremote address for connecting to the server.\r\n- Add junit test\r\n\r\nResult:\r\n\r\nFixes #13417",
          "commitUrl": "https://github.com/netty/netty/commit/22ce6d17032c30307840744e5c4c38d7af189673",
          "parents": {
            "nodes": [
              {
                "oid": "d41189cc72a5c98b544bd76162542f356b5b079f",
                "message": "Respect offset in io.netty.util.NetUtil#toAddressString(byte[], int, \u2026 (#13420)\n\n\u2026boolean)\r\n\r\nMotivation:\r\n\r\nWe didnt correctly handle the offset and so did throw an\r\nArrayIndexOutOfBoundsException.\r\n\r\nModifications:\r\n\r\n- Correctly respect the offset\r\n- Add unit tests\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13403"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketAddressesTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDomainSocketChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainSocketChannel.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85SAFCP2gAoMjYwMmMyOWI0YTYzOTI0MDVkMzI5MDEyY2JkMjExZjg4MDljZTRiNw",
                "url": "https://github.com/netty/netty/pull/13419/commits/2602c29b4a6392405d329012cbd211f8809ce4b7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13417,
                "url": "https://github.com/netty/netty/issues/13417",
                "title": "Domain socket channel local address is null",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The domain socket local address is not null.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The domain socket local address is null.</p>\n<p dir=\"auto\"><code class=\"notranslate\">QueueDomainSocketChannel#localAddress0()</code> returns <code class=\"notranslate\">local</code> field which has never been set before (other than null at construction time and in <code class=\"notranslate\">doConnect</code>). It should reflect the value in the file descriptor <code class=\"notranslate\">fd</code> field instead.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Create a client domain socket (bsd or epoll) connect to a server, then get the local channel address.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">[4.1.92.Final,)</p>",
                "resourcePath": "/netty/netty/issues/13417",
                "createdAt": "2023-06-01T12:41:04Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Respect offset in io.netty.util.NetUtil#toAddressString(byte[], int, \u2026",
        "url": "https://github.com/netty/netty/pull/13420",
        "resourcePath": "/netty/netty/pull/13420",
        "createdAt": "2023-06-02T14:14:00Z",
        "number": 13420,
        "mergeCommit": {
          "oid": "d41189cc72a5c98b544bd76162542f356b5b079f",
          "message": "Respect offset in io.netty.util.NetUtil#toAddressString(byte[], int, \u2026 (#13420)\n\n\u2026boolean)\r\n\r\nMotivation:\r\n\r\nWe didnt correctly handle the offset and so did throw an\r\nArrayIndexOutOfBoundsException.\r\n\r\nModifications:\r\n\r\n- Correctly respect the offset\r\n- Add unit tests\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13403",
          "commitUrl": "https://github.com/netty/netty/commit/d41189cc72a5c98b544bd76162542f356b5b079f",
          "parents": {
            "nodes": [
              {
                "oid": "c1a6994455cea05c873502416cc34d7d9d9610ad",
                "message": "Update Brotli4j to 1.12.0 (#13415)\n\nMotivation:\r\nBrotli4j v1.12.0 is available and we should upgrade to it.\r\n\r\nModification:\r\nUpgraded Brotl4ij to v1.12.0\r\n\r\nResult:\r\nLatest Brotli4j"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/NetUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/NetUtilTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85SAdwT2gAoNjE5MWVlM2RjNDk1YmY5OTgxM2U2NTUzZWFjOGI4ZDRlZTRhNGE3NA",
                "url": "https://github.com/netty/netty/pull/13420/commits/6191ee3dc495bf99813e6553eac8b8d4ee4a4a74"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13403,
                "url": "https://github.com/netty/netty/issues/13403",
                "title": "io.netty.util.NetUtil#toAddressString(byte[], int, boolean) will throw ArrayIndexOutOfBoundsException when param offset is greater than 0",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Do not throw <code class=\"notranslate\">ArrayIndexOutOfBoundsException</code></p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Exception in thread &quot;main&quot; java.lang.ArrayIndexOutOfBoundsException: Index 8 out of bounds for length 8\n\tat io.netty.util.NetUtil.toAddressString(NetUtil.java:988)\n\tat io.netty.util.NetUtil.bytesToIpAddress(NetUtil.java:439)\n\tat io.netty.handler.codec.socksx.v5.Socks5AddressDecoder$1.decodeAddress(Socks5AddressDecoder.java:51)\n\tat Reproducer.main(ERROR.java:19)\"><pre class=\"notranslate\"><span class=\"pl-smi\">Exception</span> <span class=\"pl-s1\">in</span> <span class=\"pl-s1\">thread</span> <span class=\"pl-s\">\"main\"</span> <span class=\"pl-smi\">java</span>.<span class=\"pl-smi\">lang</span>.<span class=\"pl-smi\">ArrayIndexOutOfBoundsException</span>: <span class=\"pl-s1\">Index</span> <span class=\"pl-c1\">8</span> <span class=\"pl-s1\">out</span> <span class=\"pl-s1\">of</span> <span class=\"pl-s1\">bounds</span> <span class=\"pl-s1\">for</span> <span class=\"pl-s1\">length</span> <span class=\"pl-c1\">8</span>\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">NetUtil</span>.<span class=\"pl-en\">toAddressString</span>(<span class=\"pl-smi\">NetUtil</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">988</span>)\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">NetUtil</span>.<span class=\"pl-s1\">bytesToIpAddress</span>(<span class=\"pl-smi\">NetUtil</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">439</span>)\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">socksx</span>.<span class=\"pl-s1\">v5</span>.<span class=\"pl-s1\">Socks5AddressDecoder$1</span>.<span class=\"pl-en\">decodeAddress</span>(<span class=\"pl-smi\">Socks5AddressDecoder</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">51</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-smi\">Reproducer</span>.<span class=\"pl-en\">main</span>(<span class=\"pl-smi\">ERROR</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">19</span>)</pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// io.netty.util.NetUtil line No.983\nprivate static String toAddressString(byte[] bytes, int offset, boolean ipv4Mapped) {\n    final int[] words = new int[IPV6_WORD_COUNT];\n    int i;\n    final int end = offset + words.length;\n    for (i = offset; i &lt; end; ++i) {\n        words[i] = ((bytes[i &lt;&lt; 1] &amp; 0xff) &lt;&lt; 8) | (bytes[(i &lt;&lt; 1) + 1] &amp; 0xff);\n    }\"><pre class=\"notranslate\"><span class=\"pl-c\">// io.netty.util.NetUtil line No.983</span>\n<span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">toAddressString</span>(<span class=\"pl-smi\">byte</span>[] <span class=\"pl-s1\">bytes</span>, <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">offset</span>, <span class=\"pl-smi\">boolean</span> <span class=\"pl-s1\">ipv4Mapped</span>) {\n    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">int</span>[] <span class=\"pl-s1\">words</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">int</span>[<span class=\"pl-c1\">IPV6_WORD_COUNT</span>];\n    <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">i</span>;\n    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">end</span> = <span class=\"pl-s1\">offset</span> + <span class=\"pl-s1\">words</span>.<span class=\"pl-s1\">length</span>;\n    <span class=\"pl-k\">for</span> (<span class=\"pl-s1\">i</span> = <span class=\"pl-s1\">offset</span>; <span class=\"pl-s1\">i</span> &lt; <span class=\"pl-s1\">end</span>; ++<span class=\"pl-s1\">i</span>) {\n        <span class=\"pl-s1\">words</span>[<span class=\"pl-s1\">i</span>] = ((<span class=\"pl-s1\">bytes</span>[<span class=\"pl-s1\">i</span> &lt;&lt; <span class=\"pl-c1\">1</span>] &amp; <span class=\"pl-c1\">0xff</span>) &lt;&lt; <span class=\"pl-c1\">8</span>) | (<span class=\"pl-s1\">bytes</span>[(<span class=\"pl-s1\">i</span> &lt;&lt; <span class=\"pl-c1\">1</span>) + <span class=\"pl-c1\">1</span>] &amp; <span class=\"pl-c1\">0xff</span>);\n    }</pre></div>\n<p dir=\"auto\">The length of <code class=\"notranslate\">words</code> is fixed <code class=\"notranslate\">IPV6_WORD_COUNT(=8)</code> , when <code class=\"notranslate\">offset</code> is greater than 0, <code class=\"notranslate\">end</code> will be greater than <code class=\"notranslate\">words.length</code>, <code class=\"notranslate\">words[i]</code> will cause <code class=\"notranslate\">ArrayIndexOutOfBoundsException</code> in the traversal</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import io.netty.buffer.ByteBuf;\nimport io.netty.buffer.Unpooled;\nimport io.netty.handler.codec.socksx.v5.*;\n\npublic class Reproducer {\n\n    public static void main(String[] args) throws Exception {\n        ByteBuf out = Unpooled.buffer();\n        String dstAddr = &quot;ABCD:EF01:2345:6789:ABCD:EF01:2345:6789&quot;;\n        int dstPort = 0;\n        DefaultSocks5CommandRequest request = new DefaultSocks5CommandRequest(Socks5CommandType.CONNECT, Socks5AddressType.IPv6, dstAddr, dstPort);\n        Socks5AddressType addressType = request.dstAddrType();\n        out.writeByte(addressType.byteValue());\n        Socks5AddressEncoder.DEFAULT.encodeAddress(addressType, request.dstAddr(), out);\n        out.writeShort(request.dstPort());\n        Socks5AddressType addressType1 = Socks5AddressType.valueOf(out.readByte());\n        String dstAddr1 = Socks5AddressDecoder.DEFAULT.decodeAddress(addressType1, out);\n        short dstPort1 = out.readShort();\n        assert addressType == addressType1;\n        assert dstAddr.equals(dstAddr1);\n        assert dstPort == dstPort1;\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">buffer</span>.<span class=\"pl-s1\">ByteBuf</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">buffer</span>.<span class=\"pl-s1\">Unpooled</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">codec</span>.<span class=\"pl-s1\">socksx</span>.<span class=\"pl-s1\">v5</span>.*;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Reproducer</span> {\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n        <span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">out</span> = <span class=\"pl-smi\">Unpooled</span>.<span class=\"pl-en\">buffer</span>();\n        <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">dstAddr</span> = <span class=\"pl-s\">\"ABCD:EF01:2345:6789:ABCD:EF01:2345:6789\"</span>;\n        <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">dstPort</span> = <span class=\"pl-c1\">0</span>;\n        <span class=\"pl-smi\">DefaultSocks5CommandRequest</span> <span class=\"pl-s1\">request</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DefaultSocks5CommandRequest</span>(<span class=\"pl-smi\">Socks5CommandType</span>.<span class=\"pl-c1\">CONNECT</span>, <span class=\"pl-smi\">Socks5AddressType</span>.<span class=\"pl-s1\">IPv6</span>, <span class=\"pl-s1\">dstAddr</span>, <span class=\"pl-s1\">dstPort</span>);\n        <span class=\"pl-smi\">Socks5AddressType</span> <span class=\"pl-s1\">addressType</span> = <span class=\"pl-s1\">request</span>.<span class=\"pl-en\">dstAddrType</span>();\n        <span class=\"pl-s1\">out</span>.<span class=\"pl-en\">writeByte</span>(<span class=\"pl-s1\">addressType</span>.<span class=\"pl-en\">byteValue</span>());\n        <span class=\"pl-smi\">Socks5AddressEncoder</span>.<span class=\"pl-c1\">DEFAULT</span>.<span class=\"pl-en\">encodeAddress</span>(<span class=\"pl-s1\">addressType</span>, <span class=\"pl-s1\">request</span>.<span class=\"pl-en\">dstAddr</span>(), <span class=\"pl-s1\">out</span>);\n        <span class=\"pl-s1\">out</span>.<span class=\"pl-en\">writeShort</span>(<span class=\"pl-s1\">request</span>.<span class=\"pl-en\">dstPort</span>());\n        <span class=\"pl-smi\">Socks5AddressType</span> <span class=\"pl-s1\">addressType1</span> = <span class=\"pl-smi\">Socks5AddressType</span>.<span class=\"pl-en\">valueOf</span>(<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">readByte</span>());\n        <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">dstAddr1</span> = <span class=\"pl-smi\">Socks5AddressDecoder</span>.<span class=\"pl-c1\">DEFAULT</span>.<span class=\"pl-en\">decodeAddress</span>(<span class=\"pl-s1\">addressType1</span>, <span class=\"pl-s1\">out</span>);\n        <span class=\"pl-smi\">short</span> <span class=\"pl-s1\">dstPort1</span> = <span class=\"pl-s1\">out</span>.<span class=\"pl-en\">readShort</span>();\n        <span class=\"pl-k\">assert</span> <span class=\"pl-s1\">addressType</span> == <span class=\"pl-s1\">addressType1</span>;\n        <span class=\"pl-k\">assert</span> <span class=\"pl-s1\">dstAddr</span>.<span class=\"pl-en\">equals</span>(<span class=\"pl-s1\">dstAddr1</span>);\n        <span class=\"pl-k\">assert</span> <span class=\"pl-s1\">dstPort</span> == <span class=\"pl-s1\">dstPort1</span>;\n    }\n}</pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.90.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"17.0.3\" 2022-04-19 LTS</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Microsoft Windows 8.1</p>",
                "resourcePath": "/netty/netty/issues/13403",
                "createdAt": "2023-05-25T09:27:11Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use network byte order when encoding ipv4 address and port for Socks codecs",
        "url": "https://github.com/netty/netty/pull/13427",
        "resourcePath": "/netty/netty/pull/13427",
        "createdAt": "2023-06-06T05:38:32Z",
        "number": 13427,
        "mergeCommit": {
          "oid": "385b2880845520c6a50f8de5ed0653a2c7d75173",
          "message": "Use network byte order when encoding ipv4 address and port for Socks codecs (#13427)\n\nMotivation:\r\n\r\nSocks codecs do not always use network byte ordering when\r\nencoding/decoding socks messages resulting in connection issues\r\n\r\nModification:\r\n\r\nUse BE methods to properly read/write socks messages\r\n\r\nResult:\r\n\r\nFixes #13426",
          "commitUrl": "https://github.com/netty/netty/commit/385b2880845520c6a50f8de5ed0653a2c7d75173",
          "parents": {
            "nodes": [
              {
                "oid": "bc3035f51b8524e737f5f9b693957977a88258e9",
                "message": "Enhance DNS logs and make them consistent (#13429)\n\nMotivation:\r\n\r\nAlways include information that helps to correlate log events.\r\n\r\nModifications:\r\n\r\n- Always include `Channel` at the beginning of every log, when channel\r\nis available;\r\n- Always include `[queryId: sender]` when available;\r\n- `DnsQueryContext`: include expected values when logging at `WARN`\r\nlevel;\r\n\r\nResult:\r\n\r\nConsistent logging, easier to correlate log events."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-socks/src/main/java/io/netty/handler/codec/socksx/v4/Socks4ClientDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-socks/src/main/java/io/netty/handler/codec/socksx/v4/Socks4ClientEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-socks/src/main/java/io/netty/handler/codec/socksx/v4/Socks4ServerDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-socks/src/main/java/io/netty/handler/codec/socksx/v4/Socks4ServerEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-socks/src/main/java/io/netty/handler/codec/socksx/v5/Socks5AddressDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-socks/src/main/java/io/netty/handler/codec/socksx/v5/Socks5ClientEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-socks/src/main/java/io/netty/handler/codec/socksx/v5/Socks5CommandRequestDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-socks/src/main/java/io/netty/handler/codec/socksx/v5/Socks5CommandResponseDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-socks/src/main/java/io/netty/handler/codec/socksx/v5/Socks5ServerEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-socks/src/test/java/io/netty/handler/codec/socks/SocksCmdRequestTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85SRC2y2gAoMDYyMzk3OTZiNjczNDU5NWM1NmQyZTY0NzEzOGMyZmI4OWU3OTBhZQ",
                "url": "https://github.com/netty/netty/pull/13427/commits/06239796b6734595c56d2e647138c2fb89e790ae"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13426,
                "url": "https://github.com/netty/netty/issues/13426",
                "title": "Socks encoder/decoder do not always follow RFC regarding port",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">According to RFC1918 regarding Socks5 proxy protocol, destination port must be represented in <code class=\"notranslate\">network byte order</code>. I didn't find a similar information for Socks4 proxy implementations but I would think the requirement is the same (and it seems that OpenJDK socks implementation follow that convention as well: <a href=\"https://github.com/openjdk/jdk/blob/5cd8af7622a93afb32f5f3fccdc453096992453c/test/jdk/java/net/Socks/SocksServer.java#L200\">https://github.com/openjdk/jdk/blob/5cd8af7622a93afb32f5f3fccdc453096992453c/test/jdk/java/net/Socks/SocksServer.java#L200</a>)</p>\n<p dir=\"auto\">Netty implementation should also obey the requirement, independently of the buffer internal order</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">When an application uses byte buffers with little endian order, Netty socks encoder/decoder do not write the port information correctly, resulting in refused connection for example.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">0/ Setup a socks proxy (using <code class=\"notranslate\">ssh -D</code> or <code class=\"notranslate\">mitmproxy</code>)<br>\n1/ Write a small pipeline to connect to a remote system with a socks proxy handler<br>\n2/ Configure the pipeline to use an allocator to generate LE byte buffers<br>\n3/ Try and attempt to connect to the remote system</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.89</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openjdk version &quot;11.0.18&quot; 2023-01-17\nOpenJDK Runtime Environment Temurin-11.0.18+10 (build 11.0.18+10)\nOpenJDK 64-Bit Server VM Temurin-11.0.18+10 (build 11.0.18+10, mixed mode)\"><pre class=\"notranslate\"><code class=\"notranslate\">openjdk version \"11.0.18\" 2023-01-17\nOpenJDK Runtime Environment Temurin-11.0.18+10 (build 11.0.18+10)\nOpenJDK 64-Bit Server VM Temurin-11.0.18+10 (build 11.0.18+10, mixed mode)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin  xxx.local 22.5.0 Darwin Kernel Version 22.5.0: Mon Apr 24 20:53:19 PDT 2023; root:xnu-8796.121.2~5/RELEASE_ARM64_T6020 arm64</p>",
                "resourcePath": "/netty/netty/issues/13426",
                "createdAt": "2023-06-05T16:22:00Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Always enable leak tracking for derived buffers if parent is tracked",
        "url": "https://github.com/netty/netty/pull/13436",
        "resourcePath": "/netty/netty/pull/13436",
        "createdAt": "2023-06-12T15:00:58Z",
        "number": 13436,
        "mergeCommit": {
          "oid": "7d5fcf79d4ddb47f011a0e42575572ed63c8ab9b",
          "message": "Always enable leak tracking for derived buffers if parent is tracked (#13436)\n\nMotivation:\r\n\r\nCurrently, when leak tracking is set to SIMPLE or ADVANCED, and a\r\nderived buffer is created, the buffer is selected for leak tracking if\r\nthe parent buffer is tracked and the derived buffer is also selected by\r\nan independent roll of the dice. As a result, deeply derived buffers are\r\nexponentially less likely to be selected for leak tracking. This makes\r\nit difficult to find and diagnose leaks related to such buffers.\r\n\r\nModifications:\r\n\r\nWhen a derived buffer is created, and the parent buffer has leak\r\ntracking, the derived buffer now always has leak tracking applied.\r\n\r\nResult:\r\n\r\nLeaks of derived buffers are easier to find. Fixes #13414.",
          "commitUrl": "https://github.com/netty/netty/commit/7d5fcf79d4ddb47f011a0e42575572ed63c8ab9b",
          "parents": {
            "nodes": [
              {
                "oid": "bdb78730abc8b5ff04e4cdf5d8fec196585fec4a",
                "message": "Call ReleaseByteArrayElements even when handling of socket_path fails\u2026 (#13435)\n\n\u2026 to fix small mem leak\r\n\r\nMotivation:\r\n\r\nWe need to ensure we always call ReleaseByteArrayElements otherwise we\r\nleak memory.\r\n\r\nModifications:\r\n\r\nAlways call ReleaseByteArrayElements even when validation / handling of\r\nsocket_path fails\r\n\r\nResult:\r\n\r\nFix possible small memory leak"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/SimpleLeakAwareByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/ResourceLeakDetector.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85SyL9c2gAoNzBmM2IxYzVmYjY4M2NjOTBiMDg2NzUzMTAwZTliYTE2MmI0NDA1Mw",
                "url": "https://github.com/netty/netty/pull/13436/commits/70f3b1c5fb683cc90b086753100e9ba162b44053"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13414,
                "url": "https://github.com/netty/netty/issues/13414",
                "title": "Derived buffers are less likely to be selected for leak tracking",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Derived buffers should be at least as likely as non-derived buffers to be selected for leak tracking when leak detection level is SIMPLE or ADVANCED.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Derived buffers are exponentially less likely to be selected. From looking at the code, the parent buffer must be selected for leak tracking <em>and</em> the derived buffer must also be selected by a separate roll of the dice.</p>\n<p dir=\"auto\">This is creating a headache for me. I'm trying to debug a leak in an application where buffers are derived several times:</p>\n<ul dir=\"auto\">\n<li>Bytes are pulled off the wire. This level 1 buffer has, by default, 1 in 128 chance to be selected for leak tracking.</li>\n<li>The level 1 buffer is sliced, creating a level 2 buffer. This buffer has, by default, 1 in 16,384 chance to be selected for leak tracking.</li>\n<li>The level 2 buffer is sliced again, creating a level 3 buffer. This buffer has, by default, 1 in 2,097,152 chance to be selected for leak tracking. You have a better chance of winning $50,000 playing PowerBall.</li>\n<li>The level 3 buffer might be duplicated, creating a level 4 buffer. This buffer has, by default, 1 in 268,435,456 chance to be selected for leak tracking. Your odds of winning the PowerBall grand prize are only mildly worse.</li>\n</ul>\n<p dir=\"auto\">I get some leak logging for the level 1 buffers, and a handful of level 2. Based on those, it looks like the actual problem is that level 3/4 buffers are not being released properly. But since I have zero logs for those due to how unlikely they are to be selected for tracking, I can't tell where the the problem is.</p>\n<p dir=\"auto\">I'm now trying to work around this by setting <code class=\"notranslate\">io.netty.leakDetection.samplingInterval</code> to 32 and hoping I get lucky. Obviously, I could switch to PARANOID level, but this is happening in a production environment and I haven't been able to reproduce it elsewhere.</p>\n<p dir=\"auto\">IMO, Netty should provide a better solution for this situation. Two ideas off the top of my head:</p>\n<ul dir=\"auto\">\n<li>If the non-derived (level 1) buffer is selected for leak tracking, all derived buffers are automatically selected as well. No rolling dice.</li>\n<li>Make it possible for derived buffers to be selected for leak tracking even if the parent buffer was not.</li>\n</ul>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.92.Final</p>",
                "resourcePath": "/netty/netty/issues/13414",
                "createdAt": "2023-05-31T20:27:48Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use Two-Way for finding the delimiter in DelimiterBasedFrameDecoder",
        "url": "https://github.com/netty/netty/pull/13451",
        "resourcePath": "/netty/netty/pull/13451",
        "createdAt": "2023-06-15T17:25:21Z",
        "number": 13451,
        "mergeCommit": {
          "oid": "dd2c2bbb723c9a10e3efc6d7bc2cc4a4720375e2",
          "message": "Use Two-Way for finding the delimiter in DelimiterBasedFrameDecoder (#13451)\n\nMotivation:\r\nWe were using the naive and inefficient O(nm) algorithm here.\r\n\r\nModification:\r\nRemove the naive algorithm and instead call out to the optimised Two-Way\r\nsearch we already have in ByteBufUtil.\r\n\r\nResult:\r\nThe DelimiterBasedFrameDecoder now searches for delimiters using the\r\nfastest algorithm available to us.\r\n\r\nFixes #13313",
          "commitUrl": "https://github.com/netty/netty/commit/dd2c2bbb723c9a10e3efc6d7bc2cc4a4720375e2",
          "parents": {
            "nodes": [
              {
                "oid": "26a7df3e9a5a4945786a736ad28cb2db62015016",
                "message": "Implement contains for SelectedSelectionKeySet (#13452)\n\nMotivation:\r\nThe `contains` method may be called in the\r\n`sub.nio.ch.SelectorImpl.processReadyEvents` method on macOS and\r\nWindows, so we need to implement it correctly. Otherwise, we can lose\r\nread-poll events.\r\nSee the investigation on the Hazelcast repo:\r\nhttps://github.com/hazelcast/hazelcast/pull/24267\r\n\r\nModification:\r\nAdd a contains method that just does a linear scan for the selection\r\nkey. This preserves the performance characteristics of all the other\r\nmethods.\r\n\r\nResult:\r\nFixes #13328"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/DelimiterBasedFrameDecoder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85THpRZ2gAoZTkwZDRkNTE4MGQ2MDIxMzgyYWE0ZTYyYzhhNGJlYjIxNzE0MWYwZA",
                "url": "https://github.com/netty/netty/pull/13451/commits/e90d4d5180d6021382aa4e62c8a4beb217141f0d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13313,
                "url": "https://github.com/netty/netty/issues/13313",
                "title": "the cpu usage is too high(80%) when run netty server thread named NioEventLoopGroup-3-1",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<h3 dir=\"auto\">Actual behavior</h3>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">int processors = Runtime.getRuntime().availableProcessors();<br>\nEventLoopGroup bossGroup = new NioEventLoopGroup(processors<em>2);<br>\nEventLoopGroup workerGroup = new NioEventLoopGroup(processors</em>2);</p>\n<h3 dir=\"auto\">Netty version</h3>\n\n  io.netty\n  netty-all\n  [4.1.90.Final]\n\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">jdk1.8.0_361</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows Server 2022 Datacenter</p>\n<h3 dir=\"auto\">some picture is worth a thousand words.</h3>\n<p dir=\"auto\"><a href=\"https://raw.githubusercontent.com/zzy444626905/images/main/netty-bug/1.jpg\" rel=\"nofollow\">picture1</a><br>\n<a href=\"https://raw.githubusercontent.com/zzy444626905/images/main/netty-bug/2.jpg\" rel=\"nofollow\">picture2</a></p>",
                "resourcePath": "/netty/netty/issues/13313",
                "createdAt": "2023-03-31T03:22:05Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Implement contains for SelectedSelectionKeySet",
        "url": "https://github.com/netty/netty/pull/13452",
        "resourcePath": "/netty/netty/pull/13452",
        "createdAt": "2023-06-15T18:49:43Z",
        "number": 13452,
        "mergeCommit": {
          "oid": "26a7df3e9a5a4945786a736ad28cb2db62015016",
          "message": "Implement contains for SelectedSelectionKeySet (#13452)\n\nMotivation:\r\nThe `contains` method may be called in the\r\n`sub.nio.ch.SelectorImpl.processReadyEvents` method on macOS and\r\nWindows, so we need to implement it correctly. Otherwise, we can lose\r\nread-poll events.\r\nSee the investigation on the Hazelcast repo:\r\nhttps://github.com/hazelcast/hazelcast/pull/24267\r\n\r\nModification:\r\nAdd a contains method that just does a linear scan for the selection\r\nkey. This preserves the performance characteristics of all the other\r\nmethods.\r\n\r\nResult:\r\nFixes #13328",
          "commitUrl": "https://github.com/netty/netty/commit/26a7df3e9a5a4945786a736ad28cb2db62015016",
          "parents": {
            "nodes": [
              {
                "oid": "b87831421109536df204bde0023921163fba4696",
                "message": "Delay possibility to reuse transaction id when query is failing becau\u2026 (#13446)\n\n\u2026se of timeout\r\n\r\nMotivation:\r\n\r\nWe should try to make it as unlikely as possible that we will reuse a\r\ntransaction for a query while the remote peer still might send the\r\nresponse for the previously timed out query. Failing to do so put us in\r\nrisk that we will not be able to map the response correctly.\r\n\r\nThis reduces the risk of the following scenario:\r\n\r\n- Query is send to the remote nameeserver\r\n- Query is failed as the remote nameserver did not respond in the\r\nconfigured time\r\n- New query is send which uses the same transaction id as the failed\r\none. While we use a random to generate these this can still happen as we\r\nonly have 16bits for the id\r\n- nameserver sends back the response for the first query (that we\r\nalready failed as timed out)\r\n- We lookup the query for the id and find the new one and try to\r\ncomplete it with the response for the \"old query\".\r\n- This fails as validation of hostname etc not matches.\r\n\r\nModifications:\r\n\r\nIf we fail a query because of a timeout or cancellation, delay the removal of the id from\r\nthe context map. This will make the id not-reusable until the removal\r\nactually take place.\r\n\r\nResult:\r\n\r\nMuch less likely to reuse an id while the remote nameserver might still\r\nrespond to the old query"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/nio/SelectedSelectionKeySet.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/channel/nio/SelectedSelectionKeySetTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85TIAjl2gAoY2E4ODFmZDc5OWRmOGUyMGJiYjMxNmQ2ODc0ZWYzMjNkNjI4ZjcyNg",
                "url": "https://github.com/netty/netty/pull/13452/commits/ca881fd799df8e20bbb316d6874ef323d628f726"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13328,
                "url": "https://github.com/netty/netty/issues/13328",
                "title": "Possible issues with SelectedSelectionKeySet in non-linux operating systems",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">SelectedSelectionKeySet</code> doesn't implement <code class=\"notranslate\">contains()</code> method. Or at least it returns always false. This may create issues in non-linux operating systems.</p>\n<p dir=\"auto\">To give you more context, in my work, like you do, we try to not produce garbage by replacing <code class=\"notranslate\">HashSet</code> with something similar to <code class=\"notranslate\">SelectedSelectionKeySet</code>. Actually this trick is something we learned from netty.</p>\n<p dir=\"auto\">So while investigating a recent bug, I realized lack of correct implementation of <code class=\"notranslate\">contains()</code> method creates problems in macos (and very possibly windows as well). I tried to summarize my finding in here: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1666434124\" data-permission-text=\"Title is private\" data-url=\"https://github.com/hazelcast/hazelcast/issues/24267\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/hazelcast/hazelcast/pull/24267/hovercard\" href=\"https://github.com/hazelcast/hazelcast/pull/24267\">hazelcast/hazelcast#24267</a></p>\n<p dir=\"auto\">I do think this issue effects netty as well.</p>",
                "resourcePath": "/netty/netty/issues/13328",
                "createdAt": "2023-04-13T14:07:54Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Reduce object allocations during SslHandler.flush(...)",
        "url": "https://github.com/netty/netty/pull/13472",
        "resourcePath": "/netty/netty/pull/13472",
        "createdAt": "2023-07-06T09:52:38Z",
        "number": 13472,
        "mergeCommit": {
          "oid": "4bd20067ace14b3dfd14e4a4bb9cbe480e97d3b0",
          "message": "Reduce object allocations during SslHandler.flush(...) (#13472)\n\nMotivation:\r\n\r\nIn SslHandler.flush(...) we called wrap(...) which used nioBuffer(...)\r\nto obtain a ByteBuffer from a ByteBuf. This creates more objects then\r\nneeded. We can use internalNioBuffer(...) for these short living objects\r\nwhich will often not need to allocate anything when using the\r\nPooledByteBufAllocator.\r\n\r\nModifications:\r\n\r\nUse internalNioBuffer(...) when possible\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13462",
          "commitUrl": "https://github.com/netty/netty/commit/4bd20067ace14b3dfd14e4a4bb9cbe480e97d3b0",
          "parents": {
            "nodes": [
              {
                "oid": "a27d255fe07544f26c2ca6c9ca6a81ed2f523ce1",
                "message": "Add resource leak listener (#13466)\n\nMotivation:\r\n\r\nWhen a leak is detected, the logger will print `LEAK: ....`.\r\nThis is very useful to find resource leak, but it is a little\r\ninconvenient, because the log file need to be checked manually.\r\n\r\nAnother approach is to custom resource leak detector by configuration\r\n`io.netty.customResourceLeakDetector` and implement\r\n`ResourceLeakDetector` with a sub-class, but this is a heavy-weight\r\noperation for users.\r\n\r\nThere should be an easy way for users to find resource leak.\r\n\r\nModification:\r\n\r\nAdd leak listener interface to `ResourceLeakDetector`.\r\nThen users can set listener and do something when a leak is detected.\r\nFor example:\r\n```\r\nByteBufUtil.setLeakListener((resType, record) -> {\r\n    MyMonitor.reportAsync(\"ByteBufLeak\", 1);  // user can then config email/message/call alarm on the monitor.\r\n});\r\n```\r\n\r\nResult:\r\n\r\nThis new approach is very light-weight for users to find resource leak.\r\n\r\n---------\r\n\r\nCo-authored-by: xuesenliang <xuesenliang@tencent.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslHandler.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85Uyukt2gAoYzlkMmE5MTZjNDhlYzdkNzQ3OGFmMjI4NjhmMzQ4ZjI2Mjc2M2NlMA",
                "url": "https://github.com/netty/netty/pull/13472/commits/c9d2a916c48ec7d7478af22868f348f262763ce0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13462,
                "url": "https://github.com/netty/netty/issues/13462",
                "title": "Reduce memory allocation of `SslHandler.flush`",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When we invoke <code class=\"notranslate\">SslHandler.flush</code> method. it tooks 70% memory allocation. see image below.<br>\nI want to ask is there a way to reduce the memory allocation of <code class=\"notranslate\">SslHandler.flush</code>?</p>\n<p dir=\"auto\">more details see attachment.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"4.1.94.Final\"><pre class=\"notranslate\"><code class=\"notranslate\">4.1.94.Final\n</code></pre></div>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openjdk version &quot;17.0.2&quot; 2022-01-18\nOpenJDK Runtime Environment (build 17.0.2+8-86)\nOpenJDK 64-Bit Server VM (build 17.0.2+8-86, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">openjdk version \"17.0.2\" 2022-01-18\nOpenJDK Runtime Environment (build 17.0.2+8-86)\nOpenJDK 64-Bit Server VM (build 17.0.2+8-86, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Linux erebor-dev 2.6.32-642.el6.x86_64 #1 SMP Tue May 10 17:27:01 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\"><pre class=\"notranslate\"><code class=\"notranslate\">Linux erebor-dev 2.6.32-642.el6.x86_64 #1 SMP Tue May 10 17:27:01 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/5235764/249060668-ec77f2ea-f4b1-445b-8ba3-ff812930c871.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5MTk0MTMsIm5iZiI6MTcxNDkxOTExMywicGF0aCI6Ii81MjM1NzY0LzI0OTA2MDY2OC1lYzc3ZjJlYS1mNGIxLTQ0NWItOGJhMy1mZjgxMjkzMGM4NzEucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMTQyNTEzWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9MDQ2Mzc2ZTJjMTdjZDczMzgxMTI2M2ZlYzAyYjNmYmUwMTViODFjOGI0ZTRlM2JmMzFiNmFkNzBhM2U1MjY4YiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.qY5eixsPBR1VrKaHcCzGJWS41cKIyvwjzsObwvT3QdE\"><img src=\"https://private-user-images.githubusercontent.com/5235764/249060668-ec77f2ea-f4b1-445b-8ba3-ff812930c871.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5MTk0MTMsIm5iZiI6MTcxNDkxOTExMywicGF0aCI6Ii81MjM1NzY0LzI0OTA2MDY2OC1lYzc3ZjJlYS1mNGIxLTQ0NWItOGJhMy1mZjgxMjkzMGM4NzEucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMTQyNTEzWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9MDQ2Mzc2ZTJjMTdjZDczMzgxMTI2M2ZlYzAyYjNmYmUwMTViODFjOGI0ZTRlM2JmMzFiNmFkNzBhM2U1MjY4YiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.qY5eixsPBR1VrKaHcCzGJWS41cKIyvwjzsObwvT3QdE\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a href=\"https://github.com/netty/netty/files/11878516/front2_alloc.zip\">front2_alloc.zip</a></p>",
                "resourcePath": "/netty/netty/issues/13462",
                "createdAt": "2023-06-27T06:53:09Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Ensure ByteBuf.capacity(...) will never throw AssertionError",
        "url": "https://github.com/netty/netty/pull/13478",
        "resourcePath": "/netty/netty/pull/13478",
        "createdAt": "2023-07-09T13:54:29Z",
        "number": 13478,
        "mergeCommit": {
          "oid": "425aa8a84e6adde68ee122870a8ec6faeeb2813e",
          "message": "Ensure ByteBuf.capacity(...) will never throw AssertionError (#13478)\n\nMotivation:\r\n\r\nDue of how we implemented PoolArena.reallocate(...) it was possible that\r\nwe triggered an AssertionError while trying to resize a buffer.\r\n\r\nModifications:\r\n\r\n- Ensure some parts of reallocation for a ByteBuf are serialized\r\n- Change method signature to remove not needed param\r\n- Add unit test\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13461 and\r\nhttps://github.com/netty/netty/issues/13467",
          "commitUrl": "https://github.com/netty/netty/commit/425aa8a84e6adde68ee122870a8ec6faeeb2813e",
          "parents": {
            "nodes": [
              {
                "oid": "09c8f60cfd8aad266da66985291de7ef269fa093",
                "message": "Fix Classloader memory leak via JNI global references (#13481)\n\nMotivation:\r\n\r\nWe did forget to call NETTY_JNI_UTIL_UNLOAD_CLASS for one class which\r\ncaused a JNI global reference to not be deleted.\r\n\r\nModifications:\r\n\r\nAdd missing NETTY_JNI_UTIL_UNLOAD_CLASS call\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13480"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolArena.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PooledByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/PooledByteBufAllocatorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85VA9yz2gAoM2M3MDA1YTcxMDJjMGVhOTljNTViNTJlNjBkZTA3YWU4NDJiZjkzYg",
                "url": "https://github.com/netty/netty/pull/13478/commits/3c7005a7102c0ea99c55b52e60de07ae842bf93b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13461,
                "url": "https://github.com/netty/netty/issues/13461",
                "title": "No next available bitmap index found ",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">no exception</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">throw this exception</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">unknow</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">java.lang.AssertionError: No next available bitmap index found (bitmapIdx = -1), even though there are supposed to be (numAvail = 1) out of (maxNumElems = 32) available indexes.<br>\nat io.netty.buffer.PoolSubpage.allocate(PoolSubpage.java:95)<br>\nat io.netty.buffer.PoolArena.tcacheAllocateSmall(PoolArena.java:169)<br>\nat io.netty.buffer.PoolArena.allocate(PoolArena.java:137)<br>\nat io.netty.buffer.PoolArena.allocate(PoolArena.java:129)<br>\nat io.netty.buffer.PooledByteBufAllocator.newDirectBuffer(PooledByteBufAllocator.java:396)<br>\nat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:188)<br>\nat io.netty.buffer.AbstractByteBufAllocator.directBuffer(AbstractByteBufAllocator.java:174)<br>\nat io.netty.buffer.AbstractByteBufAllocator.buffer(AbstractByteBufAllocator.java:108)</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.82</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"1.8.0_302\"<br>\nOpenJDK Runtime Environment (build 1.8.0_302-b08)<br>\nOpenJDK 64-Bit Server VM (build 25.302-b08, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">centos7<br>\nLinux raid-us-prod-outside01 3.10.0-1160.36.2.el7.x86_64 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"418688\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/1\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/1/hovercard\" href=\"https://github.com/netty/netty/pull/1\">#1</a> SMP Wed Jul 21 11:57:15 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/13461",
                "createdAt": "2023-06-25T12:35:29Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix Classloader memory leak via JNI global references",
        "url": "https://github.com/netty/netty/pull/13481",
        "resourcePath": "/netty/netty/pull/13481",
        "createdAt": "2023-07-10T22:38:58Z",
        "number": 13481,
        "mergeCommit": {
          "oid": "09c8f60cfd8aad266da66985291de7ef269fa093",
          "message": "Fix Classloader memory leak via JNI global references (#13481)\n\nMotivation:\r\n\r\nWe did forget to call NETTY_JNI_UTIL_UNLOAD_CLASS for one class which\r\ncaused a JNI global reference to not be deleted.\r\n\r\nModifications:\r\n\r\nAdd missing NETTY_JNI_UTIL_UNLOAD_CLASS call\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13480",
          "commitUrl": "https://github.com/netty/netty/commit/09c8f60cfd8aad266da66985291de7ef269fa093",
          "parents": {
            "nodes": [
              {
                "oid": "00f48a8dd4c263b3aaca7e26d5b8ce573c4f45fb",
                "message": "Give explicit error on missing BouncyCastle PKIX library (#13475)\n\nMotivation:\r\nIf the BounyCastle PKIX library is missing from the classpath, Netty\r\nthrows an exception like this: `Failed to generate a self-signed X.509\r\ncertificate using Bouncy Castle`. This is not really helpful as the user\r\nhas to go through Stacktrace to find out what went wrong. To combat\r\nthis, I added a util method that checks if\r\n`org.bouncycastle.cert.X509v3CertificateBuilder` is available in the\r\nclasspath or not. Based on this, we can return explicit clear exceptions\r\nwhich helps in debugging.\r\n\r\n`org.bouncycastle.cert.X509v3CertificateBuilder` is part of the\r\nBounyCastle PKIX library.\r\n\r\nModification:\r\nAdded `isBouncyCastleAvailable()` method to check for\r\n`org.bouncycastle.cert.X509v3CertificateBuilder` availability in\r\nclasspath.\r\n\r\nResult:\r\nClear explicit error on missing BouncyCastle PKIX library"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns-native-macos/src/main/c/netty_resolver_dns_macos.c"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85VIu9b2gAoYTVhOTYyYzQ2MGMxYjZjMGFlN2U3OGEzMmQ3ZWYwMDc1MzEwNTIyMw",
                "url": "https://github.com/netty/netty/pull/13481/commits/a5a962c460c1b6c0ae7e78a32d7ef00753105223"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13480,
                "url": "https://github.com/netty/netty/issues/13480",
                "title": "Classloader memory leak via JNI global references",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Netty (in this case via reactor-netty) can be used in conjunction with multiple classloaders, allowing classloaders to be properly unloaded if not referenced anymore. (in this case this is important for a gradle plugin)</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">When using <code class=\"notranslate\">netty-resolver-dns-native-macos</code>, a classloader and all its classes can not be unloaded even if not referenced anymore as the class <code class=\"notranslate\">io.netty.resolver.dns.macos.DnsResolver</code> is a GC root as a JNI global reference.</p>\n<p dir=\"auto\">This class (and other required classes) are loaded via <code class=\"notranslate\">NETTY_JNI_UTIL_LOAD_CLASS</code> (</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/79d3fa52dc0ee07ccc1d9c68648b57dc3bafc88e/resolver-dns-native-macos/src/main/c/netty_resolver_dns_macos.c#L186\">netty/resolver-dns-native-macos/src/main/c/netty_resolver_dns_macos.c</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 186\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/79d3fa52dc0ee07ccc1d9c68648b57dc3bafc88e\">79d3fa5</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L186\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"186\"></td>\n          <td id=\"LC186\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-en\">NETTY_JNI_UTIL_LOAD_CLASS</span>(<span class=\"pl-s1\">env</span>, <span class=\"pl-s1\">dnsResolverClass</span>, <span class=\"pl-s1\">nettyClassName</span>, <span class=\"pl-s1\">done</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n) which uses <code class=\"notranslate\">NewGlobalRef</code> (<a href=\"https://github.com/netty/netty-jni-util/blob/8d820fba781882f8a7fe94efb7656d1413ff8bb8/src/main/c/netty_jni_util.h#L45\">https://github.com/netty/netty-jni-util/blob/8d820fba781882f8a7fe94efb7656d1413ff8bb8/src/main/c/netty_jni_util.h#L45</a>).<p></p>\n<p dir=\"auto\">Maybe using weak global references instead of global references of the classes is a solution.</p>\n<p dir=\"auto\">Or is there any other solutions how to safely use netty with dynamic classloaders?</p>\n\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.94.Final via reactor-netty:1.1.8</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Any</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">MacOS</p>",
                "resourcePath": "/netty/netty/issues/13480",
                "createdAt": "2023-07-10T21:15:39Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Always increment Stream Id on createStream",
        "url": "https://github.com/netty/netty/pull/13485",
        "resourcePath": "/netty/netty/pull/13485",
        "createdAt": "2023-07-12T15:17:30Z",
        "number": 13485,
        "mergeCommit": {
          "oid": "4e1a0c3e2043fd3c0049c94468eff82072c81d2b",
          "message": "Always increment Stream Id on createStream (#13485)\n\nMotivation:\r\n\r\nWhen the creation of a stream causes an error for whatever reason we\r\nwant to increment the next expected stream id.\r\nie: checkNewStreamAllowed raises an error which causes the headers frame\r\nto get rejected subsequently a data frame arrives and it throws a\r\nprotocol error.\r\n\r\nModification:\r\n\r\nUse a finally block so that we always increment the expected next stream\r\nid\r\n\r\nResult:\r\n\r\nFixes #12065\r\n\r\n---------\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/4e1a0c3e2043fd3c0049c94468eff82072c81d2b",
          "parents": {
            "nodes": [
              {
                "oid": "1e0dab115caf0086ee7d141b558e81d0275f45da",
                "message": "Correctly retain slice when calling ReplayingDecoderByteBuf.retainedS\u2026 (#13496)\n\n\u2026lice(...)\r\n\r\nMotivation:\r\n\r\nWe need to retain the slice when calling retainedSlice(...). Due a bug\r\nwe did miss to do so.\r\n\r\nModifications:\r\n\r\n- Delegate to the correct method.\r\n- Add test-case\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13455"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85VUuAC2gAoZmIxZmRjYTMwZDc5ZWM2MmJlZGJjZGU3ODY2ZTM1YjdhYWFiMzJjNA",
                "url": "https://github.com/netty/netty/pull/13485/commits/fb1fdca30d79ec62bedbcde7866e35b7aaab32c4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 12065,
                "url": "https://github.com/netty/netty/issues/12065",
                "title": "Throwing protocol error when http2 max concurrent streams is exceeded instead of resStream",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">I'm new to Http2, and was trying to implement some load shedding on our server by limiting the number of concurrent streams set. This is currently fixed at 100. When setting the maxConcurrentStream in the HttpToHttp2ConnectionHandler, I was expecting to get see the behaviour mentioned in the spec (<a href=\"https://httpwg.org/specs/rfc7540.html#rfc.section.8.1.4\" rel=\"nofollow\">https://httpwg.org/specs/rfc7540.html#rfc.section.8.1.4</a>)  and get a RST_STREAM frame back to the client.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Instead i am getting an error, Stream ID does not exist. This results in a connection error, causing a GOAWAY with \"PROTOCOL_ERROR\" and closes the whole connection instead of just the stream? I have not understood if I am doing anything wrong here.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/98832797/152010319-bf8355f0-bf74-4ac8-8244-06019b706653.png\"><img src=\"https://user-images.githubusercontent.com/98832797/152010319-bf8355f0-bf74-4ac8-8244-06019b706653.png\" alt=\"Screenshot 2022-02-01 at 15 50 15\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/98832797/152004563-d3ad7869-029b-49cb-a845-d45a1ca9e60b.png\"><img src=\"https://user-images.githubusercontent.com/98832797/152004563-d3ad7869-029b-49cb-a845-d45a1ca9e60b.png\" alt=\"Screenshot 2022-02-01 at 15 50 30\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/98832797/152009792-addba3b9-86a0-4d91-b435-3d15457d3bfc.png\"><img src=\"https://user-images.githubusercontent.com/98832797/152009792-addba3b9-86a0-4d91-b435-3d15457d3bfc.png\" alt=\"Screenshot 2022-02-01 at 16 32 55\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Server Configuration</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class Http2OnlyHandler extends ApplicationProtocolNegotiationHandler {\n @Override\n    protected void configurePipeline(ChannelHandlerContext ctx, String protocol) throws Exception {\n        if (ApplicationProtocolNames.HTTP_2.equals(protocol)) {\n            configureRedisPipeline(ctx);\n            return;\n        }\n\n        if (ApplicationProtocolNames.HTTP_1_1.equals(protocol)) {\n            configureFallback(ctx);\n            return;\n        }\n\n        throw new IllegalStateException(&quot;Unsupported protocol: &quot; + protocol);\n    }\n\n\n  private void configureRedisPipeline(ChannelHandlerContext ctx) {\n  \n    DefaultHttp2Connection connection = new DefaultHttp2Connection(true);\n     InboundHttp2ToHttpAdapter listener = new InboundHttp2ToHttpAdapterBuilder(connection)\n        .propagateSettings(true).validateHttpHeaders(false)\n        .maxContentLength(maxContentLength).build();\n  \n    HttpToHttp2ConnectionHandler connectionHandler = new HttpToHttp2ConnectionHandlerBuilder()\n        .frameListener(tester)\n        .initialSettings(new Http2Settings().maxConcurrentStreams(100))\n        .connection(connection).build();\n  \n    ctx.pipeline().addLast(connectionHandler);\n  }\n}\n\n\n bootstrap.group(bossGroup, workerGroup)\n                .channel(channelClazz)\n                .childHandler(new ChannelInitializer&lt;SocketChannel&gt;() {\n                    @Override\n                    protected void initChannel(SocketChannel ch) {\n                        ch.pipeline().addLast(sslCtx.newHandler(ch.alloc()),\n                            new Http2OnlyHandler(),\n                            etc...)\n                    }\n                 })\"><pre class=\"notranslate\"><code class=\"notranslate\">public class Http2OnlyHandler extends ApplicationProtocolNegotiationHandler {\n @Override\n    protected void configurePipeline(ChannelHandlerContext ctx, String protocol) throws Exception {\n        if (ApplicationProtocolNames.HTTP_2.equals(protocol)) {\n            configureRedisPipeline(ctx);\n            return;\n        }\n\n        if (ApplicationProtocolNames.HTTP_1_1.equals(protocol)) {\n            configureFallback(ctx);\n            return;\n        }\n\n        throw new IllegalStateException(\"Unsupported protocol: \" + protocol);\n    }\n\n\n  private void configureRedisPipeline(ChannelHandlerContext ctx) {\n  \n    DefaultHttp2Connection connection = new DefaultHttp2Connection(true);\n     InboundHttp2ToHttpAdapter listener = new InboundHttp2ToHttpAdapterBuilder(connection)\n        .propagateSettings(true).validateHttpHeaders(false)\n        .maxContentLength(maxContentLength).build();\n  \n    HttpToHttp2ConnectionHandler connectionHandler = new HttpToHttp2ConnectionHandlerBuilder()\n        .frameListener(tester)\n        .initialSettings(new Http2Settings().maxConcurrentStreams(100))\n        .connection(connection).build();\n  \n    ctx.pipeline().addLast(connectionHandler);\n  }\n}\n\n\n bootstrap.group(bossGroup, workerGroup)\n                .channel(channelClazz)\n                .childHandler(new ChannelInitializer&lt;SocketChannel&gt;() {\n                    @Override\n                    protected void initChannel(SocketChannel ch) {\n                        ch.pipeline().addLast(sslCtx.newHandler(ch.alloc()),\n                            new Http2OnlyHandler(),\n                            etc...)\n                    }\n                 })\n</code></pre></div>\n<p dir=\"auto\">Client:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"channel.eventLoop().submit(() -&gt; {\n            int streamId = this.streamId.addAndGet(2);\n\n            req.headers().setInt(HttpConversionUtil.ExtensionHeaderNames.STREAM_ID.text(), streamId);\n            req.headers().set(HttpConversionUtil.ExtensionHeaderNames.SCHEME.text(), &quot;https&quot;);\n            req.headers().set(HttpHeaderNames.HOST, &quot;server&quot;);\n            req.headers().add(HttpHeaderNames.ACCEPT_ENCODING, HttpHeaderValues.GZIP);\n            req.headers().add(HttpHeaderNames.ACCEPT_ENCODING, HttpHeaderValues.DEFLATE);\n\n            pendingRequests.put(streamId, new PendingReq&lt;&gt;(responseTransformer, future, System.currentTimeMillis(), (timeoutMs &gt; 0) ? System.currentTimeMillis() + timeoutMs : -1));\n            channel.writeAndFlush(req, channel.voidPromise());\n        });\n\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">channel.eventLoop().submit(() -&gt; {\n            int streamId = this.streamId.addAndGet(2);\n\n            req.headers().setInt(HttpConversionUtil.ExtensionHeaderNames.STREAM_ID.text(), streamId);\n            req.headers().set(HttpConversionUtil.ExtensionHeaderNames.SCHEME.text(), \"https\");\n            req.headers().set(HttpHeaderNames.HOST, \"server\");\n            req.headers().add(HttpHeaderNames.ACCEPT_ENCODING, HttpHeaderValues.GZIP);\n            req.headers().add(HttpHeaderNames.ACCEPT_ENCODING, HttpHeaderValues.DEFLATE);\n\n            pendingRequests.put(streamId, new PendingReq&lt;&gt;(responseTransformer, future, System.currentTimeMillis(), (timeoutMs &gt; 0) ? System.currentTimeMillis() + timeoutMs : -1));\n            channel.writeAndFlush(req, channel.voidPromise());\n        });\n\n}\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.70.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">java version \"1.8.0_271\"<br>\nJava(TM) SE Runtime Environment (build 1.8.0_271-b09)<br>\nJava HotSpot(TM) 64-Bit Server VM (build 25.271-b09, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin sklas-mac 19.6.0 Darwin Kernel Version 19.6.0: Sun Nov 14 19:58:51 PST 2021; root:xnu-6153.141.50~1/RELEASE_X86_64 x86_64</p>",
                "resourcePath": "/netty/netty/issues/12065",
                "createdAt": "2022-02-01T15:59:48Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Correctly retain slice when calling ReplayingDecoderByteBuf.retainedS\u2026",
        "url": "https://github.com/netty/netty/pull/13496",
        "resourcePath": "/netty/netty/pull/13496",
        "createdAt": "2023-07-18T13:36:53Z",
        "number": 13496,
        "mergeCommit": {
          "oid": "1e0dab115caf0086ee7d141b558e81d0275f45da",
          "message": "Correctly retain slice when calling ReplayingDecoderByteBuf.retainedS\u2026 (#13496)\n\n\u2026lice(...)\r\n\r\nMotivation:\r\n\r\nWe need to retain the slice when calling retainedSlice(...). Due a bug\r\nwe did miss to do so.\r\n\r\nModifications:\r\n\r\n- Delegate to the correct method.\r\n- Add test-case\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13455",
          "commitUrl": "https://github.com/netty/netty/commit/1e0dab115caf0086ee7d141b558e81d0275f45da",
          "parents": {
            "nodes": [
              {
                "oid": "fa2c81f7cb9115d9417410ec23f023ae9ea34f8b",
                "message": "Make transport.Bootstrap usable with no netty-resolver on classpath (#13488)\n\nMotivation:\r\nSince some address families (e.g. unix sockets) do not need name\r\nresolver, It should be possible to exclude netty-resolver from\r\nclasspath.\r\n\r\nCurrently excluding name resolver leads to NoClassDefFoundError:\r\nAddressResolverGroup during Bootstrap instantiation.\r\n\r\nModification:\r\n\r\nAdd disableResolver() method to Bootstrap.\r\n\r\nChange BootstrapConfig.resolver() return null if\r\nBootstrap.disableResolver() is called.\r\n\r\nIntroduce ExternalAddressResolver class to hold AddressResolver related\r\nreferences to avoid NoClassDefFoundError if Bootstrap.disableResolver()\r\ncalled and no netty-resolver is on classpath.\r\n\r\nResult:\r\n\r\nBootstrap is usable with no netty-resolver on classpath.\r\n\r\n---------\r\n\r\nCo-authored-by: Chris Vest <mr.chrisvest@gmail.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/ReplayingDecoderByteBuf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/test/java/io/netty/handler/codec/ReplayingDecoderByteBufTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85VyZIr2gAoM2NhZDVjNmFhOTFiOTUyMGU1YzNhZDU5N2MwYjAwZDcyN2Y4N2FkYQ",
                "url": "https://github.com/netty/netty/pull/13496/commits/3cad5c6aa91b9520e5c3ad597c0b00d727f87ada"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13455,
                "url": "https://github.com/netty/netty/issues/13455",
                "title": "ReplayingDecoderByteBuf.retainedSlice(...) behavior unexpected and not documented",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">ByteBuf.retainedSlice</code> javadoc states:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"This method behaves similarly to {@code slice(...).retain()} \nexcept that this method may return a buffer implementation \nthat produces less garbage.\"><pre class=\"notranslate\"><code class=\"notranslate\">This method behaves similarly to {@code slice(...).retain()} \nexcept that this method may return a buffer implementation \nthat produces less garbage.\n</code></pre></div>\n<p dir=\"auto\">However, <code class=\"notranslate\">ReplayingDecoderByteBuf.retainedSlice(...)</code> is the same code as <code class=\"notranslate\">ReplayingDecoderByteBuf.slice(...)</code>, i.e. it doesn't retain the slice. Not only it's unexpected and breaks the contract in one of the most important and error-prone domains of manual memory management, but also it's completely undocumented.<br>\nAs a workaround one could use <code class=\"notranslate\">slice(...).retain()</code>.<br>\n(Personally I just marked <code class=\"notranslate\">retainedSlice(...)</code> as cursed for myself and switched to explicitly calling <code class=\"notranslate\">slice(...).retain()</code> instead at all times).</p>\n<p dir=\"auto\">If this is due to some unobvious design goals, at least it should be well documented, and ideally this information should be reachable from ByteBuf javadoc, as well as any other alterations to the original contract. Currently there is no way to discover this other than encountering unexpected program behavior causing errors and debugging.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">ReplayingDecoderByteBuf.retainedSlice()</code> retains the slice.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">ReplayingDecoderByteBuf.retainedSlice()</code> is the same code as <code class=\"notranslate\">ReplayingDecoderByteBuf.slice()</code>, and doesn't retain the slice.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">get an instance of <code class=\"notranslate\">ReplayingDecoderByteBuf</code>, run <code class=\"notranslate\">retainedSlice()</code>, check <code class=\"notranslate\">refCnt()</code>s, <code class=\"notranslate\">release()</code> main buffer, check <code class=\"notranslate\">refCnt()</code>s.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Apologies, I don't know how to create a minimal test that grabs an instance of <code class=\"notranslate\">ReplayingDecoderByteBuf</code> without running a full client-server, but you can just look at this code here:<br>\n<a href=\"https://github.com/netty/netty/blob/4.1/codec/src/main/java/io/netty/handler/codec/ReplayingDecoderByteBuf.java#L863-L873\">https://github.com/netty/netty/blob/4.1/codec/src/main/java/io/netty/handler/codec/ReplayingDecoderByteBuf.java#L863-L873</a><br>\nLiterally the same code.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.60.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">17</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin CSS-C02FM602MD6R 22.5.0 Darwin Kernel Version 22.5.0: Mon Apr 24 20:51:50 PDT 2023; root:xnu-8796.121.2~5/RELEASE_X86_64 x86_64</p>",
                "resourcePath": "/netty/netty/issues/13455",
                "createdAt": "2023-06-19T17:45:53Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix incorrect statement in ChannelOutboundBuffer javadocs",
        "url": "https://github.com/netty/netty/pull/13502",
        "resourcePath": "/netty/netty/pull/13502",
        "createdAt": "2023-07-20T09:28:47Z",
        "number": 13502,
        "mergeCommit": {
          "oid": "830166292be28e64ec6b43170cff40a31a442ad4",
          "message": "Fix incorrect statement in ChannelOutboundBuffer javadocs (#13502)\n\nMotivation:\r\n\r\nThe javadocs of ChannelOutboundBuffer state that its fine to call\r\nisEmpty() and size() from any thread. This is not correct, these methods\r\nshould only be called from within the EventLoop thread.\r\n\r\nModifications:\r\n\r\nFix docs\r\n\r\nResult:\r\n\r\nCorrect javadocs. Fixes https://github.com/netty/netty/issues/13501",
          "commitUrl": "https://github.com/netty/netty/commit/830166292be28e64ec6b43170cff40a31a442ad4",
          "parents": {
            "nodes": [
              {
                "oid": "7b4cabc6695168e7c8e1b5a8d5748b99791659f7",
                "message": "Optimize PoolSubpage (#13493)\n\nMotivation:\r\n Optimize PoolSubpage\r\n\r\n\r\n Modification:\r\n1. `PoolSubpage.lock` is used by head only, so it could be created for\r\nhead only.\r\n \r\n2. `PoolSubpage.elemSize` is determined by\r\n`SizeClasses.sizeIdx2sizeTab`, which minimum value is 16, so the\r\ncomparison between `elemSize` and `0` should be removed.\r\n\r\n3. `PoolSubpage.bitmap` may waste memory. For example, when\r\n`PooledByteBufAllocator.DEFAULT.directBuffer(800)` creates a\r\n`PoolSubpage` object:\r\n    * `runSize` is 57344 (i.e., 56KB),\r\n    * `elemSize` is 896,\r\n    * `maxNumElems = runSize/elemSize` is 64,\r\n    * `bitmapLength` is 1 (i.e., 64 bits is enough for 64 elements)\r\n* **but** `bitmap.length` is 56: (`runSize >>> 6 + LOG2_QUANTUM /*4*/ ==\r\n56`), which could be 1.\r\n\r\n 4. Make `bitmapLength` and `maxNumElems` final.\r\n\r\n Result:\r\nPoolSubpage is more clear, and save some memory.\r\n\r\n---------\r\n\r\nCo-authored-by: xuesenliang <xuesenliang@tencent.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/ChannelOutboundBuffer.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85V-oor2gAoNDZhODE1ODNkOWFhNmRjYTAyZjhkOWFkMDg4YmJlMTJkYzNkZTE4Yw",
                "url": "https://github.com/netty/netty/pull/13502/commits/46a81583d9aa6dca02f8d9ad088bbe12dc3de18c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13501,
                "url": "https://github.com/netty/netty/issues/13501",
                "title": "ChannelOutboundBuffer flushed field should be volatile",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">As described in the documentation size() and isEmpty() can be called from other than IO thread , these method should be thread safe.<br>\nvolatile is enough here, as single writer thread more reader thread.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">size() and isEmpty() use flushed field, which should be volatile to get always the result of the last write.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1 branch</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/13501",
                "createdAt": "2023-07-20T08:16:32Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "[DRAFT]Enhance Performance of AsciiString Methods",
        "url": "https://github.com/netty/netty/pull/13534",
        "resourcePath": "/netty/netty/pull/13534",
        "createdAt": "2023-08-07T04:25:01Z",
        "number": 13534,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/ByteBufUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/AsciiString.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "common/src/main/java/io/netty/util/AsciiStringUtil.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "common/src/main/java/io/netty/util/internal/SWARUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/io/netty/util/AsciiStringCharacterTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "common/src/test/java/io/netty/util/AsciiStringUtilTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "microbench/src/main/java/io/netty/util/AsciiStringIndexOfBenchmark.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "microbench/src/main/java/io/netty/util/AsciiStringUtilCaseConversionBenchmark.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85XSvDl2gAoYTlkMDQxZjUyYjcyZmE2MTEwMGFkM2E3ZWZhNmViYWQxZmRmOGZiYw",
                "url": "https://github.com/netty/netty/pull/13534/commits/a9d041f52b72fa61100ad3a7efa6ebad1fdf8fbc"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13522,
                "url": "https://github.com/netty/netty/issues/13522",
                "title": "Applying SWAR Technique to `AsciiString`",
                "bodyHTML": "<p dir=\"auto\">Currently <code class=\"notranslate\">AsciiString</code> utilizes naive iterative approach for its <code class=\"notranslate\">indexOf</code> and 'finding first lower case and upper case' methods.<br>\nHowever, we can improve the performance of these methods by implementing the SWAR technique, similar to the approach used in <code class=\"notranslate\">ByteBuf</code>.</p>",
                "resourcePath": "/netty/netty/issues/13522",
                "createdAt": "2023-07-31T21:23:27Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add support for password-based encryption scheme 2 params (PBES2)",
        "url": "https://github.com/netty/netty/pull/13538",
        "resourcePath": "/netty/netty/pull/13538",
        "createdAt": "2023-08-09T01:11:11Z",
        "number": 13538,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslContext.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85XfJQx2gAoYmUxNGEwN2Y5ZDU5NTcxNTc5ZGRiNGQzYjZiNjIzZThiZmU5ZmZhOA",
                "url": "https://github.com/netty/netty/pull/13538/commits/be14a07f9d59571579ddb4d3b6b623e8bfe9ffa8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13536,
                "url": "https://github.com/netty/netty/issues/13536",
                "title": " Add support for password-based encryption scheme 2 params (PBES2)",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">no exception</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.security.NoSuchAlgorithmException: 1.2.840.113549.1.5.13 SecretKeyFactory not available\n\tat javax.crypto.SecretKeyFactory.&lt;init&gt;(SecretKeyFactory.java:122)\n\tat javax.crypto.SecretKeyFactory.getInstance(SecretKeyFactory.java:160)\n\tat io.netty.handler.ssl.SslContext.generateKeySpec(SslContext.java:1084)\n\tat io.netty.handler.ssl.SslContext.getPrivateKeyFromByteBuffer(SslContext.java:1170)\n\tat io.netty.handler.ssl.SslContext.toPrivateKey(SslContext.java:1133)\n\tat io.netty.handler.ssl.SslContextBuilder.keyManager(SslContextBuilder.java:384)\n\t... 2 more\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: java.security.NoSuchAlgorithmException: 1.2.840.113549.1.5.13 SecretKeyFactory not available\n\tat javax.crypto.SecretKeyFactory.&lt;init&gt;(SecretKeyFactory.java:122)\n\tat javax.crypto.SecretKeyFactory.getInstance(SecretKeyFactory.java:160)\n\tat io.netty.handler.ssl.SslContext.generateKeySpec(SslContext.java:1084)\n\tat io.netty.handler.ssl.SslContext.getPrivateKeyFromByteBuffer(SslContext.java:1170)\n\tat io.netty.handler.ssl.SslContext.toPrivateKey(SslContext.java:1133)\n\tat io.netty.handler.ssl.SslContextBuilder.keyManager(SslContextBuilder.java:384)\n\t... 2 more\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ul dir=\"auto\">\n<li>generate key and certificate</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openssl genrsa -out rsa.key\nopenssl req -new -key rsa.key -out rsa.csr \nopenssl x509 -req -days 3650 -in rsa.csr -signkey rsa.key -out rsa.crt\nopenssl pkcs8 -topk8 -inform PEM -in rsa.key -outform pem -out rsa_enc_pkcs8.key -v2 aes-256-cbc -passin pass:12345678 -passout pass:12345678\"><pre class=\"notranslate\"><code class=\"notranslate\">openssl genrsa -out rsa.key\nopenssl req -new -key rsa.key -out rsa.csr \nopenssl x509 -req -days 3650 -in rsa.csr -signkey rsa.key -out rsa.crt\nopenssl pkcs8 -topk8 -inform PEM -in rsa.key -outform pem -out rsa_enc_pkcs8.key -v2 aes-256-cbc -passin pass:12345678 -passout pass:12345678\n</code></pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import io.netty.handler.ssl.SslContextBuilder;\n\nimport java.io.File;\n\npublic class Test {\n    public static void main(String[] args) {\n           File keyCertChainFile = new File(&quot;rsa.crt&quot;);\n           File keyFile = new File(&quot;rsa_enc_pkcs8.key&quot;);\n           String password = &quot;12345678&quot;;\n           SslContextBuilder.forServer(keyCertChainFile, keyFile, password);\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslContextBuilder</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">File</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Test</span> {\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) {\n           <span class=\"pl-smi\">File</span> <span class=\"pl-s1\">keyCertChainFile</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">File</span>(<span class=\"pl-s\">\"rsa.crt\"</span>);\n           <span class=\"pl-smi\">File</span> <span class=\"pl-s1\">keyFile</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">File</span>(<span class=\"pl-s\">\"rsa_enc_pkcs8.key\"</span>);\n           <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">password</span> = <span class=\"pl-s\">\"12345678\"</span>;\n           <span class=\"pl-smi\">SslContextBuilder</span>.<span class=\"pl-en\">forServer</span>(<span class=\"pl-s1\">keyCertChainFile</span>, <span class=\"pl-s1\">keyFile</span>, <span class=\"pl-s1\">password</span>);\n    }\n}</pre></div>\n<p dir=\"auto\">For more detailed information\uff0cplease refer to <a href=\"https://bz.apache.org/bugzilla/show_bug.cgi?id=65767\" rel=\"nofollow\">https://bz.apache.org/bugzilla/show_bug.cgi?id=65767</a></p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.x</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">jdk8u342</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/13536",
                "createdAt": "2023-08-08T03:24:15Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add support for password-based encryption scheme 2 params (PBES2)",
        "url": "https://github.com/netty/netty/pull/13539",
        "resourcePath": "/netty/netty/pull/13539",
        "createdAt": "2023-08-09T01:22:31Z",
        "number": 13539,
        "mergeCommit": {
          "oid": "a02644415681e6efc233ff77540003a48908dbf4",
          "message": "Add support for password-based encryption scheme 2 params (PBES2) (#13539)\n\nMotivation:\r\n\r\nAdd support for password-based encryption scheme 2 params (PBES2)\r\n\r\nModification:\r\n\r\nDescribe the modifications you've done.\r\n\r\nResult:\r\n\r\nFixes #13536 \r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>\r\nCo-authored-by: Chris Vest <christianvest_hansen@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/a02644415681e6efc233ff77540003a48908dbf4",
          "parents": {
            "nodes": [
              {
                "oid": "64c898307de06a49f365093bb823bd4b7966c3d3",
                "message": "Add support for snappy http2 content decompression (#13530)\n\nMotivation:\r\n\r\nSince netty already supports the decompression of snappy's http content\r\nencoding, it should also consider supporting snappy's http2 content\r\ndecompression\r\n\r\nModification:\r\n\r\nAdd support for snappy http content decompression\r\n\r\nResult:\r\n\r\nNetty supports snappy http content decompression\r\n\r\n---------\r\n\r\nSigned-off-by: xingrufei <qhdxssm@qq.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslContext.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/SslContextTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/generate-certs.sh"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/resources/io/netty/handler/ssl/rsa_pbes2_enc_pkcs8.key"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85XfKxE2gAoMzNmY2E1ODM4ZTI4OThkZWJlZDkwZDZmYzA3ODlmZjA5YmRhNTA1Nw",
                "url": "https://github.com/netty/netty/pull/13539/commits/33fca5838e2898debed90d6fc0789ff09bda5057"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13536,
                "url": "https://github.com/netty/netty/issues/13536",
                "title": " Add support for password-based encryption scheme 2 params (PBES2)",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">no exception</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.security.NoSuchAlgorithmException: 1.2.840.113549.1.5.13 SecretKeyFactory not available\n\tat javax.crypto.SecretKeyFactory.&lt;init&gt;(SecretKeyFactory.java:122)\n\tat javax.crypto.SecretKeyFactory.getInstance(SecretKeyFactory.java:160)\n\tat io.netty.handler.ssl.SslContext.generateKeySpec(SslContext.java:1084)\n\tat io.netty.handler.ssl.SslContext.getPrivateKeyFromByteBuffer(SslContext.java:1170)\n\tat io.netty.handler.ssl.SslContext.toPrivateKey(SslContext.java:1133)\n\tat io.netty.handler.ssl.SslContextBuilder.keyManager(SslContextBuilder.java:384)\n\t... 2 more\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: java.security.NoSuchAlgorithmException: 1.2.840.113549.1.5.13 SecretKeyFactory not available\n\tat javax.crypto.SecretKeyFactory.&lt;init&gt;(SecretKeyFactory.java:122)\n\tat javax.crypto.SecretKeyFactory.getInstance(SecretKeyFactory.java:160)\n\tat io.netty.handler.ssl.SslContext.generateKeySpec(SslContext.java:1084)\n\tat io.netty.handler.ssl.SslContext.getPrivateKeyFromByteBuffer(SslContext.java:1170)\n\tat io.netty.handler.ssl.SslContext.toPrivateKey(SslContext.java:1133)\n\tat io.netty.handler.ssl.SslContextBuilder.keyManager(SslContextBuilder.java:384)\n\t... 2 more\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ul dir=\"auto\">\n<li>generate key and certificate</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openssl genrsa -out rsa.key\nopenssl req -new -key rsa.key -out rsa.csr \nopenssl x509 -req -days 3650 -in rsa.csr -signkey rsa.key -out rsa.crt\nopenssl pkcs8 -topk8 -inform PEM -in rsa.key -outform pem -out rsa_enc_pkcs8.key -v2 aes-256-cbc -passin pass:12345678 -passout pass:12345678\"><pre class=\"notranslate\"><code class=\"notranslate\">openssl genrsa -out rsa.key\nopenssl req -new -key rsa.key -out rsa.csr \nopenssl x509 -req -days 3650 -in rsa.csr -signkey rsa.key -out rsa.crt\nopenssl pkcs8 -topk8 -inform PEM -in rsa.key -outform pem -out rsa_enc_pkcs8.key -v2 aes-256-cbc -passin pass:12345678 -passout pass:12345678\n</code></pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import io.netty.handler.ssl.SslContextBuilder;\n\nimport java.io.File;\n\npublic class Test {\n    public static void main(String[] args) {\n           File keyCertChainFile = new File(&quot;rsa.crt&quot;);\n           File keyFile = new File(&quot;rsa_enc_pkcs8.key&quot;);\n           String password = &quot;12345678&quot;;\n           SslContextBuilder.forServer(keyCertChainFile, keyFile, password);\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslContextBuilder</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">File</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Test</span> {\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) {\n           <span class=\"pl-smi\">File</span> <span class=\"pl-s1\">keyCertChainFile</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">File</span>(<span class=\"pl-s\">\"rsa.crt\"</span>);\n           <span class=\"pl-smi\">File</span> <span class=\"pl-s1\">keyFile</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">File</span>(<span class=\"pl-s\">\"rsa_enc_pkcs8.key\"</span>);\n           <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">password</span> = <span class=\"pl-s\">\"12345678\"</span>;\n           <span class=\"pl-smi\">SslContextBuilder</span>.<span class=\"pl-en\">forServer</span>(<span class=\"pl-s1\">keyCertChainFile</span>, <span class=\"pl-s1\">keyFile</span>, <span class=\"pl-s1\">password</span>);\n    }\n}</pre></div>\n<p dir=\"auto\">For more detailed information\uff0cplease refer to <a href=\"https://bz.apache.org/bugzilla/show_bug.cgi?id=65767\" rel=\"nofollow\">https://bz.apache.org/bugzilla/show_bug.cgi?id=65767</a></p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.x</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">jdk8u342</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/13536",
                "createdAt": "2023-08-08T03:24:15Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Sanitize all multibyte chars in HpackHuffmanEncoder",
        "url": "https://github.com/netty/netty/pull/13546",
        "resourcePath": "/netty/netty/pull/13546",
        "createdAt": "2023-08-13T06:41:56Z",
        "number": 13546,
        "mergeCommit": {
          "oid": "aa07be47d9d2bbb09b1ca9897575ebc4de6056c0",
          "message": "Sanitize all multibyte chars in HpackHuffmanEncoder (#13546)\n\nMotivation:\r\n\r\nTo fix the following problem: during encoding, Huffman encoded headers\r\nare sanitized differently compared to non-Huffman encoded headers in\r\n`HpackEncoder`. As a result, characters with code point values higher\r\nthan 0xFF which could be decoded to an unexpected control chars instead\r\nof `'?'`.\r\n\r\nModification:\r\n\r\nChange how each character is sanitized in `HpackHuffmanEncoder`.\r\nSpecifically, use the new approach [1] to replace the old approach [2].\r\n\r\n[1] `AsciiString.c2b(aChar) & 0xFF`\r\n[2] `aChar & 0xFF`\r\n\r\nExpected output is `0` if `aChar > 0xFF`. But with the old approach, if\r\n`aChar == 0x4E01`, `0x4E01 & 0xFF == 1` which is incorrect.\r\n\r\nResult:\r\nAll characters with code point values higher than 0xFF are decoded to\r\n`?`s regardless of whether Huffman encoding was used during encoding.\r\n\r\nFixes #13540\r\n\r\n---------\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/aa07be47d9d2bbb09b1ca9897575ebc4de6056c0",
          "parents": {
            "nodes": [
              {
                "oid": "b19b979666e61231f3f401725a84da69f5bd51b8",
                "message": "Revert \"Make initializer as `static` (#13506)\" (#13553)\n\nMotivations:\r\n\r\nBy changing the code to use a static block we did remove the ability to\r\nload the class at all. This is sort of a regression as it may break\r\nexisting code.\r\n\r\nModifications:\r\n\r\nThis reverts commit 1c7f0faac060313bfd313d0a50fdf83a2fd2c9c9.\r\n\r\nResult:\r\n\r\nIt's possible again to at least load the class all the time as before."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/HpackEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/HpackHuffmanEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/HpackEncoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/HpackHuffmanTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85X0BFj2gAoNWJkMTI4ZGIyNmFkNzdmMDM0MTMzYTVjZmIzNzRmNzRiYmY3MDhjMA",
                "url": "https://github.com/netty/netty/pull/13546/commits/5bd128db26ad77f034133a5cfb374f74bbf708c0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13540,
                "url": "https://github.com/netty/netty/issues/13540",
                "title": "Unexpected characters are synthesized by DefaultHttp2HeadersDecoder when Huffman encoding is enabled in HpackEncoder",
                "bodyHTML": "<h3 dir=\"auto\">What happened?</h3>\n<ol dir=\"auto\">\n<li>Create a header <code class=\"notranslate\">DefaultHttp2Headers</code> with a certain value that exceeds certain size and contain non-ASCII characters,</li>\n<li>Encode the header using <code class=\"notranslate\">DefaultHttp2HeadersEncoder</code>.</li>\n<li>Decode the encoded header using <code class=\"notranslate\">DefaultHttp2HeadersDecoder</code>.</li>\n<li>If Huffman encoding is enabled in the <code class=\"notranslate\">HpackDecoder</code> (used inside <code class=\"notranslate\">DefaultHttp2HeadersDecoder</code>), unexpected character(s) magically show up in the decoded string.</li>\n</ol>\n<p dir=\"auto\">\"Unexpected characters\" means:</p>\n<ol dir=\"auto\">\n<li>They are not in the original header value which is encoded.</li>\n<li>Their unicode code points are smaller than 32.</li>\n</ol>\n<p dir=\"auto\">Please note that different header value input can yield different unexpected characters. In the below repro code, <code class=\"notranslate\">NULL (U+0000)</code> is the unexpected character. We also have header value (which contains company-specific information) that would yield <code class=\"notranslate\">\\r</code> as unexpected characters.</p>\n<p dir=\"auto\">IMO the first thing is to confirm that there is indeed a bug in the HPACK implementation (and/or any other components).</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Please refer to the below code.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"highlight highlight-source-scala notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"test(&quot;NULL character is magically synthesized by DefaultHttp2HeadersDecoder when Huffman encoding is enabled in HpackEncoder&quot;) {\n import io.netty.handler.codec.http2.DefaultHttp2Headers\n import io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder\n import io.netty.buffer.Unpooled\n import io.netty.handler.codec.http2.DefaultHttp2HeadersDecoder\n\n val headers = new DefaultHttp2Headers\n val badHeaderValue =\n   &quot;{\\&quot;xxxx\\&quot;:\\&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxx\\&quot;,\\&quot;xxxxxxx\\&quot;:\\&quot;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\&quot;,\\&quot;xxxx\\&quot;:\\&quot;x\\&quot;,\\&quot;xxxxxxx\\&quot;:\\&quot;xxxxxxxxxxxxxxxxxxxxxxxxxx\\&quot;,\\&quot;xxxxxxxxxxxxxx\\&quot;:\\&quot;\u6211\u4eec\u5728Netty\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2abug_\u043c\u0438 \u0437\u043d\u0430\u0439\u0448\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443 \u0432_123\u043c\u044b\u043d\u0430\u0448\u043b\u0438\u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443\u0432_\uc6b0\ub9ac\ub294\uc5d0\uc11c\ubb38\uc81c\ub97c\ubc1c\uacac\ud588\uc2b5\ub2c8\ub2e4Saturday10311031UsersVlad@Alex_ver10311031Shared\u3067\u554f\u984c\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305fIAPKI_ActivityVlad@Alex\uc6b0\ub9ac\ub294\uc5d0\uc11c\ubb38\uc81c\ub97c\ubc1c\uacac\ud588\uc2b5\ub2c8\ub2e4BatchWeFound_10311031UsersVlad@Alex_ver10311031Shared\\&quot;,\\&quot;xxxxxx\\&quot;:\\&quot;xxxxxxxx\\&quot;,\\&quot;xxxxxxxx\\&quot;:\\&quot;xxxxxx-87\\&quot;,\\&quot;xxxxxxxxx\\&quot;:\\&quot;xxxxxx.xxxxxx.xxxxxx.xxxxxx.24hgjbu2g2hgwoejf231Xxxxxxx/Xxxx\\&quot;}&quot;\n headers.set(&quot;some-key&quot;, badHeaderValue)\n\n val neverSensitive: SensitivityDetector = new SensitivityDetector() {\n   override def isSensitive(name: CharSequence, value: CharSequence) = false\n }\n val enableHuffmanEncoding = true\n // Use the below threshold to control whether Huffman encoding is enabled for the above header value at runtime.\n val huffCodeThreshold: Int = if (enableHuffmanEncoding) 512 else 51200\n\n val encoder = new DefaultHttp2HeadersEncoder(\n   neverSensitive,\n   false, // ignoreMaxHeaderListSize, same value as default.\n   64, // dynamicTableArraySizeHint, same value as default.\n   huffCodeThreshold\n )\n val buf = Unpooled.buffer(10000)\n encoder.encodeHeaders(1, headers, buf)\n\n val decoder = new DefaultHttp2HeadersDecoder()\n val decodedHeader = decoder.decodeHeaders(1, buf)\n val decodedHeaderValue: String = decodedHeader.get(&quot;some-key&quot;).toString\n val nullChar: Char = 0.toChar\n\n assert(!badHeaderValue.contains(nullChar)) // `Null` is not in the original header value.\n if (enableHuffmanEncoding) {\n   // \ud83d\udc47\ud83d\udc47\ud83d\udc47 Unexpected 'Null' character gets synthesized in the header value \ud83e\udee2\n   assert(decodedHeaderValue.contains(nullChar))\n } else {\n   // Huffman encoding is disabled.\n   assert(!decodedHeaderValue.contains(nullChar))\n }\n\n val scalaVersion: String = scala.util.Properties.scalaPropOrElse(&quot;version.number&quot;, &quot;unknown&quot;)\n println(s&quot;Scala version: $scalaVersion&quot;) // 2.12.15\n val javaVersion: String = System.getProperty(&quot;java.version&quot;)\n println(s&quot;Java version number: $javaVersion&quot;) // 11.0.10\n val javaVendor: String = System.getProperty(&quot;java.vendor&quot;)\n println(s&quot;Java vendor: $javaVendor&quot;) // Azul Systems, Inc\n}\"><pre class=\"notranslate\">test(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>NULL character is magically synthesized by DefaultHttp2HeadersDecoder when Huffman encoding is enabled in HpackEncoder<span class=\"pl-pds\">\"</span></span>) {\n <span class=\"pl-k\">import</span> <span class=\"pl-en\">io</span>.<span class=\"pl-en\">netty</span>.<span class=\"pl-en\">handler</span>.<span class=\"pl-en\">codec</span>.<span class=\"pl-en\">http2</span>.<span class=\"pl-en\">DefaultHttp2Headers</span>\n <span class=\"pl-k\">import</span> <span class=\"pl-en\">io</span>.<span class=\"pl-en\">netty</span>.<span class=\"pl-en\">handler</span>.<span class=\"pl-en\">codec</span>.<span class=\"pl-en\">http2</span>.<span class=\"pl-en\">DefaultHttp2HeadersEncoder</span>\n <span class=\"pl-k\">import</span> <span class=\"pl-en\">io</span>.<span class=\"pl-en\">netty</span>.<span class=\"pl-en\">buffer</span>.<span class=\"pl-en\">Unpooled</span>\n <span class=\"pl-k\">import</span> <span class=\"pl-en\">io</span>.<span class=\"pl-en\">netty</span>.<span class=\"pl-en\">handler</span>.<span class=\"pl-en\">codec</span>.<span class=\"pl-en\">http2</span>.<span class=\"pl-en\">DefaultHttp2HeadersDecoder</span>\n\n <span class=\"pl-k\">val</span> <span class=\"pl-v\">headers</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">DefaultHttp2Headers</span>\n <span class=\"pl-k\">val</span> <span class=\"pl-v\">badHeaderValue</span> <span class=\"pl-k\">=</span>\n   <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>{<span class=\"pl-cce\">\\\"</span>xxxx<span class=\"pl-cce\">\\\"</span>:<span class=\"pl-cce\">\\\"</span>xxxxxxxxxxxxxxxxxxxxxxxxxxxx<span class=\"pl-cce\">\\\"</span>,<span class=\"pl-cce\">\\\"</span>xxxxxxx<span class=\"pl-cce\">\\\"</span>:<span class=\"pl-cce\">\\\"</span>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx<span class=\"pl-cce\">\\\"</span>,<span class=\"pl-cce\">\\\"</span>xxxx<span class=\"pl-cce\">\\\"</span>:<span class=\"pl-cce\">\\\"</span>x<span class=\"pl-cce\">\\\"</span>,<span class=\"pl-cce\">\\\"</span>xxxxxxx<span class=\"pl-cce\">\\\"</span>:<span class=\"pl-cce\">\\\"</span>xxxxxxxxxxxxxxxxxxxxxxxxxx<span class=\"pl-cce\">\\\"</span>,<span class=\"pl-cce\">\\\"</span>xxxxxxxxxxxxxx<span class=\"pl-cce\">\\\"</span>:<span class=\"pl-cce\">\\\"</span>\u6211\u4eec\u5728Netty\u4e2d\u53d1\u73b0\u4e86\u4e00\u4e2abug_\u043c\u0438 \u0437\u043d\u0430\u0439\u0448\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443 \u0432_123\u043c\u044b\u043d\u0430\u0448\u043b\u0438\u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0443\u0432_\uc6b0\ub9ac\ub294\uc5d0\uc11c\ubb38\uc81c\ub97c\ubc1c\uacac\ud588\uc2b5\ub2c8\ub2e4Saturday10311031UsersVlad@Alex_ver10311031Shared\u3067\u554f\u984c\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305fIAPKI_ActivityVlad@Alex\uc6b0\ub9ac\ub294\uc5d0\uc11c\ubb38\uc81c\ub97c\ubc1c\uacac\ud588\uc2b5\ub2c8\ub2e4BatchWeFound_10311031UsersVlad@Alex_ver10311031Shared<span class=\"pl-cce\">\\\"</span>,<span class=\"pl-cce\">\\\"</span>xxxxxx<span class=\"pl-cce\">\\\"</span>:<span class=\"pl-cce\">\\\"</span>xxxxxxxx<span class=\"pl-cce\">\\\"</span>,<span class=\"pl-cce\">\\\"</span>xxxxxxxx<span class=\"pl-cce\">\\\"</span>:<span class=\"pl-cce\">\\\"</span>xxxxxx-87<span class=\"pl-cce\">\\\"</span>,<span class=\"pl-cce\">\\\"</span>xxxxxxxxx<span class=\"pl-cce\">\\\"</span>:<span class=\"pl-cce\">\\\"</span>xxxxxx.xxxxxx.xxxxxx.xxxxxx.24hgjbu2g2hgwoejf231Xxxxxxx/Xxxx<span class=\"pl-cce\">\\\"</span>}<span class=\"pl-pds\">\"</span></span>\n headers.set(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>some-key<span class=\"pl-pds\">\"</span></span>, badHeaderValue)\n\n <span class=\"pl-k\">val</span> <span class=\"pl-v\">neverSensitive</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">SensitivityDetector</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">SensitivityDetector</span>() {\n   <span class=\"pl-k\">override</span> <span class=\"pl-k\">def</span> <span class=\"pl-en\">isSensitive</span>(<span class=\"pl-v\">name</span>: <span class=\"pl-en\">CharSequence</span>, <span class=\"pl-v\">value</span>: <span class=\"pl-en\">CharSequence</span>) <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>\n }\n <span class=\"pl-k\">val</span> <span class=\"pl-v\">enableHuffmanEncoding</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>\n <span class=\"pl-c\"><span class=\"pl-c\">//</span> Use the below threshold to control whether Huffman encoding is enabled for the above header value at runtime.</span>\n <span class=\"pl-k\">val</span> <span class=\"pl-v\">huffCodeThreshold</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Int</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">if</span> (enableHuffmanEncoding) <span class=\"pl-c1\">512</span> <span class=\"pl-k\">else</span> <span class=\"pl-c1\">51200</span>\n\n <span class=\"pl-k\">val</span> <span class=\"pl-v\">encoder</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">DefaultHttp2HeadersEncoder</span>(\n   neverSensitive,\n   <span class=\"pl-c1\">false</span>, <span class=\"pl-c\"><span class=\"pl-c\">//</span> ignoreMaxHeaderListSize, same value as default.</span>\n   <span class=\"pl-c1\">64</span>, <span class=\"pl-c\"><span class=\"pl-c\">//</span> dynamicTableArraySizeHint, same value as default.</span>\n   huffCodeThreshold\n )\n <span class=\"pl-k\">val</span> <span class=\"pl-v\">buf</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">Unpooled</span>.buffer(<span class=\"pl-c1\">10000</span>)\n encoder.encodeHeaders(<span class=\"pl-c1\">1</span>, headers, buf)\n\n <span class=\"pl-k\">val</span> <span class=\"pl-v\">decoder</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">DefaultHttp2HeadersDecoder</span>()\n <span class=\"pl-k\">val</span> <span class=\"pl-v\">decodedHeader</span> <span class=\"pl-k\">=</span> decoder.decodeHeaders(<span class=\"pl-c1\">1</span>, buf)\n <span class=\"pl-k\">val</span> <span class=\"pl-v\">decodedHeaderValue</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> decodedHeader.get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>some-key<span class=\"pl-pds\">\"</span></span>).toString\n <span class=\"pl-k\">val</span> <span class=\"pl-v\">nullChar</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Char</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>.toChar\n\n assert(<span class=\"pl-k\">!</span>badHeaderValue.contains(nullChar)) <span class=\"pl-c\"><span class=\"pl-c\">//</span> `Null` is not in the original header value.</span>\n <span class=\"pl-k\">if</span> (enableHuffmanEncoding) {\n   <span class=\"pl-c\"><span class=\"pl-c\">//</span> \ud83d\udc47\ud83d\udc47\ud83d\udc47 Unexpected 'Null' character gets synthesized in the header value \ud83e\udee2</span>\n   assert(decodedHeaderValue.contains(nullChar))\n } <span class=\"pl-k\">else</span> {\n   <span class=\"pl-c\"><span class=\"pl-c\">//</span> Huffman encoding is disabled.</span>\n   assert(<span class=\"pl-k\">!</span>decodedHeaderValue.contains(nullChar))\n }\n\n <span class=\"pl-k\">val</span> <span class=\"pl-v\">scalaVersion</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> scala.util.<span class=\"pl-en\">Properties</span>.scalaPropOrElse(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>version.number<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>unknown<span class=\"pl-pds\">\"</span></span>)\n println(<span class=\"pl-k\">s</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">Scala version: </span>$scalaVersion<span class=\"pl-s\">\"</span>) <span class=\"pl-c\"><span class=\"pl-c\">//</span> 2.12.15</span>\n <span class=\"pl-k\">val</span> <span class=\"pl-v\">javaVersion</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">System</span>.getProperty(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>java.version<span class=\"pl-pds\">\"</span></span>)\n println(<span class=\"pl-k\">s</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">Java version number: </span>$javaVersion<span class=\"pl-s\">\"</span>) <span class=\"pl-c\"><span class=\"pl-c\">//</span> 11.0.10</span>\n <span class=\"pl-k\">val</span> <span class=\"pl-v\">javaVendor</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">String</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">System</span>.getProperty(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>java.vendor<span class=\"pl-pds\">\"</span></span>)\n println(<span class=\"pl-k\">s</span><span class=\"pl-s\">\"</span><span class=\"pl-s\">Java vendor: </span>$javaVendor<span class=\"pl-s\">\"</span>) <span class=\"pl-c\"><span class=\"pl-c\">//</span> Azul Systems, Inc</span>\n}</pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\"><code class=\"notranslate\">4.1.86.Final</code></p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Scala version: 2.12.15\nJava version number: 11.0.10\nJava vendor: Azul Systems, Inc\"><pre class=\"notranslate\"><code class=\"notranslate\">Scala version: 2.12.15\nJava version number: 11.0.10\nJava vendor: Azul Systems, Inc\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/13540",
                "createdAt": "2023-08-09T07:05:07Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "[codec-mqtt] Add reason codes inventory",
        "url": "https://github.com/netty/netty/pull/13558",
        "resourcePath": "/netty/netty/pull/13558",
        "createdAt": "2023-08-18T12:11:43Z",
        "number": 13558,
        "mergeCommit": {
          "oid": "bcaad8a5f0654103a982904ad9545c1c7614c09d",
          "message": "[codec-mqtt] Add reason codes inventory (#13558)\n\nMotivation:\r\n\r\nDespite all the Connect reason codes was inventoried into the\r\n`MqttConnectReturnCode` the same wasn't done for the rest of MQTT\r\nmessages. This would simplify the consumption of the messages, having a\r\npredetermined list of result codes as the one defined in the\r\nspecification.\r\n\r\nModification:\r\n\r\nIntroduces a class which contains all the enums to cover Disconnet,\r\nPubSub etc reason codes.\r\n\r\nResult:\r\n\r\nFixes #13557 .\r\n\r\n---------\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>\r\nCo-authored-by: Aayush Atharva <hyperx.pro@outlook.com>",
          "commitUrl": "https://github.com/netty/netty/commit/bcaad8a5f0654103a982904ad9545c1c7614c09d",
          "parents": {
            "nodes": [
              {
                "oid": "5155482afc57907a1414994ef5aca79b61ac6999",
                "message": "Remove useless import (#13567)\n\nMotivation:\r\nRemove useless import\r\n\r\nModification:\r\nRemove useless import\r\n\r\nResult:\r\nCleaner code\r\n\r\nSigned-off-by: xingrufei <qhdxssm@qq.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttReasonCodes.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttSubAckPayload.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttUnsubAckPayload.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec-mqtt/src/test/java/io/netty/handler/codec/mqtt/MqttReasonCodesTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85YPneF2gAoM2E5ZmYwZGRjMmZkZjc3YTY4OGUyMzFlZWY5ZjVmMWM4MjEwZTY1ZQ",
                "url": "https://github.com/netty/netty/pull/13558/commits/3a9ff0ddc2fdf77a688e231eef9f5f1c8210e65e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13557,
                "url": "https://github.com/netty/netty/issues/13557",
                "title": "[MQTT] Feature request: add inventory of reason codes.",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">While <code class=\"notranslate\">MqttConnectReturnCode</code> contain the list of return codes for the Connect message, there isn't the corresponding for <code class=\"notranslate\">Disconnect</code> , <code class=\"notranslate\">PubAck</code>, <code class=\"notranslate\">PubRec</code>, <code class=\"notranslate\">PubRel</code>, <code class=\"notranslate\">PubComp</code>, <code class=\"notranslate\">Auth</code>, <code class=\"notranslate\">UnsubAck</code> (used in payload), <code class=\"notranslate\">SubAck</code> (used in payload).<br>\nHaving such classes would simplify the consumption of the mqtt part of the library.</p>",
                "resourcePath": "/netty/netty/issues/13557",
                "createdAt": "2023-08-18T10:00:36Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "SSLSession.getPeerCertificateChain() should throw UnsupportedOperatio\u2026",
        "url": "https://github.com/netty/netty/pull/13564",
        "resourcePath": "/netty/netty/pull/13564",
        "createdAt": "2023-08-23T13:09:50Z",
        "number": 13564,
        "mergeCommit": {
          "oid": "efcd3ce942d6f68510c9e196215d1c9c3c24ff08",
          "message": "SSLSession.getPeerCertificateChain() should throw UnsupportedOperatio\u2026 (#13564)\n\n\u2026nException if javax.security.cert.X509Certificate can bot be created\r\n\r\nMotivation:\r\n\r\nSSLSession.getPeerCertificateChain() is allowed to throw\r\nUnsupportedOperationException if the implementation does not support it.\r\nWe should do exactly this if the JDK that is used can not create a cert\r\nfrom a byte array. Otherwise we will produce an exception much later\r\nwhich is confusing.\r\n\r\nModifications:\r\n\r\nCheck if we can create such a cert and so support it, if not throw an\r\nUnuspportedOperationException as soon as the user tries to use the\r\nmethod.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13560",
          "commitUrl": "https://github.com/netty/netty/commit/efcd3ce942d6f68510c9e196215d1c9c3c24ff08",
          "parents": {
            "nodes": [
              {
                "oid": "744a9f9a37da342688ae49bb86516cccbd9c1668",
                "message": "Update the RSA PSS certificate (#13576)\n\nMotivation:\r\nThe test certificates have expired, and tests are failing because of\r\nthis.\r\n\r\nModification:\r\nGenerate new keys and certificates.\r\nUpdate the script to not require any inputs.\r\nAdd a note to the test about why they might be observed to fail in the\r\nfuture.\r\n\r\nResult:\r\nTests pass again."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/OpenSsl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85YmLyk2gAoNDI5ODZiMzY1OTQ2NzljMDZjOTFjMmJkMzg3ZWM1NWJiNjYzZWU1OA",
                "url": "https://github.com/netty/netty/pull/13564/commits/42986b36594679c06c91c2bd387ec55bb663ee58"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13560,
                "url": "https://github.com/netty/netty/issues/13560",
                "title": "JDK17 ClassNotFoundException: com/sun/security/cert/internal/x509/X509V1CertImpl",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">JDK 17 has deprecated the use of javax.security.cert.X509Certificate, it is strongly recommended to use java.security.cert.X509Certificate.This issue was fixed in 5.x.x <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1662160543\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/13326\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/13326/hovercard\" href=\"https://github.com/netty/netty/pull/13326\">#13326</a>, but 5.x.x is not a stable version</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">java.lang.IllegalStateException: javax.security.cert.CertificateException: Could not find class: java.lang.ClassNotFoundException: com/sun/security/cert/internal/x509/X509V1CertImpl\\n\\tat io.netty.handler.ssl.util.LazyJavaxX509Certificate.unwrap(LazyJavaxX509Certificate.java:142)\\n\\tat io.netty.handler.ssl.util.LazyJavaxX509Certificate.getSubjectDN(LazyJavaxX509Certificate.java:71)</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">X509Certificate[] clientCertChain = sslHandler.engine().getSession().getPeerCertificateChain();<br>\nString subject = CertHelper.getCName(clientCertChain[0].getSubjectDN().toString());</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">netty-all 4.1.86.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">java version \"17.0.8\" 2023-07-18 LTS<br>\nJava(TM) SE Runtime Environment GraalVM EE 21.3.7 (build 17.0.8+9-LTS-jvmci-21.3-b32)<br>\nJava HotSpot(TM) 64-Bit Server VM GraalVM EE 21.3.7 (build 17.0.8+9-LTS-jvmci-21.3-b32, mixed mode, sharing)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux 4.14.35-2047.526.2.1.el7uek.x86_64 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"434589\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/2\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/2/hovercard\" href=\"https://github.com/netty/netty/pull/2\">#2</a> SMP Mon Jun 12 09:16:54 PDT 2023 x86_64 x86_64 x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/13560",
                "createdAt": "2023-08-21T20:59:10Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "add reflection configuration for java.nio.channels.spi.SelectorProvider",
        "url": "https://github.com/netty/netty/pull/13579",
        "resourcePath": "/netty/netty/pull/13579",
        "createdAt": "2023-08-31T10:02:27Z",
        "number": 13579,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/resources/META-INF/native-image/io.netty/netty-transport/reflection-config.json"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85ZOJJ32gAoOGY3YzgxNjA3N2JmMWYyNGYyODE1OGE3NTVkZTA5YWI5OGQ1MDJkMg",
                "url": "https://github.com/netty/netty/pull/13579/commits/8f7c816077bf1f24f28158a755de09ab98d502d2"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13575,
                "url": "https://github.com/netty/netty/issues/13575",
                "title": "Missing graalvm native image reflection hints for SelectorProvider",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Netty should cover all graalvm native image reflection hints</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"><a href=\"https://github.com/netty/netty/blob/4.1/transport/src/main/resources/META-INF/native-image/io.netty/netty-transport/reflection-config.json\">https://github.com/netty/netty/blob/4.1/transport/src/main/resources/META-INF/native-image/io.netty/netty-transport/reflection-config.json</a></p>\n<p dir=\"auto\">Although there are configuration for <code class=\"notranslate\">java.lang.management.ManagementFactory</code> and <code class=\"notranslate\">java.lang.management.RuntimeMXBean</code> etc. But not include <code class=\"notranslate\">java.nio.channels.spi.SelectorProvide</code> which is invoke by reflection in <a href=\"https://github.com/netty/netty/blob/4.1/transport/src/main/java/io/netty/channel/socket/nio/SelectorProviderUtil.java\">SelectorProviderUtil</a></p>\n<p dir=\"auto\">Netty code in <code class=\"notranslate\">io.netty.channel.socket.nio.SelectorProviderUtil</code>:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@SuppressJava6Requirement(reason = &quot;Usage guarded by java version check&quot;)\nstatic Method findOpenMethod(String methodName) {\n    if (PlatformDependent.javaVersion() &gt;= 15) {\n        try {\n            return SelectorProvider.class.getMethod(methodName, java.net.ProtocolFamily.class);\n        } catch (Throwable e) {\n            logger.debug(&quot;SelectorProvider.{}(ProtocolFamily) not available, will use default&quot;, methodName, e);\n        }\n    }\n    return null;\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">SuppressJava6Requirement</span>(<span class=\"pl-s1\">reason</span> = <span class=\"pl-s\">\"Usage guarded by java version check\"</span>)\n<span class=\"pl-k\">static</span> <span class=\"pl-smi\">Method</span> <span class=\"pl-s1\">findOpenMethod</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">methodName</span>) {\n    <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">PlatformDependent</span>.<span class=\"pl-en\">javaVersion</span>() &gt;= <span class=\"pl-c1\">15</span>) {\n        <span class=\"pl-k\">try</span> {\n            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">SelectorProvider</span>.<span class=\"pl-k\">class</span>.<span class=\"pl-en\">getMethod</span>(<span class=\"pl-s1\">methodName</span>, <span class=\"pl-smi\">java</span>.<span class=\"pl-smi\">net</span>.<span class=\"pl-smi\">ProtocolFamily</span>.<span class=\"pl-k\">class</span>);\n        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Throwable</span> <span class=\"pl-s1\">e</span>) {\n            <span class=\"pl-s1\">logger</span>.<span class=\"pl-en\">debug</span>(<span class=\"pl-s\">\"SelectorProvider.{}(ProtocolFamily) not available, will use default\"</span>, <span class=\"pl-s1\">methodName</span>, <span class=\"pl-s1\">e</span>);\n        }\n    }\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span>;\n}</pre></div>\n<p dir=\"auto\">In fact, Netty will use <code class=\"notranslate\">SelectorProviderUtil.findOpenMethod</code> to find and invoke reflective two methods in <code class=\"notranslate\">SelectorProvider</code> in a Spring application:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public SocketChannel openSocketChannel(ProtocolFamily family)\npublic ServerSocketChannel openServerSocketChannel(ProtocolFamily family)\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-smi\">SocketChannel</span> <span class=\"pl-s1\">openSocketChannel</span>(<span class=\"pl-smi\">ProtocolFamily</span> <span class=\"pl-s1\">family</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-smi\">ServerSocketChannel</span> <span class=\"pl-s1\">openServerSocketChannel</span>(<span class=\"pl-smi\">ProtocolFamily</span> <span class=\"pl-s1\">family</span>)</pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">After compiled a Spring application to graalvm native image, and set log level for <code class=\"notranslate\">io.netty</code> to TRACE, such exception will show up(which can't reproduce in jvm application):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"2023-08-31T01:27:05.755+08:00 TRACE 55266 --- [           main] io.netty.channel.nio.NioEventLoop        : instrumented a special java.util.Set into: sun.nio.ch.EPollSelectorImpl@28fee399\n2023-08-31T01:27:05.755+08:00 DEBUG 55266 --- [           main] i.n.c.socket.nio.SelectorProviderUtil    : SelectorProvider.openServerSocketChannel(ProtocolFamily) not available, will use default\n\njava.lang.NoSuchMethodException: java.nio.channels.spi.SelectorProvider.openServerSocketChannel(java.net.ProtocolFamily)\n        at java.base@17.0.8/java.lang.Class.checkMethod(DynamicHub.java:1038) ~[monolith-service:na]\n        at java.base@17.0.8/java.lang.Class.getMethod(DynamicHub.java:1023) ~[monolith-service:na]\n        at io.netty.channel.socket.nio.SelectorProviderUtil.findOpenMethod(SelectorProviderUtil.java:39) ~[na:na]\n        at io.netty.channel.socket.nio.NioServerSocketChannel.&lt;clinit&gt;(NioServerSocketChannel.java:57) ~[monolith-service:4.1.97.Final]\n        at reactor.netty.resources.DefaultLoopNIO.getChannel(DefaultLoopNIO.java:45) ~[na:na]\n        at reactor.netty.resources.LoopResources.onChannel(LoopResources.java:243) ~[monolith-service:1.1.10]\n        at reactor.netty.tcp.TcpResources.onChannel(TcpResources.java:251) ~[monolith-service:1.1.10]\n        at reactor.netty.transport.TransportConfig.lambda$connectionFactory$1(TransportConfig.java:277) ~[monolith-service:1.1.10]\n        at reactor.netty.transport.TransportConnector.doInitAndRegister(TransportConnector.java:277) ~[na:na]\n        at reactor.netty.transport.TransportConnector.bind(TransportConnector.java:87) ~[na:na]\n        at reactor.netty.transport.ServerTransport.lambda$bind$0(ServerTransport.java:115) ~[monolith-service:1.1.10]\n        at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:58) ~[na:na]\n        at reactor.core.publisher.Mono.subscribe(Mono.java:4495) ~[monolith-service:3.5.9]\n        at reactor.core.publisher.Mono.block(Mono.java:1737) ~[monolith-service:3.5.9]\n        at reactor.netty.transport.ServerTransport.bindNow(ServerTransport.java:149) ~[monolith-service:1.1.10]\n        at reactor.netty.transport.ServerTransport.bindNow(ServerTransport.java:134) ~[monolith-service:1.1.10]\n        at org.springframework.boot.web.embedded.netty.NettyWebServer.startHttpServer(NettyWebServer.java:145) ~[monolith-service:3.1.3]\n        at org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:100) ~[monolith-service:3.1.3]\n        at org.springframework.boot.web.reactive.context.WebServerManager.start(WebServerManager.java:55) ~[na:na]\n        at org.springframework.boot.web.reactive.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:41) ~[na:na]\n        at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:179) ~[monolith-service:6.0.11]\n        at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:357) ~[monolith-service:6.0.11]\n        at java.base@17.0.8/java.lang.Iterable.forEach(Iterable.java:75) ~[monolith-service:na]\n        at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:156) ~[monolith-service:6.0.11]\n        at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:124) ~[monolith-service:6.0.11]\n        at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:958) ~[monolith-service:6.0.11]\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:611) ~[monolith-service:6.0.11]\n        at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66) ~[monolith-service:3.1.3]\n        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[monolith-service:3.1.3]\n        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) ~[monolith-service:3.1.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) ~[monolith-service:3.1.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[monolith-service:3.1.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[monolith-service:3.1.3]\n        at com.hkmci.masterspace.monolith.ApplicationKt.main(Application.kt:15) ~[monolith-service:na]\n        at com.hkmci.masterspace.monolith.ApplicationKt.main(Application.kt) ~[monolith-service:na]\n\"><pre class=\"notranslate\"><code class=\"notranslate\">2023-08-31T01:27:05.755+08:00 TRACE 55266 --- [           main] io.netty.channel.nio.NioEventLoop        : instrumented a special java.util.Set into: sun.nio.ch.EPollSelectorImpl@28fee399\n2023-08-31T01:27:05.755+08:00 DEBUG 55266 --- [           main] i.n.c.socket.nio.SelectorProviderUtil    : SelectorProvider.openServerSocketChannel(ProtocolFamily) not available, will use default\n\njava.lang.NoSuchMethodException: java.nio.channels.spi.SelectorProvider.openServerSocketChannel(java.net.ProtocolFamily)\n        at java.base@17.0.8/java.lang.Class.checkMethod(DynamicHub.java:1038) ~[monolith-service:na]\n        at java.base@17.0.8/java.lang.Class.getMethod(DynamicHub.java:1023) ~[monolith-service:na]\n        at io.netty.channel.socket.nio.SelectorProviderUtil.findOpenMethod(SelectorProviderUtil.java:39) ~[na:na]\n        at io.netty.channel.socket.nio.NioServerSocketChannel.&lt;clinit&gt;(NioServerSocketChannel.java:57) ~[monolith-service:4.1.97.Final]\n        at reactor.netty.resources.DefaultLoopNIO.getChannel(DefaultLoopNIO.java:45) ~[na:na]\n        at reactor.netty.resources.LoopResources.onChannel(LoopResources.java:243) ~[monolith-service:1.1.10]\n        at reactor.netty.tcp.TcpResources.onChannel(TcpResources.java:251) ~[monolith-service:1.1.10]\n        at reactor.netty.transport.TransportConfig.lambda$connectionFactory$1(TransportConfig.java:277) ~[monolith-service:1.1.10]\n        at reactor.netty.transport.TransportConnector.doInitAndRegister(TransportConnector.java:277) ~[na:na]\n        at reactor.netty.transport.TransportConnector.bind(TransportConnector.java:87) ~[na:na]\n        at reactor.netty.transport.ServerTransport.lambda$bind$0(ServerTransport.java:115) ~[monolith-service:1.1.10]\n        at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:58) ~[na:na]\n        at reactor.core.publisher.Mono.subscribe(Mono.java:4495) ~[monolith-service:3.5.9]\n        at reactor.core.publisher.Mono.block(Mono.java:1737) ~[monolith-service:3.5.9]\n        at reactor.netty.transport.ServerTransport.bindNow(ServerTransport.java:149) ~[monolith-service:1.1.10]\n        at reactor.netty.transport.ServerTransport.bindNow(ServerTransport.java:134) ~[monolith-service:1.1.10]\n        at org.springframework.boot.web.embedded.netty.NettyWebServer.startHttpServer(NettyWebServer.java:145) ~[monolith-service:3.1.3]\n        at org.springframework.boot.web.embedded.netty.NettyWebServer.start(NettyWebServer.java:100) ~[monolith-service:3.1.3]\n        at org.springframework.boot.web.reactive.context.WebServerManager.start(WebServerManager.java:55) ~[na:na]\n        at org.springframework.boot.web.reactive.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:41) ~[na:na]\n        at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:179) ~[monolith-service:6.0.11]\n        at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:357) ~[monolith-service:6.0.11]\n        at java.base@17.0.8/java.lang.Iterable.forEach(Iterable.java:75) ~[monolith-service:na]\n        at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:156) ~[monolith-service:6.0.11]\n        at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:124) ~[monolith-service:6.0.11]\n        at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:958) ~[monolith-service:6.0.11]\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:611) ~[monolith-service:6.0.11]\n        at org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66) ~[monolith-service:3.1.3]\n        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[monolith-service:3.1.3]\n        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:436) ~[monolith-service:3.1.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:312) ~[monolith-service:3.1.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[monolith-service:3.1.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[monolith-service:3.1.3]\n        at com.hkmci.masterspace.monolith.ApplicationKt.main(Application.kt:15) ~[monolith-service:na]\n        at com.hkmci.masterspace.monolith.ApplicationKt.main(Application.kt) ~[monolith-service:na]\n\n</code></pre></div>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Create a empty Webflux Spring application with <a href=\"https://start.spring.io/\" rel=\"nofollow\">Spring Initializr</a> and compile to native image.</p>\n<p dir=\"auto\">set log level of  <code class=\"notranslate\">io.netty</code> to TRACE.</p>\n<p dir=\"auto\">Just run the application, the exception above will show up.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.97.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\"><a href=\"https://github.com/graalvm/graalvm-ce-builds/releases/tag/jdk-17.0.8\">GraalVM for JDK 17 Community 17.0.8</a>(native image)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Ubuntu22.04</p>",
                "resourcePath": "/netty/netty/issues/13575",
                "createdAt": "2023-08-31T01:29:05Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Only create SslClosedException if there are any writes left to fail.",
        "url": "https://github.com/netty/netty/pull/13580",
        "resourcePath": "/netty/netty/pull/13580",
        "createdAt": "2023-08-31T12:54:22Z",
        "number": 13580,
        "mergeCommit": {
          "oid": "a6f28f2734b5ab6d302e1b6812b820d7019b9bbe",
          "message": "Only create SslClosedException if there are any writes left to fail. (#13580)\n\nMotivation:\r\n\r\nThere is no need to create the SslClosedException if there is no write\r\nto fail.\r\n\r\nModifications:\r\n\r\nCheck if there are any pending writes left and only then create the\r\nSslClosedException\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13569",
          "commitUrl": "https://github.com/netty/netty/commit/a6f28f2734b5ab6d302e1b6812b820d7019b9bbe",
          "parents": {
            "nodes": [
              {
                "oid": "efcd3ce942d6f68510c9e196215d1c9c3c24ff08",
                "message": "SSLSession.getPeerCertificateChain() should throw UnsupportedOperatio\u2026 (#13564)\n\n\u2026nException if javax.security.cert.X509Certificate can bot be created\r\n\r\nMotivation:\r\n\r\nSSLSession.getPeerCertificateChain() is allowed to throw\r\nUnsupportedOperationException if the implementation does not support it.\r\nWe should do exactly this if the JDK that is used can not create a cert\r\nfrom a byte array. Otherwise we will produce an exception much later\r\nwhich is confusing.\r\n\r\nModifications:\r\n\r\nCheck if we can create such a cert and so support it, if not throw an\r\nUnuspportedOperationException as soon as the user tries to use the\r\nmethod.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13560"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/SslHandlerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85ZPFG92gAoMTUxMDhhNTRkN2E0OGU4OWFhNTk0NmJlYjY5YTdlZDYwNjNkMmI4OA",
                "url": "https://github.com/netty/netty/pull/13580/commits/15108a54d7a48e89aa5946beb69a7ed6063d2b88"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13569,
                "url": "https://github.com/netty/netty/issues/13569",
                "title": "Closing an SslHandler always result in allocating a (silent) SslClosedEngineException",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Closing an SslHandler should be a normal operation that should not trigger an error path nor allocate an Exception.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The issue is with <code class=\"notranslate\">SslHandler#closeOutboundAndChannel</code>:</p>\n<ol dir=\"auto\">\n<li>first it <a href=\"https://github.com/netty/netty/blob/4.1/handler/src/main/java/io/netty/handler/ssl/SslHandler.java#L2021\">closes the SSLEngine</a></li>\n<li>then, it <a href=\"https://github.com/netty/netty/blob/4.1/handler/src/main/java/io/netty/handler/ssl/SslHandler.java#L2034\">calls <code class=\"notranslate\">flush</code></a></li>\n<li>flush <a href=\"https://github.com/netty/netty/blob/4.1/handler/src/main/java/io/netty/handler/ssl/SslHandler.java#L2061\">pushes an empty ByteBuf into the pending writes buffer</a></li>\n<li>later, <a href=\"https://github.com/netty/netty/blob/4.1/handler/src/main/java/io/netty/handler/ssl/SslHandler.java#L802\"><code class=\"notranslate\">wrapAndFlush</code> gets called</a></li>\n<li>wrap <a href=\"https://github.com/netty/netty/blob/4.1/handler/src/main/java/io/netty/handler/ssl/SslHandler.java#L902\">crashes on the empty ByteBuf from above</a></li>\n</ol>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Close a Channel that has a SslHandler and debug the <a href=\"https://github.com/netty/netty/blob/4.1/handler/src/main/java/io/netty/handler/ssl/SslHandler.java#L902\">line</a> where the <code class=\"notranslate\">SslClosedEngineException</code> is allocated.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Not sure if it's necessary, please let me know.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.97</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Irrelevant</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Irrelevant</p>",
                "resourcePath": "/netty/netty/issues/13569",
                "createdAt": "2023-08-29T15:24:11Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Prevent classloader leak via JNI",
        "url": "https://github.com/netty/netty/pull/13584",
        "resourcePath": "/netty/netty/pull/13584",
        "createdAt": "2023-09-04T07:29:34Z",
        "number": 13584,
        "mergeCommit": {
          "oid": "ea801cf19773a0eeb1d9d342c4a17e23762fdf2c",
          "message": "Prevent classloader leak via JNI (#13584)\n\nMotivation:\r\n\r\nWe should use weak references to hold global references to our own\r\nclasses as otherwise it will be not possible to unload the classloader.\r\n\r\nModifications:\r\n\r\nUse weak references for the classes in JNI.\r\n\r\nResult:\r\nFixes https://github.com/netty/netty/issues/13480\r\n\r\n---------\r\n\r\nCo-authored-by: Silvio Giebl <silvio.giebl@hivemq.com>",
          "commitUrl": "https://github.com/netty/netty/commit/ea801cf19773a0eeb1d9d342c4a17e23762fdf2c",
          "parents": {
            "nodes": [
              {
                "oid": "153686b1b8d4fb80e33d9114c974dd7aadc9fe8e",
                "message": "Add tests for correctly producing handle close_notify (#13581)\n\nMotivation:\r\n\r\nWe had no tests on how close_notify is produced / handled.\r\n\r\nModifications:\r\n\r\nAdd unit tests that verify that close_notify is handled correctly\r\n\r\nResult:\r\n\r\nVerify correct behaviour"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns-native-macos/src/main/c/netty_resolver_dns_macos.c"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/c/netty_epoll_linuxsocket.c"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/src/main/c/netty_kqueue_bsdsocket.c"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/src/main/c/netty_unix_errors.c"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/src/main/c/netty_unix_socket.c"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85Zc_JF2gAoYmQyYjFhNGVkMGY0OWQ4NTY3YzBiZjQxMjIxZjA5MjcxYmJkYTI0OA",
                "url": "https://github.com/netty/netty/pull/13584/commits/bd2b1a4ed0f49d8567c0bf41221f09271bbda248"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13480,
                "url": "https://github.com/netty/netty/issues/13480",
                "title": "Classloader memory leak via JNI global references",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Netty (in this case via reactor-netty) can be used in conjunction with multiple classloaders, allowing classloaders to be properly unloaded if not referenced anymore. (in this case this is important for a gradle plugin)</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">When using <code class=\"notranslate\">netty-resolver-dns-native-macos</code>, a classloader and all its classes can not be unloaded even if not referenced anymore as the class <code class=\"notranslate\">io.netty.resolver.dns.macos.DnsResolver</code> is a GC root as a JNI global reference.</p>\n<p dir=\"auto\">This class (and other required classes) are loaded via <code class=\"notranslate\">NETTY_JNI_UTIL_LOAD_CLASS</code> (</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/79d3fa52dc0ee07ccc1d9c68648b57dc3bafc88e/resolver-dns-native-macos/src/main/c/netty_resolver_dns_macos.c#L186\">netty/resolver-dns-native-macos/src/main/c/netty_resolver_dns_macos.c</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 186\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/79d3fa52dc0ee07ccc1d9c68648b57dc3bafc88e\">79d3fa5</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L186\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"186\"></td>\n          <td id=\"LC186\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-en\">NETTY_JNI_UTIL_LOAD_CLASS</span>(<span class=\"pl-s1\">env</span>, <span class=\"pl-s1\">dnsResolverClass</span>, <span class=\"pl-s1\">nettyClassName</span>, <span class=\"pl-s1\">done</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n) which uses <code class=\"notranslate\">NewGlobalRef</code> (<a href=\"https://github.com/netty/netty-jni-util/blob/8d820fba781882f8a7fe94efb7656d1413ff8bb8/src/main/c/netty_jni_util.h#L45\">https://github.com/netty/netty-jni-util/blob/8d820fba781882f8a7fe94efb7656d1413ff8bb8/src/main/c/netty_jni_util.h#L45</a>).<p></p>\n<p dir=\"auto\">Maybe using weak global references instead of global references of the classes is a solution.</p>\n<p dir=\"auto\">Or is there any other solutions how to safely use netty with dynamic classloaders?</p>\n\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.94.Final via reactor-netty:1.1.8</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Any</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">MacOS</p>",
                "resourcePath": "/netty/netty/issues/13480",
                "createdAt": "2023-07-10T21:15:39Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove native-image.properties from netty-transport",
        "url": "https://github.com/netty/netty/pull/13596",
        "resourcePath": "/netty/netty/pull/13596",
        "createdAt": "2023-09-08T08:26:12Z",
        "number": 13596,
        "mergeCommit": {
          "oid": "f2dfae3d3715cfd3ece69594daa09f6a15b74323",
          "message": "Remove native-image.properties from netty-transport (#13596)\n\nMotivation:\r\n\r\nSee #13595\r\n\r\nModification:\r\n\r\nRename reflection-config.json to reflect-config.json and let\r\nnative-image detect it automatically.\r\n\r\nResult:\r\n\r\nFixes #13595",
          "commitUrl": "https://github.com/netty/netty/commit/f2dfae3d3715cfd3ece69594daa09f6a15b74323",
          "parents": {
            "nodes": [
              {
                "oid": "84a13a92e1d757965438dc41a5611b19dd47ec44",
                "message": "Deprecate disabling HTTP header validation (#13609)\n\nMotivation:\r\nHTTP request/response splitting is a serious vulnerability, which is\r\nmitigated by enabling HTTP header validation. We already do header\r\nvalidation by default, but we have many constructors in our HTTP codec\r\nthat permit turning it off. We should discourage all our down-stream\r\nusers from turning header validation off.\r\n\r\nModification:\r\n- Deprecate all constructors in our HTTP codec, that allow header\r\nvalidation to be turned off.\r\n- Offer alternative constructors to all the newly deprecated ones, where\r\nheader validation is enabled.\r\n- Trailer validation in `DefaultLastHttpContent` is now enabled by\r\ndefault in the `DefaultLastHttpContent(ByteBuf, HttpHeaders)`\r\nconstructor (Behavioral change!)\r\n- Add better constructors, and more guidance in the javadocs, for\r\n`DefaultHttpHeaders` for those who want to use custom header validators.\r\n\r\nResult:\r\nWe hopefully encourage integrators to validate headers. And we hopefully\r\nget fewer issues reported about disabled header validation when people\r\nrun security scanners on their code."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "DELETED",
                "path": "transport/src/main/resources/META-INF/native-image/io.netty/netty-transport/native-image.properties"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "transport/src/main/resources/META-INF/native-image/io.netty/netty-transport/reflect-config.json"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85Z2itJ2gAoNDdlMGU2YWQ4MmFlNzVhZDVmZWIyYTliNDRkZDQzOTdmNTBlMDY5Mw",
                "url": "https://github.com/netty/netty/pull/13596/commits/47e0e6ad82ae75ad5feb2a9b44dd4397f50e0693"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13595,
                "url": "https://github.com/netty/netty/issues/13595",
                "title": "Use of ReflectionConfigurationResources results in warning starting with GraalVM for JDK 21 (23.1)",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Building native-images with netty should succeed without warnings.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Native builds print the following warning:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Warning: The option '-H:ReflectionConfigurationResources=META-INF/native-image/io.netty/netty-transport/reflection-config.json' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.\"><pre class=\"notranslate\"><code class=\"notranslate\">Warning: The option '-H:ReflectionConfigurationResources=META-INF/native-image/io.netty/netty-transport/reflection-config.json' is experimental and must be enabled via '-H:+UnlockExperimentalVMOptions' in the future.\n</code></pre></div>\n<p dir=\"auto\">The options is passed in<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/f1fa227ddf675f055766d04900cce6804fd7f710/transport/src/main/resources/META-INF/native-image/io.netty/netty-transport/native-image.properties#L15\">netty/transport/src/main/resources/META-INF/native-image/io.netty/netty-transport/native-image.properties</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 15\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/f1fa227ddf675f055766d04900cce6804fd7f710\">f1fa227</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L15\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"15\"></td>\n          <td id=\"LC15\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c1\">Args</span> = <span class=\"pl-s\">-H:ReflectionConfigurationResources=${.}/reflection-config.json</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"wget https://github.com/graalvm/graalvm-ce-dev-builds/releases/download/23.1.0-dev-20230817_2024/graalvm-community-java21-linux-amd64-dev.tar.gz\nwget https://repo1.maven.org/maven2/io/netty/netty-transport/4.1.97.Final/netty-transport-4.1.97.Final.jar\ntar xf graalvm-community-java21-linux-amd64-dev.tar.gz\ncat &gt; Main.java &lt;&lt;EOF                                                                                                                                                                     \npublic class Main {\n    public static void main(String[] args) {\n        System.out.println(&quot;Hello World!&quot;);\n    }\n}\nEOF\n./graalvm-community-openjdk-21+34.1/bin/javac Main.java\n./graalvm-community-openjdk-21+34.1/bin/native-image -cp ./netty-transport-4.1.97.Final.jar:./ Main\"><pre class=\"notranslate\"><code class=\"notranslate\">wget https://github.com/graalvm/graalvm-ce-dev-builds/releases/download/23.1.0-dev-20230817_2024/graalvm-community-java21-linux-amd64-dev.tar.gz\nwget https://repo1.maven.org/maven2/io/netty/netty-transport/4.1.97.Final/netty-transport-4.1.97.Final.jar\ntar xf graalvm-community-java21-linux-amd64-dev.tar.gz\ncat &gt; Main.java &lt;&lt;EOF                                                                                                                                                                     \npublic class Main {\n    public static void main(String[] args) {\n        System.out.println(\"Hello World!\");\n    }\n}\nEOF\n./graalvm-community-openjdk-21+34.1/bin/javac Main.java\n./graalvm-community-openjdk-21+34.1/bin/native-image -cp ./netty-transport-4.1.97.Final.jar:./ Main\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.97.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openjdk version &quot;21&quot; 2023-09-19\nOpenJDK Runtime Environment GraalVM CE 21-dev+34.1 (build 21+34-jvmci-23.1-b12)\nOpenJDK 64-Bit Server VM GraalVM CE 21-dev+34.1 (build 21+34-jvmci-23.1-b12, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">openjdk version \"21\" 2023-09-19\nOpenJDK Runtime Environment GraalVM CE 21-dev+34.1 (build 21+34-jvmci-23.1-b12)\nOpenJDK 64-Bit Server VM GraalVM CE 21-dev+34.1 (build 21+34-jvmci-23.1-b12, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux 6.4.12-200.fc38.x86_64</p>",
                "resourcePath": "/netty/netty/issues/13595",
                "createdAt": "2023-09-08T07:59:12Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Added check for pseudo-headers in trailers",
        "url": "https://github.com/netty/netty/pull/13603",
        "resourcePath": "/netty/netty/pull/13603",
        "createdAt": "2023-09-11T18:46:33Z",
        "number": 13603,
        "mergeCommit": {
          "oid": "2657079302ef7a63a002feccc1492418c0e6934a",
          "message": "Added check for pseudo-headers in trailers (#13603)\n\nMotivation:\r\nAccording to the RFC for HTTP2 on Section 8.1.2.1, 'Pseudo-header fields\r\nMUST NOT appear in trailers. Endpoints MUST treat a request or response\r\nthat contains undefined or invalid pseudo-header fields as malformed\r\n(Section 8.1.2.6).'\r\n\r\nModifications:\r\nUpdated Http2Decoder to check trailers for Pseudo-Headers and treat them\r\nas invalid requests according to RFC 7540 Section 8.1.2.6\r\n\r\nResult:\r\nAfter this change, requests with Pseudo-Headers sent inside trailers\r\nwill be treated as malformed and a stream error is thrown.\r\n\r\n\r\nFixes: #13602\r\n\r\n---------\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>\r\nCo-authored-by: Bryce Anderson <bryce_anderson@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/2657079302ef7a63a002feccc1492418c0e6934a",
          "parents": {
            "nodes": [
              {
                "oid": "a38f7eba437745a7130ae753525b7df0ffac29cd",
                "message": "Automatically close `Http2StreamChannel` when `Http2FrameStreamExcept\u2026 (#13651)\n\n\u2026ion` reaches end of `ChannelPipeline`\r\n\r\nMotivation:\r\n\r\nSometimes the end-user might want to do extra validation and so reset a\r\nstream with a specific `Http2Error`.\r\n\r\nModifications:\r\n\r\nUnwrap `Http2Error` and use it to close the `Http2StreamChannel` if it\r\nreaches the end of the `ChannelPipeline`\r\n\r\nResult:\r\n\r\nMore flexible handling for `Http2ResetFrame`s."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2ConnectionHandlerBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameCodecBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2MultiplexCodecBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionDecoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionRoundtripTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85aDW-E2gAoYjBiNzMxY2Y4ZjQ3MzliYWI5MmM4YmZhZjg1MWU2NTNmYzhiYmJmZQ",
                "url": "https://github.com/netty/netty/pull/13603/commits/b0b731cf8f4739bab92c8bfaf851e653fc8bbbfe"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13602,
                "url": "https://github.com/netty/netty/issues/13602",
                "title": "Malformed requests with Pseudo Headers in trailers",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">According to RFC 7540 <code class=\"notranslate\">Pseudo-header fields MUST NOT appear in trailers. Endpoints MUST treat a request or response that contains undefined or invalid pseudo-header fields as malformed (Section 8.1.2.6).</code> Requests with pseudo-header fields in trailers should be treated as malformed.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Pseudo-header on trailers requests are not treated as malformed.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Send a request with pseudo-headers in trailers.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Because of using the same headers as trailers, this can be reproduced with the test </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/f1fa227ddf675f055766d04900cce6804fd7f710/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionRoundtripTest.java#L1030\">netty/codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionRoundtripTest.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 1030\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/f1fa227ddf675f055766d04900cce6804fd7f710\">f1fa227</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L1030\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"1030\"></td>\n          <td id=\"LC1030\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">flowControlProperlyChunksLargeMessage</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.97</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"17.0.7\" 2023-04-18<br>\nIBM Semeru Runtime Open Edition 17.0.7.0 (build 17.0.7+7)<br>\nEclipse OpenJ9 VM 17.0.7.0 (build openj9-0.38.0, JRE 17 Mac OS X amd64-64-Bit Compressed References 20230418_450 (JIT enabled, AOT enabled)<br>\nOpenJ9   - d57d05932<br>\nOMR      - 855813495<br>\nJCL      - 9d7a231edbc based on jdk-17.0.7+7)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Mac OS X x86_64</p>",
                "resourcePath": "/netty/netty/issues/13602",
                "createdAt": "2023-09-11T18:45:43Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Filter out unresolved addresses when parsing resolv.conf",
        "url": "https://github.com/netty/netty/pull/13614",
        "resourcePath": "/netty/netty/pull/13614",
        "createdAt": "2023-09-15T10:33:02Z",
        "number": 13614,
        "mergeCommit": {
          "oid": "4e17ab6528d7b18236826b75cf55b0cf61b1a129",
          "message": "Filter out unresolved addresses when parsing resolv.conf (#13614)\n\nMotivation:\r\n\r\nWe need to filter out unresolved addresses when parsing resolv.conf as\r\notherwise we might throw an exception while initialize the default\r\naddress provider.\r\n\r\nModifications:\r\n\r\nOnly add address when its resolvable\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13612",
          "commitUrl": "https://github.com/netty/netty/commit/4e17ab6528d7b18236826b75cf55b0cf61b1a129",
          "parents": {
            "nodes": [
              {
                "oid": "7317f566fddab0910b0405a1fb7f83483c0c4374",
                "message": "Cleanup docker images (#13620)\n\nMotivation:\r\n\r\nDocker images can be quite large, lets try to cleanup things we not\r\nneed.\r\n\r\nModifications:\r\n\r\n- Cleanup things during docker image creation\r\n- Remove docker layer caching\r\n\r\nResult:\r\n\r\nDocker image needs less disk-space"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/UnixResolverDnsServerAddressStreamProvider.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/test/java/io/netty/resolver/dns/UnixResolverDnsServerAddressStreamProviderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85abSXy2gAoZDIzMWNhNjY0MjFhZTZmNDc3YmYzMmY0NjcxMGVjZmI0ZTU0MjUwYQ",
                "url": "https://github.com/netty/netty/pull/13614/commits/d231ca66421ae6f477bf32f46710ecfb4e54250a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13612,
                "url": "https://github.com/netty/netty/issues/13612",
                "title": "Error parsing IPv6 interface Unix resolv.conf",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">I have the following <code class=\"notranslate\">/etc/resolv.conf</code>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"# Generated by NetworkManager\nsearch localdomain\nnameserver 10.211.55.1\nnameserver fe80::21c:42ff:fe00:18%enp0s5\"><pre lang=\"conf\" class=\"notranslate\"><code class=\"notranslate\"># Generated by NetworkManager\nsearch localdomain\nnameserver 10.211.55.1\nnameserver fe80::21c:42ff:fe00:18%enp0s5\n</code></pre></div>\n<p dir=\"auto\">if I comment the last line, it works!</p>\n<p dir=\"auto\">my network interfaces are:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"[fabio@localhost infinispan]$ ip addr \n1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: enp0s5: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000\n    link/ether 00:1c:42:32:14:87 brd ff:ff:ff:ff:ff:ff\n    inet 10.211.55.25/24 brd 10.211.55.255 scope global dynamic noprefixroute enp0s5\n       valid_lft 1480sec preferred_lft 1480sec\n    inet6 fdb2:2c26:f4e4:0:21c:42ff:fe32:1487/64 scope global dynamic noprefixroute \n       valid_lft 2591703sec preferred_lft 604503sec\n    inet6 fe80::21c:42ff:fe32:1487/64 scope link noprefixroute \n       valid_lft forever preferred_lft forever\n3: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default \n    link/ether 02:42:ec:2a:d3:64 brd ff:ff:ff:ff:ff:ff\"><pre class=\"notranslate\">[fabio@localhost infinispan]$ ip addr \n1: lo: <span class=\"pl-k\">&lt;</span>LOOPBACK,UP,LOWER_UP<span class=\"pl-k\">&gt;</span> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host \n       valid_lft forever preferred_lft forever\n2: enp0s5: <span class=\"pl-k\">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class=\"pl-k\">&gt;</span> mtu 1500 qdisc fq_codel state UP group default qlen 1000\n    link/ether 00:1c:42:32:14:87 brd ff:ff:ff:ff:ff:ff\n    inet 10.211.55.25/24 brd 10.211.55.255 scope global dynamic noprefixroute enp0s5\n       valid_lft 1480sec preferred_lft 1480sec\n    inet6 fdb2:2c26:f4e4:0:21c:42ff:fe32:1487/64 scope global dynamic noprefixroute \n       valid_lft 2591703sec preferred_lft 604503sec\n    inet6 fe80::21c:42ff:fe32:1487/64 scope link noprefixroute \n       valid_lft forever preferred_lft forever\n3: docker0: <span class=\"pl-k\">&lt;</span>NO-CARRIER,BROADCAST,MULTICAST,UP<span class=\"pl-k\">&gt;</span> mtu 1500 qdisc noqueue state DOWN group default \n    link/ether 02:42:ec:2a:d3:64 brd ff:ff:ff:ff:ff:ff</pre></div>\n<h3 dir=\"auto\">Actual behavior</h3>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"java.lang.ExceptionInInitializerError: Exception java.lang.ExceptionInInitializerError [in thread &quot;testng-TracingPropagationTest&quot;]\n\tat io.netty.resolver.dns.UnixResolverDnsServerAddressStreamProvider.parseSilently(UnixResolverDnsServerAddressStreamProvider.java:80)\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders$DefaultProviderHolder$1.provider(DnsServerAddressStreamProviders.java:151)\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders$DefaultProviderHolder$1.&lt;init&gt;(DnsServerAddressStreamProviders.java:130)\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders$DefaultProviderHolder.&lt;clinit&gt;(DnsServerAddressStreamProviders.java:128)\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders.unixDefault(DnsServerAddressStreamProviders.java:117)\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders.platformDefault(DnsServerAddressStreamProviders.java:113)\n\tat io.netty.resolver.dns.DnsNameResolverBuilder.&lt;init&gt;(DnsNameResolverBuilder.java:66)\n\tat org.infinispan.client.hotrod.impl.transport.netty.ChannelFactory.start(ChannelFactory.java:127)\"><pre class=\"notranslate\">java.lang.ExceptionInInitializerError: Exception java.lang.ExceptionInInitializerError [in thread <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>testng-TracingPropagationTest<span class=\"pl-pds\">\"</span></span>]\n\tat io.netty.resolver.dns.UnixResolverDnsServerAddressStreamProvider.parseSilently(UnixResolverDnsServerAddressStreamProvider.java:80)\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders<span class=\"pl-smi\">$DefaultProviderHolder</span><span class=\"pl-smi\">$1</span>.provider(DnsServerAddressStreamProviders.java:151)\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders<span class=\"pl-smi\">$DefaultProviderHolder</span><span class=\"pl-smi\">$1</span>.<span class=\"pl-k\">&lt;</span>init<span class=\"pl-s\"><span class=\"pl-pds\">&gt;(</span>DnsServerAddressStreamProviders.java:130<span class=\"pl-pds\">)</span></span>\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders<span class=\"pl-smi\">$DefaultProviderHolder</span>.<span class=\"pl-k\">&lt;</span>clinit<span class=\"pl-s\"><span class=\"pl-pds\">&gt;(</span>DnsServerAddressStreamProviders.java:128<span class=\"pl-pds\">)</span></span>\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders.unixDefault(DnsServerAddressStreamProviders.java:117)\n\tat io.netty.resolver.dns.DnsServerAddressStreamProviders.platformDefault(DnsServerAddressStreamProviders.java:113)\n\tat io.netty.resolver.dns.DnsNameResolverBuilder.<span class=\"pl-k\">&lt;</span>init<span class=\"pl-s\"><span class=\"pl-pds\">&gt;(</span>DnsNameResolverBuilder.java:66<span class=\"pl-pds\">)</span></span>\n\tat org.infinispan.client.hotrod.impl.transport.netty.ChannelFactory.start(ChannelFactory.java:127)</pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Try to use a similar <code class=\"notranslate\">/etc/resolv.conf</code></p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">DnsNameResolverBuilder builder = new DnsNameResolverBuilder()<br>\n.channelType(io.netty.channel.epoll.EpollDatagramChannel.class)<br>\n.ttl(0, 2147483647)<br>\n.negativeTtl(0);</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.94.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk 17.0.7 2023-04-18 LTS<br>\nOpenJDK Runtime Environment (Red_Hat-17.0.7.0.7-1.el7openjdkportable) (build 17.0.7+7-LTS)<br>\nOpenJDK 64-Bit Server VM (Red_Hat-17.0.7.0.7-1.el7openjdkportable) (build 17.0.7+7-LTS, mixed mode, sharing)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux localhost.localdomain 5.14.0-284.18.1.el9_2.x86_64 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"418688\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/1\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/1/hovercard\" href=\"https://github.com/netty/netty/pull/1\">#1</a> SMP PREEMPT_DYNAMIC Wed May 31 10:39:18 EDT 2023 x86_64 x86_64 x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/13612",
                "createdAt": "2023-09-15T08:50:37Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Clarify default TCP fallback behaviour",
        "url": "https://github.com/netty/netty/pull/13621",
        "resourcePath": "/netty/netty/pull/13621",
        "createdAt": "2023-09-18T12:36:37Z",
        "number": 13621,
        "mergeCommit": {
          "oid": "6cb6d38b34fa351ecd5268fd65f799b3eb0b5c8c",
          "message": "Clarify default TCP fallback behaviour (#13621)\n\nMotivation:\r\n\r\nWe should make it more clear that TCP fallback is not configured by\r\ndefault when building a DnsNameResolver.\r\n\r\nModifications:\r\n\r\nExpand javadocs\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13616",
          "commitUrl": "https://github.com/netty/netty/commit/6cb6d38b34fa351ecd5268fd65f799b3eb0b5c8c",
          "parents": {
            "nodes": [
              {
                "oid": "d453175611c7866db51f75cb98de135d9b15ea5b",
                "message": "Revert \"Run action that frees up diskspace during workflows (#13572)\" (#13617)\n\nMotivation:\r\n\r\nThe used github action does not work anymore\r\n\r\nModifications:\r\n\r\nThis reverts commit c91d5a2608a8461377d004d5fe1bd2572533083d.\r\n\r\nBuild pass again"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolverBuilder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85akIQA2gAoYzY2MDFlZmM2YmY1MDc1OTA0YmE5ZDgzYTA2MGZjMTlhNmE2MDAwOQ",
                "url": "https://github.com/netty/netty/pull/13621/commits/c6601efc6bf5075904ba9d83a060fc19a6a60009"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13616,
                "url": "https://github.com/netty/netty/issues/13616",
                "title": "DnsNameResolver TCP fallback is not a default behavior",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The impression from reading the documentation is that the DnsNameResolver will fallback to TCP if there is response truncation over UDP, and only if you want to turn it off you set <code class=\"notranslate\">socketChannelFactory</code> to <code class=\"notranslate\">null</code></p>\n<p dir=\"auto\"><a href=\"https://netty.io/4.1/api/io/netty/resolver/dns/DnsNameResolverBuilder.html#socketChannelFactory-io.netty.channel.ChannelFactory-\" rel=\"nofollow\">https://netty.io/4.1/api/io/netty/resolver/dns/DnsNameResolverBuilder.html#socketChannelFactory-io.netty.channel.ChannelFactory-</a></p>\n<p dir=\"auto\">So, I do not have to explicitly set <code class=\"notranslate\">socketChannelFactory</code> or <code class=\"notranslate\">socketChannelType</code> in DnsNameResolverBuilder for Netty to fallback by default.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Netty, by default, does not fallback to TCP, unless I set <code class=\"notranslate\">socketChannelFactory</code> in DnsNameResolverBuilder. In the absence of tha field being set explicitly, the following check in DnsNameResolver fails, which prevents TCP fallback.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            // Check if the response was truncated and if we can fallback to TCP to retry.\n            if (!res.isTruncated() || socketChannelFactory == null) {\n                qCtx.finish(res);\n                return;\n            }\"><pre class=\"notranslate\"><code class=\"notranslate\">            // Check if the response was truncated and if we can fallback to TCP to retry.\n            if (!res.isTruncated() || socketChannelFactory == null) {\n                qCtx.finish(res);\n                return;\n            }\n</code></pre></div>\n<p dir=\"auto\">If I understand the behavior correctly, this could lead to possibly misinterpretations for customers (other than me :) ) . Eg: Redisson seems to assume TCP fallback is automatic and I didn't find any code where they set these fields(i might be wrong about their code) <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1779437735\" data-permission-text=\"Title is private\" data-url=\"https://github.com/redisson/redisson/issues/5137\" data-hovercard-type=\"issue\" data-hovercard-url=\"/redisson/redisson/issues/5137/hovercard\" href=\"https://github.com/redisson/redisson/issues/5137\">redisson/redisson#5137</a>.</p>\n<p dir=\"auto\">We probably want to mention behavior this in the documentation explicit.</p>\n<p dir=\"auto\">Also, I assume that falling back on TCP is expected and intended behavior based on <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"442266249\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/9139\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/9139/hovercard\" href=\"https://github.com/netty/netty/pull/9139\">#9139</a> and linked RFC <a href=\"https://tools.ietf.org/html/rfc7766\" rel=\"nofollow\">https://tools.ietf.org/html/rfc7766</a>.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ol dir=\"auto\">\n<li>Build a DnsNameResolver without passing either <code class=\"notranslate\">socketChannelFactory</code> or <code class=\"notranslate\">socketChannelType</code>.</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        DnsNameResolverBuilder builder = new DnsNameResolverBuilder().channelFactory(EpollDatagramChannel::new);\n        DnsNameResolver resolver = builder.build();\"><pre class=\"notranslate\"><code class=\"notranslate\">        DnsNameResolverBuilder builder = new DnsNameResolverBuilder().channelFactory(EpollDatagramChannel::new);\n        DnsNameResolver resolver = builder.build();\n</code></pre></div>\n<ol start=\"2\" dir=\"auto\">\n<li>On truncation, the DNS will not fallback to TCP.</li>\n</ol>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.73 (But I assume it happens on other versions too).</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Tested on mac and linux machines.</p>",
                "resourcePath": "/netty/netty/issues/13616",
                "createdAt": "2023-09-15T22:17:10Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "When read PoolSubpage's variant fields, it should lock on PoolSubpage's head lock, instead of PoolArena's lock",
        "url": "https://github.com/netty/netty/pull/13626",
        "resourcePath": "/netty/netty/pull/13626",
        "createdAt": "2023-09-20T08:13:54Z",
        "number": 13626,
        "mergeCommit": {
          "oid": "caca5e5a1e19a26a3cff3560b79e7ade18398540",
          "message": "When read PoolSubpage's variant fields, it should lock on PoolSubpage's head lock, instead of PoolArena's lock (#13626)\n\nMotivation:\r\n\r\nWhen we read `PoolSubpage`'s variant fields:`doNotDestroy` and\r\n`numAvail`, we should lock on `PoolSubpage`'s head subpage, instead of\r\n`PoolArena`'s lock.\r\n\r\nBecause the writing on `doNotDestroy` and `numAvail` is always under\r\n`PoolSubpage`'s head subpage lock.\r\n\r\nModification:\r\n\r\n1. Introduced a `int headIndex` field in `PoolSubpage` to locate the\r\nhead subpage, lock on `PoolSubpage`'s head subpage instead of\r\n`PoolArena`'s lock.\r\n2. This also help to locate head subpage when doing `bytebuf` release.\r\nFixed [13625](https://github.com/netty/netty/issues/13625).\r\n\r\nResult:\r\n\r\nSee above.\r\n\r\n---------\r\n\r\nCo-authored-by: laosijikaichele <laosijikaichele>\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/caca5e5a1e19a26a3cff3560b79e7ade18398540",
          "parents": {
            "nodes": [
              {
                "oid": "d97f2a5606aaccf7494ff29d7229be1349fe746a",
                "message": "Update checkout action to latest version (#13649)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolArena.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolChunk.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PoolSubpage.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/main/java/io/netty/buffer/PooledByteBufAllocator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "buffer/src/test/java/io/netty/buffer/AlignedPooledByteBufAllocatorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85awTMv2gAoOTFjZjg1MTRmMTIwZDc5MjZhYTk2MDI5NmFkYzZjNDQyYzJjOTQ4YQ",
                "url": "https://github.com/netty/netty/pull/13626/commits/91cf8514f120d7926aa960296adc6c442c2c948a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13625,
                "url": "https://github.com/netty/netty/issues/13625",
                "title": "In some cases when release a pool directBuffer, it locks on a different head subpage",
                "bodyHTML": "<p dir=\"auto\">I accidentally found this issue when doing another PR <a href=\"https://github.com/netty/netty/pull/13626\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/13626/hovercard\">13626</a>.</p>\n<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When releasing a pool directBuffer, it should lock on the head subpage as same as the one when it allocated.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">In some cases, it locks on a different head subpage when releasing.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Run the following test code within <code class=\"notranslate\">io.netty.buffer</code>'s test package, the test will fail, because when releasing the <code class=\"notranslate\">byteBuf</code>, it locks on a different head subpage.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Test\n    public void testDirectSubpageReleaseLock() throws Exception {\n\n        int initialCapacity = 0;\n        int directMemoryCacheAlignment = 32;\n\n        PooledByteBufAllocator allocator = new PooledByteBufAllocator(\n                true,\n                0,\n                1,\n                PooledByteBufAllocator.defaultPageSize(),\n                PooledByteBufAllocator.defaultMaxOrder(),\n                0,\n                0,\n                false,\n                directMemoryCacheAlignment);\n\n        final PooledByteBuf byteBuf = (PooledByteBuf)allocator.directBuffer(initialCapacity, 16);\n\n        byteBuf.chunk.arena.smallSubpages();\n        Field smallSubpagesField = Class.forName(&quot;io.netty.buffer.PoolArena&quot;).getDeclaredField(&quot;smallSubpagePools&quot;);\n        smallSubpagesField.setAccessible(true);\n        // get the smallSubpagePools[] array in arena.\n        PoolSubpage&lt;byte[]&gt;[] smallSubpagePools = (PoolSubpage&lt;byte[]&gt;[])smallSubpagesField.get(byteBuf.chunk.arena);\n        PoolSubpage head = null;\n        for (PoolSubpage subpage : smallSubpagePools) {\n            if (subpage.next != subpage) {\n                // Find the head subpage which the byteBuf belongs to.\n                head = subpage;\n                break;\n            }\n        }\n        // We intentionally lock the head subpage in main thread.\n        head.lock(); \n        Thread t1 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                // Because the head subpage was already locked in the main thread, so this should hang and wait.\n                byteBuf.release();\n            }\n        });\n        t1.setDaemon(true);\n        t1.start();\n        // wait max 3 seconds.\n        t1.join(1000 * 3);\n        if (!t1.isAlive()) {\n            fail(&quot;The t1 thread should still alive and wait for the head lock.&quot;);\n        }\n    } \"><pre class=\"notranslate\"><code class=\"notranslate\">    @Test\n    public void testDirectSubpageReleaseLock() throws Exception {\n\n        int initialCapacity = 0;\n        int directMemoryCacheAlignment = 32;\n\n        PooledByteBufAllocator allocator = new PooledByteBufAllocator(\n                true,\n                0,\n                1,\n                PooledByteBufAllocator.defaultPageSize(),\n                PooledByteBufAllocator.defaultMaxOrder(),\n                0,\n                0,\n                false,\n                directMemoryCacheAlignment);\n\n        final PooledByteBuf byteBuf = (PooledByteBuf)allocator.directBuffer(initialCapacity, 16);\n\n        byteBuf.chunk.arena.smallSubpages();\n        Field smallSubpagesField = Class.forName(\"io.netty.buffer.PoolArena\").getDeclaredField(\"smallSubpagePools\");\n        smallSubpagesField.setAccessible(true);\n        // get the smallSubpagePools[] array in arena.\n        PoolSubpage&lt;byte[]&gt;[] smallSubpagePools = (PoolSubpage&lt;byte[]&gt;[])smallSubpagesField.get(byteBuf.chunk.arena);\n        PoolSubpage head = null;\n        for (PoolSubpage subpage : smallSubpagePools) {\n            if (subpage.next != subpage) {\n                // Find the head subpage which the byteBuf belongs to.\n                head = subpage;\n                break;\n            }\n        }\n        // We intentionally lock the head subpage in main thread.\n        head.lock(); \n        Thread t1 = new Thread(new Runnable() {\n            @Override\n            public void run() {\n                // Because the head subpage was already locked in the main thread, so this should hang and wait.\n                byteBuf.release();\n            }\n        });\n        t1.setDaemon(true);\n        t1.start();\n        // wait max 3 seconds.\n        t1.join(1000 * 3);\n        if (!t1.isAlive()) {\n            fail(\"The t1 thread should still alive and wait for the head lock.\");\n        }\n    } \n</code></pre></div>\n<p dir=\"auto\">The test will also fail when <code class=\"notranslate\">int directMemoryCacheAlignment = 64;</code>.<br>\nBut if we changed it to <code class=\"notranslate\">int directMemoryCacheAlignment = 16;</code>, then the test will pass.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1 branch</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">JDK-17</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/13625",
                "createdAt": "2023-09-20T08:05:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add validation for pseudo-headers on requests/responses",
        "url": "https://github.com/netty/netty/pull/13647",
        "resourcePath": "/netty/netty/pull/13647",
        "createdAt": "2023-10-03T20:05:42Z",
        "number": 13647,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2ConnectionHandlerBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameCodecBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2MultiplexCodecBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionEncoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2ConnectionRoundtripTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/Http2MultiplexTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85b1Edd2gAoMTIyZGQ5MDdhMGRiNmU4YzNjNTllODdiY2QwZjhlODgxZWIxMDZhOA",
                "url": "https://github.com/netty/netty/pull/13647/commits/122dd907a0db6e8c3c59e87bcd0f8e881eb106a8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13646,
                "url": "https://github.com/netty/netty/issues/13646",
                "title": "Validate pseudo-headers in requests/responses",
                "bodyHTML": "<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"          The (old) RFC 7540 has:\"><pre class=\"notranslate\"><code class=\"notranslate\">          The (old) RFC 7540 has:\n</code></pre></div>\n<blockquote>\n<p dir=\"auto\">Pseudo-header fields defined for requests MUST NOT appear<br>\nin responses; pseudo-header fields defined for responses MUST NOT<br>\nappear in requests.  Pseudo-header fields MUST NOT appear in<br>\ntrailers.</p>\n</blockquote>\n<p dir=\"auto\">Where are we doing that first part? I'd expect to see the mirror of this logic elsewhere. Do we just not have that logic anywhere?</p>\n<p dir=\"auto\"><em>Originally posted by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ejona86/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ejona86\">@ejona86</a> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1891063016\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/13603\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/13603/hovercard?comment_id=1623277693&amp;comment_type=review\" href=\"https://github.com/netty/netty/pull/13603#pullrequestreview-1623277693\">#13603 (review)</a></em></p>\n<p dir=\"auto\">Need to validate Netty's behavior on this and if appropriate work on a fix to validate</p>",
                "resourcePath": "/netty/netty/issues/13646",
                "createdAt": "2023-10-03T19:42:36Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add support for RISC-V",
        "url": "https://github.com/netty/netty/pull/13670",
        "resourcePath": "/netty/netty/pull/13670",
        "createdAt": "2023-10-27T14:47:46Z",
        "number": 13670,
        "mergeCommit": {
          "oid": "ade1223dd31d32e5ea0288b8a0f0fd148e231d0f",
          "message": "Add support for RISC-V (#13670)\n\nMotivation:\r\n\r\nRISC-V is gaining traction across the industry and many projects rely on\r\nNetty. To run these projects, Netty needs to support RISC-V.\r\n\r\nModifications:\r\n\r\nMostly build scripts and CI files. CentOS doesn't have packages with\r\nrecent-enough versions for autoconf, automake, libtool, and the GNU\r\ncompiler toolchain.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13667\r\n\r\nlinux-riscv64 packages are created in a similar manner to linux-aarch64\r\npackages.",
          "commitUrl": "https://github.com/netty/netty/commit/ade1223dd31d32e5ea0288b8a0f0fd148e231d0f",
          "parents": {
            "nodes": [
              {
                "oid": "e2c706adad8fa3c5c5d5f15d1b6b2fb0a582a06d",
                "message": "`ConnectTimeoutException`: include timeout value (#13719)\n\nMotivation:\r\n\r\nWhen transport throws `ConnectTimeoutException`, it's useful to know\r\nwhat was the pre-configured value that triggered the timeout.\r\n\r\nModifications:\r\n\r\n- Enhance exception message for all `ConnectTimeoutException` use-cases\r\nto include `connectTimeoutMillis` value;\r\n\r\nResult:\r\n\r\nUsers can understand what was a pre-configured value of\r\n`connectTimeoutMillis` that triggered `ConnectTimeoutException`."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/internal/PlatformDependent.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "docker/Dockerfile.cross_compile_riscv64"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "docker/README.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "docker/docker-compose.centos-7.yaml"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "docker/docker-compose.ubuntu-20.04.yaml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "example/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/main/c/netty_epoll_native.c"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-unix-common/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85d-1Td2gAoMDA5ZGRiMjkxZDA0NzZjY2EzZjI1NDY4NTNlNDFlNDg0MGEyOGVhZg",
                "url": "https://github.com/netty/netty/pull/13670/commits/009ddb291d0476cca3f2546853e41e4840a28eaf"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13667,
                "url": "https://github.com/netty/netty/issues/13667",
                "title": "Add support for RISC-V",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Netty should work on linux-riscv64</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Netty doesn't work on linux-riscv64. The packages containing native libraries don't have support for linux-riscv64.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Install and run any application depending on netty on a linux-riscv64 machine. You can also try to build and test Netty with <a href=\"https://www.qemu.org/docs/master/user/index.html\" rel=\"nofollow\">QEMU user emulation</a></p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"podman run --rm -it --privileged --platform riscv64 -v $(pwd):$(pwd) -w $(pwd) riscv64/ubuntu:23.04 bash -c &quot;apt update; apt install -y openjdk-21-jdk; ./mvnw clean package&quot;\"><pre class=\"notranslate\"><code class=\"notranslate\">podman run --rm -it --privileged --platform riscv64 -v $(pwd):$(pwd) -w $(pwd) riscv64/ubuntu:23.04 bash -c \"apt update; apt install -y openjdk-21-jdk; ./mvnw clean package\"\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">11, 17, 21</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Linux 85a338514ae4 6.2.0-35-generic #35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Fri Oct  6 10:23:26 UTC 2 riscv64 riscv64 riscv64 GNU/Linux\"><pre class=\"notranslate\"><code class=\"notranslate\">Linux 85a338514ae4 6.2.0-35-generic #35~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Fri Oct  6 10:23:26 UTC 2 riscv64 riscv64 riscv64 GNU/Linux\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/13667",
                "createdAt": "2023-10-25T20:22:14Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Workaround for regex bug in Android SDK",
        "url": "https://github.com/netty/netty/pull/13695",
        "resourcePath": "/netty/netty/pull/13695",
        "createdAt": "2023-11-10T09:00:53Z",
        "number": 13695,
        "mergeCommit": {
          "oid": "2241f829e223f1959e8d04f5c8c4c5612d4d0885",
          "message": "Workaround for regex bug in Android SDK (#13695)\n\nMotivation:\r\n\r\nIf Netty is started from an Android app and certificate/private key are\r\npassed into the builder as input streams, an error occurs:\r\norg.conscrypt.OpenSSLX509CertificateFactory:\r\norg.conscrypt.OpenSSLX509CertificateFactory: java.lang.RuntimeException:\r\nerror:0c0000a2:ASN.1 encoding routines:OPENSSL_internal:NOT_ENOUGH_DATA\r\n\r\nDue to a bug in the regex implementation in Android SDK, the certificate\r\nis parsed from the input stream as BEGIN and further creating of the\r\nX.509 certificate fails.\r\n\r\nSee https://issuetracker.google.com/issues/293206296 \r\n\r\nModifications:\r\n\r\nThe end position of the latest match is saved into a variable and used\r\nas the start position for the next match as a workaround for the bug.\r\n\r\nResult:\r\n\r\nFixes #13515\r\n\r\nNetty starts on Android without an error.",
          "commitUrl": "https://github.com/netty/netty/commit/2241f829e223f1959e8d04f5c8c4c5612d4d0885",
          "parents": {
            "nodes": [
              {
                "oid": "5a58f0431e286f2943de75738208b6403c22b722",
                "message": "Faster setZero (Fixes #13692) (#13693)\n\nMotivation:\r\n\r\nUnsafe's buffer setZero always piggyback to the JDK's Unsafe::setMemory,\r\nwhich is not optimized for small writes, given that's not an intrinsic\r\ncandidate\r\nand requires handling thread-state transitions.\r\n\r\nModifications:\r\n\r\nHandle small writes with a specialized code path which won't rely on\r\nUnsafe::setMemory\r\n\r\nResult:\r\n\r\nFaster setZero(...) and writeZero(...)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/PemReader.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85fHlHS2gAoNTBmYWMwYzhjZmFlNjljYzk1ZmQ4ZDFhMGUwNjgwMDI3YjBlMGEwZQ",
                "url": "https://github.com/netty/netty/pull/13695/commits/50fac0c8cfae69cc95fd8d1a0e0680027b0e0a0e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13515,
                "url": "https://github.com/netty/netty/issues/13515",
                "title": "SSL certificate parsing issue when upgrading beyond 4.1.78 on Android",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">We're running a gRPC server on Android. We use SSL and have certificates that work until version 4.1.79, and we'd like to be able to continue to use them on more recent versions. Looking for hints to debug why this would suddenly start failing.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Certificates fail to parse with:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: java.lang.RuntimeException: error:0c0000a2:ASN.1 encoding routines:OPENSSL_internal:NOT_ENOUGH_DATA\"><pre class=\"notranslate\"><code class=\"notranslate\">org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: java.lang.RuntimeException: error:0c0000a2:ASN.1 encoding routines:OPENSSL_internal:NOT_ENOUGH_DATA\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Upgrade Netty.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">Unfortunately this is a complex and proprietary project so it's difficult to provide a reproduction. The relevant interactions are between Netty and gRPC version 1.47.0 and conscrypt-android version 2.5.1, and the code is running on Android API 28.</p>\n<p dir=\"auto\">If the short diff between 4.1.78 and 4.1.79 is not enough to find a good solution I can try to build a minimum reproducer. I've also tried to use Jitpack to build intermediate commits but I'm having trouble getting those to run on Android.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.79</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Android API 28.</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Android 9.</p>",
                "resourcePath": "/netty/netty/issues/13515",
                "createdAt": "2023-07-26T02:51:59Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Default value of MAX_MESSAGES_PER_READ not used for native DatagramCh\u2026",
        "url": "https://github.com/netty/netty/pull/13736",
        "resourcePath": "/netty/netty/pull/13736",
        "createdAt": "2023-12-15T15:47:05Z",
        "number": 13736,
        "mergeCommit": {
          "oid": "356f2f0c892c4d572e60e15f24c33a7996703bb5",
          "message": "Default value of MAX_MESSAGES_PER_READ not used for native DatagramCh\u2026 (#13736)\n\n\u2026annel\r\n\r\nMotivation:\r\n\r\nDue of how we did set up the RecvByteBufAllocator we did not set the\r\ncorrect default value for the max message per read.\r\n\r\nModifications:\r\n\r\nPass the RecvByteBufAllocator in the constructor so its setup correctly.\r\n\r\nResult:\r\n\r\nFix https://github.com/netty/netty/issues/13733",
          "commitUrl": "https://github.com/netty/netty/commit/356f2f0c892c4d572e60e15f24c33a7996703bb5",
          "parents": {
            "nodes": [
              {
                "oid": "3710cf1d19fb83cb6d09097db47be97b73248d44",
                "message": "[maven-release-plugin] prepare for next development iteration"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDomainDatagramChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDatagramChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/KQueueDomainDatagramChannelConfig.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDatagramChannelTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-native-epoll/src/test/java/io/netty/channel/epoll/EpollDomainDatagramChannelTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KqueueDatagramChannelTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "transport-native-kqueue/src/test/java/io/netty/channel/kqueue/KqueueDomainDatagramChannelTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85iH31c2gAoN2Q1MWQ3MTVlNzE1ODVlNzFjZDVhMGQxZWEzMjUxOWUyZTllYTE1Ng",
                "url": "https://github.com/netty/netty/pull/13736/commits/7d51d715e71585e71cd5a0d1ea32519e2e9ea156"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13733,
                "url": "https://github.com/netty/netty/issues/13733",
                "title": "Default value of MAX_MESSAGES_PER_READ not used for native DatagramChannel transports",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">This PR recently fixed suboptimal default values for MAX_MESSAGES_PER_READ <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1972146903\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/13676\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/13676/hovercard\" href=\"https://github.com/netty/netty/pull/13676\">#13676</a>.</p>\n<p dir=\"auto\">After this PR expected behaviour is that all DatagramChannel implementations use MAX_MESSAGES_PER_READ as set per <code class=\"notranslate\">ChannelMetdadata</code>.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Expected behaviour is that the <code class=\"notranslate\">ChannelMeta</code>'s <code class=\"notranslate\">defaultMaxMessagesPerRead</code> field flows through to the <code class=\"notranslate\">RecvByteBufAllocator</code> and increases the messages read. This is the case for NIO which directly uses the <code class=\"notranslate\">DefaultChannelConfig</code>. However this does not seem to be the case with Epoll (and likely other native transports) as it overwrites the default recv bytebuf allocator with the method call which does not set the <code class=\"notranslate\">maxMessagesPerRead</code>.</p>\n<p dir=\"auto\">Problem I see is <a href=\"https://github.com/netty/netty/blob/4.1/transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannelConfig.java#L40\">here</a> calling the method with one argument rather than the one with <a href=\"https://github.com/netty/netty/blob/4.1/transport/src/main/java/io/netty/channel/DefaultChannelConfig.java#L323\">two</a>.</p>\n<p dir=\"auto\">It could likely be fixed like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    EpollDatagramChannelConfig(EpollDatagramChannel channel) {\n        super(channel, new FixedRecvByteBufAllocator(2048));\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    EpollDatagramChannelConfig(EpollDatagramChannel channel) {\n        super(channel, new FixedRecvByteBufAllocator(2048));\n    }\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Create a EpollDatagramChannel and check <code class=\"notranslate\">channel.config().getMaxMessagesPerRead()</code> being 1.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"EpollDatagramChannel channel = new EpollDatagramChannel();\nSystem.out.println(channel.config().getMaxMessagesPerRead());\"><pre class=\"notranslate\"><code class=\"notranslate\">EpollDatagramChannel channel = new EpollDatagramChannel();\nSystem.out.println(channel.config().getMaxMessagesPerRead());\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">Netty 4.1.104.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"openjdk version &quot;20.0.1&quot; 2023-04-18\nOpenJDK Runtime Environment Temurin-20.0.1+9 (build 20.0.1+9)\nOpenJDK 64-Bit Server VM Temurin-20.0.1+9 (build 20.0.1+9, mixed mode, sharing)\"><pre class=\"notranslate\"><code class=\"notranslate\">openjdk version \"20.0.1\" 2023-04-18\nOpenJDK Runtime Environment Temurin-20.0.1+9 (build 20.0.1+9)\nOpenJDK 64-Bit Server VM Temurin-20.0.1+9 (build 20.0.1+9, mixed mode, sharing)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux</p>",
                "resourcePath": "/netty/netty/issues/13733",
                "createdAt": "2023-12-15T12:47:50Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "When DNS by UDP truncated or timeout, then  fallback to TCP ",
        "url": "https://github.com/netty/netty/pull/13750",
        "resourcePath": "/netty/netty/pull/13750",
        "createdAt": "2023-12-25T08:35:02Z",
        "number": 13750,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DnsNameResolver.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85iu7EV2gAoMWQyOWMyZGY3NjI0OWQ2ZmQwZWUzZDBlODY4ZmFlYmExM2U0MzJlZA",
                "url": "https://github.com/netty/netty/pull/13750/commits/1d29c2df76249d6fd0ee3d0e868faeba13e432ed"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1625,
                "url": "https://github.com/redisson/redisson/issues/1625",
                "title": "Regression: DNS resolver failing to find valid DNS record",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The DNS resolver should find valid DNS records. The hostname I'm having trouble with worked in 3.5.0, it is failing in newer versions.</p>\n<p dir=\"auto\">I opened a ticket with Netty first thinking it was a problem with the resolver itself, but after trying different Netty versions, it appears to be a configuration issue with how Reddison is calling the resolver.</p>\n<p dir=\"auto\">See <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"356931743\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/8261\" data-hovercard-type=\"issue\" data-hovercard-url=\"/netty/netty/issues/8261/hovercard\" href=\"https://github.com/netty/netty/issues/8261\">netty/netty#8261</a></p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Exception thrown:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: io.netty.resolver.dns.DnsNameResolverContext$SearchDomainUnknownHostException: Search domain query failed. Original hostname: 'host.toplevel' failed to resolve 'host.toplevel.search.domain' after 7 queries \n\tat io.netty.resolver.dns.DnsNameResolverContext.finishResolve(DnsNameResolverContext.java:721)\n\tat io.netty.resolver.dns.DnsNameResolverContext.tryToFinishResolve(DnsNameResolverContext.java:663)\n\tat io.netty.resolver.dns.DnsNameResolverContext.query(DnsNameResolverContext.java:306)\n\tat io.netty.resolver.dns.DnsNameResolverContext.query(DnsNameResolverContext.java:295)\n\tat io.netty.resolver.dns.DnsNameResolverContext.tryToFinishResolve(DnsNameResolverContext.java:636)\n\tat io.netty.resolver.dns.DnsNameResolverContext$3.operationComplete(DnsNameResolverContext.java:342)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:507)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:481)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:420)\n\tat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)\n\tat io.netty.resolver.dns.DnsQueryContext.setSuccess(DnsQueryContext.java:197)\n\tat io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:180)\n\tat io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:969)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1412)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:943)\n\tat io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:93)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.lang.Thread.run(Thread.java:748)\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: io.netty.resolver.dns.DnsNameResolverContext$SearchDomainUnknownHostException: Search domain query failed. Original hostname: 'host.toplevel' failed to resolve 'host.toplevel.search.domain' after 7 queries \n\tat io.netty.resolver.dns.DnsNameResolverContext.finishResolve(DnsNameResolverContext.java:721)\n\tat io.netty.resolver.dns.DnsNameResolverContext.tryToFinishResolve(DnsNameResolverContext.java:663)\n\tat io.netty.resolver.dns.DnsNameResolverContext.query(DnsNameResolverContext.java:306)\n\tat io.netty.resolver.dns.DnsNameResolverContext.query(DnsNameResolverContext.java:295)\n\tat io.netty.resolver.dns.DnsNameResolverContext.tryToFinishResolve(DnsNameResolverContext.java:636)\n\tat io.netty.resolver.dns.DnsNameResolverContext$3.operationComplete(DnsNameResolverContext.java:342)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:507)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:481)\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:420)\n\tat io.netty.util.concurrent.DefaultPromise.trySuccess(DefaultPromise.java:104)\n\tat io.netty.resolver.dns.DnsQueryContext.setSuccess(DnsQueryContext.java:197)\n\tat io.netty.resolver.dns.DnsQueryContext.finish(DnsQueryContext.java:180)\n\tat io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler.channelRead(DnsNameResolver.java:969)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1412)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:943)\n\tat io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe.read(AbstractNioMessageChannel.java:93)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580)\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497)\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:886)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.lang.Thread.run(Thread.java:748)\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ol dir=\"auto\">\n<li>Configure a top level domain <code class=\"notranslate\">someDomain</code> on a DNS server you own</li>\n<li>Configure a host under the new top level domain <code class=\"notranslate\">someHost.someDomain</code></li>\n<li>Configure multiple resolvers  on the DNS client machine that will run the Netty code. i.e. 8.8.8.8, 192.168.1.1, and 10.0.0.1 (I have 3 resolvers configured, each pointing to different DNS masters  - global DNS, local personal private network, company private network over a VPN)</li>\n<li>Configure the search domain to not match the top level domain, i.e. <code class=\"notranslate\">search.otherDomain</code> on the DNS client machine that will run the Netty code</li>\n<li>Configure redisson to connect to <code class=\"notranslate\">someHost.someDomain</code></li>\n<li>failure during configuration.</li>\n</ol>\n<h3 dir=\"auto\">Redis version</h3>\n<h3 dir=\"auto\">Redisson version</h3>\n<p dir=\"auto\">Trying to migrate from 3.5.0 to the latest version</p>\n<h3 dir=\"auto\">Redisson configuration</h3>",
                "resourcePath": "/redisson/redisson/issues/1625",
                "createdAt": "2018-09-06T16:01:51Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "bug"
                      }
                    },
                    {
                      "node": {
                        "name": "dns"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add support for the Partitioned attribute in cookies",
        "url": "https://github.com/netty/netty/pull/13769",
        "resourcePath": "/netty/netty/pull/13769",
        "createdAt": "2024-01-07T17:58:34Z",
        "number": 13769,
        "mergeCommit": {
          "oid": "6c883d620722c12e19561ce1a10b41fadfbd6a60",
          "message": "Add support for the Partitioned attribute in cookies (#13769)\n\nMotivation:\r\n\r\nNetty currently does not support the `Partitioned` attribute for\r\nresponse cookies.\r\nhttps://developers.google.com/privacy-sandbox/3pcd/chips\r\n\r\nModifications:\r\n\r\nSince adding new methods to the `Cookie` interface is\r\nbackwards-incompatible, the attribute has been solely added to the\r\n`DefaultCookie` class. Moreover, the `Partitioned` attribute is not\r\nincluded in the current `RFC6265`. `ServerCookieEncoder` and\r\n`ClientCookieDecoder` have been updated accordingly to process this\r\nvalue.\r\n\r\nResult:\r\n\r\nResponse cookies with the `Partitioned` attribute set can be read or\r\nwritten by Netty.\r\n\r\nFixes #13740\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/6c883d620722c12e19561ce1a10b41fadfbd6a60",
          "parents": {
            "nodes": [
              {
                "oid": "79371e1f1e36cc20e949c8576dc5cf3d3d1ed20a",
                "message": "Fix copy-paste mistake in LazyX509Certificate.getIssuerAlternativeNames() (#13797)\n\nMotivation:\r\n\r\nAt present, `LazyX509Certificate.getIssuerAlternativeNames()` returns\r\ncompletely incorrect values. I discovered this while working on a\r\nproject for my employer, HubSpot. We are planning to use this field to\r\nconvey some company-specific authentication information in our internal\r\nsystems. This bug is somewhat blocking our ability to read these values\r\ninside HBase servers, which use Netty for TLS support.\r\n\r\nModification:\r\n\r\n- Change the one-line implementation of this method from `return unwrap().getSubjectAlternativeNames();` to `return unwrap().getIssuerAlternativeNames();`\r\n- Add unit tests\r\n\r\nResult:\r\n\r\nGet the correct values from the certificate.\r\n\r\nFixes #13796. \r\n\r\n---------\r\n\r\nCo-authored-by: Charles Connell <cconnell@hubspot.com>\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/ClientCookieDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/CookieHeaderNames.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/DefaultCookie.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/cookie/ServerCookieEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/cookie/ClientCookieDecoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/cookie/ServerCookieEncoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85jaPhw2gAoYWQ3MGEzNjFiNzY2OTUxYzkyMTJhNzA5Yjk4MGFhNWI3ODBlOWU5OA",
                "url": "https://github.com/netty/netty/pull/13769/commits/ad70a361b766951c9212a709b980aa5b780e9e98"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13740,
                "url": "https://github.com/netty/netty/issues/13740",
                "title": "Partitioned attribute support in ResponseCookie class",
                "bodyHTML": "<p dir=\"auto\">Chrome is going to deprecate third party cookies in near future, and it is mentioned <a href=\"https://developers.google.com/privacy-sandbox/3pcd\" rel=\"nofollow\">here</a>.</p>\n<p dir=\"auto\">We have many integration/leading applications depends on cross site cookies; all those will not work if the third-party cookies are not allowed to use.</p>\n<p dir=\"auto\">There are some suggested ways to mitigate cross site issues which depend on cookies.</p>\n<p dir=\"auto\">Cookies having independent partitioned state (CHIPS) is one of the proposals(<a href=\"https://developer.chrome.com/docs/privacy-sandbox/chips/\" rel=\"nofollow\">https://developer.chrome.com/docs/privacy-sandbox/chips/</a>).</p>\n<p dir=\"auto\">For this, in ResponseCookie need a Boolean attribute called <strong>partitioned</strong> similar to secure field</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private final boolean partitioned;\n\n/**\n* Add the &quot;Partitioned&quot; attribute to the cookie.\n*/\nResponseCookieBuilder partitioned(boolean partitioned);\"><pre class=\"notranslate\"><code class=\"notranslate\">private final boolean partitioned;\n\n/**\n* Add the \"Partitioned\" attribute to the cookie.\n*/\nResponseCookieBuilder partitioned(boolean partitioned);\n</code></pre></div>\n<p dir=\"auto\">For testing purposes, we did try extending httpcookie and created custom cookie class but to add that cookie in exchange response, they are expecting only of type ResponseCookie<br>\nspring-web/src/main/java/org/springframework/http/server/reactive/ServerHttpResponse.java - getCookies() and addCookie()</p>\n<p dir=\"auto\">We do create the below request <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1949340366\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/31454\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/31454/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/31454\">spring-projects/spring-framework#31454</a></p>\n<p dir=\"auto\">Please do provide this support as early as possible, we want to test by disabling third party cookies from leading applications for impact analysis.</p>\n<p dir=\"auto\">Thanks in advance.</p>",
                "resourcePath": "/netty/netty/issues/13740",
                "createdAt": "2023-12-19T08:47:26Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Updated HTTP2 Reader to fix missing header state",
        "url": "https://github.com/netty/netty/pull/13789",
        "resourcePath": "/netty/netty/pull/13789",
        "createdAt": "2024-01-18T05:02:39Z",
        "number": 13789,
        "mergeCommit": {
          "oid": "b611fdebdf7787c214732991fb9142662f2583eb",
          "message": "Updated HTTP2 Reader to fix missing header state (#13789)\n\nMotivation:\r\nWhen a malformed request comes in where a stream error is thrown, data\r\nis still left on the reader and not properly cleaned. When a valid\r\nrequest comes in, it is not properly parsed because of the leftover data\r\nbeing included.\r\n\r\nModifications:\r\nUpdated DefaultHttp2Reader to clean up leftover data if these types of\r\nstream exceptions come in the wire.\r\n\r\nResult:\r\nAfter this change, data should be properly parsed after a malformed\r\nrequest\r\nFixes #13788",
          "commitUrl": "https://github.com/netty/netty/commit/b611fdebdf7787c214732991fb9142662f2583eb",
          "parents": {
            "nodes": [
              {
                "oid": "b215945cbd9a75b7b891e8fe980a6d6cc97aaad8",
                "message": "codec-http2: fix some frame validation errors (#13837)\n\nMotivation:\r\n\r\nSome of our HTTP/2 frame validations throw a stream error when they\r\nshould be throwing a connection error. This is particularly true for\r\nframes carrying a headers block because failure to process the block\r\nwill result in HPACK corruption.\r\n\r\nModifications:\r\n\r\n- elevate candidate stream errors to connection errors\r\n- add some tests\r\n\r\nResult:\r\n\r\nA more correct HTTP/2 codec.\r\n\r\nRelates to https://github.com/netty/netty/pull/13789."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameReader.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2FrameReaderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85kYiCc2gAoYzYwYzZhYzQ1NWFhOGE4NmZjNGFlMmEwZjY2ZDhkZmI1NGNmZmVlYw",
                "url": "https://github.com/netty/netty/pull/13789/commits/c60c6ac455aa8a86fc4ae2a0f66d8dfb54cffeec"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13788,
                "url": "https://github.com/netty/netty/issues/13788",
                "title": "DefaultHttp2FrameReader does not reset after malformed request comes in",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">After a request comes in which causes a stream error, (such as a priority frame with an invalid stream dependency or with an invalid payload length) the following frame must be treated as a new frame.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">After such a malformed request comes in, the following frame after the malformed is parsed with leftover data from the previous request.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ol dir=\"auto\">\n<li>Start an HTTP2 request.</li>\n<li>Send a priority request on a stream with an invalid payload length</li>\n<li>After failed stream send a valid stream request to the HTTP2 session</li>\n<li>HTTP2 request should work but doesn't</li>\n</ol>\n<p dir=\"auto\">As a side effect of this, I see a Go Away being sent by the server with the following message <code class=\"notranslate\">Frame length: 16711680 exceeds maximum: 16384</code></p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">I expanded the HTTP2 client example code for a reproducer. Tested against the HTTP2 Server example <a class=\"commit-link\" href=\"https://github.com/netty/netty/compare/4.1...isaacrivriv:netty:test-bad-priority-frame\"><tt>4.1...isaacrivriv:netty:test-bad-priority-frame</tt></a></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.105</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"17.0.7\" 2023-04-18<br>\nIBM Semeru Runtime Open Edition 17.0.7.0 (build 17.0.7+7)<br>\nEclipse OpenJ9 VM 17.0.7.0 (build openj9-0.38.0, JRE 17 Mac OS X amd64-64-Bit Compressed References 20230418_450 (JIT enabled, AOT enabled)<br>\nOpenJ9   - d57d05932<br>\nOMR      - 855813495<br>\nJCL      - 9d7a231edbc based on jdk-17.0.7+7)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Darwin Kernel Version 23.0.0</p>",
                "resourcePath": "/netty/netty/issues/13788",
                "createdAt": "2024-01-17T20:50:10Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix copy-paste mistake in LazyX509Certificate.getIssuerAlternativeNames()",
        "url": "https://github.com/netty/netty/pull/13797",
        "resourcePath": "/netty/netty/pull/13797",
        "createdAt": "2024-01-21T19:56:27Z",
        "number": 13797,
        "mergeCommit": {
          "oid": "79371e1f1e36cc20e949c8576dc5cf3d3d1ed20a",
          "message": "Fix copy-paste mistake in LazyX509Certificate.getIssuerAlternativeNames() (#13797)\n\nMotivation:\r\n\r\nAt present, `LazyX509Certificate.getIssuerAlternativeNames()` returns\r\ncompletely incorrect values. I discovered this while working on a\r\nproject for my employer, HubSpot. We are planning to use this field to\r\nconvey some company-specific authentication information in our internal\r\nsystems. This bug is somewhat blocking our ability to read these values\r\ninside HBase servers, which use Netty for TLS support.\r\n\r\nModification:\r\n\r\n- Change the one-line implementation of this method from `return unwrap().getSubjectAlternativeNames();` to `return unwrap().getIssuerAlternativeNames();`\r\n- Add unit tests\r\n\r\nResult:\r\n\r\nGet the correct values from the certificate.\r\n\r\nFixes #13796. \r\n\r\n---------\r\n\r\nCo-authored-by: Charles Connell <cconnell@hubspot.com>\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/79371e1f1e36cc20e949c8576dc5cf3d3d1ed20a",
          "parents": {
            "nodes": [
              {
                "oid": "b52acfec94bb32af91b4f6e455ed0f3ca4b67c87",
                "message": "netty-dev-tools use wrong parent pom (#13798)\n\nMotivation:\r\n\r\nnetty-dev-tools used the wrong parent pom and so did not include all the\r\nlicense infos etc.\r\n\r\nModifications:\r\n\r\nDeclare the correct parent pom\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13787"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/util/LazyX509Certificate.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/java/io/netty/handler/ssl/util/LazyJavaxX509CertificateTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "handler/src/test/java/io/netty/handler/ssl/util/LazyX509CertificateTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85kqO0G2gAoNmVjNGE1NDhlNjhkNjBjMjYxNWQwN2IyZmU2N2FhYTlkOTlhYmM3Nw",
                "url": "https://github.com/netty/netty/pull/13797/commits/6ec4a548e68d60c2615d07b2fe67aaa9d99abc77"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13796,
                "url": "https://github.com/netty/netty/issues/13796",
                "title": "LazyX509Certificate.getIssuerAlternativeNames() returns incorrect values",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">It's expected that <code class=\"notranslate\">LazyX509Certificate.getIssuerAlternativeNames()</code> will return the issuer alternative names of the wrapped <code class=\"notranslate\">X509Certificate</code></p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Instead, it returns the subject alternative names of the wrapped <code class=\"notranslate\">X509Certificate</code>. This appears to be a copy/paste mistake.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Create a certificate in some manner (say with <code class=\"notranslate\">openssl</code>). Give it an issuer alternative name but not a subject alternative name. Feed the byte array representation of that certificate into the <code class=\"notranslate\">LazyX509Certificate</code> constructor. Call <code class=\"notranslate\">getIssuerAlternativeNames()</code> on your <code class=\"notranslate\">LazyX509Certificate</code>, and you'll get <code class=\"notranslate\">null</code> back.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package netty.test;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\nimport io.netty.handler.ssl.util.LazyX509Certificate;\nimport java.io.ByteArrayInputStream;\nimport java.nio.charset.StandardCharsets;\nimport java.security.cert.CertificateFactory;\nimport java.security.cert.X509Certificate;\nimport org.junit.Test;\n\npublic class NettyBugTest {\n\n  private static final String CERTIFICATE =\n    &quot;-----BEGIN CERTIFICATE-----\\n&quot; +\n      &quot;MIIEITCCAwmgAwIBAgIUaLL8vLOhWLCLXVHEJqXJhfmsTB8wDQYJKoZIhvcNAQEL\\n&quot; +\n      &quot;BQAwgawxCzAJBgNVBAYTAlVTMRYwFAYDVQQIDA1NYXNzYWNodXNldHRzMRIwEAYD\\n&quot; +\n      &quot;VQQHDAlDYW1icmlkZ2UxGDAWBgNVBAoMD25ldHR5IHRlc3QgY2FzZTEYMBYGA1UE\\n&quot; +\n      &quot;CwwPbmV0dHkgdGVzdCBjYXNlMRgwFgYDVQQDDA9uZXR0eSB0ZXN0IGNhc2UxIzAh\\n&quot; +\n      &quot;BgkqhkiG9w0BCQEWFGNjb25uZWxsQGh1YnNwb3QuY29tMB4XDTI0MDEyMTE5MzMy\\n&quot; +\n      &quot;MFoXDTI1MDEyMDE5MzMyMFowgawxCzAJBgNVBAYTAlVTMRYwFAYDVQQIDA1NYXNz\\n&quot; +\n      &quot;YWNodXNldHRzMRIwEAYDVQQHDAlDYW1icmlkZ2UxGDAWBgNVBAoMD25ldHR5IHRl\\n&quot; +\n      &quot;c3QgY2FzZTEYMBYGA1UECwwPbmV0dHkgdGVzdCBjYXNlMRgwFgYDVQQDDA9uZXR0\\n&quot; +\n      &quot;eSB0ZXN0IGNhc2UxIzAhBgkqhkiG9w0BCQEWFGNjb25uZWxsQGh1YnNwb3QuY29t\\n&quot; +\n      &quot;MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy+qzEZpQMjVdLj0siUcG\\n&quot; +\n      &quot;y8LIHOW4S+tgHIKFkF865qWq6FVGbROe2Z0f5W6yIamZkdxzptT0iv+8S5okNNeW\\n&quot; +\n      &quot;2NbsN/HNJIRtWfxku1Jh1gBqSkAYIjXyq7+20hIaJTzzxqike9M/Lc14EGb33Ja/\\n&quot; +\n      &quot;kDPRV3UtiM3Ntf3eALXKbrWptkbgQngCaTgtfg8IkMAEpP270wZ9fW0lDHv3NPPt\\n&quot; +\n      &quot;Zt0QSJzWSqWfu+l4ayvcUQYyNJesx9YmTHSJu69lvT4QApoX8FEiHfNCJ28R50CS\\n&quot; +\n      &quot;aIgOpCWUvkH7rqx0p9q393uJRS/S6RlLbU30xUN1fNrVmP/XAapfy+R0PSgiUi8o\\n&quot; +\n      &quot;EQIDAQABozkwNzAWBgNVHRIEDzANggt3d3cuZm9vLmNvbTAdBgNVHQ4EFgQUl4FD\\n&quot; +\n      &quot;Y8jJ/JHJR68YqPsGUjUJuwgwDQYJKoZIhvcNAQELBQADggEBADVzivYz2M0qsWUc\\n&quot; +\n      &quot;jXjCHymwTIr+7ud10um53FbYEAfKWsIY8Pp35fKpFzUwc5wVdCnLU86K/YMKRzNB\\n&quot; +\n      &quot;zL2Auow3PJFRvXecOv7dWxNlNneLDcwbVrdNRu6nQXmZUgyz0oUKuJbF+JGtI+7W\\n&quot; +\n      &quot;kRw7yhBfki+UCSQWeDqvaWzgmA4Us0N8NFq3euAs4xFbMMPMQWrT9Z7DGchCeRiB\\n&quot; +\n      &quot;dkQBvh88vbR3v2Saq14W4Wt5rj2++vXWGQSeAQL6nGbOwc3ohW6isNNV0eGQQTmS\\n&quot; +\n      &quot;khS2d/JDZq2XL5RGexf3CA6YYzWiTr9YZHNjuobvLH7mVnA2c8n6Zty/UhfnuK1x\\n&quot; +\n      &quot;JbkleFk=\\n&quot; +\n      &quot;-----END CERTIFICATE-----&quot;;\n\n  @Test\n  public void testLazyX509Certificate() throws Exception {\n    CertificateFactory certificateFactory = CertificateFactory.getInstance(&quot;X.509&quot;);\n    X509Certificate x509Certificate =\n      (X509Certificate) certificateFactory.generateCertificate(\n        new ByteArrayInputStream(CERTIFICATE.getBytes(StandardCharsets.UTF_8))\n      );\n    LazyX509Certificate lazyX509Certificate = new LazyX509Certificate(CERTIFICATE.getBytes(StandardCharsets.UTF_8));\n\n    assertThat(x509Certificate.getIssuerAlternativeNames()).isNotNull();\n    assertThat(x509Certificate.getIssuerAlternativeNames().toString()).contains(&quot;www.foo.com&quot;);\n\n    assertThat(lazyX509Certificate.getIssuerAlternativeNames()).isNotNull();\n    assertThat(lazyX509Certificate.getIssuerAlternativeNames().toString()).contains(&quot;www.foo.com&quot;);\n  }\n\n}\n\"><pre class=\"notranslate\"><code class=\"notranslate\">package netty.test;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\nimport io.netty.handler.ssl.util.LazyX509Certificate;\nimport java.io.ByteArrayInputStream;\nimport java.nio.charset.StandardCharsets;\nimport java.security.cert.CertificateFactory;\nimport java.security.cert.X509Certificate;\nimport org.junit.Test;\n\npublic class NettyBugTest {\n\n  private static final String CERTIFICATE =\n    \"-----BEGIN CERTIFICATE-----\\n\" +\n      \"MIIEITCCAwmgAwIBAgIUaLL8vLOhWLCLXVHEJqXJhfmsTB8wDQYJKoZIhvcNAQEL\\n\" +\n      \"BQAwgawxCzAJBgNVBAYTAlVTMRYwFAYDVQQIDA1NYXNzYWNodXNldHRzMRIwEAYD\\n\" +\n      \"VQQHDAlDYW1icmlkZ2UxGDAWBgNVBAoMD25ldHR5IHRlc3QgY2FzZTEYMBYGA1UE\\n\" +\n      \"CwwPbmV0dHkgdGVzdCBjYXNlMRgwFgYDVQQDDA9uZXR0eSB0ZXN0IGNhc2UxIzAh\\n\" +\n      \"BgkqhkiG9w0BCQEWFGNjb25uZWxsQGh1YnNwb3QuY29tMB4XDTI0MDEyMTE5MzMy\\n\" +\n      \"MFoXDTI1MDEyMDE5MzMyMFowgawxCzAJBgNVBAYTAlVTMRYwFAYDVQQIDA1NYXNz\\n\" +\n      \"YWNodXNldHRzMRIwEAYDVQQHDAlDYW1icmlkZ2UxGDAWBgNVBAoMD25ldHR5IHRl\\n\" +\n      \"c3QgY2FzZTEYMBYGA1UECwwPbmV0dHkgdGVzdCBjYXNlMRgwFgYDVQQDDA9uZXR0\\n\" +\n      \"eSB0ZXN0IGNhc2UxIzAhBgkqhkiG9w0BCQEWFGNjb25uZWxsQGh1YnNwb3QuY29t\\n\" +\n      \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy+qzEZpQMjVdLj0siUcG\\n\" +\n      \"y8LIHOW4S+tgHIKFkF865qWq6FVGbROe2Z0f5W6yIamZkdxzptT0iv+8S5okNNeW\\n\" +\n      \"2NbsN/HNJIRtWfxku1Jh1gBqSkAYIjXyq7+20hIaJTzzxqike9M/Lc14EGb33Ja/\\n\" +\n      \"kDPRV3UtiM3Ntf3eALXKbrWptkbgQngCaTgtfg8IkMAEpP270wZ9fW0lDHv3NPPt\\n\" +\n      \"Zt0QSJzWSqWfu+l4ayvcUQYyNJesx9YmTHSJu69lvT4QApoX8FEiHfNCJ28R50CS\\n\" +\n      \"aIgOpCWUvkH7rqx0p9q393uJRS/S6RlLbU30xUN1fNrVmP/XAapfy+R0PSgiUi8o\\n\" +\n      \"EQIDAQABozkwNzAWBgNVHRIEDzANggt3d3cuZm9vLmNvbTAdBgNVHQ4EFgQUl4FD\\n\" +\n      \"Y8jJ/JHJR68YqPsGUjUJuwgwDQYJKoZIhvcNAQELBQADggEBADVzivYz2M0qsWUc\\n\" +\n      \"jXjCHymwTIr+7ud10um53FbYEAfKWsIY8Pp35fKpFzUwc5wVdCnLU86K/YMKRzNB\\n\" +\n      \"zL2Auow3PJFRvXecOv7dWxNlNneLDcwbVrdNRu6nQXmZUgyz0oUKuJbF+JGtI+7W\\n\" +\n      \"kRw7yhBfki+UCSQWeDqvaWzgmA4Us0N8NFq3euAs4xFbMMPMQWrT9Z7DGchCeRiB\\n\" +\n      \"dkQBvh88vbR3v2Saq14W4Wt5rj2++vXWGQSeAQL6nGbOwc3ohW6isNNV0eGQQTmS\\n\" +\n      \"khS2d/JDZq2XL5RGexf3CA6YYzWiTr9YZHNjuobvLH7mVnA2c8n6Zty/UhfnuK1x\\n\" +\n      \"JbkleFk=\\n\" +\n      \"-----END CERTIFICATE-----\";\n\n  @Test\n  public void testLazyX509Certificate() throws Exception {\n    CertificateFactory certificateFactory = CertificateFactory.getInstance(\"X.509\");\n    X509Certificate x509Certificate =\n      (X509Certificate) certificateFactory.generateCertificate(\n        new ByteArrayInputStream(CERTIFICATE.getBytes(StandardCharsets.UTF_8))\n      );\n    LazyX509Certificate lazyX509Certificate = new LazyX509Certificate(CERTIFICATE.getBytes(StandardCharsets.UTF_8));\n\n    assertThat(x509Certificate.getIssuerAlternativeNames()).isNotNull();\n    assertThat(x509Certificate.getIssuerAlternativeNames().toString()).contains(\"www.foo.com\");\n\n    assertThat(lazyX509Certificate.getIssuerAlternativeNames()).isNotNull();\n    assertThat(lazyX509Certificate.getIssuerAlternativeNames().toString()).contains(\"www.foo.com\");\n  }\n\n}\n\n</code></pre></div>\n<p dir=\"auto\">In the above unit test class written with JUnit and AssertJ, the final two assertions fail.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">Discovered in <code class=\"notranslate\">4.1.97.Final</code>. Checked code of <code class=\"notranslate\">main</code> and <code class=\"notranslate\">4.1</code> branches and I see the bug is still present there.</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Discovered in <code class=\"notranslate\">Temurin-17.0.9+9</code>, although the bug would present in any Java version.</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Discovered in <code class=\"notranslate\">Linux &lt;hostname redacted&gt; 6.1.66-&lt;kernel patch redacted&gt;.x86_64 #1 SMP PREEMPT_DYNAMIC Mon Dec 18 16:29:07 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</code>, although the bug would present in any OS version.</p>",
                "resourcePath": "/netty/netty/issues/13796",
                "createdAt": "2024-01-21T19:39:48Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "netty-dev-tools use wrong parent pom",
        "url": "https://github.com/netty/netty/pull/13798",
        "resourcePath": "/netty/netty/pull/13798",
        "createdAt": "2024-01-21T22:45:05Z",
        "number": 13798,
        "mergeCommit": {
          "oid": "b52acfec94bb32af91b4f6e455ed0f3ca4b67c87",
          "message": "netty-dev-tools use wrong parent pom (#13798)\n\nMotivation:\r\n\r\nnetty-dev-tools used the wrong parent pom and so did not include all the\r\nlicense infos etc.\r\n\r\nModifications:\r\n\r\nDeclare the correct parent pom\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13787",
          "commitUrl": "https://github.com/netty/netty/commit/b52acfec94bb32af91b4f6e455ed0f3ca4b67c87",
          "parents": {
            "nodes": [
              {
                "oid": "ddf1beba054f2634cc3269efa751ca0da98d934e",
                "message": "[maven-release-plugin] prepare for next development iteration"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "dev-tools/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85kqdQF2gAoYjU0ZjExZmVhMTQzNmNjZTM5YWJjZDNhMDBiMjMxYTdhOTRjZWIxZQ",
                "url": "https://github.com/netty/netty/pull/13798/commits/b54f11fea1436cce39abcd3a00b231a7a94ceb1e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13787,
                "url": "https://github.com/netty/netty/issues/13787",
                "title": "netty-dev-tools - No license in pom",
                "bodyHTML": "<p dir=\"auto\">The poms for the <code class=\"notranslate\">netty-parent</code> and <code class=\"notranslate\">netty-bom</code> include the <code class=\"notranslate\">license</code> field, and (almost) every other module uses <code class=\"notranslate\">netty-parent</code> as its parent, and so the <code class=\"notranslate\">license</code> metadata is inherited in the effective pom.</p>\n<p dir=\"auto\">But, <code class=\"notranslate\">netty-dev-tools</code> uses <code class=\"notranslate\">oss-parent</code> as its parent directly, and does <em>not</em> declare its license in the pom. This can cause ambiguity in the licensing of the published Maven artifact..</p>\n<p dir=\"auto\">It would be nice to paste the <code class=\"notranslate\">license</code> element into <code class=\"notranslate\">netty-dev-tools/pom.xml</code>.</p>",
                "resourcePath": "/netty/netty/issues/13787",
                "createdAt": "2024-01-17T17:11:03Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "HTTP2: lastStreamCreated() does return the wrong value when all strea\u2026",
        "url": "https://github.com/netty/netty/pull/13807",
        "resourcePath": "/netty/netty/pull/13807",
        "createdAt": "2024-01-25T03:10:37Z",
        "number": 13807,
        "mergeCommit": {
          "oid": "f087300aea1d1422f7f02b8fe9a010957e77912b",
          "message": "HTTP2: lastStreamCreated() does return the wrong value when all strea\u2026 (#13807)\n\n\u2026m ids were used\r\n\r\nMotivation:\r\n\r\nWe did not correctly calculate the value returned by\r\nDefaultHttp2Connection.DefaultEndpoint.lastStreamCreated() and so\r\nreturned 0 when all stream ids were used. This did lead to also return\r\nan result when checking if a stream might have been existed. As some\r\nencoders / decoders also use these methods to determine if a stream\r\nexisted or not it also resulted in http2 errors.\r\n\r\nModifications:\r\n\r\n- Correctly implement lastStreamCreated()\r\n- Add test cases.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13805",
          "commitUrl": "https://github.com/netty/netty/commit/f087300aea1d1422f7f02b8fe9a010957e77912b",
          "parents": {
            "nodes": [
              {
                "oid": "431594a1dcb20276d8d54b4a3df77860da021e0b",
                "message": "DefaultPriorityQueue fuzz testing of removal (#13806)\n\nMotivation:\r\n\r\nDefaultPriorityQueue testing should be improved\r\n\r\nMotivation:\r\nAdd more test cases for DefaultPriorityQueue removal cases. Adjust the\r\nexisting removal test case to cover more conditional branches.\r\n\r\nResult:\r\n\r\nBetter testing of DefaultPriorityQueue"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2Connection.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2ConnectionTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/StreamBufferingEncoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85lBFw-2gAoNDZmNDE0ODc1NGMzY2M1MzgzOWJhYzY2Y2I5Yjk1MjBiNWIzNmVjNg",
                "url": "https://github.com/netty/netty/pull/13807/commits/46f4148754c3cc53839bac66cb9b9520b5b36ec6"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13805,
                "url": "https://github.com/netty/netty/issues/13805",
                "title": "DefaultHttp2Connection.DefaultEndpoint#lastStreamCreated return 0 when the actual stream id is Integer.MAX_VALUE",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">when stream id is Integer.MAX_VALUE, <code class=\"notranslate\">DefaultHttp2Connection.DefaultEndpoint#lastStreamCreated</code> is expected to return  Integer.MAX_VALUE<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/7601244/299259585-3628e299-ace4-43a7-bc72-b3ca51e557ff.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5MTk4OTIsIm5iZiI6MTcxNDkxOTU5MiwicGF0aCI6Ii83NjAxMjQ0LzI5OTI1OTU4NS0zNjI4ZTI5OS1hY2U0LTQzYTctYmM3Mi1iM2NhNTFlNTU3ZmYucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMTQzMzEyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9Nzc2ODg5NDZmZDI2MjA3MTQ3NzhiNjU0ZTAyY2NkNDFiNDAxYTE4ZThmMmY2NDBkOTNkODUzMTBmMTI1ZGViNSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.FUELXcT676DZmGSiGFKiRKP3zL7FGuVF2Bpxr-gVX0s\"><img width=\"1003\" alt=\"image\" src=\"https://private-user-images.githubusercontent.com/7601244/299259585-3628e299-ace4-43a7-bc72-b3ca51e557ff.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5MTk4OTIsIm5iZiI6MTcxNDkxOTU5MiwicGF0aCI6Ii83NjAxMjQ0LzI5OTI1OTU4NS0zNjI4ZTI5OS1hY2U0LTQzYTctYmM3Mi1iM2NhNTFlNTU3ZmYucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMTQzMzEyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9Nzc2ODg5NDZmZDI2MjA3MTQ3NzhiNjU0ZTAyY2NkNDFiNDAxYTE4ZThmMmY2NDBkOTNkODUzMTBmMTI1ZGViNSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.FUELXcT676DZmGSiGFKiRKP3zL7FGuVF2Bpxr-gVX0s\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<ol dir=\"auto\">\n<li><code class=\"notranslate\">DefaultHttp2Connection.DefaultEndpoint#lastStreamCreated</code> return 0</li>\n<li><code class=\"notranslate\">io.netty.handler.codec.http2.StreamBufferingEncoder#isExistingStream</code> return false</li>\n<li>StreamBufferingEncoder write data frame failed</li>\n</ol>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/7601244/299269522-a376e976-26c5-4b49-a4cd-3bd86ca6dde2.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5MTk4OTIsIm5iZiI6MTcxNDkxOTU5MiwicGF0aCI6Ii83NjAxMjQ0LzI5OTI2OTUyMi1hMzc2ZTk3Ni0yNmM1LTRiNDktYTRjZC0zYmQ4NmNhNmRkZTIucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMTQzMzEyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZGUyYzIwNGJlZTdhZjg3MDM4OWI5OTk4MTA4Y2QzNzg3MjdjZDY1Y2M4YTQ5YmJjM2I5ODg5ZjNhZDBjN2E5MCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.pSdGwRCw9-4vT0k4t3AIJJxp40wn7DgkdUn4ljRSsZI\"><img width=\"967\" alt=\"image\" src=\"https://private-user-images.githubusercontent.com/7601244/299269522-a376e976-26c5-4b49-a4cd-3bd86ca6dde2.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5MTk4OTIsIm5iZiI6MTcxNDkxOTU5MiwicGF0aCI6Ii83NjAxMjQ0LzI5OTI2OTUyMi1hMzc2ZTk3Ni0yNmM1LTRiNDktYTRjZC0zYmQ4NmNhNmRkZTIucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMTQzMzEyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZGUyYzIwNGJlZTdhZjg3MDM4OWI5OTk4MTA4Y2QzNzg3MjdjZDY1Y2M4YTQ5YmJjM2I5ODg5ZjNhZDBjN2E5MCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.pSdGwRCw9-4vT0k4t3AIJJxp40wn7DgkdUn4ljRSsZI\" style=\"max-width: 100%;\"></a>\n<ol start=\"4\" dir=\"auto\">\n<li>the further problem is that grpc-java does not handle this write data failure in  <a href=\"https://github.com/grpc/grpc-java/blob/master/netty/src/main/java/io/grpc/netty/NettyClientStream.java#L188\">NettyClientStream</a><br>\n.this result to the grpc client thread hangs forever is we use grpc blocking stub</li>\n</ol>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">add the following test case to <code class=\"notranslate\">io.netty.handler.codec.http2.StreamBufferingEncoderTest</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Test\n    public void testExhaustedStreamId() throws Http2Exception {\n        int nextStreamId = Integer.MAX_VALUE - 2;\n        testStreamId(nextStreamId);\n        nextStreamId = connection.local().incrementAndGetNextStreamId();\n        testStreamId(nextStreamId);\n    }\n\n    private void testStreamId(int nextStreamId) throws Http2Exception {\n        connection.local().createStream(nextStreamId, false);\n        ByteBuf data = data();\n        ChannelFuture channelFuture = encoder.writeData(ctx, nextStreamId, data, 0, false, newPromise());\n        if (channelFuture.cause() != null) {\n            channelFuture.cause().printStackTrace();\n        }\n        assertTrue(channelFuture.cause() == null);\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    @Test\n    public void testExhaustedStreamId() throws Http2Exception {\n        int nextStreamId = Integer.MAX_VALUE - 2;\n        testStreamId(nextStreamId);\n        nextStreamId = connection.local().incrementAndGetNextStreamId();\n        testStreamId(nextStreamId);\n    }\n\n    private void testStreamId(int nextStreamId) throws Http2Exception {\n        connection.local().createStream(nextStreamId, false);\n        ByteBuf data = data();\n        ChannelFuture channelFuture = encoder.writeData(ctx, nextStreamId, data, 0, false, newPromise());\n        if (channelFuture.cause() != null) {\n            channelFuture.cause().printStackTrace();\n        }\n        assertTrue(channelFuture.cause() == null);\n    }\n</code></pre></div>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/7601244/299268259-26e5b344-4341-4b93-a923-279a5be82148.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5MTk4OTIsIm5iZiI6MTcxNDkxOTU5MiwicGF0aCI6Ii83NjAxMjQ0LzI5OTI2ODI1OS0yNmU1YjM0NC00MzQxLTRiOTMtYTkyMy0yNzlhNWJlODIxNDgucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMTQzMzEyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9OTVjOTA2MTFhMTk1YTJjOTI5YTNmZTg4MWJmMjViZWZhY2ZlZGViMGM2ZWZjYmM0NjUwYjQ5ZGFmN2E1OWE1NCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.nfQMnq8jtJzBsB8L93GCaXPbFYI16TrPh8Tq-XUvygg\"><img width=\"1119\" alt=\"image\" src=\"https://private-user-images.githubusercontent.com/7601244/299268259-26e5b344-4341-4b93-a923-279a5be82148.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5MTk4OTIsIm5iZiI6MTcxNDkxOTU5MiwicGF0aCI6Ii83NjAxMjQ0LzI5OTI2ODI1OS0yNmU1YjM0NC00MzQxLTRiOTMtYTkyMy0yNzlhNWJlODIxNDgucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMTQzMzEyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9OTVjOTA2MTFhMTk1YTJjOTI5YTNmZTg4MWJmMjViZWZhY2ZlZGViMGM2ZWZjYmM0NjUwYjQ5ZGFmN2E1OWE1NCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.nfQMnq8jtJzBsB8L93GCaXPbFYI16TrPh8Tq-XUvygg\" style=\"max-width: 100%;\"></a>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/7601244/299260818-9d65c584-de09-4c4d-aaf8-9df6ba20251d.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5MTk4OTIsIm5iZiI6MTcxNDkxOTU5MiwicGF0aCI6Ii83NjAxMjQ0LzI5OTI2MDgxOC05ZDY1YzU4NC1kZTA5LTRjNGQtYWFmOC05ZGY2YmEyMDI1MWQucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMTQzMzEyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZGIzNDE5NzE5MjQ4NWUwMDFlZGEyMjkyMTk4YzAyN2EwYTU2NDQxNzViYjQyOTk5NDBkMTBlOWVlNjY5NzA2YiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.GN2Yj-pfRw2GztLJYY5G_bW_QZxRbnxIyt9MUWOhHsU\"><img width=\"1128\" alt=\"image\" src=\"https://private-user-images.githubusercontent.com/7601244/299260818-9d65c584-de09-4c4d-aaf8-9df6ba20251d.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5MTk4OTIsIm5iZiI6MTcxNDkxOTU5MiwicGF0aCI6Ii83NjAxMjQ0LzI5OTI2MDgxOC05ZDY1YzU4NC1kZTA5LTRjNGQtYWFmOC05ZGY2YmEyMDI1MWQucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMTQzMzEyWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZGIzNDE5NzE5MjQ4NWUwMDFlZGEyMjkyMTk4YzAyN2EwYTU2NDQxNzViYjQyOTk5NDBkMTBlOWVlNjY5NzA2YiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.GN2Yj-pfRw2GztLJYY5G_bW_QZxRbnxIyt9MUWOhHsU\" style=\"max-width: 100%;\"></a>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">any support http2</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">1.8</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/13805",
                "createdAt": "2024-01-24T09:51:29Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "The problem of low efficiency and multiple cycles may occur in the TimeWheel Algorithm #13166",
        "url": "https://github.com/netty/netty/pull/13811",
        "resourcePath": "/netty/netty/pull/13811",
        "createdAt": "2024-01-26T15:43:58Z",
        "number": 13811,
        "mergeCommit": {
          "oid": "c7c295a3bba8d76ece225211c1862c9741bc71c2",
          "message": "The problem of low efficiency and multiple cycles may occur in the TimeWheel Algorithm #13166 (#13811)\n\nUse JCTools' roundToPowerOfTwo (includes range check) instead of\r\nhandcrafted power of to method.\r\n\r\nMotivation:\r\n\r\nHandcrafted solution might be inefficient\r\n\r\nModification:\r\n\r\nUses JCTools' version that includes the range check and it's more\r\nefficient as it supports `@IntrinsicCandidate`\r\n\r\nResult:\r\n\r\nFixes #13166",
          "commitUrl": "https://github.com/netty/netty/commit/c7c295a3bba8d76ece225211c1862c9741bc71c2",
          "parents": {
            "nodes": [
              {
                "oid": "4d2f074ba4600bc23c9fa2fdb09d89bb42da19af",
                "message": "HTTP2: Update local window should not fail queued frames (#13812)\n\nMotivation:\r\n\r\nWhen new stream frames arrive, they can be queued in\r\n`AbstractHttp2StreamChannel.inboundBuffer` if the stream channel doesn't\r\nhave demand. When `stream.read()` is invoked, we first execute\r\n`updateLocalWindowIfNeeded()`. For details, see #9400. However, it may\r\nhappen that the parent channel is already closed by that time. As a\r\nresult, the write fails and an exception will be propagated through the\r\nstream pipeline without allowing users to read frames that were already\r\nreceived.\r\n\r\nModifications:\r\n\r\nTaking into account the need to run `updateLocalWindowIfNeeded()` before\r\n`doBeginRead()` (described in #9400), add a check for\r\n`updateLocalWindowIfNeeded()` to write only if the parent context is not\r\nremoved.\r\n\r\nResult:\r\n\r\nUsers don't lose queued frames that were received before the parent\r\nchannel was closed."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/io/netty/util/HashedWheelTimer.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85lK75K2gAoMmRhZWZkOTI2M2Q4ZjE0ZDk2MmI1MjE5MDY3NmNlZGI0NTBjYWY4Yw",
                "url": "https://github.com/netty/netty/pull/13811/commits/2daefd9263d8f14d962b52190676cedb450caf8c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13166,
                "url": "https://github.com/netty/netty/issues/13166",
                "title": "The problem of low efficiency and multiple cycles may occur in the TimeWheel Algorithm",
                "bodyHTML": "<h3 dir=\"auto\">Your Question</h3>\n<p dir=\"auto\">In the <strong>HashedWheelTimer#normalizeTicksPerWheel</strong> method, when the value of <strong>ticksPerWheel</strong> is large, the method will cycle many times, the method execution time is unstable, and the efficiency may be low.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/91858554/215241258-f9ce7151-5185-46be-90ef-a42e57aa00a0.png\"><img src=\"https://user-images.githubusercontent.com/91858554/215241258-f9ce7151-5185-46be-90ef-a42e57aa00a0.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Your scenes</h3>\n<p dir=\"auto\">Use the relevant implementation of <strong>java8 HashMap</strong> to improve the algorithm.<br>\nThe <strong>HashedWheelTimer#normalizeTicksPerWheel</strong> method achieves the same purpose as the method in <strong>java8 HashMap</strong>. Both can get a number greater than or equal to ticksPerWheel (and this number is a power of 2) and return.</p>\n<h3 dir=\"auto\">Your advice</h3>\n<p dir=\"auto\">The following algorithms can be used to improve efficiency\uff1a<br>\nint n = ticksPerWheel - 1;<br>\nn |= n &gt;&gt;&gt; 1;<br>\nn |= n &gt;&gt;&gt; 2;<br>\nn |= n &gt;&gt;&gt; 4;<br>\nn |= n &gt;&gt;&gt; 8;<br>\nn |= n &gt;&gt;&gt; 16;<br>\n//Here 1073741824=2 ^ 30 to prevent overflow<br>\nreturn (n &lt; 0) ? 1 : (n &gt;= 1073741824) ? 1073741824 : n + 1;<br>\nBecause the type of the parameter <strong>ticksPerWheel</strong> passed in by the <strong>HashedWheelTimer#normalizeTicksPerWheel</strong> method is [int], a total of <strong>2 to the 31st power</strong> has been calculated\uff0816+8+4+2+1==31\uff09. Since the maximum value of int type is the 31st power of 2, the input int type parameters can be moved to. There is no conversion failure caused by insufficient shift times.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/13166",
                "createdAt": "2023-01-28T04:24:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "HTTP: HttpObjectDecoder must not use HTTPMessage once it is passed to\u2026",
        "url": "https://github.com/netty/netty/pull/13818",
        "resourcePath": "/netty/netty/pull/13818",
        "createdAt": "2024-01-30T13:50:23Z",
        "number": 13818,
        "mergeCommit": {
          "oid": "75a4334d6d46c86aa775525264baffaa82f540b6",
          "message": "HTTP: HttpObjectDecoder must not use HTTPMessage once it is passed to\u2026 (#13818)\n\n\u2026 the next handler in the ChannelPipeline.\r\n\r\nMotivation:\r\n\r\nWe continued to use the previous generated HttpMessage even after we\r\npassed it to the next handler. This is problematic as the HttpMessage\r\nmight be modified by other handlers.\r\n\r\nModifications:\r\n\r\n- Don't use the HttpMessage after it was passed to the next handler.\r\n- Add unit test\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13816",
          "commitUrl": "https://github.com/netty/netty/commit/75a4334d6d46c86aa775525264baffaa82f540b6",
          "parents": {
            "nodes": [
              {
                "oid": "2c8b3fb2dea00903843a6f78ce8990b06e0bff96",
                "message": "DnsNameResolver: Explicit pass channel and channelReadyFuture (#13815)\n\nMotivation:\r\n\r\nAt the moment how we sometimes pass the Channel and Future and sometimes\r\nnot. This is very confusing.\r\n\r\nModification:\r\n\r\n- Explicit pass the paramaets around\r\n\r\nResult:\r\n\r\nCleanup"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpObjectDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/HttpUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/HttpObjectAggregatorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85ldH0n2gAoZjJiNWUwZjQwMTY5YzM3ZTU0ZTI0ZGVhY2Y2MzhkMzI4ZDgzOGJlYQ",
                "url": "https://github.com/netty/netty/pull/13818/commits/f2b5e0f40169c37e54e24deacf638d328d838bea"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13816,
                "url": "https://github.com/netty/netty/issues/13816",
                "title": "HTTP/1.1 decoder + aggregator together don't identify partial responses",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">An HTTP/1.1 response using chunked transfer encoding should be terminated with an empty chunk. If the connection closes before receiving the terminating chunk then we should see some kind of failure condition so that the client can distinguish this case from a response that was received in full.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">A pipeline with a <code class=\"notranslate\">HttpResponseDecoder</code> and an <code class=\"notranslate\">HttpObjectAggregator</code> will translate this incomplete response into an apparently-successful <code class=\"notranslate\">FullHttpResponse</code> if the channel is closed afterwards:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"HTTP/1.1 200 OK\nTransfer-Encoding: chunked\n\n8\n12345678\"><pre class=\"notranslate\"><code class=\"notranslate\">HTTP/1.1 200 OK\nTransfer-Encoding: chunked\n\n8\n12345678\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">See <a class=\"commit-link\" href=\"https://github.com/netty/netty/compare/4.1...DaveCTurner:2024/01/30/incomplete-chunked-response-bug\"><tt>4.1...DaveCTurner:2024/01/30/incomplete-chunked-response-bug</tt></a>:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Test\npublic void testPrematureClosureWithChunkedEncodingAndAggregator() throws Exception {\n    EmbeddedChannel ch = new EmbeddedChannel(new HttpResponseDecoder(), new HttpObjectAggregator(1024));\n\n    // Write the partial response.\n    ch.writeInbound(Unpooled.copiedBuffer(\n            &quot;HTTP/1.1 200 OK\\r\\nTransfer-Encoding: chunked\\r\\n\\r\\n8\\r\\n12345678&quot;, CharsetUtil.US_ASCII));\n    ch.finish();\n\n    FullHttpResponse res = ch.readInbound();\n    assertThat(res.protocolVersion(), sameInstance(HttpVersion.HTTP_1_1));\n    assertThat(res.status(), is(HttpResponseStatus.OK));\n    assertTrue(res.decoderResult().isFailure());\n    res.release();\n\n    assertThat(ch.readInbound(), is(nullValue()));\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">testPrematureClosureWithChunkedEncodingAndAggregator</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">Exception</span> {\n    <span class=\"pl-smi\">EmbeddedChannel</span> <span class=\"pl-s1\">ch</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">EmbeddedChannel</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">HttpResponseDecoder</span>(), <span class=\"pl-k\">new</span> <span class=\"pl-smi\">HttpObjectAggregator</span>(<span class=\"pl-c1\">1024</span>));\n\n    <span class=\"pl-c\">// Write the partial response.</span>\n    <span class=\"pl-s1\">ch</span>.<span class=\"pl-en\">writeInbound</span>(<span class=\"pl-smi\">Unpooled</span>.<span class=\"pl-en\">copiedBuffer</span>(\n            <span class=\"pl-s\">\"HTTP/1.1 200 OK<span class=\"pl-cce\">\\r</span><span class=\"pl-cce\">\\n</span>Transfer-Encoding: chunked<span class=\"pl-cce\">\\r</span><span class=\"pl-cce\">\\n</span><span class=\"pl-cce\">\\r</span><span class=\"pl-cce\">\\n</span>8<span class=\"pl-cce\">\\r</span><span class=\"pl-cce\">\\n</span>12345678\"</span>, <span class=\"pl-smi\">CharsetUtil</span>.<span class=\"pl-c1\">US_ASCII</span>));\n    <span class=\"pl-s1\">ch</span>.<span class=\"pl-en\">finish</span>();\n\n    <span class=\"pl-smi\">FullHttpResponse</span> <span class=\"pl-s1\">res</span> = <span class=\"pl-s1\">ch</span>.<span class=\"pl-en\">readInbound</span>();\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">res</span>.<span class=\"pl-en\">protocolVersion</span>(), <span class=\"pl-en\">sameInstance</span>(<span class=\"pl-smi\">HttpVersion</span>.<span class=\"pl-c1\">HTTP_1_1</span>));\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">res</span>.<span class=\"pl-en\">status</span>(), <span class=\"pl-en\">is</span>(<span class=\"pl-smi\">HttpResponseStatus</span>.<span class=\"pl-c1\">OK</span>));\n    <span class=\"pl-en\">assertTrue</span>(<span class=\"pl-s1\">res</span>.<span class=\"pl-en\">decoderResult</span>().<span class=\"pl-en\">isFailure</span>());\n    <span class=\"pl-s1\">res</span>.<span class=\"pl-en\">release</span>();\n\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">ch</span>.<span class=\"pl-en\">readInbound</span>(), <span class=\"pl-en\">is</span>(<span class=\"pl-en\">nullValue</span>()));\n}</pre></div>\n<p dir=\"auto\">NB I'm not sure if <code class=\"notranslate\">res.decoderResult().isFailure()</code> is the right thing to check, but nor can I see another way to distinguish success from failure here.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.94 and 4.1 HEAD (and presumably everywhere in between)</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Tried with both of the following:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ ~/jvms/jdk-11.0.19+7/Contents/Home/bin/java -version\nopenjdk version &quot;11.0.19&quot; 2023-04-18\nOpenJDK Runtime Environment Temurin-11.0.19+7 (build 11.0.19+7)\nOpenJDK 64-Bit Server VM Temurin-11.0.19+7 (build 11.0.19+7, mixed mode)\n$ ~/jvms/jdk-17.0.7+7/Contents/Home/bin/java -version\nopenjdk version &quot;17.0.7&quot; 2023-04-18\nOpenJDK Runtime Environment Temurin-17.0.7+7 (build 17.0.7+7)\nOpenJDK 64-Bit Server VM Temurin-17.0.7+7 (build 17.0.7+7, mixed mode)\"><pre class=\"notranslate\"><code class=\"notranslate\">$ ~/jvms/jdk-11.0.19+7/Contents/Home/bin/java -version\nopenjdk version \"11.0.19\" 2023-04-18\nOpenJDK Runtime Environment Temurin-11.0.19+7 (build 11.0.19+7)\nOpenJDK 64-Bit Server VM Temurin-11.0.19+7 (build 11.0.19+7, mixed mode)\n$ ~/jvms/jdk-17.0.7+7/Contents/Home/bin/java -version\nopenjdk version \"17.0.7\" 2023-04-18\nOpenJDK Runtime Environment Temurin-17.0.7+7 (build 17.0.7+7)\nOpenJDK 64-Bit Server VM Temurin-17.0.7+7 (build 17.0.7+7, mixed mode)\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ uname -a\nDarwin Davids-MacBook-Pro.local 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:31:00 PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6020 arm64\"><pre class=\"notranslate\"><code class=\"notranslate\">$ uname -a\nDarwin Davids-MacBook-Pro.local 23.3.0 Darwin Kernel Version 23.3.0: Wed Dec 20 21:31:00 PST 2023; root:xnu-10002.81.5~7/RELEASE_ARM64_T6020 arm64\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/13816",
                "createdAt": "2024-01-30T08:59:54Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Snappy: Use unsigned short to handle 2 ^ 16 input size instead of 2 ^ 15",
        "url": "https://github.com/netty/netty/pull/13828",
        "resourcePath": "/netty/netty/pull/13828",
        "createdAt": "2024-02-08T14:12:04Z",
        "number": 13828,
        "mergeCommit": {
          "oid": "59a8bd0708583982769b43f7b36bd8ef77f4c761",
          "message": "Snappy: Use unsigned short to handle 2 ^ 16 input size instead of 2 ^ 15 (#13828)\n\nMotivation:\r\n\r\nSnappy compressor to be able to compress a much larger amount than 32767 bytes.\r\n\r\nModifications:\r\n\r\n- Avoid iterating to create correct size hash table (limited to\r\nMAX_HT_SIZE)\r\n- Configurable snappy frame size for the encoder\r\n- Added static factory method for SnappyEncoder supporting 2 ^ 16 size\r\nframe slices\r\n- Added integration test\r\n\r\nResult:\r\n\r\nFixes #13226",
          "commitUrl": "https://github.com/netty/netty/commit/59a8bd0708583982769b43f7b36bd8ef77f4c761",
          "parents": {
            "nodes": [
              {
                "oid": "14e00f50d13d112a1a7a8eaa693c2363adeee629",
                "message": "Fix compile error"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/Snappy.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/SnappyFrameEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "codec/src/test/java/io/netty/handler/codec/compression/SnappyJumboSizeIntegrationTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85mYcAa2gAoMDFmMjNmM2EwYTM2MDk5NzA5ODdkYzZmNTFjOTMwNjg1ZDJjMDVmZA",
                "url": "https://github.com/netty/netty/pull/13828/commits/01f23f3a0a3609970987dc6f51c930685d2c05fd"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13226,
                "url": "https://github.com/netty/netty/issues/13226",
                "title": "Snappy compressor can't compress more than 32767 bytes",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">I expect the Snappy compressor to be able to compress a much larger amount than 32767 bytes.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">An exception is thrown if the data is too large.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Try to compress a ByteBuf larger than 32767 bytes using the Snappy.encode method.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public static void main(String[] args) {\n    final byte[] random = new byte[40_000];\n    ThreadLocalRandom.current().nextBytes(random);\n    { // This should work\n        final Snappy snappy = new Snappy();\n        final ByteBuf data = Unpooled.wrappedBuffer(Arrays.copyOfRange(random, 0, 32767));\n        final ByteBuf out = Unpooled.buffer();\n        snappy.encode(data, out, data.readableBytes());\n    }\n    { // This does not work\n        final Snappy snappy = new Snappy();\n        final ByteBuf data = Unpooled.wrappedBuffer(random);\n        final ByteBuf out = Unpooled.buffer();\n        snappy.encode(data, out, data.readableBytes());\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) {\n    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">byte</span>[] <span class=\"pl-s1\">random</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">byte</span>[<span class=\"pl-c1\">40_000</span>];\n    <span class=\"pl-smi\">ThreadLocalRandom</span>.<span class=\"pl-en\">current</span>().<span class=\"pl-en\">nextBytes</span>(<span class=\"pl-s1\">random</span>);\n    { <span class=\"pl-c\">// This should work</span>\n        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Snappy</span> <span class=\"pl-s1\">snappy</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Snappy</span>();\n        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">data</span> = <span class=\"pl-smi\">Unpooled</span>.<span class=\"pl-en\">wrappedBuffer</span>(<span class=\"pl-smi\">Arrays</span>.<span class=\"pl-en\">copyOfRange</span>(<span class=\"pl-s1\">random</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">32767</span>));\n        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">out</span> = <span class=\"pl-smi\">Unpooled</span>.<span class=\"pl-en\">buffer</span>();\n        <span class=\"pl-s1\">snappy</span>.<span class=\"pl-en\">encode</span>(<span class=\"pl-s1\">data</span>, <span class=\"pl-s1\">out</span>, <span class=\"pl-s1\">data</span>.<span class=\"pl-en\">readableBytes</span>());\n    }\n    { <span class=\"pl-c\">// This does not work</span>\n        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Snappy</span> <span class=\"pl-s1\">snappy</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Snappy</span>();\n        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">data</span> = <span class=\"pl-smi\">Unpooled</span>.<span class=\"pl-en\">wrappedBuffer</span>(<span class=\"pl-s1\">random</span>);\n        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">out</span> = <span class=\"pl-smi\">Unpooled</span>.<span class=\"pl-en\">buffer</span>();\n        <span class=\"pl-s1\">snappy</span>.<span class=\"pl-en\">encode</span>(<span class=\"pl-s1\">data</span>, <span class=\"pl-s1\">out</span>, <span class=\"pl-s1\">data</span>.<span class=\"pl-en\">readableBytes</span>());\n    }\n}</pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.89</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">java version \"1.8.0_291\"<br>\nJava(TM) SE Runtime Environment (build 1.8.0_291-b10)<br>\nJava HotSpot(TM) 64-Bit Server VM (build 25.291-b10, mixed mode)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows 10 x64 22H2 19045.2546</p>",
                "resourcePath": "/netty/netty/issues/13226",
                "createdAt": "2023-02-16T21:01:25Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "SSL: Only wrap TrustManager if FIPS is not used",
        "url": "https://github.com/netty/netty/pull/13842",
        "resourcePath": "/netty/netty/pull/13842",
        "createdAt": "2024-02-14T11:45:48Z",
        "number": 13842,
        "mergeCommit": {
          "oid": "e8176601344b1c22e0f6c1dfc2861d7a92f54030",
          "message": "SSL: Only wrap TrustManager if FIPS is not used (#13842)\n\nMotivation:\r\n\r\nWe must only wrap the TrustManager if FIPS is not used as optherwise the\r\nJDK might throw an exception\r\n\r\nModifications:\r\n\r\n- Try to see if wrapping is successful and if not disable wrapping\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13840",
          "commitUrl": "https://github.com/netty/netty/commit/e8176601344b1c22e0f6c1dfc2861d7a92f54030",
          "parents": {
            "nodes": [
              {
                "oid": "303f2722f896a38468db403b13d9732b09f6d444",
                "message": "Add constructor to parse IP-CIDR String directly into `IpSubnetFilterRule` (#13791)\n\nMotivation:\r\nRight now, we have to pass an IP address and CIDR separately in\r\n`IpSubnetFilterRule`. This is good but another way to improve UX is by\r\nadding a constructor which will accept `String` containing IP address\r\nwith CIDR notation, e.g. `192.168.0.0/16` or `8.8.8.0/24`.\r\n\r\nModification:\r\nAdded constructor to parse IP CIDR `String`.\r\n\r\nResult:\r\nImproved UX while creating `IpSubnetFilterRule` instances.\r\n\r\n---------\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/JdkSslServerContext.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/OpenSsl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/JdkSslServerContextTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85m2cU02gAoYzcwZGYyMTNlNGY2NjkyY2MwNjE5ZGJjZjYxZGQ2YWY4MmYxNTQzNg",
                "url": "https://github.com/netty/netty/pull/13842/commits/c70df213e4f6692cc0619dbcf61dd6af82f15436"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13840,
                "url": "https://github.com/netty/netty/issues/13840",
                "title": "PR #13381 is incompatible with RHEL8 openjdk with FIPS enabled",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">A server SslContext is successfully constructed by SslContextBuilder.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Initialization of the SSLContext fails with an exception:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Exception in thread &quot;main&quot; javax.net.ssl.SSLException: failed to initialize the server-side SSL context\n\tat io.netty.handler.ssl.JdkSslServerContext.newSSLContext(JdkSslServerContext.java:299)\n\tat io.netty.handler.ssl.JdkSslServerContext.&lt;init&gt;(JdkSslServerContext.java:251)\n\tat io.netty.handler.ssl.SslContext.newServerContextInternal(SslContext.java:472)\n\tat io.netty.handler.ssl.SslContextBuilder.build(SslContextBuilder.java:610)\n\tat bdd.FIPSBug.main(FIPSBug.java:25)\nCaused by: java.security.KeyManagementException: FIPS mode: only SunJSSE TrustManagers may be used\n\tat java.base/sun.security.ssl.SSLContextImpl.chooseTrustManager(SSLContextImpl.java:133)\n\tat java.base/sun.security.ssl.SSLContextImpl.engineInit(SSLContextImpl.java:95)\n\tat java.base/javax.net.ssl.SSLContext.init(SSLContext.java:297)\n\tat io.netty.handler.ssl.JdkSslServerContext.newSSLContext(JdkSslServerContext.java:283)\n\t... 4 more\"><pre class=\"notranslate\"><code class=\"notranslate\">Exception in thread \"main\" javax.net.ssl.SSLException: failed to initialize the server-side SSL context\n\tat io.netty.handler.ssl.JdkSslServerContext.newSSLContext(JdkSslServerContext.java:299)\n\tat io.netty.handler.ssl.JdkSslServerContext.&lt;init&gt;(JdkSslServerContext.java:251)\n\tat io.netty.handler.ssl.SslContext.newServerContextInternal(SslContext.java:472)\n\tat io.netty.handler.ssl.SslContextBuilder.build(SslContextBuilder.java:610)\n\tat bdd.FIPSBug.main(FIPSBug.java:25)\nCaused by: java.security.KeyManagementException: FIPS mode: only SunJSSE TrustManagers may be used\n\tat java.base/sun.security.ssl.SSLContextImpl.chooseTrustManager(SSLContextImpl.java:133)\n\tat java.base/sun.security.ssl.SSLContextImpl.engineInit(SSLContextImpl.java:95)\n\tat java.base/javax.net.ssl.SSLContext.init(SSLContext.java:297)\n\tat io.netty.handler.ssl.JdkSslServerContext.newSSLContext(JdkSslServerContext.java:283)\n\t... 4 more\n</code></pre></div>\n<p dir=\"auto\">The change in PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1709513210\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/13381\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/13381/hovercard\" href=\"https://github.com/netty/netty/pull/13381\">#13381</a> wraps the JVMs trust managers with its own to supply better diagnostics, but this is rejected by the JVM. In FIPS mode, OpenJDK will only accept its own X509TrustManagerImpl class.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Configure RHEL 8 to run in FIPS mode: <a href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/assembly_installing-a-rhel-8-system-with-fips-mode-enabled_security-hardening\" rel=\"nofollow\">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/security_hardening/assembly_installing-a-rhel-8-system-with-fips-mode-enabled_security-hardening</a></p>\n<p dir=\"auto\">Create an a server SslContext with SslContextBuilder supplying null for the trust manager factory.</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package bdd;\n\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.security.KeyStore;\n\nimport javax.net.ssl.KeyManagerFactory;\nimport javax.net.ssl.SSLContext;\nimport javax.net.ssl.TrustManagerFactory;\n\nimport io.netty.handler.ssl.SslContextBuilder;\n\npublic class FIPSBug {\n    public static void main(String[] args)\n    throws Exception {\n        KeyStore ks = KeyStore.getInstance(&quot;JKS&quot;);\n        ks.load(Files.newInputStream(Path.of(&quot;keystore.jks&quot;)), &quot;changeit&quot;.toCharArray());\n        KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());\n        kmf.init(ks, &quot;changeit&quot;.toCharArray());\n\n        if (!Boolean.getBoolean(&quot;nonetty&quot;)) {\n            SslContextBuilder\n                .forServer(kmf)\n                .trustManager((TrustManagerFactory) null)\n                .build();\n        }\n        else {\n            SSLContext ctx = SSLContext.getInstance(&quot;TLS&quot;);\n            ctx.init(kmf.getKeyManagers(), null, null);\n        }\n\n        System.out.println(&quot;OK&quot;);\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">package bdd;\n\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.security.KeyStore;\n\nimport javax.net.ssl.KeyManagerFactory;\nimport javax.net.ssl.SSLContext;\nimport javax.net.ssl.TrustManagerFactory;\n\nimport io.netty.handler.ssl.SslContextBuilder;\n\npublic class FIPSBug {\n    public static void main(String[] args)\n    throws Exception {\n        KeyStore ks = KeyStore.getInstance(\"JKS\");\n        ks.load(Files.newInputStream(Path.of(\"keystore.jks\")), \"changeit\".toCharArray());\n        KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());\n        kmf.init(ks, \"changeit\".toCharArray());\n\n        if (!Boolean.getBoolean(\"nonetty\")) {\n            SslContextBuilder\n                .forServer(kmf)\n                .trustManager((TrustManagerFactory) null)\n                .build();\n        }\n        else {\n            SSLContext ctx = SSLContext.getInstance(\"TLS\");\n            ctx.init(kmf.getKeyManagers(), null, null);\n        }\n\n        System.out.println(\"OK\");\n    }\n}\n</code></pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.95+ (PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1709513210\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/13381\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/13381/hovercard\" href=\"https://github.com/netty/netty/pull/13381\">#13381</a>)<br>\nTested with 4.1.100</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"11.0.19\" 2023-04-18 LTS<br>\nOpenJDK Runtime Environment (Red_Hat-11.0.19.0.7-2) (build 11.0.19+7-LTS)<br>\nOpenJDK 64-Bit Server VM (Red_Hat-11.0.19.0.7-2) (build 11.0.19+7-LTS, mixed mode, sharing)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux ip-10-134-119-133.ec2.internal 4.18.0-477.13.1.el8_8.x86_64 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"418688\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/1\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/1/hovercard\" href=\"https://github.com/netty/netty/pull/1\">#1</a> SMP Thu May 18 10:27:05 EDT 2023 x86_64 x86_64 x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/13840",
                "createdAt": "2024-02-13T18:12:56Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Epoll: Correctly handle splice tasks when Channel is closed",
        "url": "https://github.com/netty/netty/pull/13848",
        "resourcePath": "/netty/netty/pull/13848",
        "createdAt": "2024-02-16T08:30:22Z",
        "number": 13848,
        "mergeCommit": {
          "oid": "9506ccc1999c33ee072504857541c7fedac51283",
          "message": "Epoll: Correctly handle splice tasks when Channel is closed (#13848)\n\nMotivation:\r\n\r\nWe need to use ChannelPromise.try* to notify the ChannelPromise that are\r\nused in the different Splice*Task implementations as the ChannelPromise\r\nmight already be notified during adding it.\r\n\r\nModifications:\r\n\r\n- Use try* variants to notify about splice tasks.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13831",
          "commitUrl": "https://github.com/netty/netty/commit/9506ccc1999c33ee072504857541c7fedac51283",
          "parents": {
            "nodes": [
              {
                "oid": "1cd47781f7863a3da68ff92a40ec7b7546d86eab",
                "message": "Update missing actions that were missed in 458184ffe25d77b98a56bc9c16d3944b6cb1969f"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollStreamChannel.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85nD47v2gAoZDc4MjRkZmMzMzQ1ZGJkOWU4NTliNDc5ZGU2OTdhOTEwYWEzZjQ5MQ",
                "url": "https://github.com/netty/netty/pull/13848/commits/d7824dfc3345dbd9e859b479de697a910aa3f491"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13831,
                "url": "https://github.com/netty/netty/issues/13831",
                "title": "Failed to close the channel",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The outbound channel can be closed and works fine.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"2024-02-02T00:46:50,901+0000 [pulsar-proxy-io-2-3] WARN  io.netty.util.concurrent.DefaultPromise - An exception was thrown by io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInChannelTask.operationComplete()\njava.lang.IllegalStateException: complete already: DefaultChannelPromise@3c441997(failure: java.nio.channels.ClosedChannelException)\n\tat io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:113) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.DefaultChannelPromise.setFailure(DefaultChannelPromise.java:89) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInChannelTask.operationComplete(AbstractEpollStreamChannel.java:894) ~[io.netty-netty-transport-classes-epoll-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInChannelTask.operationComplete(AbstractEpollStreamChannel.java:883) ~[io.netty-netty-transport-classes-epoll-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.internal.PromiseNotificationUtil.tryFailure(PromiseNotificationUtil.java:64) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.ChannelOutboundBuffer.safeFail(ChannelOutboundBuffer.java:734) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:319) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:671) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:735) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:620) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.close(DefaultChannelPipeline.java:1352) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeClose(AbstractChannelHandlerContext.java:749) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.close(AbstractChannelHandlerContext.java:727) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.handler.flush.FlushConsolidationHandler.close(FlushConsolidationHandler.java:173) ~[io.netty-netty-handler-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeClose(AbstractChannelHandlerContext.java:751) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.close(AbstractChannelHandlerContext.java:727) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.close(AbstractChannelHandlerContext.java:560) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.DefaultChannelPipeline.close(DefaultChannelPipeline.java:957) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannel.close(AbstractChannel.java:244) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat org.apache.pulsar.proxy.server.DirectProxyHandler.close(DirectProxyHandler.java:294) ~[org.apache.pulsar-pulsar-proxy-3.0.1.jar:3.0.1]\n\tat org.apache.pulsar.proxy.server.ProxyConnection.channelInactive(ProxyConnection.java:202) ~[org.apache.pulsar-pulsar-proxy-3.0.1.jar:3.0.1]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:403) ~[io.netty-netty-transport-classes-epoll-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat java.lang.Thread.run(Thread.java:833) ~[?:?]\nCaused by: io.netty.channel.StacklessClosedChannelException\n\tat io.netty.channel.AbstractChannel.close(ChannelPromise)(Unknown Source) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\"><pre class=\"notranslate\"><code class=\"notranslate\">2024-02-02T00:46:50,901+0000 [pulsar-proxy-io-2-3] WARN  io.netty.util.concurrent.DefaultPromise - An exception was thrown by io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInChannelTask.operationComplete()\njava.lang.IllegalStateException: complete already: DefaultChannelPromise@3c441997(failure: java.nio.channels.ClosedChannelException)\n\tat io.netty.util.concurrent.DefaultPromise.setFailure(DefaultPromise.java:113) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.DefaultChannelPromise.setFailure(DefaultChannelPromise.java:89) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInChannelTask.operationComplete(AbstractEpollStreamChannel.java:894) ~[io.netty-netty-transport-classes-epoll-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.epoll.AbstractEpollStreamChannel$SpliceInChannelTask.operationComplete(AbstractEpollStreamChannel.java:883) ~[io.netty-netty-transport-classes-epoll-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:557) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.internal.PromiseNotificationUtil.tryFailure(PromiseNotificationUtil.java:64) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.ChannelOutboundBuffer.safeFail(ChannelOutboundBuffer.java:734) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.ChannelOutboundBuffer.remove0(ChannelOutboundBuffer.java:319) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.ChannelOutboundBuffer.failFlushed(ChannelOutboundBuffer.java:671) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:735) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.close(AbstractChannel.java:620) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.close(DefaultChannelPipeline.java:1352) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeClose(AbstractChannelHandlerContext.java:749) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.close(AbstractChannelHandlerContext.java:727) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.handler.flush.FlushConsolidationHandler.close(FlushConsolidationHandler.java:173) ~[io.netty-netty-handler-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeClose(AbstractChannelHandlerContext.java:751) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.close(AbstractChannelHandlerContext.java:727) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.close(AbstractChannelHandlerContext.java:560) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.DefaultChannelPipeline.close(DefaultChannelPipeline.java:957) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannel.close(AbstractChannel.java:244) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat org.apache.pulsar.proxy.server.DirectProxyHandler.close(DirectProxyHandler.java:294) ~[org.apache.pulsar-pulsar-proxy-3.0.1.jar:3.0.1]\n\tat org.apache.pulsar.proxy.server.ProxyConnection.channelInactive(ProxyConnection.java:202) ~[org.apache.pulsar-pulsar-proxy-3.0.1.jar:3.0.1]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:305) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelInactive(AbstractChannelHandlerContext.java:274) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelInactive(DefaultChannelPipeline.java:1405) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:301) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelInactive(AbstractChannelHandlerContext.java:281) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelInactive(DefaultChannelPipeline.java:901) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe$7.run(AbstractChannel.java:813) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:174) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:167) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:403) ~[io.netty-netty-transport-classes-epoll-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[io.netty-netty-common-4.1.93.Final.jar:4.1.93.Final]\n\tat java.lang.Thread.run(Thread.java:833) ~[?:?]\nCaused by: io.netty.channel.StacklessClosedChannelException\n\tat io.netty.channel.AbstractChannel.close(ChannelPromise)(Unknown Source) ~[io.netty-netty-transport-4.1.93.Final.jar:4.1.93.Final]\n</code></pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">This issue cannot be reproduced in my environment, when the network is unstable, the issue will be thrown.</p>\n<p dir=\"auto\">You can checkout the close code: <a href=\"https://github.com/apache/pulsar/blob/v3.0.1/pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/DirectProxyHandler.java#L292-L296\">https://github.com/apache/pulsar/blob/v3.0.1/pulsar-proxy/src/main/java/org/apache/pulsar/proxy/server/DirectProxyHandler.java#L292-L296</a></p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.93</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk 17.0.7 2023-04-18<br>\nOpenJDK Runtime Environment Temurin-17.0.7+7 (build 17.0.7+7)<br>\nOpenJDK 64-Bit Server VM Temurin-17.0.7+7 (build 17.0.7+7, mixed mode, sharing)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux e1b7a1713da1 6.5.11-linuxkit <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"418688\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/1\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/1/hovercard\" href=\"https://github.com/netty/netty/pull/1\">#1</a> SMP PREEMPT_DYNAMIC Wed Dec  6 17:14:50 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux</p>",
                "resourcePath": "/netty/netty/issues/13831",
                "createdAt": "2024-02-08T17:48:11Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow to cancel connect() operations when using non-blocking IO",
        "url": "https://github.com/netty/netty/pull/13849",
        "resourcePath": "/netty/netty/pull/13849",
        "createdAt": "2024-02-16T09:34:49Z",
        "number": 13849,
        "mergeCommit": {
          "oid": "46d6e164a2a46e2c6d802f84e0c24abd475bcd89",
          "message": "Allow to cancel connect() operations when using non-blocking IO (#13849)",
          "commitUrl": "https://github.com/netty/netty/commit/46d6e164a2a46e2c6d802f84e0c24abd475bcd89",
          "parents": {
            "nodes": [
              {
                "oid": "e8176601344b1c22e0f6c1dfc2861d7a92f54030",
                "message": "SSL: Only wrap TrustManager if FIPS is not used (#13842)\n\nMotivation:\r\n\r\nWe must only wrap the TrustManager if FIPS is not used as optherwise the\r\nJDK might throw an exception\r\n\r\nModifications:\r\n\r\n- Try to see if wrapping is successful and if not disable wrapping\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13840"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite/src/main/java/io/netty/testsuite/transport/socket/SocketConnectionAttemptTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/AbstractEpollChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/nio/AbstractNioChannel.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85nEOE_2gAoOTI4NjE5MDNhYzliZjFmOGUxMWM4NDM4YjJhYTQ4ZjgxOTI5OGE5Zg",
                "url": "https://github.com/netty/netty/pull/13849/commits/92861903ac9bf1f8e11c8438b2aa48f819298a9f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13843,
                "url": "https://github.com/netty/netty/issues/13843",
                "title": "Cient connection establishment is not cancellable",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When connecting a client, it should be possible to cancel the connection establishment while it is in progress (if the underlying tansport supports it).</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The promise returned by <code class=\"notranslate\">Bootstrap#connect</code> is marked as uncancellable by <em>all</em> transport implementations so invoking <code class=\"notranslate\">cancel()</code> on it has no effect. This is so despite all\u00b9 transport implementations having a listener on the promise which handles cancellation (see e.g. <a href=\"https://github.com/netty/netty/blob/6038b594147e31ab71b100d7ded8534c07c4e5f5/transport-classes-kqueue/src/main/java/io/netty/channel/kqueue/AbstractKQueueChannel.java#L581-L592\">here</a> for the NIO transport).</p>\n<p dir=\"auto\">Marking connect promises as uncancellable was introduced by <a href=\"https://github.com/netty/netty/commit/96b0a949e102a5766abc5e12b3392b1bf3da7005\">this patch</a>. Oddly, it claims to \"Make most outbound operations cancellable\" but then goes on to say \"Call setUncancellable() before performing an outbound operation\" which appears to do the exact opposite. I already brought this up with <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/trustin/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/trustin\">@trustin</a> on Discord and he figured he did this because it's not possible to interrupt a <code class=\"notranslate\">connect()</code> syscall once invoked. However, this is not the case for all non-blocking socket types for which this can be achieved by simply calling <code class=\"notranslate\">close()</code> on them (which is what the listeners mentioned would above do). I have in fact tested this in practice with both the NIO and epoll transports and it works just fine. I suspect that the patch was a bit too sweeping in disabling cancellation globally like that. Also note the existence of <code class=\"notranslate\">io.netty.testsuite.transport.socket.SocketConnectionAttemptTest#testConnectCancellation</code> which indicates that cancellation of connection attempts is/was intended to be supported.</p>\n<p dir=\"auto\">1: Except for the deprecated OIO transport which doesn't support it due to its blocking nature.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">See below</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">My (very simple) patch for enabling cancellation of connection establishment for the NIO and epoll transports is available <a href=\"https://github.com/bevuta/netty/commit/d9fd4151f99f7a047b7292e1345bbb5730fb305c\">here</a> - it can probably also be extended to kqueue but I have no system to test this on right now. I ensured that it works as expected in two ways:</p>\n<ol dir=\"auto\">\n<li>I modified <code class=\"notranslate\">io.netty.testsuite.transport.socket.SocketConnectionAttemptTest#testConnectCancellation</code> to error out in the <code class=\"notranslate\">else</code> branch (i.e. the one that says <code class=\"notranslate\">// Cancellation not supported by the transport</code>). The test then failed without the patch and passed with the patch.</li>\n<li>I made a connection attempt to a TCP server which never calls <code class=\"notranslate\">accept()</code>.  Via <code class=\"notranslate\">ss</code> I observed the connection attempt being stuck in <code class=\"notranslate\">SYN-SENT</code> state. I then invoked <code class=\"notranslate\">cancel()</code> on the promise returned by <code class=\"notranslate\">Bootstrap#connect</code>. Without the patch, the connection would stick around until the connect timeout (default 30 seconds) expired. With the patch, the connection immediately disappeard.</li>\n</ol>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.107</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">19.0.2</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux 6.7.2 (NixOS)</p>",
                "resourcePath": "/netty/netty/issues/13843",
                "createdAt": "2024-02-14T14:57:31Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix license for zstd-jni",
        "url": "https://github.com/netty/netty/pull/13864",
        "resourcePath": "/netty/netty/pull/13864",
        "createdAt": "2024-02-21T09:10:12Z",
        "number": 13864,
        "mergeCommit": {
          "oid": "360832d4a361f5542d019ba05305fd4f287f95c7",
          "message": "Fix license for zstd-jni (#13864)\n\nMotivation:\r\n\r\nWe listed the license for zstd-jni as ASL2 but it's BSD.\r\n\r\nModifications:\r\n\r\nFix license info for zstd-jni\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13862",
          "commitUrl": "https://github.com/netty/netty/commit/360832d4a361f5542d019ba05305fd4f287f95c7",
          "parents": {
            "nodes": [
              {
                "oid": "0001519c9689c06e2f5c6d6ae9f8f25ea224a477",
                "message": "Add `IpSubnetFilterExample` (#13792)\n\nMotivation:\r\nWe should have an example for using `IpSubnetFilterRule` to filter\r\ntraffic using Netty.\r\n\r\nModification:\r\nAdded `IpSubnetFilterExample`\r\n\r\nResult:\r\nExample for usages of `IpSubnetFilterRule`"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "NOTICE.txt"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "license/LICENSE.zstd-jni.txt"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85nfh6K2gAoYzU2OWQ5YzE4YzUxNjg2NTQ2N2U1OWRhOGU2MjEyMGM4MGZkNGE0Mw",
                "url": "https://github.com/netty/netty/pull/13864/commits/c569d9c18c516865467e59da8e62120c80fd4a43"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13862,
                "url": "https://github.com/netty/netty/issues/13862",
                "title": "Possible incorrect license for zstd-jni",
                "bodyHTML": "<p dir=\"auto\">The NOTICE file mentions an optional dependency on zstd-jni.txt, and references LICENSES/zstd-jni.txt . This file includes a copy of the Apache license. However, the NOTICE file points to the original project at <a href=\"https://github.com/luben/zstd-jni\">https://github.com/luben/zstd-jni</a> and the license there is NOT Apache, but BSD 2-clause (along with a downstream dependency on zstd under BSD or GPL v2.) This is also stated at the bottom of the README file.</p>\n<p dir=\"auto\">Is this a mistake, or did the owner of this project agree to relicense under an Apache license for netty?</p>",
                "resourcePath": "/netty/netty/issues/13862",
                "createdAt": "2024-02-21T01:32:21Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "SSL: Only try to use TLSv1.3 if a compatible ciphersuite is configured",
        "url": "https://github.com/netty/netty/pull/13866",
        "resourcePath": "/netty/netty/pull/13866",
        "createdAt": "2024-02-21T15:13:05Z",
        "number": 13866,
        "mergeCommit": {
          "oid": "b8cddab13de5a83a1be48a94e5095388aa424007",
          "message": "SSL: Only try to use TLSv1.3 if a compatible ciphersuite is configured (#13866)\n\nMotivation:\r\n\r\nWe should not try to use TLSv1.3 if only TLSv1.2 ciphers are configured\r\n\r\nModifications:\r\n\r\n- Don't use TLSv1.3 if the ciphers that are configured are not for\r\nTLSv1.3\r\n- Add unit tests\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13810",
          "commitUrl": "https://github.com/netty/netty/commit/b8cddab13de5a83a1be48a94e5095388aa424007",
          "parents": {
            "nodes": [
              {
                "oid": "f78f55f69716e022e328aeb77340574d7cc9b9d3",
                "message": "SSL: Add missing fail() so the test only pass if the handshake throws (#13867)\n\nMotivation:\r\n\r\nWe should add a fail() to ensure the handshake really throws an\r\nexception as at the moment the test would also pass if it doesnt.\r\n\r\nModifications:\r\n\r\nAdd missing fail()\r\n\r\nResult:\r\n\r\nFix test"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/OpenSsl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslContext.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/ReferenceCountedOpenSslEngine.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/ConscryptJdkSslEngineInteropTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/ConscryptOpenSslEngineInteropTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/ConscryptSslEngineTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/JdkConscryptSslEngineInteropTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/OpenSslConscryptSslEngineInteropTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/test/java/io/netty/handler/ssl/SSLEngineTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85niVzt2gAoMDEwN2MzM2U4NDY2M2EwZTNkZjJjNTY3ZTczMDhiOGQzNzRkNDc3NQ",
                "url": "https://github.com/netty/netty/pull/13866/commits/0107c33e84663a0e3df2c567e7308b8d374d4775"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13810,
                "url": "https://github.com/netty/netty/issues/13810",
                "title": "OpenSSL implementation ignores cipher specification for TLSv1.3",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">A call to <code class=\"notranslate\">SslContextBuilder.ciphers</code> should have the same effect for the JDK and OpenSSL implementations.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Example code accepts the following ciphers for JDK:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  Supported Server Cipher(s):\nPreferred TLSv1.2  128 bits  ECDHE-RSA-AES128-GCM-SHA256   Curve 25519 DHE 253\"><pre class=\"notranslate\"><code class=\"notranslate\">  Supported Server Cipher(s):\nPreferred TLSv1.2  128 bits  ECDHE-RSA-AES128-GCM-SHA256   Curve 25519 DHE 253\n</code></pre></div>\n<p dir=\"auto\">For OpenSSL:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  Supported Server Cipher(s):\nPreferred TLSv1.3  128 bits  TLS_AES_128_GCM_SHA256        Curve 25519 DHE 253\nAccepted  TLSv1.3  256 bits  TLS_AES_256_GCM_SHA384        Curve 25519 DHE 253\nAccepted  TLSv1.3  256 bits  TLS_CHACHA20_POLY1305_SHA256  Curve 25519 DHE 253\nPreferred TLSv1.2  128 bits  ECDHE-RSA-AES128-GCM-SHA256   Curve 25519 DHE 253\"><pre class=\"notranslate\"><code class=\"notranslate\">  Supported Server Cipher(s):\nPreferred TLSv1.3  128 bits  TLS_AES_128_GCM_SHA256        Curve 25519 DHE 253\nAccepted  TLSv1.3  256 bits  TLS_AES_256_GCM_SHA384        Curve 25519 DHE 253\nAccepted  TLSv1.3  256 bits  TLS_CHACHA20_POLY1305_SHA256  Curve 25519 DHE 253\nPreferred TLSv1.2  128 bits  ECDHE-RSA-AES128-GCM-SHA256   Curve 25519 DHE 253\n</code></pre></div>\n<p dir=\"auto\">The reason for this is that <code class=\"notranslate\">TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256</code> is not a TLSv1.3 cipher suite, the suite is called TLS_AES_128_GCM_SHA256 in TLSv1.3. It appears that the JDK impl deals with this by disabling TLSv1.3, while OpenSSL treats it as \"no ciphers explicitly set\" and falls back on the default TLSv1.3 cipher list. Indeed, when setting <code class=\"notranslate\">.ciphers(List.of(\"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\", \"TLS_AES_128_GCM_SHA256\"))</code> instead, OpenSSL yields this much more useful warning message:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[main] INFO  i.n.h.s.ReferenceCountedOpenSslContext - BoringSSL doesn't allow to enable or disable TLSv1.3 ciphers explicitly. Provided TLSv1.3 ciphers: 'TLS_AES_128_GCM_SHA256', default TLSv1.3 ciphers that will be used: 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256'.\"><pre class=\"notranslate\"><code class=\"notranslate\">[main] INFO  i.n.h.s.ReferenceCountedOpenSslContext - BoringSSL doesn't allow to enable or disable TLSv1.3 ciphers explicitly. Provided TLSv1.3 ciphers: 'TLS_AES_128_GCM_SHA256', default TLSv1.3 ciphers that will be used: 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256'.\n</code></pre></div>\n<p dir=\"auto\">The OpenSSL impl should be changed to either disable TLSv1.3, or display this warning for the no-suite case too. I think the latter would be preferable.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ul dir=\"auto\">\n<li>Run reproducer code with <code class=\"notranslate\">SslProvider.JDK</code> or <code class=\"notranslate\">SslProvider.OPENSSL</code></li>\n<li>Run <code class=\"notranslate\">sslscan localhost:4433</code></li>\n<li>See the supported certificate output above</li>\n</ul>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import io.micronaut.core.annotation.NonNull;\nimport io.netty.bootstrap.ServerBootstrap;\nimport io.netty.channel.Channel;\nimport io.netty.channel.ChannelInitializer;\nimport io.netty.channel.nio.NioEventLoopGroup;\nimport io.netty.channel.socket.nio.NioServerSocketChannel;\nimport io.netty.handler.ssl.SslContext;\nimport io.netty.handler.ssl.SslContextBuilder;\nimport io.netty.handler.ssl.SslProvider;\nimport io.netty.handler.ssl.util.SelfSignedCertificate;\n\nimport javax.net.ssl.SSLException;\nimport java.security.cert.CertificateException;\nimport java.util.List;\n\npublic class OpensslCiphersTest {\n    public static void main(String[] args) throws CertificateException, SSLException {\n        SelfSignedCertificate ssc = new SelfSignedCertificate();\n        SslContext sslContext = SslContextBuilder.forServer(ssc.key(), ssc.cert())\n            .ciphers(List.of(&quot;TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256&quot;))\n            .sslProvider(SslProvider.JDK)\n            .build();\n        new ServerBootstrap()\n            .group(new NioEventLoopGroup(1))\n            .channel(NioServerSocketChannel.class)\n            .childHandler(new ChannelInitializer&lt;&gt;() {\n                @Override\n                protected void initChannel(@NonNull Channel channel) throws Exception {\n                    channel.pipeline()\n                        .addLast(sslContext.newHandler(channel.alloc()));\n                }\n            })\n            .bind(4433);\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">micronaut</span>.<span class=\"pl-s1\">core</span>.<span class=\"pl-s1\">annotation</span>.<span class=\"pl-s1\">NonNull</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">bootstrap</span>.<span class=\"pl-s1\">ServerBootstrap</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">Channel</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">ChannelInitializer</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">NioEventLoopGroup</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">channel</span>.<span class=\"pl-s1\">socket</span>.<span class=\"pl-s1\">nio</span>.<span class=\"pl-s1\">NioServerSocketChannel</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslContext</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslContextBuilder</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SslProvider</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">netty</span>.<span class=\"pl-s1\">handler</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">SelfSignedCertificate</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">javax</span>.<span class=\"pl-s1\">net</span>.<span class=\"pl-s1\">ssl</span>.<span class=\"pl-s1\">SSLException</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">security</span>.<span class=\"pl-s1\">cert</span>.<span class=\"pl-s1\">CertificateException</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">List</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">OpensslCiphersTest</span> {\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">CertificateException</span>, <span class=\"pl-smi\">SSLException</span> {\n        <span class=\"pl-smi\">SelfSignedCertificate</span> <span class=\"pl-s1\">ssc</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SelfSignedCertificate</span>();\n        <span class=\"pl-smi\">SslContext</span> <span class=\"pl-s1\">sslContext</span> = <span class=\"pl-smi\">SslContextBuilder</span>.<span class=\"pl-en\">forServer</span>(<span class=\"pl-s1\">ssc</span>.<span class=\"pl-en\">key</span>(), <span class=\"pl-s1\">ssc</span>.<span class=\"pl-en\">cert</span>())\n            .<span class=\"pl-en\">ciphers</span>(<span class=\"pl-smi\">List</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-s\">\"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256\"</span>))\n            .<span class=\"pl-en\">sslProvider</span>(<span class=\"pl-smi\">SslProvider</span>.<span class=\"pl-c1\">JDK</span>)\n            .<span class=\"pl-en\">build</span>();\n        <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ServerBootstrap</span>()\n            .<span class=\"pl-en\">group</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">NioEventLoopGroup</span>(<span class=\"pl-c1\">1</span>))\n            .<span class=\"pl-en\">channel</span>(<span class=\"pl-smi\">NioServerSocketChannel</span>.<span class=\"pl-k\">class</span>)\n            .<span class=\"pl-en\">childHandler</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">ChannelInitializer</span>&lt;&gt;() {\n                <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n                <span class=\"pl-k\">protected</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">initChannel</span>(<span class=\"pl-c1\">@</span><span class=\"pl-c1\">NonNull</span> <span class=\"pl-smi\">Channel</span> <span class=\"pl-s1\">channel</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n                    <span class=\"pl-s1\">channel</span>.<span class=\"pl-en\">pipeline</span>()\n                        .<span class=\"pl-en\">addLast</span>(<span class=\"pl-s1\">sslContext</span>.<span class=\"pl-en\">newHandler</span>(<span class=\"pl-s1\">channel</span>.<span class=\"pl-en\">alloc</span>()));\n                }\n            })\n            .<span class=\"pl-en\">bind</span>(<span class=\"pl-c1\">4433</span>);\n    }\n}</pre></div>",
                "resourcePath": "/netty/netty/issues/13810",
                "createdAt": "2024-01-26T14:35:47Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Backport 'Fix buffer leak in DefaultHttp2HeadersEncoder' to v4",
        "url": "https://github.com/netty/netty/pull/13872",
        "resourcePath": "/netty/netty/pull/13872",
        "createdAt": "2024-02-24T21:36:27Z",
        "number": 13872,
        "mergeCommit": {
          "oid": "73dc1e671b6f226703bc0bb771c12e671dd2d540",
          "message": "Backport 'Fix buffer leak in DefaultHttp2HeadersEncoder' to v4 (#13872)\n\nMotivation:\r\n\r\nWe don't release the buffer that is allocated in DefaultHttp2HeadersEncoder.\r\n\r\n\r\nModifications:\r\n\r\nLet DefaultHttp2HeadersEncoder implement Closable and call it when the encoder is closed.\r\n\r\nResult:\r\nFixes #13870, Backport of #12781",
          "commitUrl": "https://github.com/netty/netty/commit/73dc1e671b6f226703bc0bb771c12e671dd2d540",
          "parents": {
            "nodes": [
              {
                "oid": "b8cddab13de5a83a1be48a94e5095388aa424007",
                "message": "SSL: Only try to use TLSv1.3 if a compatible ciphersuite is configured (#13866)\n\nMotivation:\r\n\r\nWe should not try to use TLSv1.3 if only TLSv1.2 ciphers are configured\r\n\r\nModifications:\r\n\r\n- Don't use TLSv1.3 if the ciphers that are configured are not for\r\nTLSv1.3\r\n- Add unit tests\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13810"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2FrameWriter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2HeadersEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/test/java/io/netty/handler/codec/http2/DefaultHttp2HeadersEncoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85n1BN42gAoMzhiMjU2OWMwNWVjN2M4MTI3NjY0YjkwNWI5OWM1ZTJjNGE1Y2MxMQ",
                "url": "https://github.com/netty/netty/pull/13872/commits/38b2569c05ec7c8127664b905b99c5e2c4a5cc11"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13870,
                "url": "https://github.com/netty/netty/issues/13870",
                "title": "DefaultHttp2HeadersEncoder corrupts unpooled memory metrics?",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Heap memory counter in <code class=\"notranslate\">UnpooledByteBufAllocatorMetric</code> correlates with the actual heap consumption.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Heap memory counter is always growing, but there is no evidence of the genuine memory leak.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">I may craft an executable example if it is needed, but I believe this is the already known issue (sort of).</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\"><code class=\"notranslate\">4.1.63.Final</code>, but I guess it's still here</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\"><code class=\"notranslate\">openjdk 17.0.3</code> (custom build, but it is irrelevant here)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\"><code class=\"notranslate\">Linux &lt;redacted&gt; 5.4.161-26.3 #1 SMP Mon Feb 7 14:47:58 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</code></p>\n<p dir=\"auto\">Hi!</p>\n<p dir=\"auto\">I'm using gRPC (and as a result Netty HTTP2 implementation as well).<br>\nAlso, I'm tracking the memory consumption of pooled/unpooled heap/offheap netty allocators by using built-in allocator metrics.<br>\nAnd right now, I observe some peculiar behaviour: unpooled heap counter is always growing like the memory is leaking, but the actual heap consumption of JVM does not correllate with this metric.</p>\n<p dir=\"auto\">After some debugging I've found the only place there unpooled allocator is used in my app:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Breakpoint reached\n\tat io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf.allocateArray(UnpooledByteBufAllocator.java:145)\n\tat io.netty.buffer.UnpooledHeapByteBuf.&lt;init&gt;(UnpooledHeapByteBuf.java:59)\n\tat io.netty.buffer.UnpooledUnsafeHeapByteBuf.&lt;init&gt;(UnpooledUnsafeHeapByteBuf.java:34)\n\tat io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf.&lt;init&gt;(UnpooledByteBufAllocator.java:139)\n\tat io.netty.buffer.UnpooledByteBufAllocator.newHeapBuffer(UnpooledByteBufAllocator.java:82)\n\tat io.netty.buffer.AbstractByteBufAllocator.heapBuffer(AbstractByteBufAllocator.java:168)\n\tat io.netty.buffer.AbstractByteBufAllocator.heapBuffer(AbstractByteBufAllocator.java:154)\n\tat io.netty.buffer.Unpooled.buffer(Unpooled.java:101)\n\tat io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder.&lt;init&gt;(DefaultHttp2HeadersEncoder.java:30)\n\tat io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder.&lt;init&gt;(DefaultHttp2HeadersEncoder.java:37)\n\tat io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder.&lt;init&gt;(DefaultHttp2HeadersEncoder.java:33)\n\tat io.netty.handler.codec.http2.DefaultHttp2FrameWriter.&lt;init&gt;(DefaultHttp2FrameWriter.java:88)\n\tat io.grpc.netty.NettyServerHandler.newHandler(NettyServerHandler.java:169)\n\tat io.grpc.netty.NettyServerTransport.createHandler(NettyServerTransport.java:263)\n\tat io.grpc.netty.NettyServerTransport.start(NettyServerTransport.java:131)\n\tat io.grpc.netty.NettyServer$1.initChannel(NettyServer.java:290)\n\tat io.netty.channel.ChannelInitializer.initChannel(ChannelInitializer.java:129)\n\tat io.netty.channel.ChannelInitializer.handlerAdded(ChannelInitializer.java:112)\n\tat io.netty.channel.AbstractChannelHandlerContext.callHandlerAdded(AbstractChannelHandlerContext.java:938)\n\tat io.netty.channel.DefaultChannelPipeline.callHandlerAdded0(DefaultChannelPipeline.java:609)\n\tat io.netty.channel.DefaultChannelPipeline.access$100(DefaultChannelPipeline.java:46)\n\tat io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask.execute(DefaultChannelPipeline.java:1463)\n\tat io.netty.channel.DefaultChannelPipeline.callHandlerAddedForAllHandlers(DefaultChannelPipeline.java:1115)\n\tat io.netty.channel.DefaultChannelPipeline.invokeHandlerAddedIfNeeded(DefaultChannelPipeline.java:650)\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:514)\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)\n\tat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:384)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.lang.Thread.run(Thread.java:833)\"><pre class=\"notranslate\"><code class=\"notranslate\">Breakpoint reached\n\tat io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf.allocateArray(UnpooledByteBufAllocator.java:145)\n\tat io.netty.buffer.UnpooledHeapByteBuf.&lt;init&gt;(UnpooledHeapByteBuf.java:59)\n\tat io.netty.buffer.UnpooledUnsafeHeapByteBuf.&lt;init&gt;(UnpooledUnsafeHeapByteBuf.java:34)\n\tat io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf.&lt;init&gt;(UnpooledByteBufAllocator.java:139)\n\tat io.netty.buffer.UnpooledByteBufAllocator.newHeapBuffer(UnpooledByteBufAllocator.java:82)\n\tat io.netty.buffer.AbstractByteBufAllocator.heapBuffer(AbstractByteBufAllocator.java:168)\n\tat io.netty.buffer.AbstractByteBufAllocator.heapBuffer(AbstractByteBufAllocator.java:154)\n\tat io.netty.buffer.Unpooled.buffer(Unpooled.java:101)\n\tat io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder.&lt;init&gt;(DefaultHttp2HeadersEncoder.java:30)\n\tat io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder.&lt;init&gt;(DefaultHttp2HeadersEncoder.java:37)\n\tat io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder.&lt;init&gt;(DefaultHttp2HeadersEncoder.java:33)\n\tat io.netty.handler.codec.http2.DefaultHttp2FrameWriter.&lt;init&gt;(DefaultHttp2FrameWriter.java:88)\n\tat io.grpc.netty.NettyServerHandler.newHandler(NettyServerHandler.java:169)\n\tat io.grpc.netty.NettyServerTransport.createHandler(NettyServerTransport.java:263)\n\tat io.grpc.netty.NettyServerTransport.start(NettyServerTransport.java:131)\n\tat io.grpc.netty.NettyServer$1.initChannel(NettyServer.java:290)\n\tat io.netty.channel.ChannelInitializer.initChannel(ChannelInitializer.java:129)\n\tat io.netty.channel.ChannelInitializer.handlerAdded(ChannelInitializer.java:112)\n\tat io.netty.channel.AbstractChannelHandlerContext.callHandlerAdded(AbstractChannelHandlerContext.java:938)\n\tat io.netty.channel.DefaultChannelPipeline.callHandlerAdded0(DefaultChannelPipeline.java:609)\n\tat io.netty.channel.DefaultChannelPipeline.access$100(DefaultChannelPipeline.java:46)\n\tat io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask.execute(DefaultChannelPipeline.java:1463)\n\tat io.netty.channel.DefaultChannelPipeline.callHandlerAddedForAllHandlers(DefaultChannelPipeline.java:1115)\n\tat io.netty.channel.DefaultChannelPipeline.invokeHandlerAddedIfNeeded(DefaultChannelPipeline.java:650)\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:514)\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429)\n\tat io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486)\n\tat io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:164)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:472)\n\tat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:384)\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.lang.Thread.run(Thread.java:833)\n</code></pre></div>\n<p dir=\"auto\">Here I've spotted that the similar problem with the memory leaks is already known in HTTP2 module for v5: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1366502842\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/12781\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/12781/hovercard\" href=\"https://github.com/netty/netty/pull/12781\">#12781</a><br>\nI guess that we have the same problem in 4.x version too.</p>\n<p dir=\"auto\">The <code class=\"notranslate\">tableSizeChangeOutput</code> is allocated as unpooled buf there, so it does not lead to the actual memory leak, only corrupts the mem counter (always incremented but never decremented).</p>\n<p dir=\"auto\">I'd like to make a PR and backport the fix if you are ok with that.</p>",
                "resourcePath": "/netty/netty/issues/13870",
                "createdAt": "2024-02-23T16:09:37Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Epoll: Fix possible Classloader deadlock caused by loading class via JNI",
        "url": "https://github.com/netty/netty/pull/13879",
        "resourcePath": "/netty/netty/pull/13879",
        "createdAt": "2024-02-29T16:33:00Z",
        "number": 13879,
        "mergeCommit": {
          "oid": "5117025f35566fe46d0765150a0015bb69f581f8",
          "message": "Epoll: Fix possible Classloader deadlock caused by loading class via JNI (#13879)\n\nMotivation:\r\n\r\nLinuxSocket is loaded by by JNI when \"binding\" methods to native code.\r\nThe problem is that LinuxSocket also try to use\r\n`InetAddress.getName(...)` when init static fields, which might deadlock\r\nas we are still in native code while doing so\r\n\r\nModifications:\r\n\r\nMove static fields to Native class and init these before we try to load\r\nJNI code.\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13871",
          "commitUrl": "https://github.com/netty/netty/commit/5117025f35566fe46d0765150a0015bb69f581f8",
          "parents": {
            "nodes": [
              {
                "oid": "e37ae48de3199320b5ee45b072583499bb944a77",
                "message": "DnsNameResolver: Fix possible NPE in testsuite which masks other problem\n\nMotivation:\n\nWe need to add a null check as it might be null if it throws.\n\nModifications:\n\nAdd null check before trying to close the socket\n\nResult:\n\nNo more masking NPE"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/EpollDatagramChannel.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/LinuxSocket.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-classes-epoll/src/main/java/io/netty/channel/epoll/Native.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85oUMlB2gAoOGI3MzliMjg0YTRmMzRhM2NjOWY0Y2M3Y2E5OTZmNTBhYTc3ZWM2Mw",
                "url": "https://github.com/netty/netty/pull/13879/commits/8b739b284a4f34a3cc9f4cc7ca996f50aa77ec63"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13871,
                "url": "https://github.com/netty/netty/issues/13871",
                "title": "Thread blocked on InetAddress.getByName because of Netty",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Application starting fine.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">Application is hanging during startup because of a deadlock between:</p>\n<ul dir=\"auto\">\n<li>a thread that tries to start a HTTP server</li>\n<li>a thread that prepare some stuff to do some HTTP as a client (calling other services, not being a server) using Netty</li>\n</ul>\n<p dir=\"auto\">The first thread is calling</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"new InetSocketAddress(&quot;0.0.0.0&quot;, somePort)\"><pre class=\"notranslate\"><span class=\"pl-k\">new</span> <span class=\"pl-smi\">InetSocketAddress</span>(<span class=\"pl-s\">\"0.0.0.0\"</span>, <span class=\"pl-s1\">somePort</span>)</pre></div>\n<p dir=\"auto\">The second (in my understanding):</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"static final InetAddress INET6_ANY = InetAddress.getByName(&quot;::&quot;)\nstatic final InetAddress INET_ANY = InetAddress.getByName(&quot;0.0.0.0&quot;)\"><pre class=\"notranslate\"><span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">InetAddress</span> <span class=\"pl-c1\">INET6_ANY</span> = <span class=\"pl-smi\">InetAddress</span>.<span class=\"pl-en\">getByName</span>(<span class=\"pl-s\">\"::\"</span>)\n<span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">InetAddress</span> <span class=\"pl-c1\">INET_ANY</span> = <span class=\"pl-smi\">InetAddress</span>.<span class=\"pl-en\">getByName</span>(<span class=\"pl-s\">\"0.0.0.0\"</span>)</pre></div>\n<p dir=\"auto\">Here are the two threads dumps:</p>\n<p dir=\"auto\">The first (HTTP server) blocked:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"ZScheduler-Worker-6&quot; #30 daemon prio=5 os_prio=0 cpu=276.23ms elapsed=7541.20s tid=0x00007f7bd54d4880 nid=0x55 waiting for monitor entry  [0x00007f7b663f4000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n    at jdk.internal.loader.NativeLibraries.loadLibrary(java.base@17.0.10/Unknown Source)\n    - waiting to lock &lt;0x00000000a02e9a90&gt; (a java.util.HashSet)\n    at jdk.internal.loader.NativeLibraries.loadLibrary(java.base@17.0.10/Unknown Source)\n    at jdk.internal.loader.NativeLibraries.findFromPaths(java.base@17.0.10/Unknown Source)\n    at jdk.internal.loader.NativeLibraries.loadLibrary(java.base@17.0.10/Unknown Source)\n    at jdk.internal.loader.NativeLibraries.loadLibrary(java.base@17.0.10/Unknown Source)\n    at jdk.internal.loader.BootLoader.loadLibrary(java.base@17.0.10/Unknown Source)\n    at java.net.InetAddress.&lt;clinit&gt;(java.base@17.0.10/Unknown Source)\n    at java.net.InetSocketAddress.&lt;init&gt;(java.base@17.0.10/Unknown Source)\n    at io.prometheus.metrics.exporter.httpserver.HTTPServer$Builder.makeInetSocketAddress(HTTPServer.java:209)\n    at io.prometheus.metrics.exporter.httpserver.HTTPServer$Builder.buildAndStart(HTTPServer.java:197)\n    at io.opentelemetry.exporter.prometheus.PrometheusHttpServer.&lt;init&gt;(PrometheusHttpServer.java:71)\n    at io.opentelemetry.exporter.prometheus.PrometheusHttpServerBuilder.build(PrometheusHttpServerBuilder.java:68)\n    at com.myapp.metrics.sdk.PrometheusMetricReader$.$anonfun$startReader$2(PrometheusMetricReader.scala:21)\n    at com.myapp.metrics.sdk.PrometheusMetricReader$$$Lambda$1109/0x00007f7b7840e078.apply(Unknown Source)\n    at zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1(ZIOCompanionVersionSpecific.scala:100)\n    at zio.ZIOCompanionVersionSpecific$$Lambda$430/0x00007f7b782ba000.apply(Unknown Source)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:904)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:967)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:967)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.evaluateEffect(FiberRuntime.scala:381)\n    at zio.internal.FiberRuntime.evaluateMessageWhileSuspended(FiberRuntime.scala:504)\n    at zio.internal.FiberRuntime.drainQueueOnCurrentThread(FiberRuntime.scala:220)\n    at zio.internal.FiberRuntime.run(FiberRuntime.scala:139)\n    at zio.internal.ZScheduler$$anon$4.run(ZScheduler.scala:478)\"><pre class=\"notranslate\"><code class=\"notranslate\">ZScheduler-Worker-6\" #30 daemon prio=5 os_prio=0 cpu=276.23ms elapsed=7541.20s tid=0x00007f7bd54d4880 nid=0x55 waiting for monitor entry  [0x00007f7b663f4000]\n   java.lang.Thread.State: BLOCKED (on object monitor)\n    at jdk.internal.loader.NativeLibraries.loadLibrary(java.base@17.0.10/Unknown Source)\n    - waiting to lock &lt;0x00000000a02e9a90&gt; (a java.util.HashSet)\n    at jdk.internal.loader.NativeLibraries.loadLibrary(java.base@17.0.10/Unknown Source)\n    at jdk.internal.loader.NativeLibraries.findFromPaths(java.base@17.0.10/Unknown Source)\n    at jdk.internal.loader.NativeLibraries.loadLibrary(java.base@17.0.10/Unknown Source)\n    at jdk.internal.loader.NativeLibraries.loadLibrary(java.base@17.0.10/Unknown Source)\n    at jdk.internal.loader.BootLoader.loadLibrary(java.base@17.0.10/Unknown Source)\n    at java.net.InetAddress.&lt;clinit&gt;(java.base@17.0.10/Unknown Source)\n    at java.net.InetSocketAddress.&lt;init&gt;(java.base@17.0.10/Unknown Source)\n    at io.prometheus.metrics.exporter.httpserver.HTTPServer$Builder.makeInetSocketAddress(HTTPServer.java:209)\n    at io.prometheus.metrics.exporter.httpserver.HTTPServer$Builder.buildAndStart(HTTPServer.java:197)\n    at io.opentelemetry.exporter.prometheus.PrometheusHttpServer.&lt;init&gt;(PrometheusHttpServer.java:71)\n    at io.opentelemetry.exporter.prometheus.PrometheusHttpServerBuilder.build(PrometheusHttpServerBuilder.java:68)\n    at com.myapp.metrics.sdk.PrometheusMetricReader$.$anonfun$startReader$2(PrometheusMetricReader.scala:21)\n    at com.myapp.metrics.sdk.PrometheusMetricReader$$$Lambda$1109/0x00007f7b7840e078.apply(Unknown Source)\n    at zio.ZIOCompanionVersionSpecific.$anonfun$attempt$1(ZIOCompanionVersionSpecific.scala:100)\n    at zio.ZIOCompanionVersionSpecific$$Lambda$430/0x00007f7b782ba000.apply(Unknown Source)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:904)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:967)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:967)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.evaluateEffect(FiberRuntime.scala:381)\n    at zio.internal.FiberRuntime.evaluateMessageWhileSuspended(FiberRuntime.scala:504)\n    at zio.internal.FiberRuntime.drainQueueOnCurrentThread(FiberRuntime.scala:220)\n    at zio.internal.FiberRuntime.run(FiberRuntime.scala:139)\n    at zio.internal.ZScheduler$$anon$4.run(ZScheduler.scala:478)\n</code></pre></div>\n<p dir=\"auto\">The one \"locking\":</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&quot;ZScheduler-Worker-20&quot; #44 daemon prio=5 os_prio=0 cpu=191.27ms elapsed=7541.20s tid=0x00007f7bd54e2e70 nid=0x63 in Object.wait()  [0x00007f7b655e3000]\n   java.lang.Thread.State: RUNNABLE\n    at io.netty.channel.epoll.LinuxSocket.unsafeInetAddrByName(LinuxSocket.java:364)\n    - waiting on the Class initialization monitor for java.net.InetAddress\n    at io.netty.channel.epoll.LinuxSocket.&lt;clinit&gt;(LinuxSocket.java:42)\n    at jdk.internal.loader.NativeLibraries.load(java.base@17.0.10/Native Method)\n    at jdk.internal.loader.NativeLibraries$NativeLibraryImpl.open(java.base@17.0.10/Unknown Source)\n    at jdk.internal.loader.NativeLibraries.loadLibrary(java.base@17.0.10/Unknown Source)\n    - locked &lt;0x00000000a02e9a90&gt; (a java.util.HashSet)\n    at jdk.internal.loader.NativeLibraries.loadLibrary(java.base@17.0.10/Unknown Source)\n    at java.lang.ClassLoader.loadLibrary(java.base@17.0.10/Unknown Source)\n    at java.lang.Runtime.load0(java.base@17.0.10/Unknown Source)\n    at java.lang.System.load(java.base@17.0.10/Unknown Source)\n    at io.netty.util.internal.NativeLibraryUtil.loadLibrary(NativeLibraryUtil.java:36)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(java.base@17.0.10/Native Method)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(java.base@17.0.10/Unknown Source)\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(java.base@17.0.10/Unknown Source)\n    at java.lang.reflect.Method.invoke(java.base@17.0.10/Unknown Source)\n    at io.netty.util.internal.NativeLibraryLoader$1.run(NativeLibraryLoader.java:430)\n    at java.security.AccessController.executePrivileged(java.base@17.0.10/Unknown Source)\n    at java.security.AccessController.doPrivileged(java.base@17.0.10/Unknown Source)\n    at io.netty.util.internal.NativeLibraryLoader.loadLibraryByHelper(NativeLibraryLoader.java:422)\n    at io.netty.util.internal.NativeLibraryLoader.loadLibrary(NativeLibraryLoader.java:388)\n    at io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:218)\n    at io.netty.channel.epoll.Native.loadNativeLibrary(Native.java:323)\n    at io.netty.channel.epoll.Native.&lt;clinit&gt;(Native.java:85)\n    at io.netty.channel.epoll.Epoll.&lt;clinit&gt;(Epoll.java:40)\n    at zio.http.netty.ChannelFactories$Client$.$anonfun$fromConfig$4(ChannelFactories.scala:83)\n    at zio.http.netty.ChannelFactories$Client$$$Lambda$966/0x00007f7b783d3e60.apply(Unknown Source)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:967)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:967)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:967)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:967)\n    at zio.internal.FiberRuntime.evaluateEffect(FiberRuntime.scala:381)\n    at zio.internal.FiberRuntime.evaluateMessageWhileSuspended(FiberRuntime.scala:504)\n    at zio.internal.FiberRuntime.drainQueueOnCurrentThread(FiberRuntime.scala:220)\n    at zio.internal.FiberRuntime.run(FiberRuntime.scala:139)\n    at zio.internal.ZScheduler$$anon$4.run(ZScheduler.scala:478)\"><pre class=\"notranslate\"><code class=\"notranslate\">\"ZScheduler-Worker-20\" #44 daemon prio=5 os_prio=0 cpu=191.27ms elapsed=7541.20s tid=0x00007f7bd54e2e70 nid=0x63 in Object.wait()  [0x00007f7b655e3000]\n   java.lang.Thread.State: RUNNABLE\n    at io.netty.channel.epoll.LinuxSocket.unsafeInetAddrByName(LinuxSocket.java:364)\n    - waiting on the Class initialization monitor for java.net.InetAddress\n    at io.netty.channel.epoll.LinuxSocket.&lt;clinit&gt;(LinuxSocket.java:42)\n    at jdk.internal.loader.NativeLibraries.load(java.base@17.0.10/Native Method)\n    at jdk.internal.loader.NativeLibraries$NativeLibraryImpl.open(java.base@17.0.10/Unknown Source)\n    at jdk.internal.loader.NativeLibraries.loadLibrary(java.base@17.0.10/Unknown Source)\n    - locked &lt;0x00000000a02e9a90&gt; (a java.util.HashSet)\n    at jdk.internal.loader.NativeLibraries.loadLibrary(java.base@17.0.10/Unknown Source)\n    at java.lang.ClassLoader.loadLibrary(java.base@17.0.10/Unknown Source)\n    at java.lang.Runtime.load0(java.base@17.0.10/Unknown Source)\n    at java.lang.System.load(java.base@17.0.10/Unknown Source)\n    at io.netty.util.internal.NativeLibraryUtil.loadLibrary(NativeLibraryUtil.java:36)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(java.base@17.0.10/Native Method)\n    at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(java.base@17.0.10/Unknown Source)\n    at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(java.base@17.0.10/Unknown Source)\n    at java.lang.reflect.Method.invoke(java.base@17.0.10/Unknown Source)\n    at io.netty.util.internal.NativeLibraryLoader$1.run(NativeLibraryLoader.java:430)\n    at java.security.AccessController.executePrivileged(java.base@17.0.10/Unknown Source)\n    at java.security.AccessController.doPrivileged(java.base@17.0.10/Unknown Source)\n    at io.netty.util.internal.NativeLibraryLoader.loadLibraryByHelper(NativeLibraryLoader.java:422)\n    at io.netty.util.internal.NativeLibraryLoader.loadLibrary(NativeLibraryLoader.java:388)\n    at io.netty.util.internal.NativeLibraryLoader.load(NativeLibraryLoader.java:218)\n    at io.netty.channel.epoll.Native.loadNativeLibrary(Native.java:323)\n    at io.netty.channel.epoll.Native.&lt;clinit&gt;(Native.java:85)\n    at io.netty.channel.epoll.Epoll.&lt;clinit&gt;(Epoll.java:40)\n    at zio.http.netty.ChannelFactories$Client$.$anonfun$fromConfig$4(ChannelFactories.scala:83)\n    at zio.http.netty.ChannelFactories$Client$$$Lambda$966/0x00007f7b783d3e60.apply(Unknown Source)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:967)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:967)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:890)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:1024)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:967)\n    at zio.internal.FiberRuntime.runLoop(FiberRuntime.scala:967)\n    at zio.internal.FiberRuntime.evaluateEffect(FiberRuntime.scala:381)\n    at zio.internal.FiberRuntime.evaluateMessageWhileSuspended(FiberRuntime.scala:504)\n    at zio.internal.FiberRuntime.drainQueueOnCurrentThread(FiberRuntime.scala:220)\n    at zio.internal.FiberRuntime.run(FiberRuntime.scala:139)\n    at zio.internal.ZScheduler$$anon$4.run(ZScheduler.scala:478)\n</code></pre></div>\n<p dir=\"auto\">Complete thread dump available at <a href=\"https://gist.github.com/gaeljw/72c072262952c9c55a355ad689d3f3b5#file-thread_dump_netty_13871\">https://gist.github.com/gaeljw/72c072262952c9c55a355ad689d3f3b5#file-thread_dump_netty_13871</a></p>\n<p dir=\"auto\"><strong>Why is the Netty code locking forever?</strong></p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">\"just\" start the application (no specific action required, it blocks at startup).</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<p dir=\"auto\">The tricky part is that it's not always reproducible by nature.</p>\n<p dir=\"auto\">Here's the minimized source of our app where we observe the behavior: <a href=\"https://github.com/gaeljw/netty13871\">https://github.com/gaeljw/netty13871</a>.</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# Build the app\npodman build . -t netty13871\n# Run it\npodman run --rm netty13871\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> Build the app</span>\npodman build <span class=\"pl-c1\">.</span> -t netty13871\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Run it</span>\npodman run --rm netty13871</pre></div>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.89.Final + Incubator 0.0.19.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">17.0.10 (Eclipse temurin container image)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\"><code class=\"notranslate\">Linux my-app 5.14.0-200.el9.x86_64 #1 SMP PREEMPT_DYNAMIC Mon Nov 21 16:13:49 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"cat /etc/os-release \nPRETTY_NAME=&quot;Ubuntu 22.04.3 LTS&quot;\nNAME=&quot;Ubuntu&quot;\nVERSION_ID=&quot;22.04&quot;\nVERSION=&quot;22.04.3 LTS (Jammy Jellyfish)&quot;\nVERSION_CODENAME=jammy\nID=ubuntu\nID_LIKE=debian\nHOME_URL=&quot;https://www.ubuntu.com/&quot;\nSUPPORT_URL=&quot;https://help.ubuntu.com/&quot;\nBUG_REPORT_URL=&quot;https://bugs.launchpad.net/ubuntu/&quot;\nPRIVACY_POLICY_URL=&quot;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&quot;\nUBUNTU_CODENAME=jammy\"><pre class=\"notranslate\"><code class=\"notranslate\">cat /etc/os-release \nPRETTY_NAME=\"Ubuntu 22.04.3 LTS\"\nNAME=\"Ubuntu\"\nVERSION_ID=\"22.04\"\nVERSION=\"22.04.3 LTS (Jammy Jellyfish)\"\nVERSION_CODENAME=jammy\nID=ubuntu\nID_LIKE=debian\nHOME_URL=\"https://www.ubuntu.com/\"\nSUPPORT_URL=\"https://help.ubuntu.com/\"\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\nUBUNTU_CODENAME=jammy\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/13871",
                "createdAt": "2024-02-24T11:07:27Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Transport: AdaptiveRecvByteBufAllocator does not correctly calculate \u2026",
        "url": "https://github.com/netty/netty/pull/13882",
        "resourcePath": "/netty/netty/pull/13882",
        "createdAt": "2024-03-01T20:29:25Z",
        "number": 13882,
        "mergeCommit": {
          "oid": "85cee9d1a8881a93e7c43a02baefea75b6ade2b5",
          "message": "Transport: AdaptiveRecvByteBufAllocator does not correctly calculate \u2026 (#13882)\n\n\u2026initial buffer capacity in some cases\r\n\r\nMotivation:\r\n\r\nWe did not correctly calculate the initial index sometimes which could\r\nlead to the initial buffer capacity to exceed the configured maximum\r\nsize.\r\n\r\nModifications:\r\n\r\n- Correctly calculate initialIndex\r\n- Add unit tests\r\n\r\nResult:\r\n\r\nFixes https://github.com/netty/netty/issues/13722",
          "commitUrl": "https://github.com/netty/netty/commit/85cee9d1a8881a93e7c43a02baefea75b6ade2b5",
          "parents": {
            "nodes": [
              {
                "oid": "45a7543c4351ff64db21a6a52fff28dca4dc8ddc",
                "message": "DnsNameResolver query server address stream feature (#13873)\n\nMotivation: The DnsNameResolver does instantiate an instance\r\nFastThreadLocal for each instance of the resolver that is created. This\r\ncan have an impact on the InternalThreadLocalMap static index an the\r\nsize of allocated arrays for FastThreadLocal. In addition this\r\nFastThreadLocal is only used by the DnsNameResolver query methods and\r\nnot the resolve methods. Common usage of the DnsNameResolver by Netty\r\n(i.e. by a Bootstrap) only uses resolves and queries are not performed.\r\n\r\nModification: This encapsulate the usage of the\r\nFastThreadLocal/dnsServerAddressStreamProvider in a specific\r\nimplementation of DnsServerAddressStream that is instantiated by the\r\nDnsNameResolverBuilder by default to keep the current behavior. The\r\nbuilder now does provide a QueryServerAddressStream property that can be\r\nset prior calling build in order to provide a specific implementation of\r\nthe stream for use case that do not whish to sustain the cost of\r\ninstantiating a non static FastThreadLocal.\r\n\r\nResult: DnsNameResolver that do not use FastThreadLocal can now be\r\ncreated.\r\n\r\nThis provides a possible solution for #9884\r\n\r\n---------\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/main/java/io/netty/channel/AdaptiveRecvByteBufAllocator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport/src/test/java/io/netty/channel/AdaptiveRecvByteBufAllocatorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85ocsgN2gAoZDIwZGJiNTdlZDcyNmQ3MjI5NTkyZDMzOTM4MzM4MTc2MzJjMjE2Nw",
                "url": "https://github.com/netty/netty/pull/13882/commits/d20dbb57ed726d7229592d3393833817632c2167"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13722,
                "url": "https://github.com/netty/netty/issues/13722",
                "title": "AdaptiveRecvByteBufAllocator has scenarios where it exceeds the specified maximum BUF capacity",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">When I create <code class=\"notranslate\">new AdaptiveRecvByteBufAllocation (64, 9000, 9000)</code> in this way, the size of the <code class=\"notranslate\">ByteBuf</code> allocated for the first read data will exceed the specified number of 9000, which is actually 16384</p>\n<p dir=\"auto\">I think comments that do not comply with this method\uff1a<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/c6a6aadaface1b2b66d2608dcdc6e4c04c1648cc/transport/src/main/java/io/netty/channel/AdaptiveRecvByteBufAllocator.java#L168\">netty/transport/src/main/java/io/netty/channel/AdaptiveRecvByteBufAllocator.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 168\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/c6a6aadaface1b2b66d2608dcdc6e4c04c1648cc\">c6a6aad</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L168\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"168\"></td>\n          <td id=\"LC168\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">AdaptiveRecvByteBufAllocator</span>(<span class=\"pl-smi\">int</span> <span class=\"pl-s1\">minimum</span>, <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">initial</span>, <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">maximum</span>) { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">I hope its <code class=\"notranslate\">ByteBuf</code> size should be less than or equal to the set <code class=\"notranslate\">maximum</code><br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/c6a6aadaface1b2b66d2608dcdc6e4c04c1648cc/transport/src/main/java/io/netty/channel/AdaptiveRecvByteBufAllocator.java#L88\">netty/transport/src/main/java/io/netty/channel/AdaptiveRecvByteBufAllocator.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 88\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/c6a6aadaface1b2b66d2608dcdc6e4c04c1648cc\">c6a6aad</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L88\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"88\"></td>\n          <td id=\"LC88\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } <span class=\"pl-k\">else</span> { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\"><strong>4.1.101.Final</strong></p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"><strong>example output</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SIZE_TABLE:[16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240, 256, 272, 288, 304, 320, 336, 352, 368, 384, 400, 416, 432, 448, 464, 480, 496, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824]\n1\uff1amax=9000:16384\n2\uff1amax=9000:8192\n3\uff1amax=9000:8192\"><pre class=\"notranslate\"><code class=\"notranslate\">SIZE_TABLE:[16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 224, 240, 256, 272, 288, 304, 320, 336, 352, 368, 384, 400, 416, 432, 448, 464, 480, 496, 512, 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576, 2097152, 4194304, 8388608, 16777216, 33554432, 67108864, 134217728, 268435456, 536870912, 1073741824]\n1\uff1amax=9000:16384\n2\uff1amax=9000:8192\n3\uff1amax=9000:8192\n</code></pre></div>\n<p dir=\"auto\"><strong>example code</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"   public static void main(String[] args) throws Exception {\n\n        Field singleThreadField = AdaptiveRecvByteBufAllocator.class.getDeclaredField(&quot;SIZE_TABLE&quot;);\n        singleThreadField.setAccessible(true);\n\n        AdaptiveRecvByteBufAllocator allocator = new AdaptiveRecvByteBufAllocator(64, 9000, 9000);\n        int[] st = (int[]) singleThreadField.get(allocator);\n        System.out.println(&quot;SIZE_TABLE:&quot;+Arrays.toString(st));\n\n        RecvByteBufAllocator.Handle handle = allocator.newHandle();\n        //Simulated  reading\n        int guess = handle.guess();\n        handle.attemptedBytesRead(guess);\n        handle.lastBytesRead(guess);\n        System.out.println(&quot;1\uff1amax=9000:&quot;+guess);\n        int guess2 = handle.guess();\n        handle.attemptedBytesRead(guess2);\n        handle.lastBytesRead(guess2);\n        System.out.println(&quot;2\uff1amax=9000:&quot;+guess2);\n        System.out.println(&quot;3\uff1amax=9000:&quot;+handle.guess());\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">   public static void main(String[] args) throws Exception {\n\n        Field singleThreadField = AdaptiveRecvByteBufAllocator.class.getDeclaredField(\"SIZE_TABLE\");\n        singleThreadField.setAccessible(true);\n\n        AdaptiveRecvByteBufAllocator allocator = new AdaptiveRecvByteBufAllocator(64, 9000, 9000);\n        int[] st = (int[]) singleThreadField.get(allocator);\n        System.out.println(\"SIZE_TABLE:\"+Arrays.toString(st));\n\n        RecvByteBufAllocator.Handle handle = allocator.newHandle();\n        //Simulated  reading\n        int guess = handle.guess();\n        handle.attemptedBytesRead(guess);\n        handle.lastBytesRead(guess);\n        System.out.println(\"1\uff1amax=9000:\"+guess);\n        int guess2 = handle.guess();\n        handle.attemptedBytesRead(guess2);\n        handle.lastBytesRead(guess2);\n        System.out.println(\"2\uff1amax=9000:\"+guess2);\n        System.out.println(\"3\uff1amax=9000:\"+handle.guess());\n}\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/13722",
                "createdAt": "2023-12-09T03:36:12Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "defect"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Prefer `/etc/resolv.conf` on Linux and Mac",
        "url": "https://github.com/netty/netty/pull/13884",
        "resourcePath": "/netty/netty/pull/13884",
        "createdAt": "2024-03-04T11:06:43Z",
        "number": 13884,
        "mergeCommit": {
          "oid": "06a7e12df9118e3ffbeae3cdc50e638a999d93ec",
          "message": "Prefer `/etc/resolv.conf` on Linux and Mac (#13884)\n\nQuarkus disables JNDI by default, which breaks the (default) DNS servers\r\nlookup in `DirContextUtils`, so DNS lookups default to the public Google\r\nDNS servers. This means, that looking up k8s service names, or any\r\ninternal names, isn't possible without either enabling JNDI, which is\r\nnot such a great option, or specifying DNS servers manually, which is\r\nawkward, since there is `/etc/resolv.conf`.\r\n\r\nThis change prefers reading the nameservers from `/etc/resolv.conf` over\r\nlooking those up on JNDI on Linux + macOS. This is effectively a\r\nnoop-change when JNDI is enabled, because the nameservers available via\r\nJNDI are read from `/etc/resolv.conf`. Behavior for Windows (still\r\nrequires JNDI) and Android (neither JNDI nor `/etc/resolv.conf`) is not\r\nchanged.\r\n\r\nFixes #13883",
          "commitUrl": "https://github.com/netty/netty/commit/06a7e12df9118e3ffbeae3cdc50e638a999d93ec",
          "parents": {
            "nodes": [
              {
                "oid": "2429f158c5f34502eead55d9e9e9c5cc25b52ec7",
                "message": "remove repetitive words (#13894)\n\nMotivation:\r\n\r\nThere are some repetitive words in the docs / comments\r\n\r\nModifications:\r\n\r\nremove repetitive words\r\n\r\nResult:\r\n\r\nCleanup\r\n\r\nSigned-off-by: wellweek <xiezitai@outlook.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DefaultDnsServerAddressStreamProvider.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/ResolvConf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/resources/META-INF/native-image/io.netty/netty-resolver-dns/native-image.properties"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "resolver-dns/src/test/java/io/netty/resolver/dns/ResolvConfTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85ok1N42gAoZTEwZjFkZDFiZDk0Y2Y5MmE0YTA1OTkyMDI3NjJhMmI1NDY5M2ExYg",
                "url": "https://github.com/netty/netty/pull/13884/commits/e10f1dd1bd94cf92a4a0599202762a2b54693a1b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13883,
                "url": "https://github.com/netty/netty/issues/13883",
                "title": "Allow looking up DNS servers, even if JNDI is disabled",
                "bodyHTML": "<p dir=\"auto\">Context is <a href=\"https://github.com/quarkusio/quarkus/issues/23519\" data-hovercard-type=\"issue\" data-hovercard-url=\"/quarkusio/quarkus/issues/23519/hovercard\">this Quarkus issue</a>, TL;DR Quarkus disables JNDI by default (can't use an <code class=\"notranslate\">(Initial)Context(Factory)</code> <a href=\"https://github.com/quarkusio/quarkus/blob/2fa75a15e9b5c73990a7ca01ca2678161c0d3e3d/independent-projects/bootstrap/runner/src/main/java/io/quarkus/bootstrap/naming/DisabledInitialContext.java\">at all</a>), but that breaks the (default) DNS servers lookup in <a href=\"https://github.com/netty/netty/blob/85cee9d1a8881a93e7c43a02baefea75b6ade2b5/resolver-dns/src/main/java/io/netty/resolver/dns/DirContextUtils.java\">DirContextUtils</a>, so DNS lookups default to the public Google DNS servers. This means, that looking up k8s service names isn't possible without either enabling JNDI, which is not such a great option, or specifying DNS servers manually (oh my).</p>\n<p dir=\"auto\">Naively, one could instantiate <code class=\"notranslate\">com.sun.jndi.dns.DnsContextFactory</code>, but nah - JPMS gets in the way there (which is fine IMO).</p>\n<p dir=\"auto\">OTOH <code class=\"notranslate\">sun.net.dns.ResolverConfigurationImpl</code> doesn't do anything else than reading <code class=\"notranslate\">/etc/resolv.conf</code> (at least on Linux + macOS).</p>\n<p dir=\"auto\">WDYT about adding a fallback to <code class=\"notranslate\">DirContextUtils</code> that if the lookup of the DNS servers via JNDI fails, it reads <code class=\"notranslate\">/etc/resolv.conf</code> directly? Doesn't feel to be a huge ton of work, can contribute a PR for that.</p>\n<p dir=\"auto\">/cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/geoand/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/geoand\">@geoand</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cescoffier/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cescoffier\">@cescoffier</a></p>",
                "resourcePath": "/netty/netty/issues/13883",
                "createdAt": "2024-03-03T07:40:01Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Save Snappy's encode tmp table allocation #13826",
        "url": "https://github.com/netty/netty/pull/13885",
        "resourcePath": "/netty/netty/pull/13885",
        "createdAt": "2024-03-04T16:00:37Z",
        "number": 13885,
        "mergeCommit": {
          "oid": "314d59b07ff028feef540bc532c1fe00f09ce8e9",
          "message": "Save Snappy's encode tmp table allocation #13826 (#13885)\n\nMotivation:\r\n\r\nAllocating a new byte[] on the hot path is expensive\r\n\r\nModifications:\r\n\r\n- Use FastThreadLocal to recycle the byte[] when it's the same size\r\n- Fill the array with 0 to ensure correctness of compression\r\n- Created a Benchmark in the microbench module\r\n- New system property\r\n`io.netty.handler.codec.compression.snappy.hashTableType` with possible\r\nvalue `newarray` (default) or `reuse` to use a single buffer\r\n\r\nResult:\r\n\r\nFixes #13826\r\nBenchmarks results on #13826\r\n\r\n---------\r\n\r\nCo-authored-by: Francesco Nigro <nigro.fra@gmail.com>\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/314d59b07ff028feef540bc532c1fe00f09ce8e9",
          "parents": {
            "nodes": [
              {
                "oid": "3519c4fa47fc433287591391e30d5d4f748f8746",
                "message": "Add more details to the UnsupportedMessageTypeException (#13937)\n\nMotivation:\r\n\r\nLet's add some more details to the exception to make debugging easier\r\n\r\nModifications:\r\n\r\nAdd expected types\r\n\r\nResult:\r\n\r\nEasier to debug"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/Snappy.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "microbench/src/main/java/io/netty/microbench/snappy/SnappyDirectBenchmark.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "microbench/src/main/java/io/netty/microbench/snappy/package-info.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85om8102gAoYzE3NmNlNTc5MTA2ZDViOGY1MjIxY2JkZDhlYjRhNGVhNzBlYmUxZg",
                "url": "https://github.com/netty/netty/pull/13885/commits/c176ce579106d5b8f5221cbdd8eb4a4ea70ebe1f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13826,
                "url": "https://github.com/netty/netty/issues/13826",
                "title": "Save Snappy's encode tmp table allocation ",
                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/5d452bc8673721b3caa44c727785e7327ac860b5/codec/src/main/java/io/netty/handler/codec/compression/Snappy.java#L164\">netty/codec/src/main/java/io/netty/handler/codec/compression/Snappy.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 164\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/5d452bc8673721b3caa44c727785e7327ac860b5\">5d452bc</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L164\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"164\"></td>\n          <td id=\"LC164\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">short</span>[<span class=\"pl-s1\">htSize</span>]; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n is allocating a fresh new table in the hot path, see<p></p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/netty/netty/blob/5d452bc8673721b3caa44c727785e7327ac860b5/codec/src/main/java/io/netty/handler/codec/compression/Snappy.java#L58-L73\">netty/codec/src/main/java/io/netty/handler/codec/compression/Snappy.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 58 to 73\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/netty/netty/commit/5d452bc8673721b3caa44c727785e7327ac860b5\">5d452bc</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L58\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"58\"></td>\n          <td id=\"LC58\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">encode</span>(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">in</span>, <span class=\"pl-k\">final</span> <span class=\"pl-smi\">ByteBuf</span> <span class=\"pl-s1\">out</span>, <span class=\"pl-k\">final</span> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">length</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L59\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"59\"></td>\n          <td id=\"LC59\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-c\">// Write the preamble length to the output buffer</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L60\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"60\"></td>\n          <td id=\"LC60\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">int</span> <span class=\"pl-s1\">i</span> = <span class=\"pl-c1\">0</span>;; <span class=\"pl-s1\">i</span> ++) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L61\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"61\"></td>\n          <td id=\"LC61\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">b</span> = <span class=\"pl-s1\">length</span> &gt;&gt;&gt; <span class=\"pl-s1\">i</span> * <span class=\"pl-c1\">7</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L62\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"62\"></td>\n          <td id=\"LC62\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">if</span> ((<span class=\"pl-s1\">b</span> &amp; <span class=\"pl-c1\">0xFFFFFF80</span>) != <span class=\"pl-c1\">0</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L63\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"63\"></td>\n          <td id=\"LC63\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-s1\">out</span>.<span class=\"pl-en\">writeByte</span>(<span class=\"pl-s1\">b</span> &amp; <span class=\"pl-c1\">0x7f</span> | <span class=\"pl-c1\">0x80</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L64\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"64\"></td>\n          <td id=\"LC64\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         } <span class=\"pl-k\">else</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L65\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"65\"></td>\n          <td id=\"LC65\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-s1\">out</span>.<span class=\"pl-en\">writeByte</span>(<span class=\"pl-s1\">b</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L66\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"66\"></td>\n          <td id=\"LC66\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-k\">break</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L67\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"67\"></td>\n          <td id=\"LC67\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L68\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"68\"></td>\n          <td id=\"LC68\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L69\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"69\"></td>\n          <td id=\"LC69\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L70\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"70\"></td>\n          <td id=\"LC70\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">inIndex</span> = <span class=\"pl-s1\">in</span>.<span class=\"pl-en\">readerIndex</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L71\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"71\"></td>\n          <td id=\"LC71\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">final</span> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">baseIndex</span> = <span class=\"pl-s1\">inIndex</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L72\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"72\"></td>\n          <td id=\"LC72\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L73\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"73\"></td>\n          <td id=\"LC73\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">final</span> <span class=\"pl-smi\">short</span>[] <span class=\"pl-s1\">table</span> = <span class=\"pl-en\">getHashTable</span>(<span class=\"pl-s1\">length</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">It should be saved by using <code class=\"notranslate\">static final FastThreadLocal</code> , given that it is used just temporary during encoding from the I/O event loop.</p>",
                "resourcePath": "/netty/netty/issues/13826",
                "createdAt": "2024-02-07T15:57:18Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "improvement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "feat: add setter for topicFilter field, allowing MQTT broker to implement topic rewrite feature",
        "url": "https://github.com/netty/netty/pull/13900",
        "resourcePath": "/netty/netty/pull/13900",
        "createdAt": "2024-03-12T02:13:33Z",
        "number": 13900,
        "mergeCommit": {
          "oid": "733f992868fd50f0156035913c2f49834a3a19f6",
          "message": "feat: add setter for topicFilter field, allowing MQTT broker to implement topic rewrite feature (#13900)\n\nMotivation:\r\n\r\nAs discussed in the issue #13899 , many IoT devices do not support\r\nreconfiguration or upgrade, so it is hard to change their subscribed\r\ntopics. To resolve this issue, MQTT server has to offer topic rewrite\r\ncapability.\r\n\r\nModification:\r\nAdd a setter method to MqttTopicSubscription.topicFilter\r\n\r\nResult:\r\n\r\nFixes #13899 .\r\n\r\n---------\r\n\r\nSigned-off-by: Li Zhanhui <lizhanhui@gmail.com>\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>",
          "commitUrl": "https://github.com/netty/netty/commit/733f992868fd50f0156035913c2f49834a3a19f6",
          "parents": {
            "nodes": [
              {
                "oid": "20c57d0a238d4e1e5b9b4d0356b68cbacc1b3a90",
                "message": "Enhance `AsciiString#toLowerCase` and `AsciiString#toUpperCase` (#13913)\n\nMotivation:\r\nEnhancing the `AsciiString#toLowerCase` and `AsciiString#toUpperCase`\r\nmethods with SWAR could lead to improved performance.\r\n\r\nModification:\r\nImplementing SWAR in the conversion methods.\r\n\r\nResult:\r\nEnhanced performance.\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttTopicSubscription.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85pUngq2gAoYTEzZWE2NTFmZWVjNzdiM2MzMjAzYTRjOTY1MWQ2NDAwM2IzYTg5MQ",
                "url": "https://github.com/netty/netty/pull/13900/commits/a13ea651feec77b3c3203a4c9651d64003b3a891"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13899,
                "url": "https://github.com/netty/netty/issues/13899",
                "title": "[Feature Request] Add setter method for MqttTopicSubscription#topicFilter",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">MqttTopicSubscription should have a method to mutate its topicFilter field.</p>\n<p dir=\"auto\">The rationale is: many IoT devices do not support reconfiguration or upgrade, so it is hard to change their subscribed topics. To resolve this issue, MQTT broker has to offer topic rewrite capability.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">This class is final and the 'topicFilter' field itself is final;</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">N/A</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">N/A</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>",
                "resourcePath": "/netty/netty/issues/13899",
                "createdAt": "2024-03-12T02:10:27Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "HTTP2: Fix hashCode() and equals(...) implementation",
        "url": "https://github.com/netty/netty/pull/13903",
        "resourcePath": "/netty/netty/pull/13903",
        "createdAt": "2024-03-12T09:21:19Z",
        "number": 13903,
        "mergeCommit": null,
        "potentialMergeCommit": {
          "oid": "731857ae847f427b15f492bd34e90bbd3bc255ca",
          "message": "Merge b0bf6a0a0a6d56e7f67b0a886558af24cc357be8 into 2e413d6c73aac00d4541bab119c7a2c330bf8235",
          "commitUrl": "https://github.com/netty/netty/commit/731857ae847f427b15f492bd34e90bbd3bc255ca",
          "parents": {
            "nodes": [
              {
                "oid": "2e413d6c73aac00d4541bab119c7a2c330bf8235",
                "message": "Add more JDK versions to the devcontainers (#14008)\n\nMotivation:\n\nWe should add also other JDKs to the docker images that are used by\ndevcontainers so its easier to debug with different JDKs\n\nModifications:\n\nAdd Java 8,11,17\n\nResult:\n\nEasier to debug with devcontainers\n\n---------\n\nCo-authored-by: Chris Vest <christianvest_hansen@apple.com>"
              },
              {
                "oid": "b0bf6a0a0a6d56e7f67b0a886558af24cc357be8",
                "message": "HTTP2: Fix hashCode() and equals(...) implementation\n\nMotivation:\n\nOur implementations of hashCode() and equals(...) were not correct for some frames.\n\nModifications:\n\nCorrectly implement both methods\n\nResult:\n\nFixes https://github.com/netty/netty/issues/13659"
              }
            ]
          }
        },
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/AbstractHttp2StreamFrame.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/DefaultHttp2PingFrame.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http2/src/main/java/io/netty/handler/codec/http2/Http2FrameCodec.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85pWa4B2gAoYjBiZjZhMGEwYTZkNTZlN2Y2N2IwYTg4NjU1OGFmMjRjYzM1N2JlOA",
                "url": "https://github.com/netty/netty/pull/13903/commits/b0bf6a0a0a6d56e7f67b0a886558af24cc357be8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13659,
                "url": "https://github.com/netty/netty/issues/13659",
                "title": "`AbstractHttp2StreamFrame` and `DefaultHttp2PingFrame` `hashCode` seems incorrect",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">The <code class=\"notranslate\">hashCode</code> methods should return the same result for objects which are considered equal, according to <code class=\"notranslate\">equals</code>.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">The <code class=\"notranslate\">hashCode</code> methods return different results.<br>\nThe reason is that they call <code class=\"notranslate\">super.hashCode</code>, which is actually <code class=\"notranslate\">Object.hashCode</code>, and therefore differs between instances.</p>\n<p dir=\"auto\">For <code class=\"notranslate\">DefaultHttp2PingFrame</code> a possible solution (which would also include the <code class=\"notranslate\">content</code> field) could look like this:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public int hashCode() {\n    return Boolean.hashCode(ack) * 31 + Long.hashCode(content);\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">hashCode</span>() {\n    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Boolean</span>.<span class=\"pl-en\">hashCode</span>(<span class=\"pl-s1\">ack</span>) * <span class=\"pl-c1\">31</span> + <span class=\"pl-smi\">Long</span>.<span class=\"pl-en\">hashCode</span>(<span class=\"pl-s1\">content</span>);\n}</pre></div>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\"><em>see reproducer code below</em></p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">AbstractHttp2StreamFrame</code>:\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// For simplicity create a dummy subclass here, but can also be seen with the other subclasses\nclass C extends AbstractHttp2StreamFrame {\n    // Doesn't matter\n    @Override public String name() {\n        return null;\n    }\n}\n\nObject o1 = new C();\nObject o2 = new C();\n\n// This works\nSystem.out.println(&quot;Equals: &quot; + o1.equals(o2));\n// This doesn't work; prints different hashCode values\nSystem.out.println(&quot;hashCode:\\n  o1: &quot; + o1.hashCode() + &quot;\\n  o2: &quot; + o2.hashCode());\"><pre class=\"notranslate\"><span class=\"pl-c\">// For simplicity create a dummy subclass here, but can also be seen with the other subclasses</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">C</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">AbstractHttp2StreamFrame</span> {\n    <span class=\"pl-c\">// Doesn't matter</span>\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">String</span> <span class=\"pl-en\">name</span>() {\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span>;\n    }\n}\n\n<span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">o1</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">C</span>();\n<span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">o2</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">C</span>();\n\n<span class=\"pl-c\">// This works</span>\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"Equals: \"</span> + <span class=\"pl-s1\">o1</span>.<span class=\"pl-en\">equals</span>(<span class=\"pl-s1\">o2</span>));\n<span class=\"pl-c\">// This doesn't work; prints different hashCode values</span>\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"hashCode:<span class=\"pl-cce\">\\n</span>  o1: \"</span> + <span class=\"pl-s1\">o1</span>.<span class=\"pl-en\">hashCode</span>() + <span class=\"pl-s\">\"<span class=\"pl-cce\">\\n</span>  o2: \"</span> + <span class=\"pl-s1\">o2</span>.<span class=\"pl-en\">hashCode</span>());</pre></div>\n</li>\n<li><code class=\"notranslate\">DefaultHttp2PingFrame</code>:\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Object o1 = new DefaultHttp2PingFrame(1, true);\nObject o2 = new DefaultHttp2PingFrame(1, true);\n\n// This works\nSystem.out.println(&quot;Equals: &quot; + o1.equals(o2));\n// This doesn't work; prints different hashCode values\nSystem.out.println(&quot;hashCode:\\n  o1: &quot; + o1.hashCode() + &quot;\\n  o2: &quot; + o2.hashCode());\"><pre class=\"notranslate\"><span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">o1</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DefaultHttp2PingFrame</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">true</span>);\n<span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">o2</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DefaultHttp2PingFrame</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">true</span>);\n\n<span class=\"pl-c\">// This works</span>\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"Equals: \"</span> + <span class=\"pl-s1\">o1</span>.<span class=\"pl-en\">equals</span>(<span class=\"pl-s1\">o2</span>));\n<span class=\"pl-c\">// This doesn't work; prints different hashCode values</span>\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"hashCode:<span class=\"pl-cce\">\\n</span>  o1: \"</span> + <span class=\"pl-s1\">o1</span>.<span class=\"pl-en\">hashCode</span>() + <span class=\"pl-s\">\"<span class=\"pl-cce\">\\n</span>  o2: \"</span> + <span class=\"pl-s1\">o2</span>.<span class=\"pl-en\">hashCode</span>());</pre></div>\n</li>\n</ul>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.100.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Java 17</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows 10</p>",
                "resourcePath": "/netty/netty/issues/13659",
                "createdAt": "2023-10-14T21:19:17Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix 13926: Made the SslHandshakeTimeoutException constructor public",
        "url": "https://github.com/netty/netty/pull/13929",
        "resourcePath": "/netty/netty/pull/13929",
        "createdAt": "2024-03-25T17:29:14Z",
        "number": 13929,
        "mergeCommit": {
          "oid": "a3052bc6c11e92bc4e95b875b7209659c79938b0",
          "message": "Fix 13926: Made the SslHandshakeTimeoutException constructor public (#13929)\n\nMotivation: \r\nDuring our testing phase, I encountered a challenge with the\r\nSslHandshakeTimeoutException as its constructor was protected, making it\r\ninaccessible for direct instantiation within our test suite. This\r\nlimitation prevented thorough testing of scenarios involving SSL\r\nhandshake timeouts. To address this, I've made the constructor public,\r\nallowing us to create SslHandshakeTimeoutException instances within our\r\ntests effectively.\r\n\r\nModification: \r\nRecognizing the need for comprehensive test coverage, I've made the\r\nconstructor public for creating instances of\r\nSslHandshakeTimeoutException within our test module. This modification\r\nenables us to properly simulate and test scenarios related to SSL\r\nhandshake timeouts, thereby enhancing the robustness and effectiveness\r\nof our test suite.\r\n\r\nResult:\r\nFixes #13926.\r\n\r\nThis pull request resolves the challenge of inaccessible constructors\r\nfor SslHandshakeTimeoutException.s. With this enhancement, we can now\r\nthoroughly test and validate scenarios involving SSL handshake timeouts,\r\nensuring the reliability and effectiveness of our tests.",
          "commitUrl": "https://github.com/netty/netty/commit/a3052bc6c11e92bc4e95b875b7209659c79938b0",
          "parents": {
            "nodes": [
              {
                "oid": "c55ffbe1d6760155838dbaf82fc41421e0701b87",
                "message": "Rewrite ZstdDecoder to remove the need of allocate a huge byte[] inte\u2026 (#13928)\n\n\u2026rnally\r\n\r\nMotivation:\r\n\r\nWe can just use our own buffering that is provided by\r\nByteToMessageDecoder to reduce the GC pressure and memory overhead.\r\n\r\nModifications:\r\n\r\nRewrite our ZstdDecoder to reduce extra buffering.\r\n\r\nResult:\r\n\r\nObsolate https://github.com/netty/netty/pull/13911"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/SslHandshakeTimeoutException.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85qsAan2gAoOWEwYzkyZTFjZWQ3ZjZhYTk0Mjk4NDJhOWU4MmQ3NjBjMzU5Y2UwNw",
                "url": "https://github.com/netty/netty/pull/13929/commits/9a0c92e1ced7f6aa9429842a9e82d760c359ce07"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13926,
                "url": "https://github.com/netty/netty/issues/13926",
                "title": "Cannot test SslHandshakeTimeoutException as the constructor in the SslHandshakeTimeoutException is protected",
                "bodyHTML": "<p dir=\"auto\">I want to test my handling of SslHandshakeTimeoutException just I cannot throw this exception in JUnit test as the constructor is protected.</p>",
                "resourcePath": "/netty/netty/issues/13926",
                "createdAt": "2024-03-25T14:15:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Avoid copying of MqttPublishMessage.payload byte buffer",
        "url": "https://github.com/netty/netty/pull/13939",
        "resourcePath": "/netty/netty/pull/13939",
        "createdAt": "2024-03-29T09:50:34Z",
        "number": 13939,
        "mergeCommit": null,
        "potentialMergeCommit": {
          "oid": "8d22d830eb876401ca8044aa61b798f6aa49fefc",
          "message": "Merge 27b5a92acff18c996cde11b0fa87ff27c592f5c2 into 2e413d6c73aac00d4541bab119c7a2c330bf8235",
          "commitUrl": "https://github.com/netty/netty/commit/8d22d830eb876401ca8044aa61b798f6aa49fefc",
          "parents": {
            "nodes": [
              {
                "oid": "2e413d6c73aac00d4541bab119c7a2c330bf8235",
                "message": "Add more JDK versions to the devcontainers (#14008)\n\nMotivation:\n\nWe should add also other JDKs to the docker images that are used by\ndevcontainers so its easier to debug with different JDKs\n\nModifications:\n\nAdd Java 8,11,17\n\nResult:\n\nEasier to debug with devcontainers\n\n---------\n\nCo-authored-by: Chris Vest <christianvest_hansen@apple.com>"
              },
              {
                "oid": "27b5a92acff18c996cde11b0fa87ff27c592f5c2",
                "message": "Release the payload in MqttEncoder"
              }
            ]
          }
        },
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-mqtt/src/main/java/io/netty/handler/codec/mqtt/MqttMessageBuilders.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-mqtt/src/test/java/io/netty/handler/codec/mqtt/MqttCodecTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85rJlYS2gAoMjdiNWE5MmFjZmYxOGM5OTZjZGUxMWIwZmE4N2ZmMjdjNTkyZjVjMg",
                "url": "https://github.com/netty/netty/pull/13939/commits/27b5a92acff18c996cde11b0fa87ff27c592f5c2"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13844,
                "url": "https://github.com/netty/netty/issues/13844",
                "title": "Mqtt payload for publish message copied 2 times during lifetime",
                "bodyHTML": "<h3 dir=\"auto\">PublishBuilder.build():</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        public MqttPublishMessage build() {\n            MqttFixedHeader mqttFixedHeader = new MqttFixedHeader(MqttMessageType.PUBLISH, false, qos, retained, 0);\n            MqttPublishVariableHeader mqttVariableHeader =\n                    new MqttPublishVariableHeader(topic, messageId, mqttProperties);\n            return new MqttPublishMessage(mqttFixedHeader, mqttVariableHeader, Unpooled.buffer().writeBytes(payload));\n        }\"><pre class=\"notranslate\"><code class=\"notranslate\">        public MqttPublishMessage build() {\n            MqttFixedHeader mqttFixedHeader = new MqttFixedHeader(MqttMessageType.PUBLISH, false, qos, retained, 0);\n            MqttPublishVariableHeader mqttVariableHeader =\n                    new MqttPublishVariableHeader(topic, messageId, mqttProperties);\n            return new MqttPublishMessage(mqttFixedHeader, mqttVariableHeader, Unpooled.buffer().writeBytes(payload));\n        }\n</code></pre></div>\n<p dir=\"auto\">has <code class=\"notranslate\">Unpooled.buffer().writeBytes(payload)</code>. This is one is not big deal as we can easily overcome it.</p>\n<h3 dir=\"auto\">MqttEncoder.encodePublishMessage:</h3>\n<p dir=\"auto\"><code class=\"notranslate\">ByteBuf payload = message.payload().duplicate();</code></p>\n<p dir=\"auto\">My understanding, the authors were playing safe, however 2 copies, seems like overkill. WDYT? Should I fix it?</p>",
                "resourcePath": "/netty/netty/issues/13844",
                "createdAt": "2024-02-14T15:32:55Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make /etc/resolv.conf reading more robust",
        "url": "https://github.com/netty/netty/pull/13951",
        "resourcePath": "/netty/netty/pull/13951",
        "createdAt": "2024-04-04T20:55:49Z",
        "number": 13951,
        "mergeCommit": {
          "oid": "c1d0fd2dbf7907a99ab702795e35d9de8068c1cb",
          "message": "Make /etc/resolv.conf reading more robust (#13951)\n\nMotivation:\r\nIt is possible that /etc/resolv.conf is missing or cannot be read, in\r\nwhich case `ResolvConf.system()` will throw an exception. We need to\r\nhandle that exception in `DefaultDnsServerAddressStreamProvider`, since\r\nexceptions thrown from a static initializer can become\r\n`NoClassDefFoundError`.\r\n\r\nModification:\r\nCatch the exception that `ResolvConf.system()` might throw, an fall back\r\nto JNDI in that case.\r\n\r\nResult:\r\nNo more `NoClassDefFoundError` being thrown when `/etc/resolv.conf`\r\ncannot be read for any reason.\r\n\r\nFixes #13949",
          "commitUrl": "https://github.com/netty/netty/commit/c1d0fd2dbf7907a99ab702795e35d9de8068c1cb",
          "parents": {
            "nodes": [
              {
                "oid": "b0e43847a8c78325ea7dd8bb02934ed6c690cb9c",
                "message": "Add devcontainers for Linux (#13948)\n\nMotivation:\r\nLinux is the most important deployment OS, but a significant amount of\r\ndevelopment takes place on Windows and MacOS. Devcontainers allow\r\ndevelopers to quickly spin up a Docker container, to run their IDE\r\ninside a native Linux environment. This is helpful for debugging and\r\ntesting.\r\nIntellij IDEA Ultimate and Visual Studio Code both have support for\r\ndevcontainers.\r\n\r\nModifications:\r\nAdd devcontainer spec files for Alpine (a musl-libc environment) and\r\nUbuntu (a glibc environment).\r\n\r\nResult:\r\nIt's now possible to run an IDE in a Linux devcontainer environment on\r\nWindows and MacOS. Although, I have only actually tested this with\r\nIntellij IDEA on MacOS. Actual IDE support may vary across IDEs and\r\nplatforms. For instance, Intellij IDEA does not support Alpine because\r\nthe JetBrainsRuntime (a vendored JDK) does not provide musl-libc\r\ncompatible builds."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "resolver-dns/src/main/java/io/netty/resolver/dns/DefaultDnsServerAddressStreamProvider.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85rwwMS2gAoYTVjYWRmOGJkMTI2NjIyYWU4M2QxZTA1YTAyZDY3NmE2YmE1YmVkOQ",
                "url": "https://github.com/netty/netty/pull/13951/commits/a5cadf8bd126622ae83d1e05a02d676a6ba5bed9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13949,
                "url": "https://github.com/netty/netty/issues/13949",
                "title": "DefaultDnsServerAddressStreamProvider fails when /etc/resolv.conf is not present on ZOS",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">DefaultDnsServerAddressStreamProvider</code> should fallback to the existing lookup if <code class=\"notranslate\">/etc/resolv.conf</code> is not present</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">IllegalStateException</code> that finally leads to a <code class=\"notranslate\">NoClassDefFoundError</code> when <code class=\"notranslate\">DnsServerAddresses.defaultAddressList()</code> is called on ZOS.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">rename <code class=\"notranslate\">/etc/resolv.conf</code> and call e.g. <code class=\"notranslate\">DnsServerAddresses.defaultAddressList()</code></p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">Issue was introduced with <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2166574199\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/13884\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/13884/hovercard\" href=\"https://github.com/netty/netty/pull/13884\">#13884</a>, so <code class=\"notranslate\">4.1.108.Final</code></p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java version &quot;1.8.0_391&quot;\nJava(TM) SE Runtime Environment (build 8.0.8.15 - pmz3180sr8fp15-20231030_01(SR8 FP15))\nIBM J9 VM (build 2.9, JRE 1.8.0 z/OS s390-31-Bit 20230908_57744 (JIT enabled, AOT enabled)\nOpenJ9  - ec90c19\nOMR   - 8b64d40\nIBM   - 696e9df)\nJCL - 20231012_01 based on Oracle jdk8u391-b13\"><pre class=\"notranslate\"><code class=\"notranslate\">java version \"1.8.0_391\"\nJava(TM) SE Runtime Environment (build 8.0.8.15 - pmz3180sr8fp15-20231030_01(SR8 FP15))\nIBM J9 VM (build 2.9, JRE 1.8.0 z/OS s390-31-Bit 20230908_57744 (JIT enabled, AOT enabled)\nOpenJ9  - ec90c19\nOMR   - 8b64d40\nIBM   - 696e9df)\nJCL - 20231012_01 based on Oracle jdk8u391-b13\n</code></pre></div>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"OS/390 TVT6016 28.00 04 2964\"><pre class=\"notranslate\"><code class=\"notranslate\">OS/390 TVT6016 28.00 04 2964\n</code></pre></div>",
                "resourcePath": "/netty/netty/issues/13949",
                "createdAt": "2024-04-04T06:10:30Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix Zstd throws Exception on read-only volumes (#13978)",
        "url": "https://github.com/netty/netty/pull/13982",
        "resourcePath": "/netty/netty/pull/13982",
        "createdAt": "2024-04-17T15:12:45Z",
        "number": 13982,
        "mergeCommit": {
          "oid": "5834cdb9766f9a8935f23fbbadcd029d3b815820",
          "message": "Fix Zstd throws Exception on read-only volumes (#13978) (#13982)\n\nMotivation:\r\n\r\nWhen deploying Netty on a read-only volume (e.g, within a Docker\r\ncontainer) with \"zstd-jni\" included in the classpath, initialization of\r\nzstd will fail because it requires unpacking files into a temporary\r\ndirectory. Therefore, it is crucial to verify whether zstd can be\r\ninitialized, rather than merely checking for the presence of the library\r\nin the classpath.\r\n\r\nModification:\r\n\r\nDuring the verification process for the presence of \"zstd-jni\" in the\r\nclasspath, the system will also attempt to initialize the library. This\r\ninitialization follows a pattern similar to that used for the Brotli\r\nlibrary check.\r\n\r\nResult:\r\n\r\nFixes #13978.\r\n\r\nCo-authored-by: Daniel K\u00e4s <daniel.kaes@eviden.com>",
          "commitUrl": "https://github.com/netty/netty/commit/5834cdb9766f9a8935f23fbbadcd029d3b815820",
          "parents": {
            "nodes": [
              {
                "oid": "36bd5a976db85b35ff32b458c855cc85a58a5447",
                "message": "Expose HTTP/2 decoder safety settings on Http2ConnectionHandlerBuilder (#13983)\n\nMotivation:\r\nWe've added a number of safety settings for HTTP/2 decoding to the\r\nAbstractHttp2ConnectionHandlerBuilder, and exposed them on\r\nHttp2FrameCodecBuilder and Http2MultiplexCodecBuilder, but not\r\nHttp2ConnectionHandlerBuilder.\r\n\r\nModification:\r\nAdd the missing overrides to Http2ConnectionHandlerBuilder so people who\r\nuse that API can configure these things as well.\r\n\r\nResult:\r\nIt is now possible to configure the precise behavior of the mitigations\r\nfor Empty Frame Flooding (CVE-2019-9518) and Rapid Reset\r\n(CVE-2023-44487) when using the Http2ConnectionHandlerBuilder."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec/src/main/java/io/netty/handler/codec/compression/Zstd.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85s779-2gAoNGMwYTEyZDY4NGNjNGFjZGU0OThmOWQ5ZWUzNTkyNmE4MTQwMmZlNQ",
                "url": "https://github.com/netty/netty/pull/13982/commits/4c0a12d684cc4acde498f9d9ee35926a81402fe5"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13978,
                "url": "https://github.com/netty/netty/issues/13978",
                "title": "ZstdConstants thows ExceptionInInitializerError on read-only volumes",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">Like in Netty versions lower than 4.1.108.Final, using ZstdConstants should not throw an Exception on read-only volumes. Especially not if Zstd is not used at all.</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">When the application that is using Netty 4.1.108.Final is running on a read-only volume, where no temporary java temp directory is available, it throws the following StackTrace, although Zstd is not used in http communication:</p>\n<p dir=\"auto\"><code class=\"notranslate\">java.lang.ExceptionInInitializerError: Cannot unpack libzstd-jni-1.5.5-1: Read-only file system at java.base/java.io.UnixFileSystem.createFileExclusively(Native Method) at java.base/java.io.File.createTempFile(File.java:2170) at com.github.luben.zstd.util.Native.load(Native.java:129) at com.github.luben.zstd.util.Native.load(Native.java:85) at com.github.luben.zstd.Zstd.&lt;clinit&gt;(Zstd.java:13) at io.netty.handler.codec.compression.ZstdConstants.&lt;clinit&gt;(ZstdConstants.java:25) at io.netty.handler.codec.compression.ZstdOptions.&lt;clinit&gt;(ZstdOptions.java:41) at io.netty.handler.codec.compression.StandardCompressionOptions.zstd(StandardCompressionOptions.java:54) at io.micronaut.http.server.netty.handler.Compressor.&lt;init&gt;(Compressor.java:62) at io.micronaut.http.server.netty.handler.PipeliningServerHandler.setCompressionStrategy(PipeliningServerHandler.java:142) at io.micronaut.http.server.netty.HttpPipelineBuilder$StreamPipeline.insertMicronautHandlers(HttpPipelineBuilder.java:622) at io.micronaut.http.server.netty.HttpPipelineBuilder$StreamPipeline.insertHttp1DownstreamHandlers(HttpPipelineBuilder.java:638) at io.micronaut.http.server.netty.HttpPipelineBuilder$ConnectionPipeline.configureForHttp1(HttpPipelineBuilder.java:380) at io.micronaut.http.server.netty.HttpPipelineBuilder$ConnectionPipeline.initChannel(HttpPipelineBuilder.java:299) at io.micronaut.http.server.netty.NettyHttpServer$Listener.initChannel(NettyHttpServer.java:892) at io.netty.channel.ChannelInitializer.initChannel(ChannelInitializer.java:129) at io.netty.channel.ChannelInitializer.handlerAdded(ChannelInitializer.java:112) at io.netty.channel.AbstractChannelHandlerContext.callHandlerAdded(AbstractChannelHandlerContext.java:1130) at io.netty.channel.DefaultChannelPipeline.callHandlerAdded0(DefaultChannelPipeline.java:609) at io.netty.channel.DefaultChannelPipeline.access$100(DefaultChannelPipeline.java:46) at io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask.execute(DefaultChannelPipeline.java:1463) at io.netty.channel.DefaultChannelPipeline.callHandlerAddedForAllHandlers(DefaultChannelPipeline.java:1115) at io.netty.channel.DefaultChannelPipeline.invokeHandlerAddedIfNeeded(DefaultChannelPipeline.java:650) at io.netty.channel.AbstractChannel$AbstractUnsafe.register0(AbstractChannel.java:514) at io.netty.channel.AbstractChannel$AbstractUnsafe.access$200(AbstractChannel.java:429) at io.netty.channel.AbstractChannel$AbstractUnsafe$1.run(AbstractChannel.java:486) at io.netty.util.concurrent.AbstractEventExecutor.runTask(AbstractEventExecutor.java:173) at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:166) at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:470) at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:569) at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) at java.base/java.lang.Thread.run(Thread.java:840)</code></p>\n<p dir=\"auto\">In versions lower than 4.1.108.Final, ZstdConstants were using plain numbers to initialize static constants.<br>\nIn version 4.1.108.Final, ZstdConstants seems to use method calls to a zstd library to initialize these static constants, which fail on read-only volumes, because the zstd library tries to unpack libzstd-jni-1.5.5-1.</p>\n<p dir=\"auto\">Applications based on e.g. Micronaut 4.3.7 are not even able to start anymore.</p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">4.1.108.Final</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">openjdk version \"17.0.10\" 2024-01-16 LTS<br>\nOpenJDK Runtime Environment Corretto-17.0.10.7.1 (build 17.0.10+7-LTS)<br>\nOpenJDK 64-Bit Server VM Corretto-17.0.10.7.1 (build 17.0.10+7-LTS, mixed mode, sharing)</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Linux c579b42069c4 5.10.102.1-microsoft-standard-WSL2 <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"418688\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/1\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/1/hovercard\" href=\"https://github.com/netty/netty/pull/1\">#1</a> SMP Wed Mar 2 00:30:59 UTC 2022 x86_64 Linux</p>",
                "resourcePath": "/netty/netty/issues/13978",
                "createdAt": "2024-04-15T07:56:25Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add no-value key handling only for form body",
        "url": "https://github.com/netty/netty/pull/13998",
        "resourcePath": "/netty/netty/pull/13998",
        "createdAt": "2024-04-23T13:28:05Z",
        "number": 13998,
        "mergeCommit": {
          "oid": "a300058380ec531db9af9d18585bd732e3039355",
          "message": "Add no-value key handling only for form body (#13998)\n\nMotivation:\r\n\r\nThis is a fix for issue #13981 that reports a changed behaviour of\r\nHttpPostStandardRequestDecoder after this PR -\r\nhttps://github.com/netty/netty/pull/13908\r\n\r\nBecause HttpPostStandardRequestDecoder changed the contract, some code\r\nimplementations relying on certain parsing are failing\r\n\r\n\r\nModification:\r\n\r\nThis PR makes sure, that the edge case handling for form body happenes\r\nonly when the content is in fact form body\r\n\r\nResult:\r\n\r\nFixes #13981",
          "commitUrl": "https://github.com/netty/netty/commit/a300058380ec531db9af9d18585bd732e3039355",
          "parents": {
            "nodes": [
              {
                "oid": "d868c7b5926c0c00a2367543ba91901072cce636",
                "message": "Support bc-fips in BouncyCastleSelfSignedCertGenerator (#13954)\n\nMotivation:\n\nWhen using the bouncycastle FIPS dependencies (bcpkix-fips instead of\nbcpkix, and bc-fips instead of bcprov), BouncyCastleProvider is replaced\nby BouncyCastleFipsProvider. This made\nBouncyCastleSelfSignedCertGenerator fail even though all the necessary\nalgorithms are present.\n\nWhile bc-fips is only necessary for fips-compliant production\ndeployments, and self-signed certs are only necessary in test\ndeployments that don't have to be fips-compliant, this change is still\nuseful because the fips and non-fips artifacts cannot exist alongside\neach other. So if you have a prod fips dependency, tests that also have\na non-fips dependency for self-signed certs cannot live alongside each\nother. It's easiest to just use the fips dependency everywhere.\n\nModification:\n\nUse reflection in BouncyCastleSelfSignedCertGenerator to instantiate\nwhichever provider is available. This has the advantage of not needing a\nnew dependency, though it may have some impact on native image\ndeployments. For this reason I've also added the providers to the\nreflect-config.json.\n\nNo test is possible because it would require a different classpath. I\ntested manually that it works by changing to the fips dependencies and\nthen running SelfSignedCertificateTest, and checking with a debugger\nthat the correct provider was used.\n\nResult:\n\nSelfSignedCertificate will work with bc-fips dependencies."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostStandardRequestDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostStandardRequestDecoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85teh1-2gAoNzk2ODQ4YmIwMmNmY2I1MDI2ZTQwMGI1MDAwOWMxZDA2MjM4Mzk3Yw",
                "url": "https://github.com/netty/netty/pull/13998/commits/796848bb02cfcb5026e400b50009c1d06238397c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13981,
                "url": "https://github.com/netty/netty/issues/13981",
                "title": "JSON in POST request treated as body attribute in HttpPostStandardRequestDecoder",
                "bodyHTML": "<h3 dir=\"auto\">Expected behavior</h3>\n<p dir=\"auto\">JSON in POST request shouldn't be counted as body attribute in <code class=\"notranslate\">HttpPostStandardRequestDecoder</code>, as in releases <code class=\"notranslate\">&lt;4.1.108-Final</code> (checked on <code class=\"notranslate\">4.1.107.Final</code> and <code class=\"notranslate\">4.1.106.Final</code>)</p>\n<h3 dir=\"auto\">Actual behavior</h3>\n<p dir=\"auto\">JSON in POST request is treated as body attribute in <code class=\"notranslate\">HttpPostStandardRequestDecoder</code>, and an attribute is created with key equal to JSON and empty value</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<p dir=\"auto\">Send a POST request to netty <code class=\"notranslate\">&gt;=4.1.108-Final</code>, decode the request using <code class=\"notranslate\">HttpPostRequestDecoder</code> and check <code class=\"notranslate\">.getBodyHttpDatas() </code> The resulting list will contain Attribute HttpData where the key is a JSON sent by a client, and value is empty</p>\n<h3 dir=\"auto\">Minimal yet complete reproducer code (or URL to code)</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class NettyReproduction {\n    public static void main(String[] args) {\n        FullHttpRequest request = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.POST, &quot;/netty/reproduction&quot;,\n            Unpooled.wrappedBuffer(&quot;&quot;&quot;\n                {\n                    &quot;netty&quot;: &quot;reproduction&quot;\n                }\n                &quot;&quot;&quot;.getBytes(StandardCharsets.UTF_8)));\n        var decoder = new HttpPostRequestDecoder(request);\n        var result = decoder.getBodyHttpDatas();\n        System.out.println(result); \n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">public class NettyReproduction {\n    public static void main(String[] args) {\n        FullHttpRequest request = new DefaultFullHttpRequest(HttpVersion.HTTP_1_1, HttpMethod.POST, \"/netty/reproduction\",\n            Unpooled.wrappedBuffer(\"\"\"\n                {\n                    \"netty\": \"reproduction\"\n                }\n                \"\"\".getBytes(StandardCharsets.UTF_8)));\n        var decoder = new HttpPostRequestDecoder(request);\n        var result = decoder.getBodyHttpDatas();\n        System.out.println(result); \n    }\n}\n</code></pre></div>\n<p dir=\"auto\">results in:<br>\n<code class=\"notranslate\">[Mixed: {    \"netty\": \"reproduction\"}=]</code> on <code class=\"notranslate\">4.1.109.Final</code> and <code class=\"notranslate\">4.1.108.Final</code></p>\n<p dir=\"auto\">but results in:<br>\n<code class=\"notranslate\">[]</code> on <code class=\"notranslate\">4.1.107.Final</code> and <code class=\"notranslate\">4.1.106.Final</code></p>\n<h3 dir=\"auto\">Netty version</h3>\n<p dir=\"auto\">as above</p>\n<h3 dir=\"auto\">JVM version (e.g. <code class=\"notranslate\">java -version</code>)</h3>\n<p dir=\"auto\">Java 21</p>\n<h3 dir=\"auto\">OS version (e.g. <code class=\"notranslate\">uname -a</code>)</h3>\n<p dir=\"auto\">Windows 10,<br>\nand <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Rufusmen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Rufusmen\">@Rufusmen</a> reproduced on Linux (Ubuntu 22.04.4 LTS x86_64)</p>\n<p dir=\"auto\">We suspect that the reason for such change is this PR: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2187656213\" data-permission-text=\"Title is private\" data-url=\"https://github.com/netty/netty/issues/13908\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/netty/netty/pull/13908/hovercard\" href=\"https://github.com/netty/netty/pull/13908\">#13908</a> , thus we are wondering if such behaviour is desired, if the decoder decodes something different than <code class=\"notranslate\">x-www-form-urlencoded</code></p>",
                "resourcePath": "/netty/netty/issues/13981",
                "createdAt": "2024-04-17T14:11:17Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Update BouncyCastle from 1.69 to 1.78.1",
        "url": "https://github.com/netty/netty/pull/14003",
        "resourcePath": "/netty/netty/pull/14003",
        "createdAt": "2024-04-25T22:57:30Z",
        "number": 14003,
        "mergeCommit": {
          "oid": "120b969d2d66bbe461a6715b164fc8d7f975e03d",
          "message": "Update BouncyCastle from 1.69 to 1.78.1 (#14003)\n\nMotivation:\r\nThe update was held back by a compatibility.\r\nSince in 4.2 we've moved the JDK baseline from Java 6 to Java 8 anyway,\r\nwe have the opportunity to bump the BC version as well.\r\n\r\nModification:\r\nSwitch all BouncyCastle dependencies from \"-jdk15on\" to \"-jdk18on\", and\r\nupdate them to the latest version.\r\n\r\nResult:\r\nFixes #13561",
          "commitUrl": "https://github.com/netty/netty/commit/120b969d2d66bbe461a6715b164fc8d7f975e03d",
          "parents": {
            "nodes": [
              {
                "oid": "7bbb859e79af5289f9c6a2d2db04c93d65fae328",
                "message": "Bump japicmp to 0.21.0 (#13995)\n\nMotivation:\r\n\r\nBump japicmp to 0.21.0\r\n\r\nModification:\r\n\r\nThere was an issue in the newer version, but after reported now it's\r\nfixed.\r\nhttps://github.com/siom79/japicmp/issues/393\r\nhttps://github.com/siom79/japicmp/issues/394\r\n\r\nResult:\r\n\r\nBump japicmp to 0.21.0\r\n\r\n---------\r\n\r\nCo-authored-by: Norman Maurer <norman_maurer@apple.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "example/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler-proxy/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler-ssl-ocsp/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "handler/src/main/java/io/netty/handler/ssl/BouncyCastlePemReader.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "testsuite/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-blockhound-tests/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-epoll/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "transport-native-kqueue/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABA-c85tyBtI2gAoOGYxMzc1YzczZjNjZjI1ZTIzMGMwZmQxZmYzYTA1MWVkY2FjNmQ1OA",
                "url": "https://github.com/netty/netty/pull/14003/commits/8f1375c73f3cf25e230c0fd1ff3a051edcac6d58"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 13561,
                "url": "https://github.com/netty/netty/issues/13561",
                "title": "Updating BouncyCastle will be a breaking change",
                "bodyHTML": "<p dir=\"auto\">As of Netty 4.1.96.Final, we're depending (optionally) on BouncyCastle release 1.68.</p>\n<p dir=\"auto\">In BC release 1.71 and onwards, the Java version baseline of <code class=\"notranslate\">-jdk15on</code> packages was bumped from Java 1.5 to Java 1.8:</p>\n<blockquote>\n<p dir=\"auto\"><strong>Java Version Details</strong> With the arrival of Java 15. jdk15 is not quite as unambiguous as it was. The jdk18on jars are compiled to work with anything from Java 1.8 up. They are also multi-release jars so do support some features that were introduced in Java 9, Java 11, and Java 15. If you have issues with multi-release jars see the jdk15to18 release jars below.</p>\n<p dir=\"auto\"><strong>Packaging Change (users of 1.70 or earlier):</strong> BC 1.71 changed the jdk15on jars to jdk18on so the base has now moved to Java 8. For earlier JVMs, or containers/applications that cannot cope with multi-release jars, you should now use the jdk15to18 jars.</p>\n</blockquote>\n<p dir=\"auto\">Since the Netty 4.1.x baseline Java version is 1.6, we would have to switch our dependencies to use the <code class=\"notranslate\">-jdk15to18</code> packages.<br>\nHowever, this changes the Maven coordinates of where we get our BouncyCastle, which means that downstream projects that overwrite/bump/exclude the Netty version currently do so expecting a <code class=\"notranslate\">-jdk15on</code> artifact name that this upgrade would no longer match. This can lead to projects having multiple, mismatched, versions of BouncyCastle on their class path \u2013 and we have enough of that with our own modules already.</p>\n<p dir=\"auto\">If we on the other hand keep using the <code class=\"notranslate\">-jdk15on</code> packages, we would keep such Maven dependency fiddling working, but we would be dropping support for using BC on Java 1.6 and 1.7.</p>\n<p dir=\"auto\">Either way, upgrading BouncyCastle will be a breaking change. Or we can do nothing and downstream projects will have to upgrade/override/exclude, etc. our BC dependency.</p>\n<p dir=\"auto\">What's the preferred approach?</p>",
                "resourcePath": "/netty/netty/issues/13561",
                "createdAt": "2023-08-21T21:07:09Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  }
]