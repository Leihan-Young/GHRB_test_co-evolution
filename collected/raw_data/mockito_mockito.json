[
  {
    "repository": {
      "pullRequest": {
        "title": "Unified logic of argument matching and capturing",
        "url": "https://github.com/mockito/mockito/pull/635",
        "resourcePath": "/mockito/mockito/pull/635",
        "createdAt": "2016-09-12T20:15:57Z",
        "number": 635,
        "mergeCommit": {
          "oid": "120d2204f8ebe68b5c3d6c3e587df40777a5a3a5",
          "message": "Merge pull request #635 from ChristianSchwarz/matcher_strategy\n\nUnified logic of argument matching and capturing",
          "commitUrl": "https://github.com/mockito/mockito/commit/120d2204f8ebe68b5c3d6c3e587df40777a5a3a5",
          "parents": {
            "nodes": [
              {
                "oid": "c1830b5333281a09047ebce8a86fcda9ef73bda1",
                "message": "Increment version '2.2.4' -> '2.2.5' by Travis CI build 1629 [ci skip]"
              },
              {
                "oid": "968fea67bef5bb284903b239537bda62dde786e1",
                "message": "fixed failing test with vararg-aware matcher"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/invocation/ArgumentMatcherAction.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/main/java/org/mockito/internal/invocation/ArgumentsComparator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/invocation/InvocationMatcher.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/invocation/MatcherApplicationStrategy.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/invocation/TypeSafeMatching.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/test/java/org/mockito/internal/invocation/ArgumentsComparatorTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/invocation/MatcherApplicationStrategyTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/invocation/TypeSafeMatchingTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/util/reflection/FieldInitializerTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/matchers/VarargsTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0ODQ5MzY3NzU6OTY4ZmVhNjdiZWY1YmIyODQ5MDNiMjM5NTM3YmRhNjJkZGU3ODZlMQ==",
                "url": "https://github.com/mockito/mockito/pull/635/commits/968fea67bef5bb284903b239537bda62dde786e1"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 439,
                "url": "https://github.com/mockito/mockito/issues/439",
                "title": "ArgumentCaptor and ArgumentMatcher can't be mixed in varargs",
                "bodyHTML": "<p dir=\"auto\">In the given test below the ArgumentCaptor should captor only the char 'c':</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Captor\n    private ArgumentCaptor&lt;Character&gt; argumentCaptor;\n\n    @Test\n    public void capturesVararg() throws Exception {\n        mock.varargs(42, 'c');\n\n        verify(mock).varargs(eq(42), argumentCaptor.capture());\n\n       assertThat(argumentCaptor.getAllValues()).containsExactly('c');\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    @Captor\n    private ArgumentCaptor&lt;Character&gt; argumentCaptor;\n\n    @Test\n    public void capturesVararg() throws Exception {\n        mock.varargs(42, 'c');\n\n        verify(mock).varargs(eq(42), argumentCaptor.capture());\n\n       assertThat(argumentCaptor.getAllValues()).containsExactly('c');\n    }\n</code></pre></div>\n<p dir=\"auto\">The test fails with this message:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Actual and expected should have same size but actual size was:\n  &lt;2&gt;\nwhile expected size was:\n  &lt;1&gt;\nActual was:\n  &lt;[42, 'c']&gt;\nExpected was:\n  &lt;['c']&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">Actual and expected should have same size but actual size was:\n  &lt;2&gt;\nwhile expected size was:\n  &lt;1&gt;\nActual was:\n  &lt;[42, 'c']&gt;\nExpected was:\n  &lt;['c']&gt;\n</code></pre></div>\n<p dir=\"auto\">Note that we see here 2 bugs:</p>\n<ul dir=\"auto\">\n<li>a wrong argument index was captored</li>\n<li>an <code class=\"notranslate\">int</code>was captored by an  <code class=\"notranslate\">ArgumentCaptor&lt;Character&gt;</code> -&gt; <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"171595839\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/565\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/565/hovercard\" href=\"https://github.com/mockito/mockito/issues/565\">#565</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/439",
                "createdAt": "2016-06-18T21:51:46Z",
                "labels": {
                  "edges": []
                }
              }
            },
            {
              "node": {
                "number": 583,
                "url": "https://github.com/mockito/mockito/issues/583",
                "title": "ArgumentCaptor: NPE when an null array is passed to a varargs method",
                "bodyHTML": "<p dir=\"auto\">A NullPointerException is thrown if an null array is passed to a varargs method.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Test\npublic void shouldCaptureVarArgs_nullArrayArg() {\n        String[] argArray = null;\n        mock.varargs(argArray);\n\n        verify(mock).varargs(captor.capture()); //&lt;- Kaboom NPE\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@Test\npublic void shouldCaptureVarArgs_nullArrayArg() {\n        String[] argArray = null;\n        mock.varargs(argArray);\n\n        verify(mock).varargs(captor.capture()); //&lt;- Kaboom NPE\n}\n</code></pre></div>\n<p dir=\"auto\">Since an vararg is simply an array the ArgumentCaptor should reject it silently. This relates to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"171595839\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/565\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/565/hovercard\" href=\"https://github.com/mockito/mockito/issues/565\">#565</a>.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException\n    at java.lang.reflect.Array.getLength(Native Method)\n    at org.mockito.internal.invocation.InvocationMatcher.captureVarargsPart(InvocationMatcher.java:142)\n    at org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:122)\n    at org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:24)\n    at org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:18)\n    at org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:43)\n    at org.mockito.internal.verification.Times.verify(Times.java:40)\n    at org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)\n    at org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:73)\n    at org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:32)\n    at org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)\n    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:36)\n    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.access$0(MockMethodInterceptor.java:32)\n    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(MockMethodInterceptor.java:113)\n    at org.mockitousage.IMethods$MockitoMock$81506210.varargs(Unknown Source)\n    at org.mockitousage.matchers.VarargsTest.shouldCaptureVarArgs_nullArrayArg(VarargsTest.java:182)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.NullPointerException\n    at java.lang.reflect.Array.getLength(Native Method)\n    at org.mockito.internal.invocation.InvocationMatcher.captureVarargsPart(InvocationMatcher.java:142)\n    at org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:122)\n    at org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:24)\n    at org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:18)\n    at org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:43)\n    at org.mockito.internal.verification.Times.verify(Times.java:40)\n    at org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)\n    at org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:73)\n    at org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:32)\n    at org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)\n    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:36)\n    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.access$0(MockMethodInterceptor.java:32)\n    at org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(MockMethodInterceptor.java:113)\n    at org.mockitousage.IMethods$MockitoMock$81506210.varargs(Unknown Source)\n    at org.mockitousage.matchers.VarargsTest.shouldCaptureVarArgs_nullArrayArg(VarargsTest.java:182)\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/583",
                "createdAt": "2016-08-23T11:26:41Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "bug"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #707, adds throwable to arity answers, also improved javadoc",
        "url": "https://github.com/mockito/mockito/pull/711",
        "resourcePath": "/mockito/mockito/pull/711",
        "createdAt": "2016-10-24T10:31:38Z",
        "number": 711,
        "mergeCommit": {
          "oid": "5d74ab11bc7358b195429e275c9fe8f29fb55ffe",
          "message": "Fixes #707, adds throwable to arity answers, also improved javadoc (#711)",
          "commitUrl": "https://github.com/mockito/mockito/commit/5d74ab11bc7358b195429e275c9fe8f29fb55ffe",
          "parents": {
            "nodes": [
              {
                "oid": "f9f6d21974d530030ea731f21ad2da016ce14ada",
                "message": "Linked to wiki page about versioning in Mockito\n\n[ci skip]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/Answer1.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/Answer2.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/Answer3.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/Answer4.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/Answer5.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/VoidAnswer1.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/VoidAnswer2.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/VoidAnswer3.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/VoidAnswer4.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/VoidAnswer5.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0OTA1ODYzMzA6Y2RhNDdjMTYzNzM1OGVhYjYxODZjMGM1YmNmZTNiNzMxMDU3OTY5Yg==",
                "url": "https://github.com/mockito/mockito/pull/711/commits/cda47c1637358eab6186c0c5bcfe3b731057969b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 707,
                "url": "https://github.com/mockito/mockito/issues/707",
                "title": "Improve usability of arity Answers with regards to checked exceptions",
                "bodyHTML": "<p dir=\"auto\">Recently introduced Answer1 style answers don't declare Throwable. They should! Otherwise the user is forced to add boilerplate code to AnswerX implementations, whenever they use methods that declare checked exceptions. Plus, AnswerX should behave exactly as good old Answer interface!</p>\n<p dir=\"auto\">Reported via the <a href=\"https://groups.google.com/d/msgid/mockito/82d08ba9-5536-495e-90db-78c1062b6400%40googlegroups.com\" rel=\"nofollow\">mailing-list</a></p>",
                "resourcePath": "/mockito/mockito/issues/707",
                "createdAt": "2016-10-21T22:28:34Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "bug"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Removes deprecated way of documenting package by package-info.java",
        "url": "https://github.com/mockito/mockito/pull/745",
        "resourcePath": "/mockito/mockito/pull/745",
        "createdAt": "2016-11-07T18:05:31Z",
        "number": 745,
        "mergeCommit": {
          "oid": "f0fdf8f7daea88faeaf845fb8e2f2eae805190ac",
          "message": "Remove deprecated package.html way of documenting package by package-info.java (#745)",
          "commitUrl": "https://github.com/mockito/mockito/commit/f0fdf8f7daea88faeaf845fb8e2f2eae805190ac",
          "parents": {
            "nodes": [
              {
                "oid": "b77711f21d1e72fe637a6841fb62b5d7327a20fd",
                "message": "Removed ABI Laboratory for now.\n\n[ci skip]\n\nSigned-off-by: Brice Dutheil <brice.dutheil@gmail.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/stubbing/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/main/java/org/mockito/stubbing/package.html"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/verification/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/concurrentmockito/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitointegration/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/internal/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/test/java/org/mockitousage/internal/package.html"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/test/java/org/mockitousage/package.html"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0OTI2MzM5MjU6YjhjNDdiODA4M2Q1ZWVkMWMzNGIwNTI5N2VjM2FlMTkzMjM1YWU4MA==",
                "url": "https://github.com/mockito/mockito/pull/745/commits/b8c47b8083d5eed1c34b05297ec3ae193235ae80"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 665,
                "url": "https://github.com/mockito/mockito/issues/665",
                "title": "Use package-info.java instead of the old html file",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">package-info.java</code> can be annotated, and reflection can be used, this may be useful at some point, or not.</p>",
                "resourcePath": "/mockito/mockito/issues/665",
                "createdAt": "2016-10-03T09:46:06Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Improved documentation regarding unused stubbing detection",
        "url": "https://github.com/mockito/mockito/pull/754",
        "resourcePath": "/mockito/mockito/pull/754",
        "createdAt": "2016-11-14T05:07:55Z",
        "number": 754,
        "mergeCommit": {
          "oid": "0d24b6391fe99d1af7cf176b1c09f295cda964d0",
          "message": "Improved the docs re detecting unused stubbings (#754)",
          "commitUrl": "https://github.com/mockito/mockito/commit/0d24b6391fe99d1af7cf176b1c09f295cda964d0",
          "parents": {
            "nodes": [
              {
                "oid": "2025a1830ff356124c808bffb9306582a5d40c6f",
                "message": "Merge pull request #751 from mockito/release-lib\n\nPushed release automation code into separate GitHub repository"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/exceptions/misusing/UnnecessaryStubbingException.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/exceptions/Reporter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/junitrunner/UnusedStubsExceptionMessageTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0OTM1MDg3OTI6NWZmZWFiYWJlMWM1ZmY5OGRiMTAzZmNkY2M1MTEzZjc0ZTEzMzFiYw==",
                "url": "https://github.com/mockito/mockito/pull/754/commits/5ffeababe1c5ff98db103fcdcc5113f74e1331bc"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 609,
                "url": "https://github.com/mockito/mockito/issues/609",
                "title": "Silent JUnit runner and quiet JUnit rule are better expose in the docs",
                "bodyHTML": "<p dir=\"auto\">See great feedback from a user in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"146519514\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/384\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/384/hovercard\" href=\"https://github.com/mockito/mockito/issues/384\">#384</a></p>",
                "resourcePath": "/mockito/mockito/issues/609",
                "createdAt": "2016-08-29T16:18:39Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "docs"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Introduce validable answers for early validation of stubbing",
        "url": "https://github.com/mockito/mockito/pull/826",
        "resourcePath": "/mockito/mockito/pull/826",
        "createdAt": "2016-12-15T13:51:47Z",
        "number": 826,
        "mergeCommit": {
          "oid": "126308910d3a88db5ba701a55cb5178201105cdc",
          "message": "Introduce validable answers (#826)\n\nSigned-off-by: Brice Dutheil <brice.dutheil@gmail.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/126308910d3a88db5ba701a55cb5178201105cdc",
          "parents": {
            "nodes": [
              {
                "oid": "855e24f55d3a52c1ab3bd807c87bb664be35ad9d",
                "message": "Updated release notes\n\n[ci skip]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/invocation/InvocationBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/AnswersValidatorTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/CallsRealMethodsTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/DefaultAnswerValidatorTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/DoesNothingTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/InvocationInfoTest.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/MethodInfoTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/ReturnsArgumentAtTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/ReturnsTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/ThrowsExceptionTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0OTgxNTQwNDk6MzU1MTc3NzEzMjI2MDZhY2VmZWJmNjFiNzViNzVhOWIyY2U5MTc1Yw==",
                "url": "https://github.com/mockito/mockito/pull/826/commits/35517771322606acefebf61b75b75a9b2ce9175c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 820,
                "url": "https://github.com/mockito/mockito/issues/820",
                "title": "[VarArgs] unexpected behaviour of returnsArgAt(int)",
                "bodyHTML": "<p dir=\"auto\">I stumble about a test that failed after refactoring an array parameter to an varargs.</p>\n<p dir=\"auto\">The following test succeed:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"interface Foo{\n        int[] getOdd(int[] input);\n}\n\n@Test\npublic void test() throws Exception {\n    when(foo.getOdd(any())).then(returnsArgAt(0));\n        \n    int[] odd = mock.getOdd(new int[]{1,3,5});\n    assertThat(odd).contains(1,3,5);\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">interface</span> <span class=\"pl-smi\">Foo</span>{\n        <span class=\"pl-smi\">int</span>[] <span class=\"pl-en\">getOdd</span>(<span class=\"pl-smi\">int</span>[] <span class=\"pl-s1\">input</span>);\n}\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">test</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">Exception</span> {\n    <span class=\"pl-en\">when</span>(<span class=\"pl-s1\">foo</span>.<span class=\"pl-en\">getOdd</span>(<span class=\"pl-en\">any</span>())).<span class=\"pl-en\">then</span>(<span class=\"pl-en\">returnsArgAt</span>(<span class=\"pl-c1\">0</span>));\n        \n    <span class=\"pl-smi\">int</span>[] <span class=\"pl-s1\">odd</span> = <span class=\"pl-s1\">mock</span>.<span class=\"pl-en\">getOdd</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">int</span>[]{<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">5</span>});\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">odd</span>).<span class=\"pl-en\">contains</span>(<span class=\"pl-c1\">1</span>,<span class=\"pl-c1\">3</span>,<span class=\"pl-c1\">5</span>);\n}</pre></div>\n<p dir=\"auto\">Now lets change the parameter <em>input</em> to an varargs.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"interface Foo{\n        int[] getOdd(int... input);\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">interface</span> <span class=\"pl-smi\">Foo</span>{\n        <span class=\"pl-smi\">int</span>[] <span class=\"pl-en\">getOdd</span>(<span class=\"pl-smi\">int</span>... <span class=\"pl-s1\">input</span>);\n}</pre></div>\n<p dir=\"auto\">The test fails now with:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.misusing.WrongTypeOfReturnValue: \nThe argument of type 'int' cannot be returned because the following \nmethod should return the type 'int[]'\n -&gt; foo.getOdd()\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.exceptions.misusing.WrongTypeOfReturnValue: \nThe argument of type 'int' cannot be returned because the following \nmethod should return the type 'int[]'\n -&gt; foo.getOdd()\n</code></pre></div>\n<p dir=\"auto\">This is not expected cause the change is source and binary(?) compatible, an varargs-parameter is still an array. ReturnsArgumentAt interprets the vararg array items as real parameters. In other words it tries to return an element type where the array type is required.</p>\n<p dir=\"auto\">Can the behaviour of interpreting vararg elements like parameters be changed so an vararg is treated as an array? E.g. in Mockito 3? There are several other cases were the current vararg handling leads to unexpected behaviour.</p>",
                "resourcePath": "/mockito/mockito/issues/820",
                "createdAt": "2016-12-14T14:40:38Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "bug"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #866 should not throw NPE, when custom Exception fillInStackTrace returns null",
        "url": "https://github.com/mockito/mockito/pull/867",
        "resourcePath": "/mockito/mockito/pull/867",
        "createdAt": "2017-01-04T14:16:26Z",
        "number": 867,
        "mergeCommit": {
          "oid": "f86a598594e4c732a13193fc95a00b5775099631",
          "message": "Merge pull request #867 from wuwen5/issues-866\n\nFixes #866 should not throw NPE, when custom Exception fillInStackTrace returns null",
          "commitUrl": "https://github.com/mockito/mockito/commit/f86a598594e4c732a13193fc95a00b5775099631",
          "parents": {
            "nodes": [
              {
                "oid": "d972c99572ed038078c5a755c4afd41b0e8f9d28",
                "message": "Backport #860 fix\n\nSigned-off-by: Brice Dutheil <brice.dutheil@gmail.com>"
              },
              {
                "oid": "4225851e169b65d9de9b064e998f6b762ae4e65d",
                "message": "Fixes #866 should not throw NPE, when custom Exception fillInStackTrace() return null."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/answers/ThrowsException.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/bugs/NPEWhenCustomExceptionStackTraceReturnNullTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTAwMTIxODIyOjQyMjU4NTFlMTY5YjY1ZDlkZTliMDY0ZTk5OGY2Yjc2MmFlNGU2NWQ=",
                "url": "https://github.com/mockito/mockito/pull/867/commits/4225851e169b65d9de9b064e998f6b762ae4e65d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 866,
                "url": "https://github.com/mockito/mockito/issues/866",
                "title": "When custom exception fillInstackTrace() returns null, Exception mock cannot work properly",
                "bodyHTML": "<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class CustomException extends Exception {\n\n    public CustomException() {\n        super();\n    }\n\n    @Override\n    public Exception fillInStackTrace() {\n        return null;\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">CustomException</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">Exception</span> {\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">CustomException</span>() {\n        <span class=\"pl-en\">super</span>();\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Exception</span> <span class=\"pl-en\">fillInStackTrace</span>() {\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span>;\n    }\n}</pre></div>\n<p dir=\"auto\">TestCase like this</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" when(demo.process()).thenThrow(new CustomException())\n\n//... test code\"><pre class=\"notranslate\"> <span class=\"pl-en\">when</span>(<span class=\"pl-s1\">demo</span>.<span class=\"pl-en\">process</span>()).<span class=\"pl-en\">thenThrow</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">CustomException</span>())\n\n<span class=\"pl-c\">//... test code</span></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException\n\tat org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter.filter(ConditionalStackTraceFilter.java:23)\n\tat org.mockito.internal.stubbing.answers.ThrowsException.answer(ThrowsException.java:32)\n\tat org.mockito.internal.stubbing.StubbedInvocationMatcher.answer(StubbedInvocationMatcher.java:35)\n\tat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:95)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.NullPointerException\n\tat org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter.filter(ConditionalStackTraceFilter.java:23)\n\tat org.mockito.internal.stubbing.answers.ThrowsException.answer(ThrowsException.java:32)\n\tat org.mockito.internal.stubbing.StubbedInvocationMatcher.answer(StubbedInvocationMatcher.java:35)\n\tat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:95)\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/866",
                "createdAt": "2017-01-03T08:29:31Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "bug"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Spy annotation reports better error message if instance creation is impossible",
        "url": "https://github.com/mockito/mockito/pull/885",
        "resourcePath": "/mockito/mockito/pull/885",
        "createdAt": "2017-01-15T09:43:55Z",
        "number": 885,
        "mergeCommit": {
          "oid": "fdb18b26e94964e4d51019d24ceb901d246906df",
          "message": "Merge pull request #885 from mockito/fix-878-spy-annotation-abstract-class\n\nSpy annotation reports better error message if instance creation is impossible",
          "commitUrl": "https://github.com/mockito/mockito/commit/fdb18b26e94964e4d51019d24ceb901d246906df",
          "parents": {
            "nodes": [
              {
                "oid": "b4dcfdb06ef28cb46267b871e9bedd718965ec45",
                "message": "Increment version '2.6.5' -> '2.6.6' by Travis CI build 2229 [ci skip]"
              },
              {
                "oid": "9d81a1e5a3dbaba47466f65bc77c309c847e584e",
                "message": "Spy annotation engine internal refactoring\n\nSigned-off-by: Brice Dutheil <brice.dutheil@gmail.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/SpyAnnotationEngine.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/instance/ConstructorInstantiator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/annotation/SpyAnnotationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/constructor/CreatingMocksWithConstructorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTAxNTkwNDY4OjlkODFhMWU1YTNkYmFiYTQ3NDY2ZjY1YmM3N2MzMDljODQ3ZTU4NGU=",
                "url": "https://github.com/mockito/mockito/pull/885/commits/9d81a1e5a3dbaba47466f65bc77c309c847e584e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 878,
                "url": "https://github.com/mockito/mockito/issues/878",
                "title": "@Spy dosn't report the correct error when it can't instantiate abstract class",
                "bodyHTML": "<p dir=\"auto\">The annotation engine doesn't inform the user correctly when the spying an inner <code class=\"notranslate\">private static abstract class</code>.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.base.MockitoException: Unable to initialize @Spy annotated field 'a'.\nnull\n\n\tat org.mockito.internal.configuration.SpyAnnotationEngine.process(SpyAnnotationEngine.java:70)\n\tat org.mockito.internal.configuration.InjectingAnnotationEngine.processIndependentAnnotations(InjectingAnnotationEngine.java:59)\n\tat org.mockito.internal.configuration.InjectingAnnotationEngine.process(InjectingAnnotationEngine.java:41)\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.exceptions.base.MockitoException: Unable to initialize @Spy annotated field 'a'.\nnull\n\n\tat org.mockito.internal.configuration.SpyAnnotationEngine.process(SpyAnnotationEngine.java:70)\n\tat org.mockito.internal.configuration.InjectingAnnotationEngine.processIndependentAnnotations(InjectingAnnotationEngine.java:59)\n\tat org.mockito.internal.configuration.InjectingAnnotationEngine.process(InjectingAnnotationEngine.java:41)\n</code></pre></div>\n<p dir=\"auto\">Indeed when the class is private, javac still generates a synthetic 1-arg constructor taking the enclosing class.</p>\n<p dir=\"auto\">That should be easy to improve, as the <code class=\"notranslate\">SpyAnnotationEngine</code> just needs to report an error message for this case.</p>",
                "resourcePath": "/mockito/mockito/issues/878",
                "createdAt": "2017-01-12T13:11:26Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #882: Upgrade to Objenesis 2.5",
        "url": "https://github.com/mockito/mockito/pull/887",
        "resourcePath": "/mockito/mockito/pull/887",
        "createdAt": "2017-01-15T20:51:27Z",
        "number": 887,
        "mergeCommit": {
          "oid": "b6e844d69b0cbec90fc5714513b09be7c0676a4e",
          "message": "Fixes #882: Upgrade to Objenesis 2.5 (#887)\n\nUpgrade to Objenesis 2.5 in order to properly support Java 9.",
          "commitUrl": "https://github.com/mockito/mockito/commit/b6e844d69b0cbec90fc5714513b09be7c0676a4e",
          "parents": {
            "nodes": [
              {
                "oid": "307cffd4201395ab304c3842bc74dc11336243ae",
                "message": "Fixed build for external contributors (#886)\n\nMoved the validation of env variables required for release to further release step. We don't need to assert the variables if the release is skipped."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "build.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/mockito-core/osgi.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTAxNjA5MzY2Ojc3ZmM1NzllNzgzYjVhZWNiYzVjZmMwMjNjYTZmNjkzNmQzNDFlMmQ=",
                "url": "https://github.com/mockito/mockito/pull/887/commits/77fc579e783b5aecbc5cfc023ca6f6936d341e2d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 882,
                "url": "https://github.com/mockito/mockito/issues/882",
                "title": "Upgrading to Objenesis 2.5",
                "bodyHTML": "<p dir=\"auto\">Mockito already uses Objenesis 2.4.<br>\nHowever Objenesis 2.5 was just released and supports the latest <a href=\"http://objenesis.org/notes.html\" rel=\"nofollow\">JDK 9 build 151 jigsaw</a></p>",
                "resourcePath": "/mockito/mockito/issues/882",
                "createdAt": "2017-01-13T15:05:44Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "java-9"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix TypeCache dead lock",
        "url": "https://github.com/mockito/mockito/pull/902",
        "resourcePath": "/mockito/mockito/pull/902",
        "createdAt": "2017-01-23T08:20:12Z",
        "number": 902,
        "mergeCommit": {
          "oid": "ec71d3bc93648c6cf4a9575a968b6801a294312d",
          "message": "Merge pull request #902 from mockito/dead-lock\n\nFix TypeCache dead lock\r\n\r\nShould fix #892",
          "commitUrl": "https://github.com/mockito/mockito/commit/ec71d3bc93648c6cf4a9575a968b6801a294312d",
          "parents": {
            "nodes": [
              {
                "oid": "8f36b49d5316d0efaf73689927b25d5f55b4800b",
                "message": "Increment version '2.6.6' -> '2.6.7' by Travis CI build 2248 [ci skip]"
              },
              {
                "oid": "b11d341b81e9ea8efd45d2300f02637e7c615fa2",
                "message": "Use less granular lock on class creation to avoid dead-lock on recursive types"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "build.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/TypeCachingBytecodeGenerator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/android/android.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTAyNjc0MDcwOmIxMWQzNDFiODFlOWVhOGVmZDQ1ZDIzMDBmMDI2MzdlN2M2MTVmYTI=",
                "url": "https://github.com/mockito/mockito/pull/902/commits/b11d341b81e9ea8efd45d2300f02637e7c615fa2"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 892,
                "url": "https://github.com/mockito/mockito/issues/892",
                "title": "Mockito 2.6.4 hangs on JDK 1.8.0_31",
                "bodyHTML": "<p dir=\"auto\">We just upgraded to Mockito 2.6.4. When we run our tests on Travis CI without the <code class=\"notranslate\">oracle-java8-installer</code>, JDK 1.8.0_31 is used. We then have two threads hanging in the following state:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&quot;pool-1-thread-2&quot; #24 prio=5 os_prio=0 tid=0x00007fcd208ca800 nid=0x27b3 in Object.wait() [0x00007fcc8c1a1000]\n   java.lang.Thread.State: RUNNABLE\n        at net.bytebuddy.description.type.TypeDescription$Generic.&lt;clinit&gt;(TypeDescription.java:319)\n        at net.bytebuddy.ByteBuddy.subclass(ByteBuddy.java:363)\n        at net.bytebuddy.ByteBuddy.subclass(ByteBuddy.java:334)\n        at net.bytebuddy.ByteBuddy.subclass(ByteBuddy.java:231)\n        at org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.mockClass(SubclassBytecodeGenerator.java:66)\n        at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:35)\n        at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:32)\n        at net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:138)\n        at net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:346)\n        at net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:161)\n        - locked &lt;0x0000000689673668&gt; (a java.lang.Class for com.microsoft.windowsazure.services.servicebus.ServiceBusContract)\n        at net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:355)\n        at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:30)\n        at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMockType(SubclassByteBuddyMockMaker.java:71)\n        at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMock(SubclassByteBuddyMockMaker.java:42)\n        at org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMock(ByteBuddyMockMaker.java:26)\n        at org.mockito.internal.util.MockUtil.createMock(MockUtil.java:35)\n        at org.mockito.internal.MockitoCore.mock(MockitoCore.java:65)\n        at org.mockito.Mockito.mock(Mockito.java:1681)\n        at org.mockito.Mockito.mock(Mockito.java:1594)\"><pre class=\"notranslate\"><code class=\"notranslate\">\"pool-1-thread-2\" #24 prio=5 os_prio=0 tid=0x00007fcd208ca800 nid=0x27b3 in Object.wait() [0x00007fcc8c1a1000]\n   java.lang.Thread.State: RUNNABLE\n        at net.bytebuddy.description.type.TypeDescription$Generic.&lt;clinit&gt;(TypeDescription.java:319)\n        at net.bytebuddy.ByteBuddy.subclass(ByteBuddy.java:363)\n        at net.bytebuddy.ByteBuddy.subclass(ByteBuddy.java:334)\n        at net.bytebuddy.ByteBuddy.subclass(ByteBuddy.java:231)\n        at org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.mockClass(SubclassBytecodeGenerator.java:66)\n        at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:35)\n        at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:32)\n        at net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:138)\n        at net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:346)\n        at net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:161)\n        - locked &lt;0x0000000689673668&gt; (a java.lang.Class for com.microsoft.windowsazure.services.servicebus.ServiceBusContract)\n        at net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:355)\n        at org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:30)\n        at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMockType(SubclassByteBuddyMockMaker.java:71)\n        at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMock(SubclassByteBuddyMockMaker.java:42)\n        at org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker.createMock(ByteBuddyMockMaker.java:26)\n        at org.mockito.internal.util.MockUtil.createMock(MockUtil.java:35)\n        at org.mockito.internal.MockitoCore.mock(MockitoCore.java:65)\n        at org.mockito.Mockito.mock(Mockito.java:1681)\n        at org.mockito.Mockito.mock(Mockito.java:1594)\n</code></pre></div>\n<p dir=\"auto\">The issue reported here does not reproduce with Mockito 2.6.3. It also does not reproduce with JDK 1.8.0_121. I assume it's caused by <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"201916289\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/891\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/891/hovercard\" href=\"https://github.com/mockito/mockito/pull/891\">#891</a>.</p>\n<p dir=\"auto\">(I know upgrading our JDK would be \"better\", but if at all possible I'd like to see this fixed anyway, because using the <code class=\"notranslate\">oracle-java8-installer</code> introduces a dependency on the Oracle website, and we've seen it being down from time-to-time, thus affecting our build stability.)</p>\n<p dir=\"auto\">CC <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/raphw/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/raphw\">@raphw</a>. (If you want me to file such tickets directly against Byte Buddy, let me know.)</p>",
                "resourcePath": "/mockito/mockito/issues/892",
                "createdAt": "2017-01-20T11:32:20Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Unified all number of invocations checker in NumberOfInvocationsChecker",
        "url": "https://github.com/mockito/mockito/pull/907",
        "resourcePath": "/mockito/mockito/pull/907",
        "createdAt": "2017-01-26T12:17:39Z",
        "number": 907,
        "mergeCommit": {
          "oid": "8f9d6ff2fd674bce3ee3aaba2a282d816eed2e60",
          "message": "Unified all number of invocations checker in static utility (#907)",
          "commitUrl": "https://github.com/mockito/mockito/commit/8f9d6ff2fd674bce3ee3aaba2a282d816eed2e60",
          "parents": {
            "nodes": [
              {
                "oid": "f967b930042c624fa75c059aa6a5b1c5d013f6af",
                "message": "Increment version '2.6.8' -> '2.6.9' by Travis CI build 2266 [ci skip]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/verification/Calls.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/verification/Times.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/main/java/org/mockito/internal/verification/checkers/NonGreedyNumberOfInvocationsInOrderChecker.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/verification/checkers/NumberOfInvocationsChecker.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/main/java/org/mockito/internal/verification/checkers/NumberOfInvocationsInOrderChecker.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/verification/checkers/NumberOfInvocationsCheckerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/verification/checkers/NumberOfInvocationsInOrderCheckerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTAzMjk3MjA3OmZlMGU3ZGMxOThjZGM1ODdmZDc1OTdhZDgxOWE4Y2EyMmU2NDAyY2E=",
                "url": "https://github.com/mockito/mockito/pull/907/commits/fe0e7dc198cdc587fd7597ad819a8ca22e6402ca"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 426,
                "url": "https://github.com/mockito/mockito/issues/426",
                "title": "Refactor instance based utility classes to static utility classes",
                "bodyHTML": "<p dir=\"auto\">The internal implementation of Mockito contains numerous helper classed that serve as a container for useful methods. By its nature these classes don't have a state. Currently some them are instance based in other word you need to create the utility class to call a helper method. This not only pollutes the heap but also the code cause instance methods can't be imported statically.</p>\n<p dir=\"auto\">Here is an example:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Helper helper = new Helper();\nif (helper.isInputValid(input)){\n  [...] \n}\"><pre class=\"notranslate\"><span class=\"pl-smi\">Helper</span> <span class=\"pl-s1\">helper</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Helper</span>();\n<span class=\"pl-k\">if</span> (<span class=\"pl-s1\">helper</span>.<span class=\"pl-en\">isInputValid</span>(<span class=\"pl-s1\">input</span>)){\n  [...] \n}</pre></div>\n<p dir=\"auto\">vs. static import of Helper.isInputValid</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"if (isInputValid(input)){\n  [...] \n}\"><pre class=\"notranslate\"><span class=\"pl-k\">if</span> (<span class=\"pl-en\">isInputValid</span>(<span class=\"pl-s1\">input</span>)){\n  [...] \n}</pre></div>\n<p dir=\"auto\">The aim of this ticket is to identify canidates that can be refactored to static utility classes. If you like to refactoring and mockito feel free to send a PR and reference this issue.</p>\n<p dir=\"auto\">Refactoring canidates:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">AccessibilityChanger</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">BeanPropertySetter</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">ConditionalStackTraceFilter</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">FieldCopier</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">FieldReader</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">GenericMaster</code> should be integrate into <code class=\"notranslate\">GenericTypeResolver</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">JUnitFailureHacker</code> can be removed when the deprecated <code class=\"notranslate\">VerboseMockitoJUnitRunner</code> is removed</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">LenientCopyTool</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">MatcherBinder</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">MockitoCore</code> should better be a singleton</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">MockCreationValidator</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">RemoveFirstLine</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"172903591\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/591\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/591/hovercard\" href=\"https://github.com/mockito/mockito/pull/591\">#591</a> <code class=\"notranslate\">ArgumentMatchingTool</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"168426634\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/515\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/515/hovercard\" href=\"https://github.com/mockito/mockito/pull/515\">#515</a> <code class=\"notranslate\">AllInvocationsFinder</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"167238035\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/502\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/502/hovercard\" href=\"https://github.com/mockito/mockito/pull/502\">#502</a> <code class=\"notranslate\">ArgumentsComparator</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"170275523\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/540\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/540/hovercard\" href=\"https://github.com/mockito/mockito/pull/540\">#540</a> <code class=\"notranslate\">ArrayUtils</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"164686007\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/490\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/490/hovercard\" href=\"https://github.com/mockito/mockito/pull/490\">#490</a> <code class=\"notranslate\">AtLeastXNumberOfInvocationsChecker</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"164686007\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/490\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/490/hovercard\" href=\"https://github.com/mockito/mockito/pull/490\">#490</a> <code class=\"notranslate\">AtLeastXNumberOfInvocationsInOrderChecker</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"203867820\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/912\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/912/hovercard\" href=\"https://github.com/mockito/mockito/pull/912\">#912</a> <code class=\"notranslate\">Constructors</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"159773932\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/427\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/427/hovercard\" href=\"https://github.com/mockito/mockito/pull/427\">#427</a> <code class=\"notranslate\">FieldSetter</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"203365360\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/908\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/908/hovercard\" href=\"https://github.com/mockito/mockito/pull/908\">#908</a> <code class=\"notranslate\">FriendlyExceptionMaker</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"160268225\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/431\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/431/hovercard\" href=\"https://github.com/mockito/mockito/pull/431\">#431</a> <code class=\"notranslate\">HandyReturnValues</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"160417071\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/432\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/432/hovercard\" href=\"https://github.com/mockito/mockito/pull/432\">#432</a> <code class=\"notranslate\">InvocationMarker</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"162026333\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/462\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/462/hovercard\" href=\"https://github.com/mockito/mockito/pull/462\">#462</a> <code class=\"notranslate\">InvocationsFinder</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"203365360\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/908\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/908/hovercard\" href=\"https://github.com/mockito/mockito/pull/908\">#908</a> <code class=\"notranslate\">JUnitDetecter</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"164686007\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/490\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/490/hovercard\" href=\"https://github.com/mockito/mockito/pull/490\">#490</a> <code class=\"notranslate\">MissingInvocationChecker</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"164686007\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/490\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/490/hovercard\" href=\"https://github.com/mockito/mockito/pull/490\">#490</a> <code class=\"notranslate\">MissingInvocationInOrderChecker</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"168425245\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/514\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/514/hovercard\" href=\"https://github.com/mockito/mockito/pull/514\">#514</a> <code class=\"notranslate\">MockUtil</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"167238445\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/503\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/503/hovercard\" href=\"https://github.com/mockito/mockito/pull/503\">#503</a> <code class=\"notranslate\">NonGreedyNumberOfInvocationsInOrderChecker</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"203357599\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/907\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/907/hovercard\" href=\"https://github.com/mockito/mockito/pull/907\">#907</a> <code class=\"notranslate\">NumberOfInvocationsInOrderChecker</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"203357599\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/907\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/907/hovercard\" href=\"https://github.com/mockito/mockito/pull/907\">#907</a> <code class=\"notranslate\">NumberOfInvocationsChecker</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"170395559\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/547\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/547/hovercard\" href=\"https://github.com/mockito/mockito/pull/547\">#547</a> <code class=\"notranslate\">ObjectMethodsGuru</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"159773932\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/427\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/427/hovercard\" href=\"https://github.com/mockito/mockito/pull/427\">#427</a> <code class=\"notranslate\">Reporter</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"169766976\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/535\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/535/hovercard\" href=\"https://github.com/mockito/mockito/pull/535\">#535</a> <code class=\"notranslate\">SuperTypesLastSorter</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"167237475\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/501\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/501/hovercard\" href=\"https://github.com/mockito/mockito/pull/501\">#501</a> <code class=\"notranslate\">TestMethodFinder</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"168426634\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/515\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/515/hovercard\" href=\"https://github.com/mockito/mockito/pull/515\">#515</a> <code class=\"notranslate\">VerifiableInvocationsFinder</code></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/426",
                "createdAt": "2016-06-11T13:23:18Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #929: Move the resources directory to src/main",
        "url": "https://github.com/mockito/mockito/pull/931",
        "resourcePath": "/mockito/mockito/pull/931",
        "createdAt": "2017-02-05T01:22:40Z",
        "number": 931,
        "mergeCommit": {
          "oid": "9b42765150f193c952a856fa77d9b617648160f0",
          "message": "Merge pull request #931 from tmurakami/fix_issue_929\n\nFixes #929: Move the resources directory to src/main",
          "commitUrl": "https://github.com/mockito/mockito/commit/9b42765150f193c952a856fa77d9b617648160f0",
          "parents": {
            "nodes": [
              {
                "oid": "6f41c99b37319cf8f6a42998f12899c90158dc0c",
                "message": "Increment version '2.7.5' -> '2.7.6' by Travis CI build 2355 [ci skip]"
              },
              {
                "oid": "3d11f6c9a885b8c59454774b9772c97eaa331b51",
                "message": "Fixes #929: Move the resources directory to src/main"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/inline/inline.gradle"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "subprojects/inline/src/main/resources/mockito-extensions/org.mockito.plugins.MockMaker"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/FinalClassMockingTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/PluginTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTA0NjgzMTcxOjNkMTFmNmM5YTg4NWI4YzU5NDU0Nzc0Yjk3NzJjOTdlYWEzMzFiNTE=",
                "url": "https://github.com/mockito/mockito/pull/931/commits/3d11f6c9a885b8c59454774b9772c97eaa331b51"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 929,
                "url": "https://github.com/mockito/mockito/issues/929",
                "title": "New 'mockito-inline' artifact does not work",
                "bodyHTML": "<p dir=\"auto\">mockito-inline 2.7.2</p>\n<p dir=\"auto\">build.gradle:</p>\n<div class=\"highlight highlight-source-groovy notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"apply plugin: 'java'\n\nsourceCompatibility = JavaVersion.VERSION_1_8\ntargetCompatibility = JavaVersion.VERSION_1_8\n\nrepositories {\n    jcenter()\n}\n\ndependencies {\n    testCompile 'junit:junit:4.12'\n    testCompile 'org.mockito:mockito-inline:2.7.2'\n}\"><pre class=\"notranslate\">apply <span class=\"pl-c1\">plugin</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>java<span class=\"pl-pds\">'</span></span>\n\nsourceCompatibility <span class=\"pl-k\">=</span> <span class=\"pl-k\">JavaVersion</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">VERSION_1_8</span>\ntargetCompatibility <span class=\"pl-k\">=</span> <span class=\"pl-k\">JavaVersion</span><span class=\"pl-k\">.</span><span class=\"pl-c1\">VERSION_1_8</span>\n\nrepositories {\n    jcenter()\n}\n\ndependencies {\n    testCompile <span class=\"pl-s\"><span class=\"pl-pds\">'</span>junit:junit:4.12<span class=\"pl-pds\">'</span></span>\n    testCompile <span class=\"pl-s\"><span class=\"pl-pds\">'</span>org.mockito:mockito-inline:2.7.2<span class=\"pl-pds\">'</span></span>\n}</pre></div>\n<p dir=\"auto\">Test target:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"final class Foo {\n\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Foo</span> {\n\n}</pre></div>\n<p dir=\"auto\">Test for Foo:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class FooTest {\n\n    @Test\n    public void test() {\n        Mockito.mock(Foo.class);\n    }\n\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">FooTest</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">test</span>() {\n        <span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">Foo</span>.<span class=\"pl-k\">class</span>);\n    }\n\n}</pre></div>\n<p dir=\"auto\">Test command:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ ./gradlew clean test\n:clean\n:compileJava\n:processResources UP-TO-DATE\n:classes\n:compileTestJava\n:processTestResources UP-TO-DATE\n:testClasses\n:test\n\ncom.example.FooTest &gt; test FAILED\n    org.mockito.exceptions.base.MockitoException at FooTest.java:10\n\n1 test completed, 1 failed\n:test FAILED\n\nFAILURE: Build failed with an exception.\"><pre class=\"notranslate\"><code class=\"notranslate\">$ ./gradlew clean test\n:clean\n:compileJava\n:processResources UP-TO-DATE\n:classes\n:compileTestJava\n:processTestResources UP-TO-DATE\n:testClasses\n:test\n\ncom.example.FooTest &gt; test FAILED\n    org.mockito.exceptions.base.MockitoException at FooTest.java:10\n\n1 test completed, 1 failed\n:test FAILED\n\nFAILURE: Build failed with an exception.\n</code></pre></div>\n<p dir=\"auto\">Test report:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.base.MockitoException: \nCannot mock/spy class com.example.Foo\nMockito cannot mock/spy because :\n - final class\n\tat com.example.FooTest.test(FooTest.java:10)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\n\tat com.sun.proxy.$Proxy2.processTestClass(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:377)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)\n\tat org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.exceptions.base.MockitoException: \nCannot mock/spy class com.example.Foo\nMockito cannot mock/spy because :\n - final class\n\tat com.example.FooTest.test(FooTest.java:10)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\n\tat com.sun.proxy.$Proxy2.processTestClass(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:377)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)\n\tat org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\n</code></pre></div>\n<h3 dir=\"auto\">Reason</h3>\n<p dir=\"auto\"><code class=\"notranslate\">mockito-extensions/org.mockito.plugins.MockMaker</code> is not included in the mockito-inline.jar.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ jar tvf mockito-inline-2.7.2.jar \n     0 Sat Feb 04 12:02:54 JST 2017 META-INF/\n    25 Sat Feb 04 12:02:54 JST 2017 META-INF/MANIFEST.MF\"><pre class=\"notranslate\"><code class=\"notranslate\">$ jar tvf mockito-inline-2.7.2.jar \n     0 Sat Feb 04 12:02:54 JST 2017 META-INF/\n    25 Sat Feb 04 12:02:54 JST 2017 META-INF/MANIFEST.MF\n</code></pre></div>\n<p dir=\"auto\">In <a href=\"https://github.com/mockito/mockito/tree/release/2.x/subprojects/inline\">the inline subproject</a>, org.mockito.plugins.MockMaker is in <code class=\"notranslate\">src/resources/mockito-extensions</code> directory.<br>\nIs this correct?</p>\n<p dir=\"auto\">In <a href=\"https://github.com/mockito/mockito/tree/release/2.x/subprojects/android\">the android subproject</a>, the file is in src/<strong>main</strong>/resources/mockito-extensions.</p>",
                "resourcePath": "/mockito/mockito/issues/929",
                "createdAt": "2017-02-04T12:54:39Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support for return type 'Void' in DoesNothingAnswer",
        "url": "https://github.com/mockito/mockito/pull/933",
        "resourcePath": "/mockito/mockito/pull/933",
        "createdAt": "2017-02-06T12:43:14Z",
        "number": 933,
        "mergeCommit": {
          "oid": "275586ecf3a00da078b6fb7e9cc4508231cc4301",
          "message": "Support for return type 'Void' in DoesNothingAnswer (#933)\n\n* Fixes #927 methods with return type 'Void' are treated now like void\r\nmethods\r\n\r\n* Refactored DoesNothing and added tests to verify its validation\r\nbehaviour in case of void/Void methods.",
          "commitUrl": "https://github.com/mockito/mockito/commit/275586ecf3a00da078b6fb7e9cc4508231cc4301",
          "parents": {
            "nodes": [
              {
                "oid": "3e9a94b7b9938dbdb882e28c24c2b163c2d19390",
                "message": "Increment version '2.7.4' -> '2.7.5' by Travis CI build 2347 [ci skip]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/StubberImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/answers/DoesNothing.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/answers/InvocationInfo.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/junit/UnusedStubbingsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/DoesNothingTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/InvocationInfoTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/IMethods.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/MethodsImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitoutil/TestBase.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTA0NzkwNzc5OjgzN2JhNTRlNzRlMWJmM2YxNjYzZmZjNzkxZjNiMDc5ZTgxZTc1YjI=",
                "url": "https://github.com/mockito/mockito/pull/933/commits/837ba54e74e1bf3f1663ffc791f3b079e81e75b2"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 927,
                "url": "https://github.com/mockito/mockito/issues/927",
                "title": "Mockito can't unbox Void",
                "bodyHTML": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">The following <a href=\"https://github.com/powermock/powermock/issues/708\" data-hovercard-type=\"issue\" data-hovercard-url=\"/powermock/powermock/issues/708/hovercard\">bug</a> was created for PowerMock:</p>\n<blockquote>\n<p dir=\"auto\">PowerMockito doesn't seem to unbox java.lang.Void.<br>\nI am writing a test for my code that uses Google cloud storage API to delete a file. Google API returns Void for deleting a file. Code works fine but when I instruct my test as PowerMockito.doNothing().when(delete).execute(); It complains that execute has a return value of Void.</p>\n</blockquote>\n<p dir=\"auto\">But PowerMock just delegates call to Mockito in this case and Mockito throws exception:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.base.MockitoException: \nOnly void methods can doNothing()!\nExample of correct use of doNothing():\n    doNothing().\n    doThrow(new RuntimeException())\n    .when(mock).someVoidMethod();\nAbove means:\nsomeVoidMethod() does nothing the 1st time but throws an exception the 2nd time is called\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.exceptions.base.MockitoException: \nOnly void methods can doNothing()!\nExample of correct use of doNothing():\n    doNothing().\n    doThrow(new RuntimeException())\n    .when(mock).someVoidMethod();\nAbove means:\nsomeVoidMethod() does nothing the 1st time but throws an exception the 2nd time is called\n</code></pre></div>\n<p dir=\"auto\">I have doubts about expected behaviour. For one side, method return something, but it return a <code class=\"notranslate\">Void</code> which always is just <code class=\"notranslate\">Void</code> and nothing could be changed.</p>\n<p dir=\"auto\">Anyway, it could be fixed only on Mockito side (without dirty hacks).</p>",
                "resourcePath": "/mockito/mockito/issues/927",
                "createdAt": "2017-02-03T18:42:17Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #358: Added custom capturing matcher to support conditional cap\u2026",
        "url": "https://github.com/mockito/mockito/pull/957",
        "resourcePath": "/mockito/mockito/pull/957",
        "createdAt": "2017-02-17T18:46:53Z",
        "number": 957,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/matchers/Or.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/progress/ArgumentMatcherStorageImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/Platform.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/Primitives.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/ArgumentMatchersTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/invocation/InvocationMatcherTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/matchers/CapturingMatcherParameterizedTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/matchers/CapturingMatcherTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/matchers/CapturingArgumentsTest.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "src/test/java/org/mockitousage/verification/VerificationWithDescriptionTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTA2Nzg5NTg0Ojg3ZjY5YjE1ZTlmZDQzNDhjODBlOWFmZTFjYTk5N2E1MDNkNGNiOTM=",
                "url": "https://github.com/mockito/mockito/pull/957/commits/87f69b15e9fd4348c80e9afe1ca997a503d4cb93"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 358,
                "url": "https://github.com/mockito/mockito/issues/358",
                "title": "Enhancement: ArgumentCaptor.captureIf(ArgumentMatcher)",
                "bodyHTML": "<p dir=\"auto\">Assume we have the following test.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" @Mock\n private Consumer&lt;Collection&lt;?&gt;&gt; consumer;\n\n @Test\n public void test() throws Exception {\n\n    consumer.accept(new HashSet&lt;&gt;());\n    consumer.accept(new ArrayList&lt;&gt;());\n\n    ArgumentCaptor&lt;ArrayList&lt;?&gt;&gt; captor = ArgumentCaptor.forClass(ArrayList.class);\n    verify(consumer).accept(captor.capture());\n }\"><pre class=\"notranslate\"><code class=\"notranslate\"> @Mock\n private Consumer&lt;Collection&lt;?&gt;&gt; consumer;\n\n @Test\n public void test() throws Exception {\n\n    consumer.accept(new HashSet&lt;&gt;());\n    consumer.accept(new ArrayList&lt;&gt;());\n\n    ArgumentCaptor&lt;ArrayList&lt;?&gt;&gt; captor = ArgumentCaptor.forClass(ArrayList.class);\n    verify(consumer).accept(captor.capture());\n }\n</code></pre></div>\n<p dir=\"auto\">The test fails with:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.verification.TooManyActualInvocations:\nconsumer.accept(&lt;Capturing argument&gt;);\nWanted 1 time:\n-&gt; at foo.TestClass.testName(TestClass.java:64)\nBut was 2 times. Undesired invocation:\n-&gt; at agh.TestClass.testName(TestClass.java:61)\n\n    at foo.TestClass.test(TestClass.java:64)\n    [..]\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.exceptions.verification.TooManyActualInvocations:\nconsumer.accept(&lt;Capturing argument&gt;);\nWanted 1 time:\n-&gt; at foo.TestClass.testName(TestClass.java:64)\nBut was 2 times. Undesired invocation:\n-&gt; at agh.TestClass.testName(TestClass.java:61)\n\n    at foo.TestClass.test(TestClass.java:64)\n    [..]\n</code></pre></div>\n<p dir=\"auto\">The test fails because the ArgumentCaptor stores every type, because the type information is erased a runtime. How can we capture the type that is specified in the captor, in this case <code class=\"notranslate\">ArrayList</code>?  It is possible to implement an <code class=\"notranslate\">Answer</code>that stores the argument, and use<br>\n<code class=\"notranslate\">Matchers.isA(ArrayList.class)</code>but thats ugly-&gt;</p>\n<p dir=\"auto\"><code class=\"notranslate\">doAnswer(captureArg1).when(consumer).accept(isA(ArrayList.class));</code></p>\n<p dir=\"auto\">Maybe it is a good idea to create a pull req and extend the ArgumentCaptor API by adding a method like <code class=\"notranslate\">&lt;T&gt; T captureIf(ArgumentMatcher&lt;? extends T&gt;)</code>?</p>\n<p dir=\"auto\">Then we could write:<br>\n<code class=\"notranslate\">verify(consumer).accept(captor.captureIf(isA(ArrayList.class)));</code></p>",
                "resourcePath": "/mockito/mockito/issues/358",
                "createdAt": "2016-02-18T12:49:21Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "ready"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #974: Fix to get correct stubbing location with inline mocking",
        "url": "https://github.com/mockito/mockito/pull/979",
        "resourcePath": "/mockito/mockito/pull/979",
        "createdAt": "2017-03-06T22:21:55Z",
        "number": 979,
        "mergeCommit": {
          "oid": "ccd5e85a0c60e7f3ae10ac86db1e5110966e9d41",
          "message": "Fixes #974: Fix to get correct stubbing location with inline mocking (#979)\n\n* Fixes #974: Add constructors to LocationImpl\r\n\r\n* Fixes #974: Add Location parameter to constructor of InterceptedInvocation\r\n\r\n* Fixes #974: Add MockMethodInterceptor#doIntercept() to take a Location argument\r\n\r\n* Fixes #974: Fix to get correct stubbing location with inline mocking",
          "commitUrl": "https://github.com/mockito/mockito/commit/ccd5e85a0c60e7f3ae10ac86db1e5110966e9d41",
          "parents": {
            "nodes": [
              {
                "oid": "482731ec4d25f7a340e16f80d2931e1d77f22d06",
                "message": "Add missing license headers"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/InterceptedInvocation.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodAdvice.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodInterceptor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/debugging/LocationImpl.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/StubbingLocationTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTA5MzYyNjIxOjMzYjYwMWU4MjEzNjNlOGZkYTY4N2M4YzhmYTQ5Mjc5YzY4YTZlYjc=",
                "url": "https://github.com/mockito/mockito/pull/979/commits/33b601e821363e8fda687c8c8fa49279c68a6eb7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 974,
                "url": "https://github.com/mockito/mockito/issues/974",
                "title": "MockitoJUnitRunner.StrictStubs does not detect 'Unnecessary Stubbing' when inline mock maker is enabled",
                "bodyHTML": "<ul dir=\"auto\">\n<li>mockito-core 2.7.13</li>\n<li>OpenJDK 1.8.0_121</li>\n<li>Ubuntu 16.10</li>\n<li>Enable <code class=\"notranslate\">mock-maker-inline</code> (or use <code class=\"notranslate\">mockito-inline</code> artifact)</li>\n</ul>\n<p dir=\"auto\">If running the following test, 'Unnecessary Stubbing' is not detected.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@RunWith(MockitoJUnitRunner.StrictStubs.class)\npublic class MockitoTest {\n\n    @Mock\n    ArrayList&lt;String&gt; mock;\n\n    @Test\n    public void should_pass() {\n        when(mock.get(0)).thenReturn(&quot;foo&quot;);\n        assertEquals(&quot;foo&quot;, mock.get(0));\n    }\n\n    @Test\n    public void should_detect_unnecessary_stubbing() {\n        when(mock.get(1)).thenReturn(&quot;foo&quot;);\n    }\n\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">RunWith</span>(<span class=\"pl-smi\">MockitoJUnitRunner</span>.<span class=\"pl-smi\">StrictStubs</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MockitoTest</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n    <span class=\"pl-smi\">ArrayList</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">mock</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">should_pass</span>() {\n        <span class=\"pl-en\">when</span>(<span class=\"pl-s1\">mock</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-c1\">0</span>)).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-s\">\"foo\"</span>);\n        <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-s\">\"foo\"</span>, <span class=\"pl-s1\">mock</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-c1\">0</span>));\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">should_detect_unnecessary_stubbing</span>() {\n        <span class=\"pl-en\">when</span>(<span class=\"pl-s1\">mock</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-c1\">1</span>)).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-s\">\"foo\"</span>);\n    }\n\n}</pre></div>\n<p dir=\"auto\">In the above code, 'Unnecessary Stubbing' is detected by changing ArrayList to List.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\n    @Mock\n//    ArrayList&lt;String&gt; mock;\n    List&lt;String&gt; mock;\n\"><pre class=\"notranslate\">    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n<span class=\"pl-c\">//    ArrayList&lt;String&gt; mock;</span>\n    <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">mock</span>;</pre></div>\n<p dir=\"auto\">This problem does not occur with default mock maker.</p>",
                "resourcePath": "/mockito/mockito/issues/974",
                "createdAt": "2017-03-03T00:09:58Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #981: Update Javadoc about the 'mockito-inline' artifact",
        "url": "https://github.com/mockito/mockito/pull/985",
        "resourcePath": "/mockito/mockito/pull/985",
        "createdAt": "2017-03-10T09:54:11Z",
        "number": 985,
        "mergeCommit": {
          "oid": "d9a1e515f7d7ec1fd291292b3203995eafcf01a5",
          "message": "Fixes #981: Update Javadoc about the 'mockito-inline' artifact (#985)",
          "commitUrl": "https://github.com/mockito/mockito/commit/d9a1e515f7d7ec1fd291292b3203995eafcf01a5",
          "parents": {
            "nodes": [
              {
                "oid": "1599dfe84f953d5ef85c17471296fabbdd1b9a2b",
                "message": "Increment version '2.7.15' -> '2.7.16' by Travis CI build 2424 [ci skip]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/Mockito.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTEwMDk0NzcxOjg1YzdkZjBhZmQwY2JhZGFhMWM3YWMwOTZhZjZhNzczNGQxZWJhODk=",
                "url": "https://github.com/mockito/mockito/pull/985/commits/85c7df0afd0cbadaa1c7ac096af6a7734d1eba89"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 981,
                "url": "https://github.com/mockito/mockito/issues/981",
                "title": "Update documentation about mockito-inline artifact",
                "bodyHTML": "<p dir=\"auto\">Mockito documentation currently does not explain \"mockito-inline\" artifact that is used for inline mocking (mocking finals). The main Mockito class still contains information on how to configure the inline mocking using a classpath resource.</p>",
                "resourcePath": "/mockito/mockito/issues/981",
                "createdAt": "2017-03-07T13:46:15Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Tidy-up in build automation",
        "url": "https://github.com/mockito/mockito/pull/1011",
        "resourcePath": "/mockito/mockito/pull/1011",
        "createdAt": "2017-03-30T16:21:29Z",
        "number": 1011,
        "mergeCommit": {
          "oid": "47a63013a79ae5014f8afcc181b46a5e5b03888d",
          "message": "Merge pull request #1011 from mockito/sf\n\nTidy-up in build automation",
          "commitUrl": "https://github.com/mockito/mockito/commit/47a63013a79ae5014f8afcc181b46a5e5b03888d",
          "parents": {
            "nodes": [
              {
                "oid": "9b98d71fa2444b0ebc35265d79458e5432cb5396",
                "message": "Increment version '2.7.20' -> '2.7.21' by Travis CI build 2481 [ci skip]"
              },
              {
                "oid": "5917b1f23e445b498b0cb1e7eed012ec8a417f6c",
                "message": "Tidy-up in IDE setup\n\nRemoved unnecessary manipulation of the IDEA ipr file. We can use built-in 'vcs' method to configure the version control system for the project. This way, the build is simpler.\n\nTested by regenerating IDEA configuration and loading to IntelliJ, vcs was correctly set up."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "build.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/java-library.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/mockito-core/javadoc.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/root/ide.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTEzNDY5MjgzOjU5MTdiMWYyM2U0NDViNDk4YjBjYjFlN2VlZDAxMmVjOGE0MTdmNmM=",
                "url": "https://github.com/mockito/mockito/pull/1011/commits/5917b1f23e445b498b0cb1e7eed012ec8a417f6c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 911,
                "url": "https://github.com/mockito/mockito/issues/911",
                "title": "Mockito Continuous Delivery Pipeline 2.0",
                "bodyHTML": "<p dir=\"auto\">Proposed changes on easy-to-grasp diagrams are documented on <a href=\"http://blog.mockito.org/2017/02/mockito-continuous-delivery-pipeline-2.0.html\" rel=\"nofollow\">Mockito blog article</a>.</p>\n<h2 dir=\"auto\">Current release model</h2>\n<p dir=\"auto\">Every code change results in a new version in Central repository (not snapshot, a real version). More information on <a href=\"https://github.com/mockito/mockito/wiki/Continuous-Delivery-Overview\">Continuous Delivery in Mockito</a>.</p>\n<p dir=\"auto\">Given high rate of new versions, the community and current tooling is not comfortable in taking in new Mockito versions at fast pace. More feedback and the discussion in issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"174527331\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/618\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/618/hovercard\" href=\"https://github.com/mockito/mockito/issues/618\">#618</a>.</p>\n<h2 dir=\"auto\">Proposed changes</h2>\n<p dir=\"auto\">Release every change but not all releases go to Central. Push to standard repository (JCenter / Maven Central) only substantial releases. Push remaining versions to less prominent, but still public space for early adopters.</p>\n<p dir=\"auto\">Glossary: What are major, minor, patch versions? Explanatory example: Version 2.6.5 has major=2, minor=6, patch=5.</p>\n<ol dir=\"auto\">\n<li>Every merged pull request produces new version that lands in Bintray \"mockito/maven\" repo.</li>\n<li>Some versions we produce are \"notable versions\", by default those are new major (3.0.0, 4.0.0) and new minor versions (3.1.0, 3.2.0). In contrast to regular new versions, the notable versions are included in well-known central repositories: JCenter and Maven Central.</li>\n</ol>\n<p dir=\"auto\">For more details, see the wiki page paragraph on <a href=\"https://github.com/mockito/mockito/wiki/Continuous-Delivery-Details#cd\">continuous delivery</a>.</p>\n<h2 dir=\"auto\">Action list</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - Configure 2.7.22 as last notable version because it was the last version published to central</li>\n<li>Release notes:\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> - detailed release notes link to notable release notes and vice versa</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - release notes inform where the jars can be found (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"205071604\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/shipkit/issues/4\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/shipkit/issues/4/hovercard\" href=\"https://github.com/mockito/shipkit/issues/4\">mockito/shipkit#4</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> - link to wiki documentation</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> - Publish next notable version</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - procedure of promoting to notable release is documented - <a href=\"https://github.com/mockito/mockito/blob/release/2.x/README.md#how-to-release-new-version\">https://github.com/mockito/mockito/blob/release/2.x/README.md#how-to-release-new-version</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - the new release model is comprehensively documented - <a href=\"https://github.com/mockito/mockito/wiki/Continuous-Delivery-Details#cd\">https://github.com/mockito/mockito/wiki/Continuous-Delivery-Details#cd</a></li>\n</ul>\n<p dir=\"auto\">Optional:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> - release notes have clean format (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"205071092\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/shipkit/issues/3\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/shipkit/issues/3/hovercard\" href=\"https://github.com/mockito/shipkit/issues/3\">mockito/shipkit#3</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> - notable release (target repo) can be forced by commit message</li>\n</ul>\n<h2 dir=\"auto\">Implementation details</h2>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/mockito/mockito/wiki/Continuous-Delivery-Details#cd\">https://github.com/mockito/mockito/wiki/Continuous-Delivery-Details#cd</a></li>\n<li><a href=\"https://github.com/mockito/mockito/blob/release/2.x/README.md#how-to-release-new-version\">https://github.com/mockito/mockito/blob/release/2.x/README.md#how-to-release-new-version</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/911",
                "createdAt": "2017-01-29T04:48:54Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "continuous integration"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixed Travis configuration for matrix build",
        "url": "https://github.com/mockito/mockito/pull/1109",
        "resourcePath": "/mockito/mockito/pull/1109",
        "createdAt": "2017-06-05T04:58:17Z",
        "number": 1109,
        "mergeCommit": {
          "oid": "f4a00def6ebd825454939e47602776725d0faa6a",
          "message": "Fixed Travis configuration for matrix build (#1109)\n\nTravis CI introduced a good change that unfortunately is slightly backwards incompatible.\r\nThis change to configuration file fixes our Travis configuration for updated Travis behavior wrt matrix builds.\r\nMore info, in the GitHub ticket\r\n\r\nFixes 1107",
          "commitUrl": "https://github.com/mockito/mockito/commit/f4a00def6ebd825454939e47602776725d0faa6a",
          "parents": {
            "nodes": [
              {
                "oid": "dc554a084c55d5f6249d2e8069626268771d818d",
                "message": "Merge branch 'NagRock-release/2.x' into release/2.x\n\nRenamed configuration extension 'releasing' into 'shipkit'. Merged pull request #1104"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".travis.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTIzOTEzNzIzOmFjN2IyYjdlNTA0NTQzMmY1OTNmYTkwYzczODM2ZTQzZjk2MTUxY2U=",
                "url": "https://github.com/mockito/mockito/pull/1109/commits/ac7b2b7e5045432f593fa90c73836e43f96151ce"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1107,
                "url": "https://github.com/mockito/mockito/issues/1107",
                "title": "No release build for 2.8.39 - possible bug in Travis CI",
                "bodyHTML": "<p dir=\"auto\">For some reason, Travis CI did not trigger the main build for version 2.8.39. In the travis dashboard for that build I can see only <a href=\"https://travis-ci.org/mockito/mockito/builds/237813636\" rel=\"nofollow\">3 child jobs</a> whereas normally there are <a href=\"https://travis-ci.org/mockito/mockito/builds/237433149\" rel=\"nofollow\">4 child jobs</a>.</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/szpak/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/szpak\">@szpak</a>, have you seen something like that before? I'm restarting the build, let's see what happens :)</p>",
                "resourcePath": "/mockito/mockito/issues/1107",
                "createdAt": "2017-06-01T17:03:21Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "bug"
                      }
                    },
                    {
                      "node": {
                        "name": "continuous integration"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixed issue with releases to Maven Central",
        "url": "https://github.com/mockito/mockito/pull/1129",
        "resourcePath": "/mockito/mockito/pull/1129",
        "createdAt": "2017-06-15T14:35:35Z",
        "number": 1129,
        "mergeCommit": {
          "oid": "c295a53539316b8549663caa86463a90fe984e27",
          "message": "Merge pull request #1129 from mockito/sf3\n\nFixed issue with releases to Maven Central. Fixes #1127.",
          "commitUrl": "https://github.com/mockito/mockito/commit/c295a53539316b8549663caa86463a90fe984e27",
          "parents": {
            "nodes": [
              {
                "oid": "e8829b53996fb152c8a4271de768a783868a8ffe",
                "message": "version bumped + release notes updated by Travis CI build 2736 [ci skip]"
              },
              {
                "oid": "d3a97967251ec816c0b571efd6226ab2ac62c3ce",
                "message": "Fixed issue with releases to Maven Central\n\nAfter 1.0 release of Shipkit we need to figure out how to model this conditional release.\nThis bug leads me to believe that we need to eliminate this logic from Mockito.\nThis way it can be a part of Shipkit and be well tested & documented."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/shipkit.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTI1ODM2MzkyOmQzYTk3OTY3MjUxZWM4MTZjMGI1NzFlZmQ2MjI2YWIyYWM2MmMzY2U=",
                "url": "https://github.com/mockito/mockito/pull/1129/commits/d3a97967251ec816c0b571efd6226ab2ac62c3ce"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1127,
                "url": "https://github.com/mockito/mockito/issues/1127",
                "title": "Version not released to Maven Central",
                "bodyHTML": "<p dir=\"auto\">2 days ago I requested a <a href=\"https://github.com/mockito/mockito/commit/04961ae3cc8093916f563d7edc223224d757a4a1\">build</a> with Maven Central sync (having notable changes merged). Looking into release configuration I used <code class=\"notranslate\">[ci maven-central-release]</code> and it seems to be <a href=\"https://travis-ci.org/mockito/mockito/jobs/242215132#L842\" rel=\"nofollow\">enabled</a> in Travis.</p>\n<p dir=\"auto\">However, that release is not <a href=\"https://maven-badges.herokuapp.com/maven-central/org.mockito/mockito-core\" rel=\"nofollow\">available</a> in Maven Central (2.8.9 is the newest as time of raising this issue instead of 2.8.44).</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/szczepiq/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/szczepiq\">@szczepiq</a> Is there anything else (with the current release mechanism) that is needed to do to build a \"notable version\"?</p>",
                "resourcePath": "/mockito/mockito/issues/1127",
                "createdAt": "2017-06-14T09:56:30Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "question"
                      }
                    },
                    {
                      "node": {
                        "name": "continuous integration"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "[#1202] Java 9 CI build for Mockito 2.x",
        "url": "https://github.com/mockito/mockito/pull/1202",
        "resourcePath": "/mockito/mockito/pull/1202",
        "createdAt": "2017-10-08T09:34:12Z",
        "number": 1202,
        "mergeCommit": {
          "oid": "14c6171e7ffebf2d38a444584eae87837deb95cd",
          "message": "Merge pull request #1202 from mockito/java9in2x\n\n[#1202] Java 9 CI build for Mockito 2.x\r\n\r\n[ci skip-release]",
          "commitUrl": "https://github.com/mockito/mockito/commit/14c6171e7ffebf2d38a444584eae87837deb95cd",
          "parents": {
            "nodes": [
              {
                "oid": "5a5c409f561c853c04974c1542fe2f65c999c263",
                "message": "Fixes #1189: Add stable module name (#1195)\n\nThis patch adds a stable module name to the produced JAR in order to\r\nbe forwards compatible to Java 9."
              },
              {
                "oid": "e6271d8eaa82d713c5e151a0ad2c8b478926414a",
                "message": "Fix another test failing with Java 9"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".travis.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/mockito-core/inline-mock.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/mockito-core/javadoc.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/root/coverage.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/wrapper/gradle-wrapper.jar"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/wrapper/gradle-wrapper.properties"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/junit/UnusedStubbingsTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTQ1MzI3NTMzOmU2MjcxZDhlYWE4MmQ3MTNjNWUxNTFhMGFkMmM4YjQ3ODkyNjQxNGE=",
                "url": "https://github.com/mockito/mockito/pull/1202/commits/e6271d8eaa82d713c5e151a0ad2c8b478926414a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1198,
                "url": "https://github.com/mockito/mockito/issues/1198",
                "title": "\"Could not initialize inline Byte Buddy mock maker\" with Gradle 4.x",
                "bodyHTML": "<p dir=\"auto\">I tried to add Java 9 build for the Mockito 2.x branch which in turn requires Gradle upgrade to 4.x. Unfortunately with Gradle 4.x (tested with 4.0.1 and 4.2.1) 38 inline mock maker related tests are broken (without <code class=\"notranslate\">MOCK_MAKER</code> env variable defined).</p>\n<p dir=\"auto\">For example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMakerTest &gt; should_create_mock_from_interface FAILED\n    org.mockito.exceptions.base.MockitoInitializationException: \n    Could not initialize inline Byte Buddy mock maker. (This mock maker is not supported on Android.)\n\n    Java               : 1.8\n    JVM vendor name    : Oracle Corporation\n    JVM vendor version : 25.144-b01\n    JVM name           : OpenJDK 64-Bit Server VM\n    JVM version        : 1.8.0_144-b01\n    JVM info           : mixed mode\n    OS name            : Linux\n    OS version         : xxx\n        at org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.&lt;init&gt;(InlineByteBuddyMockMaker.java:171)\n        at org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMakerTest.&lt;init&gt;(InlineByteBuddyMockMakerTest.java:35)\n\n        Caused by:\n        java.lang.IllegalStateException: \n        The MockMethodDispatcher class file is not locatable: org/mockito/internal/creation/bytebuddy/MockMethodDispatcher.raw\n\n        The class loader responsible for looking up the resource: sun.misc.Launcher$AppClassLoader@73d16e93\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMakerTest &gt; should_create_mock_from_interface FAILED\n    org.mockito.exceptions.base.MockitoInitializationException: \n    Could not initialize inline Byte Buddy mock maker. (This mock maker is not supported on Android.)\n\n    Java               : 1.8\n    JVM vendor name    : Oracle Corporation\n    JVM vendor version : 25.144-b01\n    JVM name           : OpenJDK 64-Bit Server VM\n    JVM version        : 1.8.0_144-b01\n    JVM info           : mixed mode\n    OS name            : Linux\n    OS version         : xxx\n        at org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.&lt;init&gt;(InlineByteBuddyMockMaker.java:171)\n        at org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMakerTest.&lt;init&gt;(InlineByteBuddyMockMakerTest.java:35)\n\n        Caused by:\n        java.lang.IllegalStateException: \n        The MockMethodDispatcher class file is not locatable: org/mockito/internal/creation/bytebuddy/MockMethodDispatcher.raw\n\n        The class loader responsible for looking up the resource: sun.misc.Launcher$AppClassLoader@73d16e93\n</code></pre></div>\n<p dir=\"auto\">Travis build reproducing that issue with Oracle JDK (just Gradle upgrade in the <code class=\"notranslate\">brokenWithGradle4</code> branch):<br>\n<a href=\"https://travis-ci.org/mockito/mockito/jobs/283893407#L793\" rel=\"nofollow\">https://travis-ci.org/mockito/mockito/jobs/283893407#L793</a></p>\n<p dir=\"auto\">I don't know why the Gradle upgrade can result in that behavior. Especially that \"The MockMethodDispatcher class file is not locatable: org/mockito/internal/creation/bytebuddy/MockMethodDispatcher.raw\" sounds strange.</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/raphw/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/raphw\">@raphw</a> Under what circumstances that BB error can occur (even abstracting it from Gradle)?</p>",
                "resourcePath": "/mockito/mockito/issues/1198",
                "createdAt": "2017-10-05T21:00:23Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "final-class-or-methods"
                      }
                    },
                    {
                      "node": {
                        "name": "build"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #1211: Improve @deprecated JavaDoc",
        "url": "https://github.com/mockito/mockito/pull/1214",
        "resourcePath": "/mockito/mockito/pull/1214",
        "createdAt": "2017-10-20T11:58:54Z",
        "number": 1214,
        "mergeCommit": {
          "oid": "f4c448ecedccad939421b2f495315ae9f6955ef3",
          "message": "Fixes #1211: Improve @deprecated JavaDoc (#1214)",
          "commitUrl": "https://github.com/mockito/mockito/commit/f4c448ecedccad939421b2f495315ae9f6955ef3",
          "parents": {
            "nodes": [
              {
                "oid": "d25b75c124917e57217fa2d21d5dc2724dfa50e2",
                "message": "Use junit.Assert instead of junit.framework.TestCase (#1209)\n\nFix JUnit imports throughout the project to use the standard\r\norg.junit.Assert assertions instead of the obsolete\r\njunit.framework.TestCase assertions which just delegate to Assert's\r\nmethods."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/Mockito.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/MockitoDebugger.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTQ3NzgzMDA1OjVlMGUwYzlmZWQwYjkxNTIzYTJmMDQ4M2Q1YjFmNDU5ODM4MjA2NGM=",
                "url": "https://github.com/mockito/mockito/pull/1214/commits/5e0e0c9fed0b91523a2f0483d5b1f4598382064c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1211,
                "url": "https://github.com/mockito/mockito/issues/1211",
                "title": "improve @deprecated JavaDoc of MockitoDebugger",
                "bodyHTML": "<p dir=\"auto\">The <code class=\"notranslate\">@deprecated</code> JavaDoc of :</p>\n<ul dir=\"auto\">\n<li>method: <code class=\"notranslate\">Mockito.debug()</code></li>\n<li>class: <code class=\"notranslate\">MockitoDebugger</code></li>\n<li>method <code class=\"notranslate\">MockitoDebugger.printInvocations()</code></li>\n</ul>\n<p dir=\"auto\">... should point to <code class=\"notranslate\">Mockito.mockingDetails(..).printInvocations()</code>. Currently its too hard to find the rigth entry point for the replacement.</p>",
                "resourcePath": "/mockito/mockito/issues/1211",
                "createdAt": "2017-10-19T13:13:56Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix issue #1222 and #584",
        "url": "https://github.com/mockito/mockito/pull/1224",
        "resourcePath": "/mockito/mockito/pull/1224",
        "createdAt": "2017-10-26T13:57:45Z",
        "number": 1224,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/ArgumentMatchers.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/invocation/MatcherApplicationStrategy.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/matchers/TreatVarargsAsArray.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/matchers/text/MatcherToString.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/progress/ArgumentMatcherStorage.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/progress/ArgumentMatcherStorageImpl.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/matchers/TreatVarargsAsArrayTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/matchers/VarargsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/verification/BasicVerificationTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTQ4OTQyNTA0OmJlMGNkMzNiMTViMGVkYTFhOTZmODQyZGM0YTliZWFhMTAwZTM3ZWQ=",
                "url": "https://github.com/mockito/mockito/pull/1224/commits/be0cd33b15b0eda1a96f842dc4a9beaa100e37ed"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 584,
                "url": "https://github.com/mockito/mockito/issues/584",
                "title": "ArgumentCaptor can't capture varargs-arrays",
                "bodyHTML": "<p dir=\"auto\">Relates to: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"161045110\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/439\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/439/hovercard\" href=\"https://github.com/mockito/mockito/issues/439\">#439</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"171595839\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/565\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/565/hovercard\" href=\"https://github.com/mockito/mockito/issues/565\">#565</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"172132167\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/567\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/567/hovercard\" href=\"https://github.com/mockito/mockito/issues/567\">#567</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"172674768\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/583\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/583/hovercard\" href=\"https://github.com/mockito/mockito/issues/583\">#583</a></p>\n<p dir=\"auto\">ArgumentCaptor can't capture varargs-arrays.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Test\npublic void shouldCaptureVarArgsAsArray() throws Exception {\n    ArgumentCaptor&lt;String[]&gt; varargCaptor = ArgumentCaptor.forClass(String[].class);\n\n    mock.varargs(&quot;1&quot;,&quot;2&quot;);   \n\n    verify(mock).varargs(varargCaptor.capture());\n\n    assertThat(varargCaptor).containsExactly(new String[]{&quot;1&quot;,&quot;2&quot;});\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@Test\npublic void shouldCaptureVarArgsAsArray() throws Exception {\n    ArgumentCaptor&lt;String[]&gt; varargCaptor = ArgumentCaptor.forClass(String[].class);\n\n    mock.varargs(\"1\",\"2\");   \n\n    verify(mock).varargs(varargCaptor.capture());\n\n    assertThat(varargCaptor).containsExactly(new String[]{\"1\",\"2\"});\n}\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected:</strong> A <code class=\"notranslate\">ArgumentCaptor&lt;String[]&gt;</code> should be able to capture the varargs-array as a whole.<br>\n<strong>Actual:</strong> The ArgumentCaptor captures no arrays but every single argument passed to the varargs method. The following exception is thrown:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.AssertionError: \nActual and expected should have same size but actual size was:\n  &lt;2&gt;\nwhile expected size was:\n  &lt;1&gt;\nActual was:\n  &lt;[&quot;1&quot;, &quot;2&quot;]&gt;\nExpected was:\n  &lt;[[&quot;1&quot;, &quot;2&quot;]]&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.AssertionError: \nActual and expected should have same size but actual size was:\n  &lt;2&gt;\nwhile expected size was:\n  &lt;1&gt;\nActual was:\n  &lt;[\"1\", \"2\"]&gt;\nExpected was:\n  &lt;[[\"1\", \"2\"]]&gt;\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/584",
                "createdAt": "2016-08-23T11:43:08Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "ready"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 1222,
                "url": "https://github.com/mockito/mockito/issues/1222",
                "title": "Cannot verify varargs parameter as an array",
                "bodyHTML": "<p dir=\"auto\">Cannot verify the varargs by comparing with an array.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Test\n    public void shouldVerifyVarargsAsArray() throws Exception {\n        IMethods mock = mock(IMethods.class);\n\n        mock.mixedVarargs(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);\n\n        verify(mock).mixedVarargs(any(), eq(new String[] {&quot;2&quot;, &quot;3&quot;}));\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    @Test\n    public void shouldVerifyVarargsAsArray() throws Exception {\n        IMethods mock = mock(IMethods.class);\n\n        mock.mixedVarargs(\"1\", \"2\", \"3\");\n\n        verify(mock).mixedVarargs(any(), eq(new String[] {\"2\", \"3\"}));\n    }\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected:</strong> test runs successfully<br>\n<strong>Actual:</strong> the test fails with an argument mismatch error.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockitousage.verification.BasicVerificationTest &gt; shouldVerifyVarargsAsArray FAILED\n    Argument(s) are different! Wanted:\n    iMethods.mixedVarargs(&lt;any&gt;, [&quot;2&quot;, &quot;3&quot;]);\n    -&gt; at org.mockitousage.verification.BasicVerificationTest.shouldVerifyVarargsAsArray(BasicVerificationTest.java:125)\n    Actual invocation has different arguments:\n    iMethods.mixedVarargs(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);\n    -&gt; at org.mockitousage.verification.BasicVerificationTest.shouldVerifyVarargsAsArray(BasicVerificationTest.java:123)\n    ...\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockitousage.verification.BasicVerificationTest &gt; shouldVerifyVarargsAsArray FAILED\n    Argument(s) are different! Wanted:\n    iMethods.mixedVarargs(&lt;any&gt;, [\"2\", \"3\"]);\n    -&gt; at org.mockitousage.verification.BasicVerificationTest.shouldVerifyVarargsAsArray(BasicVerificationTest.java:125)\n    Actual invocation has different arguments:\n    iMethods.mixedVarargs(\"1\", \"2\", \"3\");\n    -&gt; at org.mockitousage.verification.BasicVerificationTest.shouldVerifyVarargsAsArray(BasicVerificationTest.java:123)\n    ...\n</code></pre></div>\n<p dir=\"auto\">This was found while upgrading from 1.9.5. In that version it was possible to achieve something similar by creating a custom ArgumentMatcher that implemented VarargMatcher. In that case the ArgumentMatcher was given the varargs as an array. However, in the latest version the same matcher is passed each vararg separately which prevents it from matching.</p>\n<p dir=\"auto\">It is not possible to inline the array as follows because in the actual code the contents of the array are passed as an array into the method that does the verification.<br>\n<code class=\"notranslate\">verify(mock).mixedVarargs(any(), eq(\"1\"), eq(\"2\"));</code></p>\n<p dir=\"auto\">I tried doing something like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    verify(mock).mixedVarargs(any(), inline(new String[] {&quot;1&quot;, &quot;2&quot;}));\n  }\n  public static &lt;T&gt; T inline(T[] array) {\n    for (Object o : array) {\n      eq(o);\n    }\n    return null;\n  }\"><pre class=\"notranslate\"><code class=\"notranslate\">    verify(mock).mixedVarargs(any(), inline(new String[] {\"1\", \"2\"}));\n  }\n  public static &lt;T&gt; T inline(T[] array) {\n    for (Object o : array) {\n      eq(o);\n    }\n    return null;\n  }\n</code></pre></div>\n<p dir=\"auto\">But that failed in MatchersBinder because the number of matchers provided (3) did not match the number of arguments passed in the invocation (2).</p>\n<p dir=\"auto\">I also tried to remove the VarargMatcher from the custom ArgumentMatcher but that failed too as the number of arguments did not match in MatcherApplicationStrategy.</p>",
                "resourcePath": "/mockito/mockito/issues/1222",
                "createdAt": "2017-10-26T10:05:05Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Extend MockitoSession(Builder) API to enable usage by testing frameworks",
        "url": "https://github.com/mockito/mockito/pull/1301",
        "resourcePath": "/mockito/mockito/pull/1301",
        "createdAt": "2018-01-28T19:17:04Z",
        "number": 1301,
        "mergeCommit": {
          "oid": "6a96433a5b85a01475570396dd9616be19df1a9a",
          "message": "Merge branch 'release/2.x' into issues/1232-session-additions",
          "commitUrl": "https://github.com/mockito/mockito/commit/6a96433a5b85a01475570396dd9616be19df1a9a",
          "parents": {
            "nodes": [
              {
                "oid": "b96d7e1612dc03ee5dbbcc9a723c07ccea2c385c",
                "message": "Add missing </a> tags"
              },
              {
                "oid": "56a94f04070d8b1b96e98f156ec9b19beec44d2d",
                "message": "2.14.0 release (previous 2.13.3) + release notes updated by CI build 3201\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/main/java/org/mockito/internal/runners/DefaultTestFinishedEvent.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/session/DefaultMockitoSessionBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/session/MockitoLoggerAdapter.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/session/MockitoSessionLoggerAdapter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/session/MockitoSessionBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/session/MockitoSessionLogger.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/session/DefaultMockitoSessionBuilderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/session/MockitoSessionTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/stubbing/StubbingWarningsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "version.properties"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTY1NTgyMjg1OjZhOTY0MzNhNWI4NWEwMTQ3NTU3MDM5NmRkOTYxNmJlMTlkZjFhOWE=",
                "url": "https://github.com/mockito/mockito/pull/1301/commits/6a96433a5b85a01475570396dd9616be19df1a9a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1232,
                "url": "https://github.com/mockito/mockito/issues/1232",
                "title": "[JUnit5] MockitoSession#initMocks should support multiple test instances  ",
                "bodyHTML": "<p dir=\"auto\">In order to support nested tests in JUnit5 (see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"268195008\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1221\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/1221/hovercard\" href=\"https://github.com/mockito/mockito/pull/1221\">#1221</a>)  MockitoSession#initMocks should allow to pass more than one test instance or allow multiple calls on initMocks with different test instances.</p>\n<p dir=\"auto\">In other words/code:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" Mockito.mockitoSession()\n            .initMocks(rootTestInstance)\n            .initMock(nestedTestInstance)\"><pre class=\"notranslate\"><code class=\"notranslate\"> Mockito.mockitoSession()\n            .initMocks(rootTestInstance)\n            .initMock(nestedTestInstance)\n</code></pre></div>\n<p dir=\"auto\">or</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" Mockito.mockitoSession()\n            .initMocks(rootTestInstance,nestedTestInstance)\"><pre class=\"notranslate\"><code class=\"notranslate\"> Mockito.mockitoSession()\n            .initMocks(rootTestInstance,nestedTestInstance)\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/1232",
                "createdAt": "2017-10-28T20:36:08Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "junit5"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Update shipkit to v2.0.12",
        "url": "https://github.com/mockito/mockito/pull/1347",
        "resourcePath": "/mockito/mockito/pull/1347",
        "createdAt": "2018-03-25T12:44:09Z",
        "number": 1347,
        "mergeCommit": {
          "oid": "96de03bc4c425ecc9f420e5dcd75a48ffa1d84bd",
          "message": "Update version of Shipkit to 2.0.12 to fix dependency check problem (#1347)",
          "commitUrl": "https://github.com/mockito/mockito/commit/96de03bc4c425ecc9f420e5dcd75a48ffa1d84bd",
          "parents": {
            "nodes": [
              {
                "oid": "2cfab085e81680f60e933fd262da1c7c61fbf6cf",
                "message": "2.17.1 release (previous 2.17.0) + release notes updated by CI build 3292\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "build.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTc3Mjg3NjI2OmIzNjM2ZDgzY2NlNTdhMzVjZjcxNjA5NTA2NTIxYzc0MjljNGQ4NGM=",
                "url": "https://github.com/mockito/mockito/pull/1347/commits/b3636d83cce57a35cf71609506521c7429c4d84c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 679,
                "url": "https://github.com/mockito/shipkit/issues/679",
                "title": "Publication(s) comparison doesn't handle dependency change only",
                "bodyHTML": "<p dir=\"auto\">One commit in Mockito changed only the project <a href=\"https://github.com/mockito/mockito/commit/cbc7a99db706621bdb6728cb64d2b0d9be6a8034\">dependencies</a>. The corresponding Shipkit Travis <a href=\"https://travis-ci.org/mockito/mockito/jobs/357999739#L983\" rel=\"nofollow\">build</a> detected no changes in publications and the release hasn't been executed.</p>\n<p dir=\"auto\">As a workaround the release has to forced manually.</p>",
                "resourcePath": "/mockito/shipkit/issues/679",
                "createdAt": "2018-03-25T10:59:20Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix #1346 - Different mocks are used for @Mock and @InjectMock in the same test class with JUnit 5 extension",
        "url": "https://github.com/mockito/mockito/pull/1349",
        "resourcePath": "/mockito/mockito/pull/1349",
        "createdAt": "2018-03-26T09:44:50Z",
        "number": 1349,
        "mergeCommit": {
          "oid": "d10a54335d0cc6c0e65d747c01b1cef281ef6ae8",
          "message": "Fix #1346 - Different mocks are used for @Mock and @InjectMocks in the same test class with JUnit 5 extension (#1349)",
          "commitUrl": "https://github.com/mockito/mockito/commit/d10a54335d0cc6c0e65d747c01b1cef281ef6ae8",
          "parents": {
            "nodes": [
              {
                "oid": "34877f1d9641e44b566dd95af1869aa9a9537cc0",
                "message": "Revert \"Update version of Shipkit to 2.0.12 to fix dependency check problem (#1347)\"\n\nThis reverts commit 96de03bc4c425ecc9f420e5dcd75a48ffa1d84bd."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/MockitoExtension.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/JunitJupiterTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTc3MzkyNDc1OmVlYmQxNWI0MzM4MDFhODQyYTdjNzFiN2JjZjEzZjViYmEzM2FiN2U=",
                "url": "https://github.com/mockito/mockito/pull/1349/commits/eebd15b433801a842a7c71b7bcf13f5bba33ab7e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1346,
                "url": "https://github.com/mockito/mockito/issues/1346",
                "title": "Different mocks are used for @Mock and @InjectMock in the same test class with JUnit 5 extension",
                "bodyHTML": "<p dir=\"auto\">I've been playing with the new JUnit 5 support in Mockito 2.17.0. I have found that with <code class=\"notranslate\">@Mock</code> and <code class=\"notranslate\">@InjectMocks</code> used in the same test class different mocks are injected. I would expect to have the same mock reused (as it works with JUnit 4 or manual <code class=\"notranslate\">@Mock</code> initialization).</p>\n<p dir=\"auto\">Sample code:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@ExtendWith(MockitoExtension.class)\npublic class SpaceShip5BugMiniTest {\n\n    @InjectMocks\n    private SpaceShip spaceShip;\n\n    @Mock\n    private TacticalStation tacticalStation;\n\n    @Test\n    public void shouldInjectMocks() {\n        assertThat(tacticalStation).isNotNull();\n        assertThat(spaceShip.getTacticalStation()).isEqualTo(tacticalStation);  \n        //Bug \u2191 - different mocks are use in @Mock and @InjectMock\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@ExtendWith(MockitoExtension.class)\npublic class SpaceShip5BugMiniTest {\n\n    @InjectMocks\n    private SpaceShip spaceShip;\n\n    @Mock\n    private TacticalStation tacticalStation;\n\n    @Test\n    public void shouldInjectMocks() {\n        assertThat(tacticalStation).isNotNull();\n        assertThat(spaceShip.getTacticalStation()).isEqualTo(tacticalStation);  \n        //Bug \u2191 - different mocks are use in @Mock and @InjectMock\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">Error message:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.opentest4j.AssertionFailedError: \nExpecting:\n &lt;&quot;tacticalStation (TacticalStation$MockitoMock$991606095@61d6015a)&quot;&gt;\nto be equal to:\n &lt;&quot;tacticalStation (TacticalStation$MockitoMock$991606095@b62d79)&quot;&gt;\nbut was not.\nExpected :tacticalStation\nActual   :tacticalStation\"><pre class=\"notranslate\"><code class=\"notranslate\">org.opentest4j.AssertionFailedError: \nExpecting:\n &lt;\"tacticalStation (TacticalStation$MockitoMock$991606095@61d6015a)\"&gt;\nto be equal to:\n &lt;\"tacticalStation (TacticalStation$MockitoMock$991606095@b62d79)\"&gt;\nbut was not.\nExpected :tacticalStation\nActual   :tacticalStation\n</code></pre></div>\n<p dir=\"auto\">The minimal (non-)working example is available <a href=\"https://github.com/szpak/code-examples-and-poc/tree/mockito2junit5-bug/mockito2-junit5\">here</a>.</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/TimvdLippe/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/TimvdLippe\">@TimvdLippe</a> Do you have an idea what could be wrong?</p>\n<p dir=\"auto\">Mockito 2.17.0 (2.17.1 is not being released due to (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"308340128\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/shipkit/issues/679\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/shipkit/issues/679/hovercard\" href=\"https://github.com/mockito/shipkit/issues/679\">mockito/shipkit#679</a>), junit-jupiter 5.1.0, OpenJDK 1.8.0_161, Linux.</p>\n<h3 dir=\"auto\">Checklist:</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/master/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/1346",
                "createdAt": "2018-03-25T12:31:24Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "bug"
                      }
                    },
                    {
                      "node": {
                        "name": "injection"
                      }
                    },
                    {
                      "node": {
                        "name": "junit5"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Performance improvements",
        "url": "https://github.com/mockito/mockito/pull/1369",
        "resourcePath": "/mockito/mockito/pull/1369",
        "createdAt": "2018-04-15T20:21:47Z",
        "number": 1369,
        "mergeCommit": {
          "oid": "6aa36ae19418b933eee390c48635bf3f6c95b67a",
          "message": "Performance improvements: Use less expensive method graph compiler for inline mock maker. Update Byte Buddy for general performance improvements and bug fixes. Fixes #1364. Also fixes javadoc warning. (#1369)",
          "commitUrl": "https://github.com/mockito/mockito/commit/6aa36ae19418b933eee390c48635bf3f6c95b67a",
          "parents": {
            "nodes": [
              {
                "oid": "217ef4d11dbb64847ff12ca78c436614be380d0e",
                "message": "2.18.1 release (previous 2.18.0) + release notes updated by CI build 3390\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/dependencies.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineBytecodeGenerator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/MockitoExtension.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTgxNzE4NzM0OmY3Mzg3MWQ1M2U5NmFlMmMzYjUxNzdhMWY3NjNkOGE4OTQ5OTI1ZmE=",
                "url": "https://github.com/mockito/mockito/pull/1369/commits/f73871d53e96ae2c3b5177a1f763d8a8949925fa"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1364,
                "url": "https://github.com/mockito/mockito/issues/1364",
                "title": "Unable to mock interfaces in Android instrumentation tests",
                "bodyHTML": "<p dir=\"auto\">Consider the following Android instrumentation test:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Test\npublic void testMockito() {\n    final Collection mockCollection = Mockito.mock(Collection.class);\n\n    Assert.assertTrue(true);\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@Test\npublic void testMockito() {\n    final Collection mockCollection = Mockito.mock(Collection.class);\n\n    Assert.assertTrue(true);\n}\n</code></pre></div>\n<p dir=\"auto\">When run, I see the following output:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Testing started at 21:54 ...\n\n04/08 21:54:01: Launching testMockito()\nNo apk changes detected since last installation, skipping installation of D:\\Code\\TestApp\\app\\build\\outputs\\apk\\debug\\app-debug.apk\n$ adb push D:\\Code\\TestApp\\app\\build\\outputs\\apk\\androidTest\\debug\\app-debug-androidTest.apk /data/local/tmp/com.example.zolbr.testapp.test\n$ adb shell pm install -t -r &quot;/data/local/tmp/com.example.zolbr.testapp.test&quot;\nSuccess\n\n\nRunning tests\n\n$ adb shell am instrument -w -r   -e debug false -e class 'com.example.zolbr.testapp.ExampleInstrumentedTest#testMockito' com.example.zolbr.testapp.test/android.support.test.runner.AndroidJUnitRunner\nClient not ready yet..\nStarted running tests\n\norg.mockito.exceptions.base.MockitoException:\nMockito cannot mock this class: interface java.util.Collection.\n\nMockito can only mock non-private &amp; non-final classes.\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\n\nIMPORTANT INFORMATION FOR ANDROID USERS:\n\nThe regular Byte Buddy mock makers cannot generate code on an Android VM!\nTo resolve this, please use the 'mockito-android' dependency for your application:\nhttp://search.maven.org/#search%7Cga%7C1%7Ca%3A%22mockito-android%22%20g%3A%22org.mockito%22\n\nJava               : 0.9\nJVM vendor name    : The Android Project\nJVM vendor version : 2.1.0\nJVM name           : Dalvik\nJVM version        : 0.9\nJVM info           : null\nOS name            : Linux\nOS version         : 3.18.56+\n\n\nUnderlying exception : java.lang.IllegalArgumentException: Could not create type\nat com.example.zolbr.testapp.ExampleInstrumentedTest.testMockito(ExampleInstrumentedTest.java:40)\nat java.lang.reflect.Method.invoke(Native Method)\nat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\nat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\nat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\nat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\nat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\nat org.junit.runners.Suite.runChild(Suite.java:128)\nat org.junit.runners.Suite.runChild(Suite.java:27)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\nat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\nat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\nat android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:58)\nat android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:375)\nat android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2074)\nCaused by: java.lang.IllegalArgumentException: Could not create type\nat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:139)\nat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:345)\nat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:160)\nat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:354)\nat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:32)\nat org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMockType(SubclassByteBuddyMockMaker.java:71)\nat org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMock(SubclassByteBuddyMockMaker.java:42)\nat org.mockito.android.internal.creation.AndroidByteBuddyMockMaker.createMock(AndroidByteBuddyMockMaker.java:39)\nat org.mockito.internal.util.MockUtil.createMock(MockUtil.java:35)\nat org.mockito.internal.MockitoCore.mock(MockitoCore.java:65)\nat org.mockito.Mockito.mock(Mockito.java:1875)\nat org.mockito.Mockito.mock(Mockito.java:1784)\n... 28 more\nCaused by: java.lang.IncompatibleClassChangeError: The method 'int java.lang.Object.hashCode()' was expected to be of type interface but instead was found to be of type virtual (declaration of 'net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForImplementation' appears in /data/app/com.example.zolbr.testapp.test-OVcvUgjejP8CYF6lGYt9Pg==/base.apk)\nat net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForImplementation.hashCode(Unknown Source:2)\nat java.util.HashMap.hash(HashMap.java:338)\nat java.util.HashMap.put(HashMap.java:611)\nat java.util.HashSet.add(HashSet.java:219)\nat net.bytebuddy.dynamic.scaffold.MethodRegistry$Default.prepare(MethodRegistry.java:409)\nat net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder.make(SubclassDynamicTypeBuilder.java:162)\nat net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder.make(SubclassDynamicTypeBuilder.java:155)\nat net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase.make(DynamicType.java:2669)\nat org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.mockClass(SubclassBytecodeGenerator.java:123)\nat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:37)\nat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:34)\nat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:137)\n... 39 more\"><pre class=\"notranslate\"><code class=\"notranslate\">Testing started at 21:54 ...\n\n04/08 21:54:01: Launching testMockito()\nNo apk changes detected since last installation, skipping installation of D:\\Code\\TestApp\\app\\build\\outputs\\apk\\debug\\app-debug.apk\n$ adb push D:\\Code\\TestApp\\app\\build\\outputs\\apk\\androidTest\\debug\\app-debug-androidTest.apk /data/local/tmp/com.example.zolbr.testapp.test\n$ adb shell pm install -t -r \"/data/local/tmp/com.example.zolbr.testapp.test\"\nSuccess\n\n\nRunning tests\n\n$ adb shell am instrument -w -r   -e debug false -e class 'com.example.zolbr.testapp.ExampleInstrumentedTest#testMockito' com.example.zolbr.testapp.test/android.support.test.runner.AndroidJUnitRunner\nClient not ready yet..\nStarted running tests\n\norg.mockito.exceptions.base.MockitoException:\nMockito cannot mock this class: interface java.util.Collection.\n\nMockito can only mock non-private &amp; non-final classes.\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\n\nIMPORTANT INFORMATION FOR ANDROID USERS:\n\nThe regular Byte Buddy mock makers cannot generate code on an Android VM!\nTo resolve this, please use the 'mockito-android' dependency for your application:\nhttp://search.maven.org/#search%7Cga%7C1%7Ca%3A%22mockito-android%22%20g%3A%22org.mockito%22\n\nJava               : 0.9\nJVM vendor name    : The Android Project\nJVM vendor version : 2.1.0\nJVM name           : Dalvik\nJVM version        : 0.9\nJVM info           : null\nOS name            : Linux\nOS version         : 3.18.56+\n\n\nUnderlying exception : java.lang.IllegalArgumentException: Could not create type\nat com.example.zolbr.testapp.ExampleInstrumentedTest.testMockito(ExampleInstrumentedTest.java:40)\nat java.lang.reflect.Method.invoke(Native Method)\nat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\nat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\nat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\nat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\nat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\nat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\nat org.junit.runners.Suite.runChild(Suite.java:128)\nat org.junit.runners.Suite.runChild(Suite.java:27)\nat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\nat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\nat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\nat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\nat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\nat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\nat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\nat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\nat android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:58)\nat android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:375)\nat android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2074)\nCaused by: java.lang.IllegalArgumentException: Could not create type\nat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:139)\nat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:345)\nat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:160)\nat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:354)\nat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:32)\nat org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMockType(SubclassByteBuddyMockMaker.java:71)\nat org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.createMock(SubclassByteBuddyMockMaker.java:42)\nat org.mockito.android.internal.creation.AndroidByteBuddyMockMaker.createMock(AndroidByteBuddyMockMaker.java:39)\nat org.mockito.internal.util.MockUtil.createMock(MockUtil.java:35)\nat org.mockito.internal.MockitoCore.mock(MockitoCore.java:65)\nat org.mockito.Mockito.mock(Mockito.java:1875)\nat org.mockito.Mockito.mock(Mockito.java:1784)\n... 28 more\nCaused by: java.lang.IncompatibleClassChangeError: The method 'int java.lang.Object.hashCode()' was expected to be of type interface but instead was found to be of type virtual (declaration of 'net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForImplementation' appears in /data/app/com.example.zolbr.testapp.test-OVcvUgjejP8CYF6lGYt9Pg==/base.apk)\nat net.bytebuddy.dynamic.scaffold.MethodRegistry$Handler$ForImplementation.hashCode(Unknown Source:2)\nat java.util.HashMap.hash(HashMap.java:338)\nat java.util.HashMap.put(HashMap.java:611)\nat java.util.HashSet.add(HashSet.java:219)\nat net.bytebuddy.dynamic.scaffold.MethodRegistry$Default.prepare(MethodRegistry.java:409)\nat net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder.make(SubclassDynamicTypeBuilder.java:162)\nat net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder.make(SubclassDynamicTypeBuilder.java:155)\nat net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase.make(DynamicType.java:2669)\nat org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.mockClass(SubclassBytecodeGenerator.java:123)\nat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:37)\nat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:34)\nat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:137)\n... 39 more\n</code></pre></div>\n<p dir=\"auto\">This only occurs when using mockito-android 2.18.0:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"androidTestImplementation 'org.mockito:mockito-android:2.18.0'\"><pre class=\"notranslate\"><code class=\"notranslate\">androidTestImplementation 'org.mockito:mockito-android:2.18.0'\n</code></pre></div>\n<p dir=\"auto\">Downgrading to 2.17.0 fixes this issue.</p>\n<p dir=\"auto\">This occurs on a Windows 10 dev machine running Android Studio 3.1.</p>",
                "resourcePath": "/mockito/mockito/issues/1364",
                "createdAt": "2018-04-09T01:57:37Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "bug"
                      }
                    },
                    {
                      "node": {
                        "name": "android"
                      }
                    },
                    {
                      "node": {
                        "name": "byte-buddy-1.8.0"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": " Fixes #1371 : Adding Suppliers to Returns object",
        "url": "https://github.com/mockito/mockito/pull/1373",
        "resourcePath": "/mockito/mockito/pull/1373",
        "createdAt": "2018-04-16T19:20:24Z",
        "number": 1373,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/SerializableSupplier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/BaseStubbing.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/StubberImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/answers/Returns.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/OngoingStubbing.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/Stubber.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/MockitoTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/ReturnsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/matchers/MatchersTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/matchers/MoreMatchersTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTgxOTYyNzE1OmZjMGNiYjQ1ZWFmMDNlMTNmYmNlNmM2NGUyOWRiNWRlZmU1YTg2MjQ=",
                "url": "https://github.com/mockito/mockito/pull/1373/commits/fc0cbb45eaf03e13fbce6c64e29db5defe5a8624"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1371,
                "url": "https://github.com/mockito/mockito/issues/1371",
                "title": "Update OngoingStubbing to take a Supplier<T>",
                "bodyHTML": "<p dir=\"auto\">Currently the OngoingStubbing interface only supports single values or varargs as part of the <code class=\"notranslate\">thenReturn()</code> method.  This method should be overloaded to include <code class=\"notranslate\">thenReturn(Supplier&lt;T&gt;)</code>.  This feature will users testing streaming processes by being able to have new objects generated for each iteration through their pipeline.</p>",
                "resourcePath": "/mockito/mockito/issues/1371",
                "createdAt": "2018-04-16T15:37:54Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "2.* incompatible"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make MockitoExtension constructor public",
        "url": "https://github.com/mockito/mockito/pull/1391",
        "resourcePath": "/mockito/mockito/pull/1391",
        "createdAt": "2018-05-17T09:26:34Z",
        "number": 1391,
        "mergeCommit": {
          "oid": "3f96f3b5adc7618ab0dc95d712a7b19b6b6e85ac",
          "message": "Make MockitoExtension constructor public (#1391)\n\n* Make MockitoExtension constructor public\r\n\r\nIt is possible to register an extension for automatic use using Java's `ServiceLoader` mechanism.\r\n\r\nhttps://junit.org/junit5/docs/current/user-guide/#extensions-registration-automatic\r\n\r\nSome projects may want to provide their own `META-INF` file to avoid tediously adding `MockitoExtension` to tests since it is very common. However, `ServiceLoader` requires the class to have a no-args *public* constructor, so the current extension cannot be used with the `ServiceLoader` mechanism.\r\n\r\n* Add test",
          "commitUrl": "https://github.com/mockito/mockito/commit/3f96f3b5adc7618ab0dc95d712a7b19b6b6e85ac",
          "parents": {
            "nodes": [
              {
                "oid": "758ca3782fba18b8eaf1faed5d68084145f8802d",
                "message": "2.18.5 release (previous 2.18.4) + release notes updated by CI build 3418\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "settings.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/MockitoExtension.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junitJupiterExtensionTest/junitJupiterExtensionTest.gradle"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junitJupiterExtensionTest/src/test/java/org/mockitousage/NoExtendsTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junitJupiterExtensionTest/src/test/resources/META-INF/services/org.junit.jupiter.api.extension.Extension"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junitJupiterExtensionTest/src/test/resources/junit-platform.properties"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MTg4Njc0MjY4OjdlOTcxZmRhZjM5MDkwYTc0NWU3ODljMjQ3YzBmYjUwNjYyNTZhYzg=",
                "url": "https://github.com/mockito/mockito/pull/1391/commits/7e971fdaf39090a745e789c247c0fb5066256ac8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1390,
                "url": "https://github.com/mockito/mockito/issues/1390",
                "title": "MockitoExtension cannot be registered as a global junit5 extension.",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">MockitoExtension</code> doesn't expose its constructor so it can't be loaded by <code class=\"notranslate\">ServiceLoader.</code></p>\n<p dir=\"auto\">When trying to register <code class=\"notranslate\">MockitoExtension</code> for automatic use using a file named <code class=\"notranslate\">META-INF\\services\\org.junit.jupiter.api.extension.Extension</code> and content <code class=\"notranslate\">org.mockito.junit.jupiter.MockitoExtension</code></p>\n<p dir=\"auto\">the below error is thrown, using mockito-junit-jupiter 2.18.3</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.junit.jupiter.api.extension.Extension: org.mockito.junit.jupiter.MockitoExtension Unable to get public no-arg constructor\njava.util.ServiceConfigurationError: org.junit.jupiter.api.extension.Extension: org.mockito.junit.jupiter.MockitoExtension Unable to get public no-arg constructor\n\tat java.base/java.util.ServiceLoader.fail(ServiceLoader.java:581)\n\tat java.base/java.util.ServiceLoader.getConstructor(ServiceLoader.java:672)\n\tat java.base/java.util.ServiceLoader.access$1000(ServiceLoader.java:390)\n\tat java.base/java.util.ServiceLoader$LazyClassPathLookupIterator.hasNextService(ServiceLoader.java:1232)\n\tat java.base/java.util.ServiceLoader$LazyClassPathLookupIterator.hasNext(ServiceLoader.java:1264)\n\tat java.base/java.util.ServiceLoader$2.hasNext(ServiceLoader.java:1299)\n\tat java.base/java.util.ServiceLoader$3.hasNext(ServiceLoader.java:1384)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:74)\n\tat org.junit.jupiter.engine.extension.ExtensionRegistry.registerAutoDetectedExtensions(ExtensionRegistry.java:102)\n\tat org.junit.jupiter.engine.extension.ExtensionRegistry.createRegistryWithDefaultExtensions(ExtensionRegistry.java:86)\n\tat org.junit.jupiter.engine.descriptor.JupiterEngineDescriptor.prepare(JupiterEngineDescriptor.java:37)\n\tat org.junit.jupiter.engine.descriptor.JupiterEngineDescriptor.prepare(JupiterEngineDescriptor.java:28)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.prepare(HierarchicalTestExecutor.java:89)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:74)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:92)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$100(JUnitPlatformTestClassProcessor.java:77)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:73)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\n\tat com.sun.proxy.$Proxy1.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:123)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\nCaused by: java.lang.NoSuchMethodException: org.mockito.junit.jupiter.MockitoExtension.&lt;init&gt;()\n\tat java.base/java.lang.Class.getConstructor0(Class.java:3302)\n\tat java.base/java.lang.Class.getConstructor(Class.java:2110)\n\tat java.base/java.util.ServiceLoader$1.run(ServiceLoader.java:659)\n\tat java.base/java.util.ServiceLoader$1.run(ServiceLoader.java:656)\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\n\tat java.base/java.util.ServiceLoader.getConstructor(ServiceLoader.java:667)\n\t... 46 more\"><pre class=\"notranslate\"><code class=\"notranslate\">org.junit.jupiter.api.extension.Extension: org.mockito.junit.jupiter.MockitoExtension Unable to get public no-arg constructor\njava.util.ServiceConfigurationError: org.junit.jupiter.api.extension.Extension: org.mockito.junit.jupiter.MockitoExtension Unable to get public no-arg constructor\n\tat java.base/java.util.ServiceLoader.fail(ServiceLoader.java:581)\n\tat java.base/java.util.ServiceLoader.getConstructor(ServiceLoader.java:672)\n\tat java.base/java.util.ServiceLoader.access$1000(ServiceLoader.java:390)\n\tat java.base/java.util.ServiceLoader$LazyClassPathLookupIterator.hasNextService(ServiceLoader.java:1232)\n\tat java.base/java.util.ServiceLoader$LazyClassPathLookupIterator.hasNext(ServiceLoader.java:1264)\n\tat java.base/java.util.ServiceLoader$2.hasNext(ServiceLoader.java:1299)\n\tat java.base/java.util.ServiceLoader$3.hasNext(ServiceLoader.java:1384)\n\tat java.base/java.lang.Iterable.forEach(Iterable.java:74)\n\tat org.junit.jupiter.engine.extension.ExtensionRegistry.registerAutoDetectedExtensions(ExtensionRegistry.java:102)\n\tat org.junit.jupiter.engine.extension.ExtensionRegistry.createRegistryWithDefaultExtensions(ExtensionRegistry.java:86)\n\tat org.junit.jupiter.engine.descriptor.JupiterEngineDescriptor.prepare(JupiterEngineDescriptor.java:37)\n\tat org.junit.jupiter.engine.descriptor.JupiterEngineDescriptor.prepare(JupiterEngineDescriptor.java:28)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.prepare(HierarchicalTestExecutor.java:89)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor$NodeExecutor.execute(HierarchicalTestExecutor.java:74)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:55)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:92)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$100(JUnitPlatformTestClassProcessor.java:77)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:73)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\n\tat com.sun.proxy.$Proxy1.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:123)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:155)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:137)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)\n\tat java.base/java.lang.Thread.run(Thread.java:844)\nCaused by: java.lang.NoSuchMethodException: org.mockito.junit.jupiter.MockitoExtension.&lt;init&gt;()\n\tat java.base/java.lang.Class.getConstructor0(Class.java:3302)\n\tat java.base/java.lang.Class.getConstructor(Class.java:2110)\n\tat java.base/java.util.ServiceLoader$1.run(ServiceLoader.java:659)\n\tat java.base/java.util.ServiceLoader$1.run(ServiceLoader.java:656)\n\tat java.base/java.security.AccessController.doPrivileged(Native Method)\n\tat java.base/java.util.ServiceLoader.getConstructor(ServiceLoader.java:667)\n\t... 46 more\n</code></pre></div>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/master/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/1390",
                "createdAt": "2018-05-17T09:25:55Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "junit5"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Workaround for wrong artifact ids",
        "url": "https://github.com/mockito/mockito/pull/1446",
        "resourcePath": "/mockito/mockito/pull/1446",
        "createdAt": "2018-07-26T03:39:08Z",
        "number": 1446,
        "mergeCommit": {
          "oid": "56019897f07e370087224533f42ee7b89acadb18",
          "message": "Merge pull request #1446 from mockito/fix-ids\n\nWorkaround for wrong artifact ids\r\n[ci maven-central-release]",
          "commitUrl": "https://github.com/mockito/mockito/commit/56019897f07e370087224533f42ee7b89acadb18",
          "parents": {
            "nodes": [
              {
                "oid": "101c588e06f44a81a6bd600234cb4907ff2ada20",
                "message": "2.20.0 release (previous 2.19.6) + release notes updated by CI build 3500\n\n[ci skip-release]"
              },
              {
                "oid": "1ab720c1c45277bdaf2f7bc75413af44f6620b0c",
                "message": "Workaround for wrong artifact ids\n\nWe can remove workaround when upstream bug is fixed: https://github.com/mockito/shipkit/issues/741"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "build.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "doc/release-notes/official.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/java-library.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjA0MDIwMTc0OjFhYjcyMGMxYzQ1Mjc3YmRhZjJmN2JjNzU0MTNhZjQ0ZjY2MjBiMGM=",
                "url": "https://github.com/mockito/mockito/pull/1446/commits/1ab720c1c45277bdaf2f7bc75413af44f6620b0c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1444,
                "url": "https://github.com/mockito/mockito/issues/1444",
                "title": "Artifact ID changes",
                "bodyHTML": "<p dir=\"auto\">Since <code class=\"notranslate\">2.20.0</code> Mockito Maven artifact IDs <a href=\"http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.mockito%22\" rel=\"nofollow\">have changed</a>.</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">mockito-android</code> \u2192 <code class=\"notranslate\">android</code></li>\n<li><code class=\"notranslate\">mockito-inline</code> \u2192 <code class=\"notranslate\">inline</code></li>\n<li><code class=\"notranslate\">mockito-junit-jupiter</code> \u2192 <code class=\"notranslate\">junit-jupiter</code></li>\n</ul>\n<p dir=\"auto\">Not sure if it is an intended change or not, so decided to clarify things a bit. So... Is it an intended change? It isn\u2019t mentioned in the changelog.</p>",
                "resourcePath": "/mockito/mockito/issues/1444",
                "createdAt": "2018-07-25T08:09:20Z",
                "labels": {
                  "edges": []
                }
              }
            },
            {
              "node": {
                "number": 741,
                "url": "https://github.com/mockito/shipkit/issues/741",
                "title": "Incorrect artifact id",
                "bodyHTML": "<p dir=\"auto\">Mockito was released with wrong artifact ids: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"344337022\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1444\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/1444/hovercard\" href=\"https://github.com/mockito/mockito/issues/1444\">mockito/mockito#1444</a></p>",
                "resourcePath": "/mockito/shipkit/issues/741",
                "createdAt": "2018-07-26T03:37:28Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes issue #1222",
        "url": "https://github.com/mockito/mockito/pull/1461",
        "resourcePath": "/mockito/mockito/pull/1461",
        "createdAt": "2018-07-29T18:42:24Z",
        "number": 1461,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/matchers/VarargMatcherImpl.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/matchers/VarargMatcherImplTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjA0NjU1NTI1OjQ3NjU1NDQwMmM4MDhkNGRjMDBmNTgzMzdlMTZkMzBlMjc0ZTk2MTY=",
                "url": "https://github.com/mockito/mockito/pull/1461/commits/476554402c808d4dc00f58337e16d30e274e9616"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1222,
                "url": "https://github.com/mockito/mockito/issues/1222",
                "title": "Cannot verify varargs parameter as an array",
                "bodyHTML": "<p dir=\"auto\">Cannot verify the varargs by comparing with an array.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Test\n    public void shouldVerifyVarargsAsArray() throws Exception {\n        IMethods mock = mock(IMethods.class);\n\n        mock.mixedVarargs(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);\n\n        verify(mock).mixedVarargs(any(), eq(new String[] {&quot;2&quot;, &quot;3&quot;}));\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    @Test\n    public void shouldVerifyVarargsAsArray() throws Exception {\n        IMethods mock = mock(IMethods.class);\n\n        mock.mixedVarargs(\"1\", \"2\", \"3\");\n\n        verify(mock).mixedVarargs(any(), eq(new String[] {\"2\", \"3\"}));\n    }\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected:</strong> test runs successfully<br>\n<strong>Actual:</strong> the test fails with an argument mismatch error.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockitousage.verification.BasicVerificationTest &gt; shouldVerifyVarargsAsArray FAILED\n    Argument(s) are different! Wanted:\n    iMethods.mixedVarargs(&lt;any&gt;, [&quot;2&quot;, &quot;3&quot;]);\n    -&gt; at org.mockitousage.verification.BasicVerificationTest.shouldVerifyVarargsAsArray(BasicVerificationTest.java:125)\n    Actual invocation has different arguments:\n    iMethods.mixedVarargs(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);\n    -&gt; at org.mockitousage.verification.BasicVerificationTest.shouldVerifyVarargsAsArray(BasicVerificationTest.java:123)\n    ...\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockitousage.verification.BasicVerificationTest &gt; shouldVerifyVarargsAsArray FAILED\n    Argument(s) are different! Wanted:\n    iMethods.mixedVarargs(&lt;any&gt;, [\"2\", \"3\"]);\n    -&gt; at org.mockitousage.verification.BasicVerificationTest.shouldVerifyVarargsAsArray(BasicVerificationTest.java:125)\n    Actual invocation has different arguments:\n    iMethods.mixedVarargs(\"1\", \"2\", \"3\");\n    -&gt; at org.mockitousage.verification.BasicVerificationTest.shouldVerifyVarargsAsArray(BasicVerificationTest.java:123)\n    ...\n</code></pre></div>\n<p dir=\"auto\">This was found while upgrading from 1.9.5. In that version it was possible to achieve something similar by creating a custom ArgumentMatcher that implemented VarargMatcher. In that case the ArgumentMatcher was given the varargs as an array. However, in the latest version the same matcher is passed each vararg separately which prevents it from matching.</p>\n<p dir=\"auto\">It is not possible to inline the array as follows because in the actual code the contents of the array are passed as an array into the method that does the verification.<br>\n<code class=\"notranslate\">verify(mock).mixedVarargs(any(), eq(\"1\"), eq(\"2\"));</code></p>\n<p dir=\"auto\">I tried doing something like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    verify(mock).mixedVarargs(any(), inline(new String[] {&quot;1&quot;, &quot;2&quot;}));\n  }\n  public static &lt;T&gt; T inline(T[] array) {\n    for (Object o : array) {\n      eq(o);\n    }\n    return null;\n  }\"><pre class=\"notranslate\"><code class=\"notranslate\">    verify(mock).mixedVarargs(any(), inline(new String[] {\"1\", \"2\"}));\n  }\n  public static &lt;T&gt; T inline(T[] array) {\n    for (Object o : array) {\n      eq(o);\n    }\n    return null;\n  }\n</code></pre></div>\n<p dir=\"auto\">But that failed in MatchersBinder because the number of matchers provided (3) did not match the number of arguments passed in the invocation (2).</p>\n<p dir=\"auto\">I also tried to remove the VarargMatcher from the custom ArgumentMatcher but that failed too as the number of arguments did not match in MatcherApplicationStrategy.</p>",
                "resourcePath": "/mockito/mockito/issues/1222",
                "createdAt": "2017-10-26T10:05:05Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support mocking kotlin suspend functions compiled by Kotlin 1.3 (#1500)",
        "url": "https://github.com/mockito/mockito/pull/1501",
        "resourcePath": "/mockito/mockito/pull/1501",
        "createdAt": "2018-09-27T13:18:05Z",
        "number": 1501,
        "mergeCommit": {
          "oid": "8d2b9b23221732a1910af7ba1dbf19a675e9ff78",
          "message": "Support mocking kotlin suspend functions compiled by Kotlin 1.3 (#1500) (#1501)\n\n* Fixes #1500: Support mocking kotlin suspend functions compiled by Kotlin 1.3\r\n\r\nCoroutines support is not experimental anymore and a type\r\nof continuation-parameter is renamed to kotlin.coroutines.Continuation\r\n\r\n* Move dependencies description to dependencies.gradle (#1500)",
          "commitUrl": "https://github.com/mockito/mockito/commit/8d2b9b23221732a1910af7ba1dbf19a675e9ff78",
          "parents": {
            "nodes": [
              {
                "oid": "23d63ea4a49ff7c2eb160160e89f2992e4fcefef",
                "message": "2.22.1 release (previous 2.22.0) + release notes updated by CI build 3605\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/dependencies.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "settings.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/SuspendMethod.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/kotlinReleaseCoroutinesTest/kotlinReleaseCoroutinesTest.gradle"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/kotlinReleaseCoroutinesTest/src/test/kotlin/org/mockito/kotlin/SuspendTest.kt"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/kotlinReleaseCoroutinesTest/src/test/resources/mockito-extensions/org.mockito.plugins.MockMaker"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjE4NjQ5MTAyOmFhNTRiZDYzNThkYWE1MGFhMjRkYmU1NjgxNGVlMDU1NjBmN2YzMWU=",
                "url": "https://github.com/mockito/mockito/pull/1501/commits/aa54bd6358daa50aa24dbe56814ee05560f7f31e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1500,
                "url": "https://github.com/mockito/mockito/issues/1500",
                "title": "Mockito 2.x.x does not support Kotlin release coroutines",
                "bodyHTML": "<p dir=\"auto\">In <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"221237091\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1032\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/1032/hovercard\" href=\"https://github.com/mockito/mockito/pull/1032\">#1032</a> support for Kotlin suspend function has been introduced.</p>\n<p dir=\"auto\">But the change contains a hard-coded class name of <code class=\"notranslate\">Continuation</code> (<a href=\"https://github.com/elizarov/mockito/blob/bf092378fc42f31efa054b4e5e555c10c33f5994/src/main/java/org/mockito/internal/creation/SuspendMethod.java#L10\">https://github.com/elizarov/mockito/blob/bf092378fc42f31efa054b4e5e555c10c33f5994/src/main/java/org/mockito/internal/creation/SuspendMethod.java#L10</a>) that is going to be renamed eventually.</p>\n<p dir=\"auto\">Kotlin compiler with languge-version set to 1.3 generates suspend function with continuation parameter of type <code class=\"notranslate\">kotlin.coroutines.Continuation</code> and with the current state of mockito it becomes impossible to mock them properly</p>",
                "resourcePath": "/mockito/mockito/issues/1500",
                "createdAt": "2018-09-27T13:16:02Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "kotlin"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support ArgumentCaptor local parameter",
        "url": "https://github.com/mockito/mockito/pull/1503",
        "resourcePath": "/mockito/mockito/pull/1503",
        "createdAt": "2018-09-27T17:30:39Z",
        "number": 1503,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/MockitoExtension.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/resolver/ArgumentCaptorParameterResolver.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/resolver/CompositeParameterResolver.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/resolver/MockParameterResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/JunitJupiterTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjE4NzMxNjEyOmQ4ODkyOWNmMzM4YjFhY2M1MWQzMDcyYjE0YTAxMzc4OTM0Mzk0YjI=",
                "url": "https://github.com/mockito/mockito/pull/1503/commits/d88929cf338b1acc51d3072b14a01378934394b2"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1382,
                "url": "https://github.com/mockito/mockito/issues/1382",
                "title": "Support @Captor injection in JUnit 5 method parameters",
                "bodyHTML": "<p dir=\"auto\">There is already an open PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"308575884\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1350\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/1350/hovercard\" href=\"https://github.com/mockito/mockito/pull/1350\">#1350</a> that proposes and adds support for <code class=\"notranslate\">@Mock</code>. This issue is to extend on that PR if / when it gets merged to also support the <code class=\"notranslate\">@Captor</code> annotation in method parameters. This would allow to inject method specific generic <code class=\"notranslate\">ArgumentCaptor</code> that can't be caught with <code class=\"notranslate\">ArgumentCaptor.of(Class)</code>.</p>",
                "resourcePath": "/mockito/mockito/issues/1382",
                "createdAt": "2018-05-07T17:49:43Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Enable gradle build cache",
        "url": "https://github.com/mockito/mockito/pull/1546",
        "resourcePath": "/mockito/mockito/pull/1546",
        "createdAt": "2018-11-26T21:02:18Z",
        "number": 1546,
        "mergeCommit": {
          "oid": "51a77d3228bd6dc83e3ae36bb168eb5098602809",
          "message": "Merge pull request #1546 from epeee/build-cache\n\nEnable gradle build cache",
          "commitUrl": "https://github.com/mockito/mockito/commit/51a77d3228bd6dc83e3ae36bb168eb5098602809",
          "parents": {
            "nodes": [
              {
                "oid": "445d92ac89fa131b62c6133b78c832cc5e4ceebf",
                "message": "Merge pull request #1555 from mockito/next-jacoco\n\nFixed JaCoCo build cache issue"
              },
              {
                "oid": "19d04f89d4b6e6ad7aff27ec99f44df88d563409",
                "message": "Rely on build cache defaults"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".gitignore"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle.properties"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "settings.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjMzNjk1NDE0OjE5ZDA0Zjg5ZDRiNmU2YWQ3YWZmMjdlYzk5ZjQ0ZGY4OGQ1NjM0MDk=",
                "url": "https://github.com/mockito/mockito/pull/1546/commits/19d04f89d4b6e6ad7aff27ec99f44df88d563409"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1545,
                "url": "https://github.com/mockito/mockito/issues/1545",
                "title": "Enable Gradle Build cache for faster local builds",
                "bodyHTML": "<p dir=\"auto\">Let's enable Gradle build cache for faster local builds.</p>\n<p dir=\"auto\"><a href=\"https://docs.gradle.org/current/userguide/build_cache.html\" rel=\"nofollow\">https://docs.gradle.org/current/userguide/build_cache.html</a></p>",
                "resourcePath": "/mockito/mockito/issues/1545",
                "createdAt": "2018-11-26T17:06:16Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    },
                    {
                      "node": {
                        "name": "build"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix/bug 1551 cce on smart not null answers",
        "url": "https://github.com/mockito/mockito/pull/1576",
        "resourcePath": "/mockito/mockito/pull/1576",
        "createdAt": "2018-12-22T18:59:22Z",
        "number": 1576,
        "mergeCommit": {
          "oid": "8a614c20f10d440fbc9ccc4afd116d6e4f145800",
          "message": "Fix/bug 1551 cce on smart not null answers (#1576)\n\n* Fix #1551 : Add support for Generic in ReturnsSmartNulls\r\n\r\n* Fix #1551 : Integrate support for generic using varargs\r\n\r\n* #1551 : Fix typo and some missing documentation",
          "commitUrl": "https://github.com/mockito/mockito/commit/8a614c20f10d440fbc9ccc4afd116d6e4f145800",
          "parents": {
            "nodes": [
              {
                "oid": "0c4e494a16141a65f22605a57382a222040f340b",
                "message": "2.23.11 release (previous 2.23.10) + release notes updated by CI build 3719\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNulls.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/stubbing/SmartNullsGenericBugTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjQwNjQ5MTAzOjczYTliZjVkYzg1MDk5MjE0NGIwYjk5Yzc2NjlmZDg2YjI3M2FmYzg=",
                "url": "https://github.com/mockito/mockito/pull/1576/commits/73a9bf5dc850992144b0b99c7669fd86b273afc8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1551,
                "url": "https://github.com/mockito/mockito/issues/1551",
                "title": "ClassCastException with generics and smart nulls",
                "bodyHTML": "<p dir=\"auto\">Hello.</p>\n<p dir=\"auto\">I am trying to migrate my JUnit4 tests (Java version is 1.8.0_74) from Mockito v1.10.19 to v2.0.10 and I have the following exception:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"java.lang.ClassCastException: codegen.java.lang.Object$MockitoMock$220764719 cannot be cast to com.solanteq.solar.fp.dao.scheme.MockitoTest$Entity\"><pre class=\"notranslate\"><span class=\"pl-smi\">java</span>.<span class=\"pl-smi\">lang</span>.<span class=\"pl-smi\">ClassCastException</span>: <span class=\"pl-s1\">codegen</span>.<span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">lang</span>.<span class=\"pl-s1\">Object$MockitoMock$220764719</span> <span class=\"pl-s1\">cannot</span> <span class=\"pl-s1\">be</span> <span class=\"pl-smi\">cast</span> <span class=\"pl-s1\">to</span> <span class=\"pl-smi\">com</span>.<span class=\"pl-smi\">solanteq</span>.<span class=\"pl-smi\">solar</span>.<span class=\"pl-smi\">fp</span>.<span class=\"pl-smi\">dao</span>.<span class=\"pl-smi\">scheme</span>.<span class=\"pl-smi\">MockitoTest$Entity</span></pre></div>\n<p dir=\"auto\">when I mock my objects using <code class=\"notranslate\">Answers.RETURNS_SMART_NULLS</code>.</p>\n<p dir=\"auto\">However, when I change the answer to default, or change the stubbing to do..when approach, the exception disappears. Before version upgrade, everything worked fine.</p>\n<p dir=\"auto\">Test case to reproduce the issue:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import org.junit.Before;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Answers;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.junit.MockitoJUnitRunner;\n\nimport static org.junit.Assert.assertEquals;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class MockitoTest {\n\n    @Mock(answer = Answers.RETURNS_SMART_NULLS)\n    private ConcreteDao concreteDao;\n\n    @Before\n    public void setUp() {\n        Mockito.when(concreteDao.findById(1L))\n                .thenReturn(new Entity(1L));\n    }\n\n    @Test\n    public void testMockito() {\n        assertEquals(1L, concreteDao.findById(1L).id);\n    }\n\n    public static class AbstractDao&lt;T&gt; {\n        T findById(final long id) {\n            throw new UnsupportedOperationException(&quot;Not implemented&quot;);\n        }\n    }\n\n    public static class Entity {\n        private final long id;\n\n        public Entity(long id) {\n            this.id = id;\n        }\n    }\n\n    public static class ConcreteDao extends AbstractDao&lt;Entity&gt; {\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Before</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runner</span>.<span class=\"pl-s1\">RunWith</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Answers</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mock</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mockito</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">MockitoJUnitRunner</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Assert</span>.<span class=\"pl-s1\">assertEquals</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">RunWith</span>(<span class=\"pl-smi\">MockitoJUnitRunner</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MockitoTest</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>(<span class=\"pl-s1\">answer</span> = <span class=\"pl-smi\">Answers</span>.<span class=\"pl-c1\">RETURNS_SMART_NULLS</span>)\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">ConcreteDao</span> <span class=\"pl-s1\">concreteDao</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Before</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">setUp</span>() {\n        <span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">concreteDao</span>.<span class=\"pl-en\">findById</span>(<span class=\"pl-c1\">1L</span>))\n                .<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Entity</span>(<span class=\"pl-c1\">1L</span>));\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">testMockito</span>() {\n        <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">1L</span>, <span class=\"pl-s1\">concreteDao</span>.<span class=\"pl-en\">findById</span>(<span class=\"pl-c1\">1L</span>).<span class=\"pl-s1\">id</span>);\n    }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">AbstractDao</span>&lt;<span class=\"pl-smi\">T</span>&gt; {\n        <span class=\"pl-smi\">T</span> <span class=\"pl-en\">findById</span>(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">long</span> <span class=\"pl-s1\">id</span>) {\n            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">UnsupportedOperationException</span>(<span class=\"pl-s\">\"Not implemented\"</span>);\n        }\n    }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Entity</span> {\n        <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">long</span> <span class=\"pl-s1\">id</span>;\n\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Entity</span>(<span class=\"pl-smi\">long</span> <span class=\"pl-s1\">id</span>) {\n            <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">id</span> = <span class=\"pl-s1\">id</span>;\n        }\n    }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">ConcreteDao</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">AbstractDao</span>&lt;<span class=\"pl-smi\">Entity</span>&gt; {\n    }\n}</pre></div>\n<p dir=\"auto\">Thanks in advance.</p>",
                "resourcePath": "/mockito/mockito/issues/1551",
                "createdAt": "2018-11-28T16:13:37Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Return null instead of causing a CCE",
        "url": "https://github.com/mockito/mockito/pull/1612",
        "resourcePath": "/mockito/mockito/pull/1612",
        "createdAt": "2019-02-08T13:29:09Z",
        "number": 1612,
        "mergeCommit": {
          "oid": "cbedbe567d5bf902b13e8cebc4a2a2ccfef7758f",
          "message": "Return null instead of causing a CCE (#1612)\n\nThis solves a large number of edge-cases where `null` will actually\r\nremove the runtime ClassCastException. This essentially negates the\r\nwhole MockitoCast ErrorProne check. We can still not support every use\r\ncase, but causing a NPE instead of a CCE does not seem to make this\r\nworse.\r\n\r\nI am still running internal tests within Google to see if there are any\r\nregressions, but I already saw that some of the test failures we had\r\nwith ByteBuddy were resolved with this particular patch.\r\n\r\nNote that this now fully closes #357. A previous PR resolved the same\r\nissue with ReturnsSmartNulls: #1576.\r\n\r\nFixes #357",
          "commitUrl": "https://github.com/mockito/mockito/commit/cbedbe567d5bf902b13e8cebc4a2a2ccfef7758f",
          "parents": {
            "nodes": [
              {
                "oid": "ac9195f740280f1964382acb469b14955a08d359",
                "message": "Automatic dependency update with Dependabot (#1600)\n\nhttp://dependabot.com/\r\n\r\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/errorprone.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/stubbing/defaultanswers/ReturnsGenericDeepStubsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/serialization/DeepStubsSerializableTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjUxNDY0ODkyOjg0NWFkZGM3ZWMwYjFmZjYyMTdiNzdlZTIwZTllYzQ3ZjYzNjBjZmE=",
                "url": "https://github.com/mockito/mockito/pull/1612/commits/845addc7ec0b1ff6217b77ee20e9ec47f6360cfa"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 357,
                "url": "https://github.com/mockito/mockito/issues/357",
                "title": "ClassCastExceptions with JDK9 javac",
                "bodyHTML": "<p dir=\"auto\">JDK 9 fixes a javac bug (<a href=\"https://bugs.openjdk.java.net/browse/JDK-8058199\" rel=\"nofollow\">JDK-8058199</a>) that was causing checkcast intructions to be skipped. Previously javac used the parameter types of a method symbol's erased type as targets when translating the arguments. In JDK 9, javac has been fixed to use the inferred types as targets. The fix causes additional checkcasts to be generated if the inferred types do not have the same erasure.</p>\n<p dir=\"auto\">The fix breaks Mockito answer strategies that pick types based on the erased method signature's return type, and causes tests to fail with ClassCastExceptions when compiled with the JDK 9 javac.</p>\n<hr>\n<p dir=\"auto\">Example 1</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Super&lt;T&gt; {\n  T g() {\n    return null;\n  }\n}\n\nclass Sub extends Super&lt;Boolean&gt; {}\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-smi\">Super</span>&lt;<span class=\"pl-smi\">T</span>&gt; {\n  <span class=\"pl-smi\">T</span> <span class=\"pl-en\">g</span>() {\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span>;\n  }\n}\n\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">Sub</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">Super</span>&lt;<span class=\"pl-smi\">Boolean</span>&gt; {}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Mock Sub s;\nwhen(s.g()).thenReturn(false);\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span> <span class=\"pl-smi\">Sub</span> <span class=\"pl-s1\">s</span>;\n<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">s</span>.<span class=\"pl-en\">g</span>()).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-c1\">false</span>);</pre></div>\n<p dir=\"auto\">compiled with javac 8</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"INVOKEVIRTUAL Sub.g ()Ljava/lang/Object;\nINVOKESTATIC org/mockito/Mockito.when (Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;\"><pre class=\"notranslate\"><code class=\"notranslate\">INVOKEVIRTUAL Sub.g ()Ljava/lang/Object;\nINVOKESTATIC org/mockito/Mockito.when (Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;\n</code></pre></div>\n<p dir=\"auto\">compiled with javac 9</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"INVOKEVIRTUAL Sub.g ()Ljava/lang/Object;\nCHECKCAST java/lang/Boolean\nINVOKESTATIC org/mockito/Mockito.when (Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;\"><pre class=\"notranslate\"><code class=\"notranslate\">INVOKEVIRTUAL Sub.g ()Ljava/lang/Object;\nCHECKCAST java/lang/Boolean\nINVOKESTATIC org/mockito/Mockito.when (Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;\n</code></pre></div>\n<p dir=\"auto\">The erased return type of <code class=\"notranslate\">Super.g</code> is <code class=\"notranslate\">Object</code>, but the expected return type of <code class=\"notranslate\">Sub.g</code> is <code class=\"notranslate\">Boolean</code>. If the answer strategy returns <code class=\"notranslate\">Object</code> the checkcast fails.</p>\n<hr>\n<p dir=\"auto\">Example 2</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Foo {\n  &lt;T&gt; T getFirst(Iterable&lt;T&gt; xs) { return xs.iterator().next(); }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-smi\">Foo</span> {\n  &lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-smi\">T</span> <span class=\"pl-en\">getFirst</span>(<span class=\"pl-smi\">Iterable</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-s1\">xs</span>) { <span class=\"pl-k\">return</span> <span class=\"pl-s1\">xs</span>.<span class=\"pl-en\">iterator</span>().<span class=\"pl-en\">next</span>(); }\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Mock Foo f;\nIterable&lt;Boolean&gt; it = Arrays.asList(false);\nwhen(f.getFirst(it)).thenReturn(false)\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span> <span class=\"pl-smi\">Foo</span> <span class=\"pl-s1\">f</span>;\n<span class=\"pl-smi\">Iterable</span>&lt;<span class=\"pl-smi\">Boolean</span>&gt; <span class=\"pl-s1\">it</span> = <span class=\"pl-smi\">Arrays</span>.<span class=\"pl-en\">asList</span>(<span class=\"pl-c1\">false</span>);\n<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">f</span>.<span class=\"pl-en\">getFirst</span>(<span class=\"pl-s1\">it</span>)).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-c1\">false</span>)</pre></div>\n<p dir=\"auto\">compiled with javac 8</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"INVOKEVIRTUAL Foo.getFirst (Ljava/lang/Iterable;)Ljava/lang/Object;\nINVOKESTATIC org/mockito/Mockito.when (Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;\"><pre class=\"notranslate\"><code class=\"notranslate\">INVOKEVIRTUAL Foo.getFirst (Ljava/lang/Iterable;)Ljava/lang/Object;\nINVOKESTATIC org/mockito/Mockito.when (Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;\n</code></pre></div>\n<p dir=\"auto\">compiled with javac 9</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"INVOKEVIRTUAL Foo.getFirst (Ljava/lang/Iterable;)Ljava/lang/Object;\nCHECKCAST java/lang/Boolean\nINVOKESTATIC org/mockito/Mockito.when (Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;\"><pre class=\"notranslate\"><code class=\"notranslate\">INVOKEVIRTUAL Foo.getFirst (Ljava/lang/Iterable;)Ljava/lang/Object;\nCHECKCAST java/lang/Boolean\nINVOKESTATIC org/mockito/Mockito.when (Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;\n</code></pre></div>\n<p dir=\"auto\">The erased return type of <code class=\"notranslate\">Foo.getFirst</code> is <code class=\"notranslate\">Object</code>, but the inferred return type of <code class=\"notranslate\">getFirst(Iterable&lt;Boolean&gt;)</code> is <code class=\"notranslate\">Boolean</code>. If the answer strategy returns <code class=\"notranslate\">Object</code> the checkcast fails.</p>\n<hr>\n<p dir=\"auto\">The first example could be fixed by using <a href=\"https://github.com/mockito/mockito/blob/9b838461abf93670d123109f7e3d8871f182767a/src/main/java/org/mockito/internal/util/reflection/GenericMetadataSupport.java\"><code class=\"notranslate\">GenericMetadataSupport</code></a> in all of the answer implementations instead of <code class=\"notranslate\">invocation.getMethod().getReturnType()</code>.</p>\n<p dir=\"auto\">It gets more difficult if the mock's type is an instantiation of a generic type (e.g. <code class=\"notranslate\">@Mock Foo&lt;Bar&gt; x;</code>), since the field's type arguments get dropped. I think fixing that would require adding support for mocking types, not just classes.</p>\n<p dir=\"auto\">For the second example, returning the right answer requires considering the generic signature of the invoked method, and performing type inference using the argument types. Unfortunately the runtime type of the argument is going to be a raw <code class=\"notranslate\">Iterable</code> and the inference depends on knowing it's <code class=\"notranslate\">Iterable&lt;Boolean&gt;</code>, so I'm not sure what to do there.</p>",
                "resourcePath": "/mockito/mockito/issues/357",
                "createdAt": "2016-02-16T18:10:54Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "java-9"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Issue 1540",
        "url": "https://github.com/mockito/mockito/pull/1622",
        "resourcePath": "/mockito/mockito/pull/1622",
        "createdAt": "2019-02-15T00:55:08Z",
        "number": 1622,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/MockitoExtension.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/SamsMockitoExtension.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/SamsStrictnessTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/StrictnessTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/UninstantiableThrowableTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/kotlinTest/kotlinTest.gradle"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/module-test/module-test.gradle"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/module-test/src/test/java/org/mockito/moduletest/ModuleHandlingTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/module-test/src/test/java/org/mockito/moduletest/ReplicatingClassLoader.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "version.properties"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjUzMjc0OTA2OjA2OWIzMWUzNTk4YmMzNWVhZjAwMTBhNWFkOWNhNTRmMWMwNWY3M2M=",
                "url": "https://github.com/mockito/mockito/pull/1622/commits/069b31e3598bc35eaf0010a5ad9ca54f1c05f73c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1540,
                "url": "https://github.com/mockito/mockito/issues/1540",
                "title": "MocktioExtension being too strict with stubs in `@BeforeEach` method",
                "bodyHTML": "<p dir=\"auto\">I've written a test case for a class which persists errors to a file and thus I have a handful of tests to prove that non-errors cases are not persisted to a file however the majority of the tests in the test case are related to triggering various error scenarios.</p>\n<p dir=\"auto\">As the majority of test cases (~70%) require mock to supply the persistence file I've included a stub for that in the setup method (annotated using <code class=\"notranslate\">junit5</code> <code class=\"notranslate\">@BeforeEach</code>). I'm running the tests using <code class=\"notranslate\">MockitoExtension</code> which fails tests with <code class=\"notranslate\">org.mockito.exceptions.misusing.UnnecessaryStubbingException</code> for the 30% of test which demonstrate that the file isn't use when messaging works.</p>\n<p dir=\"auto\">While it is true that the stub is unused in those test I think it is discouraging readability by duplicating the stubbing to the majority of the tests in the class. From the <a href=\"https://static.javadoc.io/org.mockito/mockito-core/2.23.4/org/mockito/exceptions/misusing/UnnecessaryStubbingException.html\" rel=\"nofollow\">UnnecessaryStubbingException Javadoc</a></p>\n<blockquote>\n<p dir=\"auto\">Mockito JUnit Runner triggers UnnecessaryStubbingException only when none of the test methods use the stubbings. This means that it is ok to put default stubbing in a 'setup' method or in test class constructor. That default stubbing needs to be used at least once by one of the test methods.</p>\n</blockquote>\n<p dir=\"auto\">I expected the Extension to offer the same behaviour.</p>\n<p dir=\"auto\">I've contrived a simple example below which fails.</p>\n<p dir=\"auto\">I think this is related to: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"190517072\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/769\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/769/hovercard\" href=\"https://github.com/mockito/mockito/issues/769\">#769</a> but I think it is more of an issues with the <code class=\"notranslate\">MockitoExtension</code> than strictness it self.</p>\n<p dir=\"auto\">Dependencies on java 8 (8.0.171-oracle):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;dependency&gt;\n            &lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;\n            &lt;artifactId&gt;junit-jupiter-api&lt;/artifactId&gt;\n            &lt;version&gt;5.3.1&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;\n            &lt;artifactId&gt;junit-jupiter-engine&lt;/artifactId&gt;\n            &lt;version&gt;5.3.1&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;&lt;dependency&gt;\n        &lt;groupId&gt;org.mockito&lt;/groupId&gt;\n        &lt;artifactId&gt;mockito-core&lt;/artifactId&gt;\n        &lt;version&gt;2.23.4&lt;/version&gt;\n        &lt;scope&gt;test&lt;/scope&gt;\n    &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.mockito&lt;/groupId&gt;\n            &lt;artifactId&gt;mockito-junit-jupiter&lt;/artifactId&gt;\n            &lt;version&gt;2.23.4&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">&lt;dependency&gt;\n            &lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;\n            &lt;artifactId&gt;junit-jupiter-api&lt;/artifactId&gt;\n            &lt;version&gt;5.3.1&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.junit.jupiter&lt;/groupId&gt;\n            &lt;artifactId&gt;junit-jupiter-engine&lt;/artifactId&gt;\n            &lt;version&gt;5.3.1&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;&lt;dependency&gt;\n        &lt;groupId&gt;org.mockito&lt;/groupId&gt;\n        &lt;artifactId&gt;mockito-core&lt;/artifactId&gt;\n        &lt;version&gt;2.23.4&lt;/version&gt;\n        &lt;scope&gt;test&lt;/scope&gt;\n    &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.mockito&lt;/groupId&gt;\n            &lt;artifactId&gt;mockito-junit-jupiter&lt;/artifactId&gt;\n            &lt;version&gt;2.23.4&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package nz.samandems.mockito;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.junit.jupiter.MockitoExtension;\n\n@ExtendWith(MockitoExtension.class)\nclass MockitoLenienceyTestCase {\n\n    @Mock\n    private Dependency dependency;\n\n    private SystemUnderTest systemUnderTest;\n\n\n    @BeforeEach\n    void setUp() {\n        Mockito.when(dependency.doWork()).thenReturn(true);\n        systemUnderTest = new SystemUnderTest(dependency);\n    }\n\n\n    @Test\n    void shouldDoWork() {\n        //Given\n\n        //When\n        systemUnderTest.doThing(true);\n\n        //Then\n        Mockito.verify(dependency).doWork();\n    }\n\n    @Test\n    void shouldDoNoWork() {\n        //Given\n\n        //When\n        systemUnderTest.doThing(false);\n\n        //Then\n        Mockito.verifyZeroInteractions(dependency);\n    }\n\n\n    private class SystemUnderTest {\n\n        private final Dependency dependency;\n\n\n        private SystemUnderTest(final Dependency dependency) {\n            this.dependency = dependency;\n        }\n\n\n        public boolean doThing(boolean works) {\n            if (works) {\n                return dependency.doWork();\n            }\n            else {\n                return false;\n            }\n        }\n    }\n\n    private interface Dependency {\n\n        boolean doWork();\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">package nz.samandems.mockito;\n\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.junit.jupiter.MockitoExtension;\n\n@ExtendWith(MockitoExtension.class)\nclass MockitoLenienceyTestCase {\n\n    @Mock\n    private Dependency dependency;\n\n    private SystemUnderTest systemUnderTest;\n\n\n    @BeforeEach\n    void setUp() {\n        Mockito.when(dependency.doWork()).thenReturn(true);\n        systemUnderTest = new SystemUnderTest(dependency);\n    }\n\n\n    @Test\n    void shouldDoWork() {\n        //Given\n\n        //When\n        systemUnderTest.doThing(true);\n\n        //Then\n        Mockito.verify(dependency).doWork();\n    }\n\n    @Test\n    void shouldDoNoWork() {\n        //Given\n\n        //When\n        systemUnderTest.doThing(false);\n\n        //Then\n        Mockito.verifyZeroInteractions(dependency);\n    }\n\n\n    private class SystemUnderTest {\n\n        private final Dependency dependency;\n\n\n        private SystemUnderTest(final Dependency dependency) {\n            this.dependency = dependency;\n        }\n\n\n        public boolean doThing(boolean works) {\n            if (works) {\n                return dependency.doWork();\n            }\n            else {\n                return false;\n            }\n        }\n    }\n\n    private interface Dependency {\n\n        boolean doWork();\n    }\n}\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/1540",
                "createdAt": "2018-11-22T10:32:38Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "strictness"
                      }
                    },
                    {
                      "node": {
                        "name": "junit5"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Handle terminal type var with bounds",
        "url": "https://github.com/mockito/mockito/pull/1624",
        "resourcePath": "/mockito/mockito/pull/1624",
        "createdAt": "2019-02-19T23:35:11Z",
        "number": 1624,
        "mergeCommit": {
          "oid": "19adbf3dea958acbbdcb078b550a6797e3e7557d",
          "message": "Merge pull request #1624 from bric3/handle_terminal_type_var_with_bounds\n\nHandle terminal type var with bounds",
          "commitUrl": "https://github.com/mockito/mockito/commit/19adbf3dea958acbbdcb078b550a6797e3e7557d",
          "parents": {
            "nodes": [
              {
                "oid": "73f1d17e5b0ec1410e54a72334639da077e984f4",
                "message": "VerificationCollector to handle non-matching args and other assertions (#1644)\n\n* Rename assertAtLeastOneFailure() to assertExactlyOneFailure()\r\n\r\nNew method name is a more accurate description of what it does.\r\n\r\n* Change Assert.fail() to AssertJ's assertBecauseExceptionWasNotThrown()\r\n\r\nGives better diagnositics in the event of a test failure.\r\n\r\n* Enhance VerificationCollectorImpl to collect argument-matching failures\r\n\r\nFixes #1642."
              },
              {
                "oid": "3f84cbfc1434b17fb84c1ae7579c3b03749a2454",
                "message": "Reintroduces the guard that returns null instead of a mock of Object\n\nWhile the generics metadata extractor has been improved, not every\npossible scenarios are covered even Javac in version 8 do not follow\nthrough, in order to avoid a stealth return of the bugs spot in #357\nthis change improves the guard by making sure extracted generic data\ndoes not have extra-interfaces as well."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/Mockito.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodInterceptor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/reflection/GenericMetadataSupport.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/stubbing/defaultanswers/ReturnsGenericDeepStubsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/util/reflection/GenericMetadataSupportTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/serialization/DeepStubsSerializableTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/stubbing/DeepStubbingTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjU0NDQ4NDg1OjNmODRjYmZjMTQzNGIxN2ZiODRjMWFlNzU3OWMzYjAzNzQ5YTI0NTQ=",
                "url": "https://github.com/mockito/mockito/pull/1624/commits/3f84cbfc1434b17fb84c1ae7579c3b03749a2454"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1621,
                "url": "https://github.com/mockito/mockito/issues/1621",
                "title": "RETURNS_DEEP_STUBS causes \"Raw extraction not supported for : 'null'\" in some cases",
                "bodyHTML": "<p dir=\"auto\">When trying to mock the <a href=\"https://github.com/apache/hadoop/blob/release-2.6.0/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Mapper.java#L105\">Hadoop Mapper.Context</a> class with Mockito 2.24.0, exception <code class=\"notranslate\">org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'</code> is thrown when calling one of the methods that returns a generic type.</p>\n<p dir=\"auto\">Actual mocking is taking place inside the <a href=\"https://mrunit.apache.org/\" rel=\"nofollow\">MRUnit library</a>, as seen in <a href=\"https://github.com/apache/attic-mrunit/blob/release-1.1.0/src/main/java/org/apache/hadoop/mrunit/internal/mapreduce/MockMapContextWrapper.java#L75\">MockMapContextWrapper</a>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"final Mapper&lt;KEYIN, VALUEIN, KEYOUT, VALUEOUT&gt;.Context context = mock(org.apache.hadoop.mapreduce.Mapper.Context.class, Mockito.RETURNS_DEEP_STUBS);\"><pre class=\"notranslate\"><code class=\"notranslate\">final Mapper&lt;KEYIN, VALUEIN, KEYOUT, VALUEOUT&gt;.Context context = mock(org.apache.hadoop.mapreduce.Mapper.Context.class, Mockito.RETURNS_DEEP_STUBS);\n</code></pre></div>\n<p dir=\"auto\">Context is an abstract inner class of Mapper, and implements the <a href=\"https://github.com/apache/hadoop/blob/release-2.6.0/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/MapContext.java\">MapContext</a> interface, which extends the <a href=\"https://github.com/apache/hadoop/blob/release-2.6.0/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/TaskInputOutputContext.java\">TaskInputOutputContext</a> interface, which extends several other non-generic interfaces.</p>\n<p dir=\"auto\">Exception is thrown later when calling the <a href=\"https://github.com/apache/hadoop/blob/release-2.6.0/hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/TaskInputOutputContext.java#L51\"><code class=\"notranslate\">context.getCurrentKey()</code></a> method on the mock, which returns generic type <code class=\"notranslate\">KEYIN</code>.</p>\n<p dir=\"auto\">This works fine with Mockito 1.</p>\n<p dir=\"auto\">MRUnit project is abandoned, so it is not possible to change the mock.  It by default uses old Mockito 1.9.5, and works with 1.10.19.  I am attempting to exclude its dependencies on old Mockito and Powermock, and instead provide latest Mockito 2.24.0 and Powermock 2.0.0 so that my project using MRUnit and Mockito will not be permanently stuck on Mockito 1.</p>\n<p dir=\"auto\">The only time these problem methods appear to be <a href=\"https://github.com/apache/attic-mrunit/blob/release-1.1.0/src/main/java/org/apache/hadoop/mrunit/internal/mapreduce/MockMapContextWrapper.java#L96\">called within MRUnit is to set up stubbing</a>, so it doesn't really matter what the return value is in this case.  Should this even work with Mockito, or was this just a bug in Mockito 1 that MRUnit exploited?</p>\n<hr>\n<p dir=\"auto\">Here is a minimal example that reproduces the issue:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"package example;\n\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport static org.mockito.Mockito.RETURNS_DEEP_STUBS;\nimport static org.mockito.Mockito.mock;\n\npublic class Example {\n\n    public interface FirstInterface&lt;T&gt; {\n        boolean normal();\n        T generic();\n    }\n\n    public interface SecondInterface&lt;T&gt; extends FirstInterface&lt;T&gt; { }\n\n    public class TestClass&lt;T&gt; {\n        public abstract class AbstractInner implements SecondInterface&lt;T&gt; { }\n    }\n\n    private TestClass.AbstractInner testMock;\n\n    @Before\n    public void setup() {\n        testMock = mock(TestClass.AbstractInner.class, RETURNS_DEEP_STUBS);\n    }\n\n    @Test\n    public void works() {\n        testMock.normal();\n    }\n\n    @Test\n    public void fails() {\n        testMock.generic();\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">package</span> <span class=\"pl-s1\">example</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Before</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Test</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mockito</span>.<span class=\"pl-c1\">RETURNS_DEEP_STUBS</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mockito</span>.<span class=\"pl-s1\">mock</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Example</span> {\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">FirstInterface</span>&lt;<span class=\"pl-smi\">T</span>&gt; {\n        <span class=\"pl-smi\">boolean</span> <span class=\"pl-en\">normal</span>();\n        <span class=\"pl-smi\">T</span> <span class=\"pl-en\">generic</span>();\n    }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">SecondInterface</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">FirstInterface</span>&lt;<span class=\"pl-smi\">T</span>&gt; { }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">TestClass</span>&lt;<span class=\"pl-smi\">T</span>&gt; {\n        <span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">AbstractInner</span> <span class=\"pl-k\">implements</span> <span class=\"pl-smi\">SecondInterface</span>&lt;<span class=\"pl-smi\">T</span>&gt; { }\n    }\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">TestClass</span>.<span class=\"pl-smi\">AbstractInner</span> <span class=\"pl-s1\">testMock</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Before</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">setup</span>() {\n        <span class=\"pl-s1\">testMock</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">TestClass</span>.<span class=\"pl-smi\">AbstractInner</span>.<span class=\"pl-k\">class</span>, <span class=\"pl-c1\">RETURNS_DEEP_STUBS</span>);\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">works</span>() {\n        <span class=\"pl-s1\">testMock</span>.<span class=\"pl-en\">normal</span>();\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">fails</span>() {\n        <span class=\"pl-s1\">testMock</span>.<span class=\"pl-en\">generic</span>();\n    }\n}</pre></div>\n<p dir=\"auto\"><a href=\"https://github.com/zman0900/mockito-example\">https://github.com/zman0900/mockito-example</a> has this code with a gradle build.</p>\n<p dir=\"auto\">Both tests pass with Mockito 1.10.19, but one fails with 2.24.0.  Changing TestClass.AbstractInner to implement FirstInterface instead of SecondInterface causes the same failure with both Mockito 1 and 2.</p>",
                "resourcePath": "/mockito/mockito/issues/1621",
                "createdAt": "2019-02-13T23:49:49Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "bug"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Update shipkit plugin (v2.1.6)",
        "url": "https://github.com/mockito/mockito/pull/1647",
        "resourcePath": "/mockito/mockito/pull/1647",
        "createdAt": "2019-03-04T17:36:20Z",
        "number": 1647,
        "mergeCommit": {
          "oid": "3701597af7fcf306684c5e86d18e613f618b5d77",
          "message": "Merge pull request #1647 from epeee/shipkit_2_1_6\n\nUpdate shipkit plugin (v2.1.6)",
          "commitUrl": "https://github.com/mockito/mockito/commit/3701597af7fcf306684c5e86d18e613f618b5d77",
          "parents": {
            "nodes": [
              {
                "oid": "19adbf3dea958acbbdcb078b550a6797e3e7557d",
                "message": "Merge pull request #1624 from bric3/handle_terminal_type_var_with_bounds\n\nHandle terminal type var with bounds"
              },
              {
                "oid": "f377d0e27ffe189554367c53dd5f00a09452d2b6",
                "message": "Update shipkit plugin (v2.1.6)\nand increase the version since we already have a tag for 2.24.8"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "build.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "version.properties"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjU4MDMwMDg2OmYzNzdkMGUyN2ZmZTE4OTU1NDM2N2M1M2RkNWYwMGEwOTQ1MmQyYjY=",
                "url": "https://github.com/mockito/mockito/pull/1647/commits/f377d0e27ffe189554367c53dd5f00a09452d2b6"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1645,
                "url": "https://github.com/mockito/mockito/issues/1645",
                "title": "Release build is failing",
                "bodyHTML": "<p dir=\"auto\">After the latest Shipkit update, our Travis is failing: <a href=\"https://travis-ci.org/mockito/mockito/jobs/501397895#L1693\" rel=\"nofollow\">https://travis-ci.org/mockito/mockito/jobs/501397895#L1693</a> It fails with</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[commit]  2 files changed, 11 insertions(+), 2 deletions(-)\n[performRelease]   External process [commit] completed.\n[performRelease] [tag] fatal: tag 'v2.24.8' already exists\"><pre class=\"notranslate\"><code class=\"notranslate\">[commit]  2 files changed, 11 insertions(+), 2 deletions(-)\n[performRelease]   External process [commit] completed.\n[performRelease] [tag] fatal: tag 'v2.24.8' already exists\n</code></pre></div>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mstachniuk/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mstachniuk\">@mstachniuk</a> could you take a look?</p>",
                "resourcePath": "/mockito/mockito/issues/1645",
                "createdAt": "2019-03-04T15:12:41Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make `MockitoNotExtensible` service-loadable",
        "url": "https://github.com/mockito/mockito/pull/1693",
        "resourcePath": "/mockito/mockito/pull/1693",
        "createdAt": "2019-04-22T17:56:06Z",
        "number": 1693,
        "mergeCommit": {
          "oid": "3b64929a106d9e3432364f287fea58f3ac5061fd",
          "message": "Merge pull request #1693 from PicnicSupermarket/bugfix/issue-1692\n\nMake `MockitoNotExtensible` service-loadable",
          "commitUrl": "https://github.com/mockito/mockito/commit/3b64929a106d9e3432364f287fea58f3ac5061fd",
          "parents": {
            "nodes": [
              {
                "oid": "881e09ebd33d78e9c226afa37548bf043fe82b4b",
                "message": "2.27.0 release (previous 2.26.2) + release notes updated by CI build 4042\n\n[ci skip-release]"
              },
              {
                "oid": "f8b665e55ce8d9e8ebaa42446fab8aa57a702273",
                "message": "Make `MockitoNotExtensible` service-loadable\n\nThis way Error Prone can find the plugin when `mockito-errorprone` is added to\nthe annotation processor classpath.\n\nFixes #1692."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/dependencies.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/errorprone/errorprone.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/errorprone/src/main/java/org/mockito/errorprone/bugpatterns/MockitoNotExtensible.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjcyNDQ1Nzg1OmY4YjY2NWU1NWNlOGQ5ZThlYmFhNDI0NDZmYWI4YWE1N2E3MDIyNzM=",
                "url": "https://github.com/mockito/mockito/pull/1693/commits/f8b665e55ce8d9e8ebaa42446fab8aa57a702273"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1692,
                "url": "https://github.com/mockito/mockito/issues/1692",
                "title": "The new Error Prone plugin isn't service-loadable",
                "bodyHTML": "<p dir=\"auto\">The <code class=\"notranslate\">MockitoNotExtensible</code> plugin added in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"422273781\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1669\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/1669/hovercard\" href=\"https://github.com/mockito/mockito/pull/1669\">#1669</a> is pretty cool. However, when <code class=\"notranslate\">mockito-errorprone</code> is added to the annotation processor classpath, Error Prone does not recognize/find the plugin. This is because <code class=\"notranslate\">MockitoNotExtensible</code> is not declared in a <code class=\"notranslate\">META-INF/services/com.google.errorprone.bugpatterns.BugChecker</code> file on the classpath.</p>",
                "resourcePath": "/mockito/mockito/issues/1692",
                "createdAt": "2019-04-22T17:52:50Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix JaCoCo code coverage report",
        "url": "https://github.com/mockito/mockito/pull/1699",
        "resourcePath": "/mockito/mockito/pull/1699",
        "createdAt": "2019-04-30T19:09:40Z",
        "number": 1699,
        "mergeCommit": {
          "oid": "c5e2b80af76e3192cae7c9550b70c4d1ab312034",
          "message": "Merge pull request #1699 from marcphilipp/issues/1689-fix-coverage-report\n\nFix JaCoCo code coverage report",
          "commitUrl": "https://github.com/mockito/mockito/commit/c5e2b80af76e3192cae7c9550b70c4d1ab312034",
          "parents": {
            "nodes": [
              {
                "oid": "0ad4efbeedac050f416c48f22c9a561e31f3cb05",
                "message": "2.27.2 release (previous 2.27.1) + release notes updated by CI build 4070\n\n[ci skip-release]"
              },
              {
                "oid": "dc68dfacf95312c3c4e0a92caaa15e0e91804ebc",
                "message": "Fix JaCoCo code coverage report\n\nInstead of collecting execution data of all test tasks of all\nsubprojects in a single file, each subproject's test task writes its own\nexecution data file. The `mockitoCoverage` task is configured to include\nall execution data files into account that exists when it starts. This\nis done to avoid exceptions for missing files for skipped test tasks for\nthe android and errorprone subprojects.\n\nFixes #1689."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/root/coverage.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mjc0ODUyMDc5OmRjNjhkZmFjZjk1MzEyYzNjNGUwYTkyY2FhYTE1ZTBlOTE4MDRlYmM=",
                "url": "https://github.com/mockito/mockito/pull/1699/commits/dc68dfacf95312c3c4e0a92caaa15e0e91804ebc"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1689,
                "url": "https://github.com/mockito/mockito/issues/1689",
                "title": "Coverage report is broken since Gradle 5",
                "bodyHTML": "<p dir=\"auto\">We upgraded to Gradle 5 in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"431015762\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1683\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/1683/hovercard\" href=\"https://github.com/mockito/mockito/pull/1683\">#1683</a> to fix our Java 11 build. However, this has now broken our coverage computation because of a breaking change in Gradle 4.10: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"351727963\" data-permission-text=\"Title is private\" data-url=\"https://github.com/gradle/gradle/issues/6419\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/gradle/gradle/pull/6419/hovercard\" href=\"https://github.com/gradle/gradle/pull/6419\">gradle/gradle#6419</a></p>\n<p dir=\"auto\">There is no guidance from the Gradle team on how to migrate to a proper configuration. I have spend a couple of hours today to try to fix it, with no result. The TLDR is that Gradle now throws away the <code class=\"notranslate\">test.exec</code> after executing the tests in a subproject. Thus, it will only have the coverage from the last subproject it ran.</p>\n<p dir=\"auto\">I have looked online and there are other projects that do something similar (<a href=\"https://github.com/grpc/grpc-java/blob/master/all/build.gradle\">https://github.com/grpc/grpc-java/blob/master/all/build.gradle</a>, <a href=\"https://github.com/groovy/groovy-core/blob/master/gradle/jacoco/jacoco.gradle\">https://github.com/groovy/groovy-core/blob/master/gradle/jacoco/jacoco.gradle</a>) but none of the approaches worked for us.</p>",
                "resourcePath": "/mockito/mockito/issues/1689",
                "createdAt": "2019-04-17T15:52:32Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    },
                    {
                      "node": {
                        "name": "build"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Show multiple invocations on argumentsAreDifferent",
        "url": "https://github.com/mockito/mockito/pull/1701",
        "resourcePath": "/mockito/mockito/pull/1701",
        "createdAt": "2019-05-02T17:27:15Z",
        "number": 1701,
        "mergeCommit": {
          "oid": "1ae32bda7ea485f94374c74c085fcdbd8b000e53",
          "message": "Fixes #1542 Show multiple invocations on argumentsAreDifferent (#1701)",
          "commitUrl": "https://github.com/mockito/mockito/commit/1ae32bda7ea485f94374c74c085fcdbd8b000e53",
          "parents": {
            "nodes": [
              {
                "oid": "a1a78ef7539a6b7527acbec6e2323413d0c2dfa3",
                "message": "2.27.3 release (previous 2.27.2) + release notes updated by CI build 4078\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/exceptions/Reporter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/reporting/SmartPrinter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/verification/checkers/MissingInvocationChecker.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/verification/SmartPrinterTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/verification/checkers/MissingInvocationCheckerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/verification/checkers/MissingInvocationInOrderCheckerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/verification/DescriptiveMessagesOnVerificationInOrderErrorsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/verification/DescriptiveMessagesWhenVerificationFailsTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/verification/VerifyPrintsAllInvocationsOnErrorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mjc1NDUxODI0OmJmNTQ4ZDA2YjVjZjUzODhiNDFmZDg5MzFhNDM1Nzg3NmU4ZGJiNmY=",
                "url": "https://github.com/mockito/mockito/pull/1701/commits/bf548d06b5cf5388b41fd8931a4357876e8dbb6f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1542,
                "url": "https://github.com/mockito/mockito/issues/1542",
                "title": "when mock is called multiple times, and verify fails, the error message reports only the first invocation",
                "bodyHTML": "<p dir=\"auto\">AS A diligent dev,<br>\nI WANT TO verify that a mock will eventually get called with the specified parameters,<br>\nSO THAT I can properly test my builder class</p>\n<p dir=\"auto\">SCENARIO<br>\nI have a builder class exposing a .with(String key, String value) method.<br>\nI created a test for testing that at a certain point the method gets called with 'foo', 'valueFoo'<br>\nI'd like to follow a test pattern where 1 test case has only 1 assertion</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"builderMock.with('bar','valueBar');\nbuilderMock.with('foo','notValueFoo');\nverify(builderMock).with('foo','valueFoo');\"><pre class=\"notranslate\"><code class=\"notranslate\">builderMock.with('bar','valueBar');\nbuilderMock.with('foo','notValueFoo');\nverify(builderMock).with('foo','valueFoo');\n</code></pre></div>\n<p dir=\"auto\">WHAT'S WRONG<br>\nVerify reports only the first invocation in the test failed logs.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Arguments are different! Wanted: \nbuilderMock.with('foo','valueFoo');\nat ...\nActual invocation has different arguments:\nbuilderMock.with('bar','valueBar');\nat ...\"><pre class=\"notranslate\"><code class=\"notranslate\">Arguments are different! Wanted: \nbuilderMock.with('foo','valueFoo');\nat ...\nActual invocation has different arguments:\nbuilderMock.with('bar','valueBar');\nat ...\n</code></pre></div>\n<p dir=\"auto\">IMO should be a list of invocation for that methods, something like:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Actual invocations have different arguments:\n// builderMock.with('bar','valueBar');\n// at ...\n// builderMock.with('foo','notValueFoo');\n// at ...\"><pre class=\"notranslate\"><code class=\"notranslate\">// Actual invocations have different arguments:\n// builderMock.with('bar','valueBar');\n// at ...\n// builderMock.with('foo','notValueFoo');\n// at ...\n</code></pre></div>\n<p dir=\"auto\">NOTE<br>\nFor anybody else having this problem, I'm rethrowing the exception raised with something like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    public static ArgumentsAreDifferent createExceptionWithEnhancedVerifyLogsFor(\n            Object mockedObject,\n            String invokedMethod,\n            ArgumentsAreDifferent ex\n    ) {\n        String newline = System.getProperty(&quot;line.separator&quot;);\n        String wanted = ex.getExpected();\n        String actualTitle = MessageFormat.format(\n                &quot;Interactions of {0}.{1}():&quot;,\n                mockedObject.getClass().getCanonicalName(), invokedMethod\n        );\n        String actual = mockingDetails(mockedObject).getInvocations().stream()\n                .filter(invocation -&gt; invocation.getMethod().getName().equals(invokedMethod))\n                .map(Object::toString)\n                .collect(Collectors.joining( newline ));\n        String message = String.join(newline,\n                ex.getClass().getCanonicalName(),\n                &quot;Wanted: &quot; + wanted,\n                actualTitle, actual\n        );\n        ArgumentsAreDifferent enhancedEx = new ArgumentsAreDifferent(message, wanted, actual);\n        enhancedEx.setStackTrace(ex.getStackTrace());\n        return enhancedEx;\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    public static ArgumentsAreDifferent createExceptionWithEnhancedVerifyLogsFor(\n            Object mockedObject,\n            String invokedMethod,\n            ArgumentsAreDifferent ex\n    ) {\n        String newline = System.getProperty(\"line.separator\");\n        String wanted = ex.getExpected();\n        String actualTitle = MessageFormat.format(\n                \"Interactions of {0}.{1}():\",\n                mockedObject.getClass().getCanonicalName(), invokedMethod\n        );\n        String actual = mockingDetails(mockedObject).getInvocations().stream()\n                .filter(invocation -&gt; invocation.getMethod().getName().equals(invokedMethod))\n                .map(Object::toString)\n                .collect(Collectors.joining( newline ));\n        String message = String.join(newline,\n                ex.getClass().getCanonicalName(),\n                \"Wanted: \" + wanted,\n                actualTitle, actual\n        );\n        ArgumentsAreDifferent enhancedEx = new ArgumentsAreDifferent(message, wanted, actual);\n        enhancedEx.setStackTrace(ex.getStackTrace());\n        return enhancedEx;\n    }\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/1542",
                "createdAt": "2018-11-23T15:17:22Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #1516 and #1631 : Allows @Spy with @InjectMocks to be injected into other @InjectMocks",
        "url": "https://github.com/mockito/mockito/pull/1711",
        "resourcePath": "/mockito/mockito/pull/1711",
        "createdAt": "2019-05-13T08:09:37Z",
        "number": 1711,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/util/reflection/BiggestConstructorResolverTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/util/reflection/FieldInitializerTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/util/reflection/LenientNoArgsConstructorResolverTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/util/reflection/NoArgsConstructorResolverTest.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/test/java/org/mockito/internal/util/reflection/ParameterizedConstructorInstantiatorTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/util/reflection/StrictBiggestConstructorResolverTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/annotation/InjectingAnnotationEngineByConstructorTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/annotation/InjectingAnnotationEngineByPropertyTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/annotation/InjectingAnnotationEngineCircularInjectionByConstructorTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/annotation/InjectingAnnotationEngineCircularInjectionByPropertyTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v84QlHcK2gAoZWNiODc0Mzg1NmNiNWZhZTNjMWQ5YWNkNDYwNzgzY2VlM2MxZjlmMg",
                "url": "https://github.com/mockito/mockito/pull/1711/commits/ecb8743856cb5fae3c1d9acd460783cee3c1f9f2"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1516,
                "url": "https://github.com/mockito/mockito/issues/1516",
                "title": "@Spy @InjectMocks dependency A->spy(B)->C not injected correctly when using constructor dependency injection",
                "bodyHTML": "<p dir=\"auto\">I am trying to do a test on class A, with a dependency A-&gt;B to be spied, and a transitive dependency B-&gt;C</p>\n<p dir=\"auto\">This code is typical in a spring application, when A is a high-level service, C is a low-level one (like a Repository), and B is simply a helper service class that delegate most calls to C</p>\n<p dir=\"auto\">To use <code class=\"notranslate\">@Spy</code> on instance of B, requires to mock C, and inject C into B...<br>\na typical test code should be</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"   @RunWith(MockitoJUnitRunner.class)\n   class Test {\n        @InjectMocks A a;\n\t@Spy @InjectMocks  B b; \n        @Spy C c;\n\n       @Test  public void testA() { .. }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">   @RunWith(MockitoJUnitRunner.class)\n   class Test {\n        @InjectMocks A a;\n\t@Spy @InjectMocks  B b; \n        @Spy C c;\n\n       @Test  public void testA() { .. }\n}\n</code></pre></div>\n<p dir=\"auto\">This generally works fine with standard spring injections for code like</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"   @Component // or @Service, @Controller, ..\n   public class B {\n      @Autowired // or @Inject\n      private C c;\n   }\"><pre class=\"notranslate\"><code class=\"notranslate\">   @Component // or @Service, @Controller, ..\n   public class B {\n      @Autowired // or @Inject\n      private C c;\n   }\n</code></pre></div>\n<p dir=\"auto\">... BUT fails  when using Constructor dependency injection for fields !!!<br>\nThis is absurd since constructor injection is precisely a best practice for enforcing code stability regarding  test</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"   @Component\n   public class B {\n      private final C c;\n      public B(C c) { this.c = c;  }\n   }\"><pre class=\"notranslate\"><code class=\"notranslate\">   @Component\n   public class B {\n      private final C c;\n      public B(C c) { this.c = c;  }\n   }\n</code></pre></div>\n<p dir=\"auto\">There are many strange situations, while testing different combinations of annotations on real class (<code class=\"notranslate\">@Inject</code>, <code class=\"notranslate\">@Autowired</code>..), and <code class=\"notranslate\">@Spy</code>, <code class=\"notranslate\">@InjectMocks</code> in test class</p>\n<p dir=\"auto\">Either<br>\ncase 1/ spy NOT injected in  a.b   ... so causing NPE in spy execution<br>\ncase 2/ spy NOT injected in b.c ... but injected in a.b  ... so causing NPE in spy execution<br>\ncase 3/ MockitoException Unable to initialize <code class=\"notranslate\">@Spy</code> annotated field 'b', Please ensure that the type 'CtorB' has a no-arg constructor</p>\n<p dir=\"auto\">Notice also that the final desired scenario would be to use lombok generated full constructor.. but it also fails !!</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\t@InjectMocks \n\tA a; // ERROR.. a.b == null\n\t\n\t@Spy @InjectMocks\n\tB b; // b instanciated, but not injected into a !!!\n\n\t@Spy\n\tC c;\n\n    // with..\n    @AllArgsConstructor(onConstructor_={@Inject}) // equivalent of :  @Inject public A(B b) { this.b = b; }\n    public class A {\n\tprivate final B b;\n    }\n   // or also \n   @AllArgsConstructor\n   public class A {\n\tprivate final B b;\n   }\"><pre class=\"notranslate\"><code class=\"notranslate\">\t@InjectMocks \n\tA a; // ERROR.. a.b == null\n\t\n\t@Spy @InjectMocks\n\tB b; // b instanciated, but not injected into a !!!\n\n\t@Spy\n\tC c;\n\n    // with..\n    @AllArgsConstructor(onConstructor_={@Inject}) // equivalent of :  @Inject public A(B b) { this.b = b; }\n    public class A {\n\tprivate final B b;\n    }\n   // or also \n   @AllArgsConstructor\n   public class A {\n\tprivate final B b;\n   }\n</code></pre></div>\n<p dir=\"auto\">I have joined a full maven test project that reproduce many of these scenarios<br>\n<a href=\"https://github.com/mockito/mockito/files/2466624/test-mockito.zip\">test-mockito.zip</a></p>\n<p dir=\"auto\">You can also browse it (up-to-date) <a href=\"https://github.com/Arnaud-Nauwynck/test-snippets/tree/master/test-mockito\">here</a>.</p>",
                "resourcePath": "/mockito/mockito/issues/1516",
                "createdAt": "2018-10-10T21:57:19Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "injection"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Change implementation of ExceptionFactory to explicitly test for dependent classes",
        "url": "https://github.com/mockito/mockito/pull/1723",
        "resourcePath": "/mockito/mockito/pull/1723",
        "createdAt": "2019-06-06T00:34:10Z",
        "number": 1723,
        "mergeCommit": {
          "oid": "e11a31c98d16220c073378c8d197cbe3f5381013",
          "message": "Change implementation of ExceptionFactory to explicitly test for the presence of dependent classes (#1723)\n\nChange implementation of ExceptionFactory to explicitly test for the presence of dependent classes, rather than depending on the implicit classloading behaviour. This is necessary as Android classloading behaviour is slightly different.\r\n\r\nFixes #1716",
          "commitUrl": "https://github.com/mockito/mockito/commit/e11a31c98d16220c073378c8d197cbe3f5381013",
          "parents": {
            "nodes": [
              {
                "oid": "2629096960474981558ce133c008410ee46fd529",
                "message": "3.0.2 release (previous 3.0.1) + release notes updated by CI build 4146\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/junit/ExceptionFactory.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mjg1NjAwNDMyOmYzZmMyZmVkZTI1YTFkMDU1NWM4MTk1MjNkZWZmYWM1NDE2YTNmNjg=",
                "url": "https://github.com/mockito/mockito/pull/1723/commits/f3fc2fede25a1d0555c819523deffac5416a3f68"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1716,
                "url": "https://github.com/mockito/mockito/issues/1716",
                "title": "mockito-android 2.26+ tries to use missing opentest4j exceptions",
                "bodyHTML": "<p dir=\"auto\">It appears that Mockito <code class=\"notranslate\">2.26+</code> on Android tries to use exceptions from OpenTest4j, even when OpenTest4j is not used, resulting in tests crashing due to exceptions classes not being found.</p>\n<p dir=\"auto\">Steps to reproduce:</p>\n<ol dir=\"auto\">\n<li>Open <a href=\"https://github.com/mockito/mockito/files/3215946/MockitoAndroidDemo.zip\">MockitoAndroidDemo</a> project in Android Studio</li>\n<li>Run <code class=\"notranslate\">ExampleInstrumentedTest.java</code> test on android device/emulator</li>\n<li>Test will crash with <code class=\"notranslate\">java.lang.NoClassDefFoundError: Failed resolution of: Lorg/opentest4j/AssertionFailedError</code></li>\n</ol>\n<p dir=\"auto\">Lowering version to <code class=\"notranslate\">2.25.0</code> fixes the issue</p>",
                "resourcePath": "/mockito/mockito/issues/1716",
                "createdAt": "2019-05-24T08:44:54Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Minor bug fixes",
        "url": "https://github.com/mockito/mockito/pull/1760",
        "resourcePath": "/mockito/mockito/pull/1760",
        "createdAt": "2019-08-16T14:31:05Z",
        "number": 1760,
        "mergeCommit": {
          "oid": "53324f6b34a279624012967f231d25e5ac304537",
          "message": "Fix issues in JavaDoc (#1760)\n\nFixes #1747: removed typo\r\nFixes #1513: Added missing tag to fix javadoc",
          "commitUrl": "https://github.com/mockito/mockito/commit/53324f6b34a279624012967f231d25e5ac304537",
          "parents": {
            "nodes": [
              {
                "oid": "7041ad81250c6512d525a84add039cd2dd3441b4",
                "message": "Remove JDK env from Travis configuration (#1752)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/Mockito.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMaker.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMakerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzA4MDk4Nzg2OjZmM2YzODg5MjYyZGY1MWZkNDMwMzBlYzM1MzliNDhlNWQ0YTVlNWM=",
                "url": "https://github.com/mockito/mockito/pull/1760/commits/6f3f3889262df51fd43030ec3539b48e5d4a5e5c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1513,
                "url": "https://github.com/mockito/mockito/issues/1513",
                "title": "Mockito docs / javadocs - monospaced font all over the place after point 44",
                "bodyHTML": "<p dir=\"auto\">The brilliant Mockito javadocs are less brilliant than usual, because after<br>\n<a href=\"https://static.javadoc.io/org.mockito/mockito-core/2.23.0/org/mockito/Mockito.html#mockito_instantiator_provider_deprecation\" rel=\"nofollow\">44. Deprecated org.mockito.plugins.InstantiatorProvider as it was leaking internal API. it was replaced by org.mockito.plugins.InstantiatorProvider2 (Since 2.15.4)</a><br>\nalmost everything is written with monospaced font which reduces readability. Apparently some closing tag is missing.</p>",
                "resourcePath": "/mockito/mockito/issues/1513",
                "createdAt": "2018-10-08T12:28:23Z",
                "labels": {
                  "edges": []
                }
              }
            },
            {
              "node": {
                "number": 1747,
                "url": "https://github.com/mockito/mockito/issues/1747",
                "title": "Typo in error message ",
                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/mockito/mockito/blob/885e69420baa2a382f4394b85dc84cb6fe17fff6/src/test/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMakerTest.java#L219\">mockito/src/test/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMakerTest.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 219\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/mockito/mockito/commit/885e69420baa2a382f4394b85dc84cb6fe17fff6\">885e694</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L219\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"219\"></td>\n          <td id=\"LC219\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">mockable</span>.<span class=\"pl-en\">nonMockableReason</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"VM does not not support modification of given type\"</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">\"VM does not not support modification of given type\"<br>\nshould be<br>\n\"VM does not support modification of given type\"</p>",
                "resourcePath": "/mockito/mockito/issues/1747",
                "createdAt": "2019-07-26T14:18:04Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #1769: Clarify default strict stubbing behaviour in 3.0.0",
        "url": "https://github.com/mockito/mockito/pull/1773",
        "resourcePath": "/mockito/mockito/pull/1773",
        "createdAt": "2019-09-04T18:05:08Z",
        "number": 1773,
        "mergeCommit": {
          "oid": "349df70515a1d72ea9af951bc81a1926a557e2ec",
          "message": "Fixes #1769: Clarify default strict stubbing behaviour in 3.0.0 (#1773)",
          "commitUrl": "https://github.com/mockito/mockito/commit/349df70515a1d72ea9af951bc81a1926a557e2ec",
          "parents": {
            "nodes": [
              {
                "oid": "25119e12946d5e79a003b4e778436a647a2faef4",
                "message": "Update assertj (v3.13.2) (#1765)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/quality/Strictness.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzE0MTU3NDc5OjhmMjA5N2NhMWU2MDRiYzllOGY1MGUxZjk3NTk2MmI3Y2I1OWU1ZTY=",
                "url": "https://github.com/mockito/mockito/pull/1773/commits/8f2097ca1e604bc9e8f50e1f975962b7cb59e5e6"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1769,
                "url": "https://github.com/mockito/mockito/issues/1769",
                "title": "Are strict stubs really the default in v3?",
                "bodyHTML": "<p dir=\"auto\">The Strictness.STRICT_STUBS javadoc reads: \"Planned as default for Mockito v3.\".</p>\n<p dir=\"auto\">I'm using \"org.mockito:mockito-core:3.0.0\" and strict stubs do not seem to be the default behaviour. Are they actually going to be the default in any release soon?</p>",
                "resourcePath": "/mockito/mockito/issues/1769",
                "createdAt": "2019-09-03T19:27:11Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Convenience factory method for creating stub objects",
        "url": "https://github.com/mockito/mockito/pull/1779",
        "resourcePath": "/mockito/mockito/pull/1779",
        "createdAt": "2019-09-14T02:15:25Z",
        "number": 1779,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/Mockito.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/MockitoTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzE3NTI2OTA3OmNhZmM5YjEyMzI4YmUyMDlmMGIzYjIyY2E1OWJiYjNkY2YxNDY5ZmI=",
                "url": "https://github.com/mockito/mockito/pull/1779/commits/cafc9b12328be209f0b3b22ca59bbb3dcf1469fb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1778,
                "url": "https://github.com/mockito/mockito/issues/1778",
                "title": "Convenience factory for stubs",
                "bodyHTML": "<p dir=\"auto\">A <code class=\"notranslate\">stub(Class)</code> factory method on the <code class=\"notranslate\">Mockito</code> class would be a convenient way to create stub-only objects:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"List stub = stub(List.class);\"><pre class=\"notranslate\"><code class=\"notranslate\">List stub = stub(List.class);\n</code></pre></div>\n<p dir=\"auto\">Such a factory method improves the clarity of test code by succinctly communicating the test author's intent for the test-double.</p>",
                "resourcePath": "/mockito/mockito/issues/1778",
                "createdAt": "2019-09-14T01:59:08Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #1780: Close file handle to avoid a file-handle-leak",
        "url": "https://github.com/mockito/mockito/pull/1781",
        "resourcePath": "/mockito/mockito/pull/1781",
        "createdAt": "2019-09-17T14:28:33Z",
        "number": 1781,
        "mergeCommit": {
          "oid": "9ceb2d18514aac435d4a74e758624803b604e27f",
          "message": "Fixes #1780: Close file handle to avoid a file-handle-leak (#1781)",
          "commitUrl": "https://github.com/mockito/mockito/commit/9ceb2d18514aac435d4a74e758624803b604e27f",
          "parents": {
            "nodes": [
              {
                "oid": "f964c374d73e89795778440db9b89d696ac87f92",
                "message": "Remove no longer used Assertor (#1777)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMaker.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzE4MzY4ODg3OjA5NzM1ZmJkNzRjNjNlMmIyMjEzMWU3OGNmMDE5OTMxZTg1ZTY0ZWE=",
                "url": "https://github.com/mockito/mockito/pull/1781/commits/09735fbd74c63e2b22131e78cf019931e85e64ea"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1780,
                "url": "https://github.com/mockito/mockito/issues/1780",
                "title": "File-handle leak in InlineByteBuddyMockMaker",
                "bodyHTML": "<p dir=\"auto\">Using <a href=\"https://file-leak-detector.kohsuke.org/\" rel=\"nofollow\">file-leak-detector</a> when running unit-tests using mockito-3.0.0 we see a file-handle-leak being reported in <code class=\"notranslate\">InlineByteBuddyMockMaker.&lt;clinit&gt;</code> which can easily be fixed by closing the JarFile after usage properly.</p>\n<p dir=\"auto\">I'll send a PR shortly.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\tat java.util.zip.ZipFile.&lt;init&gt;(ZipFile.java:156)\n\tat java.util.jar.JarFile.&lt;init&gt;(JarFile.java:166)\n\tat java.util.jar.JarFile.&lt;init&gt;(JarFile.java:130)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.&lt;clinit&gt;(InlineByteBuddyMockMaker.java:138)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)```\"><pre lang=\"#2\" class=\"notranslate\"><code class=\"notranslate\">\tat java.util.zip.ZipFile.&lt;init&gt;(ZipFile.java:156)\n\tat java.util.jar.JarFile.&lt;init&gt;(JarFile.java:166)\n\tat java.util.jar.JarFile.&lt;init&gt;(JarFile.java:130)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.&lt;clinit&gt;(InlineByteBuddyMockMaker.java:138)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)```\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/1780",
                "createdAt": "2019-09-17T14:17:02Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Cleaned up state after stubbing misuse exception",
        "url": "https://github.com/mockito/mockito/pull/1783",
        "resourcePath": "/mockito/mockito/pull/1783",
        "createdAt": "2019-09-25T00:53:55Z",
        "number": 1783,
        "mergeCommit": {
          "oid": "28bce89b411ffb58387b3208acfae43a31022172",
          "message": "Merge pull request #1783 from mockito/sf\n\nCleaned up state after stubbing misuse exception",
          "commitUrl": "https://github.com/mockito/mockito/commit/28bce89b411ffb58387b3208acfae43a31022172",
          "parents": {
            "nodes": [
              {
                "oid": "98e8743b6b5c0cca64cf3cb3c46a9b96b25fd9b6",
                "message": "3.0.8 release (previous 3.0.7) + release notes updated by CI build 4190\n\n[ci skip-release]"
              },
              {
                "oid": "d61e70afc0fc78b4a940a5a2a99e28586d9aa42c",
                "message": "Cleaned up state after stubbing misuse exception\n\nFixes #1655"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/StubberImpl.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/stubbing/MisusingStubbingTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzIxMDE3Mjk2OmQ2MWU3MGFmYzBmYzc4YjRhOTQwYTVhMmE5OWUyODU4NmQ5YWE0MmM=",
                "url": "https://github.com/mockito/mockito/pull/1783/commits/d61e70afc0fc78b4a940a5a2a99e28586d9aa42c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1655,
                "url": "https://github.com/mockito/mockito/issues/1655",
                "title": "Stubbing not stopped properly when running suite of tests",
                "bodyHTML": "<p dir=\"auto\">Hey,</p>\n<p dir=\"auto\">I'm not sure the title describes the problem in the best way but I found the following.</p>\n<p dir=\"auto\">Consider the two tests:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class MockitoMisusingUnitTest {\n\n    @Test\n    public void givenNotASpy_whenDoReturn_thenThrowNotAMock() {\n        try {\n            List&lt;String&gt; list = new ArrayList&lt;String&gt;();\n\n            Mockito.doReturn(100, Mockito.withSettings().lenient())\n                .when(list)\n                .size();\n\n            fail(&quot;Should have thrown a NotAMockException because 'list' is not a mock!&quot;);\n        } catch (NotAMockException e) {\n            assertThat(e.getMessage(), containsString(&quot;Argument passed to when() is not a mock!&quot;));\n        }\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MockitoMisusingUnitTest</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">givenNotASpy_whenDoReturn_thenThrowNotAMock</span>() {\n        <span class=\"pl-k\">try</span> {\n            <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">list</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ArrayList</span>&lt;<span class=\"pl-smi\">String</span>&gt;();\n\n            <span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">doReturn</span>(<span class=\"pl-c1\">100</span>, <span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">withSettings</span>().<span class=\"pl-en\">lenient</span>())\n                .<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">list</span>)\n                .<span class=\"pl-en\">size</span>();\n\n            <span class=\"pl-en\">fail</span>(<span class=\"pl-s\">\"Should have thrown a NotAMockException because 'list' is not a mock!\"</span>);\n        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">NotAMockException</span> <span class=\"pl-s1\">e</span>) {\n            <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">e</span>.<span class=\"pl-en\">getMessage</span>(), <span class=\"pl-en\">containsString</span>(<span class=\"pl-s\">\"Argument passed to when() is not a mock!\"</span>));\n        }\n    }\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@RunWith(MockitoJUnitRunner.class)\npublic class MockitoVoidMethodsUnitTest {\n\n    @Test\n    public void whenAddCalledValueCaptured() {\n        ArrayList&lt;String&gt; mockVoid = mock(ArrayList.class);\n        ArgumentCaptor&lt;String&gt; valueCapture = ArgumentCaptor.forClass(String.class);\n        doNothing().when(mockVoid).add(any(Integer.class), valueCapture.capture());\n        mockVoid.add(0, &quot;captured&quot;);\n        assertEquals(&quot;captured&quot;, valueCapture.getValue());\n    }\n\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">RunWith</span>(<span class=\"pl-smi\">MockitoJUnitRunner</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MockitoVoidMethodsUnitTest</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">whenAddCalledValueCaptured</span>() {\n        <span class=\"pl-smi\">ArrayList</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">mockVoid</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">ArrayList</span>.<span class=\"pl-k\">class</span>);\n        <span class=\"pl-smi\">ArgumentCaptor</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">valueCapture</span> = <span class=\"pl-smi\">ArgumentCaptor</span>.<span class=\"pl-en\">forClass</span>(<span class=\"pl-smi\">String</span>.<span class=\"pl-k\">class</span>);\n        <span class=\"pl-en\">doNothing</span>().<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">mockVoid</span>).<span class=\"pl-en\">add</span>(<span class=\"pl-en\">any</span>(<span class=\"pl-smi\">Integer</span>.<span class=\"pl-k\">class</span>), <span class=\"pl-s1\">valueCapture</span>.<span class=\"pl-en\">capture</span>());\n        <span class=\"pl-s1\">mockVoid</span>.<span class=\"pl-en\">add</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-s\">\"captured\"</span>);\n        <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-s\">\"captured\"</span>, <span class=\"pl-s1\">valueCapture</span>.<span class=\"pl-en\">getValue</span>());\n    }\n\n}</pre></div>\n<p dir=\"auto\">When run independently pass. When run together from eclipse or mvn the second test <code class=\"notranslate\">MockitoVoidMethodsUnitTest.whenAddCalledValueCaptured</code> fails but because of something detected in the other test:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.misusing.UnfinishedStubbingException: \nUnfinished stubbing detected here:\n-&gt; at org.baeldung.mockito.misusing.MockitoMisusingUnitTest.givenNotASpy_whenDoReturn_thenThrowNotAMock(MockitoMisusingUnitTest.java:28)\n\nE.g. thenReturn() may be missing.\nExamples of correct stubbing:\n    when(mock.isOk()).thenReturn(true);\n    when(mock.isOk()).thenThrow(exception);\n    doThrow(exception).when(mock).someVoidMethod();\nHints:\n 1. missing thenReturn()\n 2. you are trying to stub a final method, which is not supported\n 3: you are stubbing the behaviour of another mock inside before 'thenReturn' instruction if completed\n\n-&gt; at org.baeldung.mockito.MockitoVoidMethodsUnitTest.whenAddCalledValueCaptured(MockitoVoidMethodsUnitTest.java:30)\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.exceptions.misusing.UnfinishedStubbingException: \nUnfinished stubbing detected here:\n-&gt; at org.baeldung.mockito.misusing.MockitoMisusingUnitTest.givenNotASpy_whenDoReturn_thenThrowNotAMock(MockitoMisusingUnitTest.java:28)\n\nE.g. thenReturn() may be missing.\nExamples of correct stubbing:\n    when(mock.isOk()).thenReturn(true);\n    when(mock.isOk()).thenThrow(exception);\n    doThrow(exception).when(mock).someVoidMethod();\nHints:\n 1. missing thenReturn()\n 2. you are trying to stub a final method, which is not supported\n 3: you are stubbing the behaviour of another mock inside before 'thenReturn' instruction if completed\n\n-&gt; at org.baeldung.mockito.MockitoVoidMethodsUnitTest.whenAddCalledValueCaptured(MockitoVoidMethodsUnitTest.java:30)\n</code></pre></div>\n<p dir=\"auto\">This is the call stack:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"MockingProgressImpl.validateState() line: 109\t\nMockingProgressImpl.stubbingStarted() line: 98\t\nMockitoCore.stubber(Strictness) line: 179\t\nMockitoCore.stubber() line: 174\t\nMockito.doNothing() line: 2421\t\nMockitoVoidMethodsUnitTest.whenAddCalledValueCaptured() line: 30\t\"><pre class=\"notranslate\"><code class=\"notranslate\">MockingProgressImpl.validateState() line: 109\t\nMockingProgressImpl.stubbingStarted() line: 98\t\nMockitoCore.stubber(Strictness) line: 179\t\nMockitoCore.stubber() line: 174\t\nMockito.doNothing() line: 2421\t\nMockitoVoidMethodsUnitTest.whenAddCalledValueCaptured() line: 30\t\n</code></pre></div>\n<p dir=\"auto\">And the method where it then fails inside <code class=\"notranslate\">MockingProgress.java</code>:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public void validateState() {\n    validateMostStuff();\n\n    //validate stubbing:\n    if (stubbingInProgress != null) {\n        Location temp = stubbingInProgress;\n        stubbingInProgress = null;\n        throw unfinishedStubbing(temp);\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">validateState</span>() {\n    <span class=\"pl-en\">validateMostStuff</span>();\n\n    <span class=\"pl-c\">//validate stubbing:</span>\n    <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">stubbingInProgress</span> != <span class=\"pl-c1\">null</span>) {\n        <span class=\"pl-smi\">Location</span> <span class=\"pl-s1\">temp</span> = <span class=\"pl-s1\">stubbingInProgress</span>;\n        <span class=\"pl-s1\">stubbingInProgress</span> = <span class=\"pl-c1\">null</span>;\n        <span class=\"pl-k\">throw</span> <span class=\"pl-en\">unfinishedStubbing</span>(<span class=\"pl-s1\">temp</span>);\n    }\n}</pre></div>\n<p dir=\"auto\">I think this is a bug, tests should be independent and not cause side affects on each other. Maybe something is not cleaned up properly between test runs.</p>\n<p dir=\"auto\">If I add this tear down to <code class=\"notranslate\">MockitoMisusingUnitTest</code> then it works ok:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"    @After\n    public void tearDown() {\n        ThreadSafeMockingProgress.mockingProgress().reset();\n    }\t\"><pre class=\"notranslate\">    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">After</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">tearDown</span>() {\n        <span class=\"pl-smi\">ThreadSafeMockingProgress</span>.<span class=\"pl-en\">mockingProgress</span>().<span class=\"pl-en\">reset</span>();\n    }\t</pre></div>\n<p dir=\"auto\">I don't mind to have a go at fixing it, but I would need some help or hints. This was tested with the latest version 2.24.5.</p>\n<p dir=\"auto\">Thanks</p>",
                "resourcePath": "/mockito/mockito/issues/1655",
                "createdAt": "2019-03-05T22:45:40Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Upgraded JUnit Jupiter 5.1.1 -> 5.4.2",
        "url": "https://github.com/mockito/mockito/pull/1788",
        "resourcePath": "/mockito/mockito/pull/1788",
        "createdAt": "2019-09-28T01:31:15Z",
        "number": 1788,
        "mergeCommit": {
          "oid": "112919971c0a985b0918a2e0c29b145c14e0d7d8",
          "message": "Merge pull request #1788 from mockito/parallel\n\nUpgraded JUnit Jupiter 5.1.1 -> 5.4.2",
          "commitUrl": "https://github.com/mockito/mockito/commit/112919971c0a985b0918a2e0c29b145c14e0d7d8",
          "parents": {
            "nodes": [
              {
                "oid": "bcf41fdf9c977eca75b96f49a1567052851434a7",
                "message": "3.0.10 release (previous 3.0.9) + release notes updated by CI build 4201\n\n[ci skip-release]"
              },
              {
                "oid": "939ab5cb06a4d89d9159a69447a5e6b8cbed70d3",
                "message": "Bumped JUnit Jupiter and added a test\n\nAdded a test to enhance coverage. We need higher version of JUnit Jupiter to reproduce and fix #1630"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/dependencies.gradle"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/MultiLevelNestedTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzIyMzcxNTYyOjkzOWFiNWNiMDZhNGQ4OWQ5MTU5YTY5NDQ3YTVlNmI4Y2JlZDcwZDM=",
                "url": "https://github.com/mockito/mockito/pull/1788/commits/939ab5cb06a4d89d9159a69447a5e6b8cbed70d3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1630,
                "url": "https://github.com/mockito/mockito/issues/1630",
                "title": "Mockito JUnit Jupiter extension does not correctly support parallel test execution",
                "bodyHTML": "<p dir=\"auto\">Sorry for not being able to provide the required information, but we just noticed that the MockitoExtension (mockito-junit-jupiter 2.24.5) leads to spurious test failures (e.g. due to calls to mocks not being recorded) when using \"junit.jupiter.execution.parallel.enabled=true\" with surefire. Prior we used our much simpler MockitoExtension which works fine in the same situation:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class MockitoExtension implements Extension, TestInstancePostProcessor, AfterEachCallback {\n   @Override\n   public void postProcessTestInstance(Object testInstance, ExtensionContext context) {\n      MockitoAnnotations.initMocks(testInstance);\n   }\n\n   @Override\n   public void afterEach(ExtensionContext extensionContext) throws Exception {\n      Mockito.validateMockitoUsage();\n   }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MockitoExtension</span> <span class=\"pl-k\">implements</span> <span class=\"pl-smi\">Extension</span>, <span class=\"pl-smi\">TestInstancePostProcessor</span>, <span class=\"pl-smi\">AfterEachCallback</span> {\n   <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n   <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">postProcessTestInstance</span>(<span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">testInstance</span>, <span class=\"pl-smi\">ExtensionContext</span> <span class=\"pl-s1\">context</span>) {\n      <span class=\"pl-smi\">MockitoAnnotations</span>.<span class=\"pl-en\">initMocks</span>(<span class=\"pl-s1\">testInstance</span>);\n   }\n\n   <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n   <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">afterEach</span>(<span class=\"pl-smi\">ExtensionContext</span> <span class=\"pl-s1\">extensionContext</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n      <span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">validateMockitoUsage</span>();\n   }\n}</pre></div>",
                "resourcePath": "/mockito/mockito/issues/1630",
                "createdAt": "2019-02-25T12:54:15Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "junit5"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixed JUnit Jupiter parallel issue",
        "url": "https://github.com/mockito/mockito/pull/1789",
        "resourcePath": "/mockito/mockito/pull/1789",
        "createdAt": "2019-09-28T22:08:17Z",
        "number": 1789,
        "mergeCommit": {
          "oid": "30c50fa3442004996dc9c7b2bcfdae7aaaae3ce6",
          "message": "Merge pull request #1789 from mockito/sf\n\nFixed JUnit Jupiter parallel issue",
          "commitUrl": "https://github.com/mockito/mockito/commit/30c50fa3442004996dc9c7b2bcfdae7aaaae3ce6",
          "parents": {
            "nodes": [
              {
                "oid": "214d4652aa1971cb554c434b0ac13b376aea33a7",
                "message": "3.0.11 release (previous 3.0.10) + release notes updated by CI build 4203\n\n[ci skip-release]"
              },
              {
                "oid": "5ed8a07f6ff4d9b5d3011e1891cf12119eb61684",
                "message": "Cleanup traversal of parent contexts"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "settings.gradle.kts"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/MockitoExtension.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junitJupiterParallelTest/junitJupiterParallelTest.gradle"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junitJupiterParallelTest/src/test/java/org/mockito/ParallelBugTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junitJupiterParallelTest/src/test/resources/junit-platform.properties"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzIyNDQ5OTk1OjVlZDhhMDdmNmZmNGQ5YjVkMzAxMWUxODkxY2YxMjExOWViNjE2ODQ=",
                "url": "https://github.com/mockito/mockito/pull/1789/commits/5ed8a07f6ff4d9b5d3011e1891cf12119eb61684"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1630,
                "url": "https://github.com/mockito/mockito/issues/1630",
                "title": "Mockito JUnit Jupiter extension does not correctly support parallel test execution",
                "bodyHTML": "<p dir=\"auto\">Sorry for not being able to provide the required information, but we just noticed that the MockitoExtension (mockito-junit-jupiter 2.24.5) leads to spurious test failures (e.g. due to calls to mocks not being recorded) when using \"junit.jupiter.execution.parallel.enabled=true\" with surefire. Prior we used our much simpler MockitoExtension which works fine in the same situation:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class MockitoExtension implements Extension, TestInstancePostProcessor, AfterEachCallback {\n   @Override\n   public void postProcessTestInstance(Object testInstance, ExtensionContext context) {\n      MockitoAnnotations.initMocks(testInstance);\n   }\n\n   @Override\n   public void afterEach(ExtensionContext extensionContext) throws Exception {\n      Mockito.validateMockitoUsage();\n   }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MockitoExtension</span> <span class=\"pl-k\">implements</span> <span class=\"pl-smi\">Extension</span>, <span class=\"pl-smi\">TestInstancePostProcessor</span>, <span class=\"pl-smi\">AfterEachCallback</span> {\n   <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n   <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">postProcessTestInstance</span>(<span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">testInstance</span>, <span class=\"pl-smi\">ExtensionContext</span> <span class=\"pl-s1\">context</span>) {\n      <span class=\"pl-smi\">MockitoAnnotations</span>.<span class=\"pl-en\">initMocks</span>(<span class=\"pl-s1\">testInstance</span>);\n   }\n\n   <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n   <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">afterEach</span>(<span class=\"pl-smi\">ExtensionContext</span> <span class=\"pl-s1\">extensionContext</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> {\n      <span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">validateMockitoUsage</span>();\n   }\n}</pre></div>",
                "resourcePath": "/mockito/mockito/issues/1630",
                "createdAt": "2019-02-25T12:54:15Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "junit5"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix typo in the wiki link",
        "url": "https://github.com/mockito/mockito/pull/1798",
        "resourcePath": "/mockito/mockito/pull/1798",
        "createdAt": "2019-10-05T08:57:05Z",
        "number": 1798,
        "mergeCommit": {
          "oid": "e4b27d1d99800b09c757ec1854a70f8c295943cd",
          "message": "Fix typo in the wiki link (#1798)\n\nFixes #1791",
          "commitUrl": "https://github.com/mockito/mockito/commit/e4b27d1d99800b09c757ec1854a70f8c295943cd",
          "parents": {
            "nodes": [
              {
                "oid": "ded29efbfbd7be6e3a0a2fdae07d370d099be625",
                "message": "Create SECURITY.md\n\nIt is required for Tidelift"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/Mockito.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzI0OTIxNDU5OjEyNTBiYmE3NWI2YjI3ZDE4YjE4MzU3ZTFhNmY1N2FjMmQ4NmUyYWI=",
                "url": "https://github.com/mockito/mockito/pull/1798/commits/1250bba75b6b27d18b18357e1a6f57ac2d86e2ab"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1791,
                "url": "https://github.com/mockito/mockito/issues/1791",
                "title": "Typo in Mockito.java Javadoc: \"verification\" in wiki link",
                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/mockito/mockito/blob/f8581c6e875dc3fb587fe31e85d025ef4d110a3f/src/main/java/org/mockito/Mockito.java#L2579\">mockito/src/main/java/org/mockito/Mockito.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 2579\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/mockito/mockito/commit/f8581c6e875dc3fb587fe31e85d025ef4d110a3f\">f8581c6</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L2579\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"2579\"></td>\n          <td id=\"LC2579\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">     * &lt;a href=\"https://github.com/mockito/mockito/wiki/Greedy-algorithm-of-verfication-InOrder\"&gt;this wiki page&lt;/a&gt;.</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">There's a missing \"i\" in the wiki link:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"https://github.com/mockito/mockito/wiki/Greedy-algorithm-of-verfication-InOrder\nhttps://github.com/mockito/mockito/wiki/Greedy-algorithm-of-verification-InOrder\"><pre class=\"notranslate\"><code class=\"notranslate\">https://github.com/mockito/mockito/wiki/Greedy-algorithm-of-verfication-InOrder\nhttps://github.com/mockito/mockito/wiki/Greedy-algorithm-of-verification-InOrder\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/1791",
                "createdAt": "2019-09-30T19:34:37Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Guard against multiple evaluations of before statement",
        "url": "https://github.com/mockito/mockito/pull/1821",
        "resourcePath": "/mockito/mockito/pull/1821",
        "createdAt": "2019-11-10T16:36:47Z",
        "number": 1821,
        "mergeCommit": {
          "oid": "d64cbd38edaca135a1bc835cd74fc943e0897535",
          "message": "Guard against multiple evaluations of before statement (#1821)\n\n* Guard against multiple evaluations of before statement\r\n\r\nSome rules evaluate the base statement multiple times, e.g. to execute\r\ntests repeatedly. The changes made in #1672 led to an exception in such\r\ncases because the `MockitoListener` was registered multiple times. Now,\r\nwe only add the listener the first time the statement is evaluated in\r\norder to restore the old behavior.\r\n\r\nFixes #1767.\r\n\r\n* Reset listener when removing it",
          "commitUrl": "https://github.com/mockito/mockito/commit/d64cbd38edaca135a1bc835cd74fc943e0897535",
          "parents": {
            "nodes": [
              {
                "oid": "2ffc8aee826fe81ed8cee1e26da1f7f329b0b2b4",
                "message": "3.1.8 release (previous 3.1.7) + release notes updated by CI build 4279\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/runners/DefaultInternalRunner.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/runners/DefaultInternalRunnerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzM5MTY3MjE3OjQ5ZTQxYWE5ODA5ZTBhNmI2NjljZjNhNjVhNjczYTUxOGZiNzdmODA=",
                "url": "https://github.com/mockito/mockito/pull/1821/commits/49e41aa9809e0a6b669cf3a65a673a518fb77f80"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1767,
                "url": "https://github.com/mockito/mockito/issues/1767",
                "title": "'MismatchReportingTestListener' has already been added and not removed using MockitoJUnitRunner",
                "bodyHTML": "<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import static org.hamcrest.Matchers.equalTo;\nimport static org.hamcrest.Matchers.hasProperty;\nimport static org.mockito.ArgumentMatchers.any;\nimport static org.mockito.ArgumentMatchers.anyString;\nimport static org.mockito.Mockito.never;\nimport static org.mockito.Mockito.verify;\nimport static org.mockito.hamcrest.MockitoHamcrest.argThat;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.function.Consumer;\n\nimport org.junit.Rule;\nimport org.junit.Test;\nimport org.junit.rules.TemporaryFolder;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.junit.MockitoJUnitRunner;\nimport org.pdfsam.support.params.SingleOutputTaskParametersBuilder;\nimport org.pdfsam.test.InitializeAndApplyJavaFxThreadRule;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class BrowsablePdfOutputFieldTest {\n    @Rule\n    public TemporaryFolder folder = new TemporaryFolder();\n    @Rule\n    public InitializeAndApplyJavaFxThreadRule fxThread = new InitializeAndApplyJavaFxThreadRule();\n    @Mock\n    private SingleOutputTaskParametersBuilder&lt;?&gt; builder;\n    @Mock\n    private Consumer&lt;String&gt; onError;\n\n    @Test\n    public void valid() throws IOException {\n        BrowsablePdfOutputField victim = new BrowsablePdfOutputField();\n        File value = folder.newFile(&quot;test.pdf&quot;);\n        victim.getTextField().setText(value.getAbsolutePath());\n        victim.apply(builder, onError);\n        verify(builder).output(argThat(hasProperty(&quot;destination&quot;, equalTo(value))));\n        verify(onError, never()).accept(anyString());\n    }\n\n    @Test\n    public void invalid() {\n        BrowsablePdfOutputField victim = new BrowsablePdfOutputField();\n        victim.enforceValidation(true, true);\n        victim.getTextField().setText(&quot;ChuckNorris&quot;);\n        victim.apply(builder, onError);\n        verify(builder, never()).output(any());\n        verify(onError).accept(anyString());\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">import static org.hamcrest.Matchers.equalTo;\nimport static org.hamcrest.Matchers.hasProperty;\nimport static org.mockito.ArgumentMatchers.any;\nimport static org.mockito.ArgumentMatchers.anyString;\nimport static org.mockito.Mockito.never;\nimport static org.mockito.Mockito.verify;\nimport static org.mockito.hamcrest.MockitoHamcrest.argThat;\n\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.function.Consumer;\n\nimport org.junit.Rule;\nimport org.junit.Test;\nimport org.junit.rules.TemporaryFolder;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.junit.MockitoJUnitRunner;\nimport org.pdfsam.support.params.SingleOutputTaskParametersBuilder;\nimport org.pdfsam.test.InitializeAndApplyJavaFxThreadRule;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class BrowsablePdfOutputFieldTest {\n    @Rule\n    public TemporaryFolder folder = new TemporaryFolder();\n    @Rule\n    public InitializeAndApplyJavaFxThreadRule fxThread = new InitializeAndApplyJavaFxThreadRule();\n    @Mock\n    private SingleOutputTaskParametersBuilder&lt;?&gt; builder;\n    @Mock\n    private Consumer&lt;String&gt; onError;\n\n    @Test\n    public void valid() throws IOException {\n        BrowsablePdfOutputField victim = new BrowsablePdfOutputField();\n        File value = folder.newFile(\"test.pdf\");\n        victim.getTextField().setText(value.getAbsolutePath());\n        victim.apply(builder, onError);\n        verify(builder).output(argThat(hasProperty(\"destination\", equalTo(value))));\n        verify(onError, never()).accept(anyString());\n    }\n\n    @Test\n    public void invalid() {\n        BrowsablePdfOutputField victim = new BrowsablePdfOutputField();\n        victim.enforceValidation(true, true);\n        victim.getTextField().setText(\"ChuckNorris\");\n        victim.apply(builder, onError);\n        verify(builder, never()).output(any());\n        verify(onError).accept(anyString());\n    }\n}\n</code></pre></div>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)<br>\nMockito 3.0.0, AdoptOpenJDK 11.0.4, Linux Mint</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>\n<p dir=\"auto\">I migrated from 1.10.19 to the 3.0.0 version and I have few tests using the MockitoJUnitRunner which are failing with the following stacktrace:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.misusing.RedundantListenerException: \nProblems adding Mockito listener.\nListener of type 'MismatchReportingTestListener' has already been added and not removed.\nIt indicates that previous listener was not removed according to the API.\nWhen you add a listener, don't forget to remove the listener afterwards:\n  Mockito.framework().removeListener(myListener);\nFor more information, see the javadoc for RedundantListenerException class.\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:41)\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\n\tat org.pdfsam.test.JavaFXThreadRule$1.lambda$evaluate$0(JavaFXThreadRule.java:48)\n\tat com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:389)\n\tat com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427)\n\tat com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96)\n\tat com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method)\n\tat com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277)\n\tat java.base/java.lang.Thread.run(Thread.java:835)\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.exceptions.misusing.RedundantListenerException: \nProblems adding Mockito listener.\nListener of type 'MismatchReportingTestListener' has already been added and not removed.\nIt indicates that previous listener was not removed according to the API.\nWhen you add a listener, don't forget to remove the listener afterwards:\n  Mockito.framework().removeListener(myListener);\nFor more information, see the javadoc for RedundantListenerException class.\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:41)\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\n\tat org.pdfsam.test.JavaFXThreadRule$1.lambda$evaluate$0(JavaFXThreadRule.java:48)\n\tat com.sun.javafx.application.PlatformImpl.lambda$runLater$10(PlatformImpl.java:428)\n\tat java.base/java.security.AccessController.doPrivileged(AccessController.java:389)\n\tat com.sun.javafx.application.PlatformImpl.lambda$runLater$11(PlatformImpl.java:427)\n\tat com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:96)\n\tat com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method)\n\tat com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277)\n\tat java.base/java.lang.Thread.run(Thread.java:835)\n</code></pre></div>\n<p dir=\"auto\">It seems something internal, I didn't add or remove any <code class=\"notranslate\">MismatchReportingTestListener</code> and moreover the same code was working with the 1.10.19 and is working if I remove the <code class=\"notranslate\">MockitoJUnitRunner</code> and replace the <code class=\"notranslate\">@Mock</code> annotation with a <code class=\"notranslate\">Mockito.mock</code> in a <code class=\"notranslate\">@Before</code> method.</p>",
                "resourcePath": "/mockito/mockito/issues/1767",
                "createdAt": "2019-08-27T12:03:57Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Upgrade byte buddy to 1.10.5",
        "url": "https://github.com/mockito/mockito/pull/1842",
        "resourcePath": "/mockito/mockito/pull/1842",
        "createdAt": "2019-12-11T20:12:44Z",
        "number": 1842,
        "mergeCommit": {
          "oid": "fe1141bcea74838fc1a5c1867ec932f180b8eb45",
          "message": "Fixes #1841 : Update byte buddy to 1.10.5 (#1842)",
          "commitUrl": "https://github.com/mockito/mockito/commit/fe1141bcea74838fc1a5c1867ec932f180b8eb45",
          "parents": {
            "nodes": [
              {
                "oid": "49c3b4ffd25f574cbd64a2f85b9ea4b9bfbfe623",
                "message": "Fix several typos found by a spell checker (#1795)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/dependencies.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzUyMDk0NDI5OjM4YmVlOWFiZjU5MGRjODA4ZTdhODBhYTYwOTQwNmIyNDVlZmRiYTk=",
                "url": "https://github.com/mockito/mockito/pull/1842/commits/38bee9abf590dc808e7a80aa609406b245efdba9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1841,
                "url": "https://github.com/mockito/mockito/issues/1841",
                "title": "Update byte-buddy to 1.10.5",
                "bodyHTML": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">Byte-buddy had a bug that prevented running tests in IntelliJ due to space in the executable name: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"494738687\" data-permission-text=\"Title is private\" data-url=\"https://github.com/raphw/byte-buddy/issues/732\" data-hovercard-type=\"issue\" data-hovercard-url=\"/raphw/byte-buddy/issues/732/hovercard\" href=\"https://github.com/raphw/byte-buddy/issues/732\">raphw/byte-buddy#732</a> This was fixed in <a href=\"https://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.10.5\">1.10.5</a> so it would make sense to update it in Mockito as well.</p>",
                "resourcePath": "/mockito/mockito/issues/1841",
                "createdAt": "2019-12-11T20:10:38Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Revert \"Add Duration overloads. Fixes #1815\"",
        "url": "https://github.com/mockito/mockito/pull/1845",
        "resourcePath": "/mockito/mockito/pull/1845",
        "createdAt": "2019-12-16T10:49:58Z",
        "number": 1845,
        "mergeCommit": {
          "oid": "1ce2078a562a4486fe4a5917a9b91aa8ef4216c2",
          "message": "Revert \"Add java.time.Duration overloads to `timeout` and `after` (#1818)\" (#1845)\n\nThis reverts commit 9603fb28158de0fb519611d58e931bf7b4bbc33c.",
          "commitUrl": "https://github.com/mockito/mockito/commit/1ce2078a562a4486fe4a5917a9b91aa8ef4216c2",
          "parents": {
            "nodes": [
              {
                "oid": "517faccdcf9f9d41f3664fc7955f387608a43a5e",
                "message": "3.2.2 release (previous 3.2.0) + release notes updated by CI build 4322\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/exceptions/Reporter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/Timer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/verification/VerificationOverTimeImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/verification/VerificationWrapperInOrderWrapper.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/verification/After.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/verification/Timeout.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/util/TimerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/verification/VerificationOverTimeImplTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/verification/TimeoutTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/verification/VerificationWithTimeoutTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzUzNDk2Nzk5OjMxMDY3MTY3OTg0ZjFmZWExOWIyMWFkMWZlYjQ3N2NmYzY5NWVmNWE=",
                "url": "https://github.com/mockito/mockito/pull/1845/commits/31067167984f1fea19b21ad1feb477cfc695ef5a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1843,
                "url": "https://github.com/mockito/mockito/issues/1843",
                "title": "java.time.Duration not present before SDK 26",
                "bodyHTML": "<p dir=\"auto\">Unable to use Mockito 3.1.7+ with Android on lower SDK devices.</p>\n<p dir=\"auto\">Reason:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"518180001\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1815\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/1815/hovercard\" href=\"https://github.com/mockito/mockito/issues/1815\">#1815</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"518510882\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1818\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/1818/hovercard\" href=\"https://github.com/mockito/mockito/pull/1818\">#1818</a></li>\n</ul>\n<p dir=\"auto\"><a href=\"https://developer.android.com/reference/java/time/Duration\" rel=\"nofollow\">https://developer.android.com/reference/java/time/Duration</a> &lt;-- This was not added to Android until SDK 26.</p>\n<p dir=\"auto\"><a href=\"https://developer.android.com/about/dashboards\" rel=\"nofollow\">https://developer.android.com/about/dashboards</a> &lt;-- here are some distribution stats.  Most noticeably, this would impact testing for 70% of the market and is not ideal.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NoClassDefFoundError: java.time.Duration\nat org.mockito.Mockito.timeout(Mockito.java:2856)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.NoClassDefFoundError: java.time.Duration\nat org.mockito.Mockito.timeout(Mockito.java:2856)\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/1843",
                "createdAt": "2019-12-15T18:23:45Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixed undetected unused stubbing when matching previous stubbed call",
        "url": "https://github.com/mockito/mockito/pull/1847",
        "resourcePath": "/mockito/mockito/pull/1847",
        "createdAt": "2019-12-16T22:42:05Z",
        "number": 1847,
        "mergeCommit": {
          "oid": "ce1632ddd6c55a7e85bec606536aa582a3b3aea1",
          "message": "Merge pull request #1847 from andreisilviudragnea/fix-unused-stubbing-with-implicit-eq-matchers\n\nFixed undetected unused stubbing when matching previous stubbed call",
          "commitUrl": "https://github.com/mockito/mockito/commit/ce1632ddd6c55a7e85bec606536aa582a3b3aea1",
          "parents": {
            "nodes": [
              {
                "oid": "c4b811d4a823f564c3f4a8d5cd5d47307bc9034a",
                "message": "Fixes  #522 : Basic test suite for OSGi framework (#1850)\n\n* Fixes  #522 : Basic test suite for OSGi framework\r\n\r\n* Provide org.junit package to test bundle and run tests inside it"
              },
              {
                "oid": "b0d15d11440dee846e5bb8bc56023ce6621a16cf",
                "message": "Improved the test coverage\n\n- made the tests less complicated\n- added assertions on the _count_ of unnecessary stubbings\n- made the exception message more informative"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/exceptions/Reporter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/reporting/Pluralizer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/StubbedInvocationMatcher.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/invocation/Invocation.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/reporting/PluralizerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/junitrule/StrictJUnitRuleTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/junitrunner/UnusedStubsExceptionMessageTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/stubbing/StrictStubbingTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzUzODE5MjQ1OmIwZDE1ZDExNDQwZGVlODQ2ZTViYjhiYzU2MDIzY2U2NjIxYTE2Y2Y=",
                "url": "https://github.com/mockito/mockito/pull/1847/commits/b0d15d11440dee846e5bb8bc56023ce6621a16cf"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1846,
                "url": "https://github.com/mockito/mockito/issues/1846",
                "title": "Broken unused stubbing reporting when matching previous stubbed call",
                "bodyHTML": "<p dir=\"auto\">When stubbing the same method call twice, and the second stub setup matches to first stubbed call, the first stub is not reported as unused, because Mockito detects the next stub setup as a usage of the previous stub setup. This is an example test:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class UnnecessaryStubbingWithImplicitEqMatchers {\n    @Mock IMethods mock;\n    MockitoSession mockito = Mockito.mockitoSession().initMocks(this).strictness(Strictness.STRICT_STUBS).startMocking();\n\n    @After public void after() {\n        mockito.finishMocking();\n    }\n\n    @Test public void unnecessary_stubbing() {\n        given(mock.simpleMethod(&quot;1&quot;)).willReturn(&quot;one&quot;);\n        given(mock.simpleMethod(&quot;2&quot;)).willReturn(&quot;three&quot;);\n        given(mock.simpleMethod(&quot;1&quot;)).willReturn(&quot;two&quot;);\n        given(mock.simpleMethod(&quot;1&quot;)).willReturn(&quot;four&quot;);\n\n        mock.simpleMethod(&quot;1&quot;);\n        mock.simpleMethod(&quot;2&quot;);\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">public class UnnecessaryStubbingWithImplicitEqMatchers {\n    @Mock IMethods mock;\n    MockitoSession mockito = Mockito.mockitoSession().initMocks(this).strictness(Strictness.STRICT_STUBS).startMocking();\n\n    @After public void after() {\n        mockito.finishMocking();\n    }\n\n    @Test public void unnecessary_stubbing() {\n        given(mock.simpleMethod(\"1\")).willReturn(\"one\");\n        given(mock.simpleMethod(\"2\")).willReturn(\"three\");\n        given(mock.simpleMethod(\"1\")).willReturn(\"two\");\n        given(mock.simpleMethod(\"1\")).willReturn(\"four\");\n\n        mock.simpleMethod(\"1\");\n        mock.simpleMethod(\"2\");\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">The test above should fail with <code class=\"notranslate\">UnnecessaryStubbingException</code> containing two unused stubs, but it does not.</p>\n<p dir=\"auto\">Mockito version: v3.2.4</p>",
                "resourcePath": "/mockito/mockito/issues/1846",
                "createdAt": "2019-12-16T22:36:01Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Expose MockitoExtension to ServiceLoader to support autodetection fea\u2026",
        "url": "https://github.com/mockito/mockito/pull/1865",
        "resourcePath": "/mockito/mockito/pull/1865",
        "createdAt": "2020-01-23T14:04:35Z",
        "number": 1865,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/main/resources/META-INF/services/org.junit.jupiter.api.extension.Extension"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzY2Mzc4NzI2OjFhMDljOTMzNGQ3MDcyMzYzM2YyYmQ0NTA4NjYzZWZkMTc5Yzc5OTc=",
                "url": "https://github.com/mockito/mockito/pull/1865/commits/1a09c9334d70723633f2bd4508663efd179c7997"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1864,
                "url": "https://github.com/mockito/mockito/issues/1864",
                "title": "Allow MockitoExtension to be registered automatically",
                "bodyHTML": "<p dir=\"auto\">JUnit 5 supports <a href=\"https://junit.org/junit5/docs/current/user-guide/#extensions-registration-automatic\" rel=\"nofollow\">automatic extension registration</a>. This requiers a tiny change in junit-juniper module.</p>",
                "resourcePath": "/mockito/mockito/issues/1864",
                "createdAt": "2020-01-23T14:01:01Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Revert \"Fixed undetected unused stubbing when matching previous stubbed call\"",
        "url": "https://github.com/mockito/mockito/pull/1878",
        "resourcePath": "/mockito/mockito/pull/1878",
        "createdAt": "2020-02-26T21:27:57Z",
        "number": 1878,
        "mergeCommit": {
          "oid": "d9535098c10920c369d103a1871832e97ab5b42a",
          "message": "Revert \"Fixed undetected unused stubbing when matching previous stubbed call\" (#1878)\n\n[ci maven-central-release]",
          "commitUrl": "https://github.com/mockito/mockito/commit/d9535098c10920c369d103a1871832e97ab5b42a",
          "parents": {
            "nodes": [
              {
                "oid": "bc2544019b9586aad264c02aa22853e1867f1162",
                "message": "3.3.0 release (previous 3.2.11) + release notes updated by CI build 4383\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/exceptions/Reporter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/reporting/Pluralizer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/StubbedInvocationMatcher.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/invocation/Invocation.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/reporting/PluralizerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/junitrule/StrictJUnitRuleTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/junitrunner/UnusedStubsExceptionMessageTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/stubbing/StrictStubbingTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzgwNTE1ODAzOjlhYjc4OWI3ZjJmNGQ3YzVmMjlkMWFhMmE3MTEzMTY4NTdjMjE3NTE=",
                "url": "https://github.com/mockito/mockito/pull/1878/commits/9ab789b7f2f4d7c5f29d1aa2a711316857c21751"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1877,
                "url": "https://github.com/mockito/mockito/issues/1877",
                "title": "Regression: Overriding stubbing",
                "bodyHTML": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">There seems to be a regression in 3.3.0 from 3.2.4 (published on Maven Central).<br>\nThe documentation states :</p>\n<blockquote>\n<p dir=\"auto\">Stubbing can be overridden: for example common stubbing can go to fixture setup but the test methods can override it. Please note that overridding stubbing is a potential code smell that points out too much stubbing</p>\n</blockquote>\n<p dir=\"auto\">But by simply making a copy of a stub by duplicating its line (or more realistically returning a different value in the second stub), an <code class=\"notranslate\">UnnecessaryStubbingException</code> is thrown :</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import static org.junit.jupiter.api.Assertions.assertEquals;\nimport static org.mockito.ArgumentMatchers.any;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\n\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.junit.jupiter.MockitoExtension;\n\n@ExtendWith(MockitoExtension.class)\npublic class ATest {\n\n  @Mock\n  private ByteArrayInputStream stream;\n\n  @Test\n  public void duplicate() throws IOException {\n    Mockito.when(stream.read(any())).thenReturn(1337);\n    Mockito.when(stream.read(any())).thenReturn(1337); // duplicate line\n    int value = stream.read(new byte[2048]);\n    assertEquals(1337, value);\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">Assertions</span>.<span class=\"pl-s1\">assertEquals</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">ArgumentMatchers</span>.<span class=\"pl-s1\">any</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">ByteArrayInputStream</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">IOException</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">extension</span>.<span class=\"pl-s1\">ExtendWith</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mock</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mockito</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">MockitoExtension</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">ExtendWith</span>(<span class=\"pl-smi\">MockitoExtension</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">ATest</span> {\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">ByteArrayInputStream</span> <span class=\"pl-s1\">stream</span>;\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">duplicate</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">IOException</span> {\n    <span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">stream</span>.<span class=\"pl-en\">read</span>(<span class=\"pl-en\">any</span>())).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-c1\">1337</span>);\n    <span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">stream</span>.<span class=\"pl-en\">read</span>(<span class=\"pl-en\">any</span>())).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-c1\">1337</span>); <span class=\"pl-c\">// duplicate line</span>\n    <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">value</span> = <span class=\"pl-s1\">stream</span>.<span class=\"pl-en\">read</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">byte</span>[<span class=\"pl-c1\">2048</span>]);\n    <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">1337</span>, <span class=\"pl-s1\">value</span>);\n  }\n}</pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.misusing.UnnecessaryStubbingException: \nUnnecessary stubbings detected.\nClean &amp; maintainable test code requires zero unnecessary code.\nThere are 1 unnecessary stubbing (click to navigate to relevant line of code):\n  1. -&gt; at ATest.duplicate(ATest.java:21)\nPlease remove unnecessary stubbings or use 'lenient' strictness. More info: javadoc for UnnecessaryStubbingException class.\n\tat org.mockito.junit.jupiter.MockitoExtension.afterEach(MockitoExtension.java:181)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAfterEachCallbacks$11(TestMethodTestDescriptor.java:248)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$13(TestMethodTestDescriptor.java:268)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$14(TestMethodTestDescriptor.java:268)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAllAfterMethodsOrCallbacks(TestMethodTestDescriptor.java:267)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAfterEachCallbacks(TestMethodTestDescriptor.java:247)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:143)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:171)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:115)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:171)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:115)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:171)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.exceptions.misusing.UnnecessaryStubbingException: \nUnnecessary stubbings detected.\nClean &amp; maintainable test code requires zero unnecessary code.\nThere are 1 unnecessary stubbing (click to navigate to relevant line of code):\n  1. -&gt; at ATest.duplicate(ATest.java:21)\nPlease remove unnecessary stubbings or use 'lenient' strictness. More info: javadoc for UnnecessaryStubbingException class.\n\tat org.mockito.junit.jupiter.MockitoExtension.afterEach(MockitoExtension.java:181)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAfterEachCallbacks$11(TestMethodTestDescriptor.java:248)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$13(TestMethodTestDescriptor.java:268)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$14(TestMethodTestDescriptor.java:268)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1540)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAllAfterMethodsOrCallbacks(TestMethodTestDescriptor.java:267)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAfterEachCallbacks(TestMethodTestDescriptor.java:247)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:143)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:171)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:115)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:171)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:115)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.compute(ForkJoinPoolHierarchicalTestExecutorService.java:171)\n\tat java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:189)\n\tat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)\n\tat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)\n\tat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)\n\tat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)\n\tat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)\n</code></pre></div>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/1877",
                "createdAt": "2020-02-26T12:20:02Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix UnnecessaryStubbingException javadoc",
        "url": "https://github.com/mockito/mockito/pull/1881",
        "resourcePath": "/mockito/mockito/pull/1881",
        "createdAt": "2020-02-28T22:12:07Z",
        "number": 1881,
        "mergeCommit": {
          "oid": "06b131f7aca0ec1d7f20f1b4ed767936ad440362",
          "message": "Fix UnnecessaryStubbingException javadoc (#1881)",
          "commitUrl": "https://github.com/mockito/mockito/commit/06b131f7aca0ec1d7f20f1b4ed767936ad440362",
          "parents": {
            "nodes": [
              {
                "oid": "434556a4bd4bb288bf7d12fd4d21ce3a244ce4ba",
                "message": "3.3.1 release (previous 3.3.0) + release notes updated by CI build 4387\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/exceptions/misusing/UnnecessaryStubbingException.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzgxNjE4OTg2OjM5NzE1YzNkMTJiZGQ0M2Q2OTQxMmU5OWVhZDJiNTNjOWY0ZmIwZTc=",
                "url": "https://github.com/mockito/mockito/pull/1881/commits/39715c3d12bdd43d69412e99ead2b53c9f4fb0e7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1880,
                "url": "https://github.com/mockito/mockito/issues/1880",
                "title": "Unbalanced HTML tags in Javadoc of UnnecessaryStubbingException",
                "bodyHTML": "<p dir=\"auto\">In the <a href=\"https://javadoc.io/static/org.mockito/mockito-core/3.3.1/org/mockito/exceptions/misusing/UnnecessaryStubbingException.html\" rel=\"nofollow\">Javadoc of that class</a>, the <code class=\"notranslate\">&lt;code</code> is not closed properly. Because of this, the following paragraphs are rendered in monospace font as well.</p>\n<p dir=\"auto\">While here, <code class=\"notranslate\">effect not</code> should be <code class=\"notranslate\">effect of not</code>.</p>",
                "resourcePath": "/mockito/mockito/issues/1880",
                "createdAt": "2020-02-28T09:10:09Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix mocks throwing same instance with throwable class",
        "url": "https://github.com/mockito/mockito/pull/1890",
        "resourcePath": "/mockito/mockito/pull/1890",
        "createdAt": "2020-03-20T17:12:48Z",
        "number": 1890,
        "mergeCommit": {
          "oid": "5b63b6fa0d5649a6552ebd75a7113206ad863e03",
          "message": "Fixes #1875 : Fix mocks throwing same instance with throwable class (#1890)\n\nFixes mocks throwing the same instance consecutively of a given\r\nthrowable class after specifying the mock behaviour with doThrow(Class)\r\nor thenThrow(Class).",
          "commitUrl": "https://github.com/mockito/mockito/commit/5b63b6fa0d5649a6552ebd75a7113206ad863e03",
          "parents": {
            "nodes": [
              {
                "oid": "560adf377677a4a2c658a0b24e2f9c2e0b373c20",
                "message": "3.3.3 release (previous 3.3.2) + release notes updated by CI build 4393\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/BaseStubbing.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/StubberImpl.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/stubbing/answers/AbstractThrowsException.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/answers/ThrowsException.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/stubbing/answers/ThrowsExceptionForClassType.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/AbstractThrowsExceptionTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/ThrowsExceptionForClassTypeTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/ThrowsExceptionTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/stubbing/StubbingWithThrowablesTest.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/UninstantiableThrowableTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzkxNjQ3Nzk0OjE5MWE2OGJiZGJhN2Q5MjIwODNhYTA5YmU2MDIxYTBhYjcwNjQ4NmU=",
                "url": "https://github.com/mockito/mockito/pull/1890/commits/191a68bbdba7d922083aa09be6021a0ab706486e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1875,
                "url": "https://github.com/mockito/mockito/issues/1875",
                "title": "thenThrow(Class) no longer creates new instances",
                "bodyHTML": "<p dir=\"auto\">As of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"249808086\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1162\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/1162/hovercard\" href=\"https://github.com/mockito/mockito/pull/1162\">#1162</a>, <code class=\"notranslate\">thenThrow(Class)</code> no longer creates new instances for each invocation.  We had tests that were reliant on that behavior; for example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\t@Test\n\tpublic void thenThrow() {\n\t\tSupplier&lt;Object&gt; r = mock(Supplier.class);\n\t\twhen(r.get()).thenThrow(RuntimeException.class);\n\t\tRuntimeException first = null;\n\t\tfor (int i = 0; i &lt; 2; i++) {\n\t\t\ttry {\n\t\t\t\tr.get();\n\t\t\t} catch (RuntimeException e) {\n\t\t\t\tif (first == null) {\n\t\t\t\t\tfirst = e;\n\t\t\t\t} else {\n\t\t\t\t\tfirst.addSuppressed(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (first != null) {\n\t\t\tthrow first;\n\t\t}\n\t}\"><pre class=\"notranslate\"><code class=\"notranslate\">\t@Test\n\tpublic void thenThrow() {\n\t\tSupplier&lt;Object&gt; r = mock(Supplier.class);\n\t\twhen(r.get()).thenThrow(RuntimeException.class);\n\t\tRuntimeException first = null;\n\t\tfor (int i = 0; i &lt; 2; i++) {\n\t\t\ttry {\n\t\t\t\tr.get();\n\t\t\t} catch (RuntimeException e) {\n\t\t\t\tif (first == null) {\n\t\t\t\t\tfirst = e;\n\t\t\t\t} else {\n\t\t\t\t\tfirst.addSuppressed(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (first != null) {\n\t\t\tthrow first;\n\t\t}\n\t}\n</code></pre></div>\n<p dir=\"auto\">These tests now fail:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.IllegalArgumentException: Self-suppression not permitted\n\tat java.lang.Throwable.addSuppressed(Throwable.java:1043)\n\tat example.Test.thenThrow(Test.java:10)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.IllegalArgumentException: Self-suppression not permitted\n\tat java.lang.Throwable.addSuppressed(Throwable.java:1043)\n\tat example.Test.thenThrow(Test.java:10)\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/1875",
                "createdAt": "2020-02-19T15:59:36Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make JARs build reproducibly",
        "url": "https://github.com/mockito/mockito/pull/1892",
        "resourcePath": "/mockito/mockito/pull/1892",
        "createdAt": "2020-03-22T23:38:23Z",
        "number": 1892,
        "mergeCommit": {
          "oid": "ab4bd0c533977497697ac4ab629f301c66596ffc",
          "message": "Fixes #1891: Instruct Gradle to build JARs deterministically (#1892)\n\nThis makes the build reproducible, if there are no other sources of non-determinism with the JAR's content such as the manifest.\r\n\r\nIt strips the \"Bnd-LastModified\" header from OSGi content in JARs. it copies the jar and removes the offending header from the Manifest file. Due to a known issue in Gradle with the (now-deprecated) OSGi plugin, this is one of the only ways to remove this header.\r\n\r\nAdditionally, we verify the reproducibility in CI build via a new Gradle task. This new task, `checkReproducibility`, runs two builds, collects the sha256 checksums of the output archives, and compares them.\r\n\r\nCo-authored-by: Tim van der Lippe <tvanderlippe@google.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/ab4bd0c533977497697ac4ab629f301c66596ffc",
          "parents": {
            "nodes": [
              {
                "oid": "872358c810a7e750cccac6a6614b3191269732db",
                "message": "3.3.5 release (previous 3.3.4) + release notes updated by CI build 4402\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".gitignore"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".travis.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "build.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/mockito-core/osgi.gradle"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "gradle/mockito-core/reproducible-build.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzkyMDkyNjk4OjVmM2VkMmIyZDcxYjIwZjRlOGEwMzYyMTgyOWJmNGQ3MGU0Y2UzN2Y=",
                "url": "https://github.com/mockito/mockito/pull/1892/commits/5f3ed2b2d71b20f4e8a03621829bf4d70e4ce37f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1891,
                "url": "https://github.com/mockito/mockito/issues/1891",
                "title": "Build is not reproducible",
                "bodyHTML": "<p dir=\"auto\">Repeated subsequent builds of the project create outputs which are not byte-for-byte identical, and so cannot be reproduced locally (see: <a href=\"https://reproducible-builds.org/\" rel=\"nofollow\">Reproducible Builds</a>)</p>\n<p dir=\"auto\">This is due to:</p>\n<ul dir=\"auto\">\n<li>File modification timestamps in JARs.</li>\n<li>Non-deterministic file ordering in JARs.</li>\n<li>OSGi bundle embedding timestamps in JAR manifests.</li>\n</ul>\n<p dir=\"auto\">Given the build environment under which a version was created, I would like to be able to compare the checksums published on Bintray and/or Maven Central with a locally built version against the same environment, to assure myself that the artifact being pulled has actually been generated from this source code.</p>\n<p dir=\"auto\">(I have a PR to address this which I am happy to raise)</p>",
                "resourcePath": "/mockito/mockito/issues/1891",
                "createdAt": "2020-03-22T22:46:59Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "#1900 Configure mocks for annotation interfaces with default values from annotation",
        "url": "https://github.com/mockito/mockito/pull/1901",
        "resourcePath": "/mockito/mockito/pull/1901",
        "createdAt": "2020-04-07T00:17:27Z",
        "number": 1901,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/MockitoCore.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/MockedAnnotationInterfaceWithDefaultsTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mzk5OTY5OTU3OmM3ZjE4MGZjYWYxYWRhMDBhMWYyMmEwODQzZjdhZDBmODVlNDE1M2Q=",
                "url": "https://github.com/mockito/mockito/pull/1901/commits/c7f180fcaf1ada00a1f22a0843f7ad0f85e4153d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1900,
                "url": "https://github.com/mockito/mockito/issues/1900",
                "title": "Configure mocks for annotation interfaces with default values from annotation",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">Mockito.mock()</code> can quite conveniently be used to not only create instances of interfaces, but also to create instances of <a href=\"https://docs.oracle.com/javase/tutorial/java/annotations/declaring.html\" rel=\"nofollow\">annotation interfaces</a>. Although normally those instances are created by using the annotations in source code (and subsequently using <code class=\"notranslate\">class.getAnnotations()</code>, often in framework code) there are some use cases where the annotation instances are created by a framework - in particular this is the case for the OSGi Metatype Service (see <a href=\"https://osgi.org/specification/osgi.cmpn/7.0.0/service.metatype.html#d0e17824\" rel=\"nofollow\">https://osgi.org/specification/osgi.cmpn/7.0.0/service.metatype.html#d0e17824</a> for details). For this use case,  a mock for an annotation interface should be automatically set up to return the annotation-defined default values.</p>\n<p dir=\"auto\">The following JUnit Tests illustrates what is needed:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public @interface AnnotationInterface {\n    String strAttWithDefault() default &quot;default&quot;;\n    String strAttWithoutDefault();\n    String[] strArrAtt() default { &quot;default1&quot;, &quot;default2&quot; };\n    int intAtt() default 1;\n    long longAtt() default 2L;\n}\n\n@Mock\nAnnotationInterface mockedAnnotationInterface;\n\n@Test\npublic void shouldMockDefaultValuesFromAnnoationInterface() throws Exception {\n    // no further action should be needed to have the default values returned\n    assertEquals(&quot;default&quot;, mockedAnnotationInterface.strAttWithDefault());\n    assertNull(mockedAnnotationInterface.strAttWithoutDefault());\n    assertArrayEquals(new String[] { &quot;default1&quot;, &quot;default2&quot; }, mockedAnnotationInterface.strArrAtt());\n    assertArrayEquals(new String[] { &quot;default1&quot;, &quot;default2&quot; }, mockedAnnotationInterface.strArrAtt());\n    assertEquals(1, mockedAnnotationInterface.intAtt());\n    assertEquals(2L, mockedAnnotationInterface.longAtt());\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">public @interface AnnotationInterface {\n    String strAttWithDefault() default \"default\";\n    String strAttWithoutDefault();\n    String[] strArrAtt() default { \"default1\", \"default2\" };\n    int intAtt() default 1;\n    long longAtt() default 2L;\n}\n\n@Mock\nAnnotationInterface mockedAnnotationInterface;\n\n@Test\npublic void shouldMockDefaultValuesFromAnnoationInterface() throws Exception {\n    // no further action should be needed to have the default values returned\n    assertEquals(\"default\", mockedAnnotationInterface.strAttWithDefault());\n    assertNull(mockedAnnotationInterface.strAttWithoutDefault());\n    assertArrayEquals(new String[] { \"default1\", \"default2\" }, mockedAnnotationInterface.strArrAtt());\n    assertArrayEquals(new String[] { \"default1\", \"default2\" }, mockedAnnotationInterface.strArrAtt());\n    assertEquals(1, mockedAnnotationInterface.intAtt());\n    assertEquals(2L, mockedAnnotationInterface.longAtt());\n}\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/1900",
                "createdAt": "2020-04-07T00:10:42Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "framework integrations"
                      }
                    },
                    {
                      "node": {
                        "name": "injection"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix Pattern matcher not matching to subregion",
        "url": "https://github.com/mockito/mockito/pull/1914",
        "resourcePath": "/mockito/mockito/pull/1914",
        "createdAt": "2020-04-20T13:58:06Z",
        "number": 1914,
        "mergeCommit": {
          "oid": "c6f23366002abcfb4e0b7ab58891c75d0e23260a",
          "message": "Fixes #1905 : Fix Pattern matcher not matching to subregion (#1914)\n\nIssue #1905 talked about a particular pattern using Java's Pattern that\r\ncauses Mockito to not properly match the argument (provided with an\r\ninvocation) to the expected answer. It was later discovered that the\r\nPattern matcher matches to the entire region, not some subregion, by\r\nusing Java's Matcher.match(). This commit fixes that by using\r\nMatcher.find().",
          "commitUrl": "https://github.com/mockito/mockito/commit/c6f23366002abcfb4e0b7ab58891c75d0e23260a",
          "parents": {
            "nodes": [
              {
                "oid": "bbd19ea9108132778da1010513d1544f0c57e327",
                "message": "3.3.8 release (previous 3.3.7) + release notes updated by CI build 4429\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/matchers/Matches.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/matchers/MatchersTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDA2MDgxMzg3OjI3Y2E5MjlkODE2YjdlNzAzOTA4NzRjNDQ2MThiYWNhYjA1MjFiOWE=",
                "url": "https://github.com/mockito/mockito/pull/1914/commits/27ca929d816b7e70390874c44618bacab0521b9a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1905,
                "url": "https://github.com/mockito/mockito/issues/1905",
                "title": "ArgumentMatchers.matches not working",
                "bodyHTML": "<ul dir=\"auto\">\n<li>Ver. mockito-core:3.3.3</li>\n<li>Java Pattern and java Matcher</li>\n</ul>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Pattern pat = Pattern.compile(&quot;^zman-server-&quot;);\nMatcher mat = pat.matcher(&quot;zman-server-store.properties&quot;);\nmat.find() // return true\"><pre class=\"notranslate\"><span class=\"pl-smi\">Pattern</span> <span class=\"pl-s1\">pat</span> = <span class=\"pl-smi\">Pattern</span>.<span class=\"pl-en\">compile</span>(<span class=\"pl-s\">\"^zman-server-\"</span>);\n<span class=\"pl-smi\">Matcher</span> <span class=\"pl-s1\">mat</span> = <span class=\"pl-s1\">pat</span>.<span class=\"pl-en\">matcher</span>(<span class=\"pl-s\">\"zman-server-store.properties\"</span>);\n<span class=\"pl-s1\">mat</span>.<span class=\"pl-en\">find</span>() <span class=\"pl-c\">// return true</span></pre></div>\n<ul dir=\"auto\">\n<li>Mockito matcher not wrking:</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"when(streamer.load( matches(pat))).thenReturn(stream);\n\nOutput:\n- this invocation of 'load' method:\n    streamer.load(\n    &quot;zman-server-store.properties&quot;\n);\n - has following stubbing(s) with different arguments:\n    1. streamer.load(&quot;&quot;);\n\"><pre class=\"notranslate\"><code class=\"notranslate\">when(streamer.load( matches(pat))).thenReturn(stream);\n\nOutput:\n- this invocation of 'load' method:\n    streamer.load(\n    \"zman-server-store.properties\"\n);\n - has following stubbing(s) with different arguments:\n    1. streamer.load(\"\");\n\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/1905",
                "createdAt": "2020-04-11T19:03:58Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #1898 : Return mock name from toString method for deep stub mocks",
        "url": "https://github.com/mockito/mockito/pull/1942",
        "resourcePath": "/mockito/mockito/pull/1942",
        "createdAt": "2020-05-31T00:29:41Z",
        "number": 1942,
        "mergeCommit": {
          "oid": "3c10616de9284f13e7f76604dc0d9ecc50ab9877",
          "message": "Fixes #1898 : Return mock name from toString method for deep stub mocks (#1942)",
          "commitUrl": "https://github.com/mockito/mockito/commit/3c10616de9284f13e7f76604dc0d9ecc50ab9877",
          "parents": {
            "nodes": [
              {
                "oid": "662017026f1cb0a50bc28cb32e4b5806dfbdb552",
                "message": "[checkstyle] Switch to new DTD (#1940)\n\nThe location for the checkstyle DTD has moved."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/stubbing/DeepStubbingTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDI1NTQxMjEyOjJlOTgzOTIyMDYzNmEzYWY0NmMwMDhjZjlhNDE5MjI0MTg2ZTQxZDY=",
                "url": "https://github.com/mockito/mockito/pull/1942/commits/2e9839220636a3af46c008cf9a419224186e41d6"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1898,
                "url": "https://github.com/mockito/mockito/issues/1898",
                "title": "RETURNS_DEEP_STUBS override a mock's toString to `null`",
                "bodyHTML": "<p dir=\"auto\">This example describes the issue:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  @Test\n  public void mocksWithDeepStubsReturnNameOnToString() {\n    Object proudMock = Mockito.mock(\n        Object.class,\n        Mockito.withSettings()\n            .name(&quot;I'm a mock!&quot;)\n            .defaultAnswer(Mockito.RETURNS_DEEP_STUBS));\n\n    // fails, toString() returns null\n    assertThat(proudMock.toString()).isEqualTo(&quot;I'm a mock!&quot;);\n  }\"><pre class=\"notranslate\"><code class=\"notranslate\">  @Test\n  public void mocksWithDeepStubsReturnNameOnToString() {\n    Object proudMock = Mockito.mock(\n        Object.class,\n        Mockito.withSettings()\n            .name(\"I'm a mock!\")\n            .defaultAnswer(Mockito.RETURNS_DEEP_STUBS));\n\n    // fails, toString() returns null\n    assertThat(proudMock.toString()).isEqualTo(\"I'm a mock!\");\n  }\n</code></pre></div>\n<p dir=\"auto\">I'm experiencing this on 2.26.0, (looking at <a href=\"https://github.com/mockito/mockito/blame/release/3.x/src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java\">ReturnsDeepStubs</a> looks like it hasn't changed much since then).</p>\n<p dir=\"auto\">I think toString should still return the mock's name, right now it returns a <code class=\"notranslate\">null</code>.</p>",
                "resourcePath": "/mockito/mockito/issues/1898",
                "createdAt": "2020-04-01T22:04:43Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Mockito #1013: Defines and implements API for static mocking.",
        "url": "https://github.com/mockito/mockito/pull/1955",
        "resourcePath": "/mockito/mockito/pull/1955",
        "createdAt": "2020-06-19T19:46:05Z",
        "number": 1955,
        "mergeCommit": {
          "oid": "573bf0df389964d7fdeb4de486882d4599b8033c",
          "message": "[ci maven-central-release] Include ability for static mocks\n\nMockito #1013: Defines and implements API for static mocking.",
          "commitUrl": "https://github.com/mockito/mockito/commit/573bf0df389964d7fdeb4de486882d4599b8033c",
          "parents": {
            "nodes": [
              {
                "oid": "87aacaeca72f99941323d7d5d981cde333177b23",
                "message": "Document using `@Mock` with method parameters (#1961)\n\nAlthough we've called it out in the [JUnit extension], we should also\r\nmake sure it's clear in the core documentation to make it more visible.\r\n\r\nWe can fully-quality the `@Test` annotation to make clear that it has to\r\nbe with JUnit 5.\r\n\r\nCloses #1960.\r\n\r\n[JUnit extension]: https://javadoc.io/doc/org.mockito/mockito-junit-jupiter/latest/org/mockito/junit/jupiter/MockitoExtension.html"
              },
              {
                "oid": "bdd2b10ed5b02397614324d31449d8a58f03cf72",
                "message": "Update src/main/java/org/mockito/Captor.java\n\nCo-authored-by: Tim van der Lippe <TimvdLippe@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/bugs/FinalHashCodeAndEqualsRaiseNPEInInitMocksTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/bugs/GenericsMockitoAnnotationsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/bugs/creation/ConstructorInvokingMethodShouldNotRaiseExceptionTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/bugs/injection/ParentTestMockInjectionTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitoutil/TestBase.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/errorprone/src/main/java/org/mockito/errorprone/bugpatterns/MockitoAnyClassWithPrimitiveType.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/StaticMockTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/MockitoExtension.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "version.properties"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDM3MjY5MjQ3OmJkZDJiMTBlZDViMDIzOTc2MTQzMjRkMzE0NDlkOGE1OGYwM2NmNzI=",
                "url": "https://github.com/mockito/mockito/pull/1955/commits/bdd2b10ed5b02397614324d31449d8a58f03cf72"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1013,
                "url": "https://github.com/mockito/mockito/issues/1013",
                "title": "Enable mocking static methods in Mockito",
                "bodyHTML": "<h1 dir=\"auto\">Static methods mocking with Mockito</h1>\n<p dir=\"auto\">This is a placeholder ticket for enabling mocking static methods in Mockito. Example action items that are totally negotiable and can ran in parallel. We're looking for someone who can lead this effort.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Research + discuss whether it is a good idea to enable static methods mocking in Mockito. The theory is that it is useful for legacy code, which is most code in the world.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Research on how other mocking frameworks do that and whether it is considered useful feature for their users.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Design and present for discussion an API for static mocking (slightly relevant ticket: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"177898180\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/643\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/643/hovercard\" href=\"https://github.com/mockito/mockito/issues/643\">#643</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Work with <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/raphw/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/raphw\">@raphw</a> / ByteBuddy to come up with hacky prototype (the hackier, the better!)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Mold the prototype with the API, remove enough rough edges so that the feature is good enough for incubating rollout</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> SHIP IT!</li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/1013",
                "createdAt": "2017-03-31T04:02:25Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "android"
                      }
                    },
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    },
                    {
                      "node": {
                        "name": "feedback-needed"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Document using `@Mock` with method parameters",
        "url": "https://github.com/mockito/mockito/pull/1961",
        "resourcePath": "/mockito/mockito/pull/1961",
        "createdAt": "2020-06-29T07:56:15Z",
        "number": 1961,
        "mergeCommit": {
          "oid": "87aacaeca72f99941323d7d5d981cde333177b23",
          "message": "Document using `@Mock` with method parameters (#1961)\n\nAlthough we've called it out in the [JUnit extension], we should also\r\nmake sure it's clear in the core documentation to make it more visible.\r\n\r\nWe can fully-quality the `@Test` annotation to make clear that it has to\r\nbe with JUnit 5.\r\n\r\nCloses #1960.\r\n\r\n[JUnit extension]: https://javadoc.io/doc/org.mockito/mockito-junit-jupiter/latest/org/mockito/junit/jupiter/MockitoExtension.html",
          "commitUrl": "https://github.com/mockito/mockito/commit/87aacaeca72f99941323d7d5d981cde333177b23",
          "parents": {
            "nodes": [
              {
                "oid": "0501e02994959c997dd0a5bdafc6288ae1e487ac",
                "message": "Update errorprone gradle plugin to v1.2.1 (#1958)\n\nsee https://github.com/tbroyer/gradle-errorprone-plugin/releases for details"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/Mockito.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDQxMjY2NDY3Ojg3YmU0YjE0MTMzZmVjYmI4NWM4YWJjMWNlYzdiZjFhN2Q1ZDljZjg=",
                "url": "https://github.com/mockito/mockito/pull/1961/commits/87be4b14133fecbb85c8abc1cec7bf1a7d5d9cf8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1960,
                "url": "https://github.com/mockito/mockito/issues/1960",
                "title": "Documentation: `@Mock` on method parameters",
                "bodyHTML": "<p dir=\"auto\">While writing <a href=\"https://www.jvt.me/posts/2020/06/27/mockito-mock-parameter/\" rel=\"nofollow\">an article about using <code class=\"notranslate\">@Mock</code> as a method parameter</a>, I noticed that the <a href=\"https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#mock_annotation\" rel=\"nofollow\">JavaDoc for Mockito</a> doesn't mention the ability to use <code class=\"notranslate\">@Mock</code> as a parameter to a test method.</p>\n<p dir=\"auto\">How would be best to add that as a PR, given it's dependent on the test runner?</p>\n<p dir=\"auto\">I was thinking something like:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" * &lt;h3 id=&quot;9&quot;&gt;9. &lt;a class=&quot;meaningful_link&quot; href=&quot;#mock_annotation&quot; name=&quot;mock_annotation&quot;&gt;Shorthand for mocks creation - &lt;code&gt;&amp;#064;Mock&lt;/code&gt; annotation&lt;/a&gt;&lt;/h3&gt;\n *\n * &lt;ul&gt;\n * &lt;li&gt;Minimizes repetitive mock creation code.&lt;/li&gt;\n * &lt;li&gt;Makes the test class more readable.&lt;/li&gt;\n * &lt;li&gt;Makes the verification error easier to read because the &lt;b&gt;field name&lt;/b&gt;\n * is used to identify the mock.&lt;/li&gt;\n * &lt;/ul&gt;\n *\n * &lt;pre class=&quot;code&quot;&gt;&lt;code class=&quot;java&quot;&gt;\n *   public class ArticleManagerTest {\n *\n *       &amp;#064;Mock private ArticleCalculator calculator;\n *       &amp;#064;Mock private ArticleDatabase database;\n *       &amp;#064;Mock private UserProvider userProvider;\n *\n *       private ArticleManager manager;\n *\n *       @Test\n *       void testSomething(@Mock ArticleDatabase database) {\n * &lt;/code&gt;&lt;/pre&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\"> * &lt;h3 id=\"9\"&gt;9. &lt;a class=\"meaningful_link\" href=\"#mock_annotation\" name=\"mock_annotation\"&gt;Shorthand for mocks creation - &lt;code&gt;&amp;#064;Mock&lt;/code&gt; annotation&lt;/a&gt;&lt;/h3&gt;\n *\n * &lt;ul&gt;\n * &lt;li&gt;Minimizes repetitive mock creation code.&lt;/li&gt;\n * &lt;li&gt;Makes the test class more readable.&lt;/li&gt;\n * &lt;li&gt;Makes the verification error easier to read because the &lt;b&gt;field name&lt;/b&gt;\n * is used to identify the mock.&lt;/li&gt;\n * &lt;/ul&gt;\n *\n * &lt;pre class=\"code\"&gt;&lt;code class=\"java\"&gt;\n *   public class ArticleManagerTest {\n *\n *       &amp;#064;Mock private ArticleCalculator calculator;\n *       &amp;#064;Mock private ArticleDatabase database;\n *       &amp;#064;Mock private UserProvider userProvider;\n *\n *       private ArticleManager manager;\n *\n *       @Test\n *       void testSomething(@Mock ArticleDatabase database) {\n * &lt;/code&gt;&lt;/pre&gt;\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/1960",
                "createdAt": "2020-06-28T21:27:47Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "update dependency to byte buddy version 1.10.13",
        "url": "https://github.com/mockito/mockito/pull/1973",
        "resourcePath": "/mockito/mockito/pull/1973",
        "createdAt": "2020-07-15T10:50:01Z",
        "number": 1973,
        "mergeCommit": {
          "oid": "eda22b7c8b4e2d6611d87f3c8f72f18c51bb2ed8",
          "message": "Update byte buddy to 1.10.13 (#1973)\n\nFixes #1972\r\n\r\nCo-authored-by: Michael Kroll <michael.kroll@t-systems.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/eda22b7c8b4e2d6611d87f3c8f72f18c51bb2ed8",
          "parents": {
            "nodes": [
              {
                "oid": "05b39bfc5e4558f4c1c6853d5b454f534bdfefe0",
                "message": "3.4.0 release (previous 3.3.12) + release notes updated by CI build 4577\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/dependencies.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDQ5NDAyMzIxOjEyODQ4YWNmNjY0MDc0NjIzOGI3ZjNmYWQwNThiOWViNjcwZWU3NTU=",
                "url": "https://github.com/mockito/mockito/pull/1973/commits/12848acf6640746238b7f3fad058b9eb670ee755"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1972,
                "url": "https://github.com/mockito/mockito/issues/1972",
                "title": "Update dependency to byte buddy version 1.10.13",
                "bodyHTML": "<p dir=\"auto\"><a href=\"https://github.com/mockito/mockito/blob/release/3.x/gradle/dependencies.gradle#L7\">https://github.com/mockito/mockito/blob/release/3.x/gradle/dependencies.gradle#L7</a></p>\n<p dir=\"auto\">1.10.13 is available: <a href=\"https://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.10.13\">https://github.com/raphw/byte-buddy/releases/tag/byte-buddy-1.10.13</a></p>",
                "resourcePath": "/mockito/mockito/issues/1972",
                "createdAt": "2020-07-15T10:38:43Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix Javadoc invalid syntax",
        "url": "https://github.com/mockito/mockito/pull/1978",
        "resourcePath": "/mockito/mockito/pull/1978",
        "createdAt": "2020-07-17T11:24:57Z",
        "number": 1978,
        "mergeCommit": {
          "oid": "4ebf513eb649ec5d1452fcce62ae5c32f2a44d96",
          "message": "Fix invalid Javadoc syntax (#1978)\n\nFixes #1977\r\n\r\n[ci maven-central-release]",
          "commitUrl": "https://github.com/mockito/mockito/commit/4ebf513eb649ec5d1452fcce62ae5c32f2a44d96",
          "parents": {
            "nodes": [
              {
                "oid": "6635deec58a7931745874d5d8c6034a7375fa15a",
                "message": "3.4.2 release (previous 3.4.1) + release notes updated by CI build 4597\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/Mockito.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDUxMDUwNTg4Ojk2N2E5NGNhODJjOTQyOTkyMzcwMmM0NjNkZDQ3ODc0MTJiNTliOTI=",
                "url": "https://github.com/mockito/mockito/pull/1978/commits/967a94ca82c9429923702c463dd4787412b59b92"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1977,
                "url": "https://github.com/mockito/mockito/issues/1977",
                "title": "Broken documentation",
                "bodyHTML": "<p dir=\"auto\">Documentation generated from Javadoc on Mockito class is broken.<br>\nEverything after Java annotation example in section 9 <a href=\"https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#9\" rel=\"nofollow\">https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#9</a> is not displayed.</p>\n<p dir=\"auto\">The problem is in wrongly used @ sign in example, it should be escaped to html entity.</p>\n<p dir=\"auto\">Bug was introduced in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"647199440\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1961\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/1961/hovercard\" href=\"https://github.com/mockito/mockito/pull/1961\">#1961</a></p>",
                "resourcePath": "/mockito/mockito/issues/1977",
                "createdAt": "2020-07-17T11:24:22Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #1985 : Update README to refer the latest documentation",
        "url": "https://github.com/mockito/mockito/pull/1986",
        "resourcePath": "/mockito/mockito/pull/1986",
        "createdAt": "2020-07-20T12:46:13Z",
        "number": 1986,
        "mergeCommit": {
          "oid": "0c56b3a8da97fa5ccfeef2adaa0a2314db3d6bd0",
          "message": "Fixes #1985 : update README to refer the latest documentation (#1986)",
          "commitUrl": "https://github.com/mockito/mockito/commit/0c56b3a8da97fa5ccfeef2adaa0a2314db3d6bd0",
          "parents": {
            "nodes": [
              {
                "oid": "c53f9b39243ac563cd40c774358fb0f7d4f2da83",
                "message": "3.4.5 release (previous 3.4.4) + release notes updated by CI build 4647\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "README.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDUzNDEzNDkzOjdkZDJjMmE5MGZjOTdlYjBlNmQwY2FkMjdmNDJmMDYzMGZjNzA2MDQ=",
                "url": "https://github.com/mockito/mockito/pull/1986/commits/7dd2c2a90fc97eb0e6d0cad27f42f0630fc70604"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1985,
                "url": "https://github.com/mockito/mockito/issues/1985",
                "title": "README should refer the latest available documentation",
                "bodyHTML": "<p dir=\"auto\"><strong>Actual:</strong><br>\nREADME contains link <code class=\"notranslate\">latest documentation</code><br>\n<a href=\"http://javadoc.io/page/org.mockito/mockito-core/2/org/mockito/Mockito.html\" rel=\"nofollow\">http://javadoc.io/page/org.mockito/mockito-core/2/org/mockito/Mockito.html</a><br>\nwhich redirects to<br>\n<a href=\"https://javadoc.io/static/org.mockito/mockito-core/2.9.0/org/mockito/Mockito.html\" rel=\"nofollow\">https://javadoc.io/static/org.mockito/mockito-core/2.9.0/org/mockito/Mockito.html</a><br>\n(Note: version is <code class=\"notranslate\">2.9.0</code>)</p>\n<p dir=\"auto\"><strong>Expected:</strong><br>\nThe link <code class=\"notranslate\">latest documentation</code> should point to the latest available documentation<br>\n<a href=\"http://javadoc.io/page/org.mockito/mockito-core/3/org/mockito/Mockito.html\" rel=\"nofollow\">http://javadoc.io/page/org.mockito/mockito-core/3/org/mockito/Mockito.html</a><br>\nwhich redirects to<br>\n<a href=\"https://javadoc.io/static/org.mockito/mockito-core/3.4.4/org/mockito/Mockito.html\" rel=\"nofollow\">https://javadoc.io/static/org.mockito/mockito-core/3.4.4/org/mockito/Mockito.html</a><br>\nat the current moment (Note: version is <code class=\"notranslate\">3.4.4</code>).</p>",
                "resourcePath": "/mockito/mockito/issues/1985",
                "createdAt": "2020-07-20T12:42:32Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Do not pass static mocks to regular listener callback.",
        "url": "https://github.com/mockito/mockito/pull/1989",
        "resourcePath": "/mockito/mockito/pull/1989",
        "createdAt": "2020-07-28T08:12:05Z",
        "number": 1989,
        "mergeCommit": {
          "oid": "4767db122f95e5302ad6a60a6efaa69f9d7e6cb1",
          "message": "[ci maven-central-release] Merge pull request #1989 from mockito/listener-fix\n\nDo not pass static mocks to regular listener callback.",
          "commitUrl": "https://github.com/mockito/mockito/commit/4767db122f95e5302ad6a60a6efaa69f9d7e6cb1",
          "parents": {
            "nodes": [
              {
                "oid": "0c56b3a8da97fa5ccfeef2adaa0a2314db3d6bd0",
                "message": "Fixes #1985 : update README to refer the latest documentation (#1986)"
              },
              {
                "oid": "724619b544096a5bdf488053865f5cccdba2fda1",
                "message": "Does not include static mocks in regular listener logic as it might distort existing mock collectors that do not expect scoped mocks. Fixes #1988."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/invocation/InterceptedInvocation.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/progress/MockingProgress.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/progress/MockingProgressImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/listeners/MockCreationListener.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/StaticMockTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/StaticRuleTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/StaticRunnerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDU3NjMyNTE1OjcyNDYxOWI1NDQwOTZhNWJkZjQ4ODA1Mzg2NWY1Y2NjZGJhMmZkYTE=",
                "url": "https://github.com/mockito/mockito/pull/1989/commits/724619b544096a5bdf488053865f5cccdba2fda1"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1988,
                "url": "https://github.com/mockito/mockito/issues/1988",
                "title": "MockitoJUnitRunner causes NPE when using @Mock on MockedStatic fields",
                "bodyHTML": "<p dir=\"auto\">check that</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>\n<p dir=\"auto\"><strong>Versions:</strong></p>\n<ul dir=\"auto\">\n<li>mockito: 3.4.4</li>\n<li>junit: 4.12</li>\n<li>jdk: 1.8</li>\n<li>os: windows 10</li>\n</ul>\n<p dir=\"auto\"><strong>Example:</strong></p>\n<ol dir=\"auto\">\n<li><a href=\"https://github.com/Cybermite/mockito-static-npe-example/blob/bdd30465632b21c36ce7635929e7825c5878ee83/src/test/java/org/mockito/example/MockitoJUnitRunnerWithMockedStaticTest.java\">MockitoJUnitRunnerWithMockedStaticTest</a>\n<ul dir=\"auto\">\n<li>Reproduces the problem documented in this issue.</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/Cybermite/mockito-static-npe-example/blob/bdd30465632b21c36ce7635929e7825c5878ee83/src/test/java/org/mockito/example/MockitoOpenMocksMockedStaticTest.java\">MockitoOpenMocksMockedStaticTest</a>\n<ul dir=\"auto\">\n<li>Same tests but manually opens and closes the mocks (doesn't use the runner). Shows the tests are ran as expected.</li>\n</ul>\n</li>\n</ol>\n<p dir=\"auto\"><strong>Problem:</strong></p>\n<p dir=\"auto\">The <code class=\"notranslate\">MockitoJUnitRunner</code> is causing a <code class=\"notranslate\">NullPointerException</code> when the test class contains a <code class=\"notranslate\">@Mock</code> instance field with a type of <code class=\"notranslate\">MockedStatic</code>. This exception only occurs for tests that are ran after a prior test fails. If all the tests pass, there are no issues.</p>\n<p dir=\"auto\">Stack Trace (Test 1):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.AssertionError: intentional failure\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.mockito.example.MockitoJUnitRunnerWithMockedStaticTest.testName1(MockitoJUnitRunnerWithMockedStaticTest.java:40)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:54)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n\tat org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n\tat org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n\tat org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\n\norg.mockito.exceptions.misusing.NotAMockException: Argument passed to Mockito.mockingDetails() should be a mock, but is an instance of class java.lang.Class!\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$2.testFinished(DefaultInternalRunner.java:81)\n\tat org.junit.runner.notification.SynchronizedRunListener.testFinished(SynchronizedRunListener.java:56)\n\tat org.junit.runner.notification.RunNotifier$7.notifyListener(RunNotifier.java:190)\n\tat org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)\n\tat org.junit.runner.notification.RunNotifier.fireTestFinished(RunNotifier.java:187)\n\tat org.junit.internal.runners.model.EachTestNotifier.fireTestFinished(EachTestNotifier.java:38)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:331)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n\tat org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n\tat org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n\tat org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.AssertionError: intentional failure\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat org.mockito.example.MockitoJUnitRunnerWithMockedStaticTest.testName1(MockitoJUnitRunnerWithMockedStaticTest.java:40)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:54)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n\tat org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n\tat org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n\tat org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\n\norg.mockito.exceptions.misusing.NotAMockException: Argument passed to Mockito.mockingDetails() should be a mock, but is an instance of class java.lang.Class!\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$2.testFinished(DefaultInternalRunner.java:81)\n\tat org.junit.runner.notification.SynchronizedRunListener.testFinished(SynchronizedRunListener.java:56)\n\tat org.junit.runner.notification.RunNotifier$7.notifyListener(RunNotifier.java:190)\n\tat org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)\n\tat org.junit.runner.notification.RunNotifier.fireTestFinished(RunNotifier.java:187)\n\tat org.junit.internal.runners.model.EachTestNotifier.fireTestFinished(EachTestNotifier.java:38)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:331)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n\tat org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n\tat org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n\tat org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\n</code></pre></div>\n<p dir=\"auto\">Stack Trace (Test 2):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException\n\tat org.mockito.example.MockitoJUnitRunnerWithMockedStaticTest.testName2(MockitoJUnitRunnerWithMockedStaticTest.java:54)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:54)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n\tat org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n\tat org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n\tat org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.NullPointerException\n\tat org.mockito.example.MockitoJUnitRunnerWithMockedStaticTest.testName2(MockitoJUnitRunnerWithMockedStaticTest.java:54)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:54)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n\tat org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n\tat org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n\tat org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n\tat org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:538)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:760)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:460)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:206)\n</code></pre></div>\n<p dir=\"auto\"><strong>Investigation:</strong></p>\n<p dir=\"auto\">After some investigation, it appears the first test is failing twice (once in the test and once in the testFinished listener). This code:</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/mockito/mockito/blob/573bf0df389964d7fdeb4de486882d4599b8033c/src/main/java/org/mockito/internal/runners/DefaultInternalRunner.java#L75-L96\">mockito/src/main/java/org/mockito/internal/runners/DefaultInternalRunner.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 75 to 96\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/mockito/mockito/commit/573bf0df389964d7fdeb4de486882d4599b8033c\">573bf0d</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L75\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"75\"></td>\n          <td id=\"LC75\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">testFinished</span>(<span class=\"pl-smi\">Description</span> <span class=\"pl-s1\">description</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L76\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"76\"></td>\n          <td id=\"LC76\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Exception</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L77\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"77\"></td>\n          <td id=\"LC77\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">try</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L78\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"78\"></td>\n          <td id=\"LC78\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">mockitoTestListener</span> != <span class=\"pl-c1\">null</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L79\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"79\"></td>\n          <td id=\"LC79\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">framework</span>() </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L80\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"80\"></td>\n          <td id=\"LC80\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                     .<span class=\"pl-en\">removeListener</span>(<span class=\"pl-s1\">mockitoTestListener</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L81\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"81\"></td>\n          <td id=\"LC81\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-s1\">mockitoTestListener</span>.<span class=\"pl-en\">testFinished</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L82\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"82\"></td>\n          <td id=\"LC82\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                     <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DefaultTestFinishedEvent</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L83\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"83\"></td>\n          <td id=\"LC83\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                             <span class=\"pl-s1\">target</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L84\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"84\"></td>\n          <td id=\"LC84\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                             <span class=\"pl-s1\">description</span>.<span class=\"pl-en\">getMethodName</span>(), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L85\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"85\"></td>\n          <td id=\"LC85\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                             <span class=\"pl-s1\">failure</span>)); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L86\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"86\"></td>\n          <td id=\"LC86\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-s1\">mockitoTestListener</span> = <span class=\"pl-c1\">null</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L87\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"87\"></td>\n          <td id=\"LC87\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L88\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"88\"></td>\n          <td id=\"LC88\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">validateMockitoUsage</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L89\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"89\"></td>\n          <td id=\"LC89\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Throwable</span> <span class=\"pl-s1\">t</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L90\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"90\"></td>\n          <td id=\"LC90\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\">// In order to produce clean exception to the user we</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L91\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"91\"></td>\n          <td id=\"LC91\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\">// need to fire test failure with the right description</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L92\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"92\"></td>\n          <td id=\"LC92\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\">// Otherwise JUnit framework will report failure with</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L93\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"93\"></td>\n          <td id=\"LC93\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\">// some generic test name</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L94\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"94\"></td>\n          <td id=\"LC94\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">notifier</span>.<span class=\"pl-en\">fireTestFailure</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Failure</span>(<span class=\"pl-s1\">description</span>, <span class=\"pl-s1\">t</span>)); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L95\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"95\"></td>\n          <td id=\"LC95\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L96\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"96\"></td>\n          <td id=\"LC96\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Line 81 is where it fails the second time. If we navigate down the call hierarchy, it appears it fails because the static mock has already been cleaned up so the framework doesn't think it's a mock and fails with a <code class=\"notranslate\">NotAMockException</code>.  Since it fails there, it doesn't set the listener to null which will in-turn result in the mocks not being initialized on the next test that's ran (hits line 51):</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/mockito/mockito/blob/573bf0df389964d7fdeb4de486882d4599b8033c/src/main/java/org/mockito/internal/runners/DefaultInternalRunner.java#L42-L59\">mockito/src/main/java/org/mockito/internal/runners/DefaultInternalRunner.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 42 to 59\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/mockito/mockito/commit/573bf0df389964d7fdeb4de486882d4599b8033c\">573bf0d</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L42\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"42\"></td>\n          <td id=\"LC42\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">evaluate</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">Throwable</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L43\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"43\"></td>\n          <td id=\"LC43\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-smi\">AutoCloseable</span> <span class=\"pl-s1\">closeable</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L44\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"44\"></td>\n          <td id=\"LC44\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">mockitoTestListener</span> == <span class=\"pl-c1\">null</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L45\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"45\"></td>\n          <td id=\"LC45\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\">// get new test listener and add it to the framework</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L46\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"46\"></td>\n          <td id=\"LC46\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">mockitoTestListener</span> = <span class=\"pl-s1\">listenerSupplier</span>.<span class=\"pl-en\">get</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L47\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"47\"></td>\n          <td id=\"LC47\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">framework</span>().<span class=\"pl-en\">addListener</span>(<span class=\"pl-s1\">mockitoTestListener</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L48\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"48\"></td>\n          <td id=\"LC48\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-c\">// init annotated mocks before tests</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L49\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"49\"></td>\n          <td id=\"LC49\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">closeable</span> = <span class=\"pl-smi\">MockitoAnnotations</span>.<span class=\"pl-en\">openMocks</span>(<span class=\"pl-s1\">target</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L50\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"50\"></td>\n          <td id=\"LC50\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } <span class=\"pl-k\">else</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L51\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"51\"></td>\n          <td id=\"LC51\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">closeable</span> = <span class=\"pl-c1\">null</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L52\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"52\"></td>\n          <td id=\"LC52\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L53\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"53\"></td>\n          <td id=\"LC53\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">try</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L54\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"54\"></td>\n          <td id=\"LC54\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-s1\">base</span>.<span class=\"pl-en\">evaluate</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L55\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"55\"></td>\n          <td id=\"LC55\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } <span class=\"pl-k\">finally</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L56\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"56\"></td>\n          <td id=\"LC56\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">closeable</span> != <span class=\"pl-c1\">null</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L57\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"57\"></td>\n          <td id=\"LC57\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-s1\">closeable</span>.<span class=\"pl-en\">close</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L58\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"58\"></td>\n          <td id=\"LC58\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L59\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"59\"></td>\n          <td id=\"LC59\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Since the mocks are not initialized for the second test, it ultimately causes the <code class=\"notranslate\">NullPointerException</code>.</p>\n<p dir=\"auto\">It's also causing the remaining tests after the first test failure to bounce back and forth between <code class=\"notranslate\">NullPointerException</code> and <code class=\"notranslate\">NotAMockException</code>. The reason for this appears to be because <a href=\"https://github.com/mockito/mockito/blob/573bf0df389964d7fdeb4de486882d4599b8033c/src/main/java/org/mockito/internal/runners/DefaultInternalRunner.java#L67\">this failure</a> object never gets reset after it's processed so it keeps restarting the chain of throwing the two exceptions back and forth.</p>\n<p dir=\"auto\">Also, I did include a sample test that manually opens and closes the mocks (doesn't use MockitoJUnitRunner) and everything is working as expected. Using the try-with-resource works fine as well.</p>\n<p dir=\"auto\">I did investigate further and noticed something related to this might have been addressed in <a href=\"https://github.com/mockito/mockito/pull/1968/files?file-filters%5B%5D=.java#diff-d24b5a756bdb953f5effcddac2b17b72R42\">this PR</a>. It only updated the findStubbings method to skip the static mocks, though. Was the AllInvocationsFinder.find(...) method intentional left out of that or just an oversight?</p>",
                "resourcePath": "/mockito/mockito/issues/1988",
                "createdAt": "2020-07-25T09:08:58Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Update objenesis to 3.1",
        "url": "https://github.com/mockito/mockito/pull/1998",
        "resourcePath": "/mockito/mockito/pull/1998",
        "createdAt": "2020-08-09T09:50:17Z",
        "number": 1998,
        "mergeCommit": {
          "oid": "32684d1acd6df8f1d143827a16ef5de5e4dc4d6a",
          "message": "Update objenesis to 3.1 (#1998)\n\nRelease notes: http://objenesis.org/notes.html",
          "commitUrl": "https://github.com/mockito/mockito/commit/32684d1acd6df8f1d143827a16ef5de5e4dc4d6a",
          "parents": {
            "nodes": [
              {
                "oid": "b87fad310bf59b94035028dc478089ded2a9198a",
                "message": "3.4.7 release (previous 3.4.6) + release notes updated by CI build 4667\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/dependencies.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/mockito-core/osgi.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDY1MTMxMTI5OmNkMjc4MTYxYjM1NGNhZGMxZjA4MzE1MGJjOGNkOGI1MDMwM2NiZGE=",
                "url": "https://github.com/mockito/mockito/pull/1998/commits/cd278161b354cadc1f083150bc8cd8b50303cbda"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1992,
                "url": "https://github.com/mockito/mockito/issues/1992",
                "title": "Update to org.objenesis 3.x",
                "bodyHTML": "<p dir=\"auto\">Hi all,</p>\n<p dir=\"auto\">we are slowly updating our product to Java 11; we've managed to move to Java 11 runtime, now we are trying to also compile with Java 11.</p>\n<p dir=\"auto\">We ran into a problem with <code class=\"notranslate\">org.easymock</code> (it doesn't work with Java 11 compiled classes, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"332234784\" data-permission-text=\"Title is private\" data-url=\"https://github.com/easymock/easymock/issues/218\" data-hovercard-type=\"issue\" data-hovercard-url=\"/easymock/easymock/issues/218/hovercard\" href=\"https://github.com/easymock/easymock/issues/218\">easymock/easymock#218</a>). The problem is resolved in 4.x versions.</p>\n<p dir=\"auto\">Unfortunately, 4.x versions of <code class=\"notranslate\">org.easymock</code> run only with <code class=\"notranslate\">org.objenesis</code> 3.x, which <code class=\"notranslate\">mockito</code> so far does not accept (upper bound for <code class=\"notranslate\">org.objenesis</code> is 2.6).</p>\n<p dir=\"auto\">Are there plans to update <code class=\"notranslate\">mockito</code> to run with <code class=\"notranslate\">org.objenesis</code> and if so are there known timelines?</p>\n<p dir=\"auto\">Some more background:</p>\n<p dir=\"auto\">We essentially wished to update to latest <code class=\"notranslate\">mockito</code> and <code class=\"notranslate\">easymock</code> earlier (during the Java 11 runtime move), but were unable to do so due to conflicting <code class=\"notranslate\">org.objenesis</code> requirements. If we want to compile with Java 11 however, we are made to choose between  <code class=\"notranslate\">easymock</code> or <code class=\"notranslate\">mockito</code>, or waiting. We would prefer to wait, if a <code class=\"notranslate\">mockito</code> update that runs with <code class=\"notranslate\">org.objenesis</code> 3.x would be available soon.</p>\n<p dir=\"auto\">Sorry if this should be an e-mail message and not an issue in the tracker, or if this is a duplicate (I didn't find much about <code class=\"notranslate\">org.objenesis</code> in the issue list).</p>\n<p dir=\"auto\">Best regards and thanks,<br>\nSimeon</p>",
                "resourcePath": "/mockito/mockito/issues/1992",
                "createdAt": "2020-08-07T14:57:09Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Initializes spies within constructors of a mock instance for the inline mock maker.",
        "url": "https://github.com/mockito/mockito/pull/2002",
        "resourcePath": "/mockito/mockito/pull/2002",
        "createdAt": "2020-08-13T18:58:58Z",
        "number": 2002,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/MockUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/plugins/MockMaker.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/MockitoTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/configuration/MockAnnotationProcessorTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMakerTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/ConstructionMockRuleTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/ConstructionMockTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/StaticMockRuleTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junitJupiterInlineMockMakerExtensionTest/src/test/java/org/mockitousage/NoExtendsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "version.properties"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDY3NTc2ODA2OmNkYzRmYTRiZGRhZmY5YzgwYTk0Y2JjYjhlOGYzNGE2YjgyZjZkNGY=",
                "url": "https://github.com/mockito/mockito/pull/2002/commits/cdc4fa4bddaff9c80a94cbcb8e8f34a6b82f6d4f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1782,
                "url": "https://github.com/mockito/mockito/issues/1782",
                "title": "Spying on ArrayList generates Illegal reflective access warning with Java 11",
                "bodyHTML": "<p dir=\"auto\">Spying on <code class=\"notranslate\">ArrayList</code> generates Illegal reflective access warning with Java 11 (12):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"WARNING: Illegal reflective access by org.mockito.internal.util.reflection.AccessibilityChanger (file:/home/foobar/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.0.8/.../mockito-core-3.0.8.jar)\nto field java.util.ArrayList.elementData\nWARNING: Illegal reflective access by org.mockito.internal.util.reflection.AccessibilityChanger (file:/home/foobar/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.0.8/.../mockito-core-3.0.8.jar)\n to field java.util.ArrayList.size\nWARNING: Illegal reflective access by org.mockito.internal.util.reflection.AccessibilityChanger (file:/home/foobar/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.0.8/.../mockito-core-3.0.8.jar)\n to field java.util.AbstractList.modCount\"><pre class=\"notranslate\"><code class=\"notranslate\">WARNING: Illegal reflective access by org.mockito.internal.util.reflection.AccessibilityChanger (file:/home/foobar/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.0.8/.../mockito-core-3.0.8.jar)\nto field java.util.ArrayList.elementData\nWARNING: Illegal reflective access by org.mockito.internal.util.reflection.AccessibilityChanger (file:/home/foobar/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.0.8/.../mockito-core-3.0.8.jar)\n to field java.util.ArrayList.size\nWARNING: Illegal reflective access by org.mockito.internal.util.reflection.AccessibilityChanger (file:/home/foobar/.gradle/caches/modules-2/files-2.1/org.mockito/mockito-core/3.0.8/.../mockito-core-3.0.8.jar)\n to field java.util.AbstractList.modCount\n</code></pre></div>\n<p dir=\"auto\">Sample code to reproduce the situation:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Test\n    public void shouldNotCallOriginalMethod() {\n        //given\n        List&lt;Integer&gt; spiedList = spy(new ArrayList&lt;&gt;());\n        willReturn(3).given(spiedList).get(0);\n        //when\n        Integer readValue = spiedList.get(0);\n        //then\n        assertThat(readValue).isEqualTo(3);\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    @Test\n    public void shouldNotCallOriginalMethod() {\n        //given\n        List&lt;Integer&gt; spiedList = spy(new ArrayList&lt;&gt;());\n        willReturn(3).given(spiedList).get(0);\n        //when\n        Integer readValue = spiedList.get(0);\n        //then\n        assertThat(readValue).isEqualTo(3);\n    }\n</code></pre></div>\n<p dir=\"auto\">Occurs with (at least):</p>\n<ul dir=\"auto\">\n<li>Mockito 3.0.0 and 3.0.8</li>\n<li>ByteBuddy 1.9.10 and 1.10.1</li>\n<li>Java 11 and 12 (modern versions)</li>\n</ul>\n<p dir=\"auto\">It's just a warning right now, but it could be disallowed one day, so maybe there is some other way to do that with ArrayList (and probably also some other classes from JDK).</p>",
                "resourcePath": "/mockito/mockito/issues/1782",
                "createdAt": "2019-09-24T20:23:20Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "java-11"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Revert \"Update objenesis to 3.1\"",
        "url": "https://github.com/mockito/mockito/pull/2009",
        "resourcePath": "/mockito/mockito/pull/2009",
        "createdAt": "2020-08-19T14:50:49Z",
        "number": 2009,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/dependencies.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/mockito-core/osgi.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDcwMjE3ODAwOjVmYTJhNzRmMmU0MTdiNGJjZjcyNjc2YjEzYjRmZGFkYjg0YzcwZjc=",
                "url": "https://github.com/mockito/mockito/pull/2009/commits/5fa2a74f2e417b4bcf72676b13b4fdadb84c70f7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2007,
                "url": "https://github.com/mockito/mockito/issues/2007",
                "title": "Android instrumentation test packaging fails for mockito-android 3.5.0 with minSdk < 26",
                "bodyHTML": "<p dir=\"auto\">We've upgraded from <code class=\"notranslate\">mockito-android:3.4.6</code> to <code class=\"notranslate\">mockito-android:3.5.0</code>. I'm attempting to package up my instrumented tests by running the <code class=\"notranslate\">assembleAndroidTest</code> gradle task. The task fails with the following errors:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/fb7959dc5bfc8ebb26ad0660efa1929e/jetified-mockito-core-3.5.0.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\"><pre class=\"notranslate\"><code class=\"notranslate\">/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/fb7959dc5bfc8ebb26ad0660efa1929e/jetified-mockito-core-3.5.0.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n</code></pre></div>\n<p dir=\"auto\">and with root cause:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"com.android.tools.r8.utils.b: Error: /Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar:org/objenesis/instantiator/util/DefineClassHelper$Java8.class, java.lang.Class org.objenesis.instantiator.util.DefineClassHelper$Java8.defineClass(java.lang.String, byte[], int, int, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain), MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n        at com.android.tools.r8.utils.y0.a(:21)\n        at com.android.tools.r8.utils.O.a(:51)\n        ... 35 more\"><pre class=\"notranslate\"><code class=\"notranslate\">com.android.tools.r8.utils.b: Error: /Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar:org/objenesis/instantiator/util/DefineClassHelper$Java8.class, java.lang.Class org.objenesis.instantiator.util.DefineClassHelper$Java8.defineClass(java.lang.String, byte[], int, int, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain), MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n        at com.android.tools.r8.utils.y0.a(:21)\n        at com.android.tools.r8.utils.O.a(:51)\n        ... 35 more\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/2007",
                "createdAt": "2020-08-18T00:37:46Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "android"
                      }
                    },
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Only enable mocking of types right before instantiation to avoid circular interception of constructor creation.",
        "url": "https://github.com/mockito/mockito/pull/2017",
        "resourcePath": "/mockito/mockito/pull/2017",
        "createdAt": "2020-08-21T08:49:37Z",
        "number": 2017,
        "mergeCommit": {
          "oid": "a11a6915527841b672dbdf0a382ede9aa75d8778",
          "message": "[ci maven-central-release] Merge pull request #2017 from mockito/constructor-dispatch\n\nOnly enable mocking of types right before instantiation to avoid circular interception of constructor creation.",
          "commitUrl": "https://github.com/mockito/mockito/commit/a11a6915527841b672dbdf0a382ede9aa75d8778",
          "parents": {
            "nodes": [
              {
                "oid": "5cb5a665840a84fa90a6f9aee9a4f4b982007cb3",
                "message": "3.5.3 release (previous 3.5.2) + release notes updated by CI build 4723\n\n[ci skip-release]"
              },
              {
                "oid": "3d1405f1c431888b2641a003868ba5b9300aa611",
                "message": "Only enable mocking of types right before instantiation to avoid circular interception of constructor creation."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMaker.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/reflection/InstrumentationMemberAccessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/reflection/ModuleMemberAccessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/reflection/ReflectionMemberAccessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/plugins/MemberAccessor.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDcxNTAyNjg5OjNkMTQwNWYxYzQzMTg4OGIyNjQxYTAwMzg2OGJhNWI5MzAwYWE2MTE=",
                "url": "https://github.com/mockito/mockito/pull/2017/commits/3d1405f1c431888b2641a003868ba5b9300aa611"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2015,
                "url": "https://github.com/mockito/mockito/issues/2015",
                "title": "Issues mocking Java framework classes in Robolectric with mockito-inline",
                "bodyHTML": "<p dir=\"auto\">Hi Mockito folks,</p>\n<p dir=\"auto\">Currently it is not possible to mock a Java framework class (e.g. java.io.File) in Robolectric when mockito-inline is used. This issue has come up a bunch of times in Robolectric, mostly when Kotlin is used to write Robolectric tests.</p>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"579160684\" data-permission-text=\"Title is private\" data-url=\"https://github.com/robolectric/robolectric/issues/5522\" data-hovercard-type=\"issue\" data-hovercard-url=\"/robolectric/robolectric/issues/5522/hovercard\" href=\"https://github.com/robolectric/robolectric/issues/5522\">robolectric/robolectric#5522</a><br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"615304854\" data-permission-text=\"Title is private\" data-url=\"https://github.com/robolectric/robolectric/issues/5638\" data-hovercard-type=\"issue\" data-hovercard-url=\"/robolectric/robolectric/issues/5638/hovercard\" href=\"https://github.com/robolectric/robolectric/issues/5638\">robolectric/robolectric#5638</a><br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"682816249\" data-permission-text=\"Title is private\" data-url=\"https://github.com/robolectric/robolectric/issues/5865\" data-hovercard-type=\"issue\" data-hovercard-url=\"/robolectric/robolectric/issues/5865/hovercard\" href=\"https://github.com/robolectric/robolectric/issues/5865\">robolectric/robolectric#5865</a></p>\n<p dir=\"auto\">For instance, if a trivial tests is run with the Robolectric test runner with mockito-inline:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  @Test\n  public void file_getAbsolutePath_isMockable() throws Exception {\n    File file = mock(File.class);\n    doReturn(&quot;absolute/path&quot;).when(file).getAbsolutePath();\n    assertThat(file.getAbsolutePath()).isEqualTo(&quot;absolute/path&quot;);\n  }\"><pre class=\"notranslate\">  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">file_getAbsolutePath_isMockable</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">Exception</span> {\n    <span class=\"pl-smi\">File</span> <span class=\"pl-s1\">file</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">File</span>.<span class=\"pl-k\">class</span>);\n    <span class=\"pl-en\">doReturn</span>(<span class=\"pl-s\">\"absolute/path\"</span>).<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">file</span>).<span class=\"pl-en\">getAbsolutePath</span>();\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">file</span>.<span class=\"pl-en\">getAbsolutePath</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"absolute/path\"</span>);\n  }</pre></div>\n<p dir=\"auto\">An NPE will result:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException\n\tat org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.isConstructorMock(MockMethodDispatcher.java:41)\n\tat java.base/java.io.File.&lt;init&gt;(File.java)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:80)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:72)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/sun.net.www.protocol.jar.JarURLConnection.&lt;init&gt;(JarURLConnection.java:84)\n\tat java.base/sun.net.www.protocol.jar.Handler.openConnection(Handler.java:41)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/java.net.URLClassLoader.getResourceAsStream(URLClassLoader.java:327)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getClassBytesAsStreamPreferringLocalUrls(SandboxClassLoader.java:101)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getByteCode(SandboxClassLoader.java:172)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.maybeInstrumentClass(SandboxClassLoader.java:129)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.lambda$loadClass$0(SandboxClassLoader.java:115)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:53)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.loadClass(SandboxClassLoader.java:115)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\n\tat org.robolectric.Shadows.reset(Shadows.java:2298)\n\tat org.robolectric.android.internal.AndroidTestEnvironment.resetState(AndroidTestEnvironment.java:518)\n\tat org.robolectric.RobolectricTestRunner.lambda$finallyAfterTest$0(RobolectricTestRunner.java:349)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:75)\n\tat org.robolectric.RobolectricTestRunner.finallyAfterTest(RobolectricTestRunner.java:347)\n\tat org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:272)\n\tat org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:89)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.NullPointerException\n\tat org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.isConstructorMock(MockMethodDispatcher.java:41)\n\tat java.base/java.io.File.&lt;init&gt;(File.java)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:80)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:72)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/sun.net.www.protocol.jar.JarURLConnection.&lt;init&gt;(JarURLConnection.java:84)\n\tat java.base/sun.net.www.protocol.jar.Handler.openConnection(Handler.java:41)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/java.net.URLClassLoader.getResourceAsStream(URLClassLoader.java:327)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getClassBytesAsStreamPreferringLocalUrls(SandboxClassLoader.java:101)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getByteCode(SandboxClassLoader.java:172)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.maybeInstrumentClass(SandboxClassLoader.java:129)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.lambda$loadClass$0(SandboxClassLoader.java:115)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:53)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.loadClass(SandboxClassLoader.java:115)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\n\tat org.robolectric.Shadows.reset(Shadows.java:2298)\n\tat org.robolectric.android.internal.AndroidTestEnvironment.resetState(AndroidTestEnvironment.java:518)\n\tat org.robolectric.RobolectricTestRunner.lambda$finallyAfterTest$0(RobolectricTestRunner.java:349)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:75)\n\tat org.robolectric.RobolectricTestRunner.finallyAfterTest(RobolectricTestRunner.java:347)\n\tat org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:272)\n\tat org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:89)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n</code></pre></div>\n<p dir=\"auto\">Robolectric uses an instrumenting ClassLoader that transforms Android classes to use real implementations:<br>\n<a href=\"https://github.com/robolectric/robolectric/blob/master/sandbox/src/main/java/org/robolectric/internal/bytecode/SandboxClassLoader.java#L105\">https://github.com/robolectric/robolectric/blob/master/sandbox/src/main/java/org/robolectric/internal/bytecode/SandboxClassLoader.java#L105</a></p>\n<p dir=\"auto\">Here is a fork of Robolectric that has a test that captures the issue:<br>\n<a href=\"https://github.com/hoisie/robolectric/tree/mockito-inline-test\">https://github.com/hoisie/robolectric/tree/mockito-inline-test</a></p>\n<p dir=\"auto\">You can see the failure using the following command:<br>\n<code class=\"notranslate\">./gradlew  :integration_tests:mockito-experimental:test</code></p>\n<p dir=\"auto\">Any tips/help debugging would be greatly appreciated. It would be nice to figure out what Robolectric is doing to prevent this from working.</p>",
                "resourcePath": "/mockito/mockito/issues/2015",
                "createdAt": "2020-08-21T05:00:26Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Only enable mocking of types right before instantiation to avoid circular interception of constructor creation.",
        "url": "https://github.com/mockito/mockito/pull/2018",
        "resourcePath": "/mockito/mockito/pull/2018",
        "createdAt": "2020-08-21T08:49:37Z",
        "number": 2018,
        "mergeCommit": {
          "oid": "a11a6915527841b672dbdf0a382ede9aa75d8778",
          "message": "[ci maven-central-release] Merge pull request #2017 from mockito/constructor-dispatch\n\nOnly enable mocking of types right before instantiation to avoid circular interception of constructor creation.",
          "commitUrl": "https://github.com/mockito/mockito/commit/a11a6915527841b672dbdf0a382ede9aa75d8778",
          "parents": {
            "nodes": [
              {
                "oid": "5cb5a665840a84fa90a6f9aee9a4f4b982007cb3",
                "message": "3.5.3 release (previous 3.5.2) + release notes updated by CI build 4723\n\n[ci skip-release]"
              },
              {
                "oid": "3d1405f1c431888b2641a003868ba5b9300aa611",
                "message": "Only enable mocking of types right before instantiation to avoid circular interception of constructor creation."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineByteBuddyMockMaker.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/reflection/InstrumentationMemberAccessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/reflection/ModuleMemberAccessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/reflection/ReflectionMemberAccessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/plugins/MemberAccessor.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDcxNTAyNjkxOjNkMTQwNWYxYzQzMTg4OGIyNjQxYTAwMzg2OGJhNWI5MzAwYWE2MTE=",
                "url": "https://github.com/mockito/mockito/pull/2018/commits/3d1405f1c431888b2641a003868ba5b9300aa611"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2015,
                "url": "https://github.com/mockito/mockito/issues/2015",
                "title": "Issues mocking Java framework classes in Robolectric with mockito-inline",
                "bodyHTML": "<p dir=\"auto\">Hi Mockito folks,</p>\n<p dir=\"auto\">Currently it is not possible to mock a Java framework class (e.g. java.io.File) in Robolectric when mockito-inline is used. This issue has come up a bunch of times in Robolectric, mostly when Kotlin is used to write Robolectric tests.</p>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"579160684\" data-permission-text=\"Title is private\" data-url=\"https://github.com/robolectric/robolectric/issues/5522\" data-hovercard-type=\"issue\" data-hovercard-url=\"/robolectric/robolectric/issues/5522/hovercard\" href=\"https://github.com/robolectric/robolectric/issues/5522\">robolectric/robolectric#5522</a><br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"615304854\" data-permission-text=\"Title is private\" data-url=\"https://github.com/robolectric/robolectric/issues/5638\" data-hovercard-type=\"issue\" data-hovercard-url=\"/robolectric/robolectric/issues/5638/hovercard\" href=\"https://github.com/robolectric/robolectric/issues/5638\">robolectric/robolectric#5638</a><br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"682816249\" data-permission-text=\"Title is private\" data-url=\"https://github.com/robolectric/robolectric/issues/5865\" data-hovercard-type=\"issue\" data-hovercard-url=\"/robolectric/robolectric/issues/5865/hovercard\" href=\"https://github.com/robolectric/robolectric/issues/5865\">robolectric/robolectric#5865</a></p>\n<p dir=\"auto\">For instance, if a trivial tests is run with the Robolectric test runner with mockito-inline:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  @Test\n  public void file_getAbsolutePath_isMockable() throws Exception {\n    File file = mock(File.class);\n    doReturn(&quot;absolute/path&quot;).when(file).getAbsolutePath();\n    assertThat(file.getAbsolutePath()).isEqualTo(&quot;absolute/path&quot;);\n  }\"><pre class=\"notranslate\">  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">file_getAbsolutePath_isMockable</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">Exception</span> {\n    <span class=\"pl-smi\">File</span> <span class=\"pl-s1\">file</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">File</span>.<span class=\"pl-k\">class</span>);\n    <span class=\"pl-en\">doReturn</span>(<span class=\"pl-s\">\"absolute/path\"</span>).<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">file</span>).<span class=\"pl-en\">getAbsolutePath</span>();\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">file</span>.<span class=\"pl-en\">getAbsolutePath</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"absolute/path\"</span>);\n  }</pre></div>\n<p dir=\"auto\">An NPE will result:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException\n\tat org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.isConstructorMock(MockMethodDispatcher.java:41)\n\tat java.base/java.io.File.&lt;init&gt;(File.java)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:80)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:72)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/sun.net.www.protocol.jar.JarURLConnection.&lt;init&gt;(JarURLConnection.java:84)\n\tat java.base/sun.net.www.protocol.jar.Handler.openConnection(Handler.java:41)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/java.net.URLClassLoader.getResourceAsStream(URLClassLoader.java:327)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getClassBytesAsStreamPreferringLocalUrls(SandboxClassLoader.java:101)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getByteCode(SandboxClassLoader.java:172)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.maybeInstrumentClass(SandboxClassLoader.java:129)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.lambda$loadClass$0(SandboxClassLoader.java:115)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:53)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.loadClass(SandboxClassLoader.java:115)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\n\tat org.robolectric.Shadows.reset(Shadows.java:2298)\n\tat org.robolectric.android.internal.AndroidTestEnvironment.resetState(AndroidTestEnvironment.java:518)\n\tat org.robolectric.RobolectricTestRunner.lambda$finallyAfterTest$0(RobolectricTestRunner.java:349)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:75)\n\tat org.robolectric.RobolectricTestRunner.finallyAfterTest(RobolectricTestRunner.java:347)\n\tat org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:272)\n\tat org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:89)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.NullPointerException\n\tat org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.isConstructorMock(MockMethodDispatcher.java:41)\n\tat java.base/java.io.File.&lt;init&gt;(File.java)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:80)\n\tat java.base/sun.net.www.protocol.file.Handler.openConnection(Handler.java:72)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/sun.net.www.protocol.jar.JarURLConnection.&lt;init&gt;(JarURLConnection.java:84)\n\tat java.base/sun.net.www.protocol.jar.Handler.openConnection(Handler.java:41)\n\tat java.base/java.net.URL.openConnection(URL.java:1063)\n\tat java.base/java.net.URLClassLoader.getResourceAsStream(URLClassLoader.java:327)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getClassBytesAsStreamPreferringLocalUrls(SandboxClassLoader.java:101)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.getByteCode(SandboxClassLoader.java:172)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.maybeInstrumentClass(SandboxClassLoader.java:129)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.lambda$loadClass$0(SandboxClassLoader.java:115)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:53)\n\tat org.robolectric.internal.bytecode.SandboxClassLoader.loadClass(SandboxClassLoader.java:115)\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\n\tat org.robolectric.Shadows.reset(Shadows.java:2298)\n\tat org.robolectric.android.internal.AndroidTestEnvironment.resetState(AndroidTestEnvironment.java:518)\n\tat org.robolectric.RobolectricTestRunner.lambda$finallyAfterTest$0(RobolectricTestRunner.java:349)\n\tat org.robolectric.util.PerfStatsCollector.measure(PerfStatsCollector.java:75)\n\tat org.robolectric.RobolectricTestRunner.finallyAfterTest(RobolectricTestRunner.java:347)\n\tat org.robolectric.internal.SandboxTestRunner$2.lambda$evaluate$0(SandboxTestRunner.java:272)\n\tat org.robolectric.internal.bytecode.Sandbox.lambda$runOnMainThread$0(Sandbox.java:89)\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n</code></pre></div>\n<p dir=\"auto\">Robolectric uses an instrumenting ClassLoader that transforms Android classes to use real implementations:<br>\n<a href=\"https://github.com/robolectric/robolectric/blob/master/sandbox/src/main/java/org/robolectric/internal/bytecode/SandboxClassLoader.java#L105\">https://github.com/robolectric/robolectric/blob/master/sandbox/src/main/java/org/robolectric/internal/bytecode/SandboxClassLoader.java#L105</a></p>\n<p dir=\"auto\">Here is a fork of Robolectric that has a test that captures the issue:<br>\n<a href=\"https://github.com/hoisie/robolectric/tree/mockito-inline-test\">https://github.com/hoisie/robolectric/tree/mockito-inline-test</a></p>\n<p dir=\"auto\">You can see the failure using the following command:<br>\n<code class=\"notranslate\">./gradlew  :integration_tests:mockito-experimental:test</code></p>\n<p dir=\"auto\">Any tips/help debugging would be greatly appreciated. It would be nice to figure out what Robolectric is doing to prevent this from working.</p>",
                "resourcePath": "/mockito/mockito/issues/2015",
                "createdAt": "2020-08-21T05:00:26Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Initializes classes prior to instrumentation to avoid uncontrolled code execution.",
        "url": "https://github.com/mockito/mockito/pull/2023",
        "resourcePath": "/mockito/mockito/pull/2023",
        "createdAt": "2020-08-25T22:10:20Z",
        "number": 2023,
        "mergeCommit": {
          "oid": "f31ba850384fa789278e11aea41efc3b1c877a48",
          "message": "[ci maven-central-release] Merge pull request #2023 from mockito/explicit-initializer\n\nInitializes classes prior to instrumentation to avoid uncontrolled code execution.",
          "commitUrl": "https://github.com/mockito/mockito/commit/f31ba850384fa789278e11aea41efc3b1c877a48",
          "parents": {
            "nodes": [
              {
                "oid": "929840ab691b2f502b9958ac9483104bfd88a9ee",
                "message": "3.5.6 release (previous 3.5.5) + release notes updated by CI build 4744\n\n[ci skip-release]"
              },
              {
                "oid": "24d8d790c22913a9a92ea70bad721b06a735cd46",
                "message": "Initializes classes prior to instrumentation to avoid uncontrolled code execution.\n\nFixes \\# #2011"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineBytecodeGenerator.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/InitializationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/PluginTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDczNTMyNzMzOjI0ZDhkNzkwYzIyOTEzYTlhOTJlYTcwYmFkNzIxYjA2YTczNWNkNDY=",
                "url": "https://github.com/mockito/mockito/pull/2023/commits/24d8d790c22913a9a92ea70bad721b06a735cd46"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2011,
                "url": "https://github.com/mockito/mockito/issues/2011",
                "title": "Stackoverflow error when upgrading to v3.5.2",
                "bodyHTML": "<p dir=\"auto\">I tried to upgrade from Mockito v3.4.6 to v3.5.2 and I'm getting a stackoverflow error (same error with v3.5.0) when running some tests (not all of them, just a few ; even in the same class : some tests pass and others don't).</p>\n<p dir=\"auto\">Stacktrace :</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.StackOverflowError\n\tat java.base/java.lang.ThreadLocal.get(ThreadLocal.java:163)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.lambda$new$3(InlineByteBuddyMockMaker.java:260)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodAdvice.handleConstruction(MockMethodAdvice.java:176)\n\tat org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.handleConstruction(MockMethodDispatcher.java:53)\n\tat java.base/java.lang.Throwable.&lt;init&gt;(Throwable.java)\n\tat java.base/java.lang.Exception.&lt;init&gt;(Exception.java:66)\n\tat java.base/java.lang.RuntimeException.&lt;init&gt;(RuntimeException.java:62)\n\tat java.base/java.lang.ClassCastException.&lt;init&gt;(ClassCastException.java:58)\n\tat java.base/java.lang.Throwable.&lt;init&gt;(Throwable.java)\n\tat java.base/java.lang.Exception.&lt;init&gt;(Exception.java:66)\n\tat java.base/java.lang.RuntimeException.&lt;init&gt;(RuntimeException.java:62)\n\tat java.base/java.lang.ClassCastException.&lt;init&gt;(ClassCastException.java:58)\n\tat java.base/java.lang.Throwable.&lt;init&gt;(Throwable.java)\n\tat java.base/java.lang.Exception.&lt;init&gt;(Exception.java:66)\n        ...\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.StackOverflowError\n\tat java.base/java.lang.ThreadLocal.get(ThreadLocal.java:163)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.lambda$new$3(InlineByteBuddyMockMaker.java:260)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodAdvice.handleConstruction(MockMethodAdvice.java:176)\n\tat org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.handleConstruction(MockMethodDispatcher.java:53)\n\tat java.base/java.lang.Throwable.&lt;init&gt;(Throwable.java)\n\tat java.base/java.lang.Exception.&lt;init&gt;(Exception.java:66)\n\tat java.base/java.lang.RuntimeException.&lt;init&gt;(RuntimeException.java:62)\n\tat java.base/java.lang.ClassCastException.&lt;init&gt;(ClassCastException.java:58)\n\tat java.base/java.lang.Throwable.&lt;init&gt;(Throwable.java)\n\tat java.base/java.lang.Exception.&lt;init&gt;(Exception.java:66)\n\tat java.base/java.lang.RuntimeException.&lt;init&gt;(RuntimeException.java:62)\n\tat java.base/java.lang.ClassCastException.&lt;init&gt;(ClassCastException.java:58)\n\tat java.base/java.lang.Throwable.&lt;init&gt;(Throwable.java)\n\tat java.base/java.lang.Exception.&lt;init&gt;(Exception.java:66)\n        ...\n</code></pre></div>\n<p dir=\"auto\">I didn't succeed in reproduce the error in a small project, but I'll spend more time to try and post the sources here when/if I have a reproducible case.</p>\n<p dir=\"auto\">Environment :</p>\n<ul dir=\"auto\">\n<li>Mockito v3.5.2</li>\n<li>JUnit v5.6.2</li>\n<li>Java :</li>\n</ul>\n<blockquote>\n<p dir=\"auto\">openjdk version \"11.0.8\" 2020-07-14<br>\nOpenJDK Runtime Environment (build 11.0.8+10-post-Ubuntu-0ubuntu118.04.1)<br>\nOpenJDK 64-Bit Server VM (build 11.0.8+10-post-Ubuntu-0ubuntu118.04.1, mixed mode, sharing)</p>\n</blockquote>\n<ul dir=\"auto\">\n<li>Maven : v3.6.0 (tests are run by the maven-surefire plugin)</li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2011",
                "createdAt": "2020-08-20T11:42:48Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #2007 : Downgrade objenesis version for mockito-android",
        "url": "https://github.com/mockito/mockito/pull/2024",
        "resourcePath": "/mockito/mockito/pull/2024",
        "createdAt": "2020-08-26T17:05:23Z",
        "number": 2024,
        "mergeCommit": {
          "oid": "626d4573c702625611d2024463bae606a4e8cca4",
          "message": "Fixes #2007 : Downgrade objenesis version for mockito-android (#2024)\n\n[ci maven-central-release]\r\n\r\nCo-authored-by: Tim van der Lippe <TimvdLippe@users.noreply.github.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/626d4573c702625611d2024463bae606a4e8cca4",
          "parents": {
            "nodes": [
              {
                "oid": "a8b156509fc8e35cf122e1abe8c36d1e196ed041",
                "message": "3.5.8 release (previous 3.5.7) + release notes updated by CI build 4758\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "build.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/dependencies.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/android/android.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/osgi-test/osgi-test.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDc0MDM5ODA2Ojg5MTgyMDJiNTE5ZGYyNWFjMWEzOTNkMjdmNTU2YTliOTU1MzA1MmM=",
                "url": "https://github.com/mockito/mockito/pull/2024/commits/8918202b519df25ac1a393d27f556a9b9553052c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2007,
                "url": "https://github.com/mockito/mockito/issues/2007",
                "title": "Android instrumentation test packaging fails for mockito-android 3.5.0 with minSdk < 26",
                "bodyHTML": "<p dir=\"auto\">We've upgraded from <code class=\"notranslate\">mockito-android:3.4.6</code> to <code class=\"notranslate\">mockito-android:3.5.0</code>. I'm attempting to package up my instrumented tests by running the <code class=\"notranslate\">assembleAndroidTest</code> gradle task. The task fails with the following errors:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/fb7959dc5bfc8ebb26ad0660efa1929e/jetified-mockito-core-3.5.0.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\"><pre class=\"notranslate\"><code class=\"notranslate\">/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/fb7959dc5bfc8ebb26ad0660efa1929e/jetified-mockito-core-3.5.0.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n</code></pre></div>\n<p dir=\"auto\">and with root cause:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"com.android.tools.r8.utils.b: Error: /Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar:org/objenesis/instantiator/util/DefineClassHelper$Java8.class, java.lang.Class org.objenesis.instantiator.util.DefineClassHelper$Java8.defineClass(java.lang.String, byte[], int, int, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain), MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n        at com.android.tools.r8.utils.y0.a(:21)\n        at com.android.tools.r8.utils.O.a(:51)\n        ... 35 more\"><pre class=\"notranslate\"><code class=\"notranslate\">com.android.tools.r8.utils.b: Error: /Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar:org/objenesis/instantiator/util/DefineClassHelper$Java8.class, java.lang.Class org.objenesis.instantiator.util.DefineClassHelper$Java8.defineClass(java.lang.String, byte[], int, int, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain), MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n        at com.android.tools.r8.utils.y0.a(:21)\n        at com.android.tools.r8.utils.O.a(:51)\n        ... 35 more\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/2007",
                "createdAt": "2020-08-18T00:37:46Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "android"
                      }
                    },
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Escape mock during method dispatch on mock to avoid premature garbage collection.",
        "url": "https://github.com/mockito/mockito/pull/2034",
        "resourcePath": "/mockito/mockito/pull/2034",
        "createdAt": "2020-09-03T21:12:33Z",
        "number": 2034,
        "mergeCommit": {
          "oid": "893e2f476445ce273d82ec73a93ced713610df86",
          "message": "[ci maven-central-release] Merge pull request #2034 from mockito/explicit-escape-during-dispatch\n\nEscape mock during method dispatch on mock to avoid premature garbage collection.",
          "commitUrl": "https://github.com/mockito/mockito/commit/893e2f476445ce273d82ec73a93ced713610df86",
          "parents": {
            "nodes": [
              {
                "oid": "fcd788cf20bdd2ead398706afeb6beb5411831b8",
                "message": "3.5.9 release (previous 3.5.8) + release notes updated by CI build 4763\n\n[ci skip-release]"
              },
              {
                "oid": "093d5279456ccafcaf9c56a437e4a504e7b70dc4",
                "message": "Escape mock during method dispatch on mock to avoid premature garbage collection.\n\nFixes #1802."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodInterceptor.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/PrematureGarbageCollectionTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDc4OTY5OTc5OjA5M2Q1Mjc5NDU2Y2NhZmNhZjljNTZhNDM3ZTRhNTA0ZTdiNzBkYzQ=",
                "url": "https://github.com/mockito/mockito/pull/2034/commits/093d5279456ccafcaf9c56a437e4a504e7b70dc4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1802,
                "url": "https://github.com/mockito/mockito/issues/1802",
                "title": "Exception \"The mock object was garbage collected.\"",
                "bodyHTML": "<p dir=\"auto\">We received the following exception while running tests using Mockito, either version 3.0.0 or 3.1.0, and I'm filing this bug as requested:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Exception in thread &quot;main&quot; java.lang.IllegalStateException: The mock object was garbage collected. This should not happen in normal circumstances when using public API. Typically, the test class keeps strong reference to the mock object and it prevents getting the mock collected. Mockito internally needs to keep weak references to mock objects to avoid memory leaks for certain types of MockMaker implementations. If you see this exception using Mockito public API, please file a bug. For more information see issue #1313.\n\tat org.mockito.internal.invocation.mockref.MockWeakReference.get(MockWeakReference.java:32)\n\tat org.mockito.internal.invocation.InterceptedInvocation.getMock(InterceptedInvocation.java:106)\n\tat org.mockito.internal.stubbing.InvocationContainerImpl.invokedMock(InvocationContainerImpl.java:157)\n\tat org.mockito.internal.stubbing.OngoingStubbingImpl.&lt;init&gt;(OngoingStubbingImpl.java:22)\n\tat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:83)\n\tat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\n\tat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:35)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:61)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:49)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(MockMethodInterceptor.java:126)\n\tat org.mockito.codegen.Runnable$MockitoMock$1840149894.run(Unknown Source)\n\tat MockitoTest.runTest(MockitoTest.java:13)\n\tat MockitoTest.main(MockitoTest.java:6)\"><pre class=\"notranslate\"><code class=\"notranslate\">Exception in thread \"main\" java.lang.IllegalStateException: The mock object was garbage collected. This should not happen in normal circumstances when using public API. Typically, the test class keeps strong reference to the mock object and it prevents getting the mock collected. Mockito internally needs to keep weak references to mock objects to avoid memory leaks for certain types of MockMaker implementations. If you see this exception using Mockito public API, please file a bug. For more information see issue #1313.\n\tat org.mockito.internal.invocation.mockref.MockWeakReference.get(MockWeakReference.java:32)\n\tat org.mockito.internal.invocation.InterceptedInvocation.getMock(InterceptedInvocation.java:106)\n\tat org.mockito.internal.stubbing.InvocationContainerImpl.invokedMock(InvocationContainerImpl.java:157)\n\tat org.mockito.internal.stubbing.OngoingStubbingImpl.&lt;init&gt;(OngoingStubbingImpl.java:22)\n\tat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:83)\n\tat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\n\tat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:35)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:61)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:49)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(MockMethodInterceptor.java:126)\n\tat org.mockito.codegen.Runnable$MockitoMock$1840149894.run(Unknown Source)\n\tat MockitoTest.runTest(MockitoTest.java:13)\n\tat MockitoTest.main(MockitoTest.java:6)\n</code></pre></div>\n<p dir=\"auto\">I've reduced the problem to the following test program:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import org.mockito.*;\n\npublic class MockitoTest {\n\n  public static void main(String[] args) {\n    while (true) runTest();\n  }\n\n  private static void runTest() {\n    Node list = createList();\n    while (list != null) {\n      Node next = list.next;\n      list.object.run();\n      list = next;\n    }\n  }\n\n  private static Node createList() {\n    Node node = null;\n    for (int i = 0; i &lt; 1000; ++i) {\n      Node next = new Node();\n      next.next = node;\n      node = next;\n    }\n    return node;\n  }\n\n  private static class Node {\n    final Runnable object = Mockito.mock(Runnable.class);\n    Node next;\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.*;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MockitoTest</span> {\n\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) {\n    <span class=\"pl-k\">while</span> (<span class=\"pl-c1\">true</span>) <span class=\"pl-en\">runTest</span>();\n  }\n\n  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">runTest</span>() {\n    <span class=\"pl-smi\">Node</span> <span class=\"pl-s1\">list</span> = <span class=\"pl-en\">createList</span>();\n    <span class=\"pl-k\">while</span> (<span class=\"pl-s1\">list</span> != <span class=\"pl-c1\">null</span>) {\n      <span class=\"pl-smi\">Node</span> <span class=\"pl-s1\">next</span> = <span class=\"pl-s1\">list</span>.<span class=\"pl-s1\">next</span>;\n      <span class=\"pl-s1\">list</span>.<span class=\"pl-s1\">object</span>.<span class=\"pl-en\">run</span>();\n      <span class=\"pl-s1\">list</span> = <span class=\"pl-s1\">next</span>;\n    }\n  }\n\n  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">Node</span> <span class=\"pl-en\">createList</span>() {\n    <span class=\"pl-smi\">Node</span> <span class=\"pl-s1\">node</span> = <span class=\"pl-c1\">null</span>;\n    <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">int</span> <span class=\"pl-s1\">i</span> = <span class=\"pl-c1\">0</span>; <span class=\"pl-s1\">i</span> &lt; <span class=\"pl-c1\">1000</span>; ++<span class=\"pl-s1\">i</span>) {\n      <span class=\"pl-smi\">Node</span> <span class=\"pl-s1\">next</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Node</span>();\n      <span class=\"pl-s1\">next</span>.<span class=\"pl-s1\">next</span> = <span class=\"pl-s1\">node</span>;\n      <span class=\"pl-s1\">node</span> = <span class=\"pl-s1\">next</span>;\n    }\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">node</span>;\n  }\n\n  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Node</span> {\n    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Runnable</span> <span class=\"pl-s1\">object</span> = <span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">Runnable</span>.<span class=\"pl-k\">class</span>);\n    <span class=\"pl-smi\">Node</span> <span class=\"pl-s1\">next</span>;\n  }\n}</pre></div>\n<p dir=\"auto\">Whether the problem occurs depends on what exactly the JVM does with the code. It looks like the mock object can be garbage collected between the call to the mocked method and Mockito trying to use the weak reference to it. I'm using AdoptOpenJDK 11.0.3.7-hotspot on Windows. My test program more often than not reproduces the exception within a few seconds, but occasionally it can run forever without failing.</p>",
                "resourcePath": "/mockito/mockito/issues/1802",
                "createdAt": "2019-10-10T07:57:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Mock resolver plugin",
        "url": "https://github.com/mockito/mockito/pull/2042",
        "resourcePath": "/mockito/mockito/pull/2042",
        "createdAt": "2020-09-14T20:12:59Z",
        "number": 2042,
        "mergeCommit": {
          "oid": "e098342c3cfad32a8b183593aa6719fb66b72674",
          "message": "[ci maven-central-release] Merge pull request #2042 from mockito/mock-resolver-plugin\n\nMock resolver plugin",
          "commitUrl": "https://github.com/mockito/mockito/commit/e098342c3cfad32a8b183593aa6719fb66b72674",
          "parents": {
            "nodes": [
              {
                "oid": "e388e924ccc018934def0eb189a2926fca6063cb",
                "message": "3.5.14 release (previous 3.5.13) + release notes updated by CI build 4814\n\n[ci skip-release]"
              },
              {
                "oid": "c81b028f4ac121f4939341ef724465d307274cd0",
                "message": "Fixing \"best\" constructor choice."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/plugins/Plugins.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodAdvice.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/DefaultMockingDetails.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/MockUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/plugins/MockMaker.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/plugins/MockResolver.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/extTest/src/test/java/org/mockitousage/plugins/resolver/MockResolverTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/extTest/src/test/java/org/mockitousage/plugins/resolver/MyMockResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/extTest/src/test/java/org/mockitousage/plugins/switcher/PluginSwitchTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/extTest/src/test/resources/mockito-extensions/org.mockito.plugins.MockResolver"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDg2ODU2NzM1OmM4MWIwMjhmNGFjMTIxZjQ5MzkzNDFlZjcyNDQ2NWQzMDcyNzRjZDA=",
                "url": "https://github.com/mockito/mockito/pull/2042/commits/c81b028f4ac121f4939341ef724465d307274cd0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1980,
                "url": "https://github.com/mockito/mockito/issues/1980",
                "title": "mockito3.4.0 InlineByteBuddyMockMaker can't work with spring cglib proxy, but ByteBuddyMockMaker works",
                "bodyHTML": "<p dir=\"auto\">I upgrade mockito to 3.4.0, and the mockMaker is InlineByteBuddyMockMaker, I use SpyBean to spy a spring bean, and then verify the bean, it throws NotAMockException.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16514353/87801421-4492da80-c882-11ea-8ebc-7f1ee4c80f9c.png\"><img src=\"https://user-images.githubusercontent.com/16514353/87801421-4492da80-c882-11ea-8ebc-7f1ee4c80f9c.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">then i debug, find that the mocks.get(mock) can't find it because the mock is CGLIB proxy, not the original type.</p>\n<p dir=\"auto\">when I use the verify((AppGroupClusterAction) AopTestUtils.getTargetObject(appGroupClusterAction)) to verify. it works.</p>\n<p dir=\"auto\">but the before mockMaker ByteBuddyMockMaker works. so can the InlineByteBuddyMockMaker be compatible with the before\uff1f</p>",
                "resourcePath": "/mockito/mockito/issues/1980",
                "createdAt": "2020-07-17T15:10:00Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "awaiting response"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Prefer non-synthetic constructors in MockMethodAdvice.ConstructorShortcut",
        "url": "https://github.com/mockito/mockito/pull/2045",
        "resourcePath": "/mockito/mockito/pull/2045",
        "createdAt": "2020-09-16T17:59:43Z",
        "number": 2045,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodAdvice.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDg4MTU1ODAwOjZjMjIwYTFjMmIzMzZkNjMwZTE5MTJkN2M1YzYyYTI0MWEzMGI4MDY=",
                "url": "https://github.com/mockito/mockito/pull/2045/commits/6c220a1c2b336d630e1912d7c5c62a241a30b806"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2040,
                "url": "https://github.com/mockito/mockito/issues/2040",
                "title": "Mockito.spy(Activity).getBaseContext() returns null on Robolectric 4.4 and Java8",
                "bodyHTML": "<h3 dir=\"auto\">Description</h3>\n<p dir=\"auto\">Since robolectric 4.4, Mockito.spy(Activity).getBaseContext() returns null</p>\n<h3 dir=\"auto\">Steps to Reproduce</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ git clone -b mockito_spy_robolectric_4_4 https://github.com/ganadist/VersionCodeDemo demo\n$ cd demo\n\n// switch to robolectric 4.3.1\n$ git checkout HEAD~1\n$ ./gradlew :app:testDevelopDebugUnitTest\nBUILD SUCCESSFUL in 14s\n28 actionable tasks: 28 executed\n\n// switch to robolectric 4.4\n$ git checkout mockito_spy_robolectric_4_4\n$ ./gradlew :app:testDevelopDebugUnitTest\n&gt; Task :app:testDevelopDebugUnitTest FAILED\nFAILURE: Build failed with an exception.\n* What went wrong:\nExecution failed for task ':app:testDevelopDebugUnitTest'.\"><pre class=\"notranslate\"><code class=\"notranslate\">$ git clone -b mockito_spy_robolectric_4_4 https://github.com/ganadist/VersionCodeDemo demo\n$ cd demo\n\n// switch to robolectric 4.3.1\n$ git checkout HEAD~1\n$ ./gradlew :app:testDevelopDebugUnitTest\nBUILD SUCCESSFUL in 14s\n28 actionable tasks: 28 executed\n\n// switch to robolectric 4.4\n$ git checkout mockito_spy_robolectric_4_4\n$ ./gradlew :app:testDevelopDebugUnitTest\n&gt; Task :app:testDevelopDebugUnitTest FAILED\nFAILURE: Build failed with an exception.\n* What went wrong:\nExecution failed for task ':app:testDevelopDebugUnitTest'.\n</code></pre></div>\n<p dir=\"auto\">Failed unittest result : <a href=\"https://scans.gradle.com/s/wbmmbnzatcyai/tests/:app:testDevelopDebugUnitTest/com.example.myapplication.UnitTest1/test1#1\" rel=\"nofollow\">https://scans.gradle.com/s/wbmmbnzatcyai/tests/:app:testDevelopDebugUnitTest/com.example.myapplication.UnitTest1/test1#1</a></p>\n<h3 dir=\"auto\">Robolectric &amp; Android Version</h3>\n<ul dir=\"auto\">\n<li>Compile Sdk : 29</li>\n<li>Target Sdk : 28</li>\n<li>Robolectric : 4.4</li>\n<li>Mockito : 3.5.10</li>\n<li>Jvm : OpenJDK 8</li>\n</ul>\n<h3 dir=\"auto\">Link to a public git repo demonstrating the problem:</h3>\n<p dir=\"auto\"><a href=\"https://github.com/ganadist/VersionCodeDemo/blob/mockito_spy_robolectric_4_4/app/src/test/java/com/example/myapplication/UnitTest1.java#L27-L38\">https://github.com/ganadist/VersionCodeDemo/blob/mockito_spy_robolectric_4_4/app/src/test/java/com/example/myapplication/UnitTest1.java#L27-L38</a></p>\n<p dir=\"auto\">This issue is copied from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"696670951\" data-permission-text=\"Title is private\" data-url=\"https://github.com/robolectric/robolectric/issues/5916\" data-hovercard-type=\"issue\" data-hovercard-url=\"/robolectric/robolectric/issues/5916/hovercard\" href=\"https://github.com/robolectric/robolectric/issues/5916\">robolectric/robolectric#5916</a></p>",
                "resourcePath": "/mockito/mockito/issues/2040",
                "createdAt": "2020-09-09T22:17:37Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Update Byte Buddy.",
        "url": "https://github.com/mockito/mockito/pull/2050",
        "resourcePath": "/mockito/mockito/pull/2050",
        "createdAt": "2020-09-18T22:34:20Z",
        "number": 2050,
        "mergeCommit": {
          "oid": "6ec033c1e4a2c59a636573d79620fc287ebe86ae",
          "message": "Update Byte Buddy to 1.10.15 (#2050)",
          "commitUrl": "https://github.com/mockito/mockito/commit/6ec033c1e4a2c59a636573d79620fc287ebe86ae",
          "parents": {
            "nodes": [
              {
                "oid": "5a664cfd68bd50d3f3447ce44879d60045b199ec",
                "message": "3.5.11 release (previous 3.5.10) + release notes updated by CI build 4792\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/dependencies.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDg5NTY5NDI5OjJkZjNmNWE1YzE4NjExYWZlYmZiNWRkMDczOTNjOWE3MThiZTE5ZTk=",
                "url": "https://github.com/mockito/mockito/pull/2050/commits/2df3f5a5c18611afebfb5dd07393c9a718be19e9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2039,
                "url": "https://github.com/mockito/mockito/issues/2039",
                "title": "Failed to mock after upgrading Mockito to version v3.4.x or higher",
                "bodyHTML": "<p dir=\"auto\">Upgrading Mockito to version v3.4.x or higher break the test.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private val stripe = Mockito.mock(Stripe::class.java)\"><pre class=\"notranslate\"><code class=\"notranslate\">private val stripe = Mockito.mock(Stripe::class.java)\n</code></pre></div>\n<p dir=\"auto\">I mock a Stripe SDK class (<a href=\"https://github.com/stripe/stripe-android\">https://github.com/stripe/stripe-android</a>) in my test.<br>\nOn Mockito v3.4.x or higher the mock is failed.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: class com.stripe.android.Stripe.\nCan not mock final classes with the following settings :\n - explicit serialization (e.g. withSettings().serializable())\n - extra interfaces (e.g. withSettings().extraInterfaces(...))\n\nYou are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : java.lang.IllegalArgumentException: Could not create type\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: class com.stripe.android.Stripe.\nCan not mock final classes with the following settings :\n - explicit serialization (e.g. withSettings().serializable())\n - extra interfaces (e.g. withSettings().extraInterfaces(...))\n\nYou are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : java.lang.IllegalArgumentException: Could not create type\n</code></pre></div>\n<p dir=\"auto\">with trace</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"at com.x.y.z.domain.PaymentUseCaseTest.&lt;init&gt;(PaymentUseCaseTest.kt:24)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.junit.platform.commons.util.ReflectionUtils.newInstance(ReflectionUtils.java:511)\n\tat org.junit.jupiter.engine.execution.ConstructorInvocation.proceed(ConstructorInvocation.java:56)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestClassConstructor(InvocationInterceptor.java:72)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:77)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestClassConstructor(ClassBasedTestDescriptor.java:333)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateTestClass(ClassBasedTestDescriptor.java:280)\n\tat org.junit.jupiter.engine.descriptor.ClassTestDescriptor.instantiateTestClass(ClassTestDescriptor.java:77)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:262)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:256)\n\tat java.util.Optional.orElseGet(Optional.java:267)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:255)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:108)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:107)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:71)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)\nCaused by: java.lang.IllegalArgumentException: Could not create type\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:154)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:365)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:174)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:376)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:36)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMockType(InlineByteBuddyMockMaker.java:379)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.doCreateMock(InlineByteBuddyMockMaker.java:339)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:318)\n\tat org.mockito.internal.util.MockUtil.createMock(MockUtil.java:52)\n\tat org.mockito.internal.MockitoCore.mock(MockitoCore.java:61)\n\tat org.mockito.Mockito.mock(Mockito.java:1949)\n\tat org.mockito.Mockito.mock(Mockito.java:1860)\n\t... 64 more\nCaused by: java.lang.VerifyError\n\tat sun.instrument.InstrumentationImpl.retransformClasses0(Native Method)\n\tat sun.instrument.InstrumentationImpl.retransformClasses(InstrumentationImpl.java:144)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:260)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.mockClass(InlineBytecodeGenerator.java:211)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:46)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:43)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:152)\"><pre class=\"notranslate\"><code class=\"notranslate\">at com.x.y.z.domain.PaymentUseCaseTest.&lt;init&gt;(PaymentUseCaseTest.kt:24)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n\tat org.junit.platform.commons.util.ReflectionUtils.newInstance(ReflectionUtils.java:511)\n\tat org.junit.jupiter.engine.execution.ConstructorInvocation.proceed(ConstructorInvocation.java:56)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestClassConstructor(InvocationInterceptor.java:72)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:77)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestClassConstructor(ClassBasedTestDescriptor.java:333)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateTestClass(ClassBasedTestDescriptor.java:280)\n\tat org.junit.jupiter.engine.descriptor.ClassTestDescriptor.instantiateTestClass(ClassTestDescriptor.java:77)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:262)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$2(ClassBasedTestDescriptor.java:256)\n\tat java.util.Optional.orElseGet(Optional.java:267)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$3(ClassBasedTestDescriptor.java:255)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:29)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:108)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:107)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:71)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$1(NodeTestTask.java:107)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:107)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:75)\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:248)\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$5(DefaultLauncher.java:211)\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:226)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:199)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:132)\n\tat com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:69)\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)\nCaused by: java.lang.IllegalArgumentException: Could not create type\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:154)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:365)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:174)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:376)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:36)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMockType(InlineByteBuddyMockMaker.java:379)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.doCreateMock(InlineByteBuddyMockMaker.java:339)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:318)\n\tat org.mockito.internal.util.MockUtil.createMock(MockUtil.java:52)\n\tat org.mockito.internal.MockitoCore.mock(MockitoCore.java:61)\n\tat org.mockito.Mockito.mock(Mockito.java:1949)\n\tat org.mockito.Mockito.mock(Mockito.java:1860)\n\t... 64 more\nCaused by: java.lang.VerifyError\n\tat sun.instrument.InstrumentationImpl.retransformClasses0(Native Method)\n\tat sun.instrument.InstrumentationImpl.retransformClasses(InstrumentationImpl.java:144)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:260)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.mockClass(InlineBytecodeGenerator.java:211)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:46)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$1.call(TypeCachingBytecodeGenerator.java:43)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:152)\n</code></pre></div>\n<p dir=\"auto\">I am interested to know what changes from 3.3.x to 3.4.x that causing this</p>\n<p dir=\"auto\">Edit: Added bytebuddy dump from <code class=\"notranslate\">-Dnet.bytebuddy.dump</code> command<br>\ndump: <a href=\"https://github.com/mockito/mockito/files/5193173/bytebuddy.zip\">bytebuddy.zip</a></p>",
                "resourcePath": "/mockito/mockito/issues/2039",
                "createdAt": "2020-09-08T13:21:24Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use single version for strictly in mockito-android",
        "url": "https://github.com/mockito/mockito/pull/2053",
        "resourcePath": "/mockito/mockito/pull/2053",
        "createdAt": "2020-09-24T12:32:32Z",
        "number": 2053,
        "mergeCommit": {
          "oid": "079e847891959a7a3cbb5a8390efa65eba583b7a",
          "message": "Use single version for strict dependency check in mockito-android (#2053)\n\n[ci maven-central-release]",
          "commitUrl": "https://github.com/mockito/mockito/commit/079e847891959a7a3cbb5a8390efa65eba583b7a",
          "parents": {
            "nodes": [
              {
                "oid": "e338d9167cb5a6acb4b3ec5f02bec3eb4769e4ae",
                "message": "3.5.12 release (previous 3.5.11) + release notes updated by CI build 4800\n\n[ci skip-release]"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/android/android.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDkyNDEzNzMzOjhiZWJjNWY4NzQ2YWE4ZTZlMzA4Yzg5NjM3NThjMWUzOWZmNWZmODc=",
                "url": "https://github.com/mockito/mockito/pull/2053/commits/8bebc5f8746aa8e6e308c8963758c1e39ff5ff87"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2007,
                "url": "https://github.com/mockito/mockito/issues/2007",
                "title": "Android instrumentation test packaging fails for mockito-android 3.5.0 with minSdk < 26",
                "bodyHTML": "<p dir=\"auto\">We've upgraded from <code class=\"notranslate\">mockito-android:3.4.6</code> to <code class=\"notranslate\">mockito-android:3.5.0</code>. I'm attempting to package up my instrumented tests by running the <code class=\"notranslate\">assembleAndroidTest</code> gradle task. The task fails with the following errors:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/fb7959dc5bfc8ebb26ad0660efa1929e/jetified-mockito-core-3.5.0.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\"><pre class=\"notranslate\"><code class=\"notranslate\">/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/fb7959dc5bfc8ebb26ad0660efa1929e/jetified-mockito-core-3.5.0.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n/Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar: D8: MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n</code></pre></div>\n<p dir=\"auto\">and with root cause:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"com.android.tools.r8.utils.b: Error: /Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar:org/objenesis/instantiator/util/DefineClassHelper$Java8.class, java.lang.Class org.objenesis.instantiator.util.DefineClassHelper$Java8.defineClass(java.lang.String, byte[], int, int, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain), MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n        at com.android.tools.r8.utils.y0.a(:21)\n        at com.android.tools.r8.utils.O.a(:51)\n        ... 35 more\"><pre class=\"notranslate\"><code class=\"notranslate\">com.android.tools.r8.utils.b: Error: /Users/&lt;me&gt;/.gradle/caches/transforms-2/files-2.1/4d4498fa5552ba637b5a9594a0871b80/jetified-objenesis-3.1.jar:org/objenesis/instantiator/util/DefineClassHelper$Java8.class, java.lang.Class org.objenesis.instantiator.util.DefineClassHelper$Java8.defineClass(java.lang.String, byte[], int, int, java.lang.Class, java.lang.ClassLoader, java.security.ProtectionDomain), MethodHandle.invoke and MethodHandle.invokeExact are only supported starting with Android O (--min-api 26)\n        at com.android.tools.r8.utils.y0.a(:21)\n        at com.android.tools.r8.utils.O.a(:51)\n        ... 35 more\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/2007",
                "createdAt": "2020-08-18T00:37:46Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "android"
                      }
                    },
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #2061: ArgumentMatcher error messages use lambda class names",
        "url": "https://github.com/mockito/mockito/pull/2071",
        "resourcePath": "/mockito/mockito/pull/2071",
        "createdAt": "2020-10-17T14:27:51Z",
        "number": 2071,
        "mergeCommit": {
          "oid": "214d66fa84af85026be9791456fccc06af2f6b61",
          "message": "Fixes #2061: ArgumentMatcher error messages use lambda class names (#2071)",
          "commitUrl": "https://github.com/mockito/mockito/commit/214d66fa84af85026be9791456fccc06af2f6b61",
          "parents": {
            "nodes": [
              {
                "oid": "b16ec17cafdbf4fb968413c4992f044c1bb9526a",
                "message": "Fix typo in osgi.gradle (#2070)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/matchers/text/MatcherToString.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/StringUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/matchers/text/MatcherToStringTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/util/StringUtilTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTA1MjkwODUwOjBlMTEzM2JkODhjZWNiYTY2YmRmOTAxOWI4MTA5NTU1ZTM5YjkyMzY=",
                "url": "https://github.com/mockito/mockito/pull/2071/commits/0e1133bd88cecba66bdf9019b8109555e39b9236"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2061,
                "url": "https://github.com/mockito/mockito/issues/2061",
                "title": "Lambda used as ArgumentMatcher causes decamelized lambda name to appear in error message",
                "bodyHTML": "<h3 dir=\"auto\">Version</h3>\n<p dir=\"auto\">Mockito version: 3.5.13</p>\n<h3 dir=\"auto\">Description</h3>\n<p dir=\"auto\">Relates to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"616770746\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1932\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/1932/hovercard\" href=\"https://github.com/mockito/mockito/issues/1932\">#1932</a></p>\n<p dir=\"auto\">When using a lambda or method reference expression as <code class=\"notranslate\">ArgumentMatcher</code> and the matcher fails, the error message contains the lambda / method reference class name in \"decamelized\" form which is rather irritating, e.g.:</p>\n<blockquote>\n<p dir=\"auto\">myInterface.doSomething(<br>\n&lt;Mockito test$$ lambda$ 4 8/ 0x 0 0 0 0 0 0 0 8 0 0c 8f 4 4 0&gt;<br>\n);</p>\n</blockquote>\n<p dir=\"auto\">Expected would be that similar to anonymous classes the error output says \"&lt;custom argument matcher&gt;\". This could probably be achieved by testing for <code class=\"notranslate\">Class.isSynthetic()</code> in <code class=\"notranslate\">org.mockito.internal.matchers.text.MatcherToString.toString(ArgumentMatcher&lt;?&gt;)</code> before calling <code class=\"notranslate\">decamelizeMatcher</code> there.</p>\n<h3 dir=\"auto\">Test case</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class MockitoTest {\n    interface MyInterface {\n        void doSomething(String s);\n    }\n    \n    private static boolean matches(String s) {\n        return false;\n    }\n    \n    public static void main(String[] args) {\n        MyInterface mock = mock(MyInterface.class);\n        try {\n            verify(mock).doSomething(argThat(arg -&gt; false));\n        } catch (Error e) {\n            e.printStackTrace();\n        }\n        try {\n            verify(mock).doSomething(argThat(MockitoTest::matches));\n        } catch (Error e) {\n            e.printStackTrace();\n        }\n        \n        // When an anonymous class is used the output is '&lt;custom argument matcher&gt;'\n        // (as expected)\n        verify(mock).doSomething(argThat(new ArgumentMatcher&lt;&gt;() {\n            @Override\n            public boolean matches(String argument) {\n                return false;\n            }\n        }));\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MockitoTest</span> {\n    <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">MyInterface</span> {\n        <span class=\"pl-smi\">void</span> <span class=\"pl-en\">doSomething</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">s</span>);\n    }\n    \n    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">boolean</span> <span class=\"pl-en\">matches</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">s</span>) {\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;\n    }\n    \n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) {\n        <span class=\"pl-smi\">MyInterface</span> <span class=\"pl-s1\">mock</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">MyInterface</span>.<span class=\"pl-k\">class</span>);\n        <span class=\"pl-k\">try</span> {\n            <span class=\"pl-en\">verify</span>(<span class=\"pl-s1\">mock</span>).<span class=\"pl-en\">doSomething</span>(<span class=\"pl-en\">argThat</span>(<span class=\"pl-s1\">arg</span> -&gt; <span class=\"pl-c1\">false</span>));\n        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Error</span> <span class=\"pl-s1\">e</span>) {\n            <span class=\"pl-s1\">e</span>.<span class=\"pl-en\">printStackTrace</span>();\n        }\n        <span class=\"pl-k\">try</span> {\n            <span class=\"pl-en\">verify</span>(<span class=\"pl-s1\">mock</span>).<span class=\"pl-en\">doSomething</span>(<span class=\"pl-en\">argThat</span>(<span class=\"pl-smi\">MockitoTest</span>::<span class=\"pl-s1\">matches</span>));\n        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Error</span> <span class=\"pl-s1\">e</span>) {\n            <span class=\"pl-s1\">e</span>.<span class=\"pl-en\">printStackTrace</span>();\n        }\n        \n        <span class=\"pl-c\">// When an anonymous class is used the output is '&lt;custom argument matcher&gt;'</span>\n        <span class=\"pl-c\">// (as expected)</span>\n        <span class=\"pl-en\">verify</span>(<span class=\"pl-s1\">mock</span>).<span class=\"pl-en\">doSomething</span>(<span class=\"pl-en\">argThat</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">ArgumentMatcher</span>&lt;&gt;() {\n            <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n            <span class=\"pl-k\">public</span> <span class=\"pl-smi\">boolean</span> <span class=\"pl-en\">matches</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">argument</span>) {\n                <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;\n            }\n        }));\n    }\n}</pre></div>",
                "resourcePath": "/mockito/mockito/issues/2061",
                "createdAt": "2020-10-07T23:15:01Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Removed redundant CI workflow",
        "url": "https://github.com/mockito/mockito/pull/2096",
        "resourcePath": "/mockito/mockito/pull/2096",
        "createdAt": "2020-11-10T16:23:18Z",
        "number": 2096,
        "mergeCommit": {
          "oid": "c596aef9fc79e0ce4f9af029be9ef191d6b22da1",
          "message": "Merge pull request #2096 from mockito/mockitoguy-patch-1\n\nRemoved redundant CI workflow",
          "commitUrl": "https://github.com/mockito/mockito/commit/c596aef9fc79e0ce4f9af029be9ef191d6b22da1",
          "parents": {
            "nodes": [
              {
                "oid": "33bd1840140088fa130d2a5b1d7f702b33800641",
                "message": "Improved CI workflow\n\nMade Gradle wrapper validation a part of the main CI workflow. This way, we can remove the explicit wrapper validation workflow. Less workflows -> simpler CI. Fixe #2094 [skip travis]"
              },
              {
                "oid": "d0cd8c2fc88ac1b35a841c018fc7051d8132d1be",
                "message": "Removed redundant CI workflow\n\nWe don't need an explicit workflow for wrapper validation. We already run this as a step in the build:\r\n\r\nhttps://github.com/mockito/mockito/runs/1380756176?check_suite_focus=true#step:4:1"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "DELETED",
                "path": ".github/workflows/gradle-wrapper-validation.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTE4NjA3NDYzOmQwY2Q4YzJmYzg4YWMxYjM1YTg0MWMwMThmYzcwNTFkODEzMmQxYmU=",
                "url": "https://github.com/mockito/mockito/pull/2096/commits/d0cd8c2fc88ac1b35a841c018fc7051d8132d1be"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2094,
                "url": "https://github.com/mockito/mockito/issues/2094",
                "title": "Refactor Gradle wrapper validation workflow to CI workflow",
                "bodyHTML": "<p dir=\"auto\">Refactor Gradle wrapper validation workflow to CI workflow. This way, we CI feedback on PRs is cleaner and easier to use.</p>",
                "resourcePath": "/mockito/mockito/issues/2094",
                "createdAt": "2020-11-08T23:20:01Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "continuous integration"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Commit message directives for CI workflow",
        "url": "https://github.com/mockito/mockito/pull/2101",
        "resourcePath": "/mockito/mockito/pull/2101",
        "createdAt": "2020-11-12T16:04:13Z",
        "number": 2101,
        "mergeCommit": {
          "oid": "c0bdf43e11467ca7af2c594dc38c65b2901251c3",
          "message": "Merge pull request #2101 from mockito/mockitoguy-patch-2\n\nCommit message directives for CI workflow",
          "commitUrl": "https://github.com/mockito/mockito/commit/c0bdf43e11467ca7af2c594dc38c65b2901251c3",
          "parents": {
            "nodes": [
              {
                "oid": "3b09f8e8e0e8aa60039b7f17207a18032d8e7a8f",
                "message": "Removed duplicated setting (#2091)\n\nThere is no need of specifying --parallel explicitly as it is Gradle's default."
              },
              {
                "oid": "be15bfb8d7c98edfe92da6ccd50554764966fd24",
                "message": "Commit message directives for CI workflow\n\nAdded standard idioms for avoiding unnecessary jobs: [skip ci] and [skip release] directives can be added in the commit message, bypassing the CI or release from CI."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTE5OTg3MzIyOmJlMTViZmI4ZDdjOThlZGZlOTJkYTZjY2Q1MDU1NDc2NDk2NmZkMjQ=",
                "url": "https://github.com/mockito/mockito/pull/2101/commits/be15bfb8d7c98edfe92da6ccd50554764966fd24"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2095,
                "url": "https://github.com/mockito/mockito/issues/2095",
                "title": "Implement [ci skip release] in the CI pipeline",
                "bodyHTML": "<p dir=\"auto\">Make it possible to skip release when pushing changes to the repo. Our README.md currently documents that we can skip releases by adding \"ci skip release\" keyword to the commit message.</p>\n<p dir=\"auto\">Reference example: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/shipkit/shipkit-auto-version/commit/7a8ada573e3d8f183b9101b716a261612db30f87/hovercard\" href=\"https://github.com/shipkit/shipkit-auto-version/commit/7a8ada573e3d8f183b9101b716a261612db30f87\">shipkit/shipkit-auto-version@<tt>7a8ada5</tt></a></p>",
                "resourcePath": "/mockito/mockito/issues/2095",
                "createdAt": "2020-11-09T16:16:44Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "continuous integration"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Avoided parallel workflow execution",
        "url": "https://github.com/mockito/mockito/pull/2103",
        "resourcePath": "/mockito/mockito/pull/2103",
        "createdAt": "2020-11-14T05:25:40Z",
        "number": 2103,
        "mergeCommit": {
          "oid": "24cf496bed1bfd313c2ff83cf490bfc62ec4d5a7",
          "message": "Merge pull request #2103 from mockito/mockitoguy-patch-2\n\nAvoided parallel workflow execution [skip release]",
          "commitUrl": "https://github.com/mockito/mockito/commit/24cf496bed1bfd313c2ff83cf490bfc62ec4d5a7",
          "parents": {
            "nodes": [
              {
                "oid": "c0bdf43e11467ca7af2c594dc38c65b2901251c3",
                "message": "Merge pull request #2101 from mockito/mockitoguy-patch-2\n\nCommit message directives for CI workflow"
              },
              {
                "oid": "e54b63f76295713dfe2f8a48f1d33320c7394bd7",
                "message": "Avoided parallel workflow execution\n\nAvoided parallel execution of the workflow so that:\r\n - we get better UX (the \"checks\" view in PR does not have duplicated jobs)\r\n - we run less builds (conserves build quota)\r\n\r\nWe *no longer* run CI for ordinary push to any remote branch. We run CI for pushes to the main dev branch or PRs.\r\n\r\nPreventing parallel workflows is reported to GitHub:\r\nhttps://github.community/t/prevent-parallel-workflows/16370"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTIwOTYzMzEyOmU1NGI2M2Y3NjI5NTcxM2RmZTJmOGE0OGYxZDMzMzIwYzczOTRiZDc=",
                "url": "https://github.com/mockito/mockito/pull/2103/commits/e54b63f76295713dfe2f8a48f1d33320c7394bd7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2097,
                "url": "https://github.com/mockito/mockito/issues/2097",
                "title": "Consider reducing CI execution footprint",
                "bodyHTML": "<p dir=\"auto\">Right now we are running CI for:</p>\n<ul dir=\"auto\">\n<li>branch pushes</li>\n<li>PRs</li>\n</ul>\n<p dir=\"auto\">This causes redundant builds to be triggered (example, see actions triggered for PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"740053368\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2096\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2096/hovercard\" href=\"https://github.com/mockito/mockito/pull/2096\">#2096</a>). Redundant builds clutter the UI (reducing dev experience) and may count against our quota of free open source builds. This issue has been discussed on GH before: <a href=\"https://github.community/t/how-to-trigger-an-action-on-push-or-pull-request-but-not-both/16662\" rel=\"nofollow\">https://github.community/t/how-to-trigger-an-action-on-push-or-pull-request-but-not-both/16662</a></p>\n<p dir=\"auto\">Potential solutions:</p>\n<ul dir=\"auto\">\n<li>run only on PRs and pushes the the main dev branch</li>\n<li>use <a href=\"https://github.com/marketplace/actions/skip-duplicate-actions\">https://github.com/marketplace/actions/skip-duplicate-actions</a> (adds complexity to the workflow and requires exposing secrets to yet another 3rd party code)</li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2097",
                "createdAt": "2020-11-10T16:33:26Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "continuous integration"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Enabled releases to Maven Central",
        "url": "https://github.com/mockito/mockito/pull/2111",
        "resourcePath": "/mockito/mockito/pull/2111",
        "createdAt": "2020-11-25T02:51:06Z",
        "number": 2111,
        "mergeCommit": {
          "oid": "98abe38177afc38c102bc8a6cb45bfbcf233272c",
          "message": "Merge pull request #2111 from mockito/mvn-central\n\nEnabled releases to Maven Central [ci maven-central-release]",
          "commitUrl": "https://github.com/mockito/mockito/commit/98abe38177afc38c102bc8a6cb45bfbcf233272c",
          "parents": {
            "nodes": [
              {
                "oid": "fde5abb9f044a6b614eeb6a8c63d25fffe2df210",
                "message": "Keep META-INF folder at top of published mockito-core jar (#2109)\n\nFixes #2108 \r\n[ci maven-central-release]"
              },
              {
                "oid": "3213b49313749da62ee6ed75999161d629ca7292",
                "message": "Enabled releases to Maven Central\n\nFixed the bug with how we controlled Maven Central releases via commit messages.\n\nTesting done: Ran the workflow in a forked repository and b) observed that the information from the commit message is passed to the environment variable."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/shipkit.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTI3MDEwNTM2OjMyMTNiNDkzMTM3NDlkYTYyZWU2ZWQ3NTk5OTE2MWQ2MjljYTcyOTI=",
                "url": "https://github.com/mockito/mockito/pull/2111/commits/3213b49313749da62ee6ed75999161d629ca7292"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2110,
                "url": "https://github.com/mockito/mockito/issues/2110",
                "title": "Release process misses commit message tag",
                "bodyHTML": "<p dir=\"auto\"><a href=\"https://github.com/mockito/mockito/runs/1447478222#step:4:168\">https://github.com/mockito/mockito/runs/1447478222#step:4:168</a></p>\n<p dir=\"auto\"><a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mockito/mockito/commit/fde5abb9f044a6b614eeb6a8c63d25fffe2df210/hovercard\" href=\"https://github.com/mockito/mockito/commit/fde5abb9f044a6b614eeb6a8c63d25fffe2df210\"><tt>fde5abb</tt></a> did contain <code class=\"notranslate\">[ci maven-central-release]</code> and therefore should have published.</p>",
                "resourcePath": "/mockito/mockito/issues/2110",
                "createdAt": "2020-11-24T14:12:09Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "bug"
                      }
                    },
                    {
                      "node": {
                        "name": "continuous integration"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixed the problem with CI instability",
        "url": "https://github.com/mockito/mockito/pull/2155",
        "resourcePath": "/mockito/mockito/pull/2155",
        "createdAt": "2020-12-27T14:48:52Z",
        "number": 2155,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "build.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/shipkit.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTQ1ODE2ODgxOjMyNzE1YzBmZmM0YjM4MjQxOTRkNzNiZWM3Zjg2MzUxOTgxNDlhOTk=",
                "url": "https://github.com/mockito/mockito/pull/2155/commits/32715c0ffc4b3824194d73bec7f8635198149a99"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2134,
                "url": "https://github.com/mockito/mockito/issues/2134",
                "title": "Fix CI instability",
                "bodyHTML": "<p dir=\"auto\">Recent failure: <a href=\"https://github.com/mockito/mockito/runs/1494926496?check_suite_focus=true\">https://github.com/mockito/mockito/runs/1494926496?check_suite_focus=true</a></p>",
                "resourcePath": "/mockito/mockito/issues/2134",
                "createdAt": "2020-12-04T13:43:31Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "continuous integration"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Avoid Gradle module files",
        "url": "https://github.com/mockito/mockito/pull/2160",
        "resourcePath": "/mockito/mockito/pull/2160",
        "createdAt": "2020-12-30T19:30:16Z",
        "number": 2160,
        "mergeCommit": {
          "oid": "9126184434294d9091f259f2e9b68a9e10bc65ae",
          "message": "Merge pull request #2160 from mockito/mockitoguy-patch-4\n\nAvoid Gradle module files",
          "commitUrl": "https://github.com/mockito/mockito/commit/9126184434294d9091f259f2e9b68a9e10bc65ae",
          "parents": {
            "nodes": [
              {
                "oid": "78d8e655c611c661f5bd93b692fcb1b97e771c67",
                "message": "Merge pull request #2161 from mockito/mockitoguy-patch-5\n\nFixed build on Java 15"
              },
              {
                "oid": "2e66d086d026b2deef07ea3c979fd972efab960c",
                "message": "Avoid Gradle module files\n\nAvoid Gradle module files until there is a use case for them. The less we publish the less complexity.\r\n\r\nFixes: #2159"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/java-publication.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTQ3MDYxNTc2OjJlNjZkMDg2ZDAyNmIyZGVlZjA3ZWEzYzk3OWZkOTcyZWZhYjk2MGM=",
                "url": "https://github.com/mockito/mockito/pull/2160/commits/2e66d086d026b2deef07ea3c979fd972efab960c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2159,
                "url": "https://github.com/mockito/mockito/issues/2159",
                "title": "Mockito published maven artifact is missing .module files",
                "bodyHTML": "<p dir=\"auto\">Around Gradle 5.3 new Gradle metadata was introduced (see <a href=\"https://docs.gradle.org/current/userguide/publishing_gradle_module_metadata.html\" rel=\"nofollow\">https://docs.gradle.org/current/userguide/publishing_gradle_module_metadata.html</a>) This allows Gradle builds to publish more detail about dependencies than the lagacy maven pom.</p>\n<p dir=\"auto\">Mockito is generating those files, but they aren't getting uploaded to Maven Central see: <a href=\"https://repo1.maven.org/maven2/org/mockito/mockito-junit-jupiter/3.6.28/\" rel=\"nofollow\">https://repo1.maven.org/maven2/org/mockito/mockito-junit-jupiter/3.6.28/</a></p>\n<p dir=\"auto\">However in the <a href=\"https://repo1.maven.org/maven2/org/mockito/mockito-junit-jupiter/3.6.28/mockito-junit-jupiter-3.6.28.pom\" rel=\"nofollow\">pom.xml</a> it contains the comment that tells Gradle to check for the <code class=\"notranslate\">.module</code> files:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;!--\n This module was also published with a richer model, Gradle metadata,  \n--&gt;\n&lt;!--\n which should be used instead. Do not delete the following line which  \n--&gt;\n&lt;!--\n is to indicate to Gradle or any Gradle module metadata file consumer  \n--&gt;\n&lt;!-- that they should prefer consuming it instead. --&gt;\n&lt;!-- do_not_remove: published-with-gradle-metadata --&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">&lt;!--\n This module was also published with a richer model, Gradle metadata,  \n--&gt;\n&lt;!--\n which should be used instead. Do not delete the following line which  \n--&gt;\n&lt;!--\n is to indicate to Gradle or any Gradle module metadata file consumer  \n--&gt;\n&lt;!-- that they should prefer consuming it instead. --&gt;\n&lt;!-- do_not_remove: published-with-gradle-metadata --&gt;\n</code></pre></div>\n<h2 dir=\"auto\">Solution 1 <a href=\"https://docs.gradle.org/current/userguide/publishing_gradle_module_metadata.html#sub:disabling-gmm-publication\" rel=\"nofollow\">Disable metadata</a>:</h2>\n<p dir=\"auto\">This will remove the comment from the pom.xml and so Gradle won't continue to check for the <code class=\"notranslate\">.module</code> file.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    tasks.withType&lt;GenerateModuleMetadata&gt; {\n        enabled = false\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    tasks.withType&lt;GenerateModuleMetadata&gt; {\n        enabled = false\n    }\n</code></pre></div>\n<h2 dir=\"auto\">Solution 2- Update the maven publishing to include the missing files</h2>\n<p dir=\"auto\">This is the better long-term solution. However I don't have a direct recommendation since I don't have experience in that regard and don't know what is mis-configured.</p>\n<h2 dir=\"auto\">Why hasn't this been a problem before?</h2>\n<p dir=\"auto\">When using <code class=\"notranslate\">mavenCentral()</code> as a repo directly, it serves up a 404 for the missing <code class=\"notranslate\">.module</code> file and Gradle recovers fine. However when using an internal repository like Artifactory, it is common to configure it to return <code class=\"notranslate\">403</code> for missing files to try to obscure data that shouldn't be accessible.</p>\n<p dir=\"auto\">So to reproduce this you would need to use Gradle &gt; 5.3, Using Mockito as a dependency, when using a locked down Maven repository that is configured to serve 403 instead of exposing 404 for missing artifacts.</p>",
                "resourcePath": "/mockito/mockito/issues/2159",
                "createdAt": "2020-12-30T17:25:32Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix reversed order of verify parameters",
        "url": "https://github.com/mockito/mockito/pull/2179",
        "resourcePath": "/mockito/mockito/pull/2179",
        "createdAt": "2021-01-16T10:04:39Z",
        "number": 2179,
        "mergeCommit": {
          "oid": "7b940bcead5240bd030bbe7acbb51c10be0a452b",
          "message": "Fix reversed order of verify parameters (#2179)\n\nFor consistency, the parameters of the method\r\n`MockedStatic.verify(VerificationMode, Verification)`\r\nhave been swapped to\r\n`MockedStatic.verify(Verification, VerificationMode)`\r\nas this order is already used in\r\n`Mockito.verify(T, VerificationMode)`.\r\n\r\nFixes: #2173\r\n\r\n[ci maven-central-release]",
          "commitUrl": "https://github.com/mockito/mockito/commit/7b940bcead5240bd030bbe7acbb51c10be0a452b",
          "parents": {
            "nodes": [
              {
                "oid": "79f06bae95074c7c6d8ce862db100ab74edddf6e",
                "message": "Bump versions.errorprone from 2.4.0 to 2.5.1 (#2176)\n\n* Bump versions.errorprone from 2.4.0 to 2.5.1\r\n\r\nBumps `versions.errorprone` from 2.4.0 to 2.5.1.\r\n\r\nUpdates `error_prone_core` from 2.4.0 to 2.5.1\r\n- [Release notes](https://github.com/google/error-prone/releases)\r\n- [Commits](https://github.com/google/error-prone/compare/v2.4.0...v2.5.1)\r\n\r\nUpdates `error_prone_test_helpers` from 2.4.0 to 2.5.1\r\n- [Release notes](https://github.com/google/error-prone/releases)\r\n- [Commits](https://github.com/google/error-prone/compare/v2.4.0...v2.5.1)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\n* Fix ErrorProne compilation errors\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Tim van der Lippe <tvanderlippe@google.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/MockedStatic.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/MockedStaticImpl.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTU2MTUxNzIxOjNlMzcyOTk1ZDJlZDhiMTEyZTAyNjU2NWRkMWRmM2E5NWI4ZmRjMjM=",
                "url": "https://github.com/mockito/mockito/pull/2179/commits/3e372995d2ed8b112e026565dd1df3a95b8fdc23"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2173,
                "url": "https://github.com/mockito/mockito/issues/2173",
                "title": "Feature request: Unify order of parameters",
                "bodyHTML": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">I just stumbled accross the switched order of the VerificationMode parameter</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.Mockito.verify(T, VerificationMode)\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.Mockito.verify(T, VerificationMode)\n</code></pre></div>\n<p dir=\"auto\">vs</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.MockedStatic.verify(VerificationMode, Verification)\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.MockedStatic.verify(VerificationMode, Verification)\n</code></pre></div>\n<p dir=\"auto\">Is there a reason, the VerificationMode from MockitoStatic is at first position?</p>",
                "resourcePath": "/mockito/mockito/issues/2173",
                "createdAt": "2021-01-12T14:26:35Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "\"But invoked here\" lists the invocation parameters",
        "url": "https://github.com/mockito/mockito/pull/2188",
        "resourcePath": "/mockito/mockito/pull/2188",
        "createdAt": "2021-01-22T20:52:39Z",
        "number": 2188,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/exceptions/Reporter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/verification/checkers/NumberOfInvocationsChecker.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/verification/checkers/NumberOfInvocationsCheckerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTYwMjA1MTczOmNkMzlhN2VmYmE2OTIxOWI2YzM3ODM4Y2VkNzkzZDA5MTM3N2UzZjU=",
                "url": "https://github.com/mockito/mockito/pull/2188/commits/cd39a7efba69219b6c37838ced793d091377e3f5"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2058,
                "url": "https://github.com/mockito/mockito/issues/2058",
                "title": "\"But invoked here\" should list the invocation parameters",
                "bodyHTML": "<p dir=\"auto\">Thanks to Mockito, I just had an assertion failure that I just had a failure thanks to Mockito told me of an issue in my code that I need to fix. The error message looked like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"cLogger.saveError(&quot;Error&quot;, &lt;any string&gt;);\nNever wanted here:\n-&gt; at au.org.greekwelfaresa.idempiere.bpmodels.test.MBPartnerLocationTest.lambda$1(MBPartnerLocationTest.java:118)\nBut invoked here:\n-&gt; at org.compiere.model.PO.save(PO.java:2155)\n-&gt; at org.compiere.model.PO.save(PO.java:2155)\"><pre class=\"notranslate\"><code class=\"notranslate\">cLogger.saveError(\"Error\", &lt;any string&gt;);\nNever wanted here:\n-&gt; at au.org.greekwelfaresa.idempiere.bpmodels.test.MBPartnerLocationTest.lambda$1(MBPartnerLocationTest.java:118)\nBut invoked here:\n-&gt; at org.compiere.model.PO.save(PO.java:2155)\n-&gt; at org.compiere.model.PO.save(PO.java:2155)\n</code></pre></div>\n<p dir=\"auto\">It occurred to me that it might be useful debugging to include not only the <em>place</em> where the invocation happened, but the arguments that were provided for each invocation. Because of the <code class=\"notranslate\">anyString()</code> matcher, it is not immediately obvious what they are - if you're using exact match semantics, then you can infer the parameters from the first line, but that's not possible when you're using a matcher.</p>\n<p dir=\"auto\">This feature could be added on all failure messages, or else only on failure messages when matchers are being used (as it is redundant when you're using exact match).</p>",
                "resourcePath": "/mockito/mockito/issues/2058",
                "createdAt": "2020-10-01T06:50:11Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Publish new minor version to Maven central",
        "url": "https://github.com/mockito/mockito/pull/2213",
        "resourcePath": "/mockito/mockito/pull/2213",
        "createdAt": "2021-02-22T18:46:04Z",
        "number": 2213,
        "mergeCommit": {
          "oid": "900552416c42a494c564a314a34072afc3cc0502",
          "message": "Publish new minor version to Maven central (#2213)\n\n[ci maven-central-release]",
          "commitUrl": "https://github.com/mockito/mockito/commit/900552416c42a494c564a314a34072afc3cc0502",
          "parents": {
            "nodes": [
              {
                "oid": "84774556217c23472e54ff9ffe32bc041a40426d",
                "message": "Fixes #2204: Ignore Groovy methods annotated with Internal (#2207)\n\nStarting from Groovy 3.0, compiler-generated methods such as\r\n`getMetaClass()` are no longer marked synthetic, therefore ByteBuddy\r\nstopped automatically ignoring them. Instead they are now annotated with\r\n`@groovy.transform.Internal`. Update `isGroovyMethod()` to also check\r\nthis new annotation."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "version.properties"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTc3ODU4NDk3OjJmMmRmY2VlZjQ4ZTAyNDE5ZDFhY2Y0ZjAzZjdkMGM2YWQ4ODg4ZGE=",
                "url": "https://github.com/mockito/mockito/pull/2213/commits/2f2dfceef48e02419d1acf4f03f7d0c6ad8888da"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2212,
                "url": "https://github.com/mockito/mockito/issues/2212",
                "title": "Please do a release, as we want to use mockito on jdk 17.",
                "bodyHTML": "<p dir=\"auto\">Hi.<br>\nI'm tracking why commons-io will fail ci on JDK17.<br>\nAfter tracking I finally found out the latest mockito relase use ASM 9.0 which cannot handle jdk 17.<br>\nAs you are using 9.1 now, who can handle JDK17,  I hope we can get it a release...<br>\nThanks!<br>\n<a href=\"https://github.com/xenoamess-fork/commons-io/runs/1945142044\">https://github.com/xenoamess-fork/commons-io/runs/1945142044</a></p>\n<p dir=\"auto\">check that</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Read the <a href=\"https://github.com/mockito/mockito/blob/release/3.x/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2212",
                "createdAt": "2021-02-21T13:00:11Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Include cause when FieldReader fails to access field",
        "url": "https://github.com/mockito/mockito/pull/2267",
        "resourcePath": "/mockito/mockito/pull/2267",
        "createdAt": "2021-04-14T01:46:02Z",
        "number": 2267,
        "mergeCommit": {
          "oid": "09df1111e3b5a5ebdae658f376461103e4ad889e",
          "message": "Include cause when FieldReader fails to access field (#2267)\n\nFixes #2266",
          "commitUrl": "https://github.com/mockito/mockito/commit/09df1111e3b5a5ebdae658f376461103e4ad889e",
          "parents": {
            "nodes": [
              {
                "oid": "2fa2a635e63c3a2f3010b73d6416506d56e0e614",
                "message": "Make exceptions for Inorder.verify more specific (#2263)\n\nFixes #2242"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/reflection/FieldReader.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/module-test/src/test/java/org/mockito/moduletest/ModuleAccessTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/module-test/src/test/java/org/mockito/moduletest/ModuleUtil.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjE0ODY0MTc4OjUxYzZlYTkwZjZlYzk1ZWNmYjJkNmM5ZTM5MjJiOTc3ZDJhNWEwYzc=",
                "url": "https://github.com/mockito/mockito/pull/2267/commits/51c6ea90f6ec95ecfb2d6c9e3922b977d2a5a0c7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2266,
                "url": "https://github.com/mockito/mockito/issues/2266",
                "title": "Swallowed illegal access exceptions make it harder to debug modularity-related issues",
                "bodyHTML": "<h3 dir=\"auto\">Issue Summary</h3>\n<p dir=\"auto\">In FieldReader and ReflectionMemberAccessor, if an IllegalAccessException is thrown, it will be suppressed.</p>\n<p dir=\"auto\">At the very least, Mockito should include the original exception. When testing a modular application, it is common to have packages encapsulated by default.</p>\n<h3 dir=\"auto\">Stacktrace</h3>\n<p dir=\"auto\">In FieldReader, the IllegalAccessException is caught. The exception is re-thrown but the cause is lost.</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/mockito/mockito/blob/ea000f72444ed4c7e409441aedc3021951b89660/src/main/java/org/mockito/internal/util/reflection/FieldReader.java#L28-L35\">mockito/src/main/java/org/mockito/internal/util/reflection/FieldReader.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 28 to 35\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/mockito/mockito/commit/ea000f72444ed4c7e409441aedc3021951b89660\">ea000f7</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L28\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"28\"></td>\n          <td id=\"LC28\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Object</span> <span class=\"pl-en\">read</span>() { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L29\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"29\"></td>\n          <td id=\"LC29\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">try</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L30\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"30\"></td>\n          <td id=\"LC30\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">return</span> <span class=\"pl-s1\">accessor</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-s1\">field</span>, <span class=\"pl-s1\">target</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L31\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"31\"></td>\n          <td id=\"LC31\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> <span class=\"pl-s1\">e</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L32\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"32\"></td>\n          <td id=\"LC32\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">MockitoException</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L33\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"33\"></td>\n          <td id=\"LC33\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">                 <span class=\"pl-s\">\"Cannot read state from field: \"</span> + <span class=\"pl-s1\">field</span> + <span class=\"pl-s\">\", on instance: \"</span> + <span class=\"pl-s1\">target</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L34\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"34\"></td>\n          <td id=\"LC34\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L35\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"35\"></td>\n          <td id=\"LC35\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Using a debugger, the IllegalAccessException can be observed: <a href=\"https://pastebin.com/GsnU29QV\" rel=\"nofollow\">https://pastebin.com/GsnU29QV</a></p>\n<h3 dir=\"auto\">Problematic Code</h3>\n<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">Use <code class=\"notranslate\">module-info</code> in the project and don't open the package under test to mockito.</p>\n</li>\n<li>\n<p dir=\"auto\">Use the <code class=\"notranslate\">MockitoExtension</code> for JUnit:</p>\n</li>\n</ol>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@ExtendWith(MockitoExtension.class)\npublic class MyClassTest {\n\n  private final MyType mock;\n\n  public MyClassTest(@Mock MyType mock) {\n    this.mock = mock;\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">ExtendWith</span>(<span class=\"pl-smi\">MockitoExtension</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MyClassTest</span> {\n\n  <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">MyType</span> <span class=\"pl-s1\">mock</span>;\n\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">MyClassTest</span>(<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span> <span class=\"pl-smi\">MyType</span> <span class=\"pl-s1\">mock</span>) {\n    <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">mock</span> = <span class=\"pl-s1\">mock</span>;\n  }\n}</pre></div>\n<h3 dir=\"auto\">Environment</h3>\n<p dir=\"auto\">Mockito-Junit-Jupiter 3.9.0<br>\nZulu16.28+11-CA (build 16+36)</p>",
                "resourcePath": "/mockito/mockito/issues/2266",
                "createdAt": "2021-04-14T01:32:32Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use the parent classloader if the context classloader is a child of it.",
        "url": "https://github.com/mockito/mockito/pull/2306",
        "resourcePath": "/mockito/mockito/pull/2306",
        "createdAt": "2021-05-25T18:52:03Z",
        "number": 2306,
        "mergeCommit": {
          "oid": "66998ea7f81c6adf49983cea081586e19760b7a0",
          "message": "Use the parent classloader if the context classloader is a child of it (#2306)\n\nThis should only affect cases that previously would have thrown an\r\nexception.\r\n\r\nFixes #2303\r\n\r\nCo-authored-by: Charles Munger <clm@google.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/66998ea7f81c6adf49983cea081586e19760b7a0",
          "parents": {
            "nodes": [
              {
                "oid": "ae6dd4efbd0aa4a58558fb689bbed8be474cfe68",
                "message": "Bump shipkit-auto-version from 1.1.11 to 1.1.14 (#2307)\n\nBumps shipkit-auto-version from 1.1.11 to 1.1.14.\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/SubclassBytecodeGenerator.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/bugs/creation/PackagePrivateWithContextClassLoaderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjUyNzAyMTIzOjk3OTAzYjk5MmU2NjRjZjQ2MjE0NzU3ZDcyN2JhMjNjNWU5NDYxMzE=",
                "url": "https://github.com/mockito/mockito/pull/2306/commits/97903b992e664cf46214757d727ba23c5e946131"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2303,
                "url": "https://github.com/mockito/mockito/issues/2303",
                "title": "\"The type is not public and its mock class is loaded by a different class loader\" with a context classloader that delegates",
                "bodyHTML": "<p dir=\"auto\">Repro case:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"package com.google.clm.mockitobug;\n\nimport static org.mockito.Mockito.mock;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.junit.runners.JUnit4;\n\n/**\n * My goal is to create a context classloader that is identical in every way to the existing one,\n * except that it has a different object identity and possibly some extra fields. However, even a\n * basic classloader that always delegates causes problems for mockito.\n */\n@RunWith(JUnit4.class)\npublic final class ClassLoaderTest {\n\n  @Test\n  public void mockPackagePrivateInterface() {\n    ClassLoader old = Thread.currentThread().getContextClassLoader();\n    Thread.currentThread().setContextClassLoader(new ClassLoader(old) {});\n    // fails\n    Object unused = mock(PackagePrivate.class);\n  }\n\n  @Test\n  public void mockPublicInterface() {\n    ClassLoader old = Thread.currentThread().getContextClassLoader();\n    Thread.currentThread().setContextClassLoader(new ClassLoader(old) {});\n    // succeeds\n    Object unused = mock(Public.class);\n  }\n\n  interface PackagePrivate {}\n\n  public interface Public {}\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">package</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">clm</span>.<span class=\"pl-s1\">mockitobug</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mockito</span>.<span class=\"pl-s1\">mock</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runner</span>.<span class=\"pl-s1\">RunWith</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runners</span>.<span class=\"pl-s1\">JUnit4</span>;\n\n<span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> * My goal is to create a context classloader that is identical in every way to the existing one,</span>\n<span class=\"pl-c\"> * except that it has a different object identity and possibly some extra fields. However, even a</span>\n<span class=\"pl-c\"> * basic classloader that always delegates causes problems for mockito.</span>\n<span class=\"pl-c\"> */</span>\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">RunWith</span>(<span class=\"pl-smi\">JUnit4</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">ClassLoaderTest</span> {\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">mockPackagePrivateInterface</span>() {\n    <span class=\"pl-smi\">ClassLoader</span> <span class=\"pl-s1\">old</span> = <span class=\"pl-smi\">Thread</span>.<span class=\"pl-en\">currentThread</span>().<span class=\"pl-en\">getContextClassLoader</span>();\n    <span class=\"pl-smi\">Thread</span>.<span class=\"pl-en\">currentThread</span>().<span class=\"pl-en\">setContextClassLoader</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">ClassLoader</span>(<span class=\"pl-s1\">old</span>) {});\n    <span class=\"pl-c\">// fails</span>\n    <span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">unused</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">PackagePrivate</span>.<span class=\"pl-k\">class</span>);\n  }\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">mockPublicInterface</span>() {\n    <span class=\"pl-smi\">ClassLoader</span> <span class=\"pl-s1\">old</span> = <span class=\"pl-smi\">Thread</span>.<span class=\"pl-en\">currentThread</span>().<span class=\"pl-en\">getContextClassLoader</span>();\n    <span class=\"pl-smi\">Thread</span>.<span class=\"pl-en\">currentThread</span>().<span class=\"pl-en\">setContextClassLoader</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">ClassLoader</span>(<span class=\"pl-s1\">old</span>) {});\n    <span class=\"pl-c\">// succeeds</span>\n    <span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">unused</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">Public</span>.<span class=\"pl-k\">class</span>);\n  }\n\n  <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">PackagePrivate</span> {}\n\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">Public</span> {}\n}</pre></div>\n<p dir=\"auto\">Error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: interface com.google.clm.mockitobug.ClassLoaderTest$PackagePrivate.\n\nMockito can only mock non-private &amp; non-final classes.\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\nJava               : 11\nJVM vendor name    : Google Inc.\nJVM vendor version : 11.0.10+9-google-release-371350251\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 11.0.10+9-google-release-371350251\nJVM info           : mixed mode, sharing\nOS name            : Linux\nOS version         : 4.15.0-smp-912.23.0.0\n\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: \nCannot create mock for interface com.google.clm.mockitobug.ClassLoaderTest$PackagePrivate\n\nThe type is not public and its mock class is loaded by a different class loader.\nThis can have multiple reasons:\n - You are mocking a class with additional interfaces of another class loader\n - Mockito is loaded by a different class loader than the mocked type (e.g. with OSGi)\n - The thread's context class loader is different than the mock's class loader\n\tat com.google.clm.mockitobug.ClassLoaderTest.mockPackagePrivateInterface(ClassLoaderTest.java:21)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:57)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:59)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:81)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:327)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:84)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:292)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:73)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:270)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:370)\n\tat com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:108)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:104)\n\tat com.google.testing.junit.runner.RunnerShell$2.run(RunnerShell.java:34)\n\tat com.google.testing.junit.runner.GoogleTestRunner.runTestsInSuite(GoogleTestRunner.java:200)\n\tat com.google.testing.junit.runner.GoogleTestRunner.runTestsInSuite(GoogleTestRunner.java:184)\n\tat com.google.testing.junit.runner.GoogleTestRunner.main(GoogleTestRunner.java:137)\nCaused by: org.mockito.exceptions.base.MockitoException: \nCannot create mock for interface com.google.clm.mockitobug.ClassLoaderTest$PackagePrivate\n\nThe type is not public and its mock class is loaded by a different class loader.\nThis can have multiple reasons:\n - You are mocking a class with additional interfaces of another class loader\n - Mockito is loaded by a different class loader than the mocked type (e.g. with OSGi)\n - The thread's context class loader is different than the mock's class loader\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:153)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:366)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:175)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:377)\n\t... 27 more\n\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: interface com.google.clm.mockitobug.ClassLoaderTest$PackagePrivate.\n\nMockito can only mock non-private &amp; non-final classes.\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\nJava               : 11\nJVM vendor name    : Google Inc.\nJVM vendor version : 11.0.10+9-google-release-371350251\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 11.0.10+9-google-release-371350251\nJVM info           : mixed mode, sharing\nOS name            : Linux\nOS version         : 4.15.0-smp-912.23.0.0\n\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: \nCannot create mock for interface com.google.clm.mockitobug.ClassLoaderTest$PackagePrivate\n\nThe type is not public and its mock class is loaded by a different class loader.\nThis can have multiple reasons:\n - You are mocking a class with additional interfaces of another class loader\n - Mockito is loaded by a different class loader than the mocked type (e.g. with OSGi)\n - The thread's context class loader is different than the mock's class loader\n\tat com.google.clm.mockitobug.ClassLoaderTest.mockPackagePrivateInterface(ClassLoaderTest.java:21)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:57)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:59)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:81)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:327)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:84)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:292)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:73)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:290)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:60)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:270)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:370)\n\tat com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:108)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\n\tat com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:104)\n\tat com.google.testing.junit.runner.RunnerShell$2.run(RunnerShell.java:34)\n\tat com.google.testing.junit.runner.GoogleTestRunner.runTestsInSuite(GoogleTestRunner.java:200)\n\tat com.google.testing.junit.runner.GoogleTestRunner.runTestsInSuite(GoogleTestRunner.java:184)\n\tat com.google.testing.junit.runner.GoogleTestRunner.main(GoogleTestRunner.java:137)\nCaused by: org.mockito.exceptions.base.MockitoException: \nCannot create mock for interface com.google.clm.mockitobug.ClassLoaderTest$PackagePrivate\n\nThe type is not public and its mock class is loaded by a different class loader.\nThis can have multiple reasons:\n - You are mocking a class with additional interfaces of another class loader\n - Mockito is loaded by a different class loader than the mocked type (e.g. with OSGi)\n - The thread's context class loader is different than the mock's class loader\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:153)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:366)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:175)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:377)\n\t... 27 more\n\n</code></pre></div>\n<p dir=\"auto\">If mockito actually tried to use the classloader, I think it would work. Since we don't see an interesting exception deep in the stack, my guess is that mockito is doing some extra validation to avoid generating bytecode it thinks would fail.</p>",
                "resourcePath": "/mockito/mockito/issues/2303",
                "createdAt": "2021-05-18T16:29:47Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Bump versions.bytebuddy from 1.11.5 to 1.11.6",
        "url": "https://github.com/mockito/mockito/pull/2351",
        "resourcePath": "/mockito/mockito/pull/2351",
        "createdAt": "2021-07-05T18:04:08Z",
        "number": 2351,
        "mergeCommit": {
          "oid": "847b41bd383b6fb12c9a85f74938b7082586c833",
          "message": "Bump versions.bytebuddy from 1.11.5 to 1.11.6 (#2351)\n\nBumps `versions.bytebuddy` from 1.11.5 to 1.11.6.\r\n\r\nUpdates `byte-buddy` from 1.11.5 to 1.11.6\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.5...byte-buddy-1.11.6)\r\n\r\nUpdates `byte-buddy-agent` from 1.11.5 to 1.11.6\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.5...byte-buddy-1.11.6)\r\n\r\nUpdates `byte-buddy-android` from 1.11.5 to 1.11.6\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.5...byte-buddy-1.11.6)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: net.bytebuddy:byte-buddy\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-agent\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-android\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/847b41bd383b6fb12c9a85f74938b7082586c833",
          "parents": {
            "nodes": [
              {
                "oid": "c790ed8e00144b9758b8d078db3c6dc96f98c27d",
                "message": "Bump gradle-errorprone-plugin from 2.0.1 to 2.0.2 (#2347)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/dependencies.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjgzODY1NTM5OjBiOTNmYTQwNDM2NzY4OTNkZGQ2NjBjZmViNTQyNDQ3MTRhY2JlMTY=",
                "url": "https://github.com/mockito/mockito/pull/2351/commits/0b93fa4043676893ddd660cfeb54244714acbe16"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2340,
                "url": "https://github.com/mockito/mockito/issues/2340",
                "title": "Mockito 3.11.2 (?) fails with \"can't load this type of class file\"",
                "bodyHTML": "<p dir=\"auto\"><strong>Broken version</strong>: 3.11.2?<br>\n<strong>Working versions:</strong> 3.10.0</p>\n<p dir=\"auto\"><strong>Description</strong></p>\n<p dir=\"auto\">All was working OK with 3.8.0 and we upgraded to 3.11.2 but this presented the problem below. I have sequentially downgraded and it seems 3.10.0 doesn't present me with any problems.</p>\n<p dir=\"auto\">I have not been able to confidently isolate it to this version because I have also experienced <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"911586461\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2316\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2316/hovercard\" href=\"https://github.com/mockito/mockito/issues/2316\">#2316</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"921145129\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2327\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2327/hovercard\" href=\"https://github.com/mockito/mockito/issues/2327\">#2327</a> in the interim versions.</p>\n<p dir=\"auto\">Our context is Android and a <code class=\"notranslate\">com.android.test</code> instrumented test module. We are using <code class=\"notranslate\">org.mockito:mockito-core</code>, plus <code class=\"notranslate\">org.mockito:mockito-android</code> with the same version, and <code class=\"notranslate\">org.mockito.kotlin:mockito-kotlin:3.2.0</code>.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"2021-06-22 21:35:57.029 9913-9913/ourapp.package.debug E/MonitoringInstr: Exception encountered by: ourapp.package.testing.integrations.TestApplication@b4bbfaf. Dumping thread state to outputs and pining for the fjords.\n    org.mockito.exceptions.base.MockitoException: \n    Failed to release mocks\n    \n    This should not happen unless you are using a third-part mock maker\n        at ourapp.package.testing.integrations.TestApplication.onCreate(OurAppTestRunner.kt:44)\n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1192)\n        at androidx.test.runner.MonitoringInstrumentation.callApplicationOnCreate(MonitoringInstrumentation.java:428)\n        at android.app.ActivityThread.handleMakeApplication(ActivityThread.java:7507)\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:7446)\n        at android.app.ActivityThread.access$1500(ActivityThread.java:301)\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2148)\n        at android.os.Handler.dispatchMessage(Handler.java:106)\n        at android.os.Looper.loop(Looper.java:246)\n        at android.app.ActivityThread.main(ActivityThread.java:8512)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:602)\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1130)\n     Caused by: java.lang.IllegalStateException: Could not initialize plugin: interface org.mockito.plugins.MockMaker (alternate: null)\n        at org.mockito.internal.configuration.plugins.PluginLoader$1.invoke(PluginLoader.java:84)\n        at java.lang.reflect.Proxy.invoke(Proxy.java:1006)\n        at $Proxy3.isTypeMockable(Unknown Source)\n        at org.mockito.internal.util.MockUtil.typeMockabilityOf(MockUtil.java:33)\n        at org.mockito.internal.util.MockCreationValidator.validateType(MockCreationValidator.java:22)\n        at org.mockito.internal.creation.MockSettingsImpl.validatedSettings(MockSettingsImpl.java:250)\n        at org.mockito.internal.creation.MockSettingsImpl.build(MockSettingsImpl.java:232)\n        at org.mockito.internal.MockitoCore.mock(MockitoCore.java:83)\n        at org.mockito.Mockito.mock(Mockito.java:1954)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.processAnnotationForMock(MockAnnotationProcessor.java:66)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:27)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:24)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.createMockFor(IndependentAnnotationEngine.java:45)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.process(IndependentAnnotationEngine.java:73)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.processIndependentAnnotations(InjectingAnnotationEngine.java:74)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.process(InjectingAnnotationEngine.java:48)\n        at org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:82)\n        at org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:100)\n        at ourapp.package.testing.integrations.TestApplication.onCreate(OurAppTestRunner.kt:44)\u00a0\n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1192)\u00a0\n        at androidx.test.runner.MonitoringInstrumentation.callApplicationOnCreate(MonitoringInstrumentation.java:428)\u00a0\n        at android.app.ActivityThread.handleMakeApplication(ActivityThread.java:7507)\u00a0\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:7446)\u00a0\n        at android.app.ActivityThread.access$1500(ActivityThread.java:301)\u00a0\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2148)\u00a0\n        at android.os.Handler.dispatchMessage(Handler.java:106)\u00a0\n        at android.os.Looper.loop(Looper.java:246)\u00a0\n        at android.app.ActivityThread.main(ActivityThread.java:8512)\u00a0\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:602)\u00a0\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1130)\u00a0\n     Caused by: java.lang.IllegalStateException: Failed to load interface org.mockito.plugins.MockMaker implementation declared in sun.misc.CompoundEnumeration@67d84a2\n        at org.mockito.internal.configuration.plugins.PluginInitializer.loadImpl(PluginInitializer.java:57)\n        at org.mockito.internal.configuration.plugins.PluginLoader.loadPlugin(PluginLoader.java:65)\n        at org.mockito.internal.configuration.plugins.PluginLoader.loadPlugin(PluginLoader.java:50)\n        at org.mockito.internal.configuration.plugins.PluginRegistry.&lt;init&gt;(PluginRegistry.java:26)\n        at org.mockito.internal.configuration.plugins.Plugins.&lt;clinit&gt;(Plugins.java:20)\n        at org.mockito.internal.configuration.plugins.Plugins.getAnnotationEngine(Plugins.java:67)\n        at org.mockito.internal.configuration.GlobalConfiguration.tryGetPluginAnnotationEngine(GlobalConfiguration.java:57)\n        at org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:81)\n        at org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:100)\u00a0\n        at ourapp.package.testing.integrations.TestApplication.onCreate(OurAppTestRunner.kt:44)\u00a0\n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1192)\u00a0\n        at androidx.test.runner.MonitoringInstrumentation.callApplicationOnCreate(MonitoringInstrumentation.java:428)\u00a0\n        at android.app.ActivityThread.handleMakeApplication(ActivityThread.java:7507)\u00a0\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:7446)\u00a0\n        at android.app.ActivityThread.access$1500(ActivityThread.java:301)\u00a0\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2148)\u00a0\n        at android.os.Handler.dispatchMessage(Handler.java:106)\u00a0\n        at android.os.Looper.loop(Looper.java:246)\u00a0\n        at android.app.ActivityThread.main(ActivityThread.java:8512)\u00a0\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:602)\u00a0\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1130)\u00a0\n     Caused by: java.lang.reflect.InvocationTargetException\n2021-06-22 21:35:57.029 9913-9913/ourapp.package.debug E/MonitoringInstr:     at java.lang.reflect.Constructor.newInstance0(Native Method)\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:343)\n        at org.mockito.internal.configuration.plugins.PluginInitializer.loadImpl(PluginInitializer.java:52)\n        \t... 21 more\n     Caused by: java.lang.ExceptionInInitializerError\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher.of(JavaDispatcher.java:104)\n        at net.bytebuddy.description.type.TypeDescription$ForLoadedType.&lt;clinit&gt;(TypeDescription.java:8282)\n        at net.bytebuddy.description.type.TypeDescription$ForLoadedType.of(TypeDescription.java:8355)\n        at net.bytebuddy.implementation.bind.annotation.Super$Binder.&lt;clinit&gt;(Super.java:222)\n        at net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder.&lt;clinit&gt;(TargetMethodAnnotationDrivenBinder.java:166)\n        at net.bytebuddy.implementation.MethodDelegation.withDefaultConfiguration(MethodDelegation.java:601)\n        at net.bytebuddy.implementation.MethodDelegation.to(MethodDelegation.java:271)\n        at org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.&lt;init&gt;(SubclassBytecodeGenerator.java:64)\n        at org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.&lt;init&gt;(SubclassBytecodeGenerator.java:74)\n        at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.&lt;init&gt;(SubclassByteBuddyMockMaker.java:37)\n        at org.mockito.android.internal.creation.AndroidByteBuddyMockMaker.&lt;init&gt;(AndroidByteBuddyMockMaker.java:22)\n        \t... 24 more\n     Caused by: java.lang.IllegalStateException: Failed to create invoker for net.bytebuddy.utility.dispatcher.JavaDispatcher$Invoker\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$DynamicClassLoader.invoker(JavaDispatcher.java:1270)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$Invoker$CreationAction.run(JavaDispatcher.java:431)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$Invoker$CreationAction.run(JavaDispatcher.java:420)\n        at java.security.AccessController.doPrivileged(AccessController.java:43)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher.&lt;clinit&gt;(JavaDispatcher.java:65)\n        \t... 35 more\n     Caused by: java.lang.UnsupportedOperationException: can't load this type of class file\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:591)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$DynamicClassLoader.invoker(JavaDispatcher.java:1266)\"><pre class=\"notranslate\"><code class=\"notranslate\">2021-06-22 21:35:57.029 9913-9913/ourapp.package.debug E/MonitoringInstr: Exception encountered by: ourapp.package.testing.integrations.TestApplication@b4bbfaf. Dumping thread state to outputs and pining for the fjords.\n    org.mockito.exceptions.base.MockitoException: \n    Failed to release mocks\n    \n    This should not happen unless you are using a third-part mock maker\n        at ourapp.package.testing.integrations.TestApplication.onCreate(OurAppTestRunner.kt:44)\n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1192)\n        at androidx.test.runner.MonitoringInstrumentation.callApplicationOnCreate(MonitoringInstrumentation.java:428)\n        at android.app.ActivityThread.handleMakeApplication(ActivityThread.java:7507)\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:7446)\n        at android.app.ActivityThread.access$1500(ActivityThread.java:301)\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2148)\n        at android.os.Handler.dispatchMessage(Handler.java:106)\n        at android.os.Looper.loop(Looper.java:246)\n        at android.app.ActivityThread.main(ActivityThread.java:8512)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:602)\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1130)\n     Caused by: java.lang.IllegalStateException: Could not initialize plugin: interface org.mockito.plugins.MockMaker (alternate: null)\n        at org.mockito.internal.configuration.plugins.PluginLoader$1.invoke(PluginLoader.java:84)\n        at java.lang.reflect.Proxy.invoke(Proxy.java:1006)\n        at $Proxy3.isTypeMockable(Unknown Source)\n        at org.mockito.internal.util.MockUtil.typeMockabilityOf(MockUtil.java:33)\n        at org.mockito.internal.util.MockCreationValidator.validateType(MockCreationValidator.java:22)\n        at org.mockito.internal.creation.MockSettingsImpl.validatedSettings(MockSettingsImpl.java:250)\n        at org.mockito.internal.creation.MockSettingsImpl.build(MockSettingsImpl.java:232)\n        at org.mockito.internal.MockitoCore.mock(MockitoCore.java:83)\n        at org.mockito.Mockito.mock(Mockito.java:1954)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.processAnnotationForMock(MockAnnotationProcessor.java:66)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:27)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:24)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.createMockFor(IndependentAnnotationEngine.java:45)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.process(IndependentAnnotationEngine.java:73)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.processIndependentAnnotations(InjectingAnnotationEngine.java:74)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.process(InjectingAnnotationEngine.java:48)\n        at org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:82)\n        at org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:100)\n        at ourapp.package.testing.integrations.TestApplication.onCreate(OurAppTestRunner.kt:44)\u00a0\n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1192)\u00a0\n        at androidx.test.runner.MonitoringInstrumentation.callApplicationOnCreate(MonitoringInstrumentation.java:428)\u00a0\n        at android.app.ActivityThread.handleMakeApplication(ActivityThread.java:7507)\u00a0\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:7446)\u00a0\n        at android.app.ActivityThread.access$1500(ActivityThread.java:301)\u00a0\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2148)\u00a0\n        at android.os.Handler.dispatchMessage(Handler.java:106)\u00a0\n        at android.os.Looper.loop(Looper.java:246)\u00a0\n        at android.app.ActivityThread.main(ActivityThread.java:8512)\u00a0\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:602)\u00a0\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1130)\u00a0\n     Caused by: java.lang.IllegalStateException: Failed to load interface org.mockito.plugins.MockMaker implementation declared in sun.misc.CompoundEnumeration@67d84a2\n        at org.mockito.internal.configuration.plugins.PluginInitializer.loadImpl(PluginInitializer.java:57)\n        at org.mockito.internal.configuration.plugins.PluginLoader.loadPlugin(PluginLoader.java:65)\n        at org.mockito.internal.configuration.plugins.PluginLoader.loadPlugin(PluginLoader.java:50)\n        at org.mockito.internal.configuration.plugins.PluginRegistry.&lt;init&gt;(PluginRegistry.java:26)\n        at org.mockito.internal.configuration.plugins.Plugins.&lt;clinit&gt;(Plugins.java:20)\n        at org.mockito.internal.configuration.plugins.Plugins.getAnnotationEngine(Plugins.java:67)\n        at org.mockito.internal.configuration.GlobalConfiguration.tryGetPluginAnnotationEngine(GlobalConfiguration.java:57)\n        at org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:81)\n        at org.mockito.MockitoAnnotations.initMocks(MockitoAnnotations.java:100)\u00a0\n        at ourapp.package.testing.integrations.TestApplication.onCreate(OurAppTestRunner.kt:44)\u00a0\n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1192)\u00a0\n        at androidx.test.runner.MonitoringInstrumentation.callApplicationOnCreate(MonitoringInstrumentation.java:428)\u00a0\n        at android.app.ActivityThread.handleMakeApplication(ActivityThread.java:7507)\u00a0\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:7446)\u00a0\n        at android.app.ActivityThread.access$1500(ActivityThread.java:301)\u00a0\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2148)\u00a0\n        at android.os.Handler.dispatchMessage(Handler.java:106)\u00a0\n        at android.os.Looper.loop(Looper.java:246)\u00a0\n        at android.app.ActivityThread.main(ActivityThread.java:8512)\u00a0\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:602)\u00a0\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1130)\u00a0\n     Caused by: java.lang.reflect.InvocationTargetException\n2021-06-22 21:35:57.029 9913-9913/ourapp.package.debug E/MonitoringInstr:     at java.lang.reflect.Constructor.newInstance0(Native Method)\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:343)\n        at org.mockito.internal.configuration.plugins.PluginInitializer.loadImpl(PluginInitializer.java:52)\n        \t... 21 more\n     Caused by: java.lang.ExceptionInInitializerError\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher.of(JavaDispatcher.java:104)\n        at net.bytebuddy.description.type.TypeDescription$ForLoadedType.&lt;clinit&gt;(TypeDescription.java:8282)\n        at net.bytebuddy.description.type.TypeDescription$ForLoadedType.of(TypeDescription.java:8355)\n        at net.bytebuddy.implementation.bind.annotation.Super$Binder.&lt;clinit&gt;(Super.java:222)\n        at net.bytebuddy.implementation.bind.annotation.TargetMethodAnnotationDrivenBinder$ParameterBinder.&lt;clinit&gt;(TargetMethodAnnotationDrivenBinder.java:166)\n        at net.bytebuddy.implementation.MethodDelegation.withDefaultConfiguration(MethodDelegation.java:601)\n        at net.bytebuddy.implementation.MethodDelegation.to(MethodDelegation.java:271)\n        at org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.&lt;init&gt;(SubclassBytecodeGenerator.java:64)\n        at org.mockito.internal.creation.bytebuddy.SubclassBytecodeGenerator.&lt;init&gt;(SubclassBytecodeGenerator.java:74)\n        at org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMaker.&lt;init&gt;(SubclassByteBuddyMockMaker.java:37)\n        at org.mockito.android.internal.creation.AndroidByteBuddyMockMaker.&lt;init&gt;(AndroidByteBuddyMockMaker.java:22)\n        \t... 24 more\n     Caused by: java.lang.IllegalStateException: Failed to create invoker for net.bytebuddy.utility.dispatcher.JavaDispatcher$Invoker\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$DynamicClassLoader.invoker(JavaDispatcher.java:1270)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$Invoker$CreationAction.run(JavaDispatcher.java:431)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$Invoker$CreationAction.run(JavaDispatcher.java:420)\n        at java.security.AccessController.doPrivileged(AccessController.java:43)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher.&lt;clinit&gt;(JavaDispatcher.java:65)\n        \t... 35 more\n     Caused by: java.lang.UnsupportedOperationException: can't load this type of class file\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:591)\n        at net.bytebuddy.utility.dispatcher.JavaDispatcher$DynamicClassLoader.invoker(JavaDispatcher.java:1266)\n</code></pre></div>\n<p dir=\"auto\">I appreciate the above may not be enormously helpful, and I'm happy to try and provide more information on request.</p>\n<p dir=\"auto\">Mocked subjects by this runner are:</p>\n<ul dir=\"auto\">\n<li>an <code class=\"notranslate\">open class</code></li>\n<li>a sealed class</li>\n<li>various public interfaces</li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2340",
                "createdAt": "2021-06-22T20:47:28Z",
                "labels": {
                  "edges": []
                }
              }
            },
            {
              "node": {
                "number": 2349,
                "url": "https://github.com/mockito/mockito/issues/2349",
                "title": "mockito-inline:3.11.2 | Unsupported class file major version 62",
                "bodyHTML": "<p dir=\"auto\">I'm using a Java 18 early access build and while using mockito-core:3.11.2 everything was working fine, but when I switched to mockito-inline:3.11.2 (in order to use static mocks), I got the following error for the previously working tests. However the tests involving only static mocks seem to work fine.</p>\n<p dir=\"auto\">I already tried to manually set the latest ByteBuddy dependency (1.11.5) in my build.gradle file, but that didn't help at all.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"//LockSynchronization is a simple public class implementing a public interface\nLockSynchronization lockSynchronizationMock = mock(LockSynchronization.class);\"><pre class=\"notranslate\"><code class=\"notranslate\">//LockSynchronization is a simple public class implementing a public interface\nLockSynchronization lockSynchronizationMock = mock(LockSynchronization.class);\n</code></pre></div>\n<p dir=\"auto\">causes</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Mockito cannot mock this class: class com.ba.sequencer.LockSynchronization.\n\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\nJava               : 18\nJVM vendor name    : Oracle Corporation\nJVM vendor version : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM info           : mixed mode\nOS name            : Linux\nOS version         : 5.4.72-microsoft-standard-WSL2\n\n\nYou are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: Could not modify all classes [interface com.ba.sequencer.SynchronizationStrategy, class java.lang.Object, class com.ba.sequencer.LockSynchronization]\norg.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: class com.ba.sequencer.LockSynchronization.\n\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\nJava               : 18\nJVM vendor name    : Oracle Corporation\nJVM vendor version : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM info           : mixed mode\nOS name            : Linux\nOS version         : 5.4.72-microsoft-standard-WSL2\n\n\nYou are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: Could not modify all classes [interface com.ba.sequencer.SynchronizationStrategy, class java.lang.Object, class com.ba.sequencer.LockSynchronization]\n\tat com.ba.sequencer.OrderedSequencerProvider.provideArguments(OrderedSequencerProvider.java:22)\n\tat org.junit.jupiter.params.ParameterizedTestExtension.arguments(ParameterizedTestExtension.java:137)\n\tat org.junit.jupiter.params.ParameterizedTestExtension.lambda$provideTestTemplateInvocationContexts$2(ParameterizedTestExtension.java:88)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:273)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:135)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n\tSuppressed: org.junit.platform.commons.PreconditionViolationException: Configuration error: You must configure at least one set of arguments for this @ParameterizedTest\n\t\tat org.junit.platform.commons.util.Preconditions.condition(Preconditions.java:281)\n\t\tat org.junit.jupiter.params.ParameterizedTestExtension.lambda$provideTestTemplateInvocationContexts$6(ParameterizedTestExtension.java:94)\n\t\tat java.base/java.util.stream.AbstractPipeline.close(AbstractPipeline.java:323)\n\t\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:273)\n\t\t... 76 more\nCaused by: org.mockito.exceptions.base.MockitoException: Could not modify all classes [interface com.ba.sequencer.SynchronizationStrategy, class java.lang.Object, class com.ba.sequencer.LockSynchronization]\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:153)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:366)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:175)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:377)\n\t... 91 more\nCaused by: java.lang.IllegalStateException: \nByte Buddy could not instrument all classes within the mock's type hierarchy\n\nThis problem should never occur for javac-compiled classes. This problem has been observed for classes that are:\n - Compiled by older versions of scalac\n - Classes that are part of the Android distribution\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:280)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.mockClass(InlineBytecodeGenerator.java:213)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.lambda$mockClass$0(TypeCachingBytecodeGenerator.java:47)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:153)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:366)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:175)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:377)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:40)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.createMockType(InlineDelegateByteBuddyMockMaker.java:391)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.doCreateMock(InlineDelegateByteBuddyMockMaker.java:351)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.createMock(InlineDelegateByteBuddyMockMaker.java:330)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:58)\n\tat org.mockito.internal.util.MockUtil.createMock(MockUtil.java:53)\n\tat org.mockito.internal.MockitoCore.mock(MockitoCore.java:84)\n\tat org.mockito.Mockito.mock(Mockito.java:1954)\n\tat org.mockito.Mockito.mock(Mockito.java:1865)\n\t... 91 more\nCaused by: java.lang.IllegalArgumentException: Unsupported class file major version 62\n\tat net.bytebuddy.jar.asm.ClassReader.&lt;init&gt;(ClassReader.java:196)\n\tat net.bytebuddy.jar.asm.ClassReader.&lt;init&gt;(ClassReader.java:177)\n\tat net.bytebuddy.jar.asm.ClassReader.&lt;init&gt;(ClassReader.java:163)\n\tat net.bytebuddy.utility.OpenedClassReader.of(OpenedClassReader.java:86)\n\tat net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining.create(TypeWriter.java:3890)\n\tat net.bytebuddy.dynamic.scaffold.TypeWriter$Default.make(TypeWriter.java:2167)\n\tat net.bytebuddy.dynamic.scaffold.inline.RedefinitionDynamicTypeBuilder.make(RedefinitionDynamicTypeBuilder.java:224)\n\tat net.bytebuddy.dynamic.scaffold.inline.AbstractInliningDynamicTypeBuilder.make(AbstractInliningDynamicTypeBuilder.java:123)\n\tat net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase.make(DynamicType.java:3658)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.transform(InlineBytecodeGenerator.java:391)\n\tat java.instrument/java.lang.instrument.ClassFileTransformer.transform(ClassFileTransformer.java:244)\n\tat java.instrument/sun.instrument.TransformerManager.transform(TransformerManager.java:188)\n\tat java.instrument/sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:541)\n\tat java.instrument/sun.instrument.InstrumentationImpl.retransformClasses0(Native Method)\n\tat java.instrument/sun.instrument.InstrumentationImpl.retransformClasses(InstrumentationImpl.java:169)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:276)\n\t... 106 more\"><pre class=\"notranslate\"><code class=\"notranslate\">Mockito cannot mock this class: class com.ba.sequencer.LockSynchronization.\n\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\nJava               : 18\nJVM vendor name    : Oracle Corporation\nJVM vendor version : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM info           : mixed mode\nOS name            : Linux\nOS version         : 5.4.72-microsoft-standard-WSL2\n\n\nYou are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: Could not modify all classes [interface com.ba.sequencer.SynchronizationStrategy, class java.lang.Object, class com.ba.sequencer.LockSynchronization]\norg.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: class com.ba.sequencer.LockSynchronization.\n\nIf you're not sure why you're getting this error, please report to the mailing list.\n\n\nJava               : 18\nJVM vendor name    : Oracle Corporation\nJVM vendor version : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 18-internal+0-adhoc.fruizah.panama-foreign\nJVM info           : mixed mode\nOS name            : Linux\nOS version         : 5.4.72-microsoft-standard-WSL2\n\n\nYou are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: Could not modify all classes [interface com.ba.sequencer.SynchronizationStrategy, class java.lang.Object, class com.ba.sequencer.LockSynchronization]\n\tat com.ba.sequencer.OrderedSequencerProvider.provideArguments(OrderedSequencerProvider.java:22)\n\tat org.junit.jupiter.params.ParameterizedTestExtension.arguments(ParameterizedTestExtension.java:137)\n\tat org.junit.jupiter.params.ParameterizedTestExtension.lambda$provideTestTemplateInvocationContexts$2(ParameterizedTestExtension.java:88)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:273)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:107)\n\tat org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:42)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:135)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:414)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\n\tat java.base/java.lang.Thread.run(Thread.java:833)\n\tSuppressed: org.junit.platform.commons.PreconditionViolationException: Configuration error: You must configure at least one set of arguments for this @ParameterizedTest\n\t\tat org.junit.platform.commons.util.Preconditions.condition(Preconditions.java:281)\n\t\tat org.junit.jupiter.params.ParameterizedTestExtension.lambda$provideTestTemplateInvocationContexts$6(ParameterizedTestExtension.java:94)\n\t\tat java.base/java.util.stream.AbstractPipeline.close(AbstractPipeline.java:323)\n\t\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:273)\n\t\t... 76 more\nCaused by: org.mockito.exceptions.base.MockitoException: Could not modify all classes [interface com.ba.sequencer.SynchronizationStrategy, class java.lang.Object, class com.ba.sequencer.LockSynchronization]\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:153)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:366)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:175)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:377)\n\t... 91 more\nCaused by: java.lang.IllegalStateException: \nByte Buddy could not instrument all classes within the mock's type hierarchy\n\nThis problem should never occur for javac-compiled classes. This problem has been observed for classes that are:\n - Compiled by older versions of scalac\n - Classes that are part of the Android distribution\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:280)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.mockClass(InlineBytecodeGenerator.java:213)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.lambda$mockClass$0(TypeCachingBytecodeGenerator.java:47)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:153)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:366)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:175)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:377)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:40)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.createMockType(InlineDelegateByteBuddyMockMaker.java:391)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.doCreateMock(InlineDelegateByteBuddyMockMaker.java:351)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.createMock(InlineDelegateByteBuddyMockMaker.java:330)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:58)\n\tat org.mockito.internal.util.MockUtil.createMock(MockUtil.java:53)\n\tat org.mockito.internal.MockitoCore.mock(MockitoCore.java:84)\n\tat org.mockito.Mockito.mock(Mockito.java:1954)\n\tat org.mockito.Mockito.mock(Mockito.java:1865)\n\t... 91 more\nCaused by: java.lang.IllegalArgumentException: Unsupported class file major version 62\n\tat net.bytebuddy.jar.asm.ClassReader.&lt;init&gt;(ClassReader.java:196)\n\tat net.bytebuddy.jar.asm.ClassReader.&lt;init&gt;(ClassReader.java:177)\n\tat net.bytebuddy.jar.asm.ClassReader.&lt;init&gt;(ClassReader.java:163)\n\tat net.bytebuddy.utility.OpenedClassReader.of(OpenedClassReader.java:86)\n\tat net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining.create(TypeWriter.java:3890)\n\tat net.bytebuddy.dynamic.scaffold.TypeWriter$Default.make(TypeWriter.java:2167)\n\tat net.bytebuddy.dynamic.scaffold.inline.RedefinitionDynamicTypeBuilder.make(RedefinitionDynamicTypeBuilder.java:224)\n\tat net.bytebuddy.dynamic.scaffold.inline.AbstractInliningDynamicTypeBuilder.make(AbstractInliningDynamicTypeBuilder.java:123)\n\tat net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase.make(DynamicType.java:3658)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.transform(InlineBytecodeGenerator.java:391)\n\tat java.instrument/java.lang.instrument.ClassFileTransformer.transform(ClassFileTransformer.java:244)\n\tat java.instrument/sun.instrument.TransformerManager.transform(TransformerManager.java:188)\n\tat java.instrument/sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:541)\n\tat java.instrument/sun.instrument.InstrumentationImpl.retransformClasses0(Native Method)\n\tat java.instrument/sun.instrument.InstrumentationImpl.retransformClasses(InstrumentationImpl.java:169)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:276)\n\t... 106 more\n</code></pre></div>\n<p dir=\"auto\">Is there a way to get these tests working under mockito-inline:3.11.2 or is Java 18 not supported?</p>",
                "resourcePath": "/mockito/mockito/issues/2349",
                "createdAt": "2021-07-01T17:59:46Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Applied @CheckReturnValue to some classes",
        "url": "https://github.com/mockito/mockito/pull/2379",
        "resourcePath": "/mockito/mockito/pull/2379",
        "createdAt": "2021-08-02T11:10:23Z",
        "number": 2379,
        "mergeCommit": {
          "oid": "f32973d4e709830a5a9fb19c54f32659023d2b03",
          "message": "Move @CheckReturnValue from methods to class scope (#2379)",
          "commitUrl": "https://github.com/mockito/mockito/commit/f32973d4e709830a5a9fb19c54f32659023d2b03",
          "parents": {
            "nodes": [
              {
                "oid": "5891de126d398ec09a040711b688176ff27b7d7c",
                "message": "Bump espresso-core from 3.3.0 to 3.4.0 (#2372)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/ArgumentCaptor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/ArgumentMatchers.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/Mockito.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/Stubber.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/StaticMockingExperimentTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/InvalidStateDetectionTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/misuse/DetectingMisusedMatchersTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/stacktrace/ClickableStackTracesWhenFrameworkMisusedTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/stacktrace/ModellingDescriptiveMessagesTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/verification/VerificationExcludingStubsTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzAxMzY4ODQ2OjFhYzE5NjgwMThjMzk5MmZiYmNjNjUwMzZjMGViMThlMTgyNzBhZGY=",
                "url": "https://github.com/mockito/mockito/pull/2379/commits/1ac1968018c3992fbbcc65036c0eb18e18270adf"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2363,
                "url": "https://github.com/mockito/mockito/issues/2363",
                "title": "Apply @CheckReturnValue more aggressively",
                "bodyHTML": "<p dir=\"auto\">Mockito has a local copy of <a href=\"https://github.com/mockito/mockito/blob/main/src/main/java/org/mockito/CheckReturnValue.java\"><code class=\"notranslate\">@CheckReturnValue</code></a> (presumably to avoid a dependency on <a href=\"https://github.com/google/error-prone\">errorprone</a>, but it's only used on a few APIs.  There's a <em>lot</em> of additional APIs that it could be applied to, an in fact the best solution is often to annotate entire classes (and then opt-out specific APIs) or entire packages (via <code class=\"notranslate\">package-info.java</code>).</p>\n<p dir=\"auto\">Top APIs to add <code class=\"notranslate\">@CheckReturnValue</code> to:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">org.mockito.ArgumentMatchers</code></li>\n<li><code class=\"notranslate\">org.mockito.ArgumentCaptor</code></li>\n<li><code class=\"notranslate\">org.mockito.Mockito</code></li>\n<li><code class=\"notranslate\">org.mockito.stubbing.Stubber</code></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2363",
                "createdAt": "2021-07-19T15:47:05Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Downgrade Android gradle plugin",
        "url": "https://github.com/mockito/mockito/pull/2380",
        "resourcePath": "/mockito/mockito/pull/2380",
        "createdAt": "2021-08-02T15:31:58Z",
        "number": 2380,
        "mergeCommit": {
          "oid": "88bd3066a198dcbd32b5aa827b2fa3513ac8561a",
          "message": "Downgrade Android gradle plugin (#2380)\n\nThe newer version is only compatible with new versions of\r\nIntelliJ/Android Studio. To ensure that older versions of IntelliJ can\r\nstill open this project, we should downgrade our version for now.\r\n\r\nThis Gradle plugin version supports IntelliJ 2020.3 and newer.\r\n\r\nFixes #2378",
          "commitUrl": "https://github.com/mockito/mockito/commit/88bd3066a198dcbd32b5aa827b2fa3513ac8561a",
          "parents": {
            "nodes": [
              {
                "oid": "f8da4cea9269ec35a0199b9a988de7a9d558287f",
                "message": "Bump material from 1.3.0 to 1.4.0 (#2373)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "build.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzAxNTY4ODEyOmJlMjY4YTJhMjZkZmMyM2NjYWExZjU5N2FiOTM1NDM3MDc1MGIzZDA=",
                "url": "https://github.com/mockito/mockito/pull/2380/commits/be268a2a26dfc23ccaa1f597ab9354370750b3d0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2378,
                "url": "https://github.com/mockito/mockito/issues/2378",
                "title": "how to solve gradle sync failed after 'Add basic Android instrumented and unit tests'",
                "bodyHTML": "<p dir=\"auto\">Hello</p>\n<p dir=\"auto\">I got gradle sync fail with 'Add basic Android instrumented and unit tests'(<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"946170805\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2360\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2360/hovercard\" href=\"https://github.com/mockito/mockito/pull/2360\">#2360</a>).</p>\n<blockquote>\n<p dir=\"auto\">This version of the Android Support plugin for IntelliJ IDEA (or Android Studio) cannot open this project, please retry with version 4.2 or newer.</p>\n</blockquote>\n<p dir=\"auto\">I think that it is caused with below.</p>\n<p dir=\"auto\">build.gradle</p>\n<blockquote>\n<p dir=\"auto\">classpath 'com.android.tools.build:gradle:4.2.1'</p>\n</blockquote>\n<p dir=\"auto\">the downgrading of gradle version is needed but I'm not sure it is proper...</p>\n<blockquote>\n<p dir=\"auto\">classpath 'com.android.tools.build:gradle:4.1.2'</p>\n</blockquote>\n<p dir=\"auto\">Regards</p>",
                "resourcePath": "/mockito/mockito/issues/2378",
                "createdAt": "2021-08-01T01:32:57Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix verifyNoMoreInteractions inOrder invocations for spies",
        "url": "https://github.com/mockito/mockito/pull/2395",
        "resourcePath": "/mockito/mockito/pull/2395",
        "createdAt": "2021-08-20T13:54:57Z",
        "number": 2395,
        "mergeCommit": {
          "oid": "da6e8f73d805b8ed845bae32e745e3d6bf35a261",
          "message": "Fix verifyNoMoreInteractions inOrder invocations for spies (#2395)\n\nFixes #2394",
          "commitUrl": "https://github.com/mockito/mockito/commit/da6e8f73d805b8ed845bae32e745e3d6bf35a261",
          "parents": {
            "nodes": [
              {
                "oid": "a53c3d451e756b51a96700624f517f4fcdd07aed",
                "message": "Bump versions.bytebuddy from 1.11.12 to 1.11.13 (#2393)\n\nBumps `versions.bytebuddy` from 1.11.12 to 1.11.13.\r\n\r\nUpdates `byte-buddy` from 1.11.12 to 1.11.13\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.12...byte-buddy-1.11.13)\r\n\r\nUpdates `byte-buddy-agent` from 1.11.12 to 1.11.13\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.12...byte-buddy-1.11.13)\r\n\r\nUpdates `byte-buddy-android` from 1.11.12 to 1.11.13\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.12...byte-buddy-1.11.13)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: net.bytebuddy:byte-buddy\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-agent\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-android\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/InOrderImpl.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/spies/SpiesWithRealEqualsAndInOrderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzE2NzU3MTI4OjhmMTgxNDI0ZmNhMjU2YWNjZjNiYTRiMjE0NGRhNjIwMDk2NmU0YTg=",
                "url": "https://github.com/mockito/mockito/pull/2395/commits/8f181424fca256accf3ba4b2144da6200966e4a8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2394,
                "url": "https://github.com/mockito/mockito/issues/2394",
                "title": "Regression with InOrder verification after #2369",
                "bodyHTML": "<p dir=\"auto\">The following test starts failing after <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mockito/mockito/commit/123beb8311ed6303ba71d682cff8434fe36b7f0f/hovercard\" href=\"https://github.com/mockito/mockito/commit/123beb8311ed6303ba71d682cff8434fe36b7f0f\"><tt>123beb8</tt></a>. It looks like the change to call actual <code class=\"notranslate\">equals</code> and <code class=\"notranslate\">hashCode</code> methods is catching a call to <code class=\"notranslate\">equals</code> inside the implementation of <code class=\"notranslate\">InOrder</code>.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"package com.test;\n\nimport static org.mockito.Mockito.inOrder;\nimport static org.mockito.Mockito.spy;\n\nimport org.junit.Test;\nimport org.mockito.InOrder;\n\npublic class AppTest {\n\n  static class Foo {\n    void foo() {}\n  }\n\n  @Test\n  public void test() {\n    Foo mock1 = spy(new Foo());\n    Foo mock2 = spy(new Foo());\n    mock1.foo();\n    InOrder order = inOrder(mock1, mock2);\n    order.verify(mock1).foo();\n    order.verifyNoMoreInteractions();\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">package</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">test</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mockito</span>.<span class=\"pl-s1\">inOrder</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mockito</span>.<span class=\"pl-s1\">spy</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">InOrder</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">AppTest</span> {\n\n  <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Foo</span> {\n    <span class=\"pl-smi\">void</span> <span class=\"pl-en\">foo</span>() {}\n  }\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">test</span>() {\n    <span class=\"pl-smi\">Foo</span> <span class=\"pl-s1\">mock1</span> = <span class=\"pl-en\">spy</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Foo</span>());\n    <span class=\"pl-smi\">Foo</span> <span class=\"pl-s1\">mock2</span> = <span class=\"pl-en\">spy</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Foo</span>());\n    <span class=\"pl-s1\">mock1</span>.<span class=\"pl-en\">foo</span>();\n    <span class=\"pl-smi\">InOrder</span> <span class=\"pl-s1\">order</span> = <span class=\"pl-en\">inOrder</span>(<span class=\"pl-s1\">mock1</span>, <span class=\"pl-s1\">mock2</span>);\n    <span class=\"pl-s1\">order</span>.<span class=\"pl-en\">verify</span>(<span class=\"pl-s1\">mock1</span>).<span class=\"pl-en\">foo</span>();\n    <span class=\"pl-s1\">order</span>.<span class=\"pl-en\">verifyNoMoreInteractions</span>();\n  }\n}</pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"No interactions wanted here:\n-&gt; at com.test.AppTest.test(AppTest.java:22)\nBut found this interaction on mock 'foo':\n-&gt; at java.base/java.util.LinkedList.indexOf(LinkedList.java:609)\n\tat com.test.AppTest.test(AppTest.java:22)\"><pre class=\"notranslate\"><code class=\"notranslate\">No interactions wanted here:\n-&gt; at com.test.AppTest.test(AppTest.java:22)\nBut found this interaction on mock 'foo':\n-&gt; at java.base/java.util.LinkedList.indexOf(LinkedList.java:609)\n\tat com.test.AppTest.test(AppTest.java:22)\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/2394",
                "createdAt": "2021-08-19T20:39:25Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Properly resolve ProxyMockMaker by alias and handle null value as argument for the invocation handler",
        "url": "https://github.com/mockito/mockito/pull/2408",
        "resourcePath": "/mockito/mockito/pull/2408",
        "createdAt": "2021-08-25T20:15:21Z",
        "number": 2408,
        "mergeCommit": {
          "oid": "50d6f97da2ddfa52d572a38407b78badcd3e29cc",
          "message": "Merge pull request #2408 from mockito/proxy-fixes\n\nProperly resolve ProxyMockMaker by alias and handle null value as argument for the invocation handler",
          "commitUrl": "https://github.com/mockito/mockito/commit/50d6f97da2ddfa52d572a38407b78badcd3e29cc",
          "parents": {
            "nodes": [
              {
                "oid": "3d3c1652f7abe40227e50741b1304d21047ca71d",
                "message": "Bump kotlinVersion from 1.5.21 to 1.5.30 (#2403)\n\nBumps `kotlinVersion` from 1.5.21 to 1.5.30.\r\n\r\nUpdates `kotlin-gradle-plugin` from 1.5.21 to 1.5.30\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/v1.5.30/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/compare/v1.5.21...v1.5.30)\r\n\r\nUpdates `kotlin-stdlib` from 1.5.21 to 1.5.30\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/v1.5.30/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/compare/v1.5.21...v1.5.30)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.jetbrains.kotlin:kotlin-gradle-plugin\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: org.jetbrains.kotlin:kotlin-stdlib\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              },
              {
                "oid": "963a87202115ddab2334f634f0adbe985609bcca",
                "message": "Properly resolve ProxyMockMaker by alias and handle null value as argument for the invocation handler"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/plugins/PluginInitializer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/plugins/PluginLoader.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/plugins/PluginRegistry.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/proxy/ProxyMockMaker.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/configuration/plugins/DefaultMockitoPluginsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/creation/proxy/ProxyMockMakerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzE5OTc1ODk1Ojk2M2E4NzIwMjExNWRkYWIyMzM0ZjYzNGYwYWRiZTk4NTYwOWJjY2E=",
                "url": "https://github.com/mockito/mockito/pull/2408/commits/963a87202115ddab2334f634f0adbe985609bcca"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2406,
                "url": "https://github.com/mockito/mockito/issues/2406",
                "title": "Mock Maker Proxy fails with NPE",
                "bodyHTML": "<p dir=\"auto\">I had the idea to use the new mock-maker-proxy in a way that i could use mockito in native compilation with graalvm.<br>\nBut I even fail to run a simple test without native compiling.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@SpringBootTest\nclass MockbeanNativeApplicationTests {\n\n\t@MockBean\n\tSampleService sampleService;\n\n\t@Test\n\tvoid contextLoads() {\n\t\tsampleService.doSomething();\n\t\tMockito.verify(sampleService).doSomething();\n\t}\n\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@SpringBootTest\nclass MockbeanNativeApplicationTests {\n\n\t@MockBean\n\tSampleService sampleService;\n\n\t@Test\n\tvoid contextLoads() {\n\t\tsampleService.doSomething();\n\t\tMockito.verify(sampleService).doSomething();\n\t}\n\n}\n</code></pre></div>\n<p dir=\"auto\">throws:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException: Cannot read the array length because the return value of &quot;org.mockito.invocation.Invocation.getRawArguments()&quot; is null\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.NullPointerException: Cannot read the array length because the return value of \"org.mockito.invocation.Invocation.getRawArguments()\" is null\n</code></pre></div>\n<p dir=\"auto\">when running with org.mockito.internal.creation.proxy.ProxyMockMaker</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)<br>\nmockito 3.12.2<br>\njdk 21.2.0.r16-grl<br>\nos ubuntu</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n<a href=\"https://github.com/eiswind/mockbean-spring-native\">https://github.com/eiswind/mockbean-spring-native</a></p>\n</li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2406",
                "createdAt": "2021-08-25T08:45:46Z",
                "labels": {
                  "edges": []
                }
              }
            },
            {
              "node": {
                "number": 2407,
                "url": "https://github.com/mockito/mockito/issues/2407",
                "title": "mock-maker-proxy alias throws CNF",
                "bodyHTML": "<p dir=\"auto\">The problematic code (if that's possible) is copied here;<br>\nsame as in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"978882765\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2406\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2406/hovercard\" href=\"https://github.com/mockito/mockito/issues/2406\">#2406</a></p>\n<p dir=\"auto\">throws</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.lang.IllegalStateException: Failed to load interface org.mockito.plugins.MockMaker implementation declared in java.lang.CompoundEnumeration@110844f6\nCaused by: java.lang.ClassNotFoundException: mock-maker-proxy\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: java.lang.IllegalStateException: Failed to load interface org.mockito.plugins.MockMaker implementation declared in java.lang.CompoundEnumeration@110844f6\nCaused by: java.lang.ClassNotFoundException: mock-maker-proxy\n</code></pre></div>\n<p dir=\"auto\">mockito 3.12.3<br>\njvm 21.2.0.r16-grl</p>\n<p dir=\"auto\">Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n<a href=\"https://github.com/eiswind/mockbean-spring-native\">https://github.com/eiswind/mockbean-spring-native</a><br>\n(I had to give the FQN in the extension file)</p>",
                "resourcePath": "/mockito/mockito/issues/2407",
                "createdAt": "2021-08-25T08:51:01Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #2412 : Add toString to AtMost, Only, After and Timeout.",
        "url": "https://github.com/mockito/mockito/pull/2413",
        "resourcePath": "/mockito/mockito/pull/2413",
        "createdAt": "2021-08-29T17:15:20Z",
        "number": 2413,
        "mergeCommit": {
          "oid": "66a4a5c05fc332b7973602e447060e5c0cdde3db",
          "message": "Fixes #2412: Add toString to AtMost, Only, After and Timeout. (#2413)",
          "commitUrl": "https://github.com/mockito/mockito/commit/66a4a5c05fc332b7973602e447060e5c0cdde3db",
          "parents": {
            "nodes": [
              {
                "oid": "d57deb6dcdb73221ffcc6f171c680a7203d7a1c4",
                "message": "Merge pull request #2411 from mockito/TimvdLippe-patch-2\n\nUpgrade to Gradle 7.2"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/verification/AtMost.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/verification/Only.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/verification/After.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/verification/Timeout.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/verification/DummyVerificationMode.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/verification/AtMostXVerificationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/verification/OnlyVerificationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/verification/VerificationWithAfterTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/verification/VerificationWithTimeoutTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzIxOTg4MTQ0OmVmMTAzMGJhNjRlMmEyZjEzMTI4NTA2N2QyNWQ1MDJiZDJkYTc3MmM=",
                "url": "https://github.com/mockito/mockito/pull/2413/commits/ef1030ba64e2a2f131285067d25d502bd2da772c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2412,
                "url": "https://github.com/mockito/mockito/issues/2412",
                "title": "Some VerificationModes don't have a toString implementation.",
                "bodyHTML": "<p dir=\"auto\">Some user-facing VerificationModes don't have a <code class=\"notranslate\">toString()</code> implementation. This includes:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">AtMost</code></li>\n<li><code class=\"notranslate\">Only</code></li>\n<li><code class=\"notranslate\">After</code></li>\n<li><code class=\"notranslate\">Timeout</code></li>\n</ul>\n<p dir=\"auto\">I ran into this issue while using Mockito with a proprietary <a href=\"https://jasmine.github.io/\" rel=\"nofollow\">Jasmine</a>-like library for JUnit. Here is a short example written with JUnit and the open-source runner <a href=\"https://github.com/mscharhag/oleaster\">Oleaster</a>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@RunWith(OleasterRunner.class)\npublic class DemoTest {\n\n    private MyClass myClass;\n\n    {\n        describe(&quot;demo&quot;, () -&gt; {\n\n            beforeEach(() -&gt; {\n                myClass = Mockito.mock(MyClass.class);\n                myClass.myMethod();\n            });\n\n            verifyMyMethodCalled(atLeast(1));\n            verifyMyMethodCalled(atMost(1));\n            verifyMyMethodCalled(only());\n            verifyMyMethodCalled(after(1));\n        });\n    }\n\n    private void verifyMyMethodCalled(VerificationMode verificationMode) {\n        it(String.format(&quot;should call myMethod. %s&quot;, verificationMode), () -&gt; {\n            verify(myClass, verificationMode).myMethod();\n        });\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@RunWith(OleasterRunner.class)\npublic class DemoTest {\n\n    private MyClass myClass;\n\n    {\n        describe(\"demo\", () -&gt; {\n\n            beforeEach(() -&gt; {\n                myClass = Mockito.mock(MyClass.class);\n                myClass.myMethod();\n            });\n\n            verifyMyMethodCalled(atLeast(1));\n            verifyMyMethodCalled(atMost(1));\n            verifyMyMethodCalled(only());\n            verifyMyMethodCalled(after(1));\n        });\n    }\n\n    private void verifyMyMethodCalled(VerificationMode verificationMode) {\n        it(String.format(\"should call myMethod. %s\", verificationMode), () -&gt; {\n            verify(myClass, verificationMode).myMethod();\n        });\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">Extracting the assertion and the test-naming part to a specific method (<code class=\"notranslate\">verifyMyMethodCalled(VerificationMode verificationMode)</code>) saves a lot of boilerplate and helps with maintainability, especially since a real-life test class will most likely be longer than this example. However, the following screenshot shows why the last 3 verificationModes aren't so helpful without a proper <code class=\"notranslate\">toString()</code> method:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/22927506/131226758-72a58f27-c1fb-44e2-8db2-70ab5476c7f5.png\"><img src=\"https://user-images.githubusercontent.com/22927506/131226758-72a58f27-c1fb-44e2-8db2-70ab5476c7f5.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">I fixed this, in my use case, this by extending the offending <code class=\"notranslate\">VerificationMode</code> in a custom factory method:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"private static VerificationMode atMost(int times) {\n    return new AtMost(times) {\n        @Override\n        public void verify(VerificationData data) {\n            super.verify(data);\n        }\n\n        @Override\n        public String toString() {\n            return &quot;Wanted invocations count: at most &quot; + times;\n        }\n    };\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">private static VerificationMode atMost(int times) {\n    return new AtMost(times) {\n        @Override\n        public void verify(VerificationData data) {\n            super.verify(data);\n        }\n\n        @Override\n        public String toString() {\n            return \"Wanted invocations count: at most \" + times;\n        }\n    };\n}\n</code></pre></div>\n<p dir=\"auto\">This quickly becomes cumbersome however, if you want to do it for multiple <code class=\"notranslate\">VerificationMode</code>s or in multiple projects. Since most user-facing <code class=\"notranslate\">VerificationMode</code>s already have a <code class=\"notranslate\">toString()</code> method (e.g. <code class=\"notranslate\">atLeast</code> in my example), the missing <code class=\"notranslate\">toString()</code> methods could be included in Mockito.</p>\n<p dir=\"auto\">I have a PR that is almost ready for this, and would gladly submit it.</p>\n<p dir=\"auto\">EDIT: added <code class=\"notranslate\">Timeout</code> to the list.</p>",
                "resourcePath": "/mockito/mockito/issues/2412",
                "createdAt": "2021-08-28T18:05:32Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove all deprecated APIs for Mockito 4",
        "url": "https://github.com/mockito/mockito/pull/2418",
        "resourcePath": "/mockito/mockito/pull/2418",
        "createdAt": "2021-09-01T17:26:27Z",
        "number": 2418,
        "mergeCommit": {
          "oid": "caf35b24e2764df0498469526ecb3e7ec68a0430",
          "message": "Remove all deprecated APIs (#2418)\n\nAll of these APIs have been marked as deprecated and have been present\r\nin Mockito for quite a while. To cleanup our API surface and reduce\r\ntechnical debt, let's remove these long-deprecated methods/classes.\r\n\r\nAn overview of now-deleted classes/methods:\r\n- org.mockito.Matchers which was an alias for\r\norg.mockito.ArgumentMatchers\r\n- org.mockito.ArgumentMatchers#{anyObject,anyVararg} both which were\r\naliases for org.mockito.ArgumentMatchers#any\r\n- org.mockito.ArgumentMatchers#any*Of, which were aliases for the same\r\nmethod name without the Of and the generic parameters (which were\r\nignored)\r\n- org.mockito.ArgumentMatchers#{is}{Not}Null(Class) which took a class\r\nwhich was ignored. Aliases for the same methods without the parameter\r\n- org.mockito.MockedStatic#verify which had the parameter types reversed\r\n- org.mockito.Mockito#verifyZeroInteractions an alias of\r\nverifyNoMoreInteractions\r\n- org.mockito.Mockito#debug framework integration API that we later\r\nrefactored\r\n- org.mockito.configuration.AnnotationEngine which was leaking internal\r\nAPIs and instead users should use org.mockito.plugins.AnnotationEngine\r\n- org.mockito.exceptions.verification.TooLittleActualInvocations fixed\r\nthe grammar from \"Little\" to \"Few\"\r\n- Numerous internal APIs that we never officially supported and can now\r\nbe removed\r\n- org.mockito.plugins.InstantiatorProvider which was leaking internal\r\nAPIs and instead users should use InstantiatorProvider2 (we should\r\nprobably rename back to remove the number in a future major release)\r\n- org.mockito.runners a package that hosted several old JUnit runners\r\nwhich were no longer supported. Users should instead use\r\norg.mockito.junit.MockitoJUnitRunner which is our official JUnit4\r\nrunner.\r\n\r\nSince these APIs are removed, this change effectively defines Mockito 4.",
          "commitUrl": "https://github.com/mockito/mockito/commit/caf35b24e2764df0498469526ecb3e7ec68a0430",
          "parents": {
            "nodes": [
              {
                "oid": "916e61ecad96fd0eebc43d5470916a81f1720d6b",
                "message": "Bump kotlinx-coroutines-core from 1.5.1-native-mt to 1.5.2-native-mt (#2420)\n\nBumps [kotlinx-coroutines-core](https://github.com/Kotlin/kotlinx.coroutines) from 1.5.1-native-mt to 1.5.2-native-mt.\r\n- [Release notes](https://github.com/Kotlin/kotlinx.coroutines/releases)\r\n- [Changelog](https://github.com/Kotlin/kotlinx.coroutines/blob/master/CHANGES.md)\r\n- [Commits](https://github.com/Kotlin/kotlinx.coroutines/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.jetbrains.kotlinx:kotlinx-coroutines-core\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/verification/OnlyVerificationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/verification/PrintingVerboseTypesWithArgumentsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/verification/VerificationOnMultipleMocksUsingMatchersTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/verification/VerificationUsingMatchersTest.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "subprojects/deprecatedPluginsTest/deprecatedPluginsTest.gradle"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "subprojects/deprecatedPluginsTest/src/test/java/org/mockitousage/plugins/DeprecatedInstantiatorProviderTest.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "subprojects/deprecatedPluginsTest/src/test/java/org/mockitousage/plugins/MyDeprecatedInstantiatorProvider.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "subprojects/deprecatedPluginsTest/src/test/resources/mockito-extensions/org.mockito.plugins.InstantiatorProvider"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "subprojects/extTest/src/test/java/org/mockitousage/plugins/instantiator/MyInstantiatorProvider.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "subprojects/extTest/src/test/resources/mockito-extensions/org.mockito.plugins.InstantiatorProvider"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzI0NzA4Mzg5OjdhYzAzZDlkZWZlNDJmNTRkYzFlNzA1Y2MwMjUzZTljOWRkOTQzYmI=",
                "url": "https://github.com/mockito/mockito/pull/2418/commits/7ac03d9defe42f54dc1e705cc0253e9c9dd943bb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1517,
                "url": "https://github.com/mockito/mockito/issues/1517",
                "title": "Mockito 4",
                "bodyHTML": "<p dir=\"auto\">Suggested scope of Mockito 4</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <del>Move Java version compatibility to 8+</del> - implemented in Mockito 3</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Enable strict stubbing by default in JUnit4 test runners (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"190517072\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/769\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/769/hovercard\" href=\"https://github.com/mockito/mockito/issues/769\">#769</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Remove all deprecated Mockito 2 classes (<a href=\"https://github.com/mockito/mockito/search?q=deprecated&amp;unscoped_q=deprecated\">https://github.com/mockito/mockito/search?q=deprecated&amp;unscoped_q=deprecated</a>)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Un-incubate (or promote) incubating features</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Write migration guide for existing users\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Write ErrorProne refactoring check that automatically moves all runners to <code class=\"notranslate\">Silent</code>, so that companies can gradually upgrade.</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Move Junit5 extension from subproject to core project.</li>\n</ul>\n<p dir=\"auto\">Any comments or feedback?</p>",
                "resourcePath": "/mockito/mockito/issues/1517",
                "createdAt": "2018-10-11T00:56:41Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove all Incubating annotations",
        "url": "https://github.com/mockito/mockito/pull/2437",
        "resourcePath": "/mockito/mockito/pull/2437",
        "createdAt": "2021-10-01T15:17:21Z",
        "number": 2437,
        "mergeCommit": {
          "oid": "7032574ce1fb65e5dbdcf24f65f87766d7124db3",
          "message": "Remove all Incubating annotations (#2437)\n\nFor all of these APIs, we have been shipping them for at least 1 major\r\nrelease. We consider all of these APIs part of the public API contract\r\nnow and therefore we should mark them as such.\r\n\r\nThis PR removes all usages of the annotation. If we were to later remove\r\nan API, it will first have to be deprecated and then removed in a\r\nsubsequent major release. However, we have no plans to do so with any of\r\nthese APIs.",
          "commitUrl": "https://github.com/mockito/mockito/commit/7032574ce1fb65e5dbdcf24f65f87766d7124db3",
          "parents": {
            "nodes": [
              {
                "oid": "c8dbc10d2060d1b800cc4d0d558736439db57929",
                "message": "Fix spelling in old release notes (#2439)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/Answer6.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/Stubbing.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/ValidableAnswer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/VoidAnswer1.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/VoidAnswer2.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/VoidAnswer3.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/VoidAnswer4.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/VoidAnswer5.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/stubbing/VoidAnswer6.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/verification/VerificationEvent.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v84skTXa2gAoNzBjOGY2Y2VjMzUyMTZmYTlhZjFiMjgwNGU5MjAwY2ZkNDAwZDI0Yg",
                "url": "https://github.com/mockito/mockito/pull/2437/commits/70c8f6cec35216fa9af1b2804e9200cfd400d24b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2433,
                "url": "https://github.com/mockito/mockito/issues/2433",
                "title": "Roadmap for Mockito.MockedStatic<T>",
                "bodyHTML": "<p dir=\"auto\">Hello.</p>\n<p dir=\"auto\">What is the current roadmap for <a href=\"https://github.com/mockito/mockito/blob/caf35b24e2764df0498469526ecb3e7ec68a0430/src/main/java/org/mockito/MockedStatic.java#L27\"><code class=\"notranslate\">Mockito.MockedStatic&lt;T&gt;</code></a>?</p>\n<p dir=\"auto\">Is it feature complete, or there are new features planned for it? Any other changes expected, before graduating?</p>\n<p dir=\"auto\">How stable is the current implementation?</p>\n<p dir=\"auto\">When is it expected for it to graduate out of incubation? Will it ever?</p>\n<p dir=\"auto\">What work should be done and in general what else needs to happen to reach that? Maybe the community can help with that work.</p>\n<p dir=\"auto\">Thanks a lot for your open-source contributions!<br>\n--Vasile</p>\n<hr>\n<p dir=\"auto\"><em>P.S. Don't know if these questions should be answered by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/raphw/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/raphw\">@raphw</a>, who seems to be the author of <code class=\"notranslate\">Mockito.MockedStatic&lt;T&gt;</code> based on github history, or somebody else.</em></p>",
                "resourcePath": "/mockito/mockito/issues/2433",
                "createdAt": "2021-09-23T21:30:32Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #2389 : Parallel use of mocks with deep stubbing may lead to ConcurrentModificationException",
        "url": "https://github.com/mockito/mockito/pull/2444",
        "resourcePath": "/mockito/mockito/pull/2444",
        "createdAt": "2021-10-12T01:56:23Z",
        "number": 2444,
        "mergeCommit": {
          "oid": "b77aee1a3f5c20ae4a85f31d6b6fc60e412ba7e4",
          "message": "Fixes #2389: handle answers in a thread-safe manner (#2444)\n\nCo-authored-by: Mika\u00ebl Francoeur <mikael.francoeur@ticketmaster.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/b77aee1a3f5c20ae4a85f31d6b6fc60e412ba7e4",
          "parents": {
            "nodes": [
              {
                "oid": "929188bd38a2cde7b3684b251287671a8ed8daee",
                "message": "Bump versions.bytebuddy from 1.11.19 to 1.11.20 (#2443)\n\nBumps `versions.bytebuddy` from 1.11.19 to 1.11.20.\r\n\r\nUpdates `byte-buddy` from 1.11.19 to 1.11.20\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.19...byte-buddy-1.11.20)\r\n\r\nUpdates `byte-buddy-agent` from 1.11.19 to 1.11.20\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.19...byte-buddy-1.11.20)\r\n\r\nUpdates `byte-buddy-android` from 1.11.19 to 1.11.20\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.11.19...byte-buddy-1.11.20)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: net.bytebuddy:byte-buddy\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-agent\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-android\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubsConcurrentTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v84tC9L52gAoZmM1ZTBiMmEyOGU0ZWJhODY2ODgwYWUxNTRlNGNiYjU4MmEyZDNkOQ",
                "url": "https://github.com/mockito/mockito/pull/2444/commits/fc5e0b2a28e4eba866880ae154e4cbb582a2d3d9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2389,
                "url": "https://github.com/mockito/mockito/issues/2389",
                "title": "Parallel use of mocks with deep stubbing may lead to ConcurrentModificationException",
                "bodyHTML": "<p dir=\"auto\">Java8 / JUnit5<br>\nMockito version: 3.11.2</p>\n<p dir=\"auto\">Test class:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"import org.junit.jupiter.api.RepeatedTest;\nimport org.mockito.Answers;\n\nimport java.util.List;\nimport java.util.stream.IntStream;\n\nimport static org.mockito.Mockito.mock;\n\nclass ConcurrencyTest {\n\n    @RepeatedTest(value = 1000)\n    void test() {\n        final Service mock = mock(Service.class, Answers.RETURNS_DEEP_STUBS);\n        IntStream.range(1, 100).parallel().forEach(i -&gt; mock.doSomething());\n    }\n\n    interface Service {\n        List&lt;String&gt; doSomething();\n    }\n}\n\"><pre class=\"notranslate\"><code class=\"notranslate\">import org.junit.jupiter.api.RepeatedTest;\nimport org.mockito.Answers;\n\nimport java.util.List;\nimport java.util.stream.IntStream;\n\nimport static org.mockito.Mockito.mock;\n\nclass ConcurrencyTest {\n\n    @RepeatedTest(value = 1000)\n    void test() {\n        final Service mock = mock(Service.class, Answers.RETURNS_DEEP_STUBS);\n        IntStream.range(1, 100).parallel().forEach(i -&gt; mock.doSomething());\n    }\n\n    interface Service {\n        List&lt;String&gt; doSomething();\n    }\n}\n\n</code></pre></div>\n<p dir=\"auto\">Error: 30/5000 iterations fail with <code class=\"notranslate\">java.util.ConcurrentModificationException</code></p>\n<p dir=\"auto\">Stacktrace:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.util.ConcurrentModificationException\n\tat java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:966)\n\tat java.util.LinkedList$ListItr.next(LinkedList.java:888)\n\tat org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.deepStub(ReturnsDeepStubs.java:85)\n\tat org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.answer(ReturnsDeepStubs.java:75)\n\tat org.mockito.Answers.answer(Answers.java:99)\n\tat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:110)\n\tat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\n\tat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:34)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:56)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(MockMethodInterceptor.java:161)\n\tat ConcurrencyTest$Service$MockitoMock$351714249.doSomething(Unknown Source)\n\tat ConcurrencyTest.lambda$test$0(ConcurrencyTest.java:14)\n\tat java.util.stream.ForEachOps$ForEachOp$OfInt.accept(ForEachOps.java:204)\n\tat java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:110)\n\tat java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:693)\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\n\tat java.util.stream.ForEachOps$ForEachTask.compute(ForEachOps.java:290)\n\tat java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:175)\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: java.util.ConcurrentModificationException\n\tat java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:966)\n\tat java.util.LinkedList$ListItr.next(LinkedList.java:888)\n\tat org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.deepStub(ReturnsDeepStubs.java:85)\n\tat org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.answer(ReturnsDeepStubs.java:75)\n\tat org.mockito.Answers.answer(Answers.java:99)\n\tat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:110)\n\tat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\n\tat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:34)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:56)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(MockMethodInterceptor.java:161)\n\tat ConcurrencyTest$Service$MockitoMock$351714249.doSomething(Unknown Source)\n\tat ConcurrencyTest.lambda$test$0(ConcurrencyTest.java:14)\n\tat java.util.stream.ForEachOps$ForEachOp$OfInt.accept(ForEachOps.java:204)\n\tat java.util.stream.Streams$RangeIntSpliterator.forEachRemaining(Streams.java:110)\n\tat java.util.Spliterator$OfInt.forEachRemaining(Spliterator.java:693)\n\tat java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\n\tat java.util.stream.ForEachOps$ForEachTask.compute(ForEachOps.java:290)\n\tat java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:175)\n</code></pre></div>\n<p dir=\"auto\">P.S. If the <code class=\"notranslate\">Answers.RETURNS_DEEP_STUBS</code> is removed, no error occurred.</p>",
                "resourcePath": "/mockito/mockito/issues/2389",
                "createdAt": "2021-08-06T21:01:48Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make sure interface types are initialized before inline mocking to avoid blocking code of static initializers.",
        "url": "https://github.com/mockito/mockito/pull/2505",
        "resourcePath": "/mockito/mockito/pull/2505",
        "createdAt": "2021-12-10T20:56:12Z",
        "number": 2505,
        "mergeCommit": {
          "oid": "a82d5c3f7e5747bc8b9fcea10a25aad7211351ca",
          "message": "Merge pull request #2505 from mockito/initialize-interfaces\n\nMake sure interface types are initialized before inline mocking to avoid blocking code of static initializers.",
          "commitUrl": "https://github.com/mockito/mockito/commit/a82d5c3f7e5747bc8b9fcea10a25aad7211351ca",
          "parents": {
            "nodes": [
              {
                "oid": "dbcbb3f9df32e35eb32587ef30b353fe47056a34",
                "message": "Bump org.eclipse.osgi from 3.17.0 to 3.17.100 (#2504)"
              },
              {
                "oid": "463578069863a7880953b14c509f9bdd71008fc9",
                "message": "Make sure interface types are initialized before inline mocking to avoid blocking code of static initializers."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineBytecodeGenerator.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/HierarchyPreInitializationTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v84vsqif2gAoNDYzNTc4MDY5ODYzYTc4ODA5NTNiMTRjNTA5ZjliZGQ3MTAwOGZjOQ",
                "url": "https://github.com/mockito/mockito/pull/2505/commits/463578069863a7880953b14c509f9bdd71008fc9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2499,
                "url": "https://github.com/mockito/mockito/issues/2499",
                "title": "Obscure issue with mockito-inline:  mock object in a test seems to be corrupting mock in later test",
                "bodyHTML": "<p dir=\"auto\">This is a very obscure issue, happens only when the planets are aligned. Can you possibly tell me if this is an issue with mockito-inline or if I'm doing something wrong. If its an issue, is there a workaround?</p>\n<p dir=\"auto\">I've simplified what I'm seeing as much as possible. I have 2 tests: Test1 and Test2. I mock MyClass in Test1 (calling clearInlineMocks in <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/afterclass/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/afterclass\">@afterclass</a>).  In Test2, I mock TestSubInterface which extends TestInterface, which creates an instance of the class I mocked in Test1. The issue is that the constructor for MyClass is not being called when mocking the TestSubInterface in Test2  (I guess because mockito-inline still sees MyClass as a mock from the previous test?). I initialize a variable in the MyClass constructor and later throw an error if it hasn't been initialized, resulting in a java.lang.NoClassDefFoundError when mocking.</p>\n<p dir=\"auto\">HOWEVER, the constructor for MyClass IS called when:</p>\n<ul dir=\"auto\">\n<li>I mock TestInterface directly instead of TestSubInterface OR</li>\n<li>I do NOT have a default method defined in TestInterface OR</li>\n<li>I use mockito-core instead of mockito-inline</li>\n</ul>\n<p dir=\"auto\">Here are the details:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NoClassDefFoundError: Could not initialize class TestSubInterface$MockitoMock$1328129486\n        at jdk.internal.reflect.GeneratedSerializationConstructorAccessor2.newInstance(Unknown Source)\n        at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n        at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\n        at org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator.newInstance(SunReflectionFactoryInstantiator.java:48)\n        at org.objenesis.ObjenesisBase.newInstance(ObjenesisBase.java:73)\n        at org.mockito.internal.creation.instance.ObjenesisInstantiator.newInstance(ObjenesisInstantiator.java:21)\n        at org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.doCreateMock(InlineByteBuddyMockMaker.java:360)\n        at org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:318)\n        at org.mockito.internal.util.MockUtil.createMock(MockUtil.java:53)\n        at org.mockito.internal.MockitoCore.mock(MockitoCore.java:62)\n        at org.mockito.Mockito.mock(Mockito.java:1951)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.processAnnotationForMock(MockAnnotationProcessor.java:66)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:27)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:24)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.createMockFor(IndependentAnnotationEngine.java:46)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.process(IndependentAnnotationEngine.java:73)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.processIndependentAnnotations(InjectingAnnotationEngine.java:73)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.process(InjectingAnnotationEngine.java:47)\n        at org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:82)\n        at org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:49)\n        at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n        at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n        at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n        at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n        at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n        at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n        at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.base/java.lang.reflect.Method.invoke(Method.java:564)\n        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\n        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\n        at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\n        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)\n        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.NoClassDefFoundError: Could not initialize class TestSubInterface$MockitoMock$1328129486\n        at jdk.internal.reflect.GeneratedSerializationConstructorAccessor2.newInstance(Unknown Source)\n        at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n        at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)\n        at org.objenesis.instantiator.sun.SunReflectionFactoryInstantiator.newInstance(SunReflectionFactoryInstantiator.java:48)\n        at org.objenesis.ObjenesisBase.newInstance(ObjenesisBase.java:73)\n        at org.mockito.internal.creation.instance.ObjenesisInstantiator.newInstance(ObjenesisInstantiator.java:21)\n        at org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.doCreateMock(InlineByteBuddyMockMaker.java:360)\n        at org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:318)\n        at org.mockito.internal.util.MockUtil.createMock(MockUtil.java:53)\n        at org.mockito.internal.MockitoCore.mock(MockitoCore.java:62)\n        at org.mockito.Mockito.mock(Mockito.java:1951)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.processAnnotationForMock(MockAnnotationProcessor.java:66)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:27)\n        at org.mockito.internal.configuration.MockAnnotationProcessor.process(MockAnnotationProcessor.java:24)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.createMockFor(IndependentAnnotationEngine.java:46)\n        at org.mockito.internal.configuration.IndependentAnnotationEngine.process(IndependentAnnotationEngine.java:73)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.processIndependentAnnotations(InjectingAnnotationEngine.java:73)\n        at org.mockito.internal.configuration.InjectingAnnotationEngine.process(InjectingAnnotationEngine.java:47)\n        at org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:82)\n        at org.mockito.internal.runners.DefaultInternalRunner$1$1.evaluate(DefaultInternalRunner.java:49)\n        at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n        at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n        at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n        at org.mockito.internal.runners.DefaultInternalRunner$1.run(DefaultInternalRunner.java:99)\n        at org.mockito.internal.runners.DefaultInternalRunner.run(DefaultInternalRunner.java:105)\n        at org.mockito.internal.runners.StrictRunner.run(StrictRunner.java:40)\n        at org.mockito.junit.MockitoJUnitRunner.run(MockitoJUnitRunner.java:163)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:252)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:141)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:112)\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.base/java.lang.reflect.Method.invoke(Method.java:564)\n        at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)\n        at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)\n        at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)\n        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)\n        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)\n</code></pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import org.junit.AfterClass;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.mockito.junit.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.Silent.class)\npublic class Test1 {\n\n    @Mock\n    private MyClass foo;\n\n    @AfterClass\n    public static void after() {\n        Mockito.framework().clearInlineMocks();\n    }\n\n    @Test\n    public void test() {\n        System.out.println(&quot;test1!&quot;);\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">AfterClass</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runner</span>.<span class=\"pl-s1\">RunWith</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mock</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mockito</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">MockitoJUnitRunner</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">RunWith</span>(<span class=\"pl-smi\">MockitoJUnitRunner</span>.<span class=\"pl-smi\">Silent</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Test1</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">MyClass</span> <span class=\"pl-s1\">foo</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">AfterClass</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">after</span>() {\n        <span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">framework</span>().<span class=\"pl-en\">clearInlineMocks</span>();\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">test</span>() {\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"test1!\"</span>);\n    }\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.mockito.Mock;\nimport org.mockito.junit.MockitoJUnitRunner;\n\n@RunWith(MockitoJUnitRunner.class)\npublic class Test2 {\n\n    @Mock\n    TestSubInterface testInterface;\n\n    @Test\n    public void test() {\n        System.out.println(&quot;test2!&quot;);\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">runner</span>.<span class=\"pl-s1\">RunWith</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mock</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">MockitoJUnitRunner</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">RunWith</span>(<span class=\"pl-smi\">MockitoJUnitRunner</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Test2</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n    <span class=\"pl-smi\">TestSubInterface</span> <span class=\"pl-s1\">testInterface</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">test</span>() {\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"test2!\"</span>);\n    }\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public interface TestSubInterface extends TestInterface {\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">TestSubInterface</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">TestInterface</span> {\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public interface TestInterface {\n\n    MyClass foo = MyClass.createMyNumber(8, &quot;someType&quot;).convertTo(&quot;someOtherType&quot;);\n\n    default boolean someMethod() {\n        return true;\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">TestInterface</span> {\n\n    <span class=\"pl-smi\">MyClass</span> <span class=\"pl-s1\">foo</span> = <span class=\"pl-smi\">MyClass</span>.<span class=\"pl-en\">createMyNumber</span>(<span class=\"pl-c1\">8</span>, <span class=\"pl-s\">\"someType\"</span>).<span class=\"pl-en\">convertTo</span>(<span class=\"pl-s\">\"someOtherType\"</span>);\n\n    <span class=\"pl-k\">default</span> <span class=\"pl-smi\">boolean</span> <span class=\"pl-en\">someMethod</span>() {\n        <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span>;\n    }\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class MyClass {\n\n    private final double num;\n    private final String type;\n    private Object someInternalObj;\n\n    public static MyClass createMyNumber(double m, String  type) {\n        return new MyClass(m, type);\n    }\n\n    public MyClass(double num, String type) {\n        this.num = num;\n        this.type = type;\n        someInternalObj = new Object();\n        System.out.println(&quot;MyClass!!!!!!&quot;);\n    }\n\n    public MyClass convertTo(String to) {\n        if(someInternalObj == null)\n            throw new RuntimeException(&quot;someInternalObj was null&quot;);\n        return MyClass.createMyNumber(num, to);\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MyClass</span> {\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">double</span> <span class=\"pl-s1\">num</span>;\n    <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">type</span>;\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">someInternalObj</span>;\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">MyClass</span> <span class=\"pl-en\">createMyNumber</span>(<span class=\"pl-smi\">double</span> <span class=\"pl-s1\">m</span>, <span class=\"pl-smi\">String</span>  <span class=\"pl-s1\">type</span>) {\n        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">MyClass</span>(<span class=\"pl-s1\">m</span>, <span class=\"pl-s1\">type</span>);\n    }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">MyClass</span>(<span class=\"pl-smi\">double</span> <span class=\"pl-s1\">num</span>, <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">type</span>) {\n        <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">num</span> = <span class=\"pl-s1\">num</span>;\n        <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">type</span> = <span class=\"pl-s1\">type</span>;\n        <span class=\"pl-s1\">someInternalObj</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Object</span>();\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"MyClass!!!!!!\"</span>);\n    }\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">MyClass</span> <span class=\"pl-en\">convertTo</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">to</span>) {\n        <span class=\"pl-k\">if</span>(<span class=\"pl-s1\">someInternalObj</span> == <span class=\"pl-c1\">null</span>)\n            <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RuntimeException</span>(<span class=\"pl-s\">\"someInternalObj was null\"</span>);\n        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">MyClass</span>.<span class=\"pl-en\">createMyNumber</span>(<span class=\"pl-s1\">num</span>, <span class=\"pl-s1\">to</span>);\n    }\n}</pre></div>\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;\n         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;org.example&lt;/groupId&gt;\n    &lt;artifactId&gt;Test&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n    &lt;properties&gt;\n        &lt;maven.compiler.source&gt;15&lt;/maven.compiler.source&gt;\n        &lt;maven.compiler.target&gt;15&lt;/maven.compiler.target&gt;\n    &lt;/properties&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;junit&lt;/groupId&gt;\n            &lt;artifactId&gt;junit&lt;/artifactId&gt;\n            &lt;version&gt;4.13.2&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.mockito&lt;/groupId&gt;\n            &lt;artifactId&gt;mockito-inline&lt;/artifactId&gt;\n            &lt;version&gt;3.9.0&lt;/version&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n\n    &lt;/dependencies&gt;\n\n&lt;/project&gt;\"><pre class=\"notranslate\">&lt;?<span class=\"pl-ent\">xml</span><span class=\"pl-e\"> version</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.0<span class=\"pl-pds\">\"</span></span><span class=\"pl-e\"> encoding</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>UTF-8<span class=\"pl-pds\">\"</span></span>?&gt;\n&lt;<span class=\"pl-ent\">project</span> <span class=\"pl-e\">xmlns</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://maven.apache.org/POM/4.0.0<span class=\"pl-pds\">\"</span></span>\n         <span class=\"pl-e\">xmlns</span><span class=\"pl-e\">:</span><span class=\"pl-e\">xsi</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"pl-pds\">\"</span></span>\n         <span class=\"pl-e\">xsi</span><span class=\"pl-e\">:</span><span class=\"pl-e\">schemaLocation</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class=\"pl-pds\">\"</span></span>&gt;\n    &lt;<span class=\"pl-ent\">modelVersion</span>&gt;4.0.0&lt;/<span class=\"pl-ent\">modelVersion</span>&gt;\n\n    &lt;<span class=\"pl-ent\">groupId</span>&gt;org.example&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n    &lt;<span class=\"pl-ent\">artifactId</span>&gt;Test&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n    &lt;<span class=\"pl-ent\">version</span>&gt;1.0-SNAPSHOT&lt;/<span class=\"pl-ent\">version</span>&gt;\n\n    &lt;<span class=\"pl-ent\">properties</span>&gt;\n        &lt;<span class=\"pl-ent\">maven</span>.compiler.source&gt;15&lt;/<span class=\"pl-ent\">maven</span>.compiler.source&gt;\n        &lt;<span class=\"pl-ent\">maven</span>.compiler.target&gt;15&lt;/<span class=\"pl-ent\">maven</span>.compiler.target&gt;\n    &lt;/<span class=\"pl-ent\">properties</span>&gt;\n\n    &lt;<span class=\"pl-ent\">dependencies</span>&gt;\n        &lt;<span class=\"pl-ent\">dependency</span>&gt;\n            &lt;<span class=\"pl-ent\">groupId</span>&gt;junit&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n            &lt;<span class=\"pl-ent\">artifactId</span>&gt;junit&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n            &lt;<span class=\"pl-ent\">version</span>&gt;4.13.2&lt;/<span class=\"pl-ent\">version</span>&gt;\n            &lt;<span class=\"pl-ent\">scope</span>&gt;test&lt;/<span class=\"pl-ent\">scope</span>&gt;\n        &lt;/<span class=\"pl-ent\">dependency</span>&gt;\n        &lt;<span class=\"pl-ent\">dependency</span>&gt;\n            &lt;<span class=\"pl-ent\">groupId</span>&gt;org.mockito&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n            &lt;<span class=\"pl-ent\">artifactId</span>&gt;mockito-inline&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n            &lt;<span class=\"pl-ent\">version</span>&gt;3.9.0&lt;/<span class=\"pl-ent\">version</span>&gt;\n            &lt;<span class=\"pl-ent\">scope</span>&gt;test&lt;/<span class=\"pl-ent\">scope</span>&gt;\n        &lt;/<span class=\"pl-ent\">dependency</span>&gt;\n\n    &lt;/<span class=\"pl-ent\">dependencies</span>&gt;\n\n&lt;/<span class=\"pl-ent\">project</span>&gt;</pre></div>\n<p dir=\"auto\">I'm on windows 10</p>\n<p dir=\"auto\">java --version<br>\njava 17.0.1 2021-10-19 LTS<br>\nJava(TM) SE Runtime Environment (build 17.0.1+12-LTS-39)<br>\nJava HotSpot(TM) 64-Bit Server VM (build 17.0.1+12-LTS-39, mixed mode, sharing)</p>\n<p dir=\"auto\">check that</p>\n<ul dir=\"auto\">\n<li>[ x] The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li>[ x] The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li>[ x] Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li>[x ] Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li>[ x] Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2499",
                "createdAt": "2021-12-07T07:09:28Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix thread race on invocationForStubbing",
        "url": "https://github.com/mockito/mockito/pull/2517",
        "resourcePath": "/mockito/mockito/pull/2517",
        "createdAt": "2021-12-16T13:14:28Z",
        "number": 2517,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v84v8rn92gAoY2NmMmM1Y2E3YzE2YjJkYWViN2Q1ZGRlZTdmMGUzYmJiNDQ0OWQ4ZQ",
                "url": "https://github.com/mockito/mockito/pull/2517/commits/ccf2c5ca7c16b2daeb7d5ddee7f0e3bbb4449d8e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2516,
                "url": "https://github.com/mockito/mockito/issues/2516",
                "title": "Thread race issue in `setInvocationForPotentialStubbing`",
                "bodyHTML": "<p dir=\"auto\">Internally at Google, we discovered a thread race on <code class=\"notranslate\">setInvocationForPotentialStubbing</code>. A truncated stacktrace:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    #0 org.mockito.internal.stubbing.InvocationContainerImpl.setInvocationForPotentialStubbing(Lorg/mockito/invocation/MatchableInvocation;)V InvocationContainerImpl.java:47 \n    #1 org.mockito.internal.handler.MockHandlerImpl.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; MockHandlerImpl.java:86 \n    #2 org.mockito.internal.handler.NullResultGuardian.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; NullResultGuardian.java:29 \n    #3 org.mockito.internal.handler.InvocationNotifierHandler.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; InvocationNotifierHandler.java:34 \n    #4 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;Lorg/mockito/invocation/Location;)Ljava/lang/Object; MockMethodInterceptor.java:82 \n    #5 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;)Ljava/lang/Object; MockMethodInterceptor.java:56 \n    #6 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptSuperCallable(Ljava/lang/Object;Lorg/mockito/internal/creation/bytebuddy/MockMethodInterceptor;Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/util/ MockMethodInterceptor.java:145 \"><pre class=\"notranslate\"><code class=\"notranslate\">    #0 org.mockito.internal.stubbing.InvocationContainerImpl.setInvocationForPotentialStubbing(Lorg/mockito/invocation/MatchableInvocation;)V InvocationContainerImpl.java:47 \n    #1 org.mockito.internal.handler.MockHandlerImpl.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; MockHandlerImpl.java:86 \n    #2 org.mockito.internal.handler.NullResultGuardian.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; NullResultGuardian.java:29 \n    #3 org.mockito.internal.handler.InvocationNotifierHandler.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; InvocationNotifierHandler.java:34 \n    #4 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;Lorg/mockito/invocation/Location;)Ljava/lang/Object; MockMethodInterceptor.java:82 \n    #5 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;)Ljava/lang/Object; MockMethodInterceptor.java:56 \n    #6 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptSuperCallable(Ljava/lang/Object;Lorg/mockito/internal/creation/bytebuddy/MockMethodInterceptor;Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/util/ MockMethodInterceptor.java:145 \n</code></pre></div>\n<p dir=\"auto\">It raced with <code class=\"notranslate\">resetInvocationForPotentialStubbing</code>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    #0 org.mockito.internal.stubbing.InvocationContainerImpl.resetInvocationForPotentialStubbing(Lorg/mockito/invocation/MatchableInvocation;)V InvocationContainerImpl.java:51 \n    #1 org.mockito.internal.handler.MockHandlerImpl.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; MockHandlerImpl.java:120 \n    #2 org.mockito.internal.handler.NullResultGuardian.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; NullResultGuardian.java:29 \n    #3 org.mockito.internal.handler.InvocationNotifierHandler.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; InvocationNotifierHandler.java:34 \n    #4 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;Lorg/mockito/invocation/Location;)Ljava/lang/Object; MockMethodInterceptor.java:82 \n    #5 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;)Ljava/lang/Object; MockMethodInterceptor.java:56 \n    #6 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptSuperCallable(Ljava/lang/Object;Lorg/mockito/internal/creation/bytebuddy/MockMethodInterceptor;Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/util/ MockMethodInterceptor.java:145 \"><pre class=\"notranslate\"><code class=\"notranslate\">    #0 org.mockito.internal.stubbing.InvocationContainerImpl.resetInvocationForPotentialStubbing(Lorg/mockito/invocation/MatchableInvocation;)V InvocationContainerImpl.java:51 \n    #1 org.mockito.internal.handler.MockHandlerImpl.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; MockHandlerImpl.java:120 \n    #2 org.mockito.internal.handler.NullResultGuardian.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; NullResultGuardian.java:29 \n    #3 org.mockito.internal.handler.InvocationNotifierHandler.handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object; InvocationNotifierHandler.java:34 \n    #4 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;Lorg/mockito/invocation/Location;)Ljava/lang/Object; MockMethodInterceptor.java:82 \n    #5 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/internal/invocation/RealMethod;)Ljava/lang/Object; MockMethodInterceptor.java:56 \n    #6 org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptSuperCallable(Ljava/lang/Object;Lorg/mockito/internal/creation/bytebuddy/MockMethodInterceptor;Ljava/lang/reflect/Method;[Ljava/lang/Object;Ljava/util/ MockMethodInterceptor.java:145 \n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/2516",
                "createdAt": "2021-12-16T12:57:07Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #2548 : Makes InOrder able to verify static methods",
        "url": "https://github.com/mockito/mockito/pull/2549",
        "resourcePath": "/mockito/mockito/pull/2549",
        "createdAt": "2022-01-24T21:02:43Z",
        "number": 2549,
        "mergeCommit": {
          "oid": "02d63565aa6ccca12a148c6f2f1ac5cf19357672",
          "message": "Fixes #2548: make InOrder able to verify static methods (#2549)",
          "commitUrl": "https://github.com/mockito/mockito/commit/02d63565aa6ccca12a148c6f2f1ac5cf19357672",
          "parents": {
            "nodes": [
              {
                "oid": "e0a25cb14fd0cf97e38b3ee8de8ab92b87c61549",
                "message": "Bump com.diffplug.spotless from 6.2.2 to 6.3.0 (#2567)\n\nBumps com.diffplug.spotless from 6.2.2 to 6.3.0.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.diffplug.spotless\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/InOrder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/InOrderImpl.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/InOrderVerificationTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v84xhVwy2gAoOTQxNTNlY2FmMDY2ZTYxOTQwNjkzMWQyMWJjYmJhOTQxMjgzMzEyNA",
                "url": "https://github.com/mockito/mockito/pull/2549/commits/94153ecaf066e619406931d21bcbba9412833124"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2548,
                "url": "https://github.com/mockito/mockito/issues/2548",
                "title": "[PR open] Add feature to verify static methods calls in order",
                "bodyHTML": "<p dir=\"auto\"><strong>TL;DR</strong> Mockito doesn't allow verifying static methods calls in order. I have implemented this feature here: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1113136158\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2549\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2549/hovercard\" href=\"https://github.com/mockito/mockito/pull/2549\">#2549</a>. If possible, I'd like to contribute; or discuss other ways to achieve the same.</p>\n<hr>\n<p dir=\"auto\">Hey Mockito team.</p>\n<p dir=\"auto\">This discussion relates to: <a href=\"https://groups.google.com/g/mockito/c/wjd9jIj_oBs\" rel=\"nofollow\">https://groups.google.com/g/mockito/c/wjd9jIj_oBs</a>. Since I'm not sure that the Google group is active, I'm posting it here for now.</p>\n<p dir=\"auto\">This issue is about verifying static methods calls in order. I'm aware of the InOrder class, but we can't pass a MockedStatic instance. I had a closer look, and we can pass to it a Class instance. But the InOrder interface is not powerful enough to verify that a static method has been called:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public interface InOrder {\n  &lt;T&gt; T verify(T mock);\n  &lt;T&gt; T verify(T mock, VerificationMode mode);\n  void verifyNoMoreInteractions();\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">public interface InOrder {\n  &lt;T&gt; T verify(T mock);\n  &lt;T&gt; T verify(T mock, VerificationMode mode);\n  void verifyNoMoreInteractions();\n}\n</code></pre></div>\n<p dir=\"auto\">To verify static calls, using method references and lambdas, we likely need two more methods in the InOrder interface, with signatures similar to MockedStatic#verify:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public interface MockedStatic&lt;T&gt; extends ScopedMock {\n  void verify(Verification verification)\n  void verify(Verification verification, VerificationMode mode);\n  ...\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">public interface MockedStatic&lt;T&gt; extends ScopedMock {\n  void verify(Verification verification)\n  void verify(Verification verification, VerificationMode mode);\n  ...\n}\n</code></pre></div>\n<p dir=\"auto\">What do you think of the InOrder interface exposing two methods to deal with the MockedStatic objects that accept both the MockedStatic and the Verification instances to use? Like the following:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"void verify(MockedStatic&lt;?&gt; mockedStatic, MockedStatic.Verification verification);\nvoid verify(MockedStatic&lt;?&gt; mockedStatic, MockedStatic.Verification verification, VerificationMode mode);\"><pre class=\"notranslate\"><code class=\"notranslate\">void verify(MockedStatic&lt;?&gt; mockedStatic, MockedStatic.Verification verification);\nvoid verify(MockedStatic&lt;?&gt; mockedStatic, MockedStatic.Verification verification, VerificationMode mode);\n</code></pre></div>\n<p dir=\"auto\">I made the above changes, and we can verify static methods, together with instance methods too. I have updated the tests as well in my PR.</p>\n<p dir=\"auto\">Let me know if you are aware of other ways to achieve the same. If it is not doable, then please share your thoughts about the above, and if I can contribute in case.</p>",
                "resourcePath": "/mockito/mockito/issues/2548",
                "createdAt": "2022-01-24T18:59:51Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #2557 : fix rare mock self equals",
        "url": "https://github.com/mockito/mockito/pull/2558",
        "resourcePath": "/mockito/mockito/pull/2558",
        "createdAt": "2022-02-02T21:46:32Z",
        "number": 2558,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/ObjectMethodsGuru.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValuesTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v84x_f4b2gAoMjUwYjhhMWY0YTllZmI5YmM4MDhlMDI3YzFmYWVmZWFiY2I3NTZiMw",
                "url": "https://github.com/mockito/mockito/pull/2558/commits/250b8a1f4a9efb9bc808e027c1faefeabcb756b3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2557,
                "url": "https://github.com/mockito/mockito/issues/2557",
                "title": "Mock equals self not working",
                "bodyHTML": "<p dir=\"auto\">Mock generated class, when calls equals, it uses MockMethodInterceptor.ForEquals interceptor that checks reference equality.<br>\nDuring my tests, in some unknown case, a mock equals method instead calls DispatcherDefaultingToRealMethod that resolves to return default answer for boolean return method, that is false... resulting in invalid self equals result.</p>\n<p dir=\"auto\">I don't have a reproductible test case, because I don't know how the generated mock class actually manages to call the dispatcher instead of ForEquals, only that if I debug this is what happens.</p>\n<p dir=\"auto\">mockito 3.12.0</p>\n<p dir=\"auto\">check that</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2557",
                "createdAt": "2022-02-02T21:44:52Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Restored spy equals/hashcode fix",
        "url": "https://github.com/mockito/mockito/pull/2583",
        "resourcePath": "/mockito/mockito/pull/2583",
        "createdAt": "2022-03-05T16:57:07Z",
        "number": 2583,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/SubclassBytecodeGenerator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/TypeCachingBytecodeGenerator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/spies/SpyingOnRealObjectsTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v84z_jfO2gAoYzM3ZmRhY2ZhMzg5MTY3NjFiMTQ4NDhiODE0NzA5MjY4MWJlM2UzZA",
                "url": "https://github.com/mockito/mockito/pull/2583/commits/c37fdacfa38916761b14848b8147092681be3e3d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2331,
                "url": "https://github.com/mockito/mockito/issues/2331",
                "title": "Spy doesn't forward hashcode/equals to actual object",
                "bodyHTML": "<h3 dir=\"auto\">Mockito 3.11.1</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class MockitoTest {\n\n    private static class ValueHolder {\n        private final String value;\n\n        public ValueHolder( String value ) {\n            this.value = value;\n        }\n\n        public String getValue() {\n            return value;\n        }\n\n        @Override public boolean equals( Object o ) {\n            if (this == o) return true;\n            if (!(o instanceof ValueHolder)) return false;\n            ValueHolder that = (ValueHolder) o;\n            return getValue().equals( that.getValue() );\n        }\n\n        @Override\n        public int hashCode() {\n            return Objects.hash( getValue() );\n        }\n    }\n\n    @Test\n    public void test() {\n        ValueHolder value = new ValueHolder( &quot;test&quot; );\n        ValueHolder spy = Mockito.spy( value );\n        assert value.equals( spy );\n        assert spy.equals( value ); //fails\n        assert value.hashCode() == spy.hashCode(); //fails\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">public class MockitoTest {\n\n    private static class ValueHolder {\n        private final String value;\n\n        public ValueHolder( String value ) {\n            this.value = value;\n        }\n\n        public String getValue() {\n            return value;\n        }\n\n        @Override public boolean equals( Object o ) {\n            if (this == o) return true;\n            if (!(o instanceof ValueHolder)) return false;\n            ValueHolder that = (ValueHolder) o;\n            return getValue().equals( that.getValue() );\n        }\n\n        @Override\n        public int hashCode() {\n            return Objects.hash( getValue() );\n        }\n    }\n\n    @Test\n    public void test() {\n        ValueHolder value = new ValueHolder( \"test\" );\n        ValueHolder spy = Mockito.spy( value );\n        assert value.equals( spy );\n        assert spy.equals( value ); //fails\n        assert value.hashCode() == spy.hashCode(); //fails\n    }\n}\n</code></pre></div>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2331",
                "createdAt": "2021-06-16T18:14:49Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Only run injection once",
        "url": "https://github.com/mockito/mockito/pull/2603",
        "resourcePath": "/mockito/mockito/pull/2603",
        "createdAt": "2022-03-24T12:13:50Z",
        "number": 2603,
        "mergeCommit": {
          "oid": "8497f1752331acd30987d666dd099b089c69c68d",
          "message": "Run injection once per field (#2603)\n\nAdd regression test that makers sure constructor injection is used when possible\r\n\r\nFixes #2602\r\nFixes #2978",
          "commitUrl": "https://github.com/mockito/mockito/commit/8497f1752331acd30987d666dd099b089c69c68d",
          "parents": {
            "nodes": [
              {
                "oid": "e3e100fa0ee73d85b0ae7ce65b824ae79248b083",
                "message": "Bump org.eclipse.platform:org.eclipse.osgi from 3.18.300 to 3.18.400 (#3038)\n\nBumps [org.eclipse.platform:org.eclipse.osgi](https://github.com/eclipse-equinox/equinox) from 3.18.300 to 3.18.400.\r\n- [Commits](https://github.com/eclipse-equinox/equinox/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.eclipse.platform:org.eclipse.osgi\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/InjectingAnnotationEngine.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/test/java/org/mockito/internal/configuration/InjectingAnnotationEngineTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/InjectMocksTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v8408mve2gAoMjc5OTFmMDU1Y2RmYjkyNmFlNWUzN2VhMzYwZTllMjFmNDkyYTJlMQ",
                "url": "https://github.com/mockito/mockito/pull/2603/commits/27991f055cdfb926ae5e37ea360e9e21f492a2e1"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2602,
                "url": "https://github.com/mockito/mockito/issues/2602",
                "title": "mockito-core MockitoAnnotations::openMocks initializes class twice if said class has super class",
                "bodyHTML": "<h2 dir=\"auto\">Short, Self Contained, Correct (Compilable), Example:</h2>\n<p dir=\"auto\">Have a look <a href=\"https://github.com/1-alex98/mre-mockito/tree/master/src/test/java\">here </a>.<br>\nYou will find a <code class=\"notranslate\">Works</code> class and a <code class=\"notranslate\">DoesNotWork</code> class. Both are essentially the same with a small difference being the <code class=\"notranslate\">DoesNotWork</code> class does fail and extends and empty class.</p>\n<h3 dir=\"auto\">DoesNotWork.java:</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@ExtendWith({MockitoExtension.class})\npublic class DoesNotWork extends ToBeExtended{\n    @Mock\n    ToBeMocked toBeMocked;\n    @InjectMocks\n    ToBeInitialized toBeInitialized;\n\n    @Test\n    public void foo(){\n        assert toBeInitialized.toBeMocked == null;\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@ExtendWith({MockitoExtension.class})\npublic class DoesNotWork extends ToBeExtended{\n    @Mock\n    ToBeMocked toBeMocked;\n    @InjectMocks\n    ToBeInitialized toBeInitialized;\n\n    @Test\n    public void foo(){\n        assert toBeInitialized.toBeMocked == null;\n    }\n}\n</code></pre></div>\n<h3 dir=\"auto\">ToBeInitialized.java:</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class ToBeInitialized {\n    public ToBeMocked toBeMocked;\n\n    public ToBeInitialized(ToBeMocked toBeMocked) {\n        this.toBeMocked = null;\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">public class ToBeInitialized {\n    public ToBeMocked toBeMocked;\n\n    public ToBeInitialized(ToBeMocked toBeMocked) {\n        this.toBeMocked = null;\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">Reading the docs that should work flawlessly. But it does not. As can be seen in <code class=\"notranslate\">Works.java</code> the reason is the <code class=\"notranslate\"> extends ToBeExtended</code> if you remove it everything works.</p>\n<h3 dir=\"auto\">Why does it not work</h3>\n<p dir=\"auto\">In the  <code class=\"notranslate\">DoesNotWork</code> the <code class=\"notranslate\">@InjectMocks</code> annotated instances are initialized twice. It does it twice, one time more for every super class there is. First the <code class=\"notranslate\">@InjectMocks</code> annotated instances are initialized via constructor injection. In a second round Mockito realizes that DoesNotWork.toBeInitialized is already initialized and therefore chooses Field injection over constructor injection. That makes sense if somebody does something like:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"...\n    @InjectMocks\n    Foo foo= new Foo();\n...\"><pre class=\"notranslate\"><code class=\"notranslate\">...\n    @InjectMocks\n    Foo foo= new Foo();\n...\n</code></pre></div>\n<h3 dir=\"auto\">The code responsible</h3>\n<p dir=\"auto\">InjectingAnnotationEngine::processInjectMocks </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/mockito/mockito/blob/caf35b24e2764df0498469526ecb3e7ec68a0430/src/main/java/org/mockito/internal/configuration/InjectingAnnotationEngine.java#L56\">mockito/src/main/java/org/mockito/internal/configuration/InjectingAnnotationEngine.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 56\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/mockito/mockito/commit/caf35b24e2764df0498469526ecb3e7ec68a0430\">caf35b2</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L56\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"56\"></td>\n          <td id=\"LC56\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">private</span> <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">AutoCloseable</span>&gt; <span class=\"pl-en\">processInjectMocks</span>( </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">The method is called by the MockitoExtension:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"processInjectMocks:61, InjectingAnnotationEngine (org.mockito.internal.configuration)\nprocess:48, InjectingAnnotationEngine (org.mockito.internal.configuration)\nopenMocks:82, MockitoAnnotations (org.mockito)\n&lt;init&gt;:43, DefaultMockitoSession (org.mockito.internal.framework)\nstartMocking:83, DefaultMockitoSessionBuilder (org.mockito.internal.session)\nbeforeEach:153, MockitoExtension (org.mockito.junit.jupiter)\"><pre class=\"notranslate\"><code class=\"notranslate\">processInjectMocks:61, InjectingAnnotationEngine (org.mockito.internal.configuration)\nprocess:48, InjectingAnnotationEngine (org.mockito.internal.configuration)\nopenMocks:82, MockitoAnnotations (org.mockito)\n&lt;init&gt;:43, DefaultMockitoSession (org.mockito.internal.framework)\nstartMocking:83, DefaultMockitoSessionBuilder (org.mockito.internal.session)\nbeforeEach:153, MockitoExtension (org.mockito.junit.jupiter)\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    private List&lt;AutoCloseable&gt; processInjectMocks(\n            final Class&lt;?&gt; clazz, final Object testInstance) {\n        List&lt;AutoCloseable&gt; closeables = new ArrayList&lt;&gt;();\n        Class&lt;?&gt; classContext = clazz;\n        while (classContext != Object.class) {\n            closeables.add(injectCloseableMocks(testInstance));\n            classContext = classContext.getSuperclass();\n        }\n        return closeables;\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    private List&lt;AutoCloseable&gt; processInjectMocks(\n            final Class&lt;?&gt; clazz, final Object testInstance) {\n        List&lt;AutoCloseable&gt; closeables = new ArrayList&lt;&gt;();\n        Class&lt;?&gt; classContext = clazz;\n        while (classContext != Object.class) {\n            closeables.add(injectCloseableMocks(testInstance));\n            classContext = classContext.getSuperclass();\n        }\n        return closeables;\n    }\n</code></pre></div>\n<p dir=\"auto\">In this method for every super class the Test class has(<code class=\"notranslate\">classContext.getSuperclass()</code>) it triggers the injection(<code class=\"notranslate\"> injectCloseableMocks</code>) yet another time(<code class=\"notranslate\">while (classContext != Object.class)</code>). That might be clever if the super class has  <code class=\"notranslate\">@InjectMocks</code> annotated instances its-self. But it is odd to call <code class=\"notranslate\">closeables.add(injectCloseableMocks(testInstance));</code> instead of <code class=\"notranslate\">closeables.add(injectCloseableMocks(classContext));</code> then. For me it would make more sense to call it on the super class then instead of repeating the initialization yet another time. But I have not tested this change. I can not foresee what implications this would have. Fixing this concrete bug is probably better of in the hands of somebody that is more familiar with Mockito's internal workings.</p>\n<h2 dir=\"auto\">Why even care about this bug</h2>\n<p dir=\"auto\">Seems like it still initializes the instance right? Who does</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public ToBeInitialized(ToBeMocked toBeMocked) {\n    this.toBeMocked = null;\n }\"><pre class=\"notranslate\"><code class=\"notranslate\">public ToBeInitialized(ToBeMocked toBeMocked) {\n    this.toBeMocked = null;\n }\n</code></pre></div>\n<p dir=\"auto\">anyways?</p>\n<p dir=\"auto\">Since newer Java versions get stricter in enforcing reflections over module borders this will increasingly become an issue. In my case Mockito does access a field via reflections it is not allowed to making it fail. But it should never have tried field injection since the class had a working constructor. Due to the bug that is descripted here it did nevertheless.</p>\n<h2 dir=\"auto\">Versions:</h2>\n<p dir=\"auto\">JDK 17, Windows 11, Mockito Version 4.4.0 (Even though this all should be reproducible elsewhere and with different versions)</p>\n<p dir=\"auto\">Thank you for working on Mockito. Great Framework \u2764\ufe0f<br>\nAny more questions? I am happy to help.</p>",
                "resourcePath": "/mockito/mockito/issues/2602",
                "createdAt": "2022-03-19T11:30:53Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Bump versions.errorprone from 2.10.0 to 2.12.1",
        "url": "https://github.com/mockito/mockito/pull/2608",
        "resourcePath": "/mockito/mockito/pull/2608",
        "createdAt": "2022-04-05T11:45:52Z",
        "number": 2608,
        "mergeCommit": {
          "oid": "331ff01c5f840ff8a3c5b0859185ba78f9446cf0",
          "message": "Bump versions.errorprone from 2.10.0 to 2.12.1 (#2608)\n\n* Bump versions.errorprone from 2.10.0 to 2.11.0\r\n\r\nBumps `versions.errorprone` from 2.10.0 to 2.11.0.\r\n\r\nUpdates `error_prone_core` from 2.10.0 to 2.11.0\r\n- [Release notes](https://github.com/google/error-prone/releases)\r\n- [Commits](https://github.com/google/error-prone/compare/v2.10.0...v2.11.0)\r\n\r\nUpdates `error_prone_test_helpers` from 2.10.0 to 2.11.0\r\n- [Release notes](https://github.com/google/error-prone/releases)\r\n- [Commits](https://github.com/google/error-prone/compare/v2.10.0...v2.11.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.google.errorprone:error_prone_core\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n- dependency-name: com.google.errorprone:error_prone_test_helpers\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\n* Fix compilation for JDK 8\r\n\r\nThis also fixes #2554, by using `.withNoParameters()` instead.\r\n\r\n* Extract method for JDK 8\r\n\r\nFor some reason, Java 8 chooses the wrong subclass for this specific use\r\ncase. All other assertions are fine and this doesn't happen on JDK 11.\r\nTherefore, let's extract it into a method to force the correct type.\r\n\r\n* Fixes #2554: Upgrade Error Prone 2.11 -> 2.12\r\n\r\nSee:\r\n- https://github.com/google/error-prone/releases/tag/v2.12.0\r\n- https://github.com/google/error-prone/compare/v2.11.0...v2.12.0\r\n\r\n* Upgrade Error Prone 2.12.0 -> 2.12.1\r\n\r\nSee:\r\n- https://github.com/google/error-prone/releases/tag/v2.12.1\r\n- https://github.com/google/error-prone/compare/v2.12.0...v2.12.1\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Tim van der Lippe <tvanderlippe@google.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/331ff01c5f840ff8a3c5b0859185ba78f9446cf0",
          "parents": {
            "nodes": [
              {
                "oid": "0dd95d7840a2d1650a237107ced916f0364c9b14",
                "message": "Bump kotlinVersion from 1.6.10 to 1.6.20 (#2607)\n\nBumps `kotlinVersion` from 1.6.10 to 1.6.20.\r\n\r\nUpdates `kotlin-gradle-plugin` from 1.6.10 to 1.6.20\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/master/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/commits)\r\n\r\nUpdates `kotlin-stdlib` from 1.6.10 to 1.6.20\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/master/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.jetbrains.kotlin:kotlin-gradle-plugin\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: org.jetbrains.kotlin:kotlin-stdlib\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "build.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/dependencies.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "settings.gradle.kts"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/matchers/EqualsWithDelta.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/matchers/text/ValuePrinterTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/util/PlatformTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/stubbing/StubbingWithThrowablesTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/errorprone/src/main/java/org/mockito/errorprone/bugpatterns/MockitoAnyIncorrectPrimitiveType.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v841pqoT2gAoMzUzMTI5ZjMwN2M5NjM5YjcyYzJkZGQ4ZDY0Yjc1ZGU5MDE2MThiMw",
                "url": "https://github.com/mockito/mockito/pull/2608/commits/353129f307c9639b72c2ddd8d64b75de901618b3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2554,
                "url": "https://github.com/mockito/mockito/issues/2554",
                "title": "mockito-errorprone seems not compatible with ErrorProne 2.11.0",
                "bodyHTML": "<p dir=\"auto\">We use mockito-errorprone of version 4.3.1 and it seems not compatible with ErrorProne of version 2.11.0.</p>\n<p dir=\"auto\">Our compilation got broken when we updated ErrorProne to 2.11.0 with such error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NoSuchMethodError: 'com.google.errorprone.matchers.method.MethodMatchers$ParameterMatcher com.google.errorprone.matchers.method.MethodMatchers$MethodNameMatcher.withParameters(java.lang.String[])'\n\tat org.mockito.errorprone.bugpatterns.MockitoAnyIncorrectPrimitiveType.&lt;clinit&gt;(MockitoAnyIncorrectPrimitiveType.java:52)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.NoSuchMethodError: 'com.google.errorprone.matchers.method.MethodMatchers$ParameterMatcher com.google.errorprone.matchers.method.MethodMatchers$MethodNameMatcher.withParameters(java.lang.String[])'\n\tat org.mockito.errorprone.bugpatterns.MockitoAnyIncorrectPrimitiveType.&lt;clinit&gt;(MockitoAnyIncorrectPrimitiveType.java:52)\n</code></pre></div>\n<details>\n  <summary>Take a look at the full error log</summary>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.util.ServiceConfigurationError: com.google.errorprone.bugpatterns.BugChecker: Provider org.mockito.errorprone.bugpatterns.MockitoAnyIncorrectPrimitiveType could not be instantiated\n\tat java.base/java.util.ServiceLoader.fail(ServiceLoader.java:582)\n\tat java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:804)\n\tat java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:722)\n\tat java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1395)\n\tat com.google.common.collect.TransformedIterator.next(TransformedIterator.java:52)\n\tat com.google.errorprone.scanner.ScannerSupplier.fromBugCheckerClasses(ScannerSupplier.java:71)\n\tat com.google.errorprone.ErrorPronePlugins.loadPlugins(ErrorPronePlugins.java:47)\n\tat com.google.errorprone.ErrorProneAnalyzer.lambda$scansPlugins$0(ErrorProneAnalyzer.java:77)\n\tat com.google.common.base.Suppliers$NonSerializableMemoizingSupplier.get(Suppliers.java:183)\n\tat com.google.errorprone.ErrorProneAnalyzer.finished(ErrorProneAnalyzer.java:148)\n\tat jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1418)\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1365)\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:960)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.lambda$doCall$0(JavacTaskImpl.java:104)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.handleExceptions(JavacTaskImpl.java:147)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.doCall(JavacTaskImpl.java:100)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.call(JavacTaskImpl.java:94)\n\tat org.gradle.internal.compiler.java.IncrementalCompileTask.call(IncrementalCompileTask.java:89)\n\tat org.gradle.api.internal.tasks.compile.AnnotationProcessingCompileTask.call(AnnotationProcessingCompileTask.java:94)\n\tat org.gradle.api.internal.tasks.compile.ResourceCleaningCompilationTask.call(ResourceCleaningCompilationTask.java:57)\n\tat org.gradle.api.internal.tasks.compile.JdkJavaCompiler.execute(JdkJavaCompiler.java:54)\n\tat org.gradle.api.internal.tasks.compile.JdkJavaCompiler.execute(JdkJavaCompiler.java:39)\n\tat org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.delegateAndHandleErrors(NormalizingJavaCompiler.java:97)\n\tat org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.execute(NormalizingJavaCompiler.java:51)\n\tat org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.execute(NormalizingJavaCompiler.java:37)\n\tat org.gradle.api.internal.tasks.compile.AnnotationProcessorDiscoveringCompiler.execute(AnnotationProcessorDiscoveringCompiler.java:51)\n\tat org.gradle.api.internal.tasks.compile.AnnotationProcessorDiscoveringCompiler.execute(AnnotationProcessorDiscoveringCompiler.java:37)\n\tat org.gradle.api.internal.tasks.compile.ModuleApplicationNameWritingCompiler.execute(ModuleApplicationNameWritingCompiler.java:46)\n\tat org.gradle.api.internal.tasks.compile.ModuleApplicationNameWritingCompiler.execute(ModuleApplicationNameWritingCompiler.java:36)\n\tat org.gradle.jvm.toolchain.internal.DefaultToolchainJavaCompiler.execute(DefaultToolchainJavaCompiler.java:57)\n\tat org.gradle.api.tasks.compile.JavaCompile.lambda$createToolchainCompiler$1(JavaCompile.java:232)\n\tat org.gradle.api.internal.tasks.compile.CleaningJavaCompiler.execute(CleaningJavaCompiler.java:53)\n\tat org.gradle.api.internal.tasks.compile.incremental.IncrementalCompilerFactory.lambda$createRebuildAllCompiler$0(IncrementalCompilerFactory.java:52)\n\tat org.gradle.api.internal.tasks.compile.incremental.SelectiveCompiler.execute(SelectiveCompiler.java:67)\n\tat org.gradle.api.internal.tasks.compile.incremental.SelectiveCompiler.execute(SelectiveCompiler.java:41)\n\tat org.gradle.api.internal.tasks.compile.incremental.IncrementalResultStoringCompiler.execute(IncrementalResultStoringCompiler.java:66)\n\tat org.gradle.api.internal.tasks.compile.incremental.IncrementalResultStoringCompiler.execute(IncrementalResultStoringCompiler.java:52)\n\tat org.gradle.api.internal.tasks.compile.CompileJavaBuildOperationReportingCompiler$2.call(CompileJavaBuildOperationReportingCompiler.java:59)\n\tat org.gradle.api.internal.tasks.compile.CompileJavaBuildOperationReportingCompiler$2.call(CompileJavaBuildOperationReportingCompiler.java:51)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\n\tat org.gradle.api.internal.tasks.compile.CompileJavaBuildOperationReportingCompiler.execute(CompileJavaBuildOperationReportingCompiler.java:51)\n\tat org.gradle.api.tasks.compile.JavaCompile.performCompilation(JavaCompile.java:279)\n\tat org.gradle.api.tasks.compile.JavaCompile.performIncrementalCompilation(JavaCompile.java:165)\n\tat org.gradle.api.tasks.compile.JavaCompile.compile(JavaCompile.java:146)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:104)\n\tat org.gradle.api.internal.project.taskfactory.IncrementalInputsTaskAction.doExecute(IncrementalInputsTaskAction.java:32)\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:51)\n\tat org.gradle.api.internal.project.taskfactory.AbstractIncrementalTaskAction.execute(AbstractIncrementalTaskAction.java:25)\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:29)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution$2.run(TaskExecution.java:239)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeAction(TaskExecution.java:224)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeActions(TaskExecution.java:207)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeWithPreviousOutputFiles(TaskExecution.java:190)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.execute(TaskExecution.java:168)\n\tat org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)\n\tat org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)\n\tat org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)\n\tat org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\n\tat org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)\n\tat org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)\n\tat org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:68)\n\tat org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:38)\n\tat org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48)\n\tat org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)\n\tat org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:41)\n\tat org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)\n\tat org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)\n\tat org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:51)\n\tat org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:29)\n\tat org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:61)\n\tat org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:42)\n\tat org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:60)\n\tat org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:27)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:188)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1(BuildCacheStep.java:75)\n\tat org.gradle.internal.Either$Right.fold(Either.java:175)\n\tat org.gradle.internal.execution.caching.CachingState.fold(CachingState.java:59)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:73)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:48)\n\tat org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:38)\n\tat org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:27)\n\tat org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)\n\tat org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:109)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:56)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:369)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:56)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:38)\n\tat org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:73)\n\tat org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)\n\tat org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:89)\n\tat org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:50)\n\tat org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:114)\n\tat org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)\n\tat org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:76)\n\tat org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.lambda$execute$2(SkipEmptyWorkStep.java:93)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:369)\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:93)\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:34)\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)\n\tat org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)\n\tat org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution$3.withWorkspace(TaskExecution.java:284)\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)\n\tat org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)\n\tat org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)\n\tat org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)\n\tat org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)\n\tat org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:142)\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:131)\n\tat org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)\n\tat org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)\n\tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)\n\tat org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:402)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:389)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:382)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:368)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: java.lang.NoSuchMethodError: 'com.google.errorprone.matchers.method.MethodMatchers$ParameterMatcher com.google.errorprone.matchers.method.MethodMatchers$MethodNameMatcher.withParameters(java.lang.String[])'\n\tat org.mockito.errorprone.bugpatterns.MockitoAnyIncorrectPrimitiveType.&lt;clinit&gt;(MockitoAnyIncorrectPrimitiveType.java:52)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:780)\n\t... 175 more\"><pre class=\"notranslate\"><code class=\"notranslate\">java.util.ServiceConfigurationError: com.google.errorprone.bugpatterns.BugChecker: Provider org.mockito.errorprone.bugpatterns.MockitoAnyIncorrectPrimitiveType could not be instantiated\n\tat java.base/java.util.ServiceLoader.fail(ServiceLoader.java:582)\n\tat java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:804)\n\tat java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:722)\n\tat java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1395)\n\tat com.google.common.collect.TransformedIterator.next(TransformedIterator.java:52)\n\tat com.google.errorprone.scanner.ScannerSupplier.fromBugCheckerClasses(ScannerSupplier.java:71)\n\tat com.google.errorprone.ErrorPronePlugins.loadPlugins(ErrorPronePlugins.java:47)\n\tat com.google.errorprone.ErrorProneAnalyzer.lambda$scansPlugins$0(ErrorProneAnalyzer.java:77)\n\tat com.google.common.base.Suppliers$NonSerializableMemoizingSupplier.get(Suppliers.java:183)\n\tat com.google.errorprone.ErrorProneAnalyzer.finished(ErrorProneAnalyzer.java:148)\n\tat jdk.compiler/com.sun.tools.javac.api.MultiTaskListener.finished(MultiTaskListener.java:132)\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1418)\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.flow(JavaCompiler.java:1365)\n\tat jdk.compiler/com.sun.tools.javac.main.JavaCompiler.compile(JavaCompiler.java:960)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.lambda$doCall$0(JavacTaskImpl.java:104)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.handleExceptions(JavacTaskImpl.java:147)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.doCall(JavacTaskImpl.java:100)\n\tat jdk.compiler/com.sun.tools.javac.api.JavacTaskImpl.call(JavacTaskImpl.java:94)\n\tat org.gradle.internal.compiler.java.IncrementalCompileTask.call(IncrementalCompileTask.java:89)\n\tat org.gradle.api.internal.tasks.compile.AnnotationProcessingCompileTask.call(AnnotationProcessingCompileTask.java:94)\n\tat org.gradle.api.internal.tasks.compile.ResourceCleaningCompilationTask.call(ResourceCleaningCompilationTask.java:57)\n\tat org.gradle.api.internal.tasks.compile.JdkJavaCompiler.execute(JdkJavaCompiler.java:54)\n\tat org.gradle.api.internal.tasks.compile.JdkJavaCompiler.execute(JdkJavaCompiler.java:39)\n\tat org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.delegateAndHandleErrors(NormalizingJavaCompiler.java:97)\n\tat org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.execute(NormalizingJavaCompiler.java:51)\n\tat org.gradle.api.internal.tasks.compile.NormalizingJavaCompiler.execute(NormalizingJavaCompiler.java:37)\n\tat org.gradle.api.internal.tasks.compile.AnnotationProcessorDiscoveringCompiler.execute(AnnotationProcessorDiscoveringCompiler.java:51)\n\tat org.gradle.api.internal.tasks.compile.AnnotationProcessorDiscoveringCompiler.execute(AnnotationProcessorDiscoveringCompiler.java:37)\n\tat org.gradle.api.internal.tasks.compile.ModuleApplicationNameWritingCompiler.execute(ModuleApplicationNameWritingCompiler.java:46)\n\tat org.gradle.api.internal.tasks.compile.ModuleApplicationNameWritingCompiler.execute(ModuleApplicationNameWritingCompiler.java:36)\n\tat org.gradle.jvm.toolchain.internal.DefaultToolchainJavaCompiler.execute(DefaultToolchainJavaCompiler.java:57)\n\tat org.gradle.api.tasks.compile.JavaCompile.lambda$createToolchainCompiler$1(JavaCompile.java:232)\n\tat org.gradle.api.internal.tasks.compile.CleaningJavaCompiler.execute(CleaningJavaCompiler.java:53)\n\tat org.gradle.api.internal.tasks.compile.incremental.IncrementalCompilerFactory.lambda$createRebuildAllCompiler$0(IncrementalCompilerFactory.java:52)\n\tat org.gradle.api.internal.tasks.compile.incremental.SelectiveCompiler.execute(SelectiveCompiler.java:67)\n\tat org.gradle.api.internal.tasks.compile.incremental.SelectiveCompiler.execute(SelectiveCompiler.java:41)\n\tat org.gradle.api.internal.tasks.compile.incremental.IncrementalResultStoringCompiler.execute(IncrementalResultStoringCompiler.java:66)\n\tat org.gradle.api.internal.tasks.compile.incremental.IncrementalResultStoringCompiler.execute(IncrementalResultStoringCompiler.java:52)\n\tat org.gradle.api.internal.tasks.compile.CompileJavaBuildOperationReportingCompiler$2.call(CompileJavaBuildOperationReportingCompiler.java:59)\n\tat org.gradle.api.internal.tasks.compile.CompileJavaBuildOperationReportingCompiler$2.call(CompileJavaBuildOperationReportingCompiler.java:51)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\n\tat org.gradle.api.internal.tasks.compile.CompileJavaBuildOperationReportingCompiler.execute(CompileJavaBuildOperationReportingCompiler.java:51)\n\tat org.gradle.api.tasks.compile.JavaCompile.performCompilation(JavaCompile.java:279)\n\tat org.gradle.api.tasks.compile.JavaCompile.performIncrementalCompilation(JavaCompile.java:165)\n\tat org.gradle.api.tasks.compile.JavaCompile.compile(JavaCompile.java:146)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:104)\n\tat org.gradle.api.internal.project.taskfactory.IncrementalInputsTaskAction.doExecute(IncrementalInputsTaskAction.java:32)\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:51)\n\tat org.gradle.api.internal.project.taskfactory.AbstractIncrementalTaskAction.execute(AbstractIncrementalTaskAction.java:25)\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:29)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution$2.run(TaskExecution.java:239)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:29)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$1.execute(DefaultBuildOperationRunner.java:26)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.run(DefaultBuildOperationRunner.java:47)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:68)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeAction(TaskExecution.java:224)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeActions(TaskExecution.java:207)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.executeWithPreviousOutputFiles(TaskExecution.java:190)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution.execute(TaskExecution.java:168)\n\tat org.gradle.internal.execution.steps.ExecuteStep.executeInternal(ExecuteStep.java:89)\n\tat org.gradle.internal.execution.steps.ExecuteStep.access$000(ExecuteStep.java:40)\n\tat org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:53)\n\tat org.gradle.internal.execution.steps.ExecuteStep$1.call(ExecuteStep.java:50)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\n\tat org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:50)\n\tat org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:40)\n\tat org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:68)\n\tat org.gradle.internal.execution.steps.RemovePreviousOutputsStep.execute(RemovePreviousOutputsStep.java:38)\n\tat org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:48)\n\tat org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:36)\n\tat org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:41)\n\tat org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:74)\n\tat org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:55)\n\tat org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:51)\n\tat org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:29)\n\tat org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:61)\n\tat org.gradle.internal.execution.steps.CaptureStateAfterExecutionStep.execute(CaptureStateAfterExecutionStep.java:42)\n\tat org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:60)\n\tat org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:27)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.executeWithoutCache(BuildCacheStep.java:188)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.lambda$execute$1(BuildCacheStep.java:75)\n\tat org.gradle.internal.Either$Right.fold(Either.java:175)\n\tat org.gradle.internal.execution.caching.CachingState.fold(CachingState.java:59)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:73)\n\tat org.gradle.internal.execution.steps.BuildCacheStep.execute(BuildCacheStep.java:48)\n\tat org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:38)\n\tat org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:27)\n\tat org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:36)\n\tat org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:22)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:109)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$2(SkipUpToDateStep.java:56)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:369)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:56)\n\tat org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:38)\n\tat org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:73)\n\tat org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:44)\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:37)\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:27)\n\tat org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:89)\n\tat org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:50)\n\tat org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:114)\n\tat org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:57)\n\tat org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:76)\n\tat org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:50)\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.lambda$execute$2(SkipEmptyWorkStep.java:93)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:369)\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:93)\n\tat org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:34)\n\tat org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:38)\n\tat org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:43)\n\tat org.gradle.internal.execution.steps.LoadPreviousExecutionStateStep.execute(LoadPreviousExecutionStateStep.java:31)\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.lambda$execute$0(AssignWorkspaceStep.java:40)\n\tat org.gradle.api.internal.tasks.execution.TaskExecution$3.withWorkspace(TaskExecution.java:284)\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:40)\n\tat org.gradle.internal.execution.steps.AssignWorkspaceStep.execute(AssignWorkspaceStep.java:30)\n\tat org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:37)\n\tat org.gradle.internal.execution.steps.IdentityCacheStep.execute(IdentityCacheStep.java:27)\n\tat org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:44)\n\tat org.gradle.internal.execution.steps.IdentifyStep.execute(IdentifyStep.java:33)\n\tat org.gradle.internal.execution.impl.DefaultExecutionEngine$1.execute(DefaultExecutionEngine.java:76)\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:142)\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:131)\n\tat org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:77)\n\tat org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:51)\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)\n\tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:204)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$CallableBuildOperationWorker.execute(DefaultBuildOperationRunner.java:199)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:66)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner$2.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:157)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.execute(DefaultBuildOperationRunner.java:59)\n\tat org.gradle.internal.operations.DefaultBuildOperationRunner.call(DefaultBuildOperationRunner.java:53)\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:73)\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)\n\tat org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:74)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:402)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:389)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:382)\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:368)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:61)\n\tat java.base/java.lang.Thread.run(Thread.java:829)\nCaused by: java.lang.NoSuchMethodError: 'com.google.errorprone.matchers.method.MethodMatchers$ParameterMatcher com.google.errorprone.matchers.method.MethodMatchers$MethodNameMatcher.withParameters(java.lang.String[])'\n\tat org.mockito.errorprone.bugpatterns.MockitoAnyIncorrectPrimitiveType.&lt;clinit&gt;(MockitoAnyIncorrectPrimitiveType.java:52)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\n\tat java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:780)\n\t... 175 more\n</code></pre></div>\n</details>\n<p dir=\"auto\">Versions:</p>\n<ul dir=\"auto\">\n<li>JDK 11.0.13</li>\n<li>mockito-errorprone:: 4.3.1</li>\n<li>ErrorProne: 2.11.0</li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2554",
                "createdAt": "2022-01-27T07:19:21Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #2623: Use zulu distribution and java 11 for release GHA job",
        "url": "https://github.com/mockito/mockito/pull/2624",
        "resourcePath": "/mockito/mockito/pull/2624",
        "createdAt": "2022-04-21T00:26:59Z",
        "number": 2624,
        "mergeCommit": {
          "oid": "737f0a3517256af6ade37fd0e776a2bb230de553",
          "message": "Fixes #2623: Use zulu distribution and java 11 for release GHA job (#2624)",
          "commitUrl": "https://github.com/mockito/mockito/commit/737f0a3517256af6ade37fd0e776a2bb230de553",
          "parents": {
            "nodes": [
              {
                "oid": "f48d794ad14982a134fd14dd2aef03477b699dc6",
                "message": "Bump kotlinVersion from 1.6.20 to 1.6.21 (#2622)\n\nBumps `kotlinVersion` from 1.6.20 to 1.6.21.\r\n\r\nUpdates `kotlin-gradle-plugin` from 1.6.20 to 1.6.21\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/master/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/commits)\r\n\r\nUpdates `kotlin-stdlib` from 1.6.20 to 1.6.21\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/master/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.jetbrains.kotlin:kotlin-gradle-plugin\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: org.jetbrains.kotlin:kotlin-stdlib\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v842hnHH2gAoMDhmODYwOWFhY2U2MjU4MDkwMDJjNTJhZWZjYmMzYWJkYjg1NDA3ZA",
                "url": "https://github.com/mockito/mockito/pull/2624/commits/08f8609aace625809002c52aefcbc3abdb85407d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2623,
                "url": "https://github.com/mockito/mockito/issues/2623",
                "title": "Missing errorprone module for 4.5.0 in central as release was done with jdk 8",
                "bodyHTML": "<p dir=\"auto\">Error prone module is missing for 4.5.0 and not in the 4.5.0 bom.  Looking at the source code changes and release action, it appears jdk 8 was used to release and its ignored unless jdk 11 is used.  Can someone check?</p>",
                "resourcePath": "/mockito/mockito/issues/2623",
                "createdAt": "2022-04-20T03:09:27Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Reintroduce inheriting type annotations from interfaces if only one interface is mocked, including additional interfaces.",
        "url": "https://github.com/mockito/mockito/pull/2645",
        "resourcePath": "/mockito/mockito/pull/2645",
        "createdAt": "2022-05-19T21:47:15Z",
        "number": 2645,
        "mergeCommit": {
          "oid": "d7a8ae040ec7f04e3011026857630aa9116f844d",
          "message": "Merge pull request #2645 from mockito/interface-annotations\n\nReintroduce inheriting type annotations from interfaces if only one interface is mocked, including additional interfaces.",
          "commitUrl": "https://github.com/mockito/mockito/commit/d7a8ae040ec7f04e3011026857630aa9116f844d",
          "parents": {
            "nodes": [
              {
                "oid": "94e9797ba0b4c911a3e246bef68c2cb8ac2ab429",
                "message": "Bump com.diffplug.spotless from 6.6.0 to 6.6.1 (#2643)\n\nBumps com.diffplug.spotless from 6.6.0 to 6.6.1.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.diffplug.spotless\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              },
              {
                "oid": "a3d57fd73ac3dc4288cc93b4e2677975d0820a98",
                "message": "Reintroduce inheriting type annotations from interfaces if only one interface is mocked, including additional interfaces.\n\nWithout this restriction, the first presented interface might determine the interfaces that are inherited by a subsequent mock that presents the interfaces in a different order. Also, it does not make semantic sense to decide on a particular interface to inherit annotations from. Fixes #2640."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/SubclassBytecodeGenerator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/creation/bytebuddy/SubclassByteBuddyMockMakerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v844JpIm2gAoYTNkNTdmZDczYWMzZGM0Mjg4Y2M5M2I0ZTI2Nzc5NzVkMDgyMGE5OA",
                "url": "https://github.com/mockito/mockito/pull/2645/commits/a3d57fd73ac3dc4288cc93b4e2677975d0820a98"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2640,
                "url": "https://github.com/mockito/mockito/issues/2640",
                "title": "Mockito mock of interfaces lost annotation information",
                "bodyHTML": "<p dir=\"auto\">I see some different behaviour after updating mockito, and I think it's a bug.<br>\nSee code below - the test fails because the mocked interface has lost the expected annotation.</p>\n<p dir=\"auto\">Making mocks of classes, keeps the annotation information.<br>\nMaking mocks of interfaces, annotation information is lost.</p>\n<p dir=\"auto\">Junit version: junit:junit:4.13.2<br>\nmockito version: org.mockito:mockito-core:4.5.1<br>\nopenJDK 11</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package com.company;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\nimport org.hamcrest.MatcherAssert;\nimport org.hamcrest.core.IsNull;\nimport org.junit.Test;\nimport org.mockito.Mockito;\n\npublic class TestAnnotation {\n\n\t@Retention(RetentionPolicy.RUNTIME)\n\t@Target(ElementType.TYPE)\n\tpublic @interface SomeAnnotation {\n\t}\n\n\t@SomeAnnotation\n\tpublic class SomeClass {\n\t}\n\n\t@SomeAnnotation\n\tpublic interface SomeInterface {\n\t}\n\n\t@Test\n\tpublic void testAnnotation() {\n\t\tSomeClass someClass = new SomeClass();\n\t\tMatcherAssert.assertThat(someClass.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeClass spyOnSomeClass = Mockito.spy(someClass);\n\t\tMatcherAssert.assertThat(spyOnSomeClass.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeClass someClassMock = Mockito.mock(SomeClass.class);\n\t\tMatcherAssert.assertThat(someClassMock.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\n\t\tMatcherAssert.assertThat(SomeInterface.class.getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeInterface someInterfaceMock = Mockito.mock(SomeInterface.class);\n\t\tMatcherAssert.assertThat(someInterfaceMock.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t}\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">package com.company;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\nimport org.hamcrest.MatcherAssert;\nimport org.hamcrest.core.IsNull;\nimport org.junit.Test;\nimport org.mockito.Mockito;\n\npublic class TestAnnotation {\n\n\t@Retention(RetentionPolicy.RUNTIME)\n\t@Target(ElementType.TYPE)\n\tpublic @interface SomeAnnotation {\n\t}\n\n\t@SomeAnnotation\n\tpublic class SomeClass {\n\t}\n\n\t@SomeAnnotation\n\tpublic interface SomeInterface {\n\t}\n\n\t@Test\n\tpublic void testAnnotation() {\n\t\tSomeClass someClass = new SomeClass();\n\t\tMatcherAssert.assertThat(someClass.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeClass spyOnSomeClass = Mockito.spy(someClass);\n\t\tMatcherAssert.assertThat(spyOnSomeClass.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeClass someClassMock = Mockito.mock(SomeClass.class);\n\t\tMatcherAssert.assertThat(someClassMock.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\n\t\tMatcherAssert.assertThat(SomeInterface.class.getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t\tSomeInterface someInterfaceMock = Mockito.mock(SomeInterface.class);\n\t\tMatcherAssert.assertThat(someInterfaceMock.getClass().getAnnotation(SomeAnnotation.class), IsNull.notNullValue());\n\t}\n}\n</code></pre></div>\n<p dir=\"auto\">The test works on previous versions of mockito like, 4.4.0</p>",
                "resourcePath": "/mockito/mockito/issues/2640",
                "createdAt": "2022-05-11T07:28:36Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix for Issue2656",
        "url": "https://github.com/mockito/mockito/pull/2659",
        "resourcePath": "/mockito/mockito/pull/2659",
        "createdAt": "2022-05-31T22:20:16Z",
        "number": 2659,
        "mergeCommit": {
          "oid": "ff98622a8f4bbe96ef5405434b5d788fcd118bb4",
          "message": "Restore behavior for mocks configured without strictness (#2659)\n\nFixes #2656",
          "commitUrl": "https://github.com/mockito/mockito/commit/ff98622a8f4bbe96ef5405434b5d788fcd118bb4",
          "parents": {
            "nodes": [
              {
                "oid": "1fbef57f8a54ec6ff3ffc1551b493351df81ab9e",
                "message": "Bump groovy from 3.0.10 to 3.0.11 (#2660)\n\nBumps [groovy](https://github.com/apache/groovy) from 3.0.10 to 3.0.11.\r\n- [Release notes](https://github.com/apache/groovy/releases)\r\n- [Commits](https://github.com/apache/groovy/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.codehaus.groovy:groovy\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/Mock.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/MockAnnotationProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/settings/CreationSettings.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/MockTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/strictness/StrictnessMockAnnotationTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/ProductionCode.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/StrictnessTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v844xb4b2gAoYzdhZjFmYWE0Nzc4ZTE4MzAxYzI1YzRhZTcyYjAzOWI4OWVhZmMzZA",
                "url": "https://github.com/mockito/mockito/pull/2659/commits/c7af1faa4778e18301c25c4ae72b039b89eafc3d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2656,
                "url": "https://github.com/mockito/mockito/issues/2656",
                "title": "Regression? Strictness set in `@MockitoSettings` ignored after upgrade from 4.5.1 to 4.6.0",
                "bodyHTML": "<p dir=\"auto\">Upgrading from Mockito 4.5.1 to 4.6.0 and it looks to me as though <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1244556133\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2650\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2650/hovercard\" href=\"https://github.com/mockito/mockito/pull/2650\">#2650</a> or something around there has introduced a regression.</p>\n<p dir=\"auto\">I'm seeing <code class=\"notranslate\">PotentialStubbingProblem</code> exceptions where previously there were none, because the test class is annotated with <code class=\"notranslate\">@MockitoSettings(strictness = Strictness.LENIENT)</code>.</p>\n<p dir=\"auto\">The issue seems to be that <code class=\"notranslate\">StrictnessSelector</code> prefers the strictness set in the mock to the test level strictness, and the mock <em>defaults</em> to <code class=\"notranslate\">STRICT_STUBS</code>, so always overrides the strictness set in <code class=\"notranslate\">@MockitoSettings</code>.</p>\n<p dir=\"auto\">I've added a failing example test that demonstrates the issue here:  <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1253595131\" data-permission-text=\"Title is private\" data-url=\"https://github.com/big-andy-coates/mockito/issues/1\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/big-andy-coates/mockito/pull/1/hovercard\" href=\"https://github.com/big-andy-coates/mockito/pull/1\">big-andy-coates#1</a></p>\n<p dir=\"auto\">The above test fails with:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"expected: \n  Optional.empty\n but was: \n  Optional[org.mockito.exceptions.misusing.PotentialStubbingProblem: \n  Strict stubbing argument mismatch. Please check:\n   - this invocation of 'test' method:\n      rootMock.test(&quot;Bar&quot;);\n      -&gt; at org.mockitousage.ProductionCode.simpleMethod(ProductionCode.java:9)\n   - has following stubbing(s) with different arguments:\n      1. rootMock.test(&quot;Foo&quot;);\n        -&gt; at org.mockitousage.StrictnessTest$LenientMockitoSettings.should_not_throw_on_potential_stubbing_issue(StrictnessTest.java:176)\n  Typically, stubbing argument mismatch indicates user mistake when writing tests.\n  Mockito fails early so that you can debug potential problem easily.\n  However, there are legit scenarios when this exception generates false negative signal:\n    - stubbing the same method multiple times using 'given().will()' or 'when().then()' API\n      Please use 'will().given()' or 'doReturn().when()' API for stubbing.\n    - stubbed method is intentionally invoked with different arguments by code under test\n      Please use default or 'silent' JUnit Rule (equivalent of Strictness.LENIENT).\n  For more information see javadoc for PotentialStubbingProblem class.]\"><pre class=\"notranslate\"><code class=\"notranslate\">expected: \n  Optional.empty\n but was: \n  Optional[org.mockito.exceptions.misusing.PotentialStubbingProblem: \n  Strict stubbing argument mismatch. Please check:\n   - this invocation of 'test' method:\n      rootMock.test(\"Bar\");\n      -&gt; at org.mockitousage.ProductionCode.simpleMethod(ProductionCode.java:9)\n   - has following stubbing(s) with different arguments:\n      1. rootMock.test(\"Foo\");\n        -&gt; at org.mockitousage.StrictnessTest$LenientMockitoSettings.should_not_throw_on_potential_stubbing_issue(StrictnessTest.java:176)\n  Typically, stubbing argument mismatch indicates user mistake when writing tests.\n  Mockito fails early so that you can debug potential problem easily.\n  However, there are legit scenarios when this exception generates false negative signal:\n    - stubbing the same method multiple times using 'given().will()' or 'when().then()' API\n      Please use 'will().given()' or 'doReturn().when()' API for stubbing.\n    - stubbed method is intentionally invoked with different arguments by code under test\n      Please use default or 'silent' JUnit Rule (equivalent of Strictness.LENIENT).\n  For more information see javadoc for PotentialStubbingProblem class.]\n</code></pre></div>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2656",
                "createdAt": "2022-05-31T09:28:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Improve Varargs handling in AdditionalAnswers",
        "url": "https://github.com/mockito/mockito/pull/2664",
        "resourcePath": "/mockito/mockito/pull/2664",
        "createdAt": "2022-06-02T00:20:24Z",
        "number": 2664,
        "mergeCommit": {
          "oid": "ce4e64dc782a132e4f32faf56a2630187a703a00",
          "message": "Improve Varargs handling in AdditionalAnswers (#2664)\n\nFixes issues around vararg handling for the following methods in `AdditionalAnswers`:\r\n * `returnsFirstArg`\r\n * `returnsSecondArg`\r\n * `returnsLastArg`\r\n * `returnsArgAt`\r\n * `answer`\r\n * `answerVoid`\r\n\r\nThese methods were not correctly handling varargs. For example,\r\n\r\n```java\r\ndoAnswer(answerVoid(\r\n      (VoidAnswer2<String, Object[]>) logger::info\r\n   )).when(mock)\r\n      .info(any(), (Object[]) any());\r\n\r\nmock.info(\"Some message with {} {} {}\", \"three\", \"parameters\", \"\");\r\n```\r\n\r\nWould previously have resulted in a `ClassCastException` being thrown from the `mock.info` call.  This was because the `answerVoid` method was not taking into account that the second parameter was a varargs parameter and was attempting to pass the second actual argument `\"three\"`, rather than the second _raw_ argument `[\"three\", \"parameters\", \"\"]`.\r\n\r\nFixes #2644",
          "commitUrl": "https://github.com/mockito/mockito/commit/ce4e64dc782a132e4f32faf56a2630187a703a00",
          "parents": {
            "nodes": [
              {
                "oid": "5df5fbe32d9a2dae36c2fb2ec18bbd399a472de4",
                "message": "Fix typo (#2681)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/answers/AnswerFunctionalInterfaces.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/answers/ReturnsArgumentAt.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/defaultanswers/ForwardsInvocations.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/invocation/Invocation.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/invocation/InvocationOnMock.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/IMethods.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/MethodsImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/stubbing/StubbingWithAdditionalAnswersTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v8447uuF2gAoN2VkOWIyNjZmMWFlYWJmMGJiODMxOWQ5MWI5ODM0NDIyMTQ0M2FkZA",
                "url": "https://github.com/mockito/mockito/pull/2664/commits/7ed9b266f1aeabf0bb8319d91b98344221443add"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2644,
                "url": "https://github.com/mockito/mockito/issues/2644",
                "title": "Varargs methods cause `ClassCastException` in `AnswerFunctionalInterfaces`",
                "bodyHTML": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">The other day, I discovered that this code does not work:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        doAnswer(answerVoid((VoidAnswer2&lt;String, Object[]&gt;)\n                logger::info\n        )).when(mock)\n                .info(any(), (Object[]) any());\n\n        // This call will throw an exception\n        mock.info(&quot;Some message with {} {} {}&quot;, &quot;three&quot;, &quot;parameters&quot;, &quot;&quot;);\"><pre class=\"notranslate\">        <span class=\"pl-en\">doAnswer</span>(<span class=\"pl-en\">answerVoid</span>((<span class=\"pl-smi\">VoidAnswer2</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>[]&gt;)\n                <span class=\"pl-s1\">logger</span>::<span class=\"pl-s1\">info</span>\n        )).<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">mock</span>)\n                .<span class=\"pl-en\">info</span>(<span class=\"pl-en\">any</span>(), (<span class=\"pl-smi\">Object</span>[]) <span class=\"pl-en\">any</span>());\n\n        <span class=\"pl-c\">// This call will throw an exception</span>\n        <span class=\"pl-s1\">mock</span>.<span class=\"pl-en\">info</span>(<span class=\"pl-s\">\"Some message with {} {} {}\"</span>, <span class=\"pl-s\">\"three\"</span>, <span class=\"pl-s\">\"parameters\"</span>, <span class=\"pl-s\">\"\"</span>);</pre></div>\n<p dir=\"auto\">The exception details looks as follows:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')\njava.lang.ClassCastException: class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')\n\tat org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4.answer(AnswerFunctionalInterfaces.java:97)\n\tat org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4.answer(AnswerFunctionalInterfaces.java:93)\n\tat org.mockito.internal.stubbing.StubbedInvocationMatcher.answer(StubbedInvocationMatcher.java:42)\n\tat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:103)\n\tat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\n\tat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:34)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:56)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(MockMethodInterceptor.java:161)\n\tat org.slf4j.Logger$MockitoMock$f4Org7xs.info(Unknown Source)\n\tat LoggerMockingTest.logger_info_can_be_called_without_exceptions(LoggerMockingTest.java:34)\n        [...]\"><pre class=\"notranslate\"><code class=\"notranslate\">class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')\njava.lang.ClassCastException: class java.lang.String cannot be cast to class [Ljava.lang.Object; (java.lang.String and [Ljava.lang.Object; are in module java.base of loader 'bootstrap')\n\tat org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4.answer(AnswerFunctionalInterfaces.java:97)\n\tat org.mockito.internal.stubbing.answers.AnswerFunctionalInterfaces$4.answer(AnswerFunctionalInterfaces.java:93)\n\tat org.mockito.internal.stubbing.StubbedInvocationMatcher.answer(StubbedInvocationMatcher.java:42)\n\tat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:103)\n\tat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\n\tat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:34)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:56)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor$DispatcherDefaultingToRealMethod.interceptAbstract(MockMethodInterceptor.java:161)\n\tat org.slf4j.Logger$MockitoMock$f4Org7xs.info(Unknown Source)\n\tat LoggerMockingTest.logger_info_can_be_called_without_exceptions(LoggerMockingTest.java:34)\n        [...]\n</code></pre></div>\n<p dir=\"auto\">The following <em>works</em>, but feels much less elegant:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        doAnswer( invocation -&gt; {\n            String format = invocation.getArgument( 0 );\n            Object[] allArguments = invocation.getArguments();\n            Object[] arguments = Arrays.copyOfRange( allArguments, 1, allArguments.length );\n            logger.info( format, arguments );\n            return null;\n        } ).when( mock )\n                .info( anyString(), (Object[])any() );\"><pre class=\"notranslate\">        <span class=\"pl-en\">doAnswer</span>( <span class=\"pl-s1\">invocation</span> -&gt; {\n            <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">format</span> = <span class=\"pl-s1\">invocation</span>.<span class=\"pl-en\">getArgument</span>( <span class=\"pl-c1\">0</span> );\n            <span class=\"pl-smi\">Object</span>[] <span class=\"pl-s1\">allArguments</span> = <span class=\"pl-s1\">invocation</span>.<span class=\"pl-en\">getArguments</span>();\n            <span class=\"pl-smi\">Object</span>[] <span class=\"pl-s1\">arguments</span> = <span class=\"pl-smi\">Arrays</span>.<span class=\"pl-en\">copyOfRange</span>( <span class=\"pl-s1\">allArguments</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-s1\">allArguments</span>.<span class=\"pl-s1\">length</span> );\n            <span class=\"pl-s1\">logger</span>.<span class=\"pl-en\">info</span>( <span class=\"pl-s1\">format</span>, <span class=\"pl-s1\">arguments</span> );\n            <span class=\"pl-k\">return</span> <span class=\"pl-c1\">null</span>;\n        } ).<span class=\"pl-en\">when</span>( <span class=\"pl-s1\">mock</span> )\n                .<span class=\"pl-en\">info</span>( <span class=\"pl-en\">anyString</span>(), (<span class=\"pl-smi\">Object</span>[])<span class=\"pl-en\">any</span>() );</pre></div>\n<p dir=\"auto\">Is this to be considered a bug or a feature? \ud83d\ude42 I get the feeling that varargs (<code class=\"notranslate\">Object[]</code> under the hood) parameters do not really work when used with the <code class=\"notranslate\">answerVoid()</code>-based approach as described above.</p>\n<h3 dir=\"auto\">Full MCVE</h3>\n<p dir=\"auto\"><a href=\"https://github.com/perlun/mockito-slf4-logging-example\">https://github.com/perlun/mockito-slf4-logging-example</a></p>\n<h3 dir=\"auto\">Issue checks</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information): Reproduced with latest Mockito, 4.5.1</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2644",
                "createdAt": "2022-05-17T09:15:40Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Avoids starting mocks \"half-way\" if a superclass constructor is mocked but an unmocked subclass is initiated.",
        "url": "https://github.com/mockito/mockito/pull/2682",
        "resourcePath": "/mockito/mockito/pull/2682",
        "createdAt": "2022-06-11T21:04:02Z",
        "number": 2682,
        "mergeCommit": {
          "oid": "a6e7132523d93d4974614167706f1e1ab271bd35",
          "message": "Merge pull request #2682 from mockito/avoid-subclass-constructor-call\n\nAvoids starting mocks \"half-way\" if a superclass constructor is mocked but an unmocked subclass is initiated.",
          "commitUrl": "https://github.com/mockito/mockito/commit/a6e7132523d93d4974614167706f1e1ab271bd35",
          "parents": {
            "nodes": [
              {
                "oid": "3f9ea84ad056376dee9ad7cee2a46e9fa8cfdb69",
                "message": "Clarify mocking error message and point to GitHub (#2693)\n\nFixes #2692"
              },
              {
                "oid": "02615ffb8e1977296ef66e445a09d7e6611898ea",
                "message": "Avoids starting mocks \"half-way\" if a superclass constructor is mocked but an unmocked subclass is initiated."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineDelegateByteBuddyMockMaker.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/StackTraceChecker.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/StackWalkerChecker.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/SubconstructorMockTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v845gkG32gAoMDI2MTVmZmI4ZTE5NzcyOTZlZjY2ZTQ0NWEwOWQ3ZTY2MTE4OThlYQ",
                "url": "https://github.com/mockito/mockito/pull/2682/commits/02615ffb8e1977296ef66e445a09d7e6611898ea"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2680,
                "url": "https://github.com/mockito/mockito/issues/2680",
                "title": "MockedConstruction has side effects even after close() (with Sub-/Superclass)",
                "bodyHTML": "<p dir=\"auto\">I am not 100% sure, but I think this is a bug. (Might be me just doing something wrong, but I don't see anything)</p>\n<p dir=\"auto\">I prepared a small example <a href=\"https://github.com/eNBeWe/mockito-bug\">here</a> with most recent versions of mockito-inline (4.6.1) and junit5 (5.8.2). I prepared it on Ubuntu, using OpenJDK 11, but I also experienced this issue on other systems.</p>\n<p dir=\"auto\">In short, I have two tests, each mocking constructors. The two constructors are related to each other, via inheritance. Both constructor mocks are auto-closed through try-with-resource.<br>\nIf I first mock the subclass constructor, close it again and then mock the superclass constructor and create a subclass object, my test fails. If I do it the other way around, my tests work.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class SuperClass {}\n\nclass SubClass extends SuperClass {\n\tpublic boolean isOtherValue() {\n\t\treturn true;\n\t}\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">class SuperClass {}\n\nclass SubClass extends SuperClass {\n\tpublic boolean isOtherValue() {\n\t\treturn true;\n\t}\n}\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@TestMethodOrder(OrderAnnotation.class)\nclass FailingTest {\n\n\t@Test\n\t@Order(1)\n\tvoid testThingsFirst() {\n\t\ttry (MockedConstruction&lt;SubClass&gt; mocked = Mockito.mockConstruction(SubClass.class)) {\n\t\t\tSystem.out.println(&quot;Running testCreateStuff&quot;);\n\t\t}\n\t}\n\n\t@Test\n\t@Order(2)\n\tvoid testThingsSecond() {\n\t\ttry (MockedConstruction&lt;SuperClass&gt; constructionMock = Mockito.mockConstruction(SuperClass.class)) {\n\t\t\tSystem.out.println(&quot;Running testOtherValue&quot;);\n\t\t\tSubClass testee = new SubClass();\n\t\t\tassertTrue(testee.isOtherValue());\n\t\t}\n\t}\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@TestMethodOrder(OrderAnnotation.class)\nclass FailingTest {\n\n\t@Test\n\t@Order(1)\n\tvoid testThingsFirst() {\n\t\ttry (MockedConstruction&lt;SubClass&gt; mocked = Mockito.mockConstruction(SubClass.class)) {\n\t\t\tSystem.out.println(\"Running testCreateStuff\");\n\t\t}\n\t}\n\n\t@Test\n\t@Order(2)\n\tvoid testThingsSecond() {\n\t\ttry (MockedConstruction&lt;SuperClass&gt; constructionMock = Mockito.mockConstruction(SuperClass.class)) {\n\t\t\tSystem.out.println(\"Running testOtherValue\");\n\t\t\tSubClass testee = new SubClass();\n\t\t\tassertTrue(testee.isOtherValue());\n\t\t}\n\t}\n}\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[ERROR] Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.793 s &lt;&lt;&lt; FAILURE! - in de.enbewe.bug.mockito.FailingTest\n[ERROR] de.enbewe.bug.mockito.FailingTest.testThingsSecond  Time elapsed: 0.039 s  &lt;&lt;&lt; FAILURE!\norg.opentest4j.AssertionFailedError: expected: &lt;true&gt; but was: &lt;false&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">[ERROR] Tests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.793 s &lt;&lt;&lt; FAILURE! - in de.enbewe.bug.mockito.FailingTest\n[ERROR] de.enbewe.bug.mockito.FailingTest.testThingsSecond  Time elapsed: 0.039 s  &lt;&lt;&lt; FAILURE!\norg.opentest4j.AssertionFailedError: expected: &lt;true&gt; but was: &lt;false&gt;\n</code></pre></div>\n<p dir=\"auto\">So it seems the old, closed subclass-constructor is becoming active again, when I mock the superclass.</p>\n<p dir=\"auto\">I tried to find some more info / debug more, but I don't really understand enough of the internals of Mockito.</p>",
                "resourcePath": "/mockito/mockito/issues/2680",
                "createdAt": "2022-06-11T11:42:34Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "RETURNS_SELF: Avoids returning mock when mock type is assignable to method return type, but method return type is Object.",
        "url": "https://github.com/mockito/mockito/pull/2687",
        "resourcePath": "/mockito/mockito/pull/2687",
        "createdAt": "2022-06-14T15:12:24Z",
        "number": 2687,
        "mergeCommit": {
          "oid": "512ee3949484e4765038a0410cd7a7f1b73cc655",
          "message": "Fix RETURNS_SELF for methods with generic return type (#2687)\n\nFixes #2686",
          "commitUrl": "https://github.com/mockito/mockito/commit/512ee3949484e4765038a0410cd7a7f1b73cc655",
          "parents": {
            "nodes": [
              {
                "oid": "14a1bb42babcf1519d45d7c6b3ba5b0627d5cafd",
                "message": "Bump org.eclipse.osgi from 3.17.200 to 3.18.0 (#2688)\n\nBumps [org.eclipse.osgi](https://github.com/eclipse-equinox/equinox.binaries) from 3.17.200 to 3.18.0.\r\n- [Release notes](https://github.com/eclipse-equinox/equinox.binaries/releases)\r\n- [Commits](https://github.com/eclipse-equinox/equinox.binaries/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.eclipse.platform:org.eclipse.osgi\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/defaultanswers/TriesToReturnSelf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/stubbing/StubbingReturnsSelfTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v845pEwB2gAoOGE1M2MzZTRlMDczOTdiOGFkN2EyOTdkOTJmMWUzYWNiYTAwZjc0NA",
                "url": "https://github.com/mockito/mockito/pull/2687/commits/8a53c3e4e07397b8ad7a297d92f1e3acba00f744"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2686,
                "url": "https://github.com/mockito/mockito/issues/2686",
                "title": "RETURNS_SELF breaks methods with generic return type",
                "bodyHTML": "<p dir=\"auto\">I'm trying to use RETURNS_SELF to mock a builder with a generic method:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"private static class HttpBuilder {\n  private String uri;\n  \n  public HttpBuilder withUri(String uri) {\n    this.uri = uri;\n    return this\n  }\n\n  ...\n\n  public &lt;T&gt; T request(T result) {\n    return result; // Do typed request\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">HttpBuilder</span> {\n  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">uri</span>;\n  \n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">HttpBuilder</span> <span class=\"pl-en\">withUri</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">uri</span>) {\n    <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">uri</span> = <span class=\"pl-s1\">uri</span>;\n    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">this</span>\n  }\n\n  ...\n\n  <span class=\"pl-k\">public</span> &lt;<span class=\"pl-s1\">T</span>&gt; <span class=\"pl-smi\">T</span> <span class=\"pl-s1\">request</span>(<span class=\"pl-smi\">T</span> <span class=\"pl-s1\">result</span>) {\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">result</span>; <span class=\"pl-c\">// Do typed request</span>\n  }\n}</pre></div>\n<p dir=\"auto\">It is easy enough to mock using:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"val builder = mock(HttpBuilder.class, RETURNS_SELF);\"><pre class=\"notranslate\"><span class=\"pl-smi\">val</span> <span class=\"pl-s1\">builder</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">HttpBuilder</span>.<span class=\"pl-k\">class</span>, <span class=\"pl-c1\">RETURNS_SELF</span>);</pre></div>\n<p dir=\"auto\">However this breaks:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"given(builder.request(anyString())).willAnswer(i \u2192 &quot;Mocked result&quot;);\"><pre class=\"notranslate\"><span class=\"pl-en\">given</span>(<span class=\"pl-s1\">builder</span>.<span class=\"pl-en\">request</span>(<span class=\"pl-en\">anyString</span>())).<span class=\"pl-en\">willAnswer</span>(<span class=\"pl-s1\">i</span> \u2192 <span class=\"pl-s\">\"Mocked result\"</span>);</pre></div>\n<p dir=\"auto\">The problem is, that <code class=\"notranslate\">anyString()</code> infers <code class=\"notranslate\">builder.request</code> to have a <code class=\"notranslate\">String</code> return type, which infers <code class=\"notranslate\">given</code> to have a <code class=\"notranslate\">String methodCall</code> parameter.<br>\nHowever, at runtime a <code class=\"notranslate\">ClassCastException</code> is thrown as <code class=\"notranslate\">builder.request(anyString())</code> returns a <code class=\"notranslate\">HttpBuilder$MockitoMock</code> which cannot be cast to the the <code class=\"notranslate\">String</code> expected by <code class=\"notranslate\">given</code>.<br>\n(I think) this is caused by <code class=\"notranslate\">RETURNS_SELF</code> <a href=\"https://github.com/mockito/mockito/blob/6f9108b833323345bd926f10914224d3e0a11b80/src/main/java/org/mockito/internal/stubbing/defaultanswers/TriesToReturnSelf.java#L23\">here</a> in the <code class=\"notranslate\">TriesToReturnSelf</code> class. The generic method has the return type <code class=\"notranslate\">Object</code> which is obviously assignable from <code class=\"notranslate\">mockType</code>. This causes mockito to always undesirably return <code class=\"notranslate\">this</code> with methods with generic return types when using <code class=\"notranslate\">RETURNS_SELF</code>.</p>\n<p dir=\"auto\">Is it possible for mockito to check whether the return type of the method  is generic? In that case I would suggest a fix to never return <code class=\"notranslate\">this</code> for methods with generic return types.<br>\nIf you think this would be a good solution, I am happy to contribute a fix.</p>\n<p dir=\"auto\">edit: What do you think of checking whether return type is of type <code class=\"notranslate\">Object.class</code>, which suggests that mockito should probable return the empty value instead of <code class=\"notranslate\">this</code></p>\n<p dir=\"auto\">edit 2: Added <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1270961760\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2687\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2687/hovercard\" href=\"https://github.com/mockito/mockito/pull/2687\">#2687</a> to demonstrate the issue with a test and solution proposal. Happy to update with any comments</p>",
                "resourcePath": "/mockito/mockito/issues/2686",
                "createdAt": "2022-06-14T14:25:44Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow @InjectMock into static/final fields (fixes #1417)",
        "url": "https://github.com/mockito/mockito/pull/2700",
        "resourcePath": "/mockito/mockito/pull/2700",
        "createdAt": "2022-07-02T01:30:01Z",
        "number": 2700,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/configuration/injection/InjectUnsafeParser.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/injection/PropertyAndSetterInjection.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/injection/filter/TerminalMockCandidateFilter.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/util/reflection/StaticFinalOverrider.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/configuration/injection/InjectUnsafeParserTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/configuration/injection/PropertyAndSetterInjectionTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/configuration/injection/filter/TerminalMockCandidateFilterTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/util/reflection/StaticFinalOverriderTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/annotation/InjectUnsafeTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitoutil/ExceptionHider.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v846vHle2gAoODAxZmM1OGRjNDFhYTc0M2Q4OGY5MDJhZGViMmU1NzI4NTM5YjdhNw",
                "url": "https://github.com/mockito/mockito/pull/2700/commits/801fc58dc41aa743d88f902adeb2e5728539b7a7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1417,
                "url": "https://github.com/mockito/mockito/issues/1417",
                "title": "Allow @InjectMock into static/final fields",
                "bodyHTML": "<p dir=\"auto\">For some of my projects it would be nice if @InjectMock would work with spies on final/static fields.<br>\nUnfortunately I cannot refactor the code to use constructor/setter injection since this would alter the API (package-private is not sufficient).</p>\n<p dir=\"auto\">I can see that injecting into static final is problematic (unexpected test behavior on subsequent tests)...<br>\nbut injecting into just static <em>or</em> final fields should pose no problems - at least none I can see (care to enlighten if your opinion differs?).</p>",
                "resourcePath": "/mockito/mockito/issues/1417",
                "createdAt": "2018-06-29T23:05:38Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "injection"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #2626 : Introduce MockSettings.mockMaker",
        "url": "https://github.com/mockito/mockito/pull/2701",
        "resourcePath": "/mockito/mockito/pull/2701",
        "createdAt": "2022-07-04T19:47:55Z",
        "number": 2701,
        "mergeCommit": {
          "oid": "3e910ea990e61b29ec76d8b47a6d1b1607d9da3f",
          "message": "Fixes #2626 : Introduce MockSettings.mockMaker (#2701)",
          "commitUrl": "https://github.com/mockito/mockito/commit/3e910ea990e61b29ec76d8b47a6d1b1607d9da3f",
          "parents": {
            "nodes": [
              {
                "oid": "0753d48161bc6376108f38146c01c80274a712e3",
                "message": "Explicitly add permissions to GitHub actions (#2744)\n\nSigned-off-by: sashashura <93376818+sashashura@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/reflection/FieldInitializer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/mock/MockCreationSettings.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/plugins/MockMaker.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/ProgrammaticMockMakerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/configuration/plugins/DefaultMockitoPluginsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/util/MockCreationValidatorTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/util/MockUtilTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitointegration/DeferMockMakersClassLoadingTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/annotation/ProgrammaticMockMakerAnnotationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/ConstructionMockTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v8460RGN2gAoMTgxZDk2MTY3YmY5OTBiODk1MjQ1ZGNlNjM0YzdiNmNiNDc3NGVlZg",
                "url": "https://github.com/mockito/mockito/pull/2701/commits/181d96167bf990b895245dce634c7b6cb4774eef"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2626,
                "url": "https://github.com/mockito/mockito/issues/2626",
                "title": "Introduce option to disable inline-mock-maker for a specific instance",
                "bodyHTML": "<p dir=\"auto\">In order to ease the migration to the inline mock maker in big projects, it would nice if the mock make can be changed for individual mocks. This would allow projects to change the default mock maker to <code class=\"notranslate\">inline-mock-maker</code> without immediately fixing all edge cases where the new mock maker doesn't work.</p>\n<p dir=\"auto\">Such option could be provided over a new method on the <code class=\"notranslate\">MockSettings</code> class.</p>",
                "resourcePath": "/mockito/mockito/issues/2626",
                "createdAt": "2022-04-21T14:04:12Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #2720: Use StackWalker on Java 9+ to create Locations",
        "url": "https://github.com/mockito/mockito/pull/2723",
        "resourcePath": "/mockito/mockito/pull/2723",
        "createdAt": "2022-08-05T12:27:44Z",
        "number": 2723,
        "mergeCommit": {
          "oid": "73a861f778e117ad0ccd7388b8d7a614e65c1623",
          "message": "Fixes #2720: Use StackWalker on Java 9+ to create Locations (#2723)\n\nIn terms of memory allocations, this reduces the overall memory\r\nallocations of creating a location by an order of magnitude in\r\nJava 9, and as compared to Java 8.\r\n\r\nThe implementation is somewhat involved due to these desires:\r\n\r\n- Minimize the amount of work done if the Location is never used. This\r\n  is done by not converting the StackFrame into a StackTraceElement,\r\n  instead wrapping in an intermediate state. The StackTraceElement conversion\r\n  will only occur (internally) if the .getFileName() method is called.\r\n- Ensure the implementation is still Serializable. This is ensured with\r\n  a .writeReplace method.\r\n- Minimize the number of allocations, which is basically an exercise in\r\n  lambda caching.\r\n- Ensuring the old mechanism still works on Java 8.\r\n\r\nPresently on Java 9+, on a stack depth of 1000 the old mechanism will allocate\r\n40kB of RAM per call. The new one will allocate 1.5kB of RAM per call,\r\nwhich is a huge improvement.\r\n\r\nThis is still sadly not the 'close-to-no-overhead' solution I was\r\nlooking for. I therefore also added a system property that can be used\r\nto fully disable Location creation. I'm aware that this is likely not\r\nthe right approach given Mockito has plugins and settings - mostly\r\nlooking for guidance here given I'm not sure what would be idiomatic\r\nhere.",
          "commitUrl": "https://github.com/mockito/mockito/commit/73a861f778e117ad0ccd7388b8d7a614e65c1623",
          "parents": {
            "nodes": [
              {
                "oid": "89698baaebdf6954324d5bb252e49da2f7bf860a",
                "message": "Optimize `TypeSafeMatching` iteration over class methods (#2729)\n\n`Class.getMethods` is an inefficient method call which is being called on\r\neach mock invocation. It ends up constructing new `Method` objects for\r\neach method on the class, and this can dominate the overall performance\r\nof Mockito mocks. This commit caches the result of the computation.\r\n\r\nOnce concern is that this change uses some static state. I considered:\r\n\r\n- Instance state - based on where this type is constructed it seemed\r\n  like it'd be a big imposition on code readability elsewhere.\r\n- Weakly referenced map. Mockito has a type for this, but the\r\n  constructor of that type produces a Thread with which to clean up.\r\n\r\nBoth of these seemed like overkill compared to the overhead expected\r\nin the real world (which should be on the order of a few kilobytes of\r\nRAM at most).\r\n\r\nFixes #2723"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/invocation/InvocationBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/stubbing/defaultanswers/ReturnsSmartNullsTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitointegration/ClassLoadabilityChecker.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitointegration/NoByteCodeDependenciesTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitointegration/NoJUnitDependenciesTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/internal/debugging/LocationFactoryTest.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/test/java/org/mockitousage/internal/debugging/LocationImplTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitoutil/TestBase.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/memory-test/src/test/java/org/mockito/memorytest/LocationFactoryAllocationRateTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/memory-test/src/test/java/org/mockito/memorytest/ShouldNotStarveMemoryOnLargeStackTraceInvocationsTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v848twJ92gAoYWY4NDU0ZTVlNWRlY2M3NzFlMTIyZTZmYjc3ZmYwODEzNmRiN2M2NQ",
                "url": "https://github.com/mockito/mockito/pull/2723/commits/af8454e5e5decc771e122e6fb77ff08136db7c65"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2720,
                "url": "https://github.com/mockito/mockito/issues/2720",
                "title": "LocationImpl adds performance overheads due to instantiating a stack trace",
                "bodyHTML": "<p dir=\"auto\">I'm trying to use Mockito in a test of a Java class I didn't write. It takes a dependency which I am stubbing out using Mockito. Skipping all of the business logic, the code ends up being rather similar to this:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"SomeClass mocked = mock(SomeClass.class, Mockito.withSettings().stubOnly());\nwhen(mocked.someParam()).thenReturn(0);\n\nfor (int i = 0; i &lt; bigNumber; i++) {\n    mocked.someParam();\n}\"><pre class=\"notranslate\"><span class=\"pl-smi\">SomeClass</span> <span class=\"pl-s1\">mocked</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">SomeClass</span>.<span class=\"pl-k\">class</span>, <span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">withSettings</span>().<span class=\"pl-en\">stubOnly</span>());\n<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">mocked</span>.<span class=\"pl-en\">someParam</span>()).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-c1\">0</span>);\n\n<span class=\"pl-k\">for</span> (<span class=\"pl-smi\">int</span> <span class=\"pl-s1\">i</span> = <span class=\"pl-c1\">0</span>; <span class=\"pl-s1\">i</span> &lt; <span class=\"pl-s1\">bigNumber</span>; <span class=\"pl-s1\">i</span>++) {\n    <span class=\"pl-s1\">mocked</span>.<span class=\"pl-en\">someParam</span>();\n}</pre></div>\n<p dir=\"auto\">This is in Mockito 4.6.1. This is extremely slow, and looking at Mockito this seems to be a problem for two reasons.</p>\n<p dir=\"auto\">Firstly, when a mock invocation occurs, LocationImpl is instantiated. This instantiates a Throwable, which constructs a stack trace, error message, etc (which is then discarded). In my test, Mockito was generating 70k exceptions per second.</p>\n<p dir=\"auto\">The second slowdown that seemed to be affecting me comes from TypeSafeMatching.getArgumentType. This iterates through all of the methods on the argument matcher class to find the appropriate matches method, seemingly also for each method call. By performing this operation, a lot of JVM internal datastructures get copied - it calls Class.getMethods, which copies all the methods on the class. This method could probably be cached on a per-class basis.</p>\n<p dir=\"auto\">This dramatically affected my application's allocation rate; Mockito was leading to approx 3.4GiB/sec allocations. In the end, I rewrote my mock using ByteBuddy proxies directly. It took the test runtime from 30 seconds down to 1, with the number of exceptions being created per second going down from 70k to ~0.</p>\n<p dir=\"auto\">I know that Mockito isn't meant to be a Netty-like high performance library, but wanted to flag these two codepaths as affecting every mock call.</p>",
                "resourcePath": "/mockito/mockito/issues/2720",
                "createdAt": "2022-08-04T16:01:11Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Drop varargs collector before invoking a user method.",
        "url": "https://github.com/mockito/mockito/pull/2736",
        "resourcePath": "/mockito/mockito/pull/2736",
        "createdAt": "2022-08-22T20:31:18Z",
        "number": 2736,
        "mergeCommit": {
          "oid": "9b93df72c9aad120057ff82d25d0fd5dc3af2317",
          "message": "Merge pull request #2736 from mockito/static-varargs-call\n\nDrop varargs collector before invoking a user method.",
          "commitUrl": "https://github.com/mockito/mockito/commit/9b93df72c9aad120057ff82d25d0fd5dc3af2317",
          "parents": {
            "nodes": [
              {
                "oid": "e123c2cdf7e4688bae7e4ecc145eb960626894db",
                "message": "Bump versions.bytebuddy from 1.12.13 to 1.12.14 (#2734)\n\nBumps `versions.bytebuddy` from 1.12.13 to 1.12.14.\r\n\r\nUpdates `byte-buddy` from 1.12.13 to 1.12.14\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.12.13...byte-buddy-1.12.14)\r\n\r\nUpdates `byte-buddy-agent` from 1.12.13 to 1.12.14\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.12.13...byte-buddy-1.12.14)\r\n\r\nUpdates `byte-buddy-android` from 1.12.13 to 1.12.14\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.12.13...byte-buddy-1.12.14)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: net.bytebuddy:byte-buddy\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-agent\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-android\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              },
              {
                "oid": "160e3daf446e508eb17c6fc21a0932246848206b",
                "message": "Drop varargs collector before invoking a user method."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/reflection/InstrumentationMemberAccessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/inline/src/test/java/org/mockitoinline/StaticMockTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v849lx472gAoMTYwZTNkYWY0NDZlNTA4ZWIxN2M2ZmMyMWEwOTMyMjQ2ODQ4MjA2Yg",
                "url": "https://github.com/mockito/mockito/pull/2736/commits/160e3daf446e508eb17c6fc21a0932246848206b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2703,
                "url": "https://github.com/mockito/mockito/issues/2703",
                "title": "Calling `thenCallRealMethod` of mocked static method throws `ClassCastException` on Java 9+",
                "bodyHTML": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">I encountered <code class=\"notranslate\">ClassCastException</code> when I tried to mock a static method whose params are both primitive and object types and call <code class=\"notranslate\">thenCallRealMethod</code>.<br>\nI tried some Java versions and finally was able to avoid the exception when I switched my env to Java 8.</p>\n<p dir=\"auto\">Error message:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.ClassCastException: class [C cannot be cast to class java.lang.Number ([C and java.lang.Number are in module java.base of loader 'bootstrap')\n\tat java.base/sun.invoke.util.ValueConversions.primitiveConversion(ValueConversions.java:247)\n\tat java.base/sun.invoke.util.ValueConversions.unboxCharacter(ValueConversions.java:117)\n\tat java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:728)\n\tat java.base/java.lang.invoke.MethodHandleImpl$AsVarargsCollector.invokeWithArguments(MethodHandleImpl.java:532)\n\tat org.apache.commons.lang3.RandomStringUtils.random(RandomStringUtils.java:471)\n\tat org.apache.commons.lang3.RandomStringUtils.random(RandomStringUtils.java:455)\n\tat java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:728)\n\tat org.apache.commons.lang3.RandomStringUtils.random(RandomStringUtils.java:452)\n\tat io.github.t45k.mockstatic.AppTest.primitiveAndObjectTypeArgsStaticMethodMockingError(AppTest.java:56)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)\n\tat org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat com.sun.proxy.$Proxy2.processTestClass(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.ClassCastException: class [C cannot be cast to class java.lang.Number ([C and java.lang.Number are in module java.base of loader 'bootstrap')\n\tat java.base/sun.invoke.util.ValueConversions.primitiveConversion(ValueConversions.java:247)\n\tat java.base/sun.invoke.util.ValueConversions.unboxCharacter(ValueConversions.java:117)\n\tat java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:728)\n\tat java.base/java.lang.invoke.MethodHandleImpl$AsVarargsCollector.invokeWithArguments(MethodHandleImpl.java:532)\n\tat org.apache.commons.lang3.RandomStringUtils.random(RandomStringUtils.java:471)\n\tat org.apache.commons.lang3.RandomStringUtils.random(RandomStringUtils.java:455)\n\tat java.base/java.lang.invoke.MethodHandle.invokeWithArguments(MethodHandle.java:728)\n\tat org.apache.commons.lang3.RandomStringUtils.random(RandomStringUtils.java:452)\n\tat io.github.t45k.mockstatic.AppTest.primitiveAndObjectTypeArgsStaticMethodMockingError(AppTest.java:56)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)\n\tat org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat com.sun.proxy.$Proxy2.processTestClass(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)\n\tat org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)\n\tat org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)\n\tat worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)\n</code></pre></div>\n<p dir=\"auto\">I append a toy example for this problem. I hope it will be useful to solve.<br>\n<a href=\"https://github.com/T45K/mockito-java17-mockstatic\">https://github.com/T45K/mockito-java17-mockstatic</a></p>\n<p dir=\"auto\">Environment:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ gradle -v\n\n------------------------------------------------------------\nGradle 7.4.2\n------------------------------------------------------------\n\nBuild time:   2022-03-31 15:25:29 UTC\nRevision:     540473b8118064efcc264694cbcaa4b677f61041\n\nKotlin:       1.5.31\nGroovy:       3.0.9\nAnt:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021\nJVM:          18.0.1.1 (Homebrew 18.0.1.1+0)\nOS:           Mac OS X 12.2 x86_64\"><pre class=\"notranslate\">$ gradle -v\n\n------------------------------------------------------------\nGradle 7.4.2\n------------------------------------------------------------\n\nBuild time:   2022-03-31 15:25:29 UTC\nRevision:     540473b8118064efcc264694cbcaa4b677f61041\n\nKotlin:       1.5.31\nGroovy:       3.0.9\nAnt:          Apache Ant(TM) version 1.10.11 compiled on July 10 2021\nJVM:          18.0.1.1 (Homebrew 18.0.1.1+0)\nOS:           Mac OS X 12.2 x86_64</pre></div>\n<p dir=\"auto\">Thank you.</p>",
                "resourcePath": "/mockito/mockito/issues/2703",
                "createdAt": "2022-07-05T13:42:57Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Avoids clearing stale weak entries from critical code segments.",
        "url": "https://github.com/mockito/mockito/pull/2780",
        "resourcePath": "/mockito/mockito/pull/2780",
        "createdAt": "2022-10-30T16:31:16Z",
        "number": 2780,
        "mergeCommit": {
          "oid": "0052e2f5f78ca2eda4593df158e1c2366639e5db",
          "message": "Avoid clearing stale weak entries from critical code segments (#2780)\n\nThis reduces the probability of checking for mocked from from the\r\nmock-checking code what can lead to infinitive loops.",
          "commitUrl": "https://github.com/mockito/mockito/commit/0052e2f5f78ca2eda4593df158e1c2366639e5db",
          "parents": {
            "nodes": [
              {
                "oid": "47045cbdfe606d8616f7e0a814af6e7803d4c33f",
                "message": "Upgrade objenesis 3.2 -> 3.3 (#2784)\n\nSee:\r\n- http://objenesis.org/notes.html\r\n- https://github.com/easymock/objenesis/releases/tag/3.3\r\n- https://github.com/easymock/objenesis/compare/3.2...3.3\r\n\r\nFixes #2783"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineBytecodeGenerator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineDelegateByteBuddyMockMaker.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85B1Zid2gAoNjRlMjQ2YTIyZDFiNmRmZTU4ZTM3YWFlMWNhNjk3ODljOWUxOTQ5Yg",
                "url": "https://github.com/mockito/mockito/pull/2780/commits/64e246a22d1b6dfe58e37aae1ca69789c9e1949b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2767,
                "url": "https://github.com/mockito/mockito/issues/2767",
                "title": "[BUG] Inline bytecode transformer randomly deadlocking on Java 19",
                "bodyHTML": "<p dir=\"auto\">When running tests, I appear to be hitting a deadlock in random places. This is occurring on tests not even using Mockito, so I assume this is down to the bytecode transformer. It appears to be totally random as to where it actually occurs, and sometimes it won't occur at all.</p>\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"    &lt;dependency&gt;\n      &lt;groupId&gt;org.mockito&lt;/groupId&gt;\n      &lt;artifactId&gt;mockito-inline&lt;/artifactId&gt;\n      &lt;version&gt;4.8.1&lt;/version&gt;\n      &lt;scope&gt;test&lt;/scope&gt;\n    &lt;/dependency&gt;\n    \n    ...\n    \n    &lt;plugin&gt;\n      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n      &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;\n      &lt;version&gt;3.0.0-M7&lt;/version&gt;\n    &lt;/plugin&gt;\"><pre class=\"notranslate\">    &lt;<span class=\"pl-ent\">dependency</span>&gt;\n      &lt;<span class=\"pl-ent\">groupId</span>&gt;org.mockito&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId</span>&gt;mockito-inline&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n      &lt;<span class=\"pl-ent\">version</span>&gt;4.8.1&lt;/<span class=\"pl-ent\">version</span>&gt;\n      &lt;<span class=\"pl-ent\">scope</span>&gt;test&lt;/<span class=\"pl-ent\">scope</span>&gt;\n    &lt;/<span class=\"pl-ent\">dependency</span>&gt;\n    \n    ...\n    \n    &lt;<span class=\"pl-ent\">plugin</span>&gt;\n      &lt;<span class=\"pl-ent\">groupId</span>&gt;org.apache.maven.plugins&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n      &lt;<span class=\"pl-ent\">artifactId</span>&gt;maven-surefire-plugin&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n      &lt;<span class=\"pl-ent\">version</span>&gt;3.0.0-M7&lt;/<span class=\"pl-ent\">version</span>&gt;\n    &lt;/<span class=\"pl-ent\">plugin</span>&gt;</pre></div>\n<p dir=\"auto\">I can reproduce this on Mockito 4.8.0 as well.</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ java -version\nopenjdk version &quot;19&quot; 2022-09-20\nOpenJDK Runtime Environment Corretto-19.0.0.36.1 (build 19+36-FR)\nOpenJDK 64-Bit Server VM Corretto-19.0.0.36.1 (build 19+36-FR, mixed mode, sharing)\n\n$ uname -a\nLinux z170x-fedora 5.19.13-200.fc36.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Oct 4 15:42:43 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">java -version</span>\n<span class=\"pl-c1\">openjdk version \"19\" 2022-09-20</span>\n<span class=\"pl-c1\">OpenJDK Runtime Environment Corretto-19.0.0.36.1 (build 19+36-FR)</span>\n<span class=\"pl-c1\">OpenJDK 64-Bit Server VM Corretto-19.0.0.36.1 (build 19+36-FR, mixed mode, sharing)</span>\n\n$ <span class=\"pl-s1\">uname -a</span>\n<span class=\"pl-c1\">Linux z170x-fedora 5.19.13-200.fc36.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Oct 4 15:42:43 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</span></pre></div>\n<p dir=\"auto\">I managed to capture this stacktrace using Java Mission Control. Not sure how helpful this is though.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"# Created at 2022-10-18T12:05:44.041\nThread dump for process (15260@z170x-fedora):\n&quot;main&quot; \n   java.lang.Thread.State: WAITING\n        at java.base@19/jdk.internal.misc.Unsafe.park(Native Method)\n        at java.base@19/java.util.concurrent.locks.LockSupport.park(LockSupport.java:221)\n        at java.base@19/java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:715)\n        at java.base@19/java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:938)\n        at java.base@19/java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153)\n        at java.base@19/java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322)\n        at java.base@19/java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182)\n        at app/org.mockito@4.8.1/org.mockito.internal.util.concurrent.WeakConcurrentMap.expungeStaleEntries(WeakConcurrentMap.java:138)\n        at app/org.mockito@4.8.1/org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.containsKey(WeakConcurrentMap.java:272)\n        at app/org.mockito@4.8.1/org.mockito.internal.creation.bytebuddy.MockMethodAdvice.isMock(MockMethodAdvice.java:166)\n        at java.base@19/java.lang.Object.equals(Object.java:164)\n        at java.base@19/java.lang.reflect.Method.equals(Method.java:368)\n        at java.base@19/java.util.HashMap.getNode(HashMap.java:578)\n        at java.base@19/java.util.HashMap.get(HashMap.java:564)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.utility.dispatcher.JavaDispatcher$ProxiedInvocationHandler.invoke(JavaDispatcher.java:1152)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.description.method.$Proxy43.getParameterCount(Unknown Source)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.description.method.ParameterList$ForLoadedExecutable.size(ParameterList.java:226)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.description.method.ParameterList$TypeSubstituting.size(ParameterList.java:596)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.description.method.ParameterList$AbstractBase.asTypeList(ParameterList.java:105)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.description.method.MethodDescription$AbstractBase.asTypeToken(MethodDescription.java:910)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store.asGraph(MethodGraph.java:1253)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default.compile(MethodGraph.java:660)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$AbstractBase.compile(MethodGraph.java:519)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.scaffold.MethodRegistry$Default.prepare(MethodRegistry.java:472)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder.make(SubclassDynamicTypeBuilder.java:213)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder.make(SubclassDynamicTypeBuilder.java:204)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase.make(DynamicType.java:3668)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Delegator.make(DynamicType.java:3906)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.SoftProxies.generateProxyClass(SoftProxies.java:217)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.SoftProxies.lambda$createSoftAssertionProxyClass$0(SoftProxies.java:135)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.SoftProxies$$Lambda$1138/0x00000007c05d4818.call(Unknown Source)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:168)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:399)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.SoftProxies.createSoftAssertionProxyClass(SoftProxies.java:134)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.SoftProxies.createSoftAssertionProxy(SoftProxies.java:120)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.AbstractSoftAssertions.proxy(AbstractSoftAssertions.java:48)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.StandardSoftAssertionsProvider.assertThat(StandardSoftAssertionsProvider.java:56)\n        at app/io.github.ascopes.jct.testing@0.0.1-SNAPSHOT/io.github.ascopes.jct.testing.unit.containers.impl.FileUtilsTest.lambda$simpleClassNameToPathShouldReturnTheExpectedOutput$3(FileUtilsTest.java:229)\n        at app/io.github.ascopes.jct.testing@0.0.1-SNAPSHOT/io.github.ascopes.jct.testing.unit.containers.impl.FileUtilsTest$$Lambda$1135/0x00000007c05cae88.accept(Unknown Source)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.SoftAssertionsProvider.assertSoftly(SoftAssertionsProvider.java:119)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.SoftAssertions.assertSoftly(SoftAssertions.java:162)\n        at app/io.github.ascopes.jct.testing@0.0.1-SNAPSHOT/io.github.ascopes.jct.testing.unit.containers.impl.FileUtilsTest.simpleClassNameToPathShouldReturnTheExpectedOutput(FileUtilsTest.java:228)\n        at java.base@19/java.lang.invoke.LambdaForm$DMH/0x00000007c05cdc00.invokeVirtual(LambdaForm$DMH)\n        at java.base@19/java.lang.invoke.LambdaForm$MH/0x00000007c05cf400.invoke(LambdaForm$MH)\n        at java.base@19/java.lang.invoke.Invokers$Holder.invokeExact_MT(Invokers$Holder)\n        at java.base@19/jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl(DirectMethodHandleAccessor.java:158)\n        at java.base@19/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n        at java.base@19/java.lang.reflect.Method.invoke(Method.java:578)\n        at app/org.junit.platform.commons@1.9.1/org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:94)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestTemplateInvocationTestDescriptor$$Lambda$458/0x00000007c01d8ab8.apply(Unknown Source)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall$$Lambda$296/0x00000007c0189c00.apply(Unknown Source)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$$Lambda$473/0x00000007c01de000.apply(Unknown Source)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor$$Lambda$497/0x00000007c01e0650.execute(Unknown Source)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask$$Lambda$371/0x00000007c01bdca8.execute(Unknown Source)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask$$Lambda$370/0x00000007c01bda98.invoke(Unknown Source)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask$$Lambda$369/0x00000007c01bd6a0.execute(Unknown Source)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:142)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:110)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor$$Lambda$438/0x00000007c01cb628.accept(Unknown Source)\n        at java.base@19/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n        at java.base@19/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n        at java.base@19/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n        at java.base@19/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n        at java.base@19/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n        at java.base@19/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n        at java.base@19/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n        at java.base@19/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n        at java.base@19/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n        at java.base@19/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n        at java.base@19/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n        at java.base@19/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\"><pre lang=\"log\" class=\"notranslate\"><code class=\"notranslate\"># Created at 2022-10-18T12:05:44.041\nThread dump for process (15260@z170x-fedora):\n\"main\" \n   java.lang.Thread.State: WAITING\n        at java.base@19/jdk.internal.misc.Unsafe.park(Native Method)\n        at java.base@19/java.util.concurrent.locks.LockSupport.park(LockSupport.java:221)\n        at java.base@19/java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:715)\n        at java.base@19/java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:938)\n        at java.base@19/java.util.concurrent.locks.ReentrantLock$Sync.lock(ReentrantLock.java:153)\n        at java.base@19/java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:322)\n        at java.base@19/java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:182)\n        at app/org.mockito@4.8.1/org.mockito.internal.util.concurrent.WeakConcurrentMap.expungeStaleEntries(WeakConcurrentMap.java:138)\n        at app/org.mockito@4.8.1/org.mockito.internal.util.concurrent.WeakConcurrentMap$WithInlinedExpunction.containsKey(WeakConcurrentMap.java:272)\n        at app/org.mockito@4.8.1/org.mockito.internal.creation.bytebuddy.MockMethodAdvice.isMock(MockMethodAdvice.java:166)\n        at java.base@19/java.lang.Object.equals(Object.java:164)\n        at java.base@19/java.lang.reflect.Method.equals(Method.java:368)\n        at java.base@19/java.util.HashMap.getNode(HashMap.java:578)\n        at java.base@19/java.util.HashMap.get(HashMap.java:564)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.utility.dispatcher.JavaDispatcher$ProxiedInvocationHandler.invoke(JavaDispatcher.java:1152)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.description.method.$Proxy43.getParameterCount(Unknown Source)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.description.method.ParameterList$ForLoadedExecutable.size(ParameterList.java:226)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.description.method.ParameterList$TypeSubstituting.size(ParameterList.java:596)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.description.method.ParameterList$AbstractBase.asTypeList(ParameterList.java:105)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.description.method.MethodDescription$AbstractBase.asTypeToken(MethodDescription.java:910)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default$Key$Store.asGraph(MethodGraph.java:1253)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$Default.compile(MethodGraph.java:660)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.scaffold.MethodGraph$Compiler$AbstractBase.compile(MethodGraph.java:519)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.scaffold.MethodRegistry$Default.prepare(MethodRegistry.java:472)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder.make(SubclassDynamicTypeBuilder.java:213)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.scaffold.subclass.SubclassDynamicTypeBuilder.make(SubclassDynamicTypeBuilder.java:204)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase.make(DynamicType.java:3668)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$Delegator.make(DynamicType.java:3906)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.SoftProxies.generateProxyClass(SoftProxies.java:217)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.SoftProxies.lambda$createSoftAssertionProxyClass$0(SoftProxies.java:135)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.SoftProxies$$Lambda$1138/0x00000007c05d4818.call(Unknown Source)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:168)\n        at app/net.bytebuddy@1.12.10/net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:399)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.SoftProxies.createSoftAssertionProxyClass(SoftProxies.java:134)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.SoftProxies.createSoftAssertionProxy(SoftProxies.java:120)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.AbstractSoftAssertions.proxy(AbstractSoftAssertions.java:48)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.StandardSoftAssertionsProvider.assertThat(StandardSoftAssertionsProvider.java:56)\n        at app/io.github.ascopes.jct.testing@0.0.1-SNAPSHOT/io.github.ascopes.jct.testing.unit.containers.impl.FileUtilsTest.lambda$simpleClassNameToPathShouldReturnTheExpectedOutput$3(FileUtilsTest.java:229)\n        at app/io.github.ascopes.jct.testing@0.0.1-SNAPSHOT/io.github.ascopes.jct.testing.unit.containers.impl.FileUtilsTest$$Lambda$1135/0x00000007c05cae88.accept(Unknown Source)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.SoftAssertionsProvider.assertSoftly(SoftAssertionsProvider.java:119)\n        at app/org.assertj.core@3.23.1/org.assertj.core.api.SoftAssertions.assertSoftly(SoftAssertions.java:162)\n        at app/io.github.ascopes.jct.testing@0.0.1-SNAPSHOT/io.github.ascopes.jct.testing.unit.containers.impl.FileUtilsTest.simpleClassNameToPathShouldReturnTheExpectedOutput(FileUtilsTest.java:228)\n        at java.base@19/java.lang.invoke.LambdaForm$DMH/0x00000007c05cdc00.invokeVirtual(LambdaForm$DMH)\n        at java.base@19/java.lang.invoke.LambdaForm$MH/0x00000007c05cf400.invoke(LambdaForm$MH)\n        at java.base@19/java.lang.invoke.Invokers$Holder.invokeExact_MT(Invokers$Holder)\n        at java.base@19/jdk.internal.reflect.DirectMethodHandleAccessor.invokeImpl(DirectMethodHandleAccessor.java:158)\n        at java.base@19/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\n        at java.base@19/java.lang.reflect.Method.invoke(Method.java:578)\n        at app/org.junit.platform.commons@1.9.1/org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestTemplateMethod(TimeoutExtension.java:94)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestTemplateInvocationTestDescriptor$$Lambda$458/0x00000007c01d8ab8.apply(Unknown Source)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall$$Lambda$296/0x00000007c0189c00.apply(Unknown Source)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$$Lambda$473/0x00000007c01de000.apply(Unknown Source)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor$$Lambda$497/0x00000007c01e0650.execute(Unknown Source)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask$$Lambda$371/0x00000007c01bdca8.execute(Unknown Source)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask$$Lambda$370/0x00000007c01bda98.invoke(Unknown Source)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask$$Lambda$369/0x00000007c01bd6a0.execute(Unknown Source)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:226)\n        at app/org.junit.platform.engine@1.9.1/org.junit.platform.engine.support.hierarchical.NodeTestTask$DefaultDynamicTestExecutor.execute(NodeTestTask.java:204)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.execute(TestTemplateTestDescriptor.java:142)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor.lambda$execute$2(TestTemplateTestDescriptor.java:110)\n        at app/org.junit.jupiter.engine@5.9.1/org.junit.jupiter.engine.descriptor.TestTemplateTestDescriptor$$Lambda$438/0x00000007c01cb628.accept(Unknown Source)\n        at java.base@19/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n        at java.base@19/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n        at java.base@19/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\n        at java.base@19/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n        at java.base@19/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n        at java.base@19/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n        at java.base@19/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n        at java.base@19/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n        at java.base@19/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\n        at java.base@19/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\n        at java.base@19/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\n        at java.base@19/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/2767",
                "createdAt": "2022-10-18T11:17:30Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Upgrade objenesis 3.2 -> 3.3",
        "url": "https://github.com/mockito/mockito/pull/2784",
        "resourcePath": "/mockito/mockito/pull/2784",
        "createdAt": "2022-11-03T21:26:25Z",
        "number": 2784,
        "mergeCommit": {
          "oid": "47045cbdfe606d8616f7e0a814af6e7803d4c33f",
          "message": "Upgrade objenesis 3.2 -> 3.3 (#2784)\n\nSee:\r\n- http://objenesis.org/notes.html\r\n- https://github.com/easymock/objenesis/releases/tag/3.3\r\n- https://github.com/easymock/objenesis/compare/3.2...3.3\r\n\r\nFixes #2783",
          "commitUrl": "https://github.com/mockito/mockito/commit/47045cbdfe606d8616f7e0a814af6e7803d4c33f",
          "parents": {
            "nodes": [
              {
                "oid": "eb85518cef362e39788a7e030bab8ac78eca76c9",
                "message": "Update gradle to 7.5.1 (#2776)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/dependencies.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85CK0_n2gAoMmM2NDNhMTMwNTNlNTQ5N2RiYWFkNDQ2NTZjNTBjY2MwODQ0YzY2ZQ",
                "url": "https://github.com/mockito/mockito/pull/2784/commits/2c643a13053e5497dbaad44656c50ccc0844c66e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2783,
                "url": "https://github.com/mockito/mockito/issues/2783",
                "title": "Upgrade objenesis 3.2 -> 3.3",
                "bodyHTML": "<p dir=\"auto\">We use the <a href=\"https://maven.apache.org/enforcer/maven-enforcer-plugin/\" rel=\"nofollow\">Maven Enforcer plugin</a> in our builds. The Enforcer showed that Mockito is not using the latest version of the <a href=\"https://github.com/easymock/objenesis\">objenesis library</a>. I'm not sure why Dependabot didn't create upgrade PRs, but it would be nice if we can upgrade to the <a href=\"https://github.com/easymock/objenesis/releases/tag/3.3\">latest version</a> within Mockito.</p>\n<p dir=\"auto\">I am willing to create a PR for this \ud83d\ude04.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2783",
                "createdAt": "2022-11-03T20:25:01Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Update minimum support Java version from 8 to 11",
        "url": "https://github.com/mockito/mockito/pull/2804",
        "resourcePath": "/mockito/mockito/pull/2804",
        "createdAt": "2022-11-28T16:37:19Z",
        "number": 2804,
        "mergeCommit": {
          "oid": "a7c7fdb4f972d7fb6736f692e5ee208034f214f3",
          "message": "Update minimum support Java version from 8 to 11 (#2804)\n\nFixes #2798\r\n\r\nSigned-off-by: Andriy Redko <andriy.redko@aiven.io>",
          "commitUrl": "https://github.com/mockito/mockito/commit/a7c7fdb4f972d7fb6736f692e5ee208034f214f3",
          "parents": {
            "nodes": [
              {
                "oid": "e2f26d80806fc3a3b8eabb418145b70c695db877",
                "message": "Bump com.diffplug.spotless from 6.11.0 to 6.12.0 (#2825)\n\nBumps com.diffplug.spotless from 6.11.0 to 6.12.0.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.diffplug.spotless\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/mockito-core/javadoc.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/root/coverage.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "settings.gradle.kts"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/debugging/LocationImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/androidTest/androidTest.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/errorprone/errorprone.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/inline/inline.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/kotlinTest/src/test/kotlin/org/mockito/kotlin/CircularityTest.kt"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/kotlinTest/src/test/kotlin/org/mockito/kotlin/InlineClassTest.kt"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/module-test/module-test.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85D0aZy2gAoMWNlNmI4NGQxYzA3OTgxYmU1NGNmYzRjNjFlYWQwNzM2MzE0YThhZg",
                "url": "https://github.com/mockito/mockito/pull/2804/commits/1ce6b84d1c07981be54cfc4c61ead0736314a8af"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2798,
                "url": "https://github.com/mockito/mockito/issues/2798",
                "title": "Update minimum support Java version from 8 to 11",
                "bodyHTML": "<p dir=\"auto\">Hello!</p>\n<p dir=\"auto\">We [1] have been using Mockito with JDK's <code class=\"notranslate\">SecurityManager</code> (for historical reasons), the things worked fine for us till Mockito <code class=\"notranslate\">4.8.0</code> release (and later versions). The culprit is <code class=\"notranslate\">Java9PlusLocationImpl</code> (see please stack trace below):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.security.AccessControlException: access denied (&quot;java.lang.RuntimePermission&quot; &quot;accessDeclaredMembers&quot;)\n\tat java.base/java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)\n\tat java.base/java.security.AccessController.checkPermission(AccessController.java:897)\n\tat java.base/java.lang.SecurityManager.checkPermission(SecurityManager.java:322)\n\tat java.base/java.lang.Class.checkMemberAccess(Class.java:2847)\n\tat java.base/java.lang.Class.getDeclaredMethod(Class.java:2471)\n\tat org.mockito.internal.debugging.Java9PlusLocationImpl.stackWalker(Java9PlusLocationImpl.java:191)\n\tat org.mockito.internal.debugging.Java9PlusLocationImpl.&lt;clinit&gt;(Java9PlusLocationImpl.java:50)\n\t... 47 more\n\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: java.security.AccessControlException: access denied (\"java.lang.RuntimePermission\" \"accessDeclaredMembers\")\n\tat java.base/java.security.AccessControlContext.checkPermission(AccessControlContext.java:472)\n\tat java.base/java.security.AccessController.checkPermission(AccessController.java:897)\n\tat java.base/java.lang.SecurityManager.checkPermission(SecurityManager.java:322)\n\tat java.base/java.lang.Class.checkMemberAccess(Class.java:2847)\n\tat java.base/java.lang.Class.getDeclaredMethod(Class.java:2471)\n\tat org.mockito.internal.debugging.Java9PlusLocationImpl.stackWalker(Java9PlusLocationImpl.java:191)\n\tat org.mockito.internal.debugging.Java9PlusLocationImpl.&lt;clinit&gt;(Java9PlusLocationImpl.java:50)\n\t... 47 more\n\n</code></pre></div>\n<p dir=\"auto\">By all means, <code class=\"notranslate\">Mockito</code> should know nothing about <code class=\"notranslate\">SecurityManager</code> and the way we implemented mocking under <code class=\"notranslate\">SecurityManager</code>  is by using <code class=\"notranslate\">Mockito</code>'s extensibility model - plugins (primary, <code class=\"notranslate\">MockMaker</code>). Sadly for <code class=\"notranslate\">LocationFactory</code> / <code class=\"notranslate\">Location</code> there is no such plugin available so we are stuck on 4.7.x release line. If such plugin would have been available, we could provide privileged implementation for reflection calls. Alternatively, wrapping up Java 9 implementation into multi-release JAR (and getting rid of reflection), would have helped.</p>\n<p dir=\"auto\">We are happy to submit the pull request with either solution, but it would be helpful to know if there is an interest addressing this issue in general, and preferred approach in particular:</p>\n<ul dir=\"auto\">\n<li>plugin for <code class=\"notranslate\">LocationFactory</code> / <code class=\"notranslate\">Location</code></li>\n<li>multi-release JAR for Java 9</li>\n</ul>\n<p dir=\"auto\">Thank you.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>\n<p dir=\"auto\">[1] <a href=\"https://github.com/opensearch-project/OpenSearch\">https://github.com/opensearch-project/OpenSearch</a></p>",
                "resourcePath": "/mockito/mockito/issues/2798",
                "createdAt": "2022-11-23T15:57:06Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Improve vararg handling",
        "url": "https://github.com/mockito/mockito/pull/2805",
        "resourcePath": "/mockito/mockito/pull/2805",
        "createdAt": "2022-11-28T17:51:30Z",
        "number": 2805,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/matchers/Any.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/matchers/CapturingMatcher.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/matchers/InstanceOf.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/matchers/VarargMatcher.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/invocation/InvocationMatcherTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/invocation/MatcherApplicationStrategyTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/matchers/CapturingMatcherTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/IMethods.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/MethodsImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/matchers/VarargsTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85D0wQp2gAoODdkYmU4YzMyYjcxODNjN2E5OWQ1MWY4MjVlYWU5ZjFkY2U5ZTM2NQ",
                "url": "https://github.com/mockito/mockito/pull/2805/commits/87dbe8c32b7183c7a99d51f825eae9f1dce9e365"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2796,
                "url": "https://github.com/mockito/mockito/issues/2796",
                "title": "Mocking varargs method with `any(String[].class)` doesn't work as expected",
                "bodyHTML": "<p dir=\"auto\">This issue is related to a resolved issue  <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1238333243\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2644\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2644/hovercard\" href=\"https://github.com/mockito/mockito/issues/2644\">#2644</a>, which was resolved in 4.7.0 by <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1257356867\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2664\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2664/hovercard\" href=\"https://github.com/mockito/mockito/pull/2664\">#2664</a>.</p>\n<p dir=\"auto\">As per the comment by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/perlun/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/perlun\">@perlun</a> in the above PR: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1257356867\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2664\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2664/hovercard?comment_id=1319816402&amp;comment_type=issue_comment\" href=\"https://github.com/mockito/mockito/pull/2664#issuecomment-1319816402\">#2664 (comment)</a></p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/big-andy-coates/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/big-andy-coates\">@big-andy-coates</a> I found a similar semi-related issue I think... With 4.7.0, this now works correctly:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        doAnswer(answerVoid((VoidAnswer2&lt;String, Object[]&gt;)\n                logger::info\n        )).when(mock)\n                .info(any(), (Object[]) any());\"><pre class=\"notranslate\">        <span class=\"pl-en\">doAnswer</span>(<span class=\"pl-en\">answerVoid</span>((<span class=\"pl-smi\">VoidAnswer2</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>[]&gt;)\n                <span class=\"pl-s1\">logger</span>::<span class=\"pl-s1\">info</span>\n        )).<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">mock</span>)\n                .<span class=\"pl-en\">info</span>(<span class=\"pl-en\">any</span>(), (<span class=\"pl-smi\">Object</span>[]) <span class=\"pl-en\">any</span>());</pre></div>\n<p dir=\"auto\"><em>However</em>, if I try to use this form which is slightly more ergonomic:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        doAnswer( answerVoid( (VoidAnswer2&lt;String, Object[]&gt;)\n                logger::info\n        ) ).when( mock )\n                .info( any(), any( Object[].class ) );\"><pre class=\"notranslate\">        <span class=\"pl-en\">doAnswer</span>( <span class=\"pl-en\">answerVoid</span>( (<span class=\"pl-smi\">VoidAnswer2</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>[]&gt;)\n                <span class=\"pl-s1\">logger</span>::<span class=\"pl-s1\">info</span>\n        ) ).<span class=\"pl-en\">when</span>( <span class=\"pl-s1\">mock</span> )\n                .<span class=\"pl-en\">info</span>( <span class=\"pl-en\">any</span>(), <span class=\"pl-en\">any</span>( <span class=\"pl-smi\">Object</span>[].<span class=\"pl-k\">class</span> ) );</pre></div>\n<p dir=\"auto\">...the mocking will fail to intercept these method calls. \ud83e\udd14 No error when creating the mock, but it just won't detect the method calls as expected.</p>\n<p dir=\"auto\">I <em>presume</em> this has again something to do with the varargs parsing. <code class=\"notranslate\">javac</code> resolves those two calls to the correct/same <code class=\"notranslate\">logger.info()</code> overload, so so far so good.</p>\n<p dir=\"auto\">Do you want me to create a separate issue/repro repo for this? I'm not even sure if it's something that can be (easily) fixed, I just happened to see it now while trying to \"clean up our code\"... \ud83d\ude05</p>\n<p dir=\"auto\"><em>Originally posted by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/perlun/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/perlun\">@perlun</a> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1257356867\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2664\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2664/hovercard?comment_id=1319816402&amp;comment_type=issue_comment\" href=\"https://github.com/mockito/mockito/pull/2664#issuecomment-1319816402\">#2664 (comment)</a></em></p>",
                "resourcePath": "/mockito/mockito/issues/2796",
                "createdAt": "2022-11-22T14:01:29Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Improve vararg handling",
        "url": "https://github.com/mockito/mockito/pull/2807",
        "resourcePath": "/mockito/mockito/pull/2807",
        "createdAt": "2022-11-28T19:57:56Z",
        "number": 2807,
        "mergeCommit": {
          "oid": "fe1cb2de0923e78bf7d7ae46cbab792dd4e94136",
          "message": "Add `type()` method to `ArgumentMatcher` (#2807)\n\nUsing the new `type()`, we can differentiate between matching all varargs\r\nor only one argument of the varargs.\r\n\r\n# Benefits:\r\n\r\nBecause this approach leaves `VarargsMatcher` untouched, it does not require additional existing matchers to implement `VarargsMatcher` to fix issues such as https://github.com/mockito/mockito/issues/567. Where as the first PR would require `Null` and `NotNull` to be marked `VarargsMatcher`.\r\n\r\nThis PR creates new variants of `isNotNull` and `isNull` to address https://github.com/mockito/mockito/issues/567. \r\nHaving `InstanceOf` override `type()` provides a workable solution to https://github.com/mockito/mockito/issues/1593.\r\nHaving `equals` override `type` addresses https://github.com/mockito/mockito/issues/1222.\r\n\r\n# Downsides\r\n\r\nThe obvious downside is that this changes the public `ArgumentMatcher` interface, though in a backwards compatible way.\r\n\r\n## Known limitation\r\n\r\nThe main limitation I'm aware of, is not a new limitation. It is that it is not possible to assert only a single parameter is passed to the vararg parameter, when using a `VarargMatcher`, e.g. `any()`. (ref: https://github.com/mockito/mockito/issues/1593). For example:\r\n\r\n```java\r\n// Given method:\r\nint vararg(String... args);\r\n\r\n// I want to mock this invocation:\r\nmock.vararag(\"one param\");\r\n\r\n// ...but not these:\r\nmock.vararg();\r\nmock.vararg(\"more than\", \"one param\");\r\n```\r\n\r\nThere is no current way to do this.  This is because in the following intuitive mocking:\r\n\r\n```java\r\ngiven(mock.vararg(any(String.class))).willReturn(1);\r\n```\r\n\r\n... matches zero or more vararg parameters, as the `any()` method is using `VarargMatcher`. It seems to me that `VarargMatcher` is... a little broken!  This is maybe something that should be consider a candiate for fixing in the next major version bump.  \r\n\r\nWhile it is not possible to fix any `VarargMatcher` based matchers in a backwards compatible way, this the approach in this PR it is possible to mock/verify exactly one vararg param using `isA`, rather than `any`:\r\n\r\n```java\r\n    @Test\r\n    public void shouldMatchExactlyOnParam() {\r\n        mock.varargs(\"one param\");\r\n\r\n        verify(mock).varargs(isA(String.class));\r\n    }\r\n\r\n    @Test\r\n    public void shouldNotMatchMoreParams() {\r\n        mock.varargs(\"two\", \"params\");\r\n\r\n        verify(mock, never()).varargs(isA(String.class));\r\n    }\r\n\r\n    @Test\r\n    public void shouldMatchAnyNumberOfParams() {\r\n        mock.varargs(\"two\", \"params\");\r\n\r\n        verify(mock).varargs(isA(String[].class));\r\n    }\r\n\r\n```\r\n\r\n... because `isA` does not implement `VarargsMatcher`, and so can work as expected once it implements `type()`.\r\n\r\nFixes #2796\r\nFixes #567\r\nFixes #584\r\nFixes #1222\r\nFixes #1498",
          "commitUrl": "https://github.com/mockito/mockito/commit/fe1cb2de0923e78bf7d7ae46cbab792dd4e94136",
          "parents": {
            "nodes": [
              {
                "oid": "ca7ee71d2bf3ff28c41ba4ad7360d712f7581bbe",
                "message": "Update .gitignore for VSCode (#2830)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/invocation/InvocationMatcherTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/invocation/MatcherApplicationStrategyTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/matchers/AndTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/matchers/CapturingMatcherTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/matchers/EqualsTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/matchers/OrTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/matchers/SameTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/IMethods.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/MethodsImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/matchers/VarargsTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85D1SmD2gAoNjMxOTNhOGY2NmIwNzI4NzZiNzcyYTJhNDE4YTQxN2Q4MThiYmY4MQ",
                "url": "https://github.com/mockito/mockito/pull/2807/commits/63193a8f66b072876b772a2a418a417d818bbf81"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 567,
                "url": "https://github.com/mockito/mockito/issues/567",
                "title": "Verification of an empty varargs call fails when isNotNull() is used",
                "bodyHTML": "<p dir=\"auto\">The follwing tests fail unexpected with : \"Argument(s) are different\"</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Test\npublic void shouldMatchVarArgs_isNotNull()   {\n    mock.varargs();\n    verify(mock).varargs(isNotNull());\n}\n\n@Test\npublic void shouldMatchVarArgs_isNotNullArray()   {\n    mock.varargs();\n\n    verify(mock).varargs((String[])isNotNull());\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@Test\npublic void shouldMatchVarArgs_isNotNull()   {\n    mock.varargs();\n    verify(mock).varargs(isNotNull());\n}\n\n@Test\npublic void shouldMatchVarArgs_isNotNullArray()   {\n    mock.varargs();\n\n    verify(mock).varargs((String[])isNotNull());\n}\n</code></pre></div>\n<p dir=\"auto\">Expected is that the tests pass cause an empty vararg array is not null!</p>",
                "resourcePath": "/mockito/mockito/issues/567",
                "createdAt": "2016-08-19T13:33:05Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "ready"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 584,
                "url": "https://github.com/mockito/mockito/issues/584",
                "title": "ArgumentCaptor can't capture varargs-arrays",
                "bodyHTML": "<p dir=\"auto\">Relates to: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"161045110\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/439\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/439/hovercard\" href=\"https://github.com/mockito/mockito/issues/439\">#439</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"171595839\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/565\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/565/hovercard\" href=\"https://github.com/mockito/mockito/issues/565\">#565</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"172132167\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/567\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/567/hovercard\" href=\"https://github.com/mockito/mockito/issues/567\">#567</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"172674768\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/583\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/583/hovercard\" href=\"https://github.com/mockito/mockito/issues/583\">#583</a></p>\n<p dir=\"auto\">ArgumentCaptor can't capture varargs-arrays.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Test\npublic void shouldCaptureVarArgsAsArray() throws Exception {\n    ArgumentCaptor&lt;String[]&gt; varargCaptor = ArgumentCaptor.forClass(String[].class);\n\n    mock.varargs(&quot;1&quot;,&quot;2&quot;);   \n\n    verify(mock).varargs(varargCaptor.capture());\n\n    assertThat(varargCaptor).containsExactly(new String[]{&quot;1&quot;,&quot;2&quot;});\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@Test\npublic void shouldCaptureVarArgsAsArray() throws Exception {\n    ArgumentCaptor&lt;String[]&gt; varargCaptor = ArgumentCaptor.forClass(String[].class);\n\n    mock.varargs(\"1\",\"2\");   \n\n    verify(mock).varargs(varargCaptor.capture());\n\n    assertThat(varargCaptor).containsExactly(new String[]{\"1\",\"2\"});\n}\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected:</strong> A <code class=\"notranslate\">ArgumentCaptor&lt;String[]&gt;</code> should be able to capture the varargs-array as a whole.<br>\n<strong>Actual:</strong> The ArgumentCaptor captures no arrays but every single argument passed to the varargs method. The following exception is thrown:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.AssertionError: \nActual and expected should have same size but actual size was:\n  &lt;2&gt;\nwhile expected size was:\n  &lt;1&gt;\nActual was:\n  &lt;[&quot;1&quot;, &quot;2&quot;]&gt;\nExpected was:\n  &lt;[[&quot;1&quot;, &quot;2&quot;]]&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.AssertionError: \nActual and expected should have same size but actual size was:\n  &lt;2&gt;\nwhile expected size was:\n  &lt;1&gt;\nActual was:\n  &lt;[\"1\", \"2\"]&gt;\nExpected was:\n  &lt;[[\"1\", \"2\"]]&gt;\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/584",
                "createdAt": "2016-08-23T11:43:08Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "ready"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 1222,
                "url": "https://github.com/mockito/mockito/issues/1222",
                "title": "Cannot verify varargs parameter as an array",
                "bodyHTML": "<p dir=\"auto\">Cannot verify the varargs by comparing with an array.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Test\n    public void shouldVerifyVarargsAsArray() throws Exception {\n        IMethods mock = mock(IMethods.class);\n\n        mock.mixedVarargs(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);\n\n        verify(mock).mixedVarargs(any(), eq(new String[] {&quot;2&quot;, &quot;3&quot;}));\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    @Test\n    public void shouldVerifyVarargsAsArray() throws Exception {\n        IMethods mock = mock(IMethods.class);\n\n        mock.mixedVarargs(\"1\", \"2\", \"3\");\n\n        verify(mock).mixedVarargs(any(), eq(new String[] {\"2\", \"3\"}));\n    }\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected:</strong> test runs successfully<br>\n<strong>Actual:</strong> the test fails with an argument mismatch error.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockitousage.verification.BasicVerificationTest &gt; shouldVerifyVarargsAsArray FAILED\n    Argument(s) are different! Wanted:\n    iMethods.mixedVarargs(&lt;any&gt;, [&quot;2&quot;, &quot;3&quot;]);\n    -&gt; at org.mockitousage.verification.BasicVerificationTest.shouldVerifyVarargsAsArray(BasicVerificationTest.java:125)\n    Actual invocation has different arguments:\n    iMethods.mixedVarargs(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);\n    -&gt; at org.mockitousage.verification.BasicVerificationTest.shouldVerifyVarargsAsArray(BasicVerificationTest.java:123)\n    ...\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockitousage.verification.BasicVerificationTest &gt; shouldVerifyVarargsAsArray FAILED\n    Argument(s) are different! Wanted:\n    iMethods.mixedVarargs(&lt;any&gt;, [\"2\", \"3\"]);\n    -&gt; at org.mockitousage.verification.BasicVerificationTest.shouldVerifyVarargsAsArray(BasicVerificationTest.java:125)\n    Actual invocation has different arguments:\n    iMethods.mixedVarargs(\"1\", \"2\", \"3\");\n    -&gt; at org.mockitousage.verification.BasicVerificationTest.shouldVerifyVarargsAsArray(BasicVerificationTest.java:123)\n    ...\n</code></pre></div>\n<p dir=\"auto\">This was found while upgrading from 1.9.5. In that version it was possible to achieve something similar by creating a custom ArgumentMatcher that implemented VarargMatcher. In that case the ArgumentMatcher was given the varargs as an array. However, in the latest version the same matcher is passed each vararg separately which prevents it from matching.</p>\n<p dir=\"auto\">It is not possible to inline the array as follows because in the actual code the contents of the array are passed as an array into the method that does the verification.<br>\n<code class=\"notranslate\">verify(mock).mixedVarargs(any(), eq(\"1\"), eq(\"2\"));</code></p>\n<p dir=\"auto\">I tried doing something like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    verify(mock).mixedVarargs(any(), inline(new String[] {&quot;1&quot;, &quot;2&quot;}));\n  }\n  public static &lt;T&gt; T inline(T[] array) {\n    for (Object o : array) {\n      eq(o);\n    }\n    return null;\n  }\"><pre class=\"notranslate\"><code class=\"notranslate\">    verify(mock).mixedVarargs(any(), inline(new String[] {\"1\", \"2\"}));\n  }\n  public static &lt;T&gt; T inline(T[] array) {\n    for (Object o : array) {\n      eq(o);\n    }\n    return null;\n  }\n</code></pre></div>\n<p dir=\"auto\">But that failed in MatchersBinder because the number of matchers provided (3) did not match the number of arguments passed in the invocation (2).</p>\n<p dir=\"auto\">I also tried to remove the VarargMatcher from the custom ArgumentMatcher but that failed too as the number of arguments did not match in MatcherApplicationStrategy.</p>",
                "resourcePath": "/mockito/mockito/issues/1222",
                "createdAt": "2017-10-26T10:05:05Z",
                "labels": {
                  "edges": []
                }
              }
            },
            {
              "node": {
                "number": 1498,
                "url": "https://github.com/mockito/mockito/issues/1498",
                "title": "(Argument)Matchers regression from 1.10.19 to 2.18.3 for varargs",
                "bodyHTML": "<p dir=\"auto\">While updating from 1.10.19 to 2.18.3 I have a regression regarding Matchers and varargs.<br>\nPassing tests now fail because the Matchers don't work anymore in the verify step.</p>\n<p dir=\"auto\">Below is a reduced test case to reprocude the issue. Version 2.22.0 and ArgumentMatcher were also tested with the same (failing) result.</p>\n<p dir=\"auto\">Error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Argument(s) are different! Wanted:\nspyableLogger.debug(\n\t&lt;any string&gt;,\n\t&lt;any java.lang.Object[]&gt;\n);\n-&gt; at tests.MockitoVarargsTest.testLoggerGetsCalled_Matchers(MockitoVarargsTest.java:29)\nActual invocation has different arguments:\nspyableLogger.debug(\n\t&quot;Something happened&quot;,\n\tjava.lang.RuntimeException: Oops\n);\n-&gt; at tests.MockitoVarargsTest.callLoggerDebug(MockitoVarargsTest.java:59)\n\n\tat tests.MockitoVarargsTest.testLoggerGetsCalled_Matchers(MockitoVarargsTest.java:29)\"><pre class=\"notranslate\"><code class=\"notranslate\">Argument(s) are different! Wanted:\nspyableLogger.debug(\n\t&lt;any string&gt;,\n\t&lt;any java.lang.Object[]&gt;\n);\n-&gt; at tests.MockitoVarargsTest.testLoggerGetsCalled_Matchers(MockitoVarargsTest.java:29)\nActual invocation has different arguments:\nspyableLogger.debug(\n\t\"Something happened\",\n\tjava.lang.RuntimeException: Oops\n);\n-&gt; at tests.MockitoVarargsTest.callLoggerDebug(MockitoVarargsTest.java:59)\n\n\tat tests.MockitoVarargsTest.testLoggerGetsCalled_Matchers(MockitoVarargsTest.java:29)\n</code></pre></div>\n<p dir=\"auto\">Test case:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package tests;\n\nimport java.util.Objects;\n\nimport org.junit.Test;\n//import org.mockito.ArgumentMatchers;\nimport org.mockito.Matchers;\nimport org.mockito.Mockito;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.slf4j.Marker;\n\npublic class MockitoVarargsTest {\n    \n    private final Logger logger = LoggerFactory.getLogger(getClass());\n\n    @Test\n    public void testLoggerGetsCalled_Matchers() {\n        final Logger spyableLogger = new SpyableLogger(logger);\n        final Logger loggerSpy = Mockito.spy(spyableLogger);\n\n        final RuntimeException e = new RuntimeException(&quot;Oops&quot;);\n\n        final String message = &quot;Something happened&quot;;\n        callLoggerDebug(loggerSpy, message, e);\n\n        // Mockito 1.10.19 works\n        // Mockito 2.18.3 fails\n        Mockito.verify(loggerSpy, Mockito.times(1)).debug(Matchers.anyString(), Matchers.any(Object[].class));\n        Mockito.verify(loggerSpy, Mockito.never()).trace(Matchers.anyString(), Matchers.any(Object[].class));\n        Mockito.verify(loggerSpy, Mockito.never()).warn(Matchers.anyString(), Matchers.any(Object[].class));\n        Mockito.verify(loggerSpy, Mockito.never()).error(Matchers.anyString(), Matchers.any(Object[].class));\n\n        final String message2 = String.format(&quot;%s %s&quot;, &quot;Something&quot;, &quot;happened&quot;);\n        Mockito.verify(loggerSpy, Mockito.times(1)).debug(Matchers.eq(message2), Matchers.any(Object[].class));\n    }\n\n//    @Test\n//    public void testLoggerGetsCalled_ArgumentMatchers() {\n//        final Logger spyableLogger = new SpyableLogger(logger);\n//        final Logger loggerSpy = Mockito.spy(spyableLogger);\n//\n//        final RuntimeException e = new RuntimeException(&quot;Oops&quot;);\n//\n//        final String message = &quot;Something happened&quot;;\n//        callLoggerDebug(loggerSpy, message, e);\n//\n//        // Mockito 2.18.3 fails\n//        Mockito.verify(loggerSpy, Mockito.times(1)).debug(ArgumentMatchers.anyString(), ArgumentMatchers.any(Object[].class));\n//        Mockito.verify(loggerSpy, Mockito.never()).trace(ArgumentMatchers.anyString(), ArgumentMatchers.any(Object[].class));\n//        Mockito.verify(loggerSpy, Mockito.never()).warn(ArgumentMatchers.anyString(), ArgumentMatchers.any(Object[].class));\n//        Mockito.verify(loggerSpy, Mockito.never()).error(ArgumentMatchers.anyString(), ArgumentMatchers.any(Object[].class));\n//\n//        final String message2 = String.format(&quot;%s %s&quot;, &quot;Something&quot;, &quot;happened&quot;);\n//        Mockito.verify(loggerSpy, Mockito.times(1)).debug(ArgumentMatchers.eq(message2), ArgumentMatchers.any(Object[].class));\n//    }\n\n    void callLoggerDebug(final Logger logger, final String message, final Object... args) {\n        logger.debug(message, args);\n    }\n\n    /**\n     * {@link Logger}s returned by {@link LoggerFactory} seem to be final and thus cannot be spied on.\n     * We use a delegating non-final class to spy on logging calls.\n     */\n    private static class SpyableLogger implements Logger {\n        final Logger delegate;\n\n        public SpyableLogger(final Logger logger) {\n            delegate = Objects.requireNonNull(logger, &quot;'logger' must not be null&quot;);\n        }\n\n        @Override\n        public void debug(Marker arg0, String arg1, Object arg2, Object arg3) {\n            delegate.debug(arg0, arg1, arg2, arg3);\n        }\n\n        @Override\n        public void debug(Marker arg0, String arg1, Object... arg2) {\n            delegate.debug(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void debug(Marker arg0, String arg1, Object arg2) {\n            delegate.debug(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void debug(Marker arg0, String arg1, Throwable arg2) {\n            delegate.debug(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void debug(Marker arg0, String arg1) {\n            delegate.debug(arg0, arg1);\n        }\n\n        @Override\n        public void debug(String arg0, Object arg1, Object arg2) {\n            delegate.debug(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void debug(String arg0, Object... arg1) {\n            delegate.debug(arg0, arg1);\n        }\n\n        @Override\n        public void debug(String arg0, Object arg1) {\n            delegate.debug(arg0, arg1);\n        }\n\n        @Override\n        public void debug(String arg0, Throwable arg1) {\n            delegate.debug(arg0, arg1);\n        }\n\n        @Override\n        public void debug(String arg0) {\n            delegate.debug(arg0);\n        }\n\n        @Override\n        public void error(Marker arg0, String arg1, Object arg2, Object arg3) {\n            delegate.error(arg0, arg1, arg2, arg3);\n        }\n\n        @Override\n        public void error(Marker arg0, String arg1, Object... arg2) {\n            delegate.error(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void error(Marker arg0, String arg1, Object arg2) {\n            delegate.error(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void error(Marker arg0, String arg1, Throwable arg2) {\n            delegate.error(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void error(Marker arg0, String arg1) {\n            delegate.error(arg0, arg1);\n        }\n\n        @Override\n        public void error(String arg0, Object arg1, Object arg2) {\n            delegate.error(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void error(String arg0, Object... arg1) {\n            delegate.error(arg0, arg1);\n        }\n\n        @Override\n        public void error(String arg0, Object arg1) {\n            delegate.error(arg0, arg1);\n        }\n\n        @Override\n        public void error(String arg0, Throwable arg1) {\n            delegate.error(arg0, arg1);\n        }\n\n        @Override\n        public void error(String arg0) {\n            delegate.error(arg0);\n        }\n\n        @Override\n        public String getName() {\n            return delegate.getName();\n        }\n\n        @Override\n        public void info(Marker arg0, String arg1, Object arg2, Object arg3) {\n            delegate.info(arg0, arg1, arg2, arg3);\n        }\n\n        @Override\n        public void info(Marker arg0, String arg1, Object... arg2) {\n            delegate.info(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void info(Marker arg0, String arg1, Object arg2) {\n            delegate.info(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void info(Marker arg0, String arg1, Throwable arg2) {\n            delegate.info(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void info(Marker arg0, String arg1) {\n            delegate.info(arg0, arg1);\n        }\n\n        @Override\n        public void info(String arg0, Object arg1, Object arg2) {\n            delegate.info(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void info(String arg0, Object... arg1) {\n            delegate.info(arg0, arg1);\n        }\n\n        @Override\n        public void info(String arg0, Object arg1) {\n            delegate.info(arg0, arg1);\n        }\n\n        @Override\n        public void info(String arg0, Throwable arg1) {\n            delegate.info(arg0, arg1);\n        }\n\n        @Override\n        public void info(String arg0) {\n            delegate.info(arg0);\n        }\n\n        @Override\n        public boolean isDebugEnabled() {\n            return delegate.isDebugEnabled();\n        }\n\n        @Override\n        public boolean isDebugEnabled(Marker arg0) {\n            return delegate.isDebugEnabled(arg0);\n        }\n\n        @Override\n        public boolean isErrorEnabled() {\n            return delegate.isErrorEnabled();\n        }\n\n        @Override\n        public boolean isErrorEnabled(Marker arg0) {\n            return delegate.isErrorEnabled(arg0);\n        }\n\n        @Override\n        public boolean isInfoEnabled() {\n            return delegate.isInfoEnabled();\n        }\n\n        @Override\n        public boolean isInfoEnabled(Marker arg0) {\n            return delegate.isInfoEnabled(arg0);\n        }\n\n        @Override\n        public boolean isTraceEnabled() {\n            return delegate.isTraceEnabled();\n        }\n\n        @Override\n        public boolean isTraceEnabled(Marker arg0) {\n            return delegate.isTraceEnabled(arg0);\n        }\n\n        @Override\n        public boolean isWarnEnabled() {\n            return delegate.isWarnEnabled();\n        }\n\n        @Override\n        public boolean isWarnEnabled(Marker arg0) {\n            return delegate.isWarnEnabled(arg0);\n        }\n\n        @Override\n        public void trace(Marker arg0, String arg1, Object arg2, Object arg3) {\n            delegate.trace(arg0, arg1, arg2, arg3);\n        }\n\n        @Override\n        public void trace(Marker arg0, String arg1, Object... arg2) {\n            delegate.trace(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void trace(Marker arg0, String arg1, Object arg2) {\n            delegate.trace(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void trace(Marker arg0, String arg1, Throwable arg2) {\n            delegate.trace(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void trace(Marker arg0, String arg1) {\n            delegate.trace(arg0, arg1);\n        }\n\n        @Override\n        public void trace(String arg0, Object arg1, Object arg2) {\n            delegate.trace(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void trace(String arg0, Object... arg1) {\n            delegate.trace(arg0, arg1);\n        }\n\n        @Override\n        public void trace(String arg0, Object arg1) {\n            delegate.trace(arg0, arg1);\n        }\n\n        @Override\n        public void trace(String arg0, Throwable arg1) {\n            delegate.trace(arg0, arg1);\n        }\n\n        @Override\n        public void trace(String arg0) {\n            delegate.trace(arg0);\n        }\n\n        @Override\n        public void warn(Marker arg0, String arg1, Object arg2, Object arg3) {\n            delegate.warn(arg0, arg1, arg2, arg3);\n        }\n\n        @Override\n        public void warn(Marker arg0, String arg1, Object... arg2) {\n            delegate.warn(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void warn(Marker arg0, String arg1, Object arg2) {\n            delegate.warn(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void warn(Marker arg0, String arg1, Throwable arg2) {\n            delegate.warn(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void warn(Marker arg0, String arg1) {\n            delegate.warn(arg0, arg1);\n        }\n\n        @Override\n        public void warn(String arg0, Object arg1, Object arg2) {\n            delegate.warn(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void warn(String arg0, Object... arg1) {\n            delegate.warn(arg0, arg1);\n        }\n\n        @Override\n        public void warn(String arg0, Object arg1) {\n            delegate.warn(arg0, arg1);\n        }\n\n        @Override\n        public void warn(String arg0, Throwable arg1) {\n            delegate.warn(arg0, arg1);\n        }\n\n        @Override\n        public void warn(String arg0) {\n            delegate.warn(arg0);\n        }\n\n    }\n\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">package tests;\n\nimport java.util.Objects;\n\nimport org.junit.Test;\n//import org.mockito.ArgumentMatchers;\nimport org.mockito.Matchers;\nimport org.mockito.Mockito;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.slf4j.Marker;\n\npublic class MockitoVarargsTest {\n    \n    private final Logger logger = LoggerFactory.getLogger(getClass());\n\n    @Test\n    public void testLoggerGetsCalled_Matchers() {\n        final Logger spyableLogger = new SpyableLogger(logger);\n        final Logger loggerSpy = Mockito.spy(spyableLogger);\n\n        final RuntimeException e = new RuntimeException(\"Oops\");\n\n        final String message = \"Something happened\";\n        callLoggerDebug(loggerSpy, message, e);\n\n        // Mockito 1.10.19 works\n        // Mockito 2.18.3 fails\n        Mockito.verify(loggerSpy, Mockito.times(1)).debug(Matchers.anyString(), Matchers.any(Object[].class));\n        Mockito.verify(loggerSpy, Mockito.never()).trace(Matchers.anyString(), Matchers.any(Object[].class));\n        Mockito.verify(loggerSpy, Mockito.never()).warn(Matchers.anyString(), Matchers.any(Object[].class));\n        Mockito.verify(loggerSpy, Mockito.never()).error(Matchers.anyString(), Matchers.any(Object[].class));\n\n        final String message2 = String.format(\"%s %s\", \"Something\", \"happened\");\n        Mockito.verify(loggerSpy, Mockito.times(1)).debug(Matchers.eq(message2), Matchers.any(Object[].class));\n    }\n\n//    @Test\n//    public void testLoggerGetsCalled_ArgumentMatchers() {\n//        final Logger spyableLogger = new SpyableLogger(logger);\n//        final Logger loggerSpy = Mockito.spy(spyableLogger);\n//\n//        final RuntimeException e = new RuntimeException(\"Oops\");\n//\n//        final String message = \"Something happened\";\n//        callLoggerDebug(loggerSpy, message, e);\n//\n//        // Mockito 2.18.3 fails\n//        Mockito.verify(loggerSpy, Mockito.times(1)).debug(ArgumentMatchers.anyString(), ArgumentMatchers.any(Object[].class));\n//        Mockito.verify(loggerSpy, Mockito.never()).trace(ArgumentMatchers.anyString(), ArgumentMatchers.any(Object[].class));\n//        Mockito.verify(loggerSpy, Mockito.never()).warn(ArgumentMatchers.anyString(), ArgumentMatchers.any(Object[].class));\n//        Mockito.verify(loggerSpy, Mockito.never()).error(ArgumentMatchers.anyString(), ArgumentMatchers.any(Object[].class));\n//\n//        final String message2 = String.format(\"%s %s\", \"Something\", \"happened\");\n//        Mockito.verify(loggerSpy, Mockito.times(1)).debug(ArgumentMatchers.eq(message2), ArgumentMatchers.any(Object[].class));\n//    }\n\n    void callLoggerDebug(final Logger logger, final String message, final Object... args) {\n        logger.debug(message, args);\n    }\n\n    /**\n     * {@link Logger}s returned by {@link LoggerFactory} seem to be final and thus cannot be spied on.\n     * We use a delegating non-final class to spy on logging calls.\n     */\n    private static class SpyableLogger implements Logger {\n        final Logger delegate;\n\n        public SpyableLogger(final Logger logger) {\n            delegate = Objects.requireNonNull(logger, \"'logger' must not be null\");\n        }\n\n        @Override\n        public void debug(Marker arg0, String arg1, Object arg2, Object arg3) {\n            delegate.debug(arg0, arg1, arg2, arg3);\n        }\n\n        @Override\n        public void debug(Marker arg0, String arg1, Object... arg2) {\n            delegate.debug(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void debug(Marker arg0, String arg1, Object arg2) {\n            delegate.debug(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void debug(Marker arg0, String arg1, Throwable arg2) {\n            delegate.debug(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void debug(Marker arg0, String arg1) {\n            delegate.debug(arg0, arg1);\n        }\n\n        @Override\n        public void debug(String arg0, Object arg1, Object arg2) {\n            delegate.debug(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void debug(String arg0, Object... arg1) {\n            delegate.debug(arg0, arg1);\n        }\n\n        @Override\n        public void debug(String arg0, Object arg1) {\n            delegate.debug(arg0, arg1);\n        }\n\n        @Override\n        public void debug(String arg0, Throwable arg1) {\n            delegate.debug(arg0, arg1);\n        }\n\n        @Override\n        public void debug(String arg0) {\n            delegate.debug(arg0);\n        }\n\n        @Override\n        public void error(Marker arg0, String arg1, Object arg2, Object arg3) {\n            delegate.error(arg0, arg1, arg2, arg3);\n        }\n\n        @Override\n        public void error(Marker arg0, String arg1, Object... arg2) {\n            delegate.error(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void error(Marker arg0, String arg1, Object arg2) {\n            delegate.error(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void error(Marker arg0, String arg1, Throwable arg2) {\n            delegate.error(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void error(Marker arg0, String arg1) {\n            delegate.error(arg0, arg1);\n        }\n\n        @Override\n        public void error(String arg0, Object arg1, Object arg2) {\n            delegate.error(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void error(String arg0, Object... arg1) {\n            delegate.error(arg0, arg1);\n        }\n\n        @Override\n        public void error(String arg0, Object arg1) {\n            delegate.error(arg0, arg1);\n        }\n\n        @Override\n        public void error(String arg0, Throwable arg1) {\n            delegate.error(arg0, arg1);\n        }\n\n        @Override\n        public void error(String arg0) {\n            delegate.error(arg0);\n        }\n\n        @Override\n        public String getName() {\n            return delegate.getName();\n        }\n\n        @Override\n        public void info(Marker arg0, String arg1, Object arg2, Object arg3) {\n            delegate.info(arg0, arg1, arg2, arg3);\n        }\n\n        @Override\n        public void info(Marker arg0, String arg1, Object... arg2) {\n            delegate.info(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void info(Marker arg0, String arg1, Object arg2) {\n            delegate.info(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void info(Marker arg0, String arg1, Throwable arg2) {\n            delegate.info(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void info(Marker arg0, String arg1) {\n            delegate.info(arg0, arg1);\n        }\n\n        @Override\n        public void info(String arg0, Object arg1, Object arg2) {\n            delegate.info(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void info(String arg0, Object... arg1) {\n            delegate.info(arg0, arg1);\n        }\n\n        @Override\n        public void info(String arg0, Object arg1) {\n            delegate.info(arg0, arg1);\n        }\n\n        @Override\n        public void info(String arg0, Throwable arg1) {\n            delegate.info(arg0, arg1);\n        }\n\n        @Override\n        public void info(String arg0) {\n            delegate.info(arg0);\n        }\n\n        @Override\n        public boolean isDebugEnabled() {\n            return delegate.isDebugEnabled();\n        }\n\n        @Override\n        public boolean isDebugEnabled(Marker arg0) {\n            return delegate.isDebugEnabled(arg0);\n        }\n\n        @Override\n        public boolean isErrorEnabled() {\n            return delegate.isErrorEnabled();\n        }\n\n        @Override\n        public boolean isErrorEnabled(Marker arg0) {\n            return delegate.isErrorEnabled(arg0);\n        }\n\n        @Override\n        public boolean isInfoEnabled() {\n            return delegate.isInfoEnabled();\n        }\n\n        @Override\n        public boolean isInfoEnabled(Marker arg0) {\n            return delegate.isInfoEnabled(arg0);\n        }\n\n        @Override\n        public boolean isTraceEnabled() {\n            return delegate.isTraceEnabled();\n        }\n\n        @Override\n        public boolean isTraceEnabled(Marker arg0) {\n            return delegate.isTraceEnabled(arg0);\n        }\n\n        @Override\n        public boolean isWarnEnabled() {\n            return delegate.isWarnEnabled();\n        }\n\n        @Override\n        public boolean isWarnEnabled(Marker arg0) {\n            return delegate.isWarnEnabled(arg0);\n        }\n\n        @Override\n        public void trace(Marker arg0, String arg1, Object arg2, Object arg3) {\n            delegate.trace(arg0, arg1, arg2, arg3);\n        }\n\n        @Override\n        public void trace(Marker arg0, String arg1, Object... arg2) {\n            delegate.trace(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void trace(Marker arg0, String arg1, Object arg2) {\n            delegate.trace(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void trace(Marker arg0, String arg1, Throwable arg2) {\n            delegate.trace(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void trace(Marker arg0, String arg1) {\n            delegate.trace(arg0, arg1);\n        }\n\n        @Override\n        public void trace(String arg0, Object arg1, Object arg2) {\n            delegate.trace(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void trace(String arg0, Object... arg1) {\n            delegate.trace(arg0, arg1);\n        }\n\n        @Override\n        public void trace(String arg0, Object arg1) {\n            delegate.trace(arg0, arg1);\n        }\n\n        @Override\n        public void trace(String arg0, Throwable arg1) {\n            delegate.trace(arg0, arg1);\n        }\n\n        @Override\n        public void trace(String arg0) {\n            delegate.trace(arg0);\n        }\n\n        @Override\n        public void warn(Marker arg0, String arg1, Object arg2, Object arg3) {\n            delegate.warn(arg0, arg1, arg2, arg3);\n        }\n\n        @Override\n        public void warn(Marker arg0, String arg1, Object... arg2) {\n            delegate.warn(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void warn(Marker arg0, String arg1, Object arg2) {\n            delegate.warn(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void warn(Marker arg0, String arg1, Throwable arg2) {\n            delegate.warn(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void warn(Marker arg0, String arg1) {\n            delegate.warn(arg0, arg1);\n        }\n\n        @Override\n        public void warn(String arg0, Object arg1, Object arg2) {\n            delegate.warn(arg0, arg1, arg2);\n        }\n\n        @Override\n        public void warn(String arg0, Object... arg1) {\n            delegate.warn(arg0, arg1);\n        }\n\n        @Override\n        public void warn(String arg0, Object arg1) {\n            delegate.warn(arg0, arg1);\n        }\n\n        @Override\n        public void warn(String arg0, Throwable arg1) {\n            delegate.warn(arg0, arg1);\n        }\n\n        @Override\n        public void warn(String arg0) {\n            delegate.warn(arg0);\n        }\n\n    }\n\n}\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/1498",
                "createdAt": "2018-09-24T20:02:38Z",
                "labels": {
                  "edges": []
                }
              }
            },
            {
              "node": {
                "number": 2796,
                "url": "https://github.com/mockito/mockito/issues/2796",
                "title": "Mocking varargs method with `any(String[].class)` doesn't work as expected",
                "bodyHTML": "<p dir=\"auto\">This issue is related to a resolved issue  <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1238333243\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2644\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2644/hovercard\" href=\"https://github.com/mockito/mockito/issues/2644\">#2644</a>, which was resolved in 4.7.0 by <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1257356867\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2664\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2664/hovercard\" href=\"https://github.com/mockito/mockito/pull/2664\">#2664</a>.</p>\n<p dir=\"auto\">As per the comment by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/perlun/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/perlun\">@perlun</a> in the above PR: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1257356867\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2664\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2664/hovercard?comment_id=1319816402&amp;comment_type=issue_comment\" href=\"https://github.com/mockito/mockito/pull/2664#issuecomment-1319816402\">#2664 (comment)</a></p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/big-andy-coates/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/big-andy-coates\">@big-andy-coates</a> I found a similar semi-related issue I think... With 4.7.0, this now works correctly:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        doAnswer(answerVoid((VoidAnswer2&lt;String, Object[]&gt;)\n                logger::info\n        )).when(mock)\n                .info(any(), (Object[]) any());\"><pre class=\"notranslate\">        <span class=\"pl-en\">doAnswer</span>(<span class=\"pl-en\">answerVoid</span>((<span class=\"pl-smi\">VoidAnswer2</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>[]&gt;)\n                <span class=\"pl-s1\">logger</span>::<span class=\"pl-s1\">info</span>\n        )).<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">mock</span>)\n                .<span class=\"pl-en\">info</span>(<span class=\"pl-en\">any</span>(), (<span class=\"pl-smi\">Object</span>[]) <span class=\"pl-en\">any</span>());</pre></div>\n<p dir=\"auto\"><em>However</em>, if I try to use this form which is slightly more ergonomic:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        doAnswer( answerVoid( (VoidAnswer2&lt;String, Object[]&gt;)\n                logger::info\n        ) ).when( mock )\n                .info( any(), any( Object[].class ) );\"><pre class=\"notranslate\">        <span class=\"pl-en\">doAnswer</span>( <span class=\"pl-en\">answerVoid</span>( (<span class=\"pl-smi\">VoidAnswer2</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>[]&gt;)\n                <span class=\"pl-s1\">logger</span>::<span class=\"pl-s1\">info</span>\n        ) ).<span class=\"pl-en\">when</span>( <span class=\"pl-s1\">mock</span> )\n                .<span class=\"pl-en\">info</span>( <span class=\"pl-en\">any</span>(), <span class=\"pl-en\">any</span>( <span class=\"pl-smi\">Object</span>[].<span class=\"pl-k\">class</span> ) );</pre></div>\n<p dir=\"auto\">...the mocking will fail to intercept these method calls. \ud83e\udd14 No error when creating the mock, but it just won't detect the method calls as expected.</p>\n<p dir=\"auto\">I <em>presume</em> this has again something to do with the varargs parsing. <code class=\"notranslate\">javac</code> resolves those two calls to the correct/same <code class=\"notranslate\">logger.info()</code> overload, so so far so good.</p>\n<p dir=\"auto\">Do you want me to create a separate issue/repro repo for this? I'm not even sure if it's something that can be (easily) fixed, I just happened to see it now while trying to \"clean up our code\"... \ud83d\ude05</p>\n<p dir=\"auto\"><em>Originally posted by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/perlun/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/perlun\">@perlun</a> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1257356867\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2664\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2664/hovercard?comment_id=1319816402&amp;comment_type=issue_comment\" href=\"https://github.com/mockito/mockito/pull/2664#issuecomment-1319816402\">#2664 (comment)</a></em></p>",
                "resourcePath": "/mockito/mockito/issues/2796",
                "createdAt": "2022-11-22T14:01:29Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix missing sync block in `InvocationContainerImpl`",
        "url": "https://github.com/mockito/mockito/pull/2812",
        "resourcePath": "/mockito/mockito/pull/2812",
        "createdAt": "2022-11-30T23:23:10Z",
        "number": 2812,
        "mergeCommit": {
          "oid": "96eb5e0cbff80a1545b1093db1baf4e33a2041e7",
          "message": "Fix missing sync block in `InvocationContainerImpl` (#2812)\n\nThe missing `synchronized` block while accessing `stubbed` was causing `ReturnsDeepStubsConcurrentTest` to periodically fail, and likely multithreaded user tests too.\r\n\r\nFixes #2808",
          "commitUrl": "https://github.com/mockito/mockito/commit/96eb5e0cbff80a1545b1093db1baf4e33a2041e7",
          "parents": {
            "nodes": [
              {
                "oid": "386323820ff181d1e11113e9f539c9b8f49643dd",
                "message": "Bump biz.aQute.bnd.builder from 6.3.1 to 6.4.0 (#2813)\n\nBumps biz.aQute.bnd.builder from 6.3.1 to 6.4.0.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: biz.aQute.bnd.builder\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85EAkXQ2gAoZjNkOTQ0YTJlMTBjNWRkNzdiZDNiZGUyMjg4NTMzM2FkZDEwYmIyZA",
                "url": "https://github.com/mockito/mockito/pull/2812/commits/f3d944a2e10c5dd77bd3bde22885333add10bb2d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2808,
                "url": "https://github.com/mockito/mockito/issues/2808",
                "title": "ReturnsDeepStubsConcurrentTest fails with `ArrayIndexOutOfBoundsException`",
                "bodyHTML": "<p dir=\"auto\">I'm noticing a flaky test when testing locally.</p>\n<p dir=\"auto\"><code class=\"notranslate\">ReturnsDeepStubsConcurrentTest</code> fails fairly frequently with <code class=\"notranslate\">java.lang.ArrayIndexOutOfBoundsException</code>.</p>\n<p dir=\"auto\">The exception is being thrown from <code class=\"notranslate\">InvocationContainerImpl#getStubbingsAscending()</code>:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" public Collection&lt;Stubbing&gt; getStubbingsAscending() {\n      List&lt;Stubbing&gt; result = new LinkedList&lt;&gt;(stubbed);  &lt;-- THIS LINE THROWS\n      Collections.reverse(result);\n      return result;\n  }\"><pre class=\"notranslate\"> <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">Stubbing</span>&gt; <span class=\"pl-s1\">getStubbingsAscending</span>() {\n      <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">Stubbing</span>&gt; <span class=\"pl-s1\">result</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">LinkedList</span>&lt;&gt;(<span class=\"pl-s1\">stubbed</span>);  &lt;-- <span class=\"pl-smi\">THIS</span> <span class=\"pl-c1\">LINE</span> <span class=\"pl-smi\">THROWS</span>\n      <span class=\"pl-smi\">Collections</span>.<span class=\"pl-en\">reverse</span>(<span class=\"pl-s1\">result</span>);\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">result</span>;\n  }</pre></div>\n<p dir=\"auto\">...and looks to be caused by <code class=\"notranslate\">stubbed</code> not being protected by a <code class=\"notranslate\">synchronized</code>.</p>\n<p dir=\"auto\">Happy to fix, but wanted to check its not intentionally this way...</p>",
                "resourcePath": "/mockito/mockito/issues/2808",
                "createdAt": "2022-11-28T20:27:49Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "AssertionError in MockUtil.getMockHandlerOrNull in our regression test suite. Fixes #2823",
        "url": "https://github.com/mockito/mockito/pull/2829",
        "resourcePath": "/mockito/mockito/pull/2829",
        "createdAt": "2022-12-20T21:26:44Z",
        "number": 2829,
        "mergeCommit": {
          "oid": "048731e9fc955789fe90efba6828262ce6e4f5d6",
          "message": "Move test to separate test suite to avoid assertion error  (#2829)\n\nFixes #2823\r\n\r\nSigned-off-by: Andriy Redko <drreta@gmail.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/048731e9fc955789fe90efba6828262ce6e4f5d6",
          "parents": {
            "nodes": [
              {
                "oid": "abbd2c86d9bf0af961e47927520e05f6c6726dea",
                "message": "Bump org.eclipse.osgi from 3.18.100 to 3.18.200 (#2828)\n\nBumps [org.eclipse.osgi](https://github.com/eclipse-equinox/equinox) from 3.18.100 to 3.18.200.\r\n- [Release notes](https://github.com/eclipse-equinox/equinox/releases)\r\n- [Commits](https://github.com/eclipse-equinox/equinox/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.eclipse.platform:org.eclipse.osgi\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "settings.gradle.kts"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/programmatic-test/programmatic-test.gradle"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "subprojects/programmatic-test/src/test/java/org/mockito/ProgrammaticMockMakerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85F591u2gAoOTM4MGJhYTRkNTYzNmExNjBjMWY4MzI1ODAyOTgxOTIzZTFjZDA5Yg",
                "url": "https://github.com/mockito/mockito/pull/2829/commits/9380baa4d5636a160c1f8325802981923e1cd09b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2823,
                "url": "https://github.com/mockito/mockito/issues/2823",
                "title": "AssertionError in `MockUtil.getMockHandlerOrNull` in our regression test suite",
                "bodyHTML": "<p dir=\"auto\">We appear to be hitting the following assertion in our test suites: </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/mockito/mockito/blob/e2e628918518b73de7381692f28556ac6caa4710/src/main/java/org/mockito/internal/util/MockUtil.java#L160\">mockito/src/main/java/org/mockito/internal/util/MockUtil.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 160\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/mockito/mockito/commit/e2e628918518b73de7381692f28556ac6caa4710\">e2e6289</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L160\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"160\"></td>\n          <td id=\"LC160\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">assert</span> <span class=\"pl-en\">getMockMaker</span>(<span class=\"pl-s1\">handler</span>.<span class=\"pl-en\">getMockSettings</span>().<span class=\"pl-en\">getMockMaker</span>()) == <span class=\"pl-s1\">mockMaker</span>; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Example error from <a href=\"https://github.com/mockito/mockito/actions/runs/3612965923/jobs/6088416494#logs\">the logs</a>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.StaticMockingExperimentTest &gt; stubbing_new FAILED\n    java.lang.AssertionError\n        at org.mockito.internal.util.MockUtil.getMockHandlerOrNull(MockUtil.java:160)\n        at org.mockito.internal.util.MockUtil.isMock(MockUtil.java:147)\n        at org.mockito.internal.util.DefaultMockingDetails.isMock(DefaultMockingDetails.java:32)\n        at org.mockito.internal.util.DefaultMockingDetails.assertGoodMock(DefaultMockingDetails.java:85)\n        at org.mockito.internal.util.DefaultMockingDetails.mockHandler(DefaultMockingDetails.java:77)\n        at org.mockito.internal.util.DefaultMockingDetails.getMockHandler(DefaultMockingDetails.java:68)\n        at org.mockito.StaticMockingExperimentTest.&lt;init&gt;(StaticMockingExperimentTest.java:44)\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.StaticMockingExperimentTest &gt; stubbing_new FAILED\n    java.lang.AssertionError\n        at org.mockito.internal.util.MockUtil.getMockHandlerOrNull(MockUtil.java:160)\n        at org.mockito.internal.util.MockUtil.isMock(MockUtil.java:147)\n        at org.mockito.internal.util.DefaultMockingDetails.isMock(DefaultMockingDetails.java:32)\n        at org.mockito.internal.util.DefaultMockingDetails.assertGoodMock(DefaultMockingDetails.java:85)\n        at org.mockito.internal.util.DefaultMockingDetails.mockHandler(DefaultMockingDetails.java:77)\n        at org.mockito.internal.util.DefaultMockingDetails.getMockHandler(DefaultMockingDetails.java:68)\n        at org.mockito.StaticMockingExperimentTest.&lt;init&gt;(StaticMockingExperimentTest.java:44)\n</code></pre></div>\n<p dir=\"auto\">The assertion was introduced in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1293522067\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2701\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2701/hovercard\" href=\"https://github.com/mockito/mockito/pull/2701\">#2701</a></p>",
                "resourcePath": "/mockito/mockito/issues/2823",
                "createdAt": "2022-12-14T21:15:12Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Switch the default mockmaker to the inline mockmaker on JDK 17+",
        "url": "https://github.com/mockito/mockito/pull/2834",
        "resourcePath": "/mockito/mockito/pull/2834",
        "createdAt": "2022-12-23T00:49:53Z",
        "number": 2834,
        "mergeCommit": {
          "oid": "a9595f559cf4acdaed92371537ced982e30f508d",
          "message": "Switch the default mockmaker to the inline mockmaker on JDK 17+ (#2834)\n\nFixes #2589\r\n\r\nSigned-off-by: Andriy Redko <drreta@gmail.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/a9595f559cf4acdaed92371537ced982e30f508d",
          "parents": {
            "nodes": [
              {
                "oid": "c5d7fbc532301d003293649b71c8a6f87283638e",
                "message": "Bump assertj-core from 3.23.1 to 3.24.1 (#2854)\n\nBumps assertj-core from 3.23.1 to 3.24.1.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.assertj:assertj-core\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/misuse/InvalidUsageTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/android/src/main/resources/mockito-extensions/org.mockito.plugins.MemberAccessor"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/module-test/src/test/java/org/mockito/moduletest/ModuleAccessTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/module-test/src/test/java/org/mockito/moduletest/ReplicatingClassLoader.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/osgi-test/osgi-test.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/osgi-test/src/test/java/org/mockito/osgitest/OsgiTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/osgi-test/src/testBundle/java/org/mockito/osgitest/testbundle/MockNonPublicClassTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/programmatic-test/programmatic-test.gradle"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "subprojects/programmatic-test/src/test/java/org/mockitousage/annotation/ProgrammaticMockMakerAnnotationTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/proxy/src/main/resources/mockito-extensions/org.mockito.plugins.MemberAccessor"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85GFl9F2gAoNGE5NDNkYWYxYTgwNTc5OGQ2ODkxMjU1MmZiOTkxODM2MGY3MTNhZg",
                "url": "https://github.com/mockito/mockito/pull/2834/commits/4a943daf1a805798d68912552fb9918360f713af"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2589,
                "url": "https://github.com/mockito/mockito/issues/2589",
                "title": "Switch the default mockmaker to the inline mockmaker on JDK 17+",
                "bodyHTML": "<p dir=\"auto\">All right, we have been talking about this for a while so let's consolidate discussions. TLDR: more and more use cases are broken (by default) with Mockito and JDK 17. That's because the subclass mockmaker runs into fundamental limitations on JDK 17, but the inline mockmaker works as expected.</p>\n<p dir=\"auto\">There are a lot of issues related to this:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1162535834\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2587\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2587/hovercard\" href=\"https://github.com/mockito/mockito/issues/2587\">#2587</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1124721668\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2560\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2560/hovercard\" href=\"https://github.com/mockito/mockito/issues/2560\">#2560</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1146222870\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2573\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2573/hovercard\" href=\"https://github.com/mockito/mockito/issues/2573\">#2573</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1128579742\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2561\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2561/hovercard\" href=\"https://github.com/mockito/mockito/issues/2561\">#2561</a> (suspected)</li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1084634344\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2521\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2521/hovercard\" href=\"https://github.com/mockito/mockito/issues/2521\">#2521</a> (suspected)</li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1030504423\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2449\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2449/hovercard\" href=\"https://github.com/mockito/mockito/issues/2449\">#2449</a> (suspected)</li>\n</ul>\n<p dir=\"auto\">At this point, the rate of issues created is increasing, as more and more of our users are adopting JDK 17+</p>\n<p dir=\"auto\">We have historically talked about this as well: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"454698857\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1728\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/1728/hovercard\" href=\"https://github.com/mockito/mockito/issues/1728\">#1728</a></p>\n<p dir=\"auto\">When chatting with <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/raphw/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/raphw\">@raphw</a> about this issue, there were a couple of options that we have available:</p>\n<ol dir=\"auto\">\n<li>Keep on using the subclass mockmaker by default on all JDK's and suggest users to use <code class=\"notranslate\">mockito-inline</code> whenever appropriate</li>\n<li>Switch the default to the inline mockmaker for all JDK's and put the subclass mockmaker in an artifact such as <code class=\"notranslate\">mockito-subclass</code> (legacy)</li>\n<li>Detect the current JDK version and make the inline mockmaker the default on JDK 17+, but keep the subclass mockmaker the default for older JDK versions</li>\n</ol>\n<p dir=\"auto\">In my opinion, we should opt for least amount of surprise. E.g. Mockito should \"just\" work out-of-the-box for the majority of use cases. Therefore, if Mockito (by default) does not work nicely with JDK 17 in more and more cases, I consider that a bug.</p>\n<p dir=\"auto\">That said, I don't think it is a good choice to force all existing users that are on JDK 16 and below to update their codebase wholesale to the new mockmaker. Inheritently, the new mockmaker works slightly different and forcing the update onto users doesn't feel like a nice solution. In the end, it works just fine on JDK 16 on below, so why change it?</p>\n<p dir=\"auto\">Therefore, my proposed way forward is:</p>\n<ol dir=\"auto\">\n<li>We publish Mockito 5 which switches the default mockmaker to the inline mockmaker on JDK 17+</li>\n<li>We update the JavaDoc of the subclass mockmaker to make users aware it is only intended to be used for specific use cases</li>\n</ol>\n<p dir=\"auto\">In terms of timeline, I think we should collective user feedback from the community first. This issue seems like the best place to do so. Once we are confident that we would be able to switch the default, we could publish Mockito 5. For now, what if we take June 2022 as a temporary date to make such a change, unless we receive strong/valid user feedback that should block such a change?</p>\n<p dir=\"auto\">CC @mockito/developers</p>",
                "resourcePath": "/mockito/mockito/issues/2589",
                "createdAt": "2022-03-08T15:30:10Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove `VarargMatcher`",
        "url": "https://github.com/mockito/mockito/pull/2835",
        "resourcePath": "/mockito/mockito/pull/2835",
        "createdAt": "2022-12-23T06:14:58Z",
        "number": 2835,
        "mergeCommit": {
          "oid": "064fe9028993a11ccf0ae12b5975b96baffcf305",
          "message": "Remove internal interface `VarargMatcher` (#2835)\n\nBREAKING CHANGE: This changes the default behaviour of the `any()` matcher, argument captors and `MockitoHamcrest` matchers when passed to a varargs parameter.  Previously, these matcher would match each element in the varargs parameter, matching any number of elements 0...n. From Mockito v5 onwards, when passed to a varargs parameter, will match invocations where a single value is passed to the varargs parameter. To match any number of values passed to the varargs parameter, pass the type of the varargs parameter to the matcher. For example, given a `String...` varargs parameter, use `any(String[].class)`.\r\n\r\nFixes #2836\r\nFixes #1593\r\nFixes #585",
          "commitUrl": "https://github.com/mockito/mockito/commit/064fe9028993a11ccf0ae12b5975b96baffcf305",
          "parents": {
            "nodes": [
              {
                "oid": "4ef3ce8563eb1800b0d68e47271d8ff1d95bc5f9",
                "message": "Make ArgumentCaptor type aware (#2842)\n\nEnhance argument captor to be more type aware. With this change it is now possible to create an argument captor that only captures certain subtypes of a parameter type.\r\n\r\nFor example:\r\n\r\n```java\r\n// Given:\r\nint simpleMethod(Collection<?> arg);\r\n\r\n// When:\r\nmock.simpleMethod(Set.of());\r\nmock.simpleMethod(List.of());\r\n\r\n// Then:\r\nArgumentCaptor<Collection<?>> captor = ArgumentCaptor.forClass(List.class);\r\nverify(mock).simpleMethod(captor.capture());\r\nassertThat(captor.getAllValues()).containsExactly(List.of());\r\n```\r\n\r\nFixes #565"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/invocation/MatcherApplicationStrategyTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/matchers/InstanceOfTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/util/reflection/ParameterizedConstructorInstantiatorTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/basicapi/UsingVarargsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/bugs/varargs/VarargsAndAnyPicksUpExtraInvocationsTest.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/test/java/org/mockitousage/bugs/varargs/VarargsNotPlayingWithAnyTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/matchers/CapturingArgumentsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/matchers/HamcrestMatchersTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/matchers/VarargsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/stubbing/StubbingWithAdditionalAnswersTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85GGUZM2gAoYjkzOTU5MTYzZWNhMTMwYmMxOGZhODA5Nzg2ZWY5NzA2NGE2ODdjNQ",
                "url": "https://github.com/mockito/mockito/pull/2835/commits/b93959163eca130bc18fa809786ef97064a687c5"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 585,
                "url": "https://github.com/mockito/mockito/issues/585",
                "title": "ArgumentCaptor A single `capture()` call captures all vararg elements.",
                "bodyHTML": "<p dir=\"auto\">A single <code class=\"notranslate\">ArgumentCaptor.capture()</code> call captures all vararg elements.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"mock.varargs(&quot;1&quot;,&quot;2&quot;,&quot;3&quot;);\n\n// captures &quot;1&quot;,&quot;2&quot;,&quot;3&quot;\nverify(mock).varargs(c.capture()); \n\n// fails with arguments are different\nverify(mock).varargs(c.capture(),\n                               c.capture()); \n\n\n// captures &quot;1&quot;,&quot;2&quot;,&quot;3&quot;\nverify(mock).varargs(c.capture(),\n                               c.capture(),\n                               c.capture()); \n\"><pre class=\"notranslate\"><code class=\"notranslate\">mock.varargs(\"1\",\"2\",\"3\");\n\n// captures \"1\",\"2\",\"3\"\nverify(mock).varargs(c.capture()); \n\n// fails with arguments are different\nverify(mock).varargs(c.capture(),\n                               c.capture()); \n\n\n// captures \"1\",\"2\",\"3\"\nverify(mock).varargs(c.capture(),\n                               c.capture(),\n                               c.capture()); \n\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected:</strong> One capture() call should only capture one vararg argument<br>\n<strong>Actual:</strong> A single <code class=\"notranslate\">ArgumentCaptor.capture()</code> call captures all vararg elements.</p>",
                "resourcePath": "/mockito/mockito/issues/585",
                "createdAt": "2016-08-23T12:10:59Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "maybe"
                      }
                    },
                    {
                      "node": {
                        "name": "ready"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 1593,
                "url": "https://github.com/mockito/mockito/issues/1593",
                "title": "Mockito confuses varargs and single-param methods (regression)",
                "bodyHTML": "<p dir=\"auto\">In Mockito 2.2.5 and later, when setting expectations for mocking a varargs method, using an array doesn't work:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Mockito.when(good.call(Mockito.any(String[].class))).thenReturn(1L);\"><pre class=\"notranslate\"><span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">good</span>.<span class=\"pl-en\">call</span>(<span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">any</span>(<span class=\"pl-smi\">String</span>[].<span class=\"pl-k\">class</span>))).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-c1\">1L</span>);</pre></div>\n<p dir=\"auto\">And instead the contained type must be used:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Mockito.when(good.call(Mockito.any(String.class))).thenReturn(1L);\"><pre class=\"notranslate\"><span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">good</span>.<span class=\"pl-en\">call</span>(<span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">any</span>(<span class=\"pl-smi\">String</span>.<span class=\"pl-k\">class</span>))).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-c1\">1L</span>);</pre></div>\n<p dir=\"auto\">However in the face of an overload of the varargs method that takes a single argument (of the same type):</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"    Long call(String value);\n    Long call(String... values);\"><pre class=\"notranslate\">    <span class=\"pl-smi\">Long</span> <span class=\"pl-s1\">call</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">value</span>);\n    <span class=\"pl-smi\">Long</span> <span class=\"pl-s1\">call</span>(<span class=\"pl-smi\">String</span>... <span class=\"pl-s1\">values</span>);</pre></div>\n<p dir=\"auto\">This results in being unable to set an expectation for the varargs call.<br>\nThis worked previously in Mockito 2.2.4 and earlier.</p>\n<p dir=\"auto\">Reproducer: <a href=\"https://github.com/mockito/mockito/files/2769668/mockito-bug.tar.gz\">mockito-bug.tar.gz</a></p>",
                "resourcePath": "/mockito/mockito/issues/1593",
                "createdAt": "2019-01-17T16:44:17Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 2836,
                "url": "https://github.com/mockito/mockito/issues/2836",
                "title": "Remove deprecated `VarargMatcher` interface in v5",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">VarargMatcher</code> is an internal interface used to match some matchers as 'varargs aware'.</p>\n<p dir=\"auto\">When <code class=\"notranslate\">MatcherApplicationStrategy</code>  sees a <code class=\"notranslate\">VarargMatcher</code> passed as the last matcher to a varargs method, it will use this matcher to match each value passed to the varargs parameter.</p>\n<p dir=\"auto\">This approach has been identified as broken, as it does not allow users to differentiate between matching an invocation where a single value is passed to the varargs parameter from an invocation matching any number of parameters.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// For example, given:\nString varargsMethod(String... args);\n\nwhen(mock.varargsMethod(any()).thenReturn(&quot;any()&quot;);\nwhen(mock.varargsMethod(any(), any()).thenReturn(&quot;any(), any()&quot;);\n\n// Then:\n// The following invocation will match the second mocking and therefore return &quot;any(), any()&quot;\nmock.varargsMethod(&quot;1&quot;, &quot;2&quot;);\n\n// So far so good, ...but all the following invocations will match the first mocking and therefore return &quot;any()&quot;:\nmock.varargsMethod();\nmock.varargsMethod(&quot;1&quot;);\nmock.varargsMethod(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;);\n\n// i.e. there is no way to say &quot;match exactly 1 param&quot;\"><pre class=\"notranslate\"><span class=\"pl-c\">// For example, given:</span>\n<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">varargsMethod</span>(<span class=\"pl-smi\">String</span>... <span class=\"pl-s1\">args</span>);\n\n<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">mock</span>.<span class=\"pl-en\">varargsMethod</span>(<span class=\"pl-en\">any</span>()).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-s\">\"any()\"</span>);\n<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">mock</span>.<span class=\"pl-en\">varargsMethod</span>(<span class=\"pl-en\">any</span>(), <span class=\"pl-en\">any</span>()).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-s\">\"any(), any()\"</span>);\n\n<span class=\"pl-c\">// Then:</span>\n<span class=\"pl-c\">// The following invocation will match the second mocking and therefore return \"any(), any()\"</span>\n<span class=\"pl-s1\">mock</span>.<span class=\"pl-en\">varargsMethod</span>(<span class=\"pl-s\">\"1\"</span>, <span class=\"pl-s\">\"2\"</span>);\n\n<span class=\"pl-c\">// So far so good, ...but all the following invocations will match the first mocking and therefore return \"any()\":</span>\n<span class=\"pl-s1\">mock</span>.<span class=\"pl-en\">varargsMethod</span>();\n<span class=\"pl-s1\">mock</span>.<span class=\"pl-en\">varargsMethod</span>(<span class=\"pl-s\">\"1\"</span>);\n<span class=\"pl-s1\">mock</span>.<span class=\"pl-en\">varargsMethod</span>(<span class=\"pl-s\">\"1\"</span>, <span class=\"pl-s\">\"2\"</span>, <span class=\"pl-s\">\"3\"</span>);\n\n<span class=\"pl-c\">// i.e. there is no way to say \"match exactly 1 param\"</span></pre></div>",
                "resourcePath": "/mockito/mockito/issues/2836",
                "createdAt": "2022-12-23T06:39:20Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix copyMockMethodDispatcher task",
        "url": "https://github.com/mockito/mockito/pull/2840",
        "resourcePath": "/mockito/mockito/pull/2840",
        "createdAt": "2022-12-27T05:52:32Z",
        "number": 2840,
        "mergeCommit": {
          "oid": "bd9947f3e5d7adfa2b18d87fd4bac7790bb10413",
          "message": "Fix copyMockMethodDispatcher task (#2840)\n\nThe task was incorrectly defining inputs and outputs, resulting in the task being marked 'UP-TO-DATE' and not re-running when the input changed or the output was removed.\r\n\r\nThe task now copies the 'raw' file into a new output directory and includes that directory in the jar.\r\n\r\nThis corrects the task inputs and outputs, while also avoiding warnings about shared output directories.",
          "commitUrl": "https://github.com/mockito/mockito/commit/bd9947f3e5d7adfa2b18d87fd4bac7790bb10413",
          "parents": {
            "nodes": [
              {
                "oid": "aa6c33903b385b86a607fcd485b4190a38aeb458",
                "message": "Bump groovy from 3.0.13 to 3.0.14 (#2838)\n\nBumps [groovy](https://github.com/apache/groovy) from 3.0.13 to 3.0.14.\r\n- [Release notes](https://github.com/apache/groovy/releases)\r\n- [Commits](https://github.com/apache/groovy/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.codehaus.groovy:groovy\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/mockito-core/inline-mock.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85GOpjR2gAoNDA3MWNlNWMxNDM0YTQ2OWRlZjAyNjBhNmEyYzVkZjYxNGI3NTllZQ",
                "url": "https://github.com/mockito/mockito/pull/2840/commits/4071ce5c1434a469def0260a6a2c5df614b759ee"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2839,
                "url": "https://github.com/mockito/mockito/issues/2839",
                "title": "Broken build: `MockMethodDispatcher.raw` not being built",
                "bodyHTML": "<p dir=\"auto\">I've noticed that the build can get into a bad state locally, with <code class=\"notranslate\">MockMethodDispatcher.raw</code> not being rebuilt if it's missing.</p>\n<p dir=\"auto\">This is because the <code class=\"notranslate\">copyMockMethodDispatcher</code> task defined in <code class=\"notranslate\">inline-mock.gradle</code> is incorrectly defined. It's currently defined as:</p>\n<div class=\"highlight highlight-source-groovy notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"task copyMockMethodDispatcher {\n    dependsOn compileJava\n    outputs.files files(&quot;${sourceSets.main.java.outputDir}/org/mockito/internal/creation/bytebuddy/inject&quot;)\n        .asFileTree\n        .matching { include &quot;*.raw&quot; }\n        .files\n        .collect { &quot;${buildDir}/${it.name}&quot; }\n\n    doLast {\n        copy {\n            from &quot;${sourceSets.main.java.outputDir}/org/mockito/internal/creation/bytebuddy/inject&quot;\n            into &quot;${sourceSets.main.java.outputDir}/org/mockito/internal/creation/bytebuddy/inject&quot;\n            include 'MockMethodDispatcher.class'\n            rename { String fileName -&gt;\n                fileName.replace('.class', '.raw')\n            }\n        }\n    }\n}\"><pre class=\"notranslate\">task copyMockMethodDispatcher {\n    dependsOn compileJava\n    outputs<span class=\"pl-k\">.</span>files files(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s1\"><span class=\"pl-pse\">${</span>sourceSets.main.java.outputDir<span class=\"pl-pse\">}</span></span>/org/mockito/internal/creation/bytebuddy/inject<span class=\"pl-pds\">\"</span></span>)\n        .asFileTree\n        .matching { include <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>*.raw<span class=\"pl-pds\">\"</span></span> }\n        .files\n        .collect { <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s1\"><span class=\"pl-pse\">${</span>buildDir<span class=\"pl-pse\">}</span></span>/<span class=\"pl-s1\"><span class=\"pl-pse\">${</span>it.name<span class=\"pl-pse\">}</span></span><span class=\"pl-pds\">\"</span></span> }\n\n    doLast {\n        copy {\n            from <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s1\"><span class=\"pl-pse\">${</span>sourceSets.main.java.outputDir<span class=\"pl-pse\">}</span></span>/org/mockito/internal/creation/bytebuddy/inject<span class=\"pl-pds\">\"</span></span>\n            into <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-s1\"><span class=\"pl-pse\">${</span>sourceSets.main.java.outputDir<span class=\"pl-pse\">}</span></span>/org/mockito/internal/creation/bytebuddy/inject<span class=\"pl-pds\">\"</span></span>\n            include <span class=\"pl-s\"><span class=\"pl-pds\">'</span>MockMethodDispatcher.class<span class=\"pl-pds\">'</span></span>\n            rename { <span class=\"pl-k\">String</span> <span class=\"pl-v\">fileName</span> <span class=\"pl-k\">-&gt;</span>\n                fileName<span class=\"pl-k\">.</span>replace(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>.class<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>.raw<span class=\"pl-pds\">'</span></span>)\n            }\n        }\n    }\n}</pre></div>\n<p dir=\"auto\">However:</p>\n<ol dir=\"auto\">\n<li>It's not defining any inputs!  So the task doesn't know when to re-run.</li>\n<li>It's defining its output as \"$buildDir/MockMethodDispatcher.raw\", which is wrong, it should be in the <code class=\"notranslate\">/org/mockito/internal/creation/bytebuddy/inject</code> directory...</li>\n</ol>\n<p dir=\"auto\">The net result of this is that Gradle caches the fact the task has run and then even if the <code class=\"notranslate\">MockMethodDispatcher.raw</code> output file is deleted, the task does NOT re-run.</p>\n<p dir=\"auto\">It looks like this was done to avoid warnings under Gradle 7.x about tasks sharing output directories.</p>\n<p dir=\"auto\">A better solution would be to move the renamed file to a new location, outside of the output of <code class=\"notranslate\">compileJava</code> and include this in the jar.</p>",
                "resourcePath": "/mockito/mockito/issues/2839",
                "createdAt": "2022-12-27T05:48:52Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Type aware argument captor",
        "url": "https://github.com/mockito/mockito/pull/2842",
        "resourcePath": "/mockito/mockito/pull/2842",
        "createdAt": "2022-12-29T12:40:11Z",
        "number": 2842,
        "mergeCommit": {
          "oid": "4ef3ce8563eb1800b0d68e47271d8ff1d95bc5f9",
          "message": "Make ArgumentCaptor type aware (#2842)\n\nEnhance argument captor to be more type aware. With this change it is now possible to create an argument captor that only captures certain subtypes of a parameter type.\r\n\r\nFor example:\r\n\r\n```java\r\n// Given:\r\nint simpleMethod(Collection<?> arg);\r\n\r\n// When:\r\nmock.simpleMethod(Set.of());\r\nmock.simpleMethod(List.of());\r\n\r\n// Then:\r\nArgumentCaptor<Collection<?>> captor = ArgumentCaptor.forClass(List.class);\r\nverify(mock).simpleMethod(captor.capture());\r\nassertThat(captor.getAllValues()).containsExactly(List.of());\r\n```\r\n\r\nFixes #565",
          "commitUrl": "https://github.com/mockito/mockito/commit/4ef3ce8563eb1800b0d68e47271d8ff1d95bc5f9",
          "parents": {
            "nodes": [
              {
                "oid": "1eb47bcebde6dcf11ff9e4a43da81be0dbc2e638",
                "message": "Bump kotlinVersion from 1.7.22 to 1.8.0 (#2841)\n\nBumps `kotlinVersion` from 1.7.22 to 1.8.0.\r\n\r\nUpdates `kotlin-gradle-plugin` from 1.7.22 to 1.8.0\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/master/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/compare/v1.7.22...v1.8.0)\r\n\r\nUpdates `kotlin-stdlib` from 1.7.22 to 1.8.0\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/master/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/compare/v1.7.22...v1.8.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.jetbrains.kotlin:kotlin-gradle-plugin\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n- dependency-name: org.jetbrains.kotlin:kotlin-stdlib\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/matchers/CapturingMatcher.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/matchers/CapturingArgumentsTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85GWLoN2gAoMzdiY2E1NjRkYmM2ZDBhNzY1MDJjODM3NmM3Yjg5ODdhZmQwYzM1MA",
                "url": "https://github.com/mockito/mockito/pull/2842/commits/37bca564dbc6d0a76502c8376c7b8987afd0c350"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 565,
                "url": "https://github.com/mockito/mockito/issues/565",
                "title": "ArgumentCaptor should be type aware",
                "bodyHTML": "<p dir=\"auto\">Assume we have the following test.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" @Mock\n private Consumer&lt;Collection&lt;?&gt;&gt; consumer;\n\n @Test\n public void test() throws Exception {\n\n    consumer.accept(new HashSet&lt;&gt;());\n    consumer.accept(new ArrayList&lt;&gt;());\n\n    ArgumentCaptor&lt;ArrayList&lt;?&gt;&gt; captor = ArgumentCaptor.forClass(ArrayList.class);\n    verify(consumer).accept(captor.capture());\n }\"><pre class=\"notranslate\"><code class=\"notranslate\"> @Mock\n private Consumer&lt;Collection&lt;?&gt;&gt; consumer;\n\n @Test\n public void test() throws Exception {\n\n    consumer.accept(new HashSet&lt;&gt;());\n    consumer.accept(new ArrayList&lt;&gt;());\n\n    ArgumentCaptor&lt;ArrayList&lt;?&gt;&gt; captor = ArgumentCaptor.forClass(ArrayList.class);\n    verify(consumer).accept(captor.capture());\n }\n</code></pre></div>\n<p dir=\"auto\">The test fails with:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.verification.TooManyActualInvocations:\nconsumer.accept(&lt;Capturing argument&gt;);\nWanted 1 time:\n-&gt; at foo.TestClass.testName(TestClass.java:64)\nBut was 2 times. Undesired invocation:\n-&gt; at agh.TestClass.testName(TestClass.java:61)\n\n    at foo.TestClass.test(TestClass.java:64)\n    [..]\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.exceptions.verification.TooManyActualInvocations:\nconsumer.accept(&lt;Capturing argument&gt;);\nWanted 1 time:\n-&gt; at foo.TestClass.testName(TestClass.java:64)\nBut was 2 times. Undesired invocation:\n-&gt; at agh.TestClass.testName(TestClass.java:61)\n\n    at foo.TestClass.test(TestClass.java:64)\n    [..]\n</code></pre></div>\n<p dir=\"auto\">The problem here is that ArgumentCaptor is not type aware. That should be fixed.</p>\n<p dir=\"auto\">This issue was extracted from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"134572872\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/358\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/358/hovercard\" href=\"https://github.com/mockito/mockito/issues/358\">#358</a> and relates to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"161045110\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/439\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/439/hovercard\" href=\"https://github.com/mockito/mockito/issues/439\">#439</a>.</p>",
                "resourcePath": "/mockito/mockito/issues/565",
                "createdAt": "2016-08-17T07:52:34Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "ready"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove broken link from `CONTRIBUTING.md`",
        "url": "https://github.com/mockito/mockito/pull/2870",
        "resourcePath": "/mockito/mockito/pull/2870",
        "createdAt": "2023-01-15T13:46:20Z",
        "number": 2870,
        "mergeCommit": {
          "oid": "23e344ec7b7c11743331ace30f26c21da12767ba",
          "message": "Remove broken link from `CONTRIBUTING.md` (#2870)\n\nFixes #2868",
          "commitUrl": "https://github.com/mockito/mockito/commit/23e344ec7b7c11743331ace30f26c21da12767ba",
          "parents": {
            "nodes": [
              {
                "oid": "f2a47c35b8b16a8b1c560b9d93bc3cce62a3e310",
                "message": "Improve examples for InOrder (#2843)\n\nInclude some context in InOrder examples and add an example that uses\r\na static mock as well."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/CONTRIBUTING.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85HaI1c2gAoOGYwMmM1YWU4ZGM3ZGMzZDkyN2EzODNhOTE1ZmI0Y2JlNWE5Y2U2MQ",
                "url": "https://github.com/mockito/mockito/pull/2870/commits/8f02c5ae8dc7dc3d927a383a915fb4cbe5a9ce61"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2868,
                "url": "https://github.com/mockito/mockito/issues/2868",
                "title": "Broken link in `CONTRIBUTING.md`",
                "bodyHTML": "<p dir=\"auto\">Something I noticed while opening a PR yesterday: the <code class=\"notranslate\">CONTRIBUTING.md</code> file contains <a href=\"https://github.com/mockito/mockito/blame/0aba0d5b031b4282c9b6686add2b443bda761817/.github/CONTRIBUTING.md#L57\">what should be</a> a link to some document talking about well-designed APIs, except that the link text is an unrelated sentence.</p>\n<p dir=\"auto\">I couldn't trace the revision back to a PR discussion, so unsure what this was meant to link to. Maybe <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/bric3/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bric3\">@bric3</a> remembers?</p>",
                "resourcePath": "/mockito/mockito/issues/2868",
                "createdAt": "2023-01-15T09:42:28Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make sure the tests use mock maker with intended member accessor",
        "url": "https://github.com/mockito/mockito/pull/2872",
        "resourcePath": "/mockito/mockito/pull/2872",
        "createdAt": "2023-01-16T20:30:48Z",
        "number": 2872,
        "mergeCommit": {
          "oid": "96452fa7fb1a297323dfd998953489deeca64e28",
          "message": "Make sure the tests use mock maker with intended member accessor (#2872)\n\nFixes #2855\r\n\r\nSigned-off-by: Andriy Redko <drreta@gmail.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/96452fa7fb1a297323dfd998953489deeca64e28",
          "parents": {
            "nodes": [
              {
                "oid": "1418769a9f89060f7035a48094d0bb2eba1e0ec5",
                "message": "Bump assertj-core from 3.24.1 to 3.24.2 (#2875)\n\nBumps assertj-core from 3.24.1 to 3.24.2.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.assertj:assertj-core\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "gradle/mockito-core/testing.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/plugins/DefaultMockitoPlugins.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/plugins/PluginRegistry.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/junit/DefaultStubbingLookupListener.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/MockitoEnvTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/spies/PartialMockingWithSpiesTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/extTest/src/test/java/org/mockitousage/plugins/switcher/MyPluginSwitch.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85HfncS2gAoM2Q3ZTBkMmFiYjE2OGQwYTYyNDVhMjE0NWVkMWEzMGI3ODY0MjVjOQ",
                "url": "https://github.com/mockito/mockito/pull/2872/commits/3d7e0d2abb168d0a6245a2145ed1a30b786425c9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2855,
                "url": "https://github.com/mockito/mockito/issues/2855",
                "title": "Make sure the tests use mock maker with intended member accessor",
                "bodyHTML": "<p dir=\"auto\">It seems like there is a gap in tests: the tests get mock maker instance (from environment setting) but not the member accessor it supposed to be used with. As such, the tests used reflection, not module accessor, all the time (see please <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1508723799\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2834\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2834/hovercard?comment_id=1374876590&amp;comment_type=issue_comment\" href=\"https://github.com/mockito/mockito/pull/2834#issuecomment-1374876590\">#2834 (comment)</a>).</p>\n<p dir=\"auto\">check that</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/TimvdLippe/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/TimvdLippe\">@TimvdLippe</a> I could take it if you don't mind, thank you</p>",
                "resourcePath": "/mockito/mockito/issues/2855",
                "createdAt": "2023-01-09T01:43:25Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Clean up JDK-8 related code",
        "url": "https://github.com/mockito/mockito/pull/2883",
        "resourcePath": "/mockito/mockito/pull/2883",
        "createdAt": "2023-01-22T02:37:05Z",
        "number": 2883,
        "mergeCommit": {
          "oid": "4775c67fe3569bbb735877e101b5f8a7889788f9",
          "message": "Clean up JDK-8 related code (#2883)\n\nFixes #2879 \r\n\r\nSigned-off-by: Andriy Redko <drreta@gmail.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/4775c67fe3569bbb735877e101b5f8a7889788f9",
          "parents": {
            "nodes": [
              {
                "oid": "91223f830552ce3bb5daf7095f4f30767e072b96",
                "message": "Feat: reified mock overloads (#2882)\n\nAdded reified mock overload methods to match the methods\r\nthat consume an explicit Class<T> object.\r\n\r\nThe following methods have been added:\r\n\r\n- Mockito.<T>mock(String, T...) - Sets the mock name.\r\n- Mockito.<T>mock(Answer, T...) - Sets the default answer.\r\n- Mockito.<T>mock(WithSettings, T...) - Provides custom settings.\r\n\r\nI have also added a case where passing null varargs in would\r\nresult in a NullPointerException previously. Now, it will tell\r\nthe user that they should not be providing these varargs at all.\r\n\r\nThese overloads should not conflict with any existing usages of\r\nthis API in the intended way, as the assumption is that a user\r\nprobably isn't going to want to be mocking Mockito internals,\r\nStrings, or WithSettings objects anyway. If they do need to\r\nachieve this, then this is still accessible via the existing\r\nMockito.<T>mock(Class<T>) methods anyway."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/main/java/org/mockito/internal/debugging/Java8LocationImpl.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/main/java/org/mockito/internal/debugging/Java9PlusLocationImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/debugging/LocationFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/main/java/org/mockito/internal/util/JavaEightUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/Platform.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/util/PlatformTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/androidTest/androidTest.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/kotlinReleaseCoroutinesTest/kotlinReleaseCoroutinesTest.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/kotlinTest/kotlinTest.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85IRUJ-2gAoYjE5Njk5ODBjY2QzNjU2NGE0MTY1Yjc2N2NkYzFlZTQzYWRmMTYyZQ",
                "url": "https://github.com/mockito/mockito/pull/2883/commits/b1969980ccd36564a4165b767cdc1ee43adf162e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2879,
                "url": "https://github.com/mockito/mockito/issues/2879",
                "title": "Clean up JDK-8 related code",
                "bodyHTML": "<p dir=\"auto\">Since Mockito <code class=\"notranslate\">5.0.0</code> has JDK-11 baseline (\ud83e\udd73 ), we could clean up all JDK-8 code:</p>\n<ul dir=\"auto\">\n<li>Remove <code class=\"notranslate\">Java8LocationImpl</code></li>\n<li>Remove <code class=\"notranslate\">Java8LocationFactory</code></li>\n<li>Check for any other places JDK-8 is checked for</li>\n<li>Check for any pre-JDK-8 code (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1338720434\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2731\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2731/hovercard\" href=\"https://github.com/mockito/mockito/pull/2731\">#2731</a>)</li>\n</ul>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/TimvdLippe/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/TimvdLippe\">@TimvdLippe</a> I think this is a good time to clean up, what do you think? (I could take care of that).</p>\n<p dir=\"auto\">Thank you!</p>",
                "resourcePath": "/mockito/mockito/issues/2879",
                "createdAt": "2023-01-20T01:59:06Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "StackWalker.Option not found on Mockito 5.1.0",
        "url": "https://github.com/mockito/mockito/pull/2891",
        "resourcePath": "/mockito/mockito/pull/2891",
        "createdAt": "2023-01-30T20:43:47Z",
        "number": 2891,
        "mergeCommit": {
          "oid": "50b21cf68b400a29369de58b9286d29e368212a7",
          "message": "StackWalker.Option not found on Mockito 5.1.0 (#2891)\n\nFixes #2890 \r\n\r\nSigned-off-by: Andriy Redko <drreta@gmail.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/50b21cf68b400a29369de58b9286d29e368212a7",
          "parents": {
            "nodes": [
              {
                "oid": "19ab3ea8389d215621b256e055987df204f400e4",
                "message": "Fixes some mistakes and missing details in documentation (#2889)\n\n- Makes static mock verification and construction initialisers into\r\n  functional interfaces, and adds some missing documentation notes.\r\n- Fixes a number of grammar/spelling typos.\r\n- Replaces an instance of a JavaDoc comment suggesting to use a\r\n  deprecated method with a reference to the suggested replacement.\r\n- Adds a note about supporting chaining of Spy with InjectMocks into\r\n  the InjectMocks documentation"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/internal/debugging/Java8LocationImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/debugging/LocationFactory.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85I2ptH2gAoM2Y3ZWE1ODUyNWUwM2FlMzJiNDM2MzFlZmMzZTQxZDI5YjU2OTczNw",
                "url": "https://github.com/mockito/mockito/pull/2891/commits/3f7ea58525e03ae32b43631efc3e41d29b569737"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2890,
                "url": "https://github.com/mockito/mockito/issues/2890",
                "title": "StackWalker.Option not found on Mockito 5.1.0",
                "bodyHTML": "<p dir=\"auto\">We have an Android project using Mockito and we tried to upgrade from 5.0.0 to 5.1.0.</p>\n<p dir=\"auto\">When running the Android tests we always receive an error like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NoClassDefFoundError: Failed resolution of: Ljava/lang/StackWalker$Option;\n\tat org.mockito.internal.debugging.LocationImpl.stackWalker(LocationImpl.java:138)\n\tat org.mockito.internal.debugging.LocationImpl.&lt;clinit&gt;(LocationImpl.java:40)\n\tat org.mockito.internal.debugging.LocationFactory.create(LocationFactory.java:17)\n\tat org.mockito.internal.debugging.LocationFactory.create(LocationFactory.java:13)\n\tat org.mockito.internal.matchers.LocalizedMatcher.&lt;init&gt;(LocalizedMatcher.java:19)\n\tat org.mockito.internal.progress.ArgumentMatcherStorageImpl.reportMatcher(ArgumentMatcherStorageImpl.java:30)\n\tat org.mockito.ArgumentMatchers.reportMatcher(ArgumentMatchers.java:1036)\n\tat org.mockito.ArgumentMatchers.any(ArgumentMatchers.java:177)\n\t...\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.NoClassDefFoundError: Failed resolution of: Ljava/lang/StackWalker$Option;\n\tat org.mockito.internal.debugging.LocationImpl.stackWalker(LocationImpl.java:138)\n\tat org.mockito.internal.debugging.LocationImpl.&lt;clinit&gt;(LocationImpl.java:40)\n\tat org.mockito.internal.debugging.LocationFactory.create(LocationFactory.java:17)\n\tat org.mockito.internal.debugging.LocationFactory.create(LocationFactory.java:13)\n\tat org.mockito.internal.matchers.LocalizedMatcher.&lt;init&gt;(LocalizedMatcher.java:19)\n\tat org.mockito.internal.progress.ArgumentMatcherStorageImpl.reportMatcher(ArgumentMatcherStorageImpl.java:30)\n\tat org.mockito.ArgumentMatchers.reportMatcher(ArgumentMatchers.java:1036)\n\tat org.mockito.ArgumentMatchers.any(ArgumentMatchers.java:177)\n\t...\n</code></pre></div>\n<p dir=\"auto\">After some investigation we found that:</p>\n<ul dir=\"auto\">\n<li>StackWalker is only available from Java 9. All our modules are setup to use Java 11.</li>\n<li>We can't see StackWalker class from the IDE</li>\n<li>This only happens on Android instrumental tests, not in \"normal\" java tests</li>\n<li>The class StackWalker is not available in Android SDK java implementation: <a href=\"https://github.com/AndroidSDKSources/android-sdk-sources-for-api-level-33/tree/master/java/lang\">https://github.com/AndroidSDKSources/android-sdk-sources-for-api-level-33/tree/master/java/lang</a> (that would explain why is not working only for instrumental tests, as they are executed on an Android device). Checked for latest android versions.</li>\n</ul>\n<p dir=\"auto\">It looks like a very specific Android issue.</p>\n<p dir=\"auto\">For the meantime, we will halt the upgrade, but any help will be great.</p>\n<p dir=\"auto\">Thanks in advance</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li>[N/A] The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2890",
                "createdAt": "2023-01-30T10:32:02Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Set up Android Github Action pipeline. Fixes #2892",
        "url": "https://github.com/mockito/mockito/pull/2893",
        "resourcePath": "/mockito/mockito/pull/2893",
        "createdAt": "2023-01-31T00:59:53Z",
        "number": 2893,
        "mergeCommit": {
          "oid": "e9784550dc773c14efbddba8880f9d6750cb9f9b",
          "message": "Set up Android Github Action pipeline (#2893)\n\nFixes #2892\r\n\r\nSigned-off-by: Andriy Redko <drreta@gmail.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/e9784550dc773c14efbddba8880f9d6750cb9f9b",
          "parents": {
            "nodes": [
              {
                "oid": "a2c85c5d7c611285e1abf512c81a0489ddf39830",
                "message": "Bump com.github.ben-manes.versions from 0.44.0 to 0.45.0 (#2895)\n\nBumps com.github.ben-manes.versions from 0.44.0 to 0.45.0.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.github.ben-manes.versions\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/androidTest/src/androidTest/java/org/mockitousage/androidtest/BasicInstrumentedTests.kt"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85I3lK22gAoMzg3OGY4NzE1Zjc4YjIzMjIwZmFhZmMyOTcxNmU5MjE1MWQ1ZTdhMw",
                "url": "https://github.com/mockito/mockito/pull/2893/commits/3878f8715f78b23220faafc29716e92151d5e7a3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2892,
                "url": "https://github.com/mockito/mockito/issues/2892",
                "title": "Set up Android Github Action pipeline",
                "bodyHTML": "<p dir=\"auto\">Coming from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1562168434\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2890\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2890/hovercard?comment_id=1409200309&amp;comment_type=issue_comment\" href=\"https://github.com/mockito/mockito/issues/2890#issuecomment-1409200309\">#2890 (comment)</a>:</p>\n<blockquote>\n<p dir=\"auto\">we started an effort to set up some basic Android tests for us: <a href=\"https://github.com/mockito/mockito/tree/main/subprojects/androidTest\">https://github.com/mockito/mockito/tree/main/subprojects/androidTest</a> However, this stalled as we couldn't get it to work on CI. If anybody affected here would like to dedicate some time to prevent these kind of issues from happening, please take a look at the existing test suite and infrastructure and submit a PR to get it passing on CI.</p>\n</blockquote>\n<p dir=\"auto\">The presence of such Github Action would have helped to prevent regressions like <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1562168434\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2890\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2890/hovercard\" href=\"https://github.com/mockito/mockito/issues/2890\">#2890</a>.</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/TimvdLippe/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/TimvdLippe\">@TimvdLippe</a> I will try to pull it off (I don't work with Android sadly), it seems like Github Actions have support for it.</p>",
                "resourcePath": "/mockito/mockito/issues/2892",
                "createdAt": "2023-01-31T00:40:00Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Android CI improvements, improves #2892",
        "url": "https://github.com/mockito/mockito/pull/2903",
        "resourcePath": "/mockito/mockito/pull/2903",
        "createdAt": "2023-02-06T22:23:36Z",
        "number": 2903,
        "mergeCommit": {
          "oid": "d6e39b8c1e48f4c23164ef65c5694657e65f3fc4",
          "message": "Improve Android 33 API CI job (#2903)\n\nImprovements for #2892",
          "commitUrl": "https://github.com/mockito/mockito/commit/d6e39b8c1e48f4c23164ef65c5694657e65f3fc4",
          "parents": {
            "nodes": [
              {
                "oid": "87ee3875e2a457a5c0e1083b4cafbfe91243c260",
                "message": "Fix most Gradle warnings in build (#2904)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85JYf3s2gAoNjlmNTlkNDIzZjFkMTc3OGYwZTI0ZTk4YzdmMTZjNDViZTAzYjY0YQ",
                "url": "https://github.com/mockito/mockito/pull/2903/commits/69f59d423f1d1778f0e24e98c7f16c45be03b64a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2892,
                "url": "https://github.com/mockito/mockito/issues/2892",
                "title": "Set up Android Github Action pipeline",
                "bodyHTML": "<p dir=\"auto\">Coming from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1562168434\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2890\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2890/hovercard?comment_id=1409200309&amp;comment_type=issue_comment\" href=\"https://github.com/mockito/mockito/issues/2890#issuecomment-1409200309\">#2890 (comment)</a>:</p>\n<blockquote>\n<p dir=\"auto\">we started an effort to set up some basic Android tests for us: <a href=\"https://github.com/mockito/mockito/tree/main/subprojects/androidTest\">https://github.com/mockito/mockito/tree/main/subprojects/androidTest</a> However, this stalled as we couldn't get it to work on CI. If anybody affected here would like to dedicate some time to prevent these kind of issues from happening, please take a look at the existing test suite and infrastructure and submit a PR to get it passing on CI.</p>\n</blockquote>\n<p dir=\"auto\">The presence of such Github Action would have helped to prevent regressions like <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1562168434\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2890\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2890/hovercard\" href=\"https://github.com/mockito/mockito/issues/2890\">#2890</a>.</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/TimvdLippe/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/TimvdLippe\">@TimvdLippe</a> I will try to pull it off (I don't work with Android sadly), it seems like Github Actions have support for it.</p>",
                "resourcePath": "/mockito/mockito/issues/2892",
                "createdAt": "2023-01-31T00:40:00Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #2905 : ThreadLocal classes can be mocked.",
        "url": "https://github.com/mockito/mockito/pull/2908",
        "resourcePath": "/mockito/mockito/pull/2908",
        "createdAt": "2023-02-08T22:24:04Z",
        "number": 2908,
        "mergeCommit": {
          "oid": "51535267e574cc80fac453aff25e56c7bc21e41b",
          "message": "Fix mocking of ThreadLocal (#2908)\n\nFixes #2905\r\n\r\nCo-authored-by: Roberto Trunfio <Roberto.Trunfio@appway.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/51535267e574cc80fac453aff25e56c7bc21e41b",
          "parents": {
            "nodes": [
              {
                "oid": "d6e39b8c1e48f4c23164ef65c5694657e65f3fc4",
                "message": "Improve Android 33 API CI job (#2903)\n\nImprovements for #2892"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/MockMethodAdvice.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockitousage/bugs/ThreadLocalTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85JkMLR2gAoMTk3YjY1NWExMWE2YjEzN2NkYzhhYTliYzAwMzMzM2E2ZTBjYzMyNA",
                "url": "https://github.com/mockito/mockito/pull/2908/commits/197b655a11a6b137cdc8aa9bc003333a6e0cc324"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2905,
                "url": "https://github.com/mockito/mockito/issues/2905",
                "title": "StackOverflow while mocking a ThreadLocal on Mockito 5.1.1",
                "bodyHTML": "<p dir=\"auto\">Hello Folks,</p>\n<p dir=\"auto\">I'm upgrading Mockito in a Java application from 4.9.0 to 5.1.1. We are on JDK 11 (I personally use Temurin 11.0.13).</p>\n<p dir=\"auto\">So, I've a test failing due to a StackOverflow</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.StackOverflowError\n\tat org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.get(MockMethodDispatcher.java:34)\n\tat java.base/java.lang.ThreadLocal.get(ThreadLocal.java:162)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SelfCallInfo.checkSelfCall(MockMethodAdvice.java:368)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodAdvice.isMocked(MockMethodAdvice.java:171)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.StackOverflowError\n\tat org.mockito.internal.creation.bytebuddy.inject.MockMethodDispatcher.get(MockMethodDispatcher.java:34)\n\tat java.base/java.lang.ThreadLocal.get(ThreadLocal.java:162)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodAdvice$SelfCallInfo.checkSelfCall(MockMethodAdvice.java:368)\n\tat org.mockito.internal.creation.bytebuddy.MockMethodAdvice.isMocked(MockMethodAdvice.java:171)\n</code></pre></div>\n<p dir=\"auto\">This happens when we mock a class that extends <code class=\"notranslate\">ThreadLocal</code>. But I verified that it happens also by mocking <code class=\"notranslate\">ThreadLocal</code> as well.</p>\n<p dir=\"auto\">Sounds like a bug, but you are the experts here.</p>\n<p dir=\"auto\">Best regards,<br>\nRoberto</p>",
                "resourcePath": "/mockito/mockito/issues/2905",
                "createdAt": "2023-02-08T08:28:10Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Feature 2921 generic types",
        "url": "https://github.com/mockito/mockito/pull/2923",
        "resourcePath": "/mockito/mockito/pull/2923",
        "createdAt": "2023-02-22T15:51:14Z",
        "number": 2923,
        "mergeCommit": {
          "oid": "74c811a60a5bf6b9ecb10d79ea95dba860b5cbf8",
          "message": "Make InjectMocks aware of generic types (#2923)\n\nFixes #2921\r\n\r\nCo-authored-by: J\u00f6rg von Frantzius <joerg.frantzius@aperto.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/74c811a60a5bf6b9ecb10d79ea95dba860b5cbf8",
          "parents": {
            "nodes": [
              {
                "oid": "fc136e4373eb0b952c08a18916d66ecc10db1ec3",
                "message": "Explicitly use UTF-8 in IOUtils (#2935)\n\nFixes #2933\r\n\r\nCo-authored-by: Tobias Baum <tobias.baum@set.de>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/SpyAnnotationEngine.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/injection/PropertyAndSetterInjection.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/injection/filter/MockCandidateFilter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/injection/filter/NameBasedCandidateFilter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/injection/filter/TerminalMockCandidateFilter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/MockSettingsImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/settings/CreationSettings.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/mock/MockCreationSettings.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/GenericTypeMockTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85KhucP2gAoMTYyZTA2MTE1ODBhZTQ2YWIxYjE4NTdlYjEzYTY1M2MxMDhmNjkyYg",
                "url": "https://github.com/mockito/mockito/pull/2923/commits/162e0611580ae46ab1b1857eb13a653c108f692b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2921,
                "url": "https://github.com/mockito/mockito/issues/2921",
                "title": "Use generic type information in TypeBasedCandidateFilter to circumvent type erasure",
                "bodyHTML": "<p dir=\"auto\">Hi,<br>\nwhen using <code class=\"notranslate\">@InjectMocks</code> in combination with multiple <code class=\"notranslate\">@Mock</code> fields that have the same generic type (after type erasure), this fails unless the field names in injectee and test class are equal.</p>\n<p dir=\"auto\">I stumbled over this when I added a second <code class=\"notranslate\">Provider&lt;T&gt;</code> field to both test and injectee class, and I guess most other people doing the same will also fail here as miserably as I did (also because googling for <code class=\"notranslate\">@InjectMock</code> doesn't show the relevant <a href=\"https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/InjectMocks.html\" rel=\"nofollow\">InjectMocks documentation</a> in the first result page ...)</p>\n<p dir=\"auto\">E.g. this test will fail because I named the test class <code class=\"notranslate\">@Mock</code> fields with the suffix <code class=\"notranslate\">mock</code>. When deleting that name suffix, the test succeeds.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import static org.junit.jupiter.api.Assertions.assertNotNull;\n\nimport javax.inject.Provider;\n\nimport org.junit.jupiter.api.Test;\nimport org.junit.jupiter.api.extension.ExtendWith;\nimport org.mockito.InjectMocks;\nimport org.mockito.Mock;\nimport org.mockito.junit.jupiter.MockitoExtension;\n\n@ExtendWith(MockitoExtension.class)\npublic class InjectMockTest {\n    \n    public static class UnderTest {\n        Provider&lt;String&gt; stringProvider;\n        Provider&lt;Integer&gt; intProvider;\n    }\n\n    @Mock\n    private Provider&lt;String&gt; stringProviderMock;\n\n    @Mock\n    private Provider&lt;Integer&gt; intProviderMock;\n\n    @InjectMocks\n    private UnderTest underTest;\n\n    @Test\n    public void testInjectMock() {\n        assertNotNull(underTest.stringProvider);\n        assertNotNull(underTest.intProvider);\n    }\n\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">Assertions</span>.<span class=\"pl-s1\">assertNotNull</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">javax</span>.<span class=\"pl-s1\">inject</span>.<span class=\"pl-s1\">Provider</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">extension</span>.<span class=\"pl-s1\">ExtendWith</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">InjectMocks</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">Mock</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">mockito</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">MockitoExtension</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">ExtendWith</span>(<span class=\"pl-smi\">MockitoExtension</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">InjectMockTest</span> {\n    \n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">UnderTest</span> {\n        <span class=\"pl-smi\">Provider</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">stringProvider</span>;\n        <span class=\"pl-smi\">Provider</span>&lt;<span class=\"pl-smi\">Integer</span>&gt; <span class=\"pl-s1\">intProvider</span>;\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">Provider</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">stringProviderMock</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">Provider</span>&lt;<span class=\"pl-smi\">Integer</span>&gt; <span class=\"pl-s1\">intProviderMock</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">InjectMocks</span>\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">UnderTest</span> <span class=\"pl-s1\">underTest</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">testInjectMock</span>() {\n        <span class=\"pl-en\">assertNotNull</span>(<span class=\"pl-s1\">underTest</span>.<span class=\"pl-s1\">stringProvider</span>);\n        <span class=\"pl-en\">assertNotNull</span>(<span class=\"pl-s1\">underTest</span>.<span class=\"pl-s1\">intProvider</span>);\n    }\n\n}</pre></div>\n<p dir=\"auto\">I saw in the debugger that in <code class=\"notranslate\">TypeBasedCandidateFilter.filterCandidate()</code> , <code class=\"notranslate\">candidateFieldToBeInjected.getGenericType().getTypeName()</code> yields e.g. <code class=\"notranslate\">\"javax.inject.Provider&lt;java.lang.Integer&gt;\"</code>. So if Mockito would maintain the <code class=\"notranslate\">@Mock</code> field's <code class=\"notranslate\">java.lang.reflect.Field</code> along with the mock object, the generic type names could be compared.</p>\n<p dir=\"auto\">This would effectively solve the problem of type erasure for this usecase, which I'd guess is quite common ...</p>",
                "resourcePath": "/mockito/mockito/issues/2921",
                "createdAt": "2023-02-21T17:13:28Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "#2934 throw exception on multiple matches by type if cannot be reduce\u2026",
        "url": "https://github.com/mockito/mockito/pull/2942",
        "resourcePath": "/mockito/mockito/pull/2942",
        "createdAt": "2023-03-14T19:52:17Z",
        "number": 2942,
        "mergeCommit": {
          "oid": "393f0a16982ef3060d5db164bf51bfba8ce09a48",
          "message": "Fail when InjectMocks has multiple candidate mocks to insert into field (#2942)\n\nFixes #2934\r\n\r\nCo-authored-by: J\u00f6rg von Frantzius <joerg.frantzius@aperto.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/393f0a16982ef3060d5db164bf51bfba8ce09a48",
          "parents": {
            "nodes": [
              {
                "oid": "b6861e3e10cf437ccd3ef5a8e3634e3e8cd9eef5",
                "message": "Bump org.eclipse.platform:org.eclipse.osgi from 3.18.200 to 3.18.300 (#2941)\n\nBumps [org.eclipse.platform:org.eclipse.osgi](https://github.com/eclipse-equinox/equinox) from 3.18.200 to 3.18.300.\r\n- [Release notes](https://github.com/eclipse-equinox/equinox/releases)\r\n- [Commits](https://github.com/eclipse-equinox/equinox/commits)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.eclipse.platform:org.eclipse.osgi\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/exceptions/Reporter.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/GenericTypeMockMultipleMatchesTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/GenericTypeMockTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85MCVSj2gAoYTI4OTUzYWIwYzc2MzQ3Y2E4NDUzZWQzMjRiZjc2MDQ1YjYyNmU4MQ",
                "url": "https://github.com/mockito/mockito/pull/2942/commits/a28953ab0c76347ca8453ed324bf76045b626e81"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2934,
                "url": "https://github.com/mockito/mockito/issues/2934",
                "title": "Feature suggestion: TerminalMockCandidateFilter should report error when more than one candidate left",
                "bodyHTML": "<p dir=\"auto\">Hi,<br>\nwhen stumbling over <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1593834998\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2921\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mockito/mockito/issues/2921/hovercard\" href=\"https://github.com/mockito/mockito/issues/2921\">#2921</a> , I realized that Mockito will silently fail to inject <code class=\"notranslate\">@Mock</code> objects when there is more than one candidate. Usually, DI containers will throw an exception in that case, otherwise the user first has to understand what went wrong (no injection happened), and then start wondering <em>why</em> it failed (e.g. multiple <code class=\"notranslate\">@Mock</code> fields with same type, and user will have to know which exactly).</p>\n<p dir=\"auto\">My suggestion would be to have a new error similar to <code class=\"notranslate\">Reporter.cannotInjectDependency</code> that <code class=\"notranslate\">TerminalMockCandidateFilter</code> then should call if <code class=\"notranslate\">mocks.size() &gt; 1</code></p>",
                "resourcePath": "/mockito/mockito/issues/2934",
                "createdAt": "2023-03-09T10:45:22Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #2877: removed mockito-inline as subproject and actual subproject",
        "url": "https://github.com/mockito/mockito/pull/2945",
        "resourcePath": "/mockito/mockito/pull/2945",
        "createdAt": "2023-03-16T14:54:35Z",
        "number": 2945,
        "mergeCommit": {
          "oid": "568c82906f9f27f1c767729d99e6c08ebbcca571",
          "message": "Stop publishing `mockito-inline` (#2945)\n\nThe tests will remain in the new `inlineTest` subproject.\r\n\r\nFixes #2877",
          "commitUrl": "https://github.com/mockito/mockito/commit/568c82906f9f27f1c767729d99e6c08ebbcca571",
          "parents": {
            "nodes": [
              {
                "oid": "393f0a16982ef3060d5db164bf51bfba8ce09a48",
                "message": "Fail when InjectMocks has multiple candidate mocks to insert into field (#2942)\n\nFixes #2934\r\n\r\nCo-authored-by: J\u00f6rg von Frantzius <joerg.frantzius@aperto.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "RENAMED",
                "path": "subprojects/inlineTest/src/test/java/org/mockitoinline/StaticMockTest.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "subprojects/inlineTest/src/test/java/org/mockitoinline/StaticRuleTest.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "subprojects/inlineTest/src/test/java/org/mockitoinline/StaticRunnerTest.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "subprojects/inlineTest/src/test/java/org/mockitoinline/StressTest.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "subprojects/inlineTest/src/test/java/org/mockitoinline/StubbingLocationTest.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "subprojects/inlineTest/src/test/java/org/mockitoinline/SubconstructorMockTest.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "subprojects/inlineTest/src/test/java/org/mockitoinline/SuperCallTest.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "subprojects/inlineTest/src/test/java/org/mockitoinline/bugs/CyclicMockMethodArgumentMemoryLeakTest.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "subprojects/inlineTest/src/test/java/org/mockitoinline/bugs/OngoingStubShiftTest.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "subprojects/inlineTest/src/test/java/org/mockitoinline/bugs/SelfSpyReferenceMemoryLeakTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85MOIna2gAoYzJlNzgwMGVkZWQ5NzVkMjAwNDIzM2I0MzAwY2FmNmIzZWM0ZDBmNQ",
                "url": "https://github.com/mockito/mockito/pull/2945/commits/c2e7800eded975d2004233b4300caf6b3ec4d0f5"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2877,
                "url": "https://github.com/mockito/mockito/issues/2877",
                "title": "Mockito-inline dependency after upgrade 5.0.0",
                "bodyHTML": "<p dir=\"auto\">After reading that mockito switched to mockito-inline by default (with 5.0.0) i expected either mockito-core to have a mockito-inline dependency, or mockito-inline has been merged into mockito-core.</p>\n<p dir=\"auto\">Interestingly neither of this is the case (since mockito-inline has a 5.0.0 release and no mockito-inline transitive dependency is found in <a href=\"https://mvnrepository.com/artifact/org.mockito/mockito-core/5.0.0\" rel=\"nofollow\">https://mvnrepository.com/artifact/org.mockito/mockito-core/5.0.0</a> )</p>\n<p dir=\"auto\">The concrete question is, how should we go about the current explicit dependency on mockito-inline. Should it be removed with 5.0.0 or should it stay?</p>",
                "resourcePath": "/mockito/mockito/issues/2877",
                "createdAt": "2023-01-18T09:19:39Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add `ArgumentMatchers#assertArg` method.",
        "url": "https://github.com/mockito/mockito/pull/2949",
        "resourcePath": "/mockito/mockito/pull/2949",
        "createdAt": "2023-03-25T19:56:49Z",
        "number": 2949,
        "mergeCommit": {
          "oid": "6ffd23e1bf3866dc39ab13c86ebe1f667e07398d",
          "message": "Add `ArgumentMatchers#assertArg` method (#2949)\n\nFixes #2285",
          "commitUrl": "https://github.com/mockito/mockito/commit/6ffd23e1bf3866dc39ab13c86ebe1f667e07398d",
          "parents": {
            "nodes": [
              {
                "oid": "203132db493cda6c8269fb14812b1b81e6f042a9",
                "message": "Add  `withoutAnnotations` parameter to `@Mock` (#2965)\n\nCo-authored-by: Wesley Tsai <wtsai@netflix.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/ArgumentMatchers.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/Mockito.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/matchers/MatchersTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85M5dPU2gAoZjlhZWVmZWY1ZTFjNjgyZjI3ZmEwYzM3ODUxM2YyMGM3MjQ5YzJmZg",
                "url": "https://github.com/mockito/mockito/pull/2949/commits/f9aeefef5e1c682f27fa0c378513f20c7249c2ff"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2285,
                "url": "https://github.com/mockito/mockito/issues/2285",
                "title": "Assertions on parameters during verification",
                "bodyHTML": "<h3 dir=\"auto\">Suggestion</h3>\n<p dir=\"auto\">I would like to suggest adding an API allowing for assertions during parameter verification without argument captors in simple cases.</p>\n<h3 dir=\"auto\">Motivation</h3>\n<p dir=\"auto\">In my projects I generally use Mockito and AssertJ for testing. For non trivial method parameters, I often encounter the following ArgumentCaptor pattern:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"ClassUnderTest classUnderTest = new ClassUnderTest(otherServiceMock);\n\nclassUnderTest.method();\n\nArgumentCaptor&lt;Param&gt; paramArgumentCaptor = ArgumentCaptor.forClass(Param.class);\nverify(otherServiceMock).doStuff(paramArgumentCaptor.capture());\nParam paramFromCaptor = paramArgumentCaptor.getValue();\nassertThat(paramFromCaptor.getField1()).isEqualTo(&quot;value1&quot;);\nassertThat(paramFromCaptor.getField2()).isEqualTo(&quot;value2&quot;);\"><pre class=\"notranslate\"><span class=\"pl-smi\">ClassUnderTest</span> <span class=\"pl-s1\">classUnderTest</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ClassUnderTest</span>(<span class=\"pl-s1\">otherServiceMock</span>);\n\n<span class=\"pl-s1\">classUnderTest</span>.<span class=\"pl-en\">method</span>();\n\n<span class=\"pl-smi\">ArgumentCaptor</span>&lt;<span class=\"pl-smi\">Param</span>&gt; <span class=\"pl-s1\">paramArgumentCaptor</span> = <span class=\"pl-smi\">ArgumentCaptor</span>.<span class=\"pl-en\">forClass</span>(<span class=\"pl-smi\">Param</span>.<span class=\"pl-k\">class</span>);\n<span class=\"pl-en\">verify</span>(<span class=\"pl-s1\">otherServiceMock</span>).<span class=\"pl-en\">doStuff</span>(<span class=\"pl-s1\">paramArgumentCaptor</span>.<span class=\"pl-en\">capture</span>());\n<span class=\"pl-smi\">Param</span> <span class=\"pl-s1\">paramFromCaptor</span> = <span class=\"pl-s1\">paramArgumentCaptor</span>.<span class=\"pl-en\">getValue</span>();\n<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">paramFromCaptor</span>.<span class=\"pl-en\">getField1</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"value1\"</span>);\n<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">paramFromCaptor</span>.<span class=\"pl-en\">getField2</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"value2\"</span>);</pre></div>\n<p dir=\"auto\">This is fine, but a little bit verbose.</p>\n<p dir=\"auto\">An alternative pattern I find myself using lately is using the <code class=\"notranslate\">argThat</code> argument matcher to eliminate the captor, resulting in the verify statement looking something like this:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"verify(otherServiceMock).doStuff(argThat(param -&gt; {\n    assertThat(param.getField1()).isEqualTo(&quot;value1&quot;);\n    assertThat(param.getField2()).isEqualTo(&quot;value2&quot;);\n    return true;\n}));\"><pre class=\"notranslate\"><span class=\"pl-en\">verify</span>(<span class=\"pl-s1\">otherServiceMock</span>).<span class=\"pl-en\">doStuff</span>(<span class=\"pl-en\">argThat</span>(<span class=\"pl-s1\">param</span> -&gt; {\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">param</span>.<span class=\"pl-en\">getField1</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"value1\"</span>);\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">param</span>.<span class=\"pl-en\">getField2</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"value2\"</span>);\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span>;\n}));</pre></div>\n<p dir=\"auto\">In my opinion, at least in simple cases where only assertions on a single parameter are desired, this looks a little cleaner. Just the return statement is a bit pointless.</p>\n<p dir=\"auto\">My suggestion is adding an API that would allow eliminating the return statement in this pattern, for example:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"verify(otherServiceMock).doStuff(assertArg(param -&gt; {\n    assertThat(param.getField1()).isEqualTo(&quot;value1&quot;);\n    assertThat(param.getField2()).isEqualTo(&quot;value2&quot;);\n}));\"><pre class=\"notranslate\"><span class=\"pl-en\">verify</span>(<span class=\"pl-s1\">otherServiceMock</span>).<span class=\"pl-en\">doStuff</span>(<span class=\"pl-en\">assertArg</span>(<span class=\"pl-s1\">param</span> -&gt; {\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">param</span>.<span class=\"pl-en\">getField1</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"value1\"</span>);\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">param</span>.<span class=\"pl-en\">getField2</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"value2\"</span>);\n}));</pre></div>\n<p dir=\"auto\">Or is there already an API that would allow a similar pattern that I've missed?</p>",
                "resourcePath": "/mockito/mockito/issues/2285",
                "createdAt": "2021-05-06T16:15:22Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Assertion matcher",
        "url": "https://github.com/mockito/mockito/pull/2961",
        "resourcePath": "/mockito/mockito/pull/2961",
        "createdAt": "2023-04-02T20:39:19Z",
        "number": 2961,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "ArgumentMatchersTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/ArgumentMatchers.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85NcF2T2gAoMGFiZjQ5MWQxOTg1MDQzOWYwZTg2MGI0ZDcyNWYxYTU1NmYxZGI3YQ",
                "url": "https://github.com/mockito/mockito/pull/2961/commits/0abf491d19850439f0e860b4d725f1a556f1db7a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2960,
                "url": "https://github.com/mockito/mockito/issues/2960",
                "title": "Assertion matcher",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">ArgumentMatcher</code> returns true/false and it's enough for stubs.<br>\nHowever, for mocks false is not enough. When expectation is not meet, it is important why not meet. It means <em>rich-failure</em> is needed, not just <code class=\"notranslate\">false</code></p>\n<p dir=\"auto\">Actually <em>rich-failure</em> can be achieved with <code class=\"notranslate\">org.assertj.core.matcher.AssertionMatcher</code>.<br>\nIt works but it's not handy: every assertion needs a class, when lambda is enough</p>",
                "resourcePath": "/mockito/mockito/issues/2960",
                "createdAt": "2023-04-02T20:29:49Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix ClassCastException",
        "url": "https://github.com/mockito/mockito/pull/2962",
        "resourcePath": "/mockito/mockito/pull/2962",
        "createdAt": "2023-04-03T15:57:45Z",
        "number": 2962,
        "mergeCommit": {
          "oid": "84a5eee1ce5bb0171532eb5da3d21ba9d1741bf9",
          "message": "Fix ClassCastException regression with parameterized types with InjectMocks (#2962)\n\nFixes #2958\r\n\r\nCo-authored-by: J\u00f6rg von Frantzius <joerg.frantzius@aperto.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/84a5eee1ce5bb0171532eb5da3d21ba9d1741bf9",
          "parents": {
            "nodes": [
              {
                "oid": "d65bba7e6a40a3bbd51dd7272dc5bc8bb5c2199f",
                "message": "Bump versions.bytebuddy from 1.14.3 to 1.14.4 (#2966)\n\nBumps `versions.bytebuddy` from 1.14.3 to 1.14.4.\r\n\r\nUpdates `net.bytebuddy:byte-buddy` from 1.14.3 to 1.14.4\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.14.3...byte-buddy-1.14.4)\r\n\r\nUpdates `net.bytebuddy:byte-buddy-agent` from 1.14.3 to 1.14.4\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.14.3...byte-buddy-1.14.4)\r\n\r\nUpdates `net.bytebuddy:byte-buddy-android` from 1.14.3 to 1.14.4\r\n- [Release notes](https://github.com/raphw/byte-buddy/releases)\r\n- [Changelog](https://github.com/raphw/byte-buddy/blob/master/release-notes.md)\r\n- [Commits](https://github.com/raphw/byte-buddy/compare/byte-buddy-1.14.3...byte-buddy-1.14.4)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: net.bytebuddy:byte-buddy\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-agent\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: net.bytebuddy:byte-buddy-android\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/GenericTypeMockTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85NgTFQ2gAoZjZlZWNmMTAxZmU2NDcxNmNiNzg2NzY3MWJjMDNiNmU1ZWZmZDA1NQ",
                "url": "https://github.com/mockito/mockito/pull/2962/commits/f6eecf101fe64716cb7867671bc03b6e5effd055"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2958,
                "url": "https://github.com/mockito/mockito/issues/2958",
                "title": "ClassCastException when combining InjectMocks with generified Mock field",
                "bodyHTML": "<p dir=\"auto\">When calling <code class=\"notranslate\">MockitoAnnotations.openMocks(this);</code> on a class that contains an <code class=\"notranslate\">@InjectMocks</code> target, a ClassCastException occurs when the target has a field that is generified and provided by one of the mocks in said class.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class OpenMocksTest\n{\n\t@InjectMocks\n\tprotected ConcreteJob job;\n\n\t@Mock\n\tJobInstance&lt;ConcreteJob&gt; instance;\n\n\t@BeforeEach\n\tpublic void initMocks()\n\t{\n\t\topenMocks(this);\n\t}\n\n\t@Test\n\tpublic void testMockExists()\n\t{\n\t\tassertNotNull(job);\n\t}\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">OpenMocksTest</span>\n{\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">InjectMocks</span>\n\t<span class=\"pl-k\">protected</span> <span class=\"pl-smi\">ConcreteJob</span> <span class=\"pl-s1\">job</span>;\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n\t<span class=\"pl-smi\">JobInstance</span>&lt;<span class=\"pl-smi\">ConcreteJob</span>&gt; <span class=\"pl-s1\">instance</span>;\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">BeforeEach</span>\n\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">initMocks</span>()\n\t{\n\t\t<span class=\"pl-en\">openMocks</span>(<span class=\"pl-smi\">this</span>);\n\t}\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">testMockExists</span>()\n\t{\n\t\t<span class=\"pl-en\">assertNotNull</span>(<span class=\"pl-s1\">job</span>);\n\t}\n}</pre></div>\n<p dir=\"auto\">I've attached a Maven project which demonstrates this flaw. Downgrading the Mockito version to <code class=\"notranslate\">5.1.1</code> fixes the issue.</p>\n<p dir=\"auto\"><a href=\"https://github.com/mockito/mockito/files/11123059/mockito-5.2.0-bug.zip\">mockito-5.2.0-bug.zip</a></p>",
                "resourcePath": "/mockito/mockito/issues/2958",
                "createdAt": "2023-03-31T14:59:11Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Provide a variant of assertArg that works well with checked exceptions ",
        "url": "https://github.com/mockito/mockito/pull/2991",
        "resourcePath": "/mockito/mockito/pull/2991",
        "createdAt": "2023-04-26T18:46:35Z",
        "number": 2991,
        "mergeCommit": {
          "oid": "6e0c22890a5da72f4a919ede3fb2ae25b9eeab8e",
          "message": "Add `assertArg` overload for consumers throwing checked exceptions  (#2991)",
          "commitUrl": "https://github.com/mockito/mockito/commit/6e0c22890a5da72f4a919ede3fb2ae25b9eeab8e",
          "parents": {
            "nodes": [
              {
                "oid": "d6e4f07b1fa39c9344d37ffcfc8a3b9bd3741baf",
                "message": "Bump com.google.googlejavaformat:google-java-format (#2996)\n\nBumps [com.google.googlejavaformat:google-java-format](https://github.com/google/google-java-format) from 1.16.0 to 1.17.0.\r\n- [Release notes](https://github.com/google/google-java-format/releases)\r\n- [Commits](https://github.com/google/google-java-format/compare/v1.16.0...v1.17.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.google.googlejavaformat:google-java-format\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/ArgumentMatchers.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/ThrowingConsumer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/matchers/MatchersTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85POjJ72gAoOTA2YmEyMjQxYWFjMGRmMjFjZjJmNTBlYTcyOTg2YTM1YjYzYzA4Yw",
                "url": "https://github.com/mockito/mockito/pull/2991/commits/906ba2241aac0df21cf2f50ea72986a35b63c08c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2982,
                "url": "https://github.com/mockito/mockito/issues/2982",
                "title": "Provide a variant of assertArg that works well with checked exceptions",
                "bodyHTML": "<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1640641494\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2949\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2949/hovercard\" href=\"https://github.com/mockito/mockito/pull/2949\">#2949</a> is a great new feature, thank you. While trying to make use of it in Spring Boot, I came across a situation that would benefit from the consumer of the argument being able to throw checked exceptions:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"then(this.client).should().executeOpen(any(HttpHost.class), assertArg((request) -&gt; {\n\tassertThat(request).isInstanceOf(HttpPost.class);\n\tassertThat(request.getUri()).isEqualTo(this.uri);\n\tassertThat(request.getFirstHeader(HttpHeaders.CONTENT_TYPE)).isNull();\n\tassertThat(request.getFirstHeader(HttpClientTransport.REGISTRY_AUTH_HEADER)).isNull();\n\tassertThat(response.getContent()).isSameAs(this.content);\n}), isNull());\"><pre class=\"notranslate\"><span class=\"pl-en\">then</span>(<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">client</span>).<span class=\"pl-en\">should</span>().<span class=\"pl-en\">executeOpen</span>(<span class=\"pl-en\">any</span>(<span class=\"pl-smi\">HttpHost</span>.<span class=\"pl-k\">class</span>), <span class=\"pl-en\">assertArg</span>((<span class=\"pl-s1\">request</span>) -&gt; {\n\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">request</span>).<span class=\"pl-en\">isInstanceOf</span>(<span class=\"pl-smi\">HttpPost</span>.<span class=\"pl-k\">class</span>);\n\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">request</span>.<span class=\"pl-en\">getUri</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">uri</span>);\n\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">request</span>.<span class=\"pl-en\">getFirstHeader</span>(<span class=\"pl-smi\">HttpHeaders</span>.<span class=\"pl-c1\">CONTENT_TYPE</span>)).<span class=\"pl-en\">isNull</span>();\n\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">request</span>.<span class=\"pl-en\">getFirstHeader</span>(<span class=\"pl-smi\">HttpClientTransport</span>.<span class=\"pl-c1\">REGISTRY_AUTH_HEADER</span>)).<span class=\"pl-en\">isNull</span>();\n\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">response</span>.<span class=\"pl-en\">getContent</span>()).<span class=\"pl-en\">isSameAs</span>(<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">content</span>);\n}), <span class=\"pl-en\">isNull</span>());</pre></div>\n<p dir=\"auto\">In this example, <code class=\"notranslate\">request</code> is an <code class=\"notranslate\">org.apache.hc.client5.http.classic.methods.HttpPost</code> and <code class=\"notranslate\">getUri()</code> and <code class=\"notranslate\">getContent()</code> throw <code class=\"notranslate\">URISyntaxException</code> and <code class=\"notranslate\">IOException</code> respectively. As a result, the above snippet does not compile.</p>\n<p dir=\"auto\">I can work around this by using AssertJ's <code class=\"notranslate\">ThrowingConsumer</code>:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"then(this.client).should().executeOpen(any(HttpHost.class), assertArg((ThrowingConsumer&lt;HttpPost&gt;) (request) -&gt; {\n\tassertThat(request).isInstanceOf(HttpPost.class);\n\tassertThat(request.getUri()).isEqualTo(this.uri);\n\tassertThat(request.getFirstHeader(HttpHeaders.CONTENT_TYPE)).isNull();\n\tassertThat(request.getFirstHeader(HttpClientTransport.REGISTRY_AUTH_HEADER)).isNull();\n\tassertThat(response.getContent()).isSameAs(this.content);\n}), isNull());\"><pre class=\"notranslate\"><span class=\"pl-en\">then</span>(<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">client</span>).<span class=\"pl-en\">should</span>().<span class=\"pl-en\">executeOpen</span>(<span class=\"pl-en\">any</span>(<span class=\"pl-smi\">HttpHost</span>.<span class=\"pl-k\">class</span>), <span class=\"pl-en\">assertArg</span>((<span class=\"pl-smi\">ThrowingConsumer</span>&lt;<span class=\"pl-smi\">HttpPost</span>&gt;) (<span class=\"pl-s1\">request</span>) -&gt; {\n\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">request</span>).<span class=\"pl-en\">isInstanceOf</span>(<span class=\"pl-smi\">HttpPost</span>.<span class=\"pl-k\">class</span>);\n\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">request</span>.<span class=\"pl-en\">getUri</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">uri</span>);\n\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">request</span>.<span class=\"pl-en\">getFirstHeader</span>(<span class=\"pl-smi\">HttpHeaders</span>.<span class=\"pl-c1\">CONTENT_TYPE</span>)).<span class=\"pl-en\">isNull</span>();\n\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">request</span>.<span class=\"pl-en\">getFirstHeader</span>(<span class=\"pl-smi\">HttpClientTransport</span>.<span class=\"pl-c1\">REGISTRY_AUTH_HEADER</span>)).<span class=\"pl-en\">isNull</span>();\n\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">response</span>.<span class=\"pl-en\">getContent</span>()).<span class=\"pl-en\">isSameAs</span>(<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">content</span>);\n}), <span class=\"pl-en\">isNull</span>());</pre></div>\n<p dir=\"auto\">As you can see, it requires a cast which is ever so slightly inelegant. It also won't help a Mockito user who doesn't use AssertJ. Would you consider adding a <code class=\"notranslate\">ThrowingConsumer</code> interface to Mockito along with a variant of <code class=\"notranslate\">assertArg</code> that takes a <code class=\"notranslate\">ThrowingConsumer</code> rather than a <code class=\"notranslate\">Consumer</code>?</p>",
                "resourcePath": "/mockito/mockito/issues/2982",
                "createdAt": "2023-04-19T20:10:07Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add varargs changes to `ArgumentMatchers#any()` JavaDoc\r",
        "url": "https://github.com/mockito/mockito/pull/3003",
        "resourcePath": "/mockito/mockito/pull/3003",
        "createdAt": "2023-05-07T09:40:29Z",
        "number": 3003,
        "mergeCommit": {
          "oid": "e90aa5eba206d4906d10ae09920d1eb6bd198d70",
          "message": "Add varargs changes to `ArgumentMatchers#any()` JavaDoc (#3003)\n\nFixes #2998",
          "commitUrl": "https://github.com/mockito/mockito/commit/e90aa5eba206d4906d10ae09920d1eb6bd198d70",
          "parents": {
            "nodes": [
              {
                "oid": "7d53c578b4eee0432496a8e801a40f23704be4a1",
                "message": "Fix `@Mock(serializable = true)` for parameterized types (#3007)\n\nFixes #2979"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/ArgumentMatchers.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85P7wJg2gAoZTM5MWVkYTAxYTAwZWZhMGZhYjQ2MGY1YTU4N2UwNjBiOWE1YzBlOA",
                "url": "https://github.com/mockito/mockito/pull/3003/commits/e391eda01a00efa0fab460f5a587e060b9a5c0e8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2998,
                "url": "https://github.com/mockito/mockito/issues/2998",
                "title": "Mockito 5 any() does not match a vararg int[] argument anymore. I need to use any(int[].class) to get the ArgumentMatcher to work",
                "bodyHTML": "<p dir=\"auto\">Mockito 5.2.0/5.3.1 any() ArgumentMatcher does not match a vararg int[] argument anymore.<br>\nI need to use any(int[].class) to get the ArgumentMatcher to work.</p>\n<p dir=\"auto\">This mocking does NOT WORK:<br>\nwhen(myMock.myMethod(eq(myOtherMock), any()).thenReturn(myResultMap);</p>\n<p dir=\"auto\">This mocking DOES WORK:<br>\nwhen(myMock.myMethod(eq(myOtherMock), any(int[].class))).thenReturn(myResultMap);</p>",
                "resourcePath": "/mockito/mockito/issues/2998",
                "createdAt": "2023-05-03T19:35:58Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix `@Mock(serializable = true)` for parameterized types.",
        "url": "https://github.com/mockito/mockito/pull/3007",
        "resourcePath": "/mockito/mockito/pull/3007",
        "createdAt": "2023-05-08T20:45:30Z",
        "number": 3007,
        "mergeCommit": {
          "oid": "7d53c578b4eee0432496a8e801a40f23704be4a1",
          "message": "Fix `@Mock(serializable = true)` for parameterized types (#3007)\n\nFixes #2979",
          "commitUrl": "https://github.com/mockito/mockito/commit/7d53c578b4eee0432496a8e801a40f23704be4a1",
          "parents": {
            "nodes": [
              {
                "oid": "6e0c22890a5da72f4a919ede3fb2ae25b9eeab8e",
                "message": "Add `assertArg` overload for consumers throwing checked exceptions  (#2991)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/settings/CreationSettings.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/basicapi/MocksSerializationForAnnotationTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85QCQZD2gAoMDgwNjc0ZjVlMDJiZWRjNjI2MzU1ZmQwZTY3ZGFiMzk1ZTA1NDA4MQ",
                "url": "https://github.com/mockito/mockito/pull/3007/commits/080674f5e02bedc626355fd0e67dab395e054081"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2979,
                "url": "https://github.com/mockito/mockito/issues/2979",
                "title": "`@Mock(serializable = true)` no longer works with parameterized types",
                "bodyHTML": "<p dir=\"auto\">This appears to be a result of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1595352392\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2923\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2923/hovercard\" href=\"https://github.com/mockito/mockito/pull/2923\">#2923</a>, though I've gotten myself a little confused trying to run the Mockito tests, so I haven't 100% confirmed that.</p>\n<p dir=\"auto\">As a demonstration, I edited <code class=\"notranslate\">MocksSerializationForAnnotationTest.java</code> to contain:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Mock(serializable = true)\nSupplier&lt;Object&gt; parameterizedSupplier;\n\n@Test\npublic void should_allow_mock_of_parameterized_type_to_be_serializable() throws Exception {\n  serializeAndBack(parameterizedSupplier);\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>(<span class=\"pl-s1\">serializable</span> = <span class=\"pl-c1\">true</span>)\n<span class=\"pl-smi\">Supplier</span>&lt;<span class=\"pl-smi\">Object</span>&gt; <span class=\"pl-s1\">parameterizedSupplier</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">should_allow_mock_of_parameterized_type_to_be_serializable</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">Exception</span> {\n  <span class=\"pl-en\">serializeAndBack</span>(<span class=\"pl-s1\">parameterizedSupplier</span>);\n}</pre></div>\n<p dir=\"auto\">That fails with:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockitousage.basicapi.MocksSerializationForAnnotationTest &gt; should_allow_mock_of_parameterized_type_to_be_serializable FAILED\n    java.io.NotSerializableException: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl\n        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n        at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n        at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n        at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n        at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n        at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n        at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n        at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n        at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n        at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n        at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n        at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n        at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n        at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n        at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n        at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n        at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n        at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n        at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n        at java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n        at org.mockitoutil.SimpleSerializationUtil.serializeMock(SimpleSerializationUtil.java:40)\n        at org.mockitoutil.SimpleSerializationUtil.serializeAndBack(SimpleSerializationUtil.java:21)\n        at org.mockitousage.basicapi.MocksSerializationForAnnotationTest.should_allow_mock_of_parameterized_type_to_be_serializable(MocksSerializationForAnnotationTest.java:77)\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockitousage.basicapi.MocksSerializationForAnnotationTest &gt; should_allow_mock_of_parameterized_type_to_be_serializable FAILED\n    java.io.NotSerializableException: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl\n        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1185)\n        at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n        at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n        at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n        at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n        at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n        at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n        at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n        at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n        at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n        at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n        at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n        at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n        at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n        at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n        at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n        at java.base/java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1553)\n        at java.base/java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1510)\n        at java.base/java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1433)\n        at java.base/java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1179)\n        at java.base/java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:349)\n        at org.mockitoutil.SimpleSerializationUtil.serializeMock(SimpleSerializationUtil.java:40)\n        at org.mockitoutil.SimpleSerializationUtil.serializeAndBack(SimpleSerializationUtil.java:21)\n        at org.mockitousage.basicapi.MocksSerializationForAnnotationTest.should_allow_mock_of_parameterized_type_to_be_serializable(MocksSerializationForAnnotationTest.java:77)\n</code></pre></div>\n<p dir=\"auto\">I think I'm seeing it fixed if I change <code class=\"notranslate\">CreationSettings.genericTypeToMock</code> to be <code class=\"notranslate\">transient</code>. That <em>might</em> be OK: The motivation for starting to use <code class=\"notranslate\">genericTypeToMock</code> seems to have been for disambiguating between fields for <code class=\"notranslate\">@InjectMocks</code>, so I wouldn't expect it to be needed after deserialization. But maybe <code class=\"notranslate\">genericTypeToMock</code> is used in more advanced ways that <em>would</em> matter after deserialization (say, to figure out what type a <code class=\"notranslate\">Supplier&lt;String&gt;</code> should return from its <code class=\"notranslate\">get</code> method in some cases), or maybe the hope is to use it in such ways in the future?</p>\n<p dir=\"auto\">(Alternatively, Mockito could skip setting the generic type for serializable mocks, but that could be surprising. Or Mockito could perform its own custom serialization and deserialization of parameterized types, but that sounds like a lot of work for little payoff.)</p>\n<p dir=\"auto\">In the meantime, we can work around the problem by using <code class=\"notranslate\">Mockito.mock(..., withSettings().serializable())</code> instead of <code class=\"notranslate\">@Mock(serializable = true)</code> (since the former doesn't call <code class=\"notranslate\">genericTypeToMock(...)</code>). But we do have one team that is reporting seeing this in a bunch of tests, so they'd have to shift their habits.</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jfrantzius/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jfrantzius\">@jfrantzius</a> again :)</p>",
                "resourcePath": "/mockito/mockito/issues/2979",
                "createdAt": "2023-04-17T21:20:21Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Edit DoAnswerStyleStubbing.isSet() to return true if there are answers",
        "url": "https://github.com/mockito/mockito/pull/3020",
        "resourcePath": "/mockito/mockito/pull/3020",
        "createdAt": "2023-05-25T16:32:27Z",
        "number": 3020,
        "mergeCommit": {
          "oid": "2280cac9ebb5849165731040eb9d720525ee9edb",
          "message": "Edit DoAnswerStyleStubbing.isSet() to return true if there are answers (#3020)\n\nFixes #2955\r\n\r\n---------\r\n\r\nCo-authored-by: Kei <keiwork111@gmail.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/2280cac9ebb5849165731040eb9d720525ee9edb",
          "parents": {
            "nodes": [
              {
                "oid": "296a25799365dd6c8ee78704dd3bc1a201d323df",
                "message": "Bump com.diffplug.spotless from 6.18.0 to 6.19.0 (#3018)\n\nBumps com.diffplug.spotless from 6.18.0 to 6.19.0.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.diffplug.spotless\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/DoAnswerStyleStubbing.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85RXLEv2gAoMjkyMDJkZjcyYzdlMDcyNmJkN2Y5NGI2MTY2ZDIyY2M0YTEyZjQwZA",
                "url": "https://github.com/mockito/mockito/pull/3020/commits/29202df72c7e0726bd7f94b6166d22cc4a12f40d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2955,
                "url": "https://github.com/mockito/mockito/issues/2955",
                "title": "\bFunction name is incorrect.",
                "bodyHTML": "<p dir=\"auto\">I saw <a href=\"https://github.com/mockito/mockito/blob/96eb5e0cbff80a1545b1093db1baf4e33a2041e7/src/main/java/org/mockito/internal/stubbing/DoAnswerStyleStubbing.java#L27-L29\">DoAnswerStyleStubbing</a> class code.<br>\nI thought that below is correct.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"boolean isSet() {\n    return !answers.isEmpty();\n}\"><pre class=\"notranslate\"><span class=\"pl-smi\">boolean</span> <span class=\"pl-s1\">isSet</span>() {\n    <span class=\"pl-k\">return</span> !<span class=\"pl-s1\">answers</span>.<span class=\"pl-en\">isEmpty</span>();\n}</pre></div>\n<p dir=\"auto\">After execute <code class=\"notranslate\">setAnswers</code> function with answers, instance will return <code class=\"notranslate\">isSet is false</code>.<br>\nI think it looks strange.</p>\n<p dir=\"auto\">And <a href=\"https://github.com/mockito/mockito/blob/96eb5e0cbff80a1545b1093db1baf4e33a2041e7/src/main/java/org/mockito/internal/stubbing/InvocationContainerImpl.java#L112-L114\">InvocationContainerImpl</a> also need to be changed as follow.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public boolean hasAnswersForStubbing() {\n    return doAnswerStyleStubbing.isSet();\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-smi\">boolean</span> <span class=\"pl-s1\">hasAnswersForStubbing</span>() {\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">doAnswerStyleStubbing</span>.<span class=\"pl-en\">isSet</span>();\n}</pre></div>",
                "resourcePath": "/mockito/mockito/issues/2955",
                "createdAt": "2023-03-31T03:59:06Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Build CI on more realistic combinations (and faster)",
        "url": "https://github.com/mockito/mockito/pull/3027",
        "resourcePath": "/mockito/mockito/pull/3027",
        "createdAt": "2023-06-05T16:10:31Z",
        "number": 3027,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": ".github/workflows/build-and-test.yml"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": ".github/workflows/build.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": ".github/workflows/test.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85SNmmp2gAoMDFlZjc5Mjc0ZWQzNjhhNzA0NDc3OWUwNWIyMTU3OGIxNDMwZGY5Mw",
                "url": "https://github.com/mockito/mockito/pull/3027/commits/01ef79274ed368a7044779e05b21578b1430df93"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2898,
                "url": "https://github.com/mockito/mockito/issues/2898",
                "title": "Build CI on more realistic combinations (and faster)",
                "bodyHTML": "<p dir=\"auto\">Conversation split from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1564623687\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2894\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2894/hovercard?comment_id=1096034581&amp;comment_type=review_comment\" href=\"https://github.com/mockito/mockito/pull/2894#discussion_r1096034581\">#2894 (comment)</a></p>\n<p dir=\"auto\">I strongly recommend adopting this approach in this repo: <a href=\"https://jakewharton.com/build-on-latest-java-test-through-lowest-java/\" rel=\"nofollow\">https://jakewharton.com/build-on-latest-java-test-through-lowest-java/</a><br>\nI'm opening this issue to discuss if there's an agreement.</p>\n<p dir=\"auto\">Jake's point in that guide is that you build once, and test on different runtimes, same as your use will download your pre-built jar and run it on different JVMs.</p>\n<h2 dir=\"auto\">Solved Issues</h2>\n<h3 dir=\"auto\">JDK incompatibilities in user's runtime</h3>\n<p dir=\"auto\">In the current CI setup:</p>\n<ul dir=\"auto\">\n<li>the code is compiled on JDK 11 then tests executed</li>\n<li>in a different matrix, code is compiled on JDK 17 then tests executed</li>\n<li>then on tags, releases are built on JDK 11 and published (this is what users will download from maven)</li>\n</ul>\n<p dir=\"auto\">This means that we never ever test the real use case, that the JDK 11-built JAR is executed on JDK 17, for example because the Mockito user's CI is running JDK 17.</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/reta/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/reta\">@reta</a> mentioned</p>\n<blockquote>\n<p dir=\"auto\">From experience: the code compiled on older JDKs (fe JDK-8) may fail at runtime (due to slight differences in how JVM interprets bytecode), but it is very rare.</p>\n</blockquote>\n<p dir=\"auto\">This could be very easily covered by the above approach.</p>\n<h3 dir=\"auto\">One of the Gradle plugins don't support the old/new JDK version</h3>\n<p dir=\"auto\">With Android Gradle Plugin 8.0 (already in beta, released soon), it will be compiled and packaged with Java 17, forcing any of its users to upgrade their Gradle build setup to use JDK 17 or higher (that is the JVM running Gradle itself). This means that Mockito will either need to add conditionals in settings.gradle.kts similar to the one removed here: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mockito/mockito/commit/fe8881e525de437d7fc3ad2e4e0dcd21725420b4/hovercard\" href=\"https://github.com/mockito/mockito/commit/fe8881e525de437d7fc3ad2e4e0dcd21725420b4\"><tt>fe8881e</tt></a> to prevent including the <code class=\"notranslate\">:androidTest</code> module on JDK 11 machines/CI matrix. This will practically mean that the real use case of Mockito built on Java 11, running in Java 17 test runtime in an Android project will not be covered.</p>\n<h3 dir=\"auto\">Faster CI</h3>\n<p dir=\"auto\">Since the build will happen only on one JDK, producing one binary JAR, the build will be more reproducible and better covered. With Jake's approach the individual JDK coverage is done via Gradle tasks and toolchains, meaning contributors can easily run all test on all JDKs without much setup (as opposed to having to install and set <code class=\"notranslate\">JAVA_HOME</code> to mimic CI). Additionally the CI time will be also reduced because the extra compilation on each matrix step will not be necessary any more; the freed up time can be used to cover more JDKs!</p>\n<h3 dir=\"auto\">Easier adding of new JDKs to test on</h3>\n<p dir=\"auto\">Since each JDK coverage is just a task, adding it cannot cause incompatibilities with the hosting Gradle build, because the toolchain will only apply to the specific test task.</p>\n<hr>\n<p dir=\"auto\">check that</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2898",
                "createdAt": "2023-02-03T17:51:43Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "[#2898] Build CI on more realistic combinations (and faster)",
        "url": "https://github.com/mockito/mockito/pull/3028",
        "resourcePath": "/mockito/mockito/pull/3028",
        "createdAt": "2023-06-05T16:21:42Z",
        "number": 3028,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85SNqKo2gAoMjk5NzBlZGUzMjJkMjI5ZWM2MDc4MmMzODhjZTA3ZTdiZWM3YWIwOA",
                "url": "https://github.com/mockito/mockito/pull/3028/commits/29970ede322d229ec60782c388ce07e7bec7ab08"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2898,
                "url": "https://github.com/mockito/mockito/issues/2898",
                "title": "Build CI on more realistic combinations (and faster)",
                "bodyHTML": "<p dir=\"auto\">Conversation split from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1564623687\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/2894\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/2894/hovercard?comment_id=1096034581&amp;comment_type=review_comment\" href=\"https://github.com/mockito/mockito/pull/2894#discussion_r1096034581\">#2894 (comment)</a></p>\n<p dir=\"auto\">I strongly recommend adopting this approach in this repo: <a href=\"https://jakewharton.com/build-on-latest-java-test-through-lowest-java/\" rel=\"nofollow\">https://jakewharton.com/build-on-latest-java-test-through-lowest-java/</a><br>\nI'm opening this issue to discuss if there's an agreement.</p>\n<p dir=\"auto\">Jake's point in that guide is that you build once, and test on different runtimes, same as your use will download your pre-built jar and run it on different JVMs.</p>\n<h2 dir=\"auto\">Solved Issues</h2>\n<h3 dir=\"auto\">JDK incompatibilities in user's runtime</h3>\n<p dir=\"auto\">In the current CI setup:</p>\n<ul dir=\"auto\">\n<li>the code is compiled on JDK 11 then tests executed</li>\n<li>in a different matrix, code is compiled on JDK 17 then tests executed</li>\n<li>then on tags, releases are built on JDK 11 and published (this is what users will download from maven)</li>\n</ul>\n<p dir=\"auto\">This means that we never ever test the real use case, that the JDK 11-built JAR is executed on JDK 17, for example because the Mockito user's CI is running JDK 17.</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/reta/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/reta\">@reta</a> mentioned</p>\n<blockquote>\n<p dir=\"auto\">From experience: the code compiled on older JDKs (fe JDK-8) may fail at runtime (due to slight differences in how JVM interprets bytecode), but it is very rare.</p>\n</blockquote>\n<p dir=\"auto\">This could be very easily covered by the above approach.</p>\n<h3 dir=\"auto\">One of the Gradle plugins don't support the old/new JDK version</h3>\n<p dir=\"auto\">With Android Gradle Plugin 8.0 (already in beta, released soon), it will be compiled and packaged with Java 17, forcing any of its users to upgrade their Gradle build setup to use JDK 17 or higher (that is the JVM running Gradle itself). This means that Mockito will either need to add conditionals in settings.gradle.kts similar to the one removed here: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/mockito/mockito/commit/fe8881e525de437d7fc3ad2e4e0dcd21725420b4/hovercard\" href=\"https://github.com/mockito/mockito/commit/fe8881e525de437d7fc3ad2e4e0dcd21725420b4\"><tt>fe8881e</tt></a> to prevent including the <code class=\"notranslate\">:androidTest</code> module on JDK 11 machines/CI matrix. This will practically mean that the real use case of Mockito built on Java 11, running in Java 17 test runtime in an Android project will not be covered.</p>\n<h3 dir=\"auto\">Faster CI</h3>\n<p dir=\"auto\">Since the build will happen only on one JDK, producing one binary JAR, the build will be more reproducible and better covered. With Jake's approach the individual JDK coverage is done via Gradle tasks and toolchains, meaning contributors can easily run all test on all JDKs without much setup (as opposed to having to install and set <code class=\"notranslate\">JAVA_HOME</code> to mimic CI). Additionally the CI time will be also reduced because the extra compilation on each matrix step will not be necessary any more; the freed up time can be used to cover more JDKs!</p>\n<h3 dir=\"auto\">Easier adding of new JDKs to test on</h3>\n<p dir=\"auto\">Since each JDK coverage is just a task, adding it cannot cause incompatibilities with the hosting Gradle build, because the toolchain will only apply to the specific test task.</p>\n<hr>\n<p dir=\"auto\">check that</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2898",
                "createdAt": "2023-02-03T17:51:43Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #3046",
        "url": "https://github.com/mockito/mockito/pull/3060",
        "resourcePath": "/mockito/mockito/pull/3060",
        "createdAt": "2023-07-13T11:02:32Z",
        "number": 3060,
        "mergeCommit": {
          "oid": "f008531496ac1d22a7356a4a51018d248dd04e9b",
          "message": "Reword documentation of `reset` (#3060)\n\nFixes #3046",
          "commitUrl": "https://github.com/mockito/mockito/commit/f008531496ac1d22a7356a4a51018d248dd04e9b",
          "parents": {
            "nodes": [
              {
                "oid": "69e0a6c54f21ae26f5bd7927e8326bd567934fef",
                "message": "Rewire Jacoco for Gradle 8/9 (#3052)\n\nAlso generate coverage for the Android subproject."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/Mockito.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85VaEi_2gAoODdiN2IyZTE0YjQwYjljNTNkNWRhMjhlZmI5OTg2NzU2ZDcwNzZkZg",
                "url": "https://github.com/mockito/mockito/pull/3060/commits/87b7b2e14b40b9c53d5da28efb9986756d7076df"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3046,
                "url": "https://github.com/mockito/mockito/issues/3046",
                "title": "Mockito#reset Condescending Documentation",
                "bodyHTML": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">I just realised that the method <code class=\"notranslate\">Mockito.reset()</code> existed at all. The documentation in the most recent version states:</p>\n<blockquote>\n<p dir=\"auto\">Smart Mockito users hardly use this feature because they know it could be a sign of poor tests.</p>\n</blockquote>\n<p dir=\"auto\">At the core, I totally agree, this shouldn't be necessary. Nevertheless, the first sentence of the comment feels rather rude / condescending. I suggest a rephrase to something like</p>\n<blockquote>\n<p dir=\"auto\">Using this method could be a sign of poor tests. &lt;rest of the doc here&gt;</p>\n</blockquote>\n<p dir=\"auto\">Would help with that.</p>\n<p dir=\"auto\">See the following link: <a href=\"https://github.com/mockito/mockito/blob/main/src/main/java/org/mockito/Mockito.java#L2581\">https://github.com/mockito/mockito/blob/main/src/main/java/org/mockito/Mockito.java#L2581</a></p>",
                "resourcePath": "/mockito/mockito/issues/3046",
                "createdAt": "2023-06-28T09:56:06Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #3077 : Report unused stubbing exceptions when test filter is no-op",
        "url": "https://github.com/mockito/mockito/pull/3078",
        "resourcePath": "/mockito/mockito/pull/3078",
        "createdAt": "2023-08-04T17:31:09Z",
        "number": 3078,
        "mergeCommit": {
          "oid": "ece6107a22f0e4ea89dca7a9cfd7791f6a362a26",
          "message": "Report unused stubbing exceptions when test filter is no-op (#3078)\n\nFixes #3077",
          "commitUrl": "https://github.com/mockito/mockito/commit/ece6107a22f0e4ea89dca7a9cfd7791f6a362a26",
          "parents": {
            "nodes": [
              {
                "oid": "fd16dd1290c0b0abdc1750b989f9fec9d533cdbd",
                "message": "Bump versions.errorprone from 2.21.0 to 2.21.1 (#3083)\n\nBumps `versions.errorprone` from 2.21.0 to 2.21.1.\r\n\r\nUpdates `com.google.errorprone:error_prone_core` from 2.21.0 to 2.21.1\r\n- [Release notes](https://github.com/google/error-prone/releases)\r\n- [Commits](https://github.com/google/error-prone/compare/v2.21.0...v2.21.1)\r\n\r\nUpdates `com.google.errorprone:error_prone_test_helpers` from 2.21.0 to 2.21.1\r\n- [Release notes](https://github.com/google/error-prone/releases)\r\n- [Commits](https://github.com/google/error-prone/compare/v2.21.0...v2.21.1)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.google.errorprone:error_prone_core\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: com.google.errorprone:error_prone_test_helpers\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/runners/StrictRunner.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/junitrunner/StrictRunnerTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85XN5fm2gAoYzkzMzlmMTE1YzljY2Y4ZDBkYjdkZmE0NmFjMjRhYzgzMTgyNTE0Ng",
                "url": "https://github.com/mockito/mockito/pull/3078/commits/c9339f115c9ccf8d0db7dfa46ac24ac831825146"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3077,
                "url": "https://github.com/mockito/mockito/issues/3077",
                "title": "Unused stubbings are not reported when filters are used",
                "bodyHTML": "<p dir=\"auto\">Unused stubbings are not reported when a filter is used during the test run. This is documented clearly in the <a href=\"https://github.com/mockito/mockito/blob/f5ad9e9f9a338bcea6180fc474a562acc13f2c84/src/main/java/org/mockito/internal/runners/StrictRunner.java#L47-L52\">StrictRunner class</a>:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// only report when:\n// 1. if all tests from given test have ran (filter requested is false)\n//   Otherwise we would report unnecessary stubs even if the user runs just single test\n// from the class\n// 2. tests are successful (we don't want to add an extra failure on top of any existing\n// failure, to avoid confusion)\"><pre class=\"notranslate\"><span class=\"pl-c\">// only report when:</span>\n<span class=\"pl-c\">// 1. if all tests from given test have ran (filter requested is false)</span>\n<span class=\"pl-c\">//   Otherwise we would report unnecessary stubs even if the user runs just single test</span>\n<span class=\"pl-c\">// from the class</span>\n<span class=\"pl-c\">// 2. tests are successful (we don't want to add an extra failure on top of any existing</span>\n<span class=\"pl-c\">// failure, to avoid confusion)</span></pre></div>\n<p dir=\"auto\">Only reporting unused stubbings when all tests are run is reasonable. However, the logic for detecting this case is a little too coarse-grained, since even no-op filters end up disabling the reporting of unused stubbings. This can be troublesome when, for example, JUnit categories are used to distinguish between unit and integration tests.</p>\n<p dir=\"auto\">It'd be nice if we could detect when filters actually prevent one or more tests from being run, and only skip reporting unused stubbings in those cases.</p>\n<p dir=\"auto\">Created based off of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"492837243\" data-permission-text=\"Title is private\" data-url=\"https://github.com/gradle/gradle/issues/10694\" data-hovercard-type=\"issue\" data-hovercard-url=\"/gradle/gradle/issues/10694/hovercard\" href=\"https://github.com/gradle/gradle/issues/10694\">gradle/gradle#10694</a>, specifically <a href=\"https://github.com/gradle/gradle/issues/10694#issuecomment-1374911274\" data-hovercard-type=\"issue\" data-hovercard-url=\"/gradle/gradle/issues/10694/hovercard\">this comment</a>.</p>\n<p dir=\"auto\">This affects a project currently using Mockito version 4.11.0, but I've just verified that it also affects version 5.2.0.</p>",
                "resourcePath": "/mockito/mockito/issues/3077",
                "createdAt": "2023-08-04T16:45:32Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes 3087 : Add note on backporting to README",
        "url": "https://github.com/mockito/mockito/pull/3090",
        "resourcePath": "/mockito/mockito/pull/3090",
        "createdAt": "2023-08-11T15:30:26Z",
        "number": 3090,
        "mergeCommit": {
          "oid": "f673545645f21c4a98dfd6605a772aff9bb9c294",
          "message": "Add note on backporting policy to README (#3090)\n\nFixes #3087",
          "commitUrl": "https://github.com/mockito/mockito/commit/f673545645f21c4a98dfd6605a772aff9bb9c294",
          "parents": {
            "nodes": [
              {
                "oid": "ece6107a22f0e4ea89dca7a9cfd7791f6a362a26",
                "message": "Report unused stubbing exceptions when test filter is no-op (#3078)\n\nFixes #3077"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "README.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85XvOfA2gAoNWFmYjM0Y2IxNzY5MmI0ZmY4NGUzZDQzZDY1YTI3M2RhNzQ5MWUwYQ",
                "url": "https://github.com/mockito/mockito/pull/3090/commits/5afb34cb17692b4ff84e3d43d65a273da7491e0a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3087,
                "url": "https://github.com/mockito/mockito/issues/3087",
                "title": "Backporting policy",
                "bodyHTML": "<p dir=\"auto\">With version 5.0.0, Java 8 support was dropped and Java 11 is required for that version and beyond. If a project is still relying on Java 8 (or 9, or 10), they cannot benefit from any new fixes or features without upgrading their Java version, unless those same changes are backported to 4.x.y and released (or they want to fork and package Mockito themselves).</p>\n<p dir=\"auto\">Given that, it'd be nice to know what the project's official policy on backporting is. Based on recent releases, it doesn't seem like backporting is common (the last release on the 4.x.y line is 4.11.0, which was published in December 2022, a month or so before 5.0.0, which was published in January 2023).</p>\n<p dir=\"auto\">Assuming this practice is intentional but undocumented, a short note added to the README (or possibly CONTRIBUTING?) doc stating that 4.x.y is no longer maintained and no new features, fixes, or security patches will be applied to it could be valuable.</p>",
                "resourcePath": "/mockito/mockito/issues/3087",
                "createdAt": "2023-08-10T18:27:39Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Excessive locking in TypeCachingBytecodeGenerator#BOOTSTRAP_LOCK",
        "url": "https://github.com/mockito/mockito/pull/3095",
        "resourcePath": "/mockito/mockito/pull/3095",
        "createdAt": "2023-08-17T18:03:51Z",
        "number": 3095,
        "mergeCommit": {
          "oid": "741fe8102eba820dcabc66f57ce9f5bb82694120",
          "message": "Use multiple locks in TypeCachingBytecodeGenerator (#3095)\n\nChanged locking scheme in TypeCachingBytecodeGenerator from a\r\nsingle global lock to cacheLocks with size 16.\r\nThe used TypeCachingLock from cacheLocks depends on\r\nthe hashcode of MockitoMockKey, which aggregates the types and\r\nsettings to mock.\r\n\r\nFixes #3035",
          "commitUrl": "https://github.com/mockito/mockito/commit/741fe8102eba820dcabc66f57ce9f5bb82694120",
          "parents": {
            "nodes": [
              {
                "oid": "076e8ac837c17e81347854feaad69687cd7d2b83",
                "message": "Bump org.gradle.toolchains.foojay-resolver-convention (#3096)\n\nBumps org.gradle.toolchains.foojay-resolver-convention from 0.6.0 to 0.7.0.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.gradle.toolchains.foojay-resolver-convention\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/TypeCachingBytecodeGenerator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/creation/bytebuddy/TypeCachingMockBytecodeGeneratorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85YLuLL2gAoNmQ0OTg1MWRkMjcxMjAwOTg3MGU5ZWE5MTEwMTY1Y2NlNDhiNjA3OQ",
                "url": "https://github.com/mockito/mockito/pull/3095/commits/6d49851dd2712009870e9ea9110165cce48b6079"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3035,
                "url": "https://github.com/mockito/mockito/issues/3035",
                "title": "Excessive locking in TypeCachingBytecodeGenerator#BOOTSTRAP_LOCK",
                "bodyHTML": "<p dir=\"auto\">The TypeCachingBytecodeGenerator#BOOTSTRAP_LOCK is resulting in excessive BLOCKED threads when running several thousand tests concurrently.  Byte-buddy TypeCache's findOrInsert without monitor seems to handle concurrency. Is this global lock needed ?</p>\n<p dir=\"auto\">Mockito-Inline 4.10, Byte-Buddy 1.12.19</p>\n<p dir=\"auto\"><code class=\"notranslate\">\"ForkJoinPool-1-worker-84\" Id=115 RUNNABLE (daemon=TRUE) at java.base@17.0.4/java.lang.StringLatin1.replace(StringLatin1.java:322) at java.base@17.0.4/java.lang.String.replace(String.java:2806) at app//net.bytebuddy.jar.asm.Type.getInternalName(Type.java:510) at app//net.bytebuddy.jar.asm.Type.appendDescriptor(Type.java:644) at app//net.bytebuddy.jar.asm.Type.getMethodDescriptor(Type.java:585) at app//net.bytebuddy.description.method.MethodDescription$ForLoadedMethod.getDescriptor(MethodDescription.java:1288) at app//net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.visitMethod(Advice.java:8400) at app//net.bytebuddy.jar.asm.ClassReader.readMethod(ClassReader.java:1353) at app//net.bytebuddy.jar.asm.ClassReader.accept(ClassReader.java:744) at app//net.bytebuddy.jar.asm.ClassReader.accept(ClassReader.java:424) at app//net.bytebuddy.asm.Advice$Dispatcher$Inlining$Resolved$AdviceMethodInliner.apply(Advice.java:8394) at app//net.bytebuddy.asm.Advice$AdviceVisitor$WithExitAdvice.onUserEnd(Advice.java:10904) at app//net.bytebuddy.asm.Advice$AdviceVisitor.visitMaxs(Advice.java:10683) at app//net.bytebuddy.jar.asm.ClassReader.readCode(ClassReader.java:2665) at app//net.bytebuddy.jar.asm.ClassReader.readMethod(ClassReader.java:1514) at app//net.bytebuddy.jar.asm.ClassReader.accept(ClassReader.java:744) at app//net.bytebuddy.jar.asm.ClassReader.accept(ClassReader.java:424) at app//net.bytebuddy.dynamic.scaffold.TypeWriter$Default$ForInlining.create(TypeWriter.java:4014) at app//net.bytebuddy.dynamic.scaffold.TypeWriter$Default.make(TypeWriter.java:2224) at app//net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$UsingTypeWriter.make(DynamicType.java:4050) at app//net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase.make(DynamicType.java:3734) at app//org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.transform(InlineBytecodeGenerator.java:401) at java.instrument@17.0.4/java.lang.instrument.ClassFileTransformer.transform(ClassFileTransformer.java:244) at java.instrument@17.0.4/sun.instrument.TransformerManager.transform(TransformerManager.java:188) at java.instrument@17.0.4/sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:541) at java.instrument@17.0.4/sun.instrument.InstrumentationImpl.retransformClasses0(Native Method) at java.instrument@17.0.4/sun.instrument.InstrumentationImpl.retransformClasses(InstrumentationImpl.java:169) at app//org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:280) at app//org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.mockClass(InlineBytecodeGenerator.java:217) - locked &lt;0x730e33e8&gt; (a org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator) at app//org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.lambda$mockClass$0(TypeCachingBytecodeGenerator.java:47) at app//org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator$$Lambda$895/0x0000000801aeaf98.call(Unknown Source) at app//net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:168) at app//net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:399) at app//net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:190) - locked &lt;0x62f72614&gt; (a java.lang.Object) at app//net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:410)</code></p>\n<p dir=\"auto\"><code class=\"notranslate\">\"ForkJoinPool-1-worker-51\" Id=82 BLOCKED on java.lang.Object@62f72614 owned by \"ForkJoinPool-1-worker-84\" Id=115115 (daemon=TRUE) at app//net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:189) at app//net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:410) at app//org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:40) at app//org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.createMockType(InlineDelegateByteBuddyMockMaker.java:396) at app//org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.doCreateMock(InlineDelegateByteBuddyMockMaker.java:355) at app//org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.createMock(InlineDelegateByteBuddyMockMaker.java:334) at app//org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:56) at app//org.mockito.internal.util.MockUtil.createMock(MockUtil.java:99)</code></p>\n<p dir=\"auto\">check that</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/3035",
                "createdAt": "2023-06-10T01:19:59Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Default mock of Optional.isEmpty() returns true for RETURN_DEEP_STUBS",
        "url": "https://github.com/mockito/mockito/pull/3097",
        "resourcePath": "/mockito/mockito/pull/3097",
        "createdAt": "2023-08-17T19:53:16Z",
        "number": 3097,
        "mergeCommit": {
          "oid": "63d1cd405066886c6fb041ecc1ae502fe4b8a782",
          "message": "Return real empty optionals when using RETURN_DEEP_STUBS (#3097)\n\nReturnsDeepStubs now answers with true on Optional.isEmpty()\r\nwhen using RETURN_DEEP_STUBS.\r\nReturnsDeepStubs now returns real Optionals instead of mocks.\r\n\r\nFixes #2865",
          "commitUrl": "https://github.com/mockito/mockito/commit/63d1cd405066886c6fb041ecc1ae502fe4b8a782",
          "parents": {
            "nodes": [
              {
                "oid": "87a99dd87a4b1ca1ed356c4bd691bf01f8efec77",
                "message": "Bump org.jetbrains.kotlin:kotlin-gradle-plugin from 1.9.0 to 1.9.10 (#3102)\n\nBumps [org.jetbrains.kotlin:kotlin-gradle-plugin](https://github.com/JetBrains/kotlin) from 1.9.0 to 1.9.10.\r\n- [Release notes](https://github.com/JetBrains/kotlin/releases)\r\n- [Changelog](https://github.com/JetBrains/kotlin/blob/v1.9.10/ChangeLog.md)\r\n- [Commits](https://github.com/JetBrains/kotlin/compare/v1.9.0...v1.9.10)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.jetbrains.kotlin:kotlin-gradle-plugin\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/stubbing/defaultanswers/ReturnsOptionalMocksTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85YMNrm2gAoNDYwMWE4ODE0OTAwZDJhNDQ0ODNmYjQwMDdlMWI4NTg3YTMyMzNiMQ",
                "url": "https://github.com/mockito/mockito/pull/3097/commits/4601a8814900d2a44483fb4007e1b8587a3233b1"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2865,
                "url": "https://github.com/mockito/mockito/issues/2865",
                "title": "Default mock of `Optional` is not `empty` when using `RETURN_DEEP_STUBS`",
                "bodyHTML": "<p dir=\"auto\">Version affected: Mockito: 4.x &amp; 5.x</p>\n<p dir=\"auto\">If you create a mock with <code class=\"notranslate\">RETURN_DEEP_STUBS</code>, then any method that returns a collection will, by default, return an empty collection, i.e. <code class=\"notranslate\">isEmpty</code> returns <code class=\"notranslate\">true</code>, etc.  This is great, as it means no additional configuration of the mock is required before passing to logic that would attempt to access elements of the collection.</p>\n<p dir=\"auto\">However, the same is not true for <code class=\"notranslate\">Optional</code>, (and I'm assuming <code class=\"notranslate\">OptionalLong</code> etc): if <code class=\"notranslate\">RETURN_DEEP_STUBS</code> is used, methods that return <code class=\"notranslate\">Optional</code> aren't treated in any special way and just return a default mock with not stubbing configured. This means <code class=\"notranslate\">isEmpty</code> returns <code class=\"notranslate\">false</code>, but <code class=\"notranslate\">get()</code> returns <code class=\"notranslate\">null</code>.   This breaks the contract of <code class=\"notranslate\">Optional</code>, causing test failures that aren't actually valid, or requiring manual configuration of the <code class=\"notranslate\">Optional</code> mock to do-the-right-thing, cluttering test code.</p>\n<p dir=\"auto\">Here's an example test that demonstrates this:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"interface Address {\n   Optional&lt;String&gt; getState();\n}\n\n@Test\npublic void shouldDefaultDeepMockOptionalsToEmpty() {\n    final Address address = mock(Address.class, RETURNS_DEEP_STUBS);\n\n    assertThat(address.getState()).isEqualTo(Optional.empty());  // &lt;--- fails\n}\n\n@Test\npublic void shouldDefaultMockOptionalsToEmpty() {\n    final Address address = mock(Address.class); // &lt;-- no RETURNS_DEEP_STUBS\n\n    assertThat(address.getState()).isEqualTo(Optional.empty());  // &lt;--- passes\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">interface</span> <span class=\"pl-smi\">Address</span> {\n   <span class=\"pl-smi\">Optional</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-en\">getState</span>();\n}\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">shouldDefaultDeepMockOptionalsToEmpty</span>() {\n    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Address</span> <span class=\"pl-s1\">address</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">Address</span>.<span class=\"pl-k\">class</span>, <span class=\"pl-c1\">RETURNS_DEEP_STUBS</span>);\n\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">address</span>.<span class=\"pl-en\">getState</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-smi\">Optional</span>.<span class=\"pl-en\">empty</span>());  <span class=\"pl-c\">// &lt;--- fails</span>\n}\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">shouldDefaultMockOptionalsToEmpty</span>() {\n    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Address</span> <span class=\"pl-s1\">address</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">Address</span>.<span class=\"pl-k\">class</span>); <span class=\"pl-c\">// &lt;-- no RETURNS_DEEP_STUBS</span>\n\n    <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">address</span>.<span class=\"pl-en\">getState</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-smi\">Optional</span>.<span class=\"pl-en\">empty</span>());  <span class=\"pl-c\">// &lt;--- passes</span>\n}</pre></div>\n<p dir=\"auto\">Note the second test, which doesn't use deep mocking, passes.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/2865",
                "createdAt": "2023-01-14T11:36:42Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make MockUtil.getMockMaker() public Mockito API",
        "url": "https://github.com/mockito/mockito/pull/3129",
        "resourcePath": "/mockito/mockito/pull/3129",
        "createdAt": "2023-10-05T06:42:58Z",
        "number": 3129,
        "mergeCommit": {
          "oid": "fb48e093c06c2a0ee45f432cc12d8328ebd73e6d",
          "message": "Make `MockUtil.getMockMaker()` public Mockito API (#3129)\n\nThe MockitoPlugins interface now provides access to the getMockMaker()\r\nmethod.\r\n\r\nFixes #3128",
          "commitUrl": "https://github.com/mockito/mockito/commit/fb48e093c06c2a0ee45f432cc12d8328ebd73e6d",
          "parents": {
            "nodes": [
              {
                "oid": "597e9020ce56eb2ae6c50f19311978d3e96abd57",
                "message": "Use spdx identifier for license name (#3134)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/plugins/DefaultMockitoPlugins.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/MockUtil.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/plugins/MockitoPlugins.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/configuration/plugins/DefaultMockitoPluginsTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85b9_oO2gAoNzg1Nzc5OGQ1YmRiYzY4OGIzZGYzN2EzNTM1MzZmODEzNTAxMzdkNA",
                "url": "https://github.com/mockito/mockito/pull/3129/commits/7857798d5bdbc688b3df37a353536f81350137d4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3128,
                "url": "https://github.com/mockito/mockito/issues/3128",
                "title": "Make MockUtil.getMockMaker() public or public Mockito API",
                "bodyHTML": "<p dir=\"auto\"><strong>Proposal:</strong></p>\n<p dir=\"auto\">Make the method <code class=\"notranslate\">org.mockito.internal.util.MockUtil.getMockMaker(String)</code> public or better part of the public Mockito Plugin-API.<br>\nThe existing <code class=\"notranslate\">org.mockito.plugins.MockitoPlugins.getInlineMockMaker()</code> creates a new <code class=\"notranslate\">mock-maker-inline</code> instance when called.</p>\n<p dir=\"auto\"><strong>Reason:</strong></p>\n<p dir=\"auto\">I am currently working on a <a href=\"https://github.com/spockframework/spock/pull/1756\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/spockframework/spock/pull/1756/hovercard\">PR for Spock</a>, which integrates <code class=\"notranslate\">Mockito</code> as a Mocking library into Spock for normal and static mocks.</p>\n<p dir=\"auto\">If I use the public API of <code class=\"notranslate\">MockitoPlugins.getInlineMockMaker()</code>, the combination of Mockito and Spock with Mockito leads to strange behavior. E.g. If someone mocks the same static class with Mockito and Spock, the  <code class=\"notranslate\">mock-maker-inline</code> gets confused.<br>\nThe reasons for that is, that two Mockito <code class=\"notranslate\">InlineDelegateByteBuddyMockMaker</code> instances try to transform static methods at the same time.</p>\n<p dir=\"auto\">If I use the <code class=\"notranslate\">MockUtil.getMockMaker()</code> Spock with Mockito and Mockito will interop nicely with each other and report an error, if the same class is mocked twice.<br>\nSo the user can use Mockito-API in Spock-Tests and also Spock-API, which uses Mockito under the hood.</p>",
                "resourcePath": "/mockito/mockito/issues/3128",
                "createdAt": "2023-10-04T13:47:45Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #1382 Jupiter Captor annotation support",
        "url": "https://github.com/mockito/mockito/pull/3133",
        "resourcePath": "/mockito/mockito/pull/3133",
        "createdAt": "2023-10-05T19:45:36Z",
        "number": 3133,
        "mergeCommit": {
          "oid": "6f4eb023ac76f2d59020f59a5a8e8c602a094235",
          "message": "Add parameter support for `@Captor` with JUnit Jupiter (#3133)\n\nFixes #1382\r\n\r\nCo-authored-by: yevhen lazhyntsev <yevhen.lazhyntsev@hulu.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/6f4eb023ac76f2d59020f59a5a8e8c602a094235",
          "parents": {
            "nodes": [
              {
                "oid": "fb48e093c06c2a0ee45f432cc12d8328ebd73e6d",
                "message": "Make `MockUtil.getMockMaker()` public Mockito API (#3129)\n\nThe MockitoPlugins interface now provides access to the getMockMaker()\r\nmethod.\r\n\r\nFixes #3128"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/Captor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/CaptorAnnotationProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/reflection/GenericMaster.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/MockitoExtension.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/resolver/CaptorParameterResolver.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/resolver/CompositeParameterResolver.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/main/java/org/mockito/junit/jupiter/resolver/MockParameterResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/JunitJupiterTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85cC6lr2gAoMmNhNjI0YTlmNTYwZjYzYTIwYWI3MmVmMmQ1YmFiNGJkOWNlZjY1Yw",
                "url": "https://github.com/mockito/mockito/pull/3133/commits/2ca624a9f560f63a20ab72ef2d5bab4bd9cef65c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1382,
                "url": "https://github.com/mockito/mockito/issues/1382",
                "title": "Support @Captor injection in JUnit 5 method parameters",
                "bodyHTML": "<p dir=\"auto\">There is already an open PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"308575884\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mockito/mockito/issues/1350\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/mockito/mockito/pull/1350/hovercard\" href=\"https://github.com/mockito/mockito/pull/1350\">#1350</a> that proposes and adds support for <code class=\"notranslate\">@Mock</code>. This issue is to extend on that PR if / when it gets merged to also support the <code class=\"notranslate\">@Captor</code> annotation in method parameters. This would allow to inject method specific generic <code class=\"notranslate\">ArgumentCaptor</code> that can't be caught with <code class=\"notranslate\">ArgumentCaptor.of(Class)</code>.</p>",
                "resourcePath": "/mockito/mockito/issues/1382",
                "createdAt": "2018-05-07T17:49:43Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes issue #1917",
        "url": "https://github.com/mockito/mockito/pull/3154",
        "resourcePath": "/mockito/mockito/pull/3154",
        "createdAt": "2023-10-20T03:52:45Z",
        "number": 3154,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/injection/ConstructorInjection.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/reflection/FieldInitializer.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/configuration/injection/InjectionFourHashmapsWithDifferentTypeParameterTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/configuration/injection/InjectionTwoListsWithDifferentTypeParameterTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/util/reflection/FieldInitializerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/util/reflection/ParameterizedConstructorInstantiatorTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85dVrVj2gAoMjYxYzI2Y2ZkMjkxY2ExNDk2ODc3NzY3NWM4M2JiNmFkMGU0MTU4OQ",
                "url": "https://github.com/mockito/mockito/pull/3154/commits/261c26cfd291ca14968777675c83bb6ad0e41589"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1917,
                "url": "https://github.com/mockito/mockito/issues/1917",
                "title": "MockitoExtension cannot handle multiple generic mocks with different parameterized type",
                "bodyHTML": "<p dir=\"auto\">It looks to me as if <code class=\"notranslate\">MockitoExtension</code> just checks the base type and does not respect the parameterized type of mocks.</p>\n<p dir=\"auto\">This test will fail:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.17.1'\n@ExtendWith(MockitoExtension.class)\npublic class MockitoTwoGenericMocksTest {\n\tpublic static class ProductionClass {\n\t\tprivate final List&lt;Integer&gt; integerList;\n\t\tprivate final List&lt;String&gt; stringList;\n\n\t\tProductionClass(List&lt;Integer&gt; integerList, List&lt;String&gt;  stringList) {\n\t\t\tthis.integerList = integerList;\n\t\t\tthis.stringList = stringList;\n\t\t\tSystem.out.println(integerList);\n\t\t\tSystem.out.println(stringList);\n\t\t}\n\n\t\tvoid perform() {\n\t\t\tint i = integerList.get(0);\n\t\t\tString s = stringList.get(0);\n\t\t}\n\t}\n\n\t@Mock\n\tList&lt;Integer&gt; integerList;\n\n\t@Mock\n\tList&lt;String&gt; stringList;\n\n\t@InjectMocks\n\tProductionClass productionClass;\n\n\t@Test\n\tvoid test() {\n\t\twhen(integerList.get(0)).thenReturn(0);\n\t\twhen(stringList.get(0)).thenReturn(&quot;a&quot;);\n\t\tproductionClass.perform();\n\t}\n}\"><pre class=\"notranslate\"><span class=\"pl-smi\">testCompile</span> <span class=\"pl-s1\">group</span>: <span class=\"pl-s\">'org.mockito'</span>, <span class=\"pl-s1\">name</span>: <span class=\"pl-s\">'mockito-junit-jupiter'</span>, <span class=\"pl-s1\">version</span>: <span class=\"pl-s\">'2.17.1'</span>\n<span class=\"pl-c1\">@</span><span class=\"pl-s1\">ExtendWith</span>(<span class=\"pl-smi\">MockitoExtension</span>.<span class=\"pl-smi\">class</span>)\n<span class=\"pl-smi\">public</span> <span class=\"pl-s1\">class</span> <span class=\"pl-s1\">MockitoTwoGenericMocksTest</span> {\n\t<span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">ProductionClass</span> {\n\t\t<span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">Integer</span>&gt; <span class=\"pl-s1\">integerList</span>;\n\t\t<span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">stringList</span>;\n\n\t\t<span class=\"pl-smi\">ProductionClass</span>(<span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">Integer</span>&gt; <span class=\"pl-s1\">integerList</span>, <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">String</span>&gt;  <span class=\"pl-s1\">stringList</span>) {\n\t\t\t<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">integerList</span> = <span class=\"pl-s1\">integerList</span>;\n\t\t\t<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">stringList</span> = <span class=\"pl-s1\">stringList</span>;\n\t\t\t<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">integerList</span>);\n\t\t\t<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">stringList</span>);\n\t\t}\n\n\t\t<span class=\"pl-smi\">void</span> <span class=\"pl-en\">perform</span>() {\n\t\t\t<span class=\"pl-smi\">int</span> <span class=\"pl-s1\">i</span> = <span class=\"pl-s1\">integerList</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-c1\">0</span>);\n\t\t\t<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">s</span> = <span class=\"pl-s1\">stringList</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-c1\">0</span>);\n\t\t}\n\t}\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n\t<span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">Integer</span>&gt; <span class=\"pl-s1\">integerList</span>;\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n\t<span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">stringList</span>;\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">InjectMocks</span>\n\t<span class=\"pl-smi\">ProductionClass</span> <span class=\"pl-s1\">productionClass</span>;\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n\t<span class=\"pl-smi\">void</span> <span class=\"pl-s1\">test</span>() {\n\t\t<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">integerList</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-c1\">0</span>)).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-c1\">0</span>);\n\t\t<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">stringList</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-c1\">0</span>)).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-s\">\"a\"</span>);\n\t\t<span class=\"pl-s1\">productionClass</span>.<span class=\"pl-en\">perform</span>();\n\t}\n}</pre></div>\n<p dir=\"auto\">It shows on stdout that the same instance is used for both parameters:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"stringList\nstringList\"><pre class=\"notranslate\"><code class=\"notranslate\">stringList\nstringList\n</code></pre></div>\n<p dir=\"auto\">The test then fails with the following error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer\n\tat MockitoTwoGenericMocksTest$ProductionClass.perform(MockitoTwoGenericMocksTest.java:28)\n\tat MockitoTwoGenericMocksTest.test(MockitoTwoGenericMocksTest.java:46)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat com.sun.proxy.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\n\tat java.lang.Thread.run(Thread.java:748)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Integer\n\tat MockitoTwoGenericMocksTest$ProductionClass.perform(MockitoTwoGenericMocksTest.java:28)\n\tat MockitoTwoGenericMocksTest.test(MockitoTwoGenericMocksTest.java:46)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:686)\n\tat org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat java.util.ArrayList.forEach(ArrayList.java:1257)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)\n\tat org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)\n\tat org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)\n\tat org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)\n\tat com.sun.proxy.$Proxy2.stop(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.stop(TestWorker.java:132)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:182)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:164)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:412)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\n\tat java.lang.Thread.run(Thread.java:748)\n</code></pre></div>\n<p dir=\"auto\">Any chance to add support for this?</p>\n<p dir=\"auto\">I am using the following versions:</p>\n<div class=\"highlight highlight-source-groovy notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"testCompile &quot;org.mockito:mockito-core:3.3.3&quot; \ntestCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '3.3.3'\ntestImplementation('org.junit.jupiter:junit-jupiter:5.6.2')\"><pre class=\"notranslate\">testCompile <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>org.mockito:mockito-core:3.3.3<span class=\"pl-pds\">\"</span></span> \ntestCompile <span class=\"pl-c1\">group</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>org.mockito<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">name</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>mockito-junit-jupiter<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">version</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>3.3.3<span class=\"pl-pds\">'</span></span>\ntestImplementation(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>org.junit.jupiter:junit-jupiter:5.6.2<span class=\"pl-pds\">'</span></span>)</pre></div>",
                "resourcePath": "/mockito/mockito/issues/1917",
                "createdAt": "2020-04-23T08:31:04Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "issue3045 and 3047 no exception found",
        "url": "https://github.com/mockito/mockito/pull/3163",
        "resourcePath": "/mockito/mockito/pull/3163",
        "createdAt": "2023-10-29T10:57:53Z",
        "number": 3163,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "Issue3045-not-Fixed-as-no-exception"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "Issue3047-not-Fixed-as-no-exception"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85eC61O2gAoZWE0MzI4NWE4ZTljZmFlMTE4YjE5ODE0ZGU2ZmFkMDY2YTkyMmE0MQ",
                "url": "https://github.com/mockito/mockito/pull/3163/commits/ea43285a8e9cfae118b19814de6fad066a922a41"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3045,
                "url": "https://github.com/mockito/mockito/issues/3045",
                "title": "Mockito fails mocking when using method reference in class but not when using equivalent lambda syntax",
                "bodyHTML": "<p dir=\"auto\">Checklist:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>\n<h3 dir=\"auto\">Issue description</h3>\n<p dir=\"auto\">When mocking a class using generics in a particular way Mockito will throw an exception when attempting to mock the class. This only occurs if the class under test uses method reference to refer to a private method; calling the same method using regular lambda syntax will allow the creation of the mock</p>\n<h3 dir=\"auto\">Versions used</h3>\n<p dir=\"auto\">Mockito: 5.3.1<br>\nJava: 19<br>\nOS: Windows 10</p>\n<p dir=\"auto\">ByteBuddy: 1.14.4 (transitive dependency via Mockito 5.3.1, possibly relevant)</p>\n<p dir=\"auto\">(See also the example project down below, based on a recent spring starter from start.spring.io)</p>\n<h3 dir=\"auto\">How to reproduce using the appended demo project</h3>\n<ol dir=\"auto\">\n<li>Import <a href=\"https://github.com/mockito/mockito/files/11871412/minimal-example.zip\">the minimal example project</a> as gradle project into your IDE</li>\n<li>Run all tests</li>\n</ol>\n<h4 dir=\"auto\">Expected</h4>\n<ul dir=\"auto\">\n<li>No test failures.</li>\n<li>If tests were to fail then <code class=\"notranslate\">MethodReferenceVariantTest.shouldNeverFail</code> and <code class=\"notranslate\">LambdaVariantTest.shouldNeverFail</code> should fail together as the tests and code under test is identical apart from the fact that the the first uses method reference syntax and the latter lambda syntax.</li>\n</ul>\n<h4 dir=\"auto\">What actually happens</h4>\n<p dir=\"auto\">The test <code class=\"notranslate\">LambdaVariantTest.shouldNeverFail</code> works as expected, but <code class=\"notranslate\">MethodReferenceVariantTest.shouldNeverFail</code> will fail with the following stacktrace</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: class com.example.demo.MethodReferenceVariant.\n\nIf you're not sure why you're getting this error, please open an issue on GitHub.\n\n\nJava               : 19\nJVM vendor name    : Eclipse Adoptium\nJVM vendor version : 19.0.2+7\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 19.0.2+7\nJVM info           : mixed mode, sharing\nOS name            : Windows 10\nOS version         : 10.0\n\n\nYou are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: Could not modify all classes [class java.lang.Object, class com.example.demo.MethodReferenceVariant]\n\tat com.example.demo.MethodReferenceVariantTest.&lt;init&gt;(MethodReferenceVariantTest.java:10)\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\n\tat org.junit.platform.commons.util.ReflectionUtils.newInstance(ReflectionUtils.java:552)\n\tat org.junit.jupiter.engine.execution.ConstructorInvocation.proceed(ConstructorInvocation.java:56)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestClassConstructor(InvocationInterceptor.java:73)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:62)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestClassConstructor(ClassBasedTestDescriptor.java:363)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateTestClass(ClassBasedTestDescriptor.java:310)\n\tat org.junit.jupiter.engine.descriptor.ClassTestDescriptor.instantiateTestClass(ClassTestDescriptor.java:79)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:286)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:95)\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:91)\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:60)\n\tat org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)\nCaused by: org.mockito.exceptions.base.MockitoException: Could not modify all classes [class java.lang.Object, class com.example.demo.MethodReferenceVariant]\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:168)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:399)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:190)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:410)\n\t... 70 more\nCaused by: java.lang.IllegalStateException: \nByte Buddy could not instrument all classes within the mock's type hierarchy\n\nThis problem should never occur for javac-compiled classes. This problem has been observed for classes that are:\n - Compiled by older versions of scalac\n - Classes that are part of the Android distribution\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:285)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.mockClass(InlineBytecodeGenerator.java:218)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.lambda$mockClass$0(TypeCachingBytecodeGenerator.java:47)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:168)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:399)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:190)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:410)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:40)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.createMockType(InlineDelegateByteBuddyMockMaker.java:396)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.doCreateMock(InlineDelegateByteBuddyMockMaker.java:355)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.createMock(InlineDelegateByteBuddyMockMaker.java:334)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:56)\n\tat org.mockito.internal.util.MockUtil.createMock(MockUtil.java:99)\n\tat org.mockito.internal.MockitoCore.mock(MockitoCore.java:88)\n\tat org.mockito.Mockito.mock(Mockito.java:2101)\n\tat org.mockito.Mockito.mock(Mockito.java:2016)\n\t... 70 more\nCaused by: java.lang.IllegalStateException: size = 2\n\tat net.bytebuddy.matcher.FilterableList$AbstractBase.getOnly(FilterableList.java:139)\n\tat net.bytebuddy.description.TypeVariableSource$AbstractBase.findVariable(TypeVariableSource.java:164)\n\tat net.bytebuddy.description.TypeVariableSource$AbstractBase.findExpectedVariable(TypeVariableSource.java:172)\n\tat net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForAttachment.onTypeVariable(TypeDescription.java:2062)\n\tat net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForAttachment.onTypeVariable(TypeDescription.java:1973)\n\tat net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable$Symbolic.accept(TypeDescription.java:5931)\n\tat net.bytebuddy.description.method.ParameterDescription$Latent.getType(ParameterDescription.java:806)\n\tat net.bytebuddy.description.method.ParameterList$AbstractBase.asTypeList(ParameterList.java:107)\n\tat net.bytebuddy.description.method.MethodDescription$AbstractBase.hashCode(MethodDescription.java:938)\n\tat java.base/java.util.HashMap.hash(HashMap.java:338)\n\tat java.base/java.util.HashMap.put(HashMap.java:618)\n\tat java.base/java.util.HashSet.add(HashSet.java:229)\n\tat java.base/java.util.AbstractCollection.addAll(AbstractCollection.java:338)\n\tat java.base/java.util.HashSet.&lt;init&gt;(HashSet.java:121)\n\tat net.bytebuddy.dynamic.scaffold.MethodRegistry$Default.prepare(MethodRegistry.java:457)\n\tat net.bytebuddy.dynamic.scaffold.inline.RedefinitionDynamicTypeBuilder.toTypeWriter(RedefinitionDynamicTypeBuilder.java:203)\n\tat net.bytebuddy.dynamic.scaffold.inline.AbstractInliningDynamicTypeBuilder.toTypeWriter(AbstractInliningDynamicTypeBuilder.java:122)\n\tat net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$UsingTypeWriter.make(DynamicType.java:4050)\n\tat net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase.make(DynamicType.java:3734)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.transform(InlineBytecodeGenerator.java:402)\n\tat java.instrument/java.lang.instrument.ClassFileTransformer.transform(ClassFileTransformer.java:244)\n\tat java.instrument/sun.instrument.TransformerManager.transform(TransformerManager.java:188)\n\tat java.instrument/sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:541)\n\tat java.instrument/sun.instrument.InstrumentationImpl.retransformClasses0(Native Method)\n\tat java.instrument/sun.instrument.InstrumentationImpl.retransformClasses(InstrumentationImpl.java:169)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:281)\n\t... 85 more\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: class com.example.demo.MethodReferenceVariant.\n\nIf you're not sure why you're getting this error, please open an issue on GitHub.\n\n\nJava               : 19\nJVM vendor name    : Eclipse Adoptium\nJVM vendor version : 19.0.2+7\nJVM name           : OpenJDK 64-Bit Server VM\nJVM version        : 19.0.2+7\nJVM info           : mixed mode, sharing\nOS name            : Windows 10\nOS version         : 10.0\n\n\nYou are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: Could not modify all classes [class java.lang.Object, class com.example.demo.MethodReferenceVariant]\n\tat com.example.demo.MethodReferenceVariantTest.&lt;init&gt;(MethodReferenceVariantTest.java:10)\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\n\tat org.junit.platform.commons.util.ReflectionUtils.newInstance(ReflectionUtils.java:552)\n\tat org.junit.jupiter.engine.execution.ConstructorInvocation.proceed(ConstructorInvocation.java:56)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)\n\tat org.junit.jupiter.api.extension.InvocationInterceptor.interceptTestClassConstructor(InvocationInterceptor.java:73)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)\n\tat org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:62)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestClassConstructor(ClassBasedTestDescriptor.java:363)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateTestClass(ClassBasedTestDescriptor.java:310)\n\tat org.junit.jupiter.engine.descriptor.ClassTestDescriptor.instantiateTestClass(ClassTestDescriptor.java:79)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:286)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:278)\n\tat java.base/java.util.Optional.orElseGet(Optional.java:364)\n\tat org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:277)\n\tat org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:105)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:95)\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:91)\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:60)\n\tat org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)\nCaused by: org.mockito.exceptions.base.MockitoException: Could not modify all classes [class java.lang.Object, class com.example.demo.MethodReferenceVariant]\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:168)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:399)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:190)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:410)\n\t... 70 more\nCaused by: java.lang.IllegalStateException: \nByte Buddy could not instrument all classes within the mock's type hierarchy\n\nThis problem should never occur for javac-compiled classes. This problem has been observed for classes that are:\n - Compiled by older versions of scalac\n - Classes that are part of the Android distribution\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:285)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.mockClass(InlineBytecodeGenerator.java:218)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.lambda$mockClass$0(TypeCachingBytecodeGenerator.java:47)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:168)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:399)\n\tat net.bytebuddy.TypeCache.findOrInsert(TypeCache.java:190)\n\tat net.bytebuddy.TypeCache$WithInlineExpunction.findOrInsert(TypeCache.java:410)\n\tat org.mockito.internal.creation.bytebuddy.TypeCachingBytecodeGenerator.mockClass(TypeCachingBytecodeGenerator.java:40)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.createMockType(InlineDelegateByteBuddyMockMaker.java:396)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.doCreateMock(InlineDelegateByteBuddyMockMaker.java:355)\n\tat org.mockito.internal.creation.bytebuddy.InlineDelegateByteBuddyMockMaker.createMock(InlineDelegateByteBuddyMockMaker.java:334)\n\tat org.mockito.internal.creation.bytebuddy.InlineByteBuddyMockMaker.createMock(InlineByteBuddyMockMaker.java:56)\n\tat org.mockito.internal.util.MockUtil.createMock(MockUtil.java:99)\n\tat org.mockito.internal.MockitoCore.mock(MockitoCore.java:88)\n\tat org.mockito.Mockito.mock(Mockito.java:2101)\n\tat org.mockito.Mockito.mock(Mockito.java:2016)\n\t... 70 more\nCaused by: java.lang.IllegalStateException: size = 2\n\tat net.bytebuddy.matcher.FilterableList$AbstractBase.getOnly(FilterableList.java:139)\n\tat net.bytebuddy.description.TypeVariableSource$AbstractBase.findVariable(TypeVariableSource.java:164)\n\tat net.bytebuddy.description.TypeVariableSource$AbstractBase.findExpectedVariable(TypeVariableSource.java:172)\n\tat net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForAttachment.onTypeVariable(TypeDescription.java:2062)\n\tat net.bytebuddy.description.type.TypeDescription$Generic$Visitor$Substitutor$ForAttachment.onTypeVariable(TypeDescription.java:1973)\n\tat net.bytebuddy.description.type.TypeDescription$Generic$OfTypeVariable$Symbolic.accept(TypeDescription.java:5931)\n\tat net.bytebuddy.description.method.ParameterDescription$Latent.getType(ParameterDescription.java:806)\n\tat net.bytebuddy.description.method.ParameterList$AbstractBase.asTypeList(ParameterList.java:107)\n\tat net.bytebuddy.description.method.MethodDescription$AbstractBase.hashCode(MethodDescription.java:938)\n\tat java.base/java.util.HashMap.hash(HashMap.java:338)\n\tat java.base/java.util.HashMap.put(HashMap.java:618)\n\tat java.base/java.util.HashSet.add(HashSet.java:229)\n\tat java.base/java.util.AbstractCollection.addAll(AbstractCollection.java:338)\n\tat java.base/java.util.HashSet.&lt;init&gt;(HashSet.java:121)\n\tat net.bytebuddy.dynamic.scaffold.MethodRegistry$Default.prepare(MethodRegistry.java:457)\n\tat net.bytebuddy.dynamic.scaffold.inline.RedefinitionDynamicTypeBuilder.toTypeWriter(RedefinitionDynamicTypeBuilder.java:203)\n\tat net.bytebuddy.dynamic.scaffold.inline.AbstractInliningDynamicTypeBuilder.toTypeWriter(AbstractInliningDynamicTypeBuilder.java:122)\n\tat net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase$UsingTypeWriter.make(DynamicType.java:4050)\n\tat net.bytebuddy.dynamic.DynamicType$Builder$AbstractBase.make(DynamicType.java:3734)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.transform(InlineBytecodeGenerator.java:402)\n\tat java.instrument/java.lang.instrument.ClassFileTransformer.transform(ClassFileTransformer.java:244)\n\tat java.instrument/sun.instrument.TransformerManager.transform(TransformerManager.java:188)\n\tat java.instrument/sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:541)\n\tat java.instrument/sun.instrument.InstrumentationImpl.retransformClasses0(Native Method)\n\tat java.instrument/sun.instrument.InstrumentationImpl.retransformClasses(InstrumentationImpl.java:169)\n\tat org.mockito.internal.creation.bytebuddy.InlineBytecodeGenerator.triggerRetransformation(InlineBytecodeGenerator.java:281)\n\t... 85 more\n</code></pre></div>\n<h3 dir=\"auto\">Further information</h3>\n<p dir=\"auto\">If wanting to reproduce without the provided demo project or importing fails somehow the following is the most relevant code:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// Class not mockable\npublic class MethodReferenceVariant {\n\n\tpublic &lt;T extends HasCode &amp; HasName&gt; List&lt;T&gt; sortedChoices(List&lt;T&gt; entries) {\n\t\treturn entries.stream()\n\t\t\t.sorted(this::compareCodes)\n\t\t\t.toList();\n\t}\n\n\tprivate &lt;T extends HasCode&gt; int compareCodes(T left, T right) {\n\t\treturn left.getCode().compareTo(right.getCode());\n\t}\n\n}\n\n// Class mockable\npublic class LambdaVariant {\n\n\tpublic &lt;T extends HasCode &amp; HasName&gt; List&lt;T&gt; sortedChoices(List&lt;T&gt; entries) {\n\t\treturn entries.stream()\n\t\t\t.sorted((left, right) -&gt; compareCodes(left, right))\n\t\t\t.toList();\n\t}\n\n\tprivate &lt;T extends HasCode&gt; int compareCodes(T left, T right) {\n\t\treturn left.getCode().compareTo(right.getCode());\n\t}\n\n}\n\n// Interfaces\npublic interface HasCode {\n\tInteger getCode();\n}\n\npublic interface HasName {\n\tString getName();\n}\n\n// Test classes\nclass MethodReferenceVariantTest {\n\n\tprivate MethodReferenceVariant mock = mock(MethodReferenceVariant.class);\n\n\t@Test\n\tvoid shouldNeverFail() {\n\t\tassertThat(true).isTrue();\n\t}\n\n}\n\nclass LambdaVariantTest {\n\n\tprivate LambdaVariant mock = mock(LambdaVariant.class);\n\n\t@Test\n\tvoid shouldNeverFail() {\n\t\tassertThat(true).isTrue();\n\t}\n\n}\"><pre class=\"notranslate\"><span class=\"pl-c\">// Class not mockable</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MethodReferenceVariant</span> {\n\n\t<span class=\"pl-k\">public</span> &lt;<span class=\"pl-smi\">T</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">HasCode</span> &amp; <span class=\"pl-smi\">HasName</span>&gt; <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-en\">sortedChoices</span>(<span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-s1\">entries</span>) {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-s1\">entries</span>.<span class=\"pl-en\">stream</span>()\n\t\t\t.<span class=\"pl-en\">sorted</span>(<span class=\"pl-smi\">this</span>::<span class=\"pl-s1\">compareCodes</span>)\n\t\t\t.<span class=\"pl-en\">toList</span>();\n\t}\n\n\t<span class=\"pl-k\">private</span> &lt;<span class=\"pl-smi\">T</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">HasCode</span>&gt; <span class=\"pl-smi\">int</span> <span class=\"pl-en\">compareCodes</span>(<span class=\"pl-smi\">T</span> <span class=\"pl-s1\">left</span>, <span class=\"pl-smi\">T</span> <span class=\"pl-s1\">right</span>) {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-s1\">left</span>.<span class=\"pl-en\">getCode</span>().<span class=\"pl-en\">compareTo</span>(<span class=\"pl-s1\">right</span>.<span class=\"pl-en\">getCode</span>());\n\t}\n\n}\n\n<span class=\"pl-c\">// Class mockable</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">LambdaVariant</span> {\n\n\t<span class=\"pl-k\">public</span> &lt;<span class=\"pl-smi\">T</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">HasCode</span> &amp; <span class=\"pl-smi\">HasName</span>&gt; <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-en\">sortedChoices</span>(<span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-s1\">entries</span>) {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-s1\">entries</span>.<span class=\"pl-en\">stream</span>()\n\t\t\t.<span class=\"pl-en\">sorted</span>((<span class=\"pl-s1\">left</span>, <span class=\"pl-s1\">right</span>) -&gt; <span class=\"pl-en\">compareCodes</span>(<span class=\"pl-s1\">left</span>, <span class=\"pl-s1\">right</span>))\n\t\t\t.<span class=\"pl-en\">toList</span>();\n\t}\n\n\t<span class=\"pl-k\">private</span> &lt;<span class=\"pl-smi\">T</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">HasCode</span>&gt; <span class=\"pl-smi\">int</span> <span class=\"pl-en\">compareCodes</span>(<span class=\"pl-smi\">T</span> <span class=\"pl-s1\">left</span>, <span class=\"pl-smi\">T</span> <span class=\"pl-s1\">right</span>) {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-s1\">left</span>.<span class=\"pl-en\">getCode</span>().<span class=\"pl-en\">compareTo</span>(<span class=\"pl-s1\">right</span>.<span class=\"pl-en\">getCode</span>());\n\t}\n\n}\n\n<span class=\"pl-c\">// Interfaces</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">HasCode</span> {\n\t<span class=\"pl-smi\">Integer</span> <span class=\"pl-en\">getCode</span>();\n}\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">HasName</span> {\n\t<span class=\"pl-smi\">String</span> <span class=\"pl-en\">getName</span>();\n}\n\n<span class=\"pl-c\">// Test classes</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">MethodReferenceVariantTest</span> {\n\n\t<span class=\"pl-k\">private</span> <span class=\"pl-smi\">MethodReferenceVariant</span> <span class=\"pl-s1\">mock</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">MethodReferenceVariant</span>.<span class=\"pl-k\">class</span>);\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n\t<span class=\"pl-smi\">void</span> <span class=\"pl-en\">shouldNeverFail</span>() {\n\t\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-c1\">true</span>).<span class=\"pl-en\">isTrue</span>();\n\t}\n\n}\n\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">LambdaVariantTest</span> {\n\n\t<span class=\"pl-k\">private</span> <span class=\"pl-smi\">LambdaVariant</span> <span class=\"pl-s1\">mock</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">LambdaVariant</span>.<span class=\"pl-k\">class</span>);\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n\t<span class=\"pl-smi\">void</span> <span class=\"pl-en\">shouldNeverFail</span>() {\n\t\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-c1\">true</span>).<span class=\"pl-en\">isTrue</span>();\n\t}\n\n}</pre></div>\n<p dir=\"auto\">These 6 classes / interfaces are sufficient to reproduce the issue for me but if more info is required I'm happy to provide it.</p>",
                "resourcePath": "/mockito/mockito/issues/3045",
                "createdAt": "2023-06-26T16:31:11Z",
                "labels": {
                  "edges": []
                }
              }
            },
            {
              "node": {
                "number": 3047,
                "url": "https://github.com/mockito/mockito/issues/3047",
                "title": "Mockito unit tests are failing after upgrading from Spring Boot 2.7.x to Spring Boot 3.1.x",
                "bodyHTML": "<p dir=\"auto\">Mockito that comes with spring-boot-starter-test 3.1.x version are failing the unit tests with the following errors:<br>\nCaused by: org.mockito.exceptions.base.MockitoInitializationException:<br>\nCould not initialize inline Byte Buddy mock maker.<br>\nIt appears as if your JDK does not supply a working agent attachment mechanism.<br>\nJava               : 17<br>\nJVM vendor name    : Oracle Corporation<br>\nJVM vendor version : 17.0.4.1+1-LTS-2<br>\nJVM name           : Java HotSpot(TM) 64-Bit Server VM<br>\nJVM version        : 17.0.4.1+1-LTS-2<br>\nJVM info           : mixed mode, sharing<br>\nOS name            : Windows 10<br>\nOS version         : 10.0<br>\nI have Oracle OpenJDK Java 17 installed and everything was working fine before updating to Spring Boot 3.1</p>\n<p dir=\"auto\">check that</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/3047",
                "createdAt": "2023-06-28T20:15:50Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Deep Stubs Incompatible With Mocking Enum",
        "url": "https://github.com/mockito/mockito/pull/3167",
        "resourcePath": "/mockito/mockito/pull/3167",
        "createdAt": "2023-11-02T09:19:58Z",
        "number": 3167,
        "mergeCommit": {
          "oid": "74633b856efa0bba224ff74db6c75f58d3afe413",
          "message": "Throw error when mocking sealed abstract enum (#3167)\n\nMockito can't mock abstract enums in Java 15 or later\r\nbecause they are now marked as sealed.\r\nSo Mockito reports that now with a better error message.\r\n\r\nFixes #2984",
          "commitUrl": "https://github.com/mockito/mockito/commit/74633b856efa0bba224ff74db6c75f58d3afe413",
          "parents": {
            "nodes": [
              {
                "oid": "290a8e1d1061cdd9236a4cadf2f91cb4143d0b78",
                "message": "Apply spotless to all java projects (#3184)"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineDelegateByteBuddyMockMaker.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/test/java/org/mockito/internal/stubbing/answers/DeepStubReturnsEnumJava11Test.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/java21/src/test/java/org/mockito/internal/stubbing/answers/DeepStubReturnsEnumJava21Test.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85eaRt12gAoYjRiZWEzZTlmOTcyMmE3ZjdjZGI2ODVjODVkYmQzYTdlMzE5NWIxYg",
                "url": "https://github.com/mockito/mockito/pull/3167/commits/b4bea3e9f9722a7f7cdb685c85dbd3a7e3195b1b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2984,
                "url": "https://github.com/mockito/mockito/issues/2984",
                "title": "Deep Stubs Incompatible With Mocking Enum",
                "bodyHTML": "<p dir=\"auto\"><strong>The following code works:</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@ExtendWith(MockitoExtension.class)\nclass BoardTest {\n    @Mock\n    Piece piece;\n\n    private Board instance;\n\n    @BeforeEach\n    void setUp() {\n        instance = new Board(piece, 10);\n    }\n\n    @Test\n    void getCostPerSpace() {\n        when(piece.getPiece()).thenReturn(PieceType.SQUARE);\n        double expected = 2d;\n        assertThat(instance.getCostPerSpace()).isEqualTo(expected);\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@ExtendWith(MockitoExtension.class)\nclass BoardTest {\n    @Mock\n    Piece piece;\n\n    private Board instance;\n\n    @BeforeEach\n    void setUp() {\n        instance = new Board(piece, 10);\n    }\n\n    @Test\n    void getCostPerSpace() {\n        when(piece.getPiece()).thenReturn(PieceType.SQUARE);\n        double expected = 2d;\n        assertThat(instance.getCostPerSpace()).isEqualTo(expected);\n    }\n}\n</code></pre></div>\n<p dir=\"auto\"><strong>The following code fails:</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@ExtendWith(MockitoExtension.class)\nclass BoardTest {\n    @Mock(answer = RETURNS_DEEP_STUBS)\n    Piece piece;\n\n    private Board instance;\n\n    @BeforeEach\n    void setUp() {\n        instance = new Board(piece, 10);\n    }\n\n    @Test\n    void getCostPerSpace() {\n        when(piece.getPiece().getCostPerPieceSpace()).thenReturn(2.5d);\n        double expected = 2d;\n        assertThat(instance.getCostPerSpace()).isEqualTo(expected);\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@ExtendWith(MockitoExtension.class)\nclass BoardTest {\n    @Mock(answer = RETURNS_DEEP_STUBS)\n    Piece piece;\n\n    private Board instance;\n\n    @BeforeEach\n    void setUp() {\n        instance = new Board(piece, 10);\n    }\n\n    @Test\n    void getCostPerSpace() {\n        when(piece.getPiece().getCostPerPieceSpace()).thenReturn(2.5d);\n        double expected = 2d;\n        assertThat(instance.getCostPerSpace()).isEqualTo(expected);\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">with the following error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"You are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: Unsupported settings with this type 'com.senorpez.game.PieceType'\norg.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: class com.senorpez.game.PieceType\n\nIf you're not sure why you're getting this error, please open an issue on GitHub.\"><pre class=\"notranslate\"><code class=\"notranslate\">You are seeing this disclaimer because Mockito is configured to create inlined mocks.\nYou can learn about inline mocks and their limitations under item #39 of the Mockito class javadoc.\n\nUnderlying exception : org.mockito.exceptions.base.MockitoException: Unsupported settings with this type 'com.senorpez.game.PieceType'\norg.mockito.exceptions.base.MockitoException: \nMockito cannot mock this class: class com.senorpez.game.PieceType\n\nIf you're not sure why you're getting this error, please open an issue on GitHub.\n</code></pre></div>\n<p dir=\"auto\"><strong>Mockito Version:</strong> 5.3.0</p>",
                "resourcePath": "/mockito/mockito/issues/2984",
                "createdAt": "2023-04-22T03:31:05Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #3160 : Fix interference between spies when spying on records.",
        "url": "https://github.com/mockito/mockito/pull/3173",
        "resourcePath": "/mockito/mockito/pull/3173",
        "createdAt": "2023-11-20T04:31:24Z",
        "number": 3173,
        "mergeCommit": {
          "oid": "b6554b29ed6c204a0dd4b8a670877fe0ba2e808b",
          "message": "Fix interference between spies when spying on records (#3173)\n\nFixes #3160\r\n\r\nCo-authored-by: Mika\u00ebl Francoeur <mikael.francoeur@ticketmaster.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/b6554b29ed6c204a0dd4b8a670877fe0ba2e808b",
          "parents": {
            "nodes": [
              {
                "oid": "bfee15dda7acc41ef497d8f8a44c74dacce2933a",
                "message": "Bump com.diffplug.spotless from 6.22.0 to 6.23.0 (#3182)\n\nBumps com.diffplug.spotless from 6.22.0 to 6.23.0.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.diffplug.spotless\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/bytebuddy/InlineDelegateByteBuddyMockMaker.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "subprojects/java21/src/test/java/org/mockito/java21/.gitkeep"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/java21/src/test/java/org/mockito/java21/RecordTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85f3W5e2gAoNTEwYTM2YTY0YzdkNGY0ZDg3OWZjMjVlZTgxMjVhYjczYWY5ODc0ZQ",
                "url": "https://github.com/mockito/mockito/pull/3173/commits/510a36a64c7d4f4d879fc25ee8125ab73af9874e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3160,
                "url": "https://github.com/mockito/mockito/issues/3160",
                "title": "Annotation-based spying on a generic class breaks existing final/inline Spies",
                "bodyHTML": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">I encountered an issue with JUnit5/Mockito when using <code class=\"notranslate\">@Spy</code> annotation with generic types.<br>\nSuch configuration seems to break existing spies of Java <code class=\"notranslate\">record</code> instances (inline mocks). The issue also occurs when using <code class=\"notranslate\">Mockito.spy()</code> directly instead of the <code class=\"notranslate\">@Spy</code> annotation. Example:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@ExtendWith(MockitoExtension.class)\nclass GenericSpyFailingTest {\n\n  // Removing this spy makes the test pass.\n  @Spy\n  private final List&lt;String&gt; genericSpy = List.of(&quot;item A&quot;, &quot;item B&quot;);\n\n  @Spy\n  private ExampleRecord exampleRecord = new ExampleRecord(&quot;some value&quot;);\n\n  @Test\n  void exampleServiceUsesDependency() {\n    // The mocked record has all attributes set to null\n    // despite being explicitly defined.\n    assertNotNull(exampleRecord.someParameter());\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">ExtendWith</span>(<span class=\"pl-smi\">MockitoExtension</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">GenericSpyFailingTest</span> {\n\n  <span class=\"pl-c\">// Removing this spy makes the test pass.</span>\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Spy</span>\n  <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">genericSpy</span> = <span class=\"pl-smi\">List</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-s\">\"item A\"</span>, <span class=\"pl-s\">\"item B\"</span>);\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Spy</span>\n  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">ExampleRecord</span> <span class=\"pl-s1\">exampleRecord</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ExampleRecord</span>(<span class=\"pl-s\">\"some value\"</span>);\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n  <span class=\"pl-smi\">void</span> <span class=\"pl-en\">exampleServiceUsesDependency</span>() {\n    <span class=\"pl-c\">// The mocked record has all attributes set to null</span>\n    <span class=\"pl-c\">// despite being explicitly defined.</span>\n    <span class=\"pl-en\">assertNotNull</span>(<span class=\"pl-s1\">exampleRecord</span>.<span class=\"pl-en\">someParameter</span>());\n  }\n}</pre></div>\n<p dir=\"auto\">See <a href=\"https://github.com/matej-staron/mockito-junit-examples\">the example repo</a> with tests to reproduce.</p>\n<p dir=\"auto\">Any idea why this happens? I couldn't find any mention of limitations related to using <code class=\"notranslate\">@Spy</code> with generics.</p>\n<p dir=\"auto\">This was originally encountered while using <code class=\"notranslate\">mockito-inline</code> and an older Mockito version, but it is also reproducible with the latest <code class=\"notranslate\">mockito-core</code>, as shown in the linked repo.</p>\n<p dir=\"auto\">Any help is appreciated!</p>",
                "resourcePath": "/mockito/mockito/issues/3160",
                "createdAt": "2023-10-27T14:59:50Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "#3000: fix ArrayIndexOutOfBoundsException",
        "url": "https://github.com/mockito/mockito/pull/3190",
        "resourcePath": "/mockito/mockito/pull/3190",
        "createdAt": "2023-12-01T16:15:53Z",
        "number": 3190,
        "mergeCommit": {
          "oid": "aecf6b5399451690f42d5db1a0c50796d4c5c67e",
          "message": "Handle mismatch of number of type arguments (#3190)\n\nFixes #3000\r\n\r\nCo-authored-by: J\u00f6rg von Frantzius <joerg.frantzius@aperto.com>",
          "commitUrl": "https://github.com/mockito/mockito/commit/aecf6b5399451690f42d5db1a0c50796d4c5c67e",
          "parents": {
            "nodes": [
              {
                "oid": "d742cc880938850619008b9de4627bc7fb3d605b",
                "message": "Bump com.diffplug.spotless from 6.23.1 to 6.23.2 (#3188)\n\nBumps com.diffplug.spotless from 6.23.1 to 6.23.2.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.diffplug.spotless\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/configuration/injection/filter/TypeBasedCandidateFilter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/GenericTypeMockTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85g6kki2gAoZDBjMzRmYzhmYWI3OTI4ZGEwZTM2ZjA1NjEwMzgwZTBiMTJmMDkwMA",
                "url": "https://github.com/mockito/mockito/pull/3190/commits/d0c34fc8fab7928da0e36f05610380e0b12f0900"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3000,
                "url": "https://github.com/mockito/mockito/issues/3000",
                "title": "ArrayIndexOutOfBoundsException with Version 5.3.1",
                "bodyHTML": "<p dir=\"auto\">Hey, after migrated to Version 5.3.1 i get the following Error during Testexecution:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1\n\tat org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter.recurseOnTypeArguments(TypeBasedCandidateFilter.java:96)\n\tat org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter.isCompatibleTypes(TypeBasedCandidateFilter.java:51)\n\tat org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter.recurseOnTypeArguments(TypeBasedCandidateFilter.java:145)\n\tat org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter.isCompatibleTypes(TypeBasedCandidateFilter.java:51)\n\tat org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter.filterCandidate(TypeBasedCandidateFilter.java:167)\n\tat org.mockito.internal.configuration.injection.PropertyAndSetterInjection.injectMockCandidatesOnFields(PropertyAndSetterInjection.java:136)\n\tat org.mockito.internal.configuration.injection.PropertyAndSetterInjection.injectMockCandidates(PropertyAndSetterInjection.java:113)\n\tat org.mockito.internal.configuration.injection.PropertyAndSetterInjection.processInjection(PropertyAndSetterInjection.java:81)\n\tat org.mockito.internal.configuration.injection.MockInjectionStrategy.process(MockInjectionStrategy.java:68)\n\tat org.mockito.internal.configuration.injection.MockInjectionStrategy.relayProcessToNextStrategy(MockInjectionStrategy.java:91)\n\tat org.mockito.internal.configuration.injection.MockInjectionStrategy.process(MockInjectionStrategy.java:71)\n\tat org.mockito.internal.configuration.injection.MockInjectionStrategy.relayProcessToNextStrategy(MockInjectionStrategy.java:91)\n\tat org.mockito.internal.configuration.injection.MockInjectionStrategy.process(MockInjectionStrategy.java:71)\n\tat org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.apply(MockInjection.java:88)\n\tat org.mockito.internal.configuration.DefaultInjectionEngine.injectMocksOnFields(DefaultInjectionEngine.java:26)\n\tat org.mockito.internal.configuration.InjectingAnnotationEngine.injectCloseableMocks(InjectingAnnotationEngine.java:118)\n\tat org.mockito.internal.configuration.InjectingAnnotationEngine.processInjectMocks(InjectingAnnotationEngine.java:61)\n\tat org.mockito.internal.configuration.InjectingAnnotationEngine.process(InjectingAnnotationEngine.java:48)\n\tat org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:81)\n\tat org.mockito.internal.framework.DefaultMockitoSession.&lt;init&gt;(DefaultMockitoSession.java:43)\n\tat org.mockito.internal.session.DefaultMockitoSessionBuilder.startMocking(DefaultMockitoSessionBuilder.java:83)\n\tat org.mockito.junit.jupiter.MockitoExtension.beforeEach(MockitoExtension.java:153)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachCallbacks$2(TestMethodTestDescriptor.java:166)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:202)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachCallbacks(TestMethodTestDescriptor.java:165)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:132)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\n\tSuppressed: java.lang.NullPointerException: Cannot invoke &quot;java.util.Set.forEach(java.util.function.Consumer)&quot; because the return value of &quot;org.junit.jupiter.api.extension.ExtensionContext$Store.remove(Object, java.lang.Class)&quot; is null\n\t\tat org.mockito.junit.jupiter.MockitoExtension.afterEach(MockitoExtension.java:184)\n\t\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAfterEachCallbacks$12(TestMethodTestDescriptor.java:260)\n\t\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$13(TestMethodTestDescriptor.java:276)\n\t\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\t\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$14(TestMethodTestDescriptor.java:276)\n\t\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\t\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAllAfterMethodsOrCallbacks(TestMethodTestDescriptor.java:275)\n\t\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAfterEachCallbacks(TestMethodTestDescriptor.java:259)\n\t\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:144)\n\t\t... 49 more\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.ArrayIndexOutOfBoundsException: Index 1 out of bounds for length 1\n\tat org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter.recurseOnTypeArguments(TypeBasedCandidateFilter.java:96)\n\tat org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter.isCompatibleTypes(TypeBasedCandidateFilter.java:51)\n\tat org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter.recurseOnTypeArguments(TypeBasedCandidateFilter.java:145)\n\tat org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter.isCompatibleTypes(TypeBasedCandidateFilter.java:51)\n\tat org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter.filterCandidate(TypeBasedCandidateFilter.java:167)\n\tat org.mockito.internal.configuration.injection.PropertyAndSetterInjection.injectMockCandidatesOnFields(PropertyAndSetterInjection.java:136)\n\tat org.mockito.internal.configuration.injection.PropertyAndSetterInjection.injectMockCandidates(PropertyAndSetterInjection.java:113)\n\tat org.mockito.internal.configuration.injection.PropertyAndSetterInjection.processInjection(PropertyAndSetterInjection.java:81)\n\tat org.mockito.internal.configuration.injection.MockInjectionStrategy.process(MockInjectionStrategy.java:68)\n\tat org.mockito.internal.configuration.injection.MockInjectionStrategy.relayProcessToNextStrategy(MockInjectionStrategy.java:91)\n\tat org.mockito.internal.configuration.injection.MockInjectionStrategy.process(MockInjectionStrategy.java:71)\n\tat org.mockito.internal.configuration.injection.MockInjectionStrategy.relayProcessToNextStrategy(MockInjectionStrategy.java:91)\n\tat org.mockito.internal.configuration.injection.MockInjectionStrategy.process(MockInjectionStrategy.java:71)\n\tat org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection.apply(MockInjection.java:88)\n\tat org.mockito.internal.configuration.DefaultInjectionEngine.injectMocksOnFields(DefaultInjectionEngine.java:26)\n\tat org.mockito.internal.configuration.InjectingAnnotationEngine.injectCloseableMocks(InjectingAnnotationEngine.java:118)\n\tat org.mockito.internal.configuration.InjectingAnnotationEngine.processInjectMocks(InjectingAnnotationEngine.java:61)\n\tat org.mockito.internal.configuration.InjectingAnnotationEngine.process(InjectingAnnotationEngine.java:48)\n\tat org.mockito.MockitoAnnotations.openMocks(MockitoAnnotations.java:81)\n\tat org.mockito.internal.framework.DefaultMockitoSession.&lt;init&gt;(DefaultMockitoSession.java:43)\n\tat org.mockito.internal.session.DefaultMockitoSessionBuilder.startMocking(DefaultMockitoSessionBuilder.java:83)\n\tat org.mockito.junit.jupiter.MockitoExtension.beforeEach(MockitoExtension.java:153)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeEachCallbacks$2(TestMethodTestDescriptor.java:166)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeBeforeMethodsOrCallbacksUntilExceptionOccurs$6(TestMethodTestDescriptor.java:202)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeMethodsOrCallbacksUntilExceptionOccurs(TestMethodTestDescriptor.java:202)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeBeforeEachCallbacks(TestMethodTestDescriptor.java:165)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:132)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)\n\tat org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)\n\tat org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:147)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:127)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:90)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:55)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:102)\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:54)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)\n\tat org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:50)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)\n\tat org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)\n\tSuppressed: java.lang.NullPointerException: Cannot invoke \"java.util.Set.forEach(java.util.function.Consumer)\" because the return value of \"org.junit.jupiter.api.extension.ExtensionContext$Store.remove(Object, java.lang.Class)\" is null\n\t\tat org.mockito.junit.jupiter.MockitoExtension.afterEach(MockitoExtension.java:184)\n\t\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAfterEachCallbacks$12(TestMethodTestDescriptor.java:260)\n\t\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$13(TestMethodTestDescriptor.java:276)\n\t\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\t\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeAllAfterMethodsOrCallbacks$14(TestMethodTestDescriptor.java:276)\n\t\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\n\t\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAllAfterMethodsOrCallbacks(TestMethodTestDescriptor.java:275)\n\t\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeAfterEachCallbacks(TestMethodTestDescriptor.java:259)\n\t\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:144)\n\t\t... 49 more\n</code></pre></div>\n<p dir=\"auto\">The Test runs under 5.1.0 without any Issue!!</p>\n<p dir=\"auto\">The Test looks like the following (just snippets):<br>\nTestclass:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@ExtendWith(MockitoExtension.class)\n@TestInstance(TestInstance.Lifecycle.PER_CLASS)\npublic class StorageMessageBaseControllerTest {\n\n    @Mock\n    Instance&lt;Storable&lt;?&gt;&gt; storableInstance;\n    @Mock\n    EntityManager em;\n    @Spy\n    @InjectMocks\n    StorageMessageBaseController testee;\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">ExtendWith</span>(<span class=\"pl-smi\">MockitoExtension</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">TestInstance</span>(<span class=\"pl-smi\">TestInstance</span>.<span class=\"pl-s1\">Lifecycle</span>.<span class=\"pl-c1\">PER_CLASS</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">StorageMessageBaseControllerTest</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n    <span class=\"pl-smi\">Instance</span>&lt;<span class=\"pl-smi\">Storable</span>&lt;?&gt;&gt; <span class=\"pl-s1\">storableInstance</span>;\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n    <span class=\"pl-smi\">EntityManager</span> <span class=\"pl-s1\">em</span>;\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Spy</span>\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">InjectMocks</span>\n    <span class=\"pl-smi\">StorageMessageBaseController</span> <span class=\"pl-s1\">testee</span>;</pre></div>\n<p dir=\"auto\">Controller:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Dependent\npublic class StorageMessageBaseController extends MessageControllerBase&lt;StorageMessage&gt;, Storable&gt; {\n\n    @Inject\n    Instance&lt;AbstractEntityController&lt;? extends Storable, ?&gt;&gt; controllerInstance;\n    @Inject\n    @WithCaching\n    Instance&lt;Storable&lt;?&gt;&gt; storableInstance;\n    @Inject\n    ObjectMapper objectMapper;\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Dependent</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">StorageMessageBaseController</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">MessageControllerBase</span>&lt;<span class=\"pl-smi\">StorageMessage</span>&gt;, <span class=\"pl-s1\">Storable</span>&gt; {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Inject</span>\n    <span class=\"pl-smi\">Instance</span>&lt;<span class=\"pl-smi\">AbstractEntityController</span>&lt;? <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">Storable</span>, ?&gt;&gt; <span class=\"pl-s1\">controllerInstance</span>;\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Inject</span>\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">WithCaching</span>\n    <span class=\"pl-smi\">Instance</span>&lt;<span class=\"pl-smi\">Storable</span>&lt;?&gt;&gt; <span class=\"pl-s1\">storableInstance</span>;\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Inject</span>\n    <span class=\"pl-smi\">ObjectMapper</span> <span class=\"pl-s1\">objectMapper</span>;</pre></div>\n<p dir=\"auto\">When i remove the <code class=\"notranslate\">controllerInstance</code> (only for testing) field in production code, the test runs.....<br>\nAnyone a clue whats causing this behaviour.</p>",
                "resourcePath": "/mockito/mockito/issues/3000",
                "createdAt": "2023-05-05T13:37:30Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #3219: Add support for static mocks on DoNotMockEnforcer",
        "url": "https://github.com/mockito/mockito/pull/3220",
        "resourcePath": "/mockito/mockito/pull/3220",
        "createdAt": "2024-01-02T10:09:47Z",
        "number": 3220,
        "mergeCommit": {
          "oid": "917352266b61870c47a7da97965778f0288d50cb",
          "message": "Add support for static mocks on DoNotMockEnforcer (#3220)\n\nFixes #3219",
          "commitUrl": "https://github.com/mockito/mockito/commit/917352266b61870c47a7da97965778f0288d50cb",
          "parents": {
            "nodes": [
              {
                "oid": "a0214364c36c840b259a4e5a0b656378e47d90df",
                "message": "Bump com.diffplug.spotless from 6.23.3 to 6.24.0 (#3236)\n\nBumps com.diffplug.spotless from 6.23.3 to 6.24.0.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.diffplug.spotless\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/creation/settings/CreationSettings.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/MockNameImpl.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/mock/MockCreationSettings.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/mock/MockType.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/plugins/DoNotMockEnforcer.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/java/org/mockito/plugins/DoNotMockEnforcerWithType.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/util/MockNameImplTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/annotation/DoNotMockTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/extTest/src/test/java/org/mockitousage/plugins/donotmockenforcer/DoNotmockEnforcerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/extTest/src/test/java/org/mockitousage/plugins/donotmockenforcer/MyDoNotMockEnforcer.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85jCnmX2gAoOGMwMjM5Y2VhOTFkNWIyOTY5Mjc3NGY3ZmM3MGY2OWVhYzA3NDkwMQ",
                "url": "https://github.com/mockito/mockito/pull/3220/commits/8c0239cea91d5b29692774f7fc70f69eac074901"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3219,
                "url": "https://github.com/mockito/mockito/issues/3219",
                "title": "Mockito#mockStatic(Class<?>) skips DoNotMockEnforcer",
                "bodyHTML": "<p dir=\"auto\">This is pretty straightforward and being followed up by a PR, but essentially, any calls to <code class=\"notranslate\">mockStatic</code> skip the <code class=\"notranslate\">DoNotMockEnforcer</code> entirely.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@DoNotMock\nclass TypeAnnotatedWithDoNotMock {}\n\n// This does not throw an exception. Checking the stack, I see that DoNotMockEnforcer is never called.\nMockito.mockStatic(TypeAnnotatedWithDoNotMock.class);\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">DoNotMock</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">TypeAnnotatedWithDoNotMock</span> {}\n\n<span class=\"pl-c\">// This does not throw an exception. Checking the stack, I see that DoNotMockEnforcer is never called.</span>\n<span class=\"pl-smi\">Mockito</span>.<span class=\"pl-en\">mockStatic</span>(<span class=\"pl-smi\">TypeAnnotatedWithDoNotMock</span>.<span class=\"pl-k\">class</span>);</pre></div>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>",
                "resourcePath": "/mockito/mockito/issues/3219",
                "createdAt": "2024-01-02T10:01:37Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Align Javadoc configuration to Java 21 standards",
        "url": "https://github.com/mockito/mockito/pull/3230",
        "resourcePath": "/mockito/mockito/pull/3230",
        "createdAt": "2024-01-09T21:27:32Z",
        "number": 3230,
        "mergeCommit": {
          "oid": "e4fa6391b7ba988a4f7ea6df2cce42b8ab64c926",
          "message": "Align Javadoc configuration to Java 21 standards (#3230)\n\nThis also upgrades highlight.js to version 11.9.0 and uses\r\nits cdnjs distribution.",
          "commitUrl": "https://github.com/mockito/mockito/commit/e4fa6391b7ba988a4f7ea6df2cce42b8ab64c926",
          "parents": {
            "nodes": [
              {
                "oid": "71e2fdbf4a4ff393a616d8583e87d6bbc21d0f1f",
                "message": "Bump org.gradle.toolchains.foojay-resolver-convention (#3234)\n\nBumps org.gradle.toolchains.foojay-resolver-convention from 0.7.0 to 0.8.0.\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.gradle.toolchains.foojay-resolver-convention\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/javadoc/js/index.js"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/javadoc/js/jdk6-project-version-insert.js"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/javadoc/js/jdk6-project-version-insert.min.js"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/javadoc/js/jquery-1.7.min.js"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "src/javadoc/stylesheet.css"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "src/main/javadoc/favicon.ico"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "src/main/javadoc/mockito-theme.css"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "src/main/javadoc/org/mockito/logo.png"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "src/main/javadoc/org/mockito/logo@2x.png"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "subprojects/junit-jupiter/junit-jupiter.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85jn1Uh2gAoMTc5NTljYTQ1ODZjMmU4NWZhOTY5ZDMyMmQxNTE3NjM4M2ZjNDJkYQ",
                "url": "https://github.com/mockito/mockito/pull/3230/commits/17959ca4586c2e85fa969d322d15176383fc42da"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 60,
                "url": "https://github.com/mockito/mockito.github.io/issues/60",
                "title": "The style of javadoc pages seem to be broken",
                "bodyHTML": "<p dir=\"auto\"><a href=\"https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html\" rel=\"nofollow\">https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html</a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/24759802/289268110-498042a0-acc6-417f-bbdb-f96f6ab84c87.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTIwNzA5NTMsIm5iZiI6MTcxMjA3MDY1MywicGF0aCI6Ii8yNDc1OTgwMi8yODkyNjgxMTAtNDk4MDQyYTAtYWNjNi00MTdmLWJiZGItZjk2ZjZhYjg0Yzg3LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MDIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDAyVDE1MTA1M1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWQwZTE2MzMwZDM0NGQ4YTRiYTUwODBiOTQ5ZDg2MzA0YzE5ZjM3MjBkZTUwNzg1Y2VlMmNhNmZlZmIyNzcyNGMmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.DQ1Fmel6RNvT6Gcw6OGRmGg465s00JAQX2CDj09Pfjc\"><img src=\"https://private-user-images.githubusercontent.com/24759802/289268110-498042a0-acc6-417f-bbdb-f96f6ab84c87.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTIwNzA5NTMsIm5iZiI6MTcxMjA3MDY1MywicGF0aCI6Ii8yNDc1OTgwMi8yODkyNjgxMTAtNDk4MDQyYTAtYWNjNi00MTdmLWJiZGItZjk2ZjZhYjg0Yzg3LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MDIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDAyVDE1MTA1M1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWQwZTE2MzMwZDM0NGQ4YTRiYTUwODBiOTQ5ZDg2MzA0YzE5ZjM3MjBkZTUwNzg1Y2VlMmNhNmZlZmIyNzcyNGMmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.DQ1Fmel6RNvT6Gcw6OGRmGg465s00JAQX2CDj09Pfjc\" alt=\"\u56fe\u7247\" style=\"max-width: 100%;\"></a></p>",
                "resourcePath": "/mockito/mockito.github.io/issues/60",
                "createdAt": "2023-12-09T11:20:53Z",
                "labels": {
                  "edges": []
                }
              }
            },
            {
              "node": {
                "number": 3212,
                "url": "https://github.com/mockito/mockito/issues/3212",
                "title": "Documentation on javadoc.io needs attention",
                "bodyHTML": "<p dir=\"auto\">Hello</p>\n<p dir=\"auto\">Since most of your reference documentation is based on javadoc.io I just want to point your attention to the javadoc.io issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1714239892\" data-permission-text=\"Title is private\" data-url=\"https://github.com/maxcellent/javadoc.io/issues/159\" data-hovercard-type=\"issue\" data-hovercard-url=\"/maxcellent/javadoc.io/issues/159/hovercard\" href=\"https://github.com/maxcellent/javadoc.io/issues/159\">maxcellent/javadoc.io#159</a></p>\n<p dir=\"auto\">It seems that this issue is of minor importance to the javadoc.io team<br>\nbut maybe it is important for you...</p>\n<p dir=\"auto\">As a work around:<br>\nMaybe there is a way to generate your documentation without the search field?</p>\n<p dir=\"auto\">Best regards,</p>\n<p dir=\"auto\">Michael</p>",
                "resourcePath": "/mockito/mockito/issues/3212",
                "createdAt": "2023-12-22T14:01:46Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #3229: Resolve test generic arguments",
        "url": "https://github.com/mockito/mockito/pull/3257",
        "resourcePath": "/mockito/mockito/pull/3257",
        "createdAt": "2024-02-01T11:59:57Z",
        "number": 3257,
        "mergeCommit": {
          "oid": "219350728d0f1bad9739bfa054074d6c43f1bdb1",
          "message": "Handle primitives when injecting captors (#3257)\n\nFixes #3229",
          "commitUrl": "https://github.com/mockito/mockito/commit/219350728d0f1bad9739bfa054074d6c43f1bdb1",
          "parents": {
            "nodes": [
              {
                "oid": "9972676845b4b01856002f9b72f48e7fd2fa0d56",
                "message": "Bump gradle/wrapper-validation-action from 1.1.0 to 2.0.0 (#3258)\n\nBumps [gradle/wrapper-validation-action](https://github.com/gradle/wrapper-validation-action) from 1.1.0 to 2.0.0.\r\n- [Release notes](https://github.com/gradle/wrapper-validation-action/releases)\r\n- [Commits](https://github.com/gradle/wrapper-validation-action/compare/v1.1.0...v2.0.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: gradle/wrapper-validation-action\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-major\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/util/reflection/GenericMaster.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockito/internal/util/reflection/GenericMasterTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "subprojects/junit-jupiter/src/test/java/org/mockitousage/annotation/CaptorAnnotationWithPrimitiveTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85lsQ_b2gAoOTE1ZjljOGFkOTlkMTZiNTUyMThlMjU5NmNiMzFiOWIzYTU0MThhNQ",
                "url": "https://github.com/mockito/mockito/pull/3257/commits/915f9c8ad99d16b55218e2596cb31b9b3a5418a5"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3229,
                "url": "https://github.com/mockito/mockito/issues/3229",
                "title": "`@Captor` test parameters don't work with primitive type arguments",
                "bodyHTML": "<p dir=\"auto\">That's the first time I'm actually contributing to any public project.<br>\nI apologize if I'm missing important informations about this issue.</p>\n<h3 dir=\"auto\">Description of the error :</h3>\n<p dir=\"auto\">I'm using java 21 and the dependency org.mockito:mockito-junit-jupiter version 5.8.0<br>\nThe issue occurs when using an <code class=\"notranslate\">ArgumentCaptor</code> as a test method parameter annotated with <code class=\"notranslate\">@Captor</code>, if it is used to capture the argument of a method that takes a primitive type, it throws a <code class=\"notranslate\">NullPointerException</code> trying to unbox a <code class=\"notranslate\">null</code> value to the primitive type.<br>\nThis only occurs when using <code class=\"notranslate\">@Captor</code> on a parameter. It works fine on a field or as a local <code class=\"notranslate\">ArgumentCaptor</code>.<br>\nThe <code class=\"notranslate\">@Captor</code> parameters also work as expected with non-primitive types (Well kinda, I'll go back to this later)</p>\n<h3 dir=\"auto\">Reproduction :</h3>\n<p dir=\"auto\">Here's the sample code to reproduce the error, followed by the corresponding stacktrace (I had to order the test because the occurence of the error causes all other tests to fail somehow) :</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@ExtendWith(MockitoExtension.class)\n@TestMethodOrder(MethodOrderer.OrderAnnotation.class)\npublic class ReproductionTest {\n    @Mock\n    private Foo foo;\n\n    @Captor\n    private ArgumentCaptor&lt;Integer&gt; annotatedFieldCaptor;\n\n    @Test\n    @Order(1)\n    void this_works_fine() {\n        ArgumentCaptor&lt;Integer&gt; localCaptor = ArgumentCaptor.forClass(Integer.class);\n        testCaptor(localCaptor);\n    }\n\n    @Test\n    @Order(2)\n    void this_works_too() {\n        testCaptor(annotatedFieldCaptor);\n    }\n\n    @Test\n    @Order(3)\n    void this_throws_NullPointerException(@Captor ArgumentCaptor&lt;Integer&gt; annotatedParameterCaptor) {\n        testCaptor(annotatedParameterCaptor);\n    }\n\n    private void testCaptor(ArgumentCaptor&lt;Integer&gt; captor) {\n        doNothing().when(foo).doSomething(captor.capture());\n        foo.doSomething(1);\n        assertEquals(1, captor.getValue());\n    }\n\n    static class Foo {\n        void doSomething(int value) {\n        }\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">ExtendWith</span>(<span class=\"pl-smi\">MockitoExtension</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">TestMethodOrder</span>(<span class=\"pl-smi\">MethodOrderer</span>.<span class=\"pl-smi\">OrderAnnotation</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">ReproductionTest</span> {\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Mock</span>\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">Foo</span> <span class=\"pl-s1\">foo</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Captor</span>\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">ArgumentCaptor</span>&lt;<span class=\"pl-smi\">Integer</span>&gt; <span class=\"pl-s1\">annotatedFieldCaptor</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Order</span>(<span class=\"pl-c1\">1</span>)\n    <span class=\"pl-smi\">void</span> <span class=\"pl-en\">this_works_fine</span>() {\n        <span class=\"pl-smi\">ArgumentCaptor</span>&lt;<span class=\"pl-smi\">Integer</span>&gt; <span class=\"pl-s1\">localCaptor</span> = <span class=\"pl-smi\">ArgumentCaptor</span>.<span class=\"pl-en\">forClass</span>(<span class=\"pl-smi\">Integer</span>.<span class=\"pl-k\">class</span>);\n        <span class=\"pl-en\">testCaptor</span>(<span class=\"pl-s1\">localCaptor</span>);\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Order</span>(<span class=\"pl-c1\">2</span>)\n    <span class=\"pl-smi\">void</span> <span class=\"pl-en\">this_works_too</span>() {\n        <span class=\"pl-en\">testCaptor</span>(<span class=\"pl-s1\">annotatedFieldCaptor</span>);\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Order</span>(<span class=\"pl-c1\">3</span>)\n    <span class=\"pl-smi\">void</span> <span class=\"pl-en\">this_throws_NullPointerException</span>(<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Captor</span> <span class=\"pl-smi\">ArgumentCaptor</span>&lt;<span class=\"pl-smi\">Integer</span>&gt; <span class=\"pl-s1\">annotatedParameterCaptor</span>) {\n        <span class=\"pl-en\">testCaptor</span>(<span class=\"pl-s1\">annotatedParameterCaptor</span>);\n    }\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">testCaptor</span>(<span class=\"pl-smi\">ArgumentCaptor</span>&lt;<span class=\"pl-smi\">Integer</span>&gt; <span class=\"pl-s1\">captor</span>) {\n        <span class=\"pl-en\">doNothing</span>().<span class=\"pl-en\">when</span>(<span class=\"pl-s1\">foo</span>).<span class=\"pl-en\">doSomething</span>(<span class=\"pl-s1\">captor</span>.<span class=\"pl-en\">capture</span>());\n        <span class=\"pl-s1\">foo</span>.<span class=\"pl-en\">doSomething</span>(<span class=\"pl-c1\">1</span>);\n        <span class=\"pl-en\">assertEquals</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s1\">captor</span>.<span class=\"pl-en\">getValue</span>());\n    }\n\n    <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Foo</span> {\n        <span class=\"pl-smi\">void</span> <span class=\"pl-en\">doSomething</span>(<span class=\"pl-smi\">int</span> <span class=\"pl-s1\">value</span>) {\n        }\n    }\n}</pre></div>\n<p dir=\"auto\">Unsurprisingly, the first two tests pass, but the third fails with the following stacktrace :</p>\n<blockquote>\n<p dir=\"auto\">java.lang.NullPointerException: Cannot invoke \"java.lang.Integer.intValue()\" because the return value of \"org.mockito.ArgumentCaptor.capture()\" is null</p>\n<p dir=\"auto\">at org.test.ReproductionTest.testCaptor(ReproductionTest.java:44)<br>\nat org.test.ReproductionTest.this_throws_NullPointerException(ReproductionTest.java:40)<br>\nat java.base/java.lang.reflect.Method.invoke(Method.java:580)<br>\nat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)<br>\nat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)</p>\n</blockquote>\n<h3 dir=\"auto\">Wait, there's more, and my proposition of solution</h3>\n<p dir=\"auto\">I investigated the issue using the debugger and noticed pretty quickly what the problem was. The \"capture type\" was always set to <code class=\"notranslate\">Object</code>, no matter what the generic type inside the <code class=\"notranslate\">ArgumentCaptor</code> was (even non primitive). It's not the case for local and field captors, which have the expected \"capture type\". Knowing that, since the <code class=\"notranslate\">capture()</code> method return <code class=\"notranslate\">defaultValue(clazz)</code>, it always return <code class=\"notranslate\">null</code>. It still works somehow for non primitive method parameters, but <code class=\"notranslate\">null</code> cannot be passed as a primitive method parameter, hence the <code class=\"notranslate\">NullPointerException</code> about the unboxing. So I investigated a bit more in the <code class=\"notranslate\">CaptorParameterResolver</code> class, and I think I know what's wrong. It uses the <code class=\"notranslate\">CaptorAnnotationProcessor.process</code> method, which uses<br>\n<code class=\"notranslate\">new GenericMaster().getGenericType(parameter)</code> to determine the generic type to capture.<br>\nHowever, this leads to the invocation of the method <code class=\"notranslate\">GenericMaster.getGenericType(Parameter parameter)</code>.<br>\nThis method uses <code class=\"notranslate\">Parameter.getType()</code> to look for the type parameter, but that actually returns the raw class of the parameter, so the informations about type parameters are lost. In the method <code class=\"notranslate\">GenericMaster.getGenericType(Field field)</code> used for fields, it uses <code class=\"notranslate\">Field.getGenericType()</code> that actually return the type with type parameters. The equivalent of this method for Parameter is <code class=\"notranslate\">Parameter.getParameterizedType()</code>.<br>\nI think this is clearly a bug, and the fix seems pretty obvious to me :</p>\n<p dir=\"auto\">In GenericMaster.java, line 30, replace<br>\n<code class=\"notranslate\">return getaClass(parameter.getType());</code><br>\nby<br>\n<code class=\"notranslate\">return getaClass(parameter.getParameterizedType());</code></p>\n<p dir=\"auto\">I tested it with a workaround and it works as intended (as a proof of concept only)<br>\nFurthermore, it seems like this method (and all the captor parameter resolving circuit) isn't used anywhere else, so there's very little impact to expect from this fix.</p>",
                "resourcePath": "/mockito/mockito/issues/3229",
                "createdAt": "2024-01-08T18:56:58Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #3281 : Add native method to exception message of MissingMethodI\u2026",
        "url": "https://github.com/mockito/mockito/pull/3283",
        "resourcePath": "/mockito/mockito/pull/3283",
        "createdAt": "2024-03-01T01:30:54Z",
        "number": 3283,
        "mergeCommit": {
          "oid": "ea6ff8c9b7cacb67500cce30fa915de9f7b8ec0e",
          "message": "Add native method to MissingMethodInvocationException (#3283)\n\nFixes #3281",
          "commitUrl": "https://github.com/mockito/mockito/commit/ea6ff8c9b7cacb67500cce30fa915de9f7b8ec0e",
          "parents": {
            "nodes": [
              {
                "oid": "8431ae2aff383fd4f23aec34c02d22ce1d189d2b",
                "message": "Bump com.google.googlejavaformat:google-java-format (#3277)\n\nBumps [com.google.googlejavaformat:google-java-format](https://github.com/google/google-java-format) from 1.19.2 to 1.20.0.\r\n- [Release notes](https://github.com/google/google-java-format/releases)\r\n- [Commits](https://github.com/google/google-java-format/compare/v1.19.2...v1.20.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: com.google.googlejavaformat:google-java-format\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/main/java/org/mockito/internal/exceptions/Reporter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/test/java/org/mockitousage/misuse/InvalidUsageTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAF62v85oWtfC2gAoY2RiNTQ0NWExYjJlMWZkYmVkNmY0YmQ5YzRlZmNhNDM4YjQzMGQwOQ",
                "url": "https://github.com/mockito/mockito/pull/3283/commits/cdb5445a1b2e1fdbed6f4bd9c4efca438b430d09"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3281,
                "url": "https://github.com/mockito/mockito/issues/3281",
                "title": "MissingMethodInvocationException is thrown when mocking native method in 5.x",
                "bodyHTML": "<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The mockito message in the stacktrace have useful information, but it didn't help</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> The problematic code (if that's possible) is copied here;<br>\nNote that some configuration are impossible to mock via Mockito</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide versions (mockito / jdk / os / any other relevant information)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Provide a <a href=\"http://sscce.org\" rel=\"nofollow\">Short, Self Contained, Correct (Compilable), Example</a> of the issue<br>\n(same as any question on stackoverflow.com)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Read the <a href=\"https://github.com/mockito/mockito/blob/main/.github/CONTRIBUTING.md\">contributing guide</a></li>\n</ul>\n<p dir=\"auto\">Problematic version: 5.0.0, 5.10.0<br>\nJDK: 17<br>\nOS: MacOS</p>\n<p dir=\"auto\">The following piece of code was fine with 4.x (I tried with 4.11.0). However, it throws exception after upgrading to 5.x. I think that's because the <code class=\"notranslate\">totalMemory</code> method is native. However, the exception message doesn't mention that.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class FooTest {\n    @Test\n    public void fooTest() {\n        var runtime = mock(Runtime.class);\n        when(runtime.totalMemory()).thenReturn(1000L);\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">FooTest</span> {\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">fooTest</span>() {\n        <span class=\"pl-smi\">var</span> <span class=\"pl-s1\">runtime</span> = <span class=\"pl-en\">mock</span>(<span class=\"pl-smi\">Runtime</span>.<span class=\"pl-k\">class</span>);\n        <span class=\"pl-en\">when</span>(<span class=\"pl-s1\">runtime</span>.<span class=\"pl-en\">totalMemory</span>()).<span class=\"pl-en\">thenReturn</span>(<span class=\"pl-c1\">1000L</span>);\n    }\n}</pre></div>\n<p dir=\"auto\">Exception message:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.mockito.exceptions.misusing.MissingMethodInvocationException: \nwhen() requires an argument which has to be 'a method call on a mock'.\nFor example:\n    when(mock.getArticles()).thenReturn(articles);\n\nAlso, this error might show up because:\n1. you stub either of: final/private/equals()/hashCode() methods.\n   Those methods *cannot* be stubbed/verified.\n   Mocking methods declared on non-public parent classes is not supported.\n2. inside when() you don't call method on mock but on some other object.\n\n\n\tat org.example.foo.FooTest.fooTest(FooTest.java:13)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\"><pre class=\"notranslate\"><code class=\"notranslate\">org.mockito.exceptions.misusing.MissingMethodInvocationException: \nwhen() requires an argument which has to be 'a method call on a mock'.\nFor example:\n    when(mock.getArticles()).thenReturn(articles);\n\nAlso, this error might show up because:\n1. you stub either of: final/private/equals()/hashCode() methods.\n   Those methods *cannot* be stubbed/verified.\n   Mocking methods declared on non-public parent classes is not supported.\n2. inside when() you don't call method on mock but on some other object.\n\n\n\tat org.example.foo.FooTest.fooTest(FooTest.java:13)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n</code></pre></div>",
                "resourcePath": "/mockito/mockito/issues/3281",
                "createdAt": "2024-02-29T09:39:12Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "please contribute"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  }
]