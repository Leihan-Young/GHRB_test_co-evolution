[
  {
    "repository": {
      "pullRequest": {
        "title": "Feature/add support for loading identity and trust material without password",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/12",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/12",
        "createdAt": "2020-07-26T22:16:41Z",
        "number": 12,
        "mergeCommit": {
          "oid": "fec0be9d2012948ca2a7e3d5bb19930ef2635b44",
          "message": "Removed password validation",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/fec0be9d2012948ca2a7e3d5bb19930ef2635b44",
          "parents": {
            "nodes": [
              {
                "oid": "c9e51e301f648c57b0f2d41124ccc30db0819571",
                "message": "Added non password protected keystores"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/sslcontext/SSLFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/sslcontext/SSLFactoryShould.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/identity-without-password.jks"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/truststore-without-password.jks"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDU2ODEzMzM3OjNhMmEzYzA5ZTk2M2JkNzcyOGU4ZDQ2NTk2NDY2Zjk4NWMwNmQ2ODI=",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/12/commits/3a2a3c09e963bd7728e8d46596466f985c06d682"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 11,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/11",
                "title": "SSLFactory withTrustMaterial with null (empty password)",
                "bodyHTML": "<p dir=\"auto\">Hello.</p>\n<p dir=\"auto\">I'm trying to load my own TrustMaterial which i have in my own JKS keystore.<br>\nBut I see you have a validations in all the overloaded methods <strong>withTrustMaterial</strong> that the password can not be NULL or empty char[].<br>\nDo i really need to add a password to my keystore? Right now my JKS has no password at all.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SSLFactory sslFactory = SSLFactory.builder()\n        .withDefaultTrustMaterial()\n        .withTrustMaterial(&quot;keystore/custom-keystore.jks&quot;, null)\n        .build();\"><pre class=\"notranslate\"><code class=\"notranslate\">SSLFactory sslFactory = SSLFactory.builder()\n        .withDefaultTrustMaterial()\n        .withTrustMaterial(\"keystore/custom-keystore.jks\", null)\n        .build();\n</code></pre></div>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/11",
                "createdAt": "2020-07-26T20:12:39Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support for loading truststore without additional password",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/15",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/15",
        "createdAt": "2020-08-27T05:56:26Z",
        "number": 15,
        "mergeCommit": {
          "oid": "9868a9a2138649d91994cb046257fb5492a59576",
          "message": "Added additional method which does not require a password",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/9868a9a2138649d91994cb046257fb5492a59576",
          "parents": {
            "nodes": [
              {
                "oid": "6ba8466314925b283bdaef0198b7585050157fea",
                "message": "Renamed files"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/sslcontext/SSLFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/sslcontext/SSLFactoryShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDc0NDY2OTI1OmEwMzM3YTAyZjJlNGI4M2JhNWViMzVjZTg4NTJjMjRjYmI5OTIxYTI=",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/15/commits/a0337a02f2e4b83ba5eb35ce8852c24cbb9921a2"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 14,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/14",
                "title": "Keystore password is unnecessary",
                "bodyHTML": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">First of all, thanks for the handy library. I have a suggestion to drop the keystore password as it is redundant (client would have already a Keystore at hand) in the api that takes KeyStore as the first argument.</p>\n<p dir=\"auto\">For example, this is how I use your library.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SSLFactory.Builder sslFactoryBuilder = SSLFactory.builder()\n                                                         .withDefaultTrustMaterial();\n        if ((trustStoreResource != null) &amp;&amp; (trustStorePassword != null)) {\n            KeyStore trustStore = KeyStore.getInstance(&quot;PKCS12&quot;);\n            trustStore.load(trustStoreResource.getInputStream(),\n                            trustStorePassword.toCharArray());\n            sslFactoryBuilder.withTrustMaterial(\n                trustStore, trustStorePassword.toCharArray());\n        }\"><pre class=\"notranslate\"><code class=\"notranslate\">SSLFactory.Builder sslFactoryBuilder = SSLFactory.builder()\n                                                         .withDefaultTrustMaterial();\n        if ((trustStoreResource != null) &amp;&amp; (trustStorePassword != null)) {\n            KeyStore trustStore = KeyStore.getInstance(\"PKCS12\");\n            trustStore.load(trustStoreResource.getInputStream(),\n                            trustStorePassword.toCharArray());\n            sslFactoryBuilder.withTrustMaterial(\n                trustStore, trustStorePassword.toCharArray());\n        }\n</code></pre></div>\n<p dir=\"auto\">And as you can see, <em>sslFactoryBuilder.withTrustMaterial(trustStore, <strong>trustStorePassword.toCharArray()</strong>);</em>, password is not required there.</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/14",
                "createdAt": "2020-08-26T09:20:24Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support for loading pem files",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/17",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/17",
        "createdAt": "2020-08-30T22:04:23Z",
        "number": 17,
        "mergeCommit": {
          "oid": "4cdd1216e8d23e8d37ccd8abd3176184101f84ef",
          "message": "Support for loading pem files (#17)\n\n* Added additional examples\r\n\r\n* Renamed files\r\n\r\n* Added initial code snippet for loading pem files\r\n\r\n* Renamed some variables\r\n\r\n* Added additional pem files\r\n\r\n* Removed duplicates\r\n\r\n* Fixed loading identity\r\n\r\n* Added support for loading key and certificate separately as identity material\r\n\r\n* Added some javadoc\r\n\r\n* Added support for loading identity material as input stream\r\n\r\n* Removed redundant null validation\r\n\r\n* Rotated identity method parameters\r\n\r\n* Wrapped checked exception withing a runtime io exception",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/4cdd1216e8d23e8d37ccd8abd3176184101f84ef",
          "parents": {
            "nodes": [
              {
                "oid": "f2f67c6f15e43374b167614a71d4b3272c888715",
                "message": "Bumped LogCaptor"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/sslcontext/util/PemUtils.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/sslcontext/util/PemUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/pems-for-unit-tests/encrypted-identity.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/pems-for-unit-tests/github-certificate.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/pems-for-unit-tests/multiple-certificates.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/pems-for-unit-tests/rsa-encrypted-identity.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/pems-for-unit-tests/splitted-unencrypted-identity-containing-certificate.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/pems-for-unit-tests/splitted-unencrypted-identity-containing-private-key.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/pems-for-unit-tests/stackexchange.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/pems-for-unit-tests/unencrypted-identity.pem"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDc1OTY5NzAxOjRkMjZkODdhMTViNmM0NTdhMGU4ZDFlMzU1ZTE3NDJmZjhkOGI5YTk=",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/17/commits/4d26d87a15b6c457a0e8d1e355e1742ff8d8b9a9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 16,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/16",
                "title": "Support PEM-encoded standalone RSA private keys and certificates as produced by OpenSSL tools",
                "bodyHTML": "<p dir=\"auto\">It would be useful that this library supported to load PEM-encoded RSA private keys with corresponding PEM-encoded certificate as generated by OpenSSL and other tools in the wild, to bridge the gap between \"java world\" tools (keytool and its not standard jks format) and basically everything else.</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/16",
                "createdAt": "2020-08-29T22:16:40Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Added support for system trust material",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/21",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/21",
        "createdAt": "2020-08-31T13:28:25Z",
        "number": 21,
        "mergeCommit": {
          "oid": "a0da758f105625f919931794db714b38613ae46c",
          "message": "Added support for system trust material (#21)\n\n* Added support for system keystore\r\n\r\n* Removed unused constant\r\n\r\n* Only adding support for windows and mac",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/a0da758f105625f919931794db714b38613ae46c",
          "parents": {
            "nodes": [
              {
                "oid": "9d9904de340108d43ded421d7cd36a63681d9723",
                "message": "[maven-release-plugin] prepare for next development iteration"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/sslcontext/SSLFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/sslcontext/util/KeyStoreUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/sslcontext/util/TrustManagerUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/sslcontext/SSLFactoryShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/sslcontext/util/KeyStoreUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDc2Mjk5MjI4OjdmMDlmNTFkYzYwY2Q0MTJhMTkxOGU1NmQ4NDdkNjQ0OGZjYjk0Y2Y=",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/21/commits/7f09f51dc60cd412a1918e56d847d6448fcb94cf"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 19,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/19",
                "title": "Simplify use of system truststore",
                "bodyHTML": "<p dir=\"auto\">Under Windows and MacOS, it is possible to use the system truststore in addition to regular keystores.<br>\nWith the current library, it can be achieved by a code like this:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"SSLFactory.Builder result = SSLFactory\n                .builder()\n                .withDefaultTrustMaterial();\nif (isWindows()) {\n  KeyStore root = KeyStore.getInstance(&quot;Windows-ROOT&quot;);\n  root.load(null, null);\n  result.withTrustMaterial(root, new char[0]);\n  KeyStore my = KeyStore.getInstance(&quot;Windows-MY&quot;);\n  my.load(null, null);\n  result.withTrustMaterial(my, new char[0]);\n} else if (isMacos()) {\n  KeyStore keychain = KeyStore.getInstance(&quot;KeychainStore&quot;);\n  keychain.load(null, null);\n  result.withTrustMaterial(keychain, new char[0]);\n}\"><pre class=\"notranslate\"><span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-smi\">Builder</span> <span class=\"pl-s1\">result</span> = <span class=\"pl-smi\">SSLFactory</span>\n                .<span class=\"pl-en\">builder</span>()\n                .<span class=\"pl-en\">withDefaultTrustMaterial</span>();\n<span class=\"pl-k\">if</span> (<span class=\"pl-en\">isWindows</span>()) {\n  <span class=\"pl-smi\">KeyStore</span> <span class=\"pl-s1\">root</span> = <span class=\"pl-smi\">KeyStore</span>.<span class=\"pl-en\">getInstance</span>(<span class=\"pl-s\">\"Windows-ROOT\"</span>);\n  <span class=\"pl-s1\">root</span>.<span class=\"pl-en\">load</span>(<span class=\"pl-c1\">null</span>, <span class=\"pl-c1\">null</span>);\n  <span class=\"pl-s1\">result</span>.<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-s1\">root</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">char</span>[<span class=\"pl-c1\">0</span>]);\n  <span class=\"pl-smi\">KeyStore</span> <span class=\"pl-s1\">my</span> = <span class=\"pl-smi\">KeyStore</span>.<span class=\"pl-en\">getInstance</span>(<span class=\"pl-s\">\"Windows-MY\"</span>);\n  <span class=\"pl-s1\">my</span>.<span class=\"pl-en\">load</span>(<span class=\"pl-c1\">null</span>, <span class=\"pl-c1\">null</span>);\n  <span class=\"pl-s1\">result</span>.<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-s1\">my</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">char</span>[<span class=\"pl-c1\">0</span>]);\n} <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (<span class=\"pl-en\">isMacos</span>()) {\n  <span class=\"pl-smi\">KeyStore</span> <span class=\"pl-s1\">keychain</span> = <span class=\"pl-smi\">KeyStore</span>.<span class=\"pl-en\">getInstance</span>(<span class=\"pl-s\">\"KeychainStore\"</span>);\n  <span class=\"pl-s1\">keychain</span>.<span class=\"pl-en\">load</span>(<span class=\"pl-c1\">null</span>, <span class=\"pl-c1\">null</span>);\n  <span class=\"pl-s1\">result</span>.<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-s1\">keychain</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">char</span>[<span class=\"pl-c1\">0</span>]);\n}</pre></div>\n<p dir=\"auto\">I would prefer to have something like:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"SSLFactory.Builder result = SSLFactory\n                .builder()\n                .withDefaultTrustMaterial()\n                .withSystemTrustMaterial();\"><pre class=\"notranslate\"><span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-smi\">Builder</span> <span class=\"pl-s1\">result</span> = <span class=\"pl-smi\">SSLFactory</span>\n                .<span class=\"pl-en\">builder</span>()\n                .<span class=\"pl-en\">withDefaultTrustMaterial</span>()\n                .<span class=\"pl-en\">withSystemTrustMaterial</span>();</pre></div>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/19",
                "createdAt": "2020-08-31T12:11:55Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support for custom list of ciphers and protocols",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/23",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/23",
        "createdAt": "2020-09-25T14:17:26Z",
        "number": 23,
        "mergeCommit": {
          "oid": "5289eb48e9b196c3e1d18ce5b5dc3af274483184",
          "message": "Support for custom list of ciphers and protocols (#23)\n\n* Added support for custom list of ciphers and protocols\r\n\r\n* Fixed javadoc\r\n\r\n* Fixed javadoc\r\n\r\n* Disabled javadoc lint\r\n\r\n* Fixed unit test\r\n\r\n* Cleanup constructor\r\n\r\n* Adjusted javadoc\r\n\r\n* Wrapped ciphers and protocols in a SSLParameters object\r\n\r\n* Removed setting custom provider and marked protocol as deprecated and to be removed\r\n\r\n* fixed unit test\r\n\r\n* Removed unused import",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/5289eb48e9b196c3e1d18ce5b5dc3af274483184",
          "parents": {
            "nodes": [
              {
                "oid": "01c6b3f510bfdffd0cd20e931ea8cef97b3410de",
                "message": "[maven-release-plugin] prepare for next development iteration"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-apache/src/main/java/nl/altindag/sslcontext/util/ApacheSslContextUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-apache/src/test/java/nl/altindag/sslcontext/util/ApacheSslContextUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-jetty/src/main/java/nl/altindag/sslcontext/util/JettySslContextUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-jetty/src/test/java/nl/altindag/sslcontext/util/JettySslContextUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-netty/src/main/java/nl/altindag/sslcontext/util/NettySslContextUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-netty/src/test/java/nl/altindag/sslcontext/util/NettySslContextUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/sslcontext/SSLFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/sslcontext/SSLFactoryShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDkzMTA4MTg2OjhkYmI3OTJiZDc4ZDU3ZjhlOGYxNGZhMzc4ZTc3MjBmNTQxYjBlNmU=",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/23/commits/8dbb792bd78d57f8e8f14fa378e7720f541b0e6e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 22,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/22",
                "title": "Set Enabled Protocols",
                "bodyHTML": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">I could not find a way to set enabled protocols in the sslcontext. This would be useful, if the client want to reject server which supports only old version (say TLSv1.0).</p>\n<p dir=\"auto\">for example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\npublic SSLFactory.Builder withAllowedProtocols(String[] allowedProtocols) {\n      this.allowedProtocols = allowedProtocols;\n      return this;\n}\nprivate void createSSLContext(KeyManager[] keyManagers, TrustManager[] trustManagers) {\n        try {\n            this.sslContext = SSLContext.getInstance(this.protocol);\n            this.sslContext.init(keyManagers, trustManagers, this.secureRandom);\n            //Add following line\n            this.sslContext.getDefaultSSLParameters().setProtocols(this.allowedProtocols);\n        } catch (KeyManagementException | NoSuchAlgorithmException var4) {\n            throw new GenericSSLContextException(var4);\n        }\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">\npublic SSLFactory.Builder withAllowedProtocols(String[] allowedProtocols) {\n      this.allowedProtocols = allowedProtocols;\n      return this;\n}\nprivate void createSSLContext(KeyManager[] keyManagers, TrustManager[] trustManagers) {\n        try {\n            this.sslContext = SSLContext.getInstance(this.protocol);\n            this.sslContext.init(keyManagers, trustManagers, this.secureRandom);\n            //Add following line\n            this.sslContext.getDefaultSSLParameters().setProtocols(this.allowedProtocols);\n        } catch (KeyManagementException | NoSuchAlgorithmException var4) {\n            throw new GenericSSLContextException(var4);\n        }\n    }\n</code></pre></div>\n<p dir=\"auto\">Regards<br>\nWinster</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/22",
                "createdAt": "2020-09-14T07:54:03Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Rename packages and utility classes",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/32",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/32",
        "createdAt": "2020-12-01T07:53:27Z",
        "number": 32,
        "mergeCommit": {
          "oid": "61c223e3127d21ae680deb28ed35515c4987bca4",
          "message": "Rename packages and utility classes (#32)\n\n* Renamed package\r\n\r\n* Renamed utility classes\r\n\r\n* Updated references",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/61c223e3127d21ae680deb28ed35515c4987bca4",
          "parents": {
            "nodes": [
              {
                "oid": "3dbdce449b6294ce92101670f37d554333253822",
                "message": "Bumped dependency"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "RENAMED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/socket/CompositeSSLSocketFactoryShould.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/CompositeX509ExtendedTrustManagerShould.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/KeyStoreTestUtils.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/UnsafeX509ExtendedTrustManagerShould.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/X509TrustManagerWrapperShould.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/CertificateUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/IOUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyManagerUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyStoreUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/TrustManagerUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTMwMDk5MzYwOmM0YTI0MTQ2MmM1NWFhMDY4NDg0ZDRiZWRjNDNlMzk1YjliOTM0ZmU=",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/32/commits/c4a241462c55aa068484d4bedc43e395b9b934fe"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 24,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/24",
                "title": "Rename sslcontext package to a generic name",
                "bodyHTML": "<p dir=\"auto\">Initially SSLFactory was named SSLContextHelper and it was the only class within the package. Therefor it made sense to name the package <code class=\"notranslate\">nl.altindag.sslcontext.*</code> As the library grows and contains other functionalities such as KeyStoreUtils, TrustManagerUtils, KeyManagerUtils, CompositeX509ExtendedKeyManager, CompositeX509ExtendedTrustManager, PemUtils, JettySslContextUtils, NettySslContextUtils, ApacheSslContextUtils it would make more sense to group them in a more generic name such as <code class=\"notranslate\">nl.altindag.ssl.*</code></p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/24",
                "createdAt": "2020-09-27T09:48:01Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support for multiple identities while having an unreliable principal",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/61",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/61",
        "createdAt": "2021-02-10T09:18:23Z",
        "number": 61,
        "mergeCommit": {
          "oid": "fde222c66da29c5efd81fb5d55b1e6721bea39a2",
          "message": "Support for multiple identities while having an unreliable principal (#61)\n\n* Added initial implementation for routing preferred client certificate for ssl handshake\r\n\r\n* Extracted validations into separate util classes\r\n\r\n* Removed disabled integration tests\r\n\r\n* Added unit tests\r\n\r\n* Added documentation",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/fde222c66da29c5efd81fb5d55b1e6721bea39a2",
          "parents": {
            "nodes": [
              {
                "oid": "130b6c23b6cc56599a62b3211337d0c79e576556",
                "message": "fix: sslcontext-kickstart-for-netty/pom.xml to reduce vulnerabilities (#60)\n\nThe following vulnerabilities are fixed with an upgrade:\r\n- https://snyk.io/vuln/SNYK-JAVA-IONETTY-1070799\r\n\r\nCo-authored-by: snyk-bot <snyk-bot@snyk.io>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/client-one/identity.jks"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/client-one/truststore.jks"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/client-two/identity.jks"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/client-two/truststore.jks"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/server-one/identity.jks"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/server-one/truststore.jks"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/server-two/identity.jks"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/client-server/server-two/truststore.jks"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/prod.idrix.eu-identity.jks"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "sslcontext-kickstart/src/test/resources/keystores-for-unit-tests/prod.idrix.eu-truststore.jks"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTcwOTUwMTU5OjNjMjM1YThlN2IxMjdmY2UwODE5NWVhZDMzYTEyOGFmMWM0ZWExZmM=",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/61/commits/3c235a8e7b127fce08195ead33a128af1c4ea1fc"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 58,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/58",
                "title": "Support for using multiple identity materials and trust materials not working",
                "bodyHTML": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">First of all, a big thanks for this project.<br>\nIt is well written, well documented, and very helpful!</p>\n<p dir=\"auto\">I am opening an issue regarding the \"Support for using multiple identity materials and trust materials\" as I believe it might not be behaving correctly.</p>\n<p dir=\"auto\">In order to illustrate my example, I am going to simplify to two different services (instead of a large number)</p>\n<p dir=\"auto\">First service I need to talk to: OrderService. It is a service where one will place orders. (I order a video game, I order a bicycle)</p>\n<p dir=\"auto\">Second service I need to take to, DeliveryService. It is a service where one will deliver something to someone. It can work a standalone, I deliver this contract to this person, often used in conjunction of OrderService, I deliver the video game I just ordered to someone.</p>\n<p dir=\"auto\">The two companies owning the services are competing company, they will enforce client to have it their own keystores. No way possible to go to one company and say: If I bring you the certificate I use to talk to the other service, can you trust it as well? No no.</p>\n<p dir=\"auto\">In order to perform such, I am using this library, where I beforehand verified.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" SSLFactory sslFactory = SSLFactory.builder()\n                    .withIdentityMaterial(Paths.get(/path/to/orderservice/client-to-talk-to-orderservice-keystore.p12), &quot;talkToOrderService&quot;.toCharArray())\n                    .withTrustMaterial(Paths.get(/path/to/truststore.p12), &quot;trustStorePassPhrase&quot;.toCharArray())\n                    .build();\n            return NettySslUtils.forClient(sslFactory).build();\"><pre class=\"notranslate\"><code class=\"notranslate\"> SSLFactory sslFactory = SSLFactory.builder()\n                    .withIdentityMaterial(Paths.get(/path/to/orderservice/client-to-talk-to-orderservice-keystore.p12), \"talkToOrderService\".toCharArray())\n                    .withTrustMaterial(Paths.get(/path/to/truststore.p12), \"trustStorePassPhrase\".toCharArray())\n                    .build();\n            return NettySslUtils.forClient(sslFactory).build();\n</code></pre></div>\n<p dir=\"auto\">This is working fine to talk to order service</p>\n<p dir=\"auto\">But also, I verified,</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" SSLFactory sslFactory = SSLFactory.builder()\n                    .withIdentityMaterial(Paths.get(/path/to/deliveryservice/client-to-talk-to-deliveryservice-keystore.p12), &quot;talkToDeliveryService&quot;.toCharArray())\n                    .withTrustMaterial(Paths.get(/path/to/truststore.p12), &quot;trustStorePassPhrase&quot;.toCharArray())\n                    .build();\n            return NettySslUtils.forClient(sslFactory).build();\"><pre class=\"notranslate\"><code class=\"notranslate\"> SSLFactory sslFactory = SSLFactory.builder()\n                    .withIdentityMaterial(Paths.get(/path/to/deliveryservice/client-to-talk-to-deliveryservice-keystore.p12), \"talkToDeliveryService\".toCharArray())\n                    .withTrustMaterial(Paths.get(/path/to/truststore.p12), \"trustStorePassPhrase\".toCharArray())\n                    .build();\n            return NettySslUtils.forClient(sslFactory).build();\n</code></pre></div>\n<p dir=\"auto\">This is working fine to talk to delivery service (mock the step to talk to order service)</p>\n<p dir=\"auto\">Now, chaining the two calls, first talk to order service, then to delivery service.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" SSLFactory sslFactory = SSLFactory.builder()\n                    .withIdentityMaterial(Paths.get(/path/to/orderservice/client-to-talk-to-orderservice-keystore.p12), &quot;talkToOrderService&quot;.toCharArray())\n                    .withIdentityMaterial(Paths.get(/path/to/deliveryservice/client-to-talk-to-deliveryservice-keystore.p12), &quot;talkToDeliveryService&quot;.toCharArray())\n                    .withTrustMaterial(Paths.get(/path/to/truststore.p12), &quot;trustStorePassPhrase&quot;.toCharArray())\n                    .build();\n            return NettySslUtils.forClient(sslFactory).build();\"><pre class=\"notranslate\"><code class=\"notranslate\"> SSLFactory sslFactory = SSLFactory.builder()\n                    .withIdentityMaterial(Paths.get(/path/to/orderservice/client-to-talk-to-orderservice-keystore.p12), \"talkToOrderService\".toCharArray())\n                    .withIdentityMaterial(Paths.get(/path/to/deliveryservice/client-to-talk-to-deliveryservice-keystore.p12), \"talkToDeliveryService\".toCharArray())\n                    .withTrustMaterial(Paths.get(/path/to/truststore.p12), \"trustStorePassPhrase\".toCharArray())\n                    .build();\n            return NettySslUtils.forClient(sslFactory).build();\n</code></pre></div>\n<p dir=\"auto\">This still yields <code class=\"notranslate\">javax.net.ssl.SSLHandshakeException: Received fatal alert: unknown_ca; nested exception is io.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: Received fatal alert: unknown_ca</code></p>\n<p dir=\"auto\">Could you please help?</p>\n<p dir=\"auto\">Thank you</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/58",
                "createdAt": "2021-02-07T08:52:00Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Changed logging api from slf4j to dynamic logging api",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/90",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/90",
        "createdAt": "2021-06-11T12:56:53Z",
        "number": 90,
        "mergeCommit": {
          "oid": "902b04fdcd8181700a47a813e3cea67d7c13dbea",
          "message": "Changed logging api from slf4j to dynamic logging api (#90)\n\n* Changed logging api to dynamic logging api\r\n\r\n* Used fixed version of yaslf4j\r\n\r\n* Fixed unit tests",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/902b04fdcd8181700a47a813e3cea67d7c13dbea",
          "parents": {
            "nodes": [
              {
                "oid": "478a33aa3aee2a570f243985fa1b48f4d66e7535",
                "message": "Changed license url to https"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/SSLFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/keymanager/KeyManagerFactorySpiWrapper.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/CompositeX509ExtendedTrustManager.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/TrustManagerFactorySpiWrapper.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/UnsafeX509ExtendedTrustManager.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/CompositeX509ExtendedTrustManagerShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/HotSwappableX509ExtendedTrustManagerIT.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjY4MTE4Mjk5OjZlNjNlMTM4OTZlZjcxZWVmMGI1OGVmZjI0ZjExNjBhM2I3Zjk4MDQ=",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/90/commits/6e63e13896ef71eef0b58eff24f1160a3b7f9804"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 20,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/20",
                "title": "Remove slf4j to achieve zero-dependency policy",
                "bodyHTML": "<p dir=\"auto\">Your library has only one dependency (slf4j) that can be replaced by the one provided by the jdk.<br>\nThat would result in a zero-dependency policy such as described <a href=\"https://blog.jooq.org/2016/08/11/all-libraries-should-follow-a-zero-dependency-policy/\" rel=\"nofollow\">there</a> (tl;dr avoiding dependency hell)</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/20",
                "createdAt": "2020-08-31T12:32:04Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "ISSUE-113 Misleading NullPointerException when reading an encrypted P\u2026",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/114",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/114",
        "createdAt": "2021-08-29T04:35:36Z",
        "number": 114,
        "mergeCommit": {
          "oid": "f81b3d6b3e34b4b6ffb639dd39ad4ee14bbf1b8a",
          "message": "Merge pull request #114 from chibenwa/ISSUE-113\n\nISSUE-113 Misleading NullPointerException when reading an encrypted P\u2026",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/f81b3d6b3e34b4b6ffb639dd39ad4ee14bbf1b8a",
          "parents": {
            "nodes": [
              {
                "oid": "20839a3cec0fd770e4b10ccaad83cf16722ebe6a",
                "message": "Added separated hostname verifiers"
              },
              {
                "oid": "7030129e60ce2d3ba6faa5a1e7f37c17a6d8d715",
                "message": "fixup! ISSUE-113 Misleading NullPointerException when reading an encrypted PEM key and none supplied"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-pem/src/main/java/nl/altindag/ssl/util/PemUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-pem/src/test/java/nl/altindag/ssl/util/PemUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/ValidationUtils.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/ValidationUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzIxODg2MDgyOjcwMzAxMjllNjBjZTJkM2JhNmZhYTVhMWU3ZjM3YzE3YTZkOGQ3MTU=",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/114/commits/7030129e60ce2d3ba6faa5a1e7f37c17a6d8d715"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 113,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/113",
                "title": "Misleading NullPointerException when reading an encrypted PEM key and none supplied",
                "bodyHTML": "<p dir=\"auto\"><strong>Describe the bug</strong></p>\n<p dir=\"auto\">When an encrypted PEM private key is used without supplying a password, a null pointer exception is being returned.</p>\n<p dir=\"auto\">There is not way for the library user (an probably my end users too) to know the reason of this failure is that a password is required.</p>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"            X509ExtendedKeyManager[] x509ExtendedKeyManager = {PemUtils.loadIdentityMaterial(\n                        &quot;certs.crt&quot;,\n                        &quot;encrypted.private.key&quot;,\n                        null)};\n                        \n                     \n            SSLContext context = SSLContext.getInstance(&quot;TLS&quot;);\n            context.init(kmf.getKeyManagers(), null, null);\"><pre class=\"notranslate\"><code class=\"notranslate\">            X509ExtendedKeyManager[] x509ExtendedKeyManager = {PemUtils.loadIdentityMaterial(\n                        \"certs.crt\",\n                        \"encrypted.private.key\",\n                        null)};\n                        \n                     \n            SSLContext context = SSLContext.getInstance(\"TLS\");\n            context.init(kmf.getKeyManagers(), null, null);\n</code></pre></div>\n<p dir=\"auto\">Results in :</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException: null\n        at java.base/java.util.Objects.requireNonNull(Objects.java:221)\n        at nl.altindag.ssl.util.PemUtils.lambda$static$1(PemUtils.java:92)\n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:416)\n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:329)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:301)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:227)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.NullPointerException: null\n        at java.base/java.util.Objects.requireNonNull(Objects.java:221)\n        at nl.altindag.ssl.util.PemUtils.lambda$static$1(PemUtils.java:92)\n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:416)\n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:329)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:301)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:227)\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected behavior</strong></p>\n<p dir=\"auto\">I expect a dedicated exception with an easy to understand message...</p>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java 11 (OpenJDK 11.0.11)</li>\n<li>Maven 3.6.3</li>\n<li>Ubuntu</li>\n</ul>\n<p dir=\"auto\"><strong>Additional context</strong></p>\n<p dir=\"auto\">I could end up using this library in a contribution to Apache James to not just support keystores but also PEM files.</p>\n<p dir=\"auto\">The ease of use is appealing though I need users to understand by themselves their mistakes before reaching the community (including I) and says stuff like \"your soft is not working there is a NPE\" without understanding the mistake is theirs...</p>\n<p dir=\"auto\">BTW I could fire a patch if my above proposal is deemed acceptable.</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/113",
                "createdAt": "2021-08-28T12:58:24Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Disabled logging UnsafeHostNameVerifier and UnsafeX509ExtendedTrustManager",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/122",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/122",
        "createdAt": "2021-10-07T10:31:53Z",
        "number": 122,
        "mergeCommit": {
          "oid": "e1d9740e37af3ecc2db3489744a19b143cdd508c",
          "message": "Merge pull request #122 from Hakky54/feature/disable-logging-unsafe-trust-manager-and-hostname-verifier\n\nDisabled logging UnsafeHostNameVerifier and UnsafeX509ExtendedTrustManager",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/e1d9740e37af3ecc2db3489744a19b143cdd508c",
          "parents": {
            "nodes": [
              {
                "oid": "9775b98981527834d912e2174bbd3589a9c3362f",
                "message": "Added additional route"
              },
              {
                "oid": "3173d3b2f388538923f20f725c6e562dc1f3b5b3",
                "message": "Disabled logging of UnsafeHostNameVerifier and UnsafeX509ExtendedTrustManager"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/hostnameverifier/UnsafeHostNameVerifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/UnsafeX509ExtendedTrustManager.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/hostnameverifier/UnsafeHostnameVerifierShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/HotSwappableX509ExtendedTrustManagerIT.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/UnsafeX509ExtendedTrustManagerShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc4s4pMf2gAoMzE3M2QzYjJmMzg4NTM4OTIzZjIwZjcyNWM2ZTU2MmRjMWYzYjViMw",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/122/commits/3173d3b2f388538923f20f725c6e562dc1f3b5b3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 121,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/121",
                "title": "Remove/Disable logging in unsafe HostnameVerifier and TrustManager",
                "bodyHTML": "<p dir=\"auto\">the logging in the unsafe variants of HostnameVerifier and TrustManager spam logs. There should be a way to disable this or at least log it to DEBUG.</p>\n<p dir=\"auto\">I see no reason why i would like to know that a self signed certificate is trusted. that's exactly what i want to do else i wouldn't use this specific verifier.</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/121",
                "createdAt": "2021-10-06T12:02:57Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add support for routing multiple server identities",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/131",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/131",
        "createdAt": "2021-11-30T13:18:00Z",
        "number": 131,
        "mergeCommit": {
          "oid": "7e5a0ee3a366426b990f50fdc5558c6ea100b5c2",
          "message": "Add support for routing multiple server identities (#131)\n\n* Added option to route server identities to hosts\r\n\r\n* Marked client identity route as deprecated. Combined server and client identity route\r\n\r\n* Simplified server alias extraction\r\n\r\n* Removed duplicate code\r\n\r\n* Removed duplicate code\r\n\r\n* simplified getPreferredServerAlias\r\n\r\n* Removed duplicate code from choose client alias\r\n\r\n* Fixed javadoc\r\n\r\n* Added unit test\r\n\r\n* Updated documentation",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/7e5a0ee3a366426b990f50fdc5558c6ea100b5c2",
          "parents": {
            "nodes": [
              {
                "oid": "2d54930d83a37739d3908a7d986a79982e4170a0",
                "message": "Bump version.junit from 5.8.1 to 5.8.2 (#133)\n\nBumps `version.junit` from 5.8.1 to 5.8.2.\r\n\r\nUpdates `junit-jupiter-api` from 5.8.1 to 5.8.2\r\n- [Release notes](https://github.com/junit-team/junit5/releases)\r\n- [Commits](https://github.com/junit-team/junit5/compare/r5.8.1...r5.8.2)\r\n\r\nUpdates `junit-jupiter-engine` from 5.8.1 to 5.8.2\r\n- [Release notes](https://github.com/junit-team/junit5/releases)\r\n- [Commits](https://github.com/junit-team/junit5/compare/r5.8.1...r5.8.2)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.junit.jupiter:junit-jupiter-api\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: org.junit.jupiter:junit-jupiter-engine\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "README.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/SSLFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/keymanager/CompositeX509ExtendedKeyManager.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyManagerUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/keymanager/CompositeX509ExtendedKeyManagerShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyManagerUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc4vMCEW2gAoZTU4ZTg3NjhhNGU2MWNjZGI3OGU4OTliNDc3Zjg5ZjA0Y2JiOTJiZg",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/131/commits/e58e8768a4e61ccdb78e899b477f89f04cbb92bf"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 130,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/130",
                "title": "If multiple certificates are configured, the browser cannot obtain the correct certificate after the host address is entered",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">Hello, I have configured two certificates through your library, the domain name of one certificate is www.gateway.com.cn, and the domain name of the other certificate is www.ingress.com.cn. My code is written like this</code></p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Bean\n    public WebServerFactoryCustomizer&lt;NettyReactiveWebServerFactory&gt; sslServerConsumer() {\n        return factory -&gt; {\n            factory.addServerCustomizers(httpServer -&gt; httpServer.secure(sslContextSpec -&gt; {\n                try {\n                    X509ExtendedKeyManager x509ExtendedKeyManager = PemUtils.loadIdentityMaterial(\n                            getResource(&quot;classpath:ssl/default/server.pem&quot;),\n                            getResource(&quot;classpath:ssl/default/server-key.pem&quot;));\n                    X509ExtendedTrustManager x509ExtendedTrustManager = PemUtils.loadTrustMaterial(getResource(&quot;classpath:ssl/default/ca.pem&quot;));\n                    SSLFactory.Builder builder = SSLFactory.builder()\n                            .withIdentityMaterial(x509ExtendedKeyManager)\n                            .withTrustMaterial(x509ExtendedTrustManager);\n                    loadOtherCertificate(builder);\n                    builder.withProtocols(&quot;TLSv1.2&quot;);\n                    SSLFactory sslFactory = builder.build();\n                    System.out.println(&quot;ssl init success&quot;);\n                    X509ExtendedKeyManager keyManager = sslFactory.getKeyManager()\n                            .orElseThrow(NullPointerException::new);\n                    SslContextBuilder sslContextBuilder = SslContextBuilder.forServer(composeKeyManager((CompositeX509ExtendedKeyManager) keyManager))\n                            .ciphers(sslFactory.getCiphers(), SupportedCipherSuiteFilter.INSTANCE)\n                            .protocols(sslFactory.getProtocols())\n                            .clientAuth(getClientAuth(sslFactory.getSslParameters()));\n                    sslFactory.getTrustManager().ifPresent(sslContextBuilder::trustManager);\n                    sslContextSpec.sslContext(sslContextBuilder);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }));\n        };\n    }\n\n    private KeyManager composeKeyManager(CompositeX509ExtendedKeyManager keyManager) {\n        return new CustomKeyManager(keyManager.getKeyManagers());\n    }\n\n    private void loadOtherCertificate(SSLFactory.Builder builder) throws IOException {\n        X509ExtendedKeyManager x509ExtendedKeyManager = PemUtils.loadIdentityMaterial(\n                getResource(&quot;classpath:ssl/ingress/server.pem&quot;),\n                getResource(&quot;classpath:ssl/ingress/server-key.pem&quot;));\n        X509ExtendedTrustManager x509ExtendedTrustManager = PemUtils.loadTrustMaterial(\n                getResource(&quot;classpath:ssl/ingress/ca.pem&quot;));\n        builder.withIdentityMaterial(x509ExtendedKeyManager)\n                .withTrustMaterial(x509ExtendedTrustManager);\n    }\n\n    private static ClientAuth getClientAuth(SSLParameters sslParameters) {\n        if (sslParameters.getNeedClientAuth()) {\n            return ClientAuth.REQUIRE;\n        } else if (sslParameters.getWantClientAuth()) {\n            return ClientAuth.OPTIONAL;\n        } else {\n            return ClientAuth.NONE;\n        }\n    }\n\n    private InputStream getResource(String path) throws IOException {\n        Resource resource = ResourceUtils.getResource(path);\n        return resource.getInputStream();\n    }\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Bean</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">WebServerFactoryCustomizer</span>&lt;<span class=\"pl-smi\">NettyReactiveWebServerFactory</span>&gt; <span class=\"pl-s1\">sslServerConsumer</span>() {\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">factory</span> -&gt; {\n            <span class=\"pl-s1\">factory</span>.<span class=\"pl-en\">addServerCustomizers</span>(<span class=\"pl-s1\">httpServer</span> -&gt; <span class=\"pl-s1\">httpServer</span>.<span class=\"pl-en\">secure</span>(<span class=\"pl-s1\">sslContextSpec</span> -&gt; {\n                <span class=\"pl-k\">try</span> {\n                    <span class=\"pl-smi\">X509ExtendedKeyManager</span> <span class=\"pl-s1\">x509ExtendedKeyManager</span> = <span class=\"pl-smi\">PemUtils</span>.<span class=\"pl-en\">loadIdentityMaterial</span>(\n                            <span class=\"pl-en\">getResource</span>(<span class=\"pl-s\">\"classpath:ssl/default/server.pem\"</span>),\n                            <span class=\"pl-en\">getResource</span>(<span class=\"pl-s\">\"classpath:ssl/default/server-key.pem\"</span>));\n                    <span class=\"pl-smi\">X509ExtendedTrustManager</span> <span class=\"pl-s1\">x509ExtendedTrustManager</span> = <span class=\"pl-smi\">PemUtils</span>.<span class=\"pl-en\">loadTrustMaterial</span>(<span class=\"pl-en\">getResource</span>(<span class=\"pl-s\">\"classpath:ssl/default/ca.pem\"</span>));\n                    <span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-smi\">Builder</span> <span class=\"pl-s1\">builder</span> = <span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-en\">builder</span>()\n                            .<span class=\"pl-en\">withIdentityMaterial</span>(<span class=\"pl-s1\">x509ExtendedKeyManager</span>)\n                            .<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-s1\">x509ExtendedTrustManager</span>);\n                    <span class=\"pl-en\">loadOtherCertificate</span>(<span class=\"pl-s1\">builder</span>);\n                    <span class=\"pl-s1\">builder</span>.<span class=\"pl-en\">withProtocols</span>(<span class=\"pl-s\">\"TLSv1.2\"</span>);\n                    <span class=\"pl-smi\">SSLFactory</span> <span class=\"pl-s1\">sslFactory</span> = <span class=\"pl-s1\">builder</span>.<span class=\"pl-en\">build</span>();\n                    <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"ssl init success\"</span>);\n                    <span class=\"pl-smi\">X509ExtendedKeyManager</span> <span class=\"pl-s1\">keyManager</span> = <span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getKeyManager</span>()\n                            .<span class=\"pl-en\">orElseThrow</span>(<span class=\"pl-smi\">NullPointerException</span>::<span class=\"pl-k\">new</span>);\n                    <span class=\"pl-smi\">SslContextBuilder</span> <span class=\"pl-s1\">sslContextBuilder</span> = <span class=\"pl-smi\">SslContextBuilder</span>.<span class=\"pl-en\">forServer</span>(<span class=\"pl-en\">composeKeyManager</span>((<span class=\"pl-smi\">CompositeX509ExtendedKeyManager</span>) <span class=\"pl-s1\">keyManager</span>))\n                            .<span class=\"pl-en\">ciphers</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getCiphers</span>(), <span class=\"pl-smi\">SupportedCipherSuiteFilter</span>.<span class=\"pl-c1\">INSTANCE</span>)\n                            .<span class=\"pl-en\">protocols</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getProtocols</span>())\n                            .<span class=\"pl-en\">clientAuth</span>(<span class=\"pl-en\">getClientAuth</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getSslParameters</span>()));\n                    <span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getTrustManager</span>().<span class=\"pl-en\">ifPresent</span>(<span class=\"pl-s1\">sslContextBuilder</span>::<span class=\"pl-s1\">trustManager</span>);\n                    <span class=\"pl-s1\">sslContextSpec</span>.<span class=\"pl-en\">sslContext</span>(<span class=\"pl-s1\">sslContextBuilder</span>);\n                } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">Exception</span> <span class=\"pl-s1\">e</span>) {\n                    <span class=\"pl-s1\">e</span>.<span class=\"pl-en\">printStackTrace</span>();\n                }\n            }));\n        };\n    }\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">KeyManager</span> <span class=\"pl-s1\">composeKeyManager</span>(<span class=\"pl-smi\">CompositeX509ExtendedKeyManager</span> <span class=\"pl-s1\">keyManager</span>) {\n        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">CustomKeyManager</span>(<span class=\"pl-s1\">keyManager</span>.<span class=\"pl-en\">getKeyManagers</span>());\n    }\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">loadOtherCertificate</span>(<span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-smi\">Builder</span> <span class=\"pl-s1\">builder</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">IOException</span> {\n        <span class=\"pl-smi\">X509ExtendedKeyManager</span> <span class=\"pl-s1\">x509ExtendedKeyManager</span> = <span class=\"pl-smi\">PemUtils</span>.<span class=\"pl-en\">loadIdentityMaterial</span>(\n                <span class=\"pl-en\">getResource</span>(<span class=\"pl-s\">\"classpath:ssl/ingress/server.pem\"</span>),\n                <span class=\"pl-en\">getResource</span>(<span class=\"pl-s\">\"classpath:ssl/ingress/server-key.pem\"</span>));\n        <span class=\"pl-smi\">X509ExtendedTrustManager</span> <span class=\"pl-s1\">x509ExtendedTrustManager</span> = <span class=\"pl-smi\">PemUtils</span>.<span class=\"pl-en\">loadTrustMaterial</span>(\n                <span class=\"pl-en\">getResource</span>(<span class=\"pl-s\">\"classpath:ssl/ingress/ca.pem\"</span>));\n        <span class=\"pl-s1\">builder</span>.<span class=\"pl-en\">withIdentityMaterial</span>(<span class=\"pl-s1\">x509ExtendedKeyManager</span>)\n                .<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-s1\">x509ExtendedTrustManager</span>);\n    }\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">ClientAuth</span> <span class=\"pl-s1\">getClientAuth</span>(<span class=\"pl-smi\">SSLParameters</span> <span class=\"pl-s1\">sslParameters</span>) {\n        <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">sslParameters</span>.<span class=\"pl-en\">getNeedClientAuth</span>()) {\n            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">ClientAuth</span>.<span class=\"pl-c1\">REQUIRE</span>;\n        } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">sslParameters</span>.<span class=\"pl-en\">getWantClientAuth</span>()) {\n            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">ClientAuth</span>.<span class=\"pl-c1\">OPTIONAL</span>;\n        } <span class=\"pl-k\">else</span> {\n            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">ClientAuth</span>.<span class=\"pl-c1\">NONE</span>;\n        }\n    }\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">InputStream</span> <span class=\"pl-s1\">getResource</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">path</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">IOException</span> {\n        <span class=\"pl-smi\">Resource</span> <span class=\"pl-s1\">resource</span> = <span class=\"pl-smi\">ResourceUtils</span>.<span class=\"pl-en\">getResource</span>(<span class=\"pl-s1\">path</span>);\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">resource</span>.<span class=\"pl-en\">getInputStream</span>();\n    }</pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">When I input www.ingress.com.cn on the browser, the console printed www.gateway.com.cn, there is no other way to match the correct certificate, and the certificate displayed on my browser is www.gateway.com.cn, can you help me</code></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/42345796/143981896-eead48b3-10f3-4853-859d-46735fb2747b.png\"><img src=\"https://user-images.githubusercontent.com/42345796/143981896-eead48b3-10f3-4853-859d-46735fb2747b.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/130",
                "createdAt": "2021-11-30T03:42:01Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix parsing PEM on Android v28 and above",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/140",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/140",
        "createdAt": "2022-01-31T10:33:58Z",
        "number": 140,
        "mergeCommit": {
          "oid": "94357bce4d429b7f53b2a4b975e09e10d2164125",
          "message": "Fix parsing PEM on Android v28 and above (#140)",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/94357bce4d429b7f53b2a4b975e09e10d2164125",
          "parents": {
            "nodes": [
              {
                "oid": "03500521c9ce3f900212e40b66c2f7a6371ac211",
                "message": "Bumped dependencies"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-pem/src/main/java/nl/altindag/ssl/decryptor/PemDecryptor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-pem/src/main/java/nl/altindag/ssl/decryptor/Pkcs8Decryptor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-pem/src/main/java/nl/altindag/ssl/util/PemUtils.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc4x1BrZ2gAoY2NlYjBhMDI4OTIwNjYyZmJjNWVkYzI3OGY4OGY5ZWYyZmQxZjUzOQ",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/140/commits/cceb0a028920662fbc5edc278f88f9ef2fd1f539"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 139,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/139",
                "title": "\"The BC provider no longer provides an implementation for KeyFactory.RSA.\"",
                "bodyHTML": "<p dir=\"auto\"><strong>Describe the bug</strong><br>\nOn Android &gt;= Android 9/P (API 28) I get the following error in logcat:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"FATAL EXCEPTION: DefaultDispatcher-worker-1\n    Process: myapp, PID: 28762\n    nl.altindag.ssl.exception.PrivateKeyParseException: org.bouncycastle.openssl.PEMException: unable to convert key pair: The BC provider no longer provides an implementation for KeyFactory.RSA.  Please see https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html for more details.\n        at nl.altindag.ssl.util.PemUtils.extractPrivateKey(PemUtils.java:454)\n        at nl.altindag.ssl.util.PemUtils.$r8$lambda$s6ElOTWwPljNhjlxXLkUrjqZZdY(Unknown Source:0)\n        at nl.altindag.ssl.util.PemUtils$$ExternalSyntheticLambda10.apply(Unknown Source:2)\n        at java.util.Optional.map(Optional.java:211)\n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:421)\n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:334)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:306)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:232)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:224)\n        ...\n     Caused by: org.bouncycastle.openssl.PEMException: unable to convert key pair: The BC provider no longer provides an implementation for KeyFactory.RSA.  Please see https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html for more details.\n        at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getPrivateKey(Unknown Source:48)\n        at nl.altindag.ssl.util.PemUtils.extractPrivateKey(PemUtils.java:452)\n        at nl.altindag.ssl.util.PemUtils.$r8$lambda$s6ElOTWwPljNhjlxXLkUrjqZZdY(Unknown Source:0)\u00a0\n        at nl.altindag.ssl.util.PemUtils$$ExternalSyntheticLambda10.apply(Unknown Source:2)\u00a0\n        at java.util.Optional.map(Optional.java:211)\u00a0\n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:421)\u00a0\n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:334)\u00a0\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:306)\u00a0\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:232)\u00a0\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:224)\u00a0\n        ...\n     Caused by: java.security.NoSuchAlgorithmException: The BC provider no longer provides an implementation for KeyFactory.RSA.  Please see https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html for more details.\n        at sun.security.jca.Providers.checkBouncyCastleDeprecation(Providers.java:386)\n        at sun.security.jca.Providers.checkBouncyCastleDeprecation(Providers.java:336)\n        at java.security.KeyFactory.getInstance(KeyFactory.java:235)\n        at org.bouncycastle.jcajce.util.NamedJcaJceHelper.createKeyFactory(Unknown Source:2)\n        at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getKeyFactory(Unknown Source:20)\n        at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getPrivateKey(Unknown Source:4)\"><pre class=\"notranslate\"><code class=\"notranslate\">FATAL EXCEPTION: DefaultDispatcher-worker-1\n    Process: myapp, PID: 28762\n    nl.altindag.ssl.exception.PrivateKeyParseException: org.bouncycastle.openssl.PEMException: unable to convert key pair: The BC provider no longer provides an implementation for KeyFactory.RSA.  Please see https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html for more details.\n        at nl.altindag.ssl.util.PemUtils.extractPrivateKey(PemUtils.java:454)\n        at nl.altindag.ssl.util.PemUtils.$r8$lambda$s6ElOTWwPljNhjlxXLkUrjqZZdY(Unknown Source:0)\n        at nl.altindag.ssl.util.PemUtils$$ExternalSyntheticLambda10.apply(Unknown Source:2)\n        at java.util.Optional.map(Optional.java:211)\n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:421)\n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:334)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:306)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:232)\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:224)\n        ...\n     Caused by: org.bouncycastle.openssl.PEMException: unable to convert key pair: The BC provider no longer provides an implementation for KeyFactory.RSA.  Please see https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html for more details.\n        at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getPrivateKey(Unknown Source:48)\n        at nl.altindag.ssl.util.PemUtils.extractPrivateKey(PemUtils.java:452)\n        at nl.altindag.ssl.util.PemUtils.$r8$lambda$s6ElOTWwPljNhjlxXLkUrjqZZdY(Unknown Source:0)\u00a0\n        at nl.altindag.ssl.util.PemUtils$$ExternalSyntheticLambda10.apply(Unknown Source:2)\u00a0\n        at java.util.Optional.map(Optional.java:211)\u00a0\n        at nl.altindag.ssl.util.PemUtils.parsePrivateKey(PemUtils.java:421)\u00a0\n        at nl.altindag.ssl.util.PemUtils.parseIdentityMaterial(PemUtils.java:334)\u00a0\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:306)\u00a0\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:232)\u00a0\n        at nl.altindag.ssl.util.PemUtils.loadIdentityMaterial(PemUtils.java:224)\u00a0\n        ...\n     Caused by: java.security.NoSuchAlgorithmException: The BC provider no longer provides an implementation for KeyFactory.RSA.  Please see https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html for more details.\n        at sun.security.jca.Providers.checkBouncyCastleDeprecation(Providers.java:386)\n        at sun.security.jca.Providers.checkBouncyCastleDeprecation(Providers.java:336)\n        at java.security.KeyFactory.getInstance(KeyFactory.java:235)\n        at org.bouncycastle.jcajce.util.NamedJcaJceHelper.createKeyFactory(Unknown Source:2)\n        at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getKeyFactory(Unknown Source:20)\n        at org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter.getPrivateKey(Unknown Source:4)\n</code></pre></div>\n<p dir=\"auto\">The error links to this site: <a href=\"https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html\" rel=\"nofollow\">https://android-developers.googleblog.com/2018/03/cryptography-changes-in-android-p.html</a></p>\n<p dir=\"auto\">This is my code, how I use this library:</p>\n<div class=\"highlight highlight-source-kotlin notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// load private client cert\nval cert = javaClass.getResourceAsStream(&quot;/credentials/myCert.pem&quot;)\nval key = javaClass.getResourceAsStream(&quot;/credentials/myKey.pem&quot;)\nif (cert == null || key == null)\n    throw Exception(&quot;Private certificate or key missing.&quot;)\nval keyManager = PemUtils.loadIdentityMaterial(cert, key)\n\n// activate client ssl in fuel\nval sslFactory = SSLFactory.builder()\n    .withIdentityMaterial(keyManager)\n    .build()\nFuelManager.instance.socketFactory = sslFactory.sslSocketFactory\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">//</span> load private client cert</span>\n<span class=\"pl-k\">val</span> cert <span class=\"pl-k\">=</span> javaClass.getResourceAsStream(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/credentials/myCert.pem<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">val</span> key <span class=\"pl-k\">=</span> javaClass.getResourceAsStream(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/credentials/myKey.pem<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">if</span> (cert <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">||</span> key <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>)\n    <span class=\"pl-k\">throw</span> <span class=\"pl-en\">Exception</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Private certificate or key missing.<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">val</span> keyManager <span class=\"pl-k\">=</span> <span class=\"pl-en\">PemUtils</span>.loadIdentityMaterial(cert, key)\n\n<span class=\"pl-c\"><span class=\"pl-c\">//</span> activate client ssl in fuel</span>\n<span class=\"pl-k\">val</span> sslFactory <span class=\"pl-k\">=</span> <span class=\"pl-en\">SSLFactory</span>.builder()\n    .withIdentityMaterial(keyManager)\n    .build()\n<span class=\"pl-en\">FuelManager</span>.instance.socketFactory <span class=\"pl-k\">=</span> sslFactory.sslSocketFactory</pre></div>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Android &gt;= Android 9/P (API 28)</li>\n<li>io.github.hakky54:sslcontext-kickstart-for-pem:7.2.0</li>\n<li>I tested several emulators with different Android versions, and it works on devices &lt; API 28, and doesn't work on devices &gt;= API 28</li>\n</ul>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/139",
                "createdAt": "2022-01-31T02:14:28Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Adopt using system property based ssl configuration",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/165",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/165",
        "createdAt": "2022-04-06T17:39:19Z",
        "number": 165,
        "mergeCommit": {
          "oid": "3fc5b0c7d7ccd9a5cca6fc0e195e40bb4dee266e",
          "message": "Adopt using system property based ssl configuration (#165)\n\n* Added simplified ssl configuration based on system properties\r\n\r\n* Fixed sonar warnings\r\n\r\n* Added null validation\r\n\r\n* Fixed imports\r\n\r\n* Simplified extracting protocols\r\n\r\n* Added ciphers and updated documentation\r\n\r\n* Added ciphers and updated documentation\r\n\r\n* Removed duplicate code\r\n\r\n* Renamed methods, added additional validations and refactored a bit\r\n\r\n* Fixed documentation",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/3fc5b0c7d7ccd9a5cca6fc0e195e40bb4dee266e",
          "parents": {
            "nodes": [
              {
                "oid": "9459c928aa3dde89f3adc2ab5fabed93639b4d55",
                "message": "Improved test coverage"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "README.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/SSLFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/StringUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc41wBmL2gAoOGM5NzYzYzdlYTg3Y2E4NTdlMzc3ZDUyMWQyNTc1ODYwZThiOTg4ZQ",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/165/commits/8c9763c7ea87ca857e377d521d2575860e8b988e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 161,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/161",
                "title": "`SSLFactory.Builder.withDefaultIdentityMaterial` method",
                "bodyHTML": "<p dir=\"auto\">When custom sslContext is created there is no easy way to load \"default\" keyManager<br>\n, although <code class=\"notranslate\">withDefaultTrustMaterial</code> allows it do so for trustManager.</p>\n<p dir=\"auto\">It would be nice to have <code class=\"notranslate\">withDefaultIdentityMaterial</code> method that would utilize default keyManager (<code class=\"notranslate\">javax.net.ssl.keyStore</code>)</p>\n<p dir=\"auto\">Documentation suggests to use</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\".withIdentityMaterial(Paths.get(System.getProperty(&quot;javax.net.ssl.keyStore&quot;)), System.getProperty(&quot;javax.net.ssl.keyStorePassword&quot;).toCharArray(), \nSystem.getProperty(&quot;javax.net.ssl.keyStoreType&quot;))\"><pre class=\"notranslate\">.<span class=\"pl-en\">withIdentityMaterial</span>(<span class=\"pl-smi\">Paths</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-smi\">System</span>.<span class=\"pl-en\">getProperty</span>(<span class=\"pl-s\">\"javax.net.ssl.keyStore\"</span>)), <span class=\"pl-smi\">System</span>.<span class=\"pl-en\">getProperty</span>(<span class=\"pl-s\">\"javax.net.ssl.keyStorePassword\"</span>).<span class=\"pl-en\">toCharArray</span>(), \n<span class=\"pl-smi\">System</span>.<span class=\"pl-en\">getProperty</span>(<span class=\"pl-s\">\"javax.net.ssl.keyStoreType\"</span>))</pre></div>\n<p dir=\"auto\">which probably does the trick, but does not handle the cases when properties are not set. Helper method would do null checks and remove boilerplate code from users of SSLFactory.</p>\n<p dir=\"auto\">And Maybe there is a way to get a reference to internal keyManage. I haven't found one.</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/161",
                "createdAt": "2022-04-02T10:45:16Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "fix #166. return the lowercase when generate alias.",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/167",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/167",
        "createdAt": "2022-04-09T15:12:09Z",
        "number": 167,
        "mergeCommit": {
          "oid": "cf1bb50f8e2e3e9b605b1b61fc7ddd45d83c7f2c",
          "message": "fix #166. return the lowercase when generate alias. (#167)",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/cf1bb50f8e2e3e9b605b1b61fc7ddd45d83c7f2c",
          "parents": {
            "nodes": [
              {
                "oid": "5f31caee58ff401d45a185aed741256b6b6adc17",
                "message": "Improved extracting server certificates"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/CertificateUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/CertificateUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc418LuY2gAoMjEzZDIxYmJmZWE2NzczYzZjNDA1OTJhNGNhZmFkNWVkOTcyMDBhYw",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/167/commits/213d21bbfea6773c6c40592a4cafad5ed97200ac"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 166,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/166",
                "title": "the alias of CertificateEntry",
                "bodyHTML": "<p dir=\"auto\"><strong>Describe the bug</strong><br>\nHello, I am going to create an SSLContext with the following code, but the resulting SSLContext does not appear to be complete and its trustedCerts is empty.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    SSLFactory sslFactory = SSLFactory.builder()\n            .withTrustMaterial(CertificateUtils.loadCertificate(&quot;ca.crt&quot;))\n            .build();\n    SSLContext sslContext = sslFactory.getSslContext();\"><pre class=\"notranslate\"><code class=\"notranslate\">    SSLFactory sslFactory = SSLFactory.builder()\n            .withTrustMaterial(CertificateUtils.loadCertificate(\"ca.crt\"))\n            .build();\n    SSLContext sslContext = sslFactory.getSslContext();\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/24501621/162576830-7d25ba46-3dd8-459b-87bf-71e9d088f063.png\"><img src=\"https://user-images.githubusercontent.com/24501621/162576830-7d25ba46-3dd8-459b-87bf-71e9d088f063.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">the content of ca.crt</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"-----BEGIN CERTIFICATE-----\nMIIFWTCCA0GgAwIBAgIUW4b6bPPPyRAm0DrDKKJJ8YlSqOkwDQYJKoZIhvcNAQEL\nBQAwPDE6MDgGA1UEAxMxRWxhc3RpY3NlYXJjaCBzZWN1cml0eSBhdXRvLWNvbmZp\nZ3VyYXRpb24gSFRUUCBDQTAeFw0yMjA0MDUxMjQ1MzVaFw0yNTA0MDQxMjQ1MzVa\nMDwxOjA4BgNVBAMTMUVsYXN0aWNzZWFyY2ggc2VjdXJpdHkgYXV0by1jb25maWd1\ncmF0aW9uIEhUVFAgQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDB\nq3aR//NaqXBUqI0AVHuVWJmFMLYwpi/DQLUYifwOlGx4iAb6ePuiA8b7tXAGPn0z\nTWFQ82t0DZf/1nXoRmNJO8ardAVWcL7z+VDUY7Hab08GJzRRP/V5b7VL+J+WBQOG\nauN0cal3jM14k3FeZApyoL+XqmJ36MSY3WtAPfF3ySH1ltcMguXqN79k3Bxw0mGq\nAJt+z4q8Lq2e8vsMKKpSO1vZ0grvffj6MBni2stfZ4ifA6Kubh/yePShKsG/N8nY\nK6iJYjwLuVUQ1Eaw6X3s78c+eESTlzZiM6I7qTR1JzW5Fuyz/ZPbDcI1zg+p9H4g\nNRaX76Fv9XG/XehLeYxNoTBLytY2d9kdEmW9MIGCqaROabDdxygxcJ5l3aqkBTiA\ntq42vguuiQvpLndfGIEA4qh5AFyo+iqP1226+1onHfeXtbtyqjpHIV6RZa8RqNLg\nynmf96NzzHQq1CfKp5CgQB/l3yaAtFxguNyhKftHia518iTjcUpn9f3gmSzDlZy2\nKgzZMaw8GwdtT+qac3XCVI7vwjY21uEHbCEklh8ZycAt28Dc0h747MqG9A3xdMDV\nlf8iBtGjuxQNJSsOBRY6Up8ajEWeYvEqpKDHVHYxc78qdjGCzltgGIvjzah389mH\nUC458l4Ey4Lns4C7NVAteHva9L71CE/zDTwJ3nECqwIDAQABo1MwUTAdBgNVHQ4E\nFgQUphpsq/WD1QUsRkr9EQaGinawo9owHwYDVR0jBBgwFoAUphpsq/WD1QUsRkr9\nEQaGinawo9owDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAgEAlg8X\nPnpSKIkt+a9imOFcddUgoNSCgwAyBuGdnUKTjuDnV2630O7cRky4Ly8gI3hxuV3j\nI0JHatPA4Xw8m/8rAkgoega4zCQ89L7w8g1b54NnvnMOQIKs4aQ7TsYQUgyGxj6j\nhhs1uLEBgF/uCJR1INZbiw4tjGTJssRSGMUsn7Mto0+3UL3AHqbmQY4IavRDEd2s\nzpyGN1acwh9jl50pcKjgM/UYhNgWvGQgOF7MP8+4BWXBn9O7ufdUt4n08yPFP5hn\nsOKrScnTCPIVn3uExcYDLDEuRDsQXfDvD03Bm6aFPC+qwr+W7k8WZPc7UW3vLzTg\nTPtvnFwTunD3Bzv14b+2BOQH+caOKVyjBn73HzXQ6Xp8KM6ef3+6RZTeomHhqAwr\nTG2vVsLzDhZiNjOE1Le3UeT4eAz7psgg+piouaXkY5FnVmMlNqWGkXfmvtMC8JzG\nuWGUtSV2plImhQMgfrF4wMhntiNQcHa0Fge0k4I4ajt/HD5Al4yMYCMzx7ocbZLg\nbTSDn+PuRt1NBZYC/Icz6L3CaSAVCMIEw145G/ytyu9annHs+hXSx+1ji3MHkF/g\nyE65FKuMXoHLhCdN9MoKFEDr6eLlY7l9HWbcfQGpePoX4L/g1nGMVQmssCChkH5r\nh5BvtLZEjAtAP6q1Al0phYV6eYQvLE8Dzbw0RQ0=\n-----END CERTIFICATE-----\n\"><pre class=\"notranslate\"><code class=\"notranslate\">-----BEGIN CERTIFICATE-----\nMIIFWTCCA0GgAwIBAgIUW4b6bPPPyRAm0DrDKKJJ8YlSqOkwDQYJKoZIhvcNAQEL\nBQAwPDE6MDgGA1UEAxMxRWxhc3RpY3NlYXJjaCBzZWN1cml0eSBhdXRvLWNvbmZp\nZ3VyYXRpb24gSFRUUCBDQTAeFw0yMjA0MDUxMjQ1MzVaFw0yNTA0MDQxMjQ1MzVa\nMDwxOjA4BgNVBAMTMUVsYXN0aWNzZWFyY2ggc2VjdXJpdHkgYXV0by1jb25maWd1\ncmF0aW9uIEhUVFAgQ0EwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDB\nq3aR//NaqXBUqI0AVHuVWJmFMLYwpi/DQLUYifwOlGx4iAb6ePuiA8b7tXAGPn0z\nTWFQ82t0DZf/1nXoRmNJO8ardAVWcL7z+VDUY7Hab08GJzRRP/V5b7VL+J+WBQOG\nauN0cal3jM14k3FeZApyoL+XqmJ36MSY3WtAPfF3ySH1ltcMguXqN79k3Bxw0mGq\nAJt+z4q8Lq2e8vsMKKpSO1vZ0grvffj6MBni2stfZ4ifA6Kubh/yePShKsG/N8nY\nK6iJYjwLuVUQ1Eaw6X3s78c+eESTlzZiM6I7qTR1JzW5Fuyz/ZPbDcI1zg+p9H4g\nNRaX76Fv9XG/XehLeYxNoTBLytY2d9kdEmW9MIGCqaROabDdxygxcJ5l3aqkBTiA\ntq42vguuiQvpLndfGIEA4qh5AFyo+iqP1226+1onHfeXtbtyqjpHIV6RZa8RqNLg\nynmf96NzzHQq1CfKp5CgQB/l3yaAtFxguNyhKftHia518iTjcUpn9f3gmSzDlZy2\nKgzZMaw8GwdtT+qac3XCVI7vwjY21uEHbCEklh8ZycAt28Dc0h747MqG9A3xdMDV\nlf8iBtGjuxQNJSsOBRY6Up8ajEWeYvEqpKDHVHYxc78qdjGCzltgGIvjzah389mH\nUC458l4Ey4Lns4C7NVAteHva9L71CE/zDTwJ3nECqwIDAQABo1MwUTAdBgNVHQ4E\nFgQUphpsq/WD1QUsRkr9EQaGinawo9owHwYDVR0jBBgwFoAUphpsq/WD1QUsRkr9\nEQaGinawo9owDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAgEAlg8X\nPnpSKIkt+a9imOFcddUgoNSCgwAyBuGdnUKTjuDnV2630O7cRky4Ly8gI3hxuV3j\nI0JHatPA4Xw8m/8rAkgoega4zCQ89L7w8g1b54NnvnMOQIKs4aQ7TsYQUgyGxj6j\nhhs1uLEBgF/uCJR1INZbiw4tjGTJssRSGMUsn7Mto0+3UL3AHqbmQY4IavRDEd2s\nzpyGN1acwh9jl50pcKjgM/UYhNgWvGQgOF7MP8+4BWXBn9O7ufdUt4n08yPFP5hn\nsOKrScnTCPIVn3uExcYDLDEuRDsQXfDvD03Bm6aFPC+qwr+W7k8WZPc7UW3vLzTg\nTPtvnFwTunD3Bzv14b+2BOQH+caOKVyjBn73HzXQ6Xp8KM6ef3+6RZTeomHhqAwr\nTG2vVsLzDhZiNjOE1Le3UeT4eAz7psgg+piouaXkY5FnVmMlNqWGkXfmvtMC8JzG\nuWGUtSV2plImhQMgfrF4wMhntiNQcHa0Fge0k4I4ajt/HD5Al4yMYCMzx7ocbZLg\nbTSDn+PuRt1NBZYC/Icz6L3CaSAVCMIEw145G/ytyu9annHs+hXSx+1ji3MHkF/g\nyE65FKuMXoHLhCdN9MoKFEDr6eLlY7l9HWbcfQGpePoX4L/g1nGMVQmssCChkH5r\nh5BvtLZEjAtAP6q1Al0phYV6eYQvLE8Dzbw0RQ0=\n-----END CERTIFICATE-----\n\n</code></pre></div>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java Version 1.8.0_202</li>\n<li>sslcontext-kickstart Version 7.3.0</li>\n<li>OS: Windows</li>\n</ul>\n<p dir=\"auto\"><strong>Additional context</strong><br>\nI found out the cause of the problem, when create <code class=\"notranslate\">X509TrustManagerImpl</code>, its trustedCerts is already empty.<br>\n<code class=\"notranslate\">sun.security.ssl.X509TrustManagerImpl</code><br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/24501621/162578048-305fc97f-35df-478d-9435-5a862a44c77d.png\"><img src=\"https://user-images.githubusercontent.com/24501621/162578048-305fc97f-35df-478d-9435-5a862a44c77d.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><code class=\"notranslate\">sun.security.validator.KeyStores.getTrustedCerts(KeyStore var0)</code><br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/24501621/162578133-bcf42382-d41c-4ce1-8e55-82ab47e4029f.png\"><img src=\"https://user-images.githubusercontent.com/24501621/162578133-bcf42382-d41c-4ce1-8e55-82ab47e4029f.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><code class=\"notranslate\">java.security.KeyStore.isCertificateEntry(String alias)</code><br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/24501621/162578150-dee124a1-9604-4abe-adba-e99ea1e4e593.png\"><img src=\"https://user-images.githubusercontent.com/24501621/162578150-dee124a1-9604-4abe-adba-e99ea1e4e593.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><code class=\"notranslate\">sun.security.pkcs12.PKCS12KeyStore.engineIsCertificateEntry(String var1)</code><br>\nthe entries keys has the capital letters, but the parameter <code class=\"notranslate\">var1</code> is lowercase letters<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/24501621/162578285-e0fb121b-7e7d-4489-90cb-65824e5e2c92.png\"><img src=\"https://user-images.githubusercontent.com/24501621/162578285-e0fb121b-7e7d-4489-90cb-65824e5e2c92.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Can you consider changing alias to lowercase in the <code class=\"notranslate\">nl.altindag.ssl.util.KeyStoreUtils.createTrustStore(List&lt;T&gt; certificates)</code><br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/24501621/162578511-a3e4cdd8-d670-4e57-a84e-dfe297d24178.png\"><img src=\"https://user-images.githubusercontent.com/24501621/162578511-a3e4cdd8-d670-4e57-a84e-dfe297d24178.png\" alt=\"image\" style=\"max-width: 100%;\"></a><br>\nor <code class=\"notranslate\">nl.altindag.ssl.util.CertificateUtils.generateAlias(Certificate certificate)</code><br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/24501621/162578648-63ef2dc9-59c5-4203-bdb0-791952a5eb06.png\"><img src=\"https://user-images.githubusercontent.com/24501621/162578648-63ef2dc9-59c5-4203-bdb0-791952a5eb06.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/166",
                "createdAt": "2022-04-09T14:35:40Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Bug-Fix - continue validation counter party while having empty trust managers",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/182",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/182",
        "createdAt": "2022-05-10T22:44:36Z",
        "number": 182,
        "mergeCommit": {
          "oid": "603fa41584c602a29039a3f6021173ccf62dd979",
          "message": "Bug-Fix - continue validation counter party while having empty trust managers (#182)\n\n* Using only trust managers which have trusted certificates\r\n\r\n* Fixed test",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/603fa41584c602a29039a3f6021173ccf62dd979",
          "parents": {
            "nodes": [
              {
                "oid": "99dbe00fcff5f0fd73458eede9aed1f63ec5622c",
                "message": "Bump version.netty-handler from 4.1.76.Final to 4.1.77.Final (#180)\n\nBumps `version.netty-handler` from 4.1.76.Final to 4.1.77.Final.\r\n\r\nUpdates `netty-handler` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-resolver-dns` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-transport-native-epoll` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-codec-http2` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-transport-native-unix-common` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-resolver-dns-native-macos` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-buffer` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-codec` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-common` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\nUpdates `netty-transport` from 4.1.76.Final to 4.1.77.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.76.Final...netty-4.1.77.Final)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: io.netty:netty-handler\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-resolver-dns\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-transport-native-epoll\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-codec-http2\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-transport-native-unix-common\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-resolver-dns-native-macos\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-buffer\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-codec\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-common\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-transport\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/CombinableX509TrustManager.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryIT.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/TrustManagerUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc43m7oY2gAoYmI3NmZkMzQ2Yjc1N2E5NzNlNjNkYjBkYWY5NGM0ZWFiNTJkODdmMA",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/182/commits/bb76fd346b757a973e63db0daf94c4eab52d87f0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 181,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/181",
                "title": "CombinableX509TrustManager can't completed all trustManager's check",
                "bodyHTML": "<p dir=\"auto\"><strong>Describe the bug</strong><br>\nHi, i found that CombinableX509TrustManager can't completed all trustManager's check, when some trustManager's trustdCerts is empty.</p>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class ElasticsearchTest {\n    @Test\n    public void test_connect_elasticsearch_server() throws IOException {\n        SSLFactory sslFactory = SSLFactory.builder()\n                .withSystemTrustMaterial()\n                .withTrustMaterial(CertificateUtils.loadCertificate(&quot;http_ca.crt&quot;))\n                .build();\n        BasicCredentialsProvider basicCredentialsProvider = new BasicCredentialsProvider();\n        basicCredentialsProvider.setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(&quot;elastic&quot;, &quot;es123456&quot;));\n\n        RestClient restClient = RestClient.builder(new HttpHost(&quot;192.168.169.2&quot;, 39200, &quot;https&quot;))\n                .setHttpClientConfigCallback(httpAsyncClientBuilder -&gt; httpAsyncClientBuilder\n                        .setDefaultCredentialsProvider(basicCredentialsProvider)\n                        .setSSLContext(sslFactory.getSslContext())\n                        .setSSLHostnameVerifier(sslFactory.getHostnameVerifier())\n                )\n                .build();\n        RestClientTransport restClientTransport = new RestClientTransport(restClient, new JacksonJsonpMapper());\n        ElasticsearchClient elasticsearchClient = new ElasticsearchClient(restClientTransport);\n        IndicesResponse indices = elasticsearchClient.cat().indices();\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">ElasticsearchTest</span> {\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">test_connect_elasticsearch_server</span>() <span class=\"pl-k\">throws</span> <span class=\"pl-smi\">IOException</span> {\n        <span class=\"pl-smi\">SSLFactory</span> <span class=\"pl-s1\">sslFactory</span> = <span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-en\">builder</span>()\n                .<span class=\"pl-en\">withSystemTrustMaterial</span>()\n                .<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-smi\">CertificateUtils</span>.<span class=\"pl-en\">loadCertificate</span>(<span class=\"pl-s\">\"http_ca.crt\"</span>))\n                .<span class=\"pl-en\">build</span>();\n        <span class=\"pl-smi\">BasicCredentialsProvider</span> <span class=\"pl-s1\">basicCredentialsProvider</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">BasicCredentialsProvider</span>();\n        <span class=\"pl-s1\">basicCredentialsProvider</span>.<span class=\"pl-en\">setCredentials</span>(<span class=\"pl-smi\">AuthScope</span>.<span class=\"pl-c1\">ANY</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">UsernamePasswordCredentials</span>(<span class=\"pl-s\">\"elastic\"</span>, <span class=\"pl-s\">\"es123456\"</span>));\n\n        <span class=\"pl-smi\">RestClient</span> <span class=\"pl-s1\">restClient</span> = <span class=\"pl-smi\">RestClient</span>.<span class=\"pl-en\">builder</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">HttpHost</span>(<span class=\"pl-s\">\"192.168.169.2\"</span>, <span class=\"pl-c1\">39200</span>, <span class=\"pl-s\">\"https\"</span>))\n                .<span class=\"pl-en\">setHttpClientConfigCallback</span>(<span class=\"pl-s1\">httpAsyncClientBuilder</span> -&gt; <span class=\"pl-s1\">httpAsyncClientBuilder</span>\n                        .<span class=\"pl-en\">setDefaultCredentialsProvider</span>(<span class=\"pl-s1\">basicCredentialsProvider</span>)\n                        .<span class=\"pl-en\">setSSLContext</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getSslContext</span>())\n                        .<span class=\"pl-en\">setSSLHostnameVerifier</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getHostnameVerifier</span>())\n                )\n                .<span class=\"pl-en\">build</span>();\n        <span class=\"pl-smi\">RestClientTransport</span> <span class=\"pl-s1\">restClientTransport</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RestClientTransport</span>(<span class=\"pl-s1\">restClient</span>, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">JacksonJsonpMapper</span>());\n        <span class=\"pl-smi\">ElasticsearchClient</span> <span class=\"pl-s1\">elasticsearchClient</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ElasticsearchClient</span>(<span class=\"pl-s1\">restClientTransport</span>);\n        <span class=\"pl-smi\">IndicesResponse</span> <span class=\"pl-s1\">indices</span> = <span class=\"pl-s1\">elasticsearchClient</span>.<span class=\"pl-en\">cat</span>().<span class=\"pl-en\">indices</span>();\n    }\n}</pre></div>\n<p dir=\"auto\">in withSystemTrustMaterial(), it would load Windows-ROOT keystore and Windows-MY keystore, but now my Windows-MY keystore certicate is empty.<br>\nin withTrustMaterial(CertificateUtils.loadCertificate(\"http_ca.crt\")), it would load the elasticsearch's certicate.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/24501621/167653717-e786ea91-e646-4e20-b1ac-9d96966ec06c.png\"><img src=\"https://user-images.githubusercontent.com/24501621/167653717-e786ea91-e646-4e20-b1ac-9d96966ec06c.png\" alt=\"trustmanagers\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">the error is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n\tat java.security.cert.PKIXParameters.setTrustAnchors(PKIXParameters.java:200)\n\tat java.security.cert.PKIXParameters.&lt;init&gt;(PKIXParameters.java:120)\n\tat java.security.cert.PKIXBuilderParameters.&lt;init&gt;(PKIXBuilderParameters.java:104)\n\tat sun.security.validator.PKIXValidator.&lt;init&gt;(PKIXValidator.java:99)\n\tat sun.security.validator.Validator.getInstance(Validator.java:181)\n\tat sun.security.ssl.X509TrustManagerImpl.getValidator(X509TrustManagerImpl.java:299)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrustedInit(X509TrustManagerImpl.java:175)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:245)\n\tat sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:140)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.lambda$checkServerTrusted$6(CompositeX509ExtendedTrustManager.java:110)\n\tat nl.altindag.ssl.trustmanager.CombinableX509TrustManager.checkTrusted(CombinableX509TrustManager.java:40)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.checkServerTrusted(CompositeX509ExtendedTrustManager.java:110)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:630)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.onCertificate(CertificateMessage.java:471)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.consume(CertificateMessage.java:367)\n\tat sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:376)\n\tat sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:479)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:990)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:977)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:924)\n\tat org.apache.http.nio.reactor.ssl.SSLIOSession.doRunTask(SSLIOSession.java:288)\n\tat org.apache.http.nio.reactor.ssl.SSLIOSession.doHandshake(SSLIOSession.java:356)\n\t... 9 more\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n\tat java.security.cert.PKIXParameters.setTrustAnchors(PKIXParameters.java:200)\n\tat java.security.cert.PKIXParameters.&lt;init&gt;(PKIXParameters.java:120)\n\tat java.security.cert.PKIXBuilderParameters.&lt;init&gt;(PKIXBuilderParameters.java:104)\n\tat sun.security.validator.PKIXValidator.&lt;init&gt;(PKIXValidator.java:99)\n\tat sun.security.validator.Validator.getInstance(Validator.java:181)\n\tat sun.security.ssl.X509TrustManagerImpl.getValidator(X509TrustManagerImpl.java:299)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrustedInit(X509TrustManagerImpl.java:175)\n\tat sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:245)\n\tat sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:140)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.lambda$checkServerTrusted$6(CompositeX509ExtendedTrustManager.java:110)\n\tat nl.altindag.ssl.trustmanager.CombinableX509TrustManager.checkTrusted(CombinableX509TrustManager.java:40)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.checkServerTrusted(CompositeX509ExtendedTrustManager.java:110)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.checkServerCerts(CertificateMessage.java:630)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.onCertificate(CertificateMessage.java:471)\n\tat sun.security.ssl.CertificateMessage$T12CertificateConsumer.consume(CertificateMessage.java:367)\n\tat sun.security.ssl.SSLHandshake.consume(SSLHandshake.java:376)\n\tat sun.security.ssl.HandshakeContext.dispatch(HandshakeContext.java:479)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:990)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask$DelegatedAction.run(SSLEngineImpl.java:977)\n\tat java.security.AccessController.doPrivileged(Native Method)\n\tat sun.security.ssl.SSLEngineImpl$DelegatedTask.run(SSLEngineImpl.java:924)\n\tat org.apache.http.nio.reactor.ssl.SSLIOSession.doRunTask(SSLIOSession.java:288)\n\tat org.apache.http.nio.reactor.ssl.SSLIOSession.doHandshake(SSLIOSession.java:356)\n\t... 9 more\n</code></pre></div>\n<p dir=\"auto\">I found in CombinableX509TrustManager will check all the TrustManager whether to support the current certificate chain. As a result of my second TrustManage from <code class=\"notranslate\">Windows-MY</code> trustCerts is empty, so when executing <code class=\"notranslate\">callBackConsumer.checkTrusted(trustManager);</code> method throws <code class=\"notranslate\">InvalidAlgorithmParameterException</code>, but my third TrustManager actually can trust the current certificate.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/24501621/167658297-bf6c3dc8-b8be-4ce8-ae21-7980beca928b.png\"><img src=\"https://user-images.githubusercontent.com/24501621/167658297-bf6c3dc8-b8be-4ce8-ae21-7980beca928b.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Whether all exceptions can be caught in <code class=\"notranslate\">CombinableX509TrustManager.checkTrusted</code> so that all TrustManagers have a chance to be executed, or whether <code class=\"notranslate\">callBackConsumer.checkTrusted(trustManager);</code> is not executed when the <code class=\"notranslate\">trustCerts</code> of the <code class=\"notranslate\">trustManager</code> is empty.</p>\n<p dir=\"auto\">Although I could have avoided this problem in my example by removing <code class=\"notranslate\">.withSystemTrustMaterial()</code>, I think it's still possible that someone could load multiple TrustManagers at the same time, and the trustCerts of one of them might be empty.</p>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java Version 1.8.0_321</li>\n<li>sslcontext-kickstart Version 7.4.2</li>\n<li>OS: Windows</li>\n</ul>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/181",
                "createdAt": "2022-05-10T15:15:56Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Do not use CombineableTrustManager if UnsafeTrustManager is enabled",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/197",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/197",
        "createdAt": "2022-07-07T05:46:05Z",
        "number": 197,
        "mergeCommit": {
          "oid": "5effabcf4399cb187cfbdc56ec15072b5e345222",
          "message": "Do not use CombineableTrustManager if UnsafeTrustManager is enabled (#197)\n\n* Use UnsafeTrustManager as base trustmanager if enabled\r\n\r\n* Applied sonar recommendation",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/5effabcf4399cb187cfbdc56ec15072b5e345222",
          "parents": {
            "nodes": [
              {
                "oid": "4c152e9339eb8c48fd24062e1215a5c22a0949a0",
                "message": "Bump jetty-reactive-httpclient from 1.1.11 to 1.1.12 (#195)\n\nBumps [jetty-reactive-httpclient](https://github.com/jetty-project/jetty-reactive-httpclient) from 1.1.11 to 1.1.12.\r\n- [Release notes](https://github.com/jetty-project/jetty-reactive-httpclient/releases)\r\n- [Commits](https://github.com/jetty-project/jetty-reactive-httpclient/compare/1.1.11...1.1.12)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.eclipse.jetty:jetty-reactive-httpclient\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/CombinableX509TrustManager.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/TrustManagerUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/TrustManagerUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc46_dCA2gAoNDI3NDFlMWE1ZTM0MjE3ZmEzOGI3ZTExZTI0ZDlmMDE3NWUzNWJlMQ",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/197/commits/42741e1a5e34217fa38b7e11e24d9f0175e35be1"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 196,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/196",
                "title": "Version 7.4.3 fails to accept all certificates",
                "bodyHTML": "<p dir=\"auto\"><strong>Describe the bug</strong><br>\nIt seems that changes in version 7.4.3 skips accept-all truststore configured using<br>\n<code class=\"notranslate\">builder.withUnsafeTrustMaterial()</code> or <code class=\"notranslate\">builder.withTrustingAllCertificatesWithoutValidation()</code></p>\n<p dir=\"auto\">This is because UnsafeX509ExtendedTrustManager has 0 accepted X509Certificate<br>\ntherefore it is skipped during checking in CombinableX509TrustManager</p>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SSLFactory.Builder builder = SSLFactory.builder().withDefaultTrustMaterial();\nbuilder.withUnsafeTrustMaterial();\nSSLFactory factory = builder.build();\n\nSSLContext sslContext = factory.getSslContext();\nSSLContext.setDefault(sslContext);\"><pre class=\"notranslate\"><code class=\"notranslate\">SSLFactory.Builder builder = SSLFactory.builder().withDefaultTrustMaterial();\nbuilder.withUnsafeTrustMaterial();\nSSLFactory factory = builder.build();\n\nSSLContext sslContext = factory.getSslContext();\nSSLContext.setDefault(sslContext);\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected behavior</strong><br>\nValidation of the TLS certificate should pass and connection should be established</p>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java Version 11.0</li>\n<li>Gradle</li>\n<li>OS MacOS</li>\n</ul>\n<p dir=\"auto\"><strong>Additional context</strong><br>\nThe test passes with 7.3.0 and 7.4.2</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/196",
                "createdAt": "2022-07-04T14:51:36Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "bug"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support for loading android trusted certificates",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/203",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/203",
        "createdAt": "2022-08-02T14:58:48Z",
        "number": 203,
        "mergeCommit": {
          "oid": "04d6c0331fae0c783eab3a4d59bc381b75cd9131",
          "message": "Added AndroidCAStore to fetch when calling system key stores (#203)",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/04d6c0331fae0c783eab3a4d59bc381b75cd9131",
          "parents": {
            "nodes": [
              {
                "oid": "1e0d28ae54dd9c0158454ed8939e38b656041218",
                "message": "Bump version.junit from 5.8.2 to 5.9.0 (#202)\n\nBumps `version.junit` from 5.8.2 to 5.9.0.\r\n\r\nUpdates `junit-jupiter-api` from 5.8.2 to 5.9.0\r\n- [Release notes](https://github.com/junit-team/junit5/releases)\r\n- [Commits](https://github.com/junit-team/junit5/compare/r5.8.2...r5.9.0)\r\n\r\nUpdates `junit-jupiter-engine` from 5.8.2 to 5.9.0\r\n- [Release notes](https://github.com/junit-team/junit5/releases)\r\n- [Commits](https://github.com/junit-team/junit5/compare/r5.8.2...r5.9.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.junit.jupiter:junit-jupiter-api\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-minor\r\n- dependency-name: org.junit.jupiter:junit-jupiter-engine\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyStoreUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc48gzKq2gAoZDIwNjBmOTE2YjViNDJmMzE2M2I2OGZmZjdjMTBhMzY5YjhmY2Q0NQ",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/203/commits/d2060f916b5b42f3163b68fff7c10a369b8fcd45"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 194,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/194",
                "title": "Support for Android keystore",
                "bodyHTML": "",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/194",
                "createdAt": "2022-06-24T14:33:32Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "no-activity"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Improved validation of hostname verifier",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/215",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/215",
        "createdAt": "2022-08-24T21:06:08Z",
        "number": 215,
        "mergeCommit": {
          "oid": "a9628c0e9af31e620775078439fb7d3c6e80995e",
          "message": "Improved validation of hostname verifier (#215)\n\n* Improved validation of hostname verifier\r\n\r\n* Applied sonar recommendation\r\n\r\n* Renamed to FenixHostnameVerifier, corrected license header and changed default HostnameVerifier within SSLFactory\r\n\r\n* Adjusted link to original file",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/a9628c0e9af31e620775078439fb7d3c6e80995e",
          "parents": {
            "nodes": [
              {
                "oid": "8ca490d25d7dbb3c9e517c5c054205514841a27e",
                "message": "Added example for ocsp for file system"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/SSLFactory.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/exception/GenericHostnameVerifierException.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/hostnameverifier/BasicHostNameVerifier.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/hostnameverifier/FenixHostnameVerifier.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/hostnameverifier/HostnameCommon.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/hostnameverifier/Hostnames.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/HostnameVerifierUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/hostnameverifier/BasicHostnameVerifierShould.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/hostnameverifier/FenixHostnameVerifierShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc49v-782gAoYzdiM2NmMDg3ZmIyZDlmMWQ1NzNhZmU3ZTVjOGJmZDRkOGUwYWJiNQ",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/215/commits/c7b3cf087fb2d9f1d573afe7e5c8bfd4d8e0abb5"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 210,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/210",
                "title": "BasicHostnameVerifier is broken?",
                "bodyHTML": "<p dir=\"auto\">It appears that BasicHostnameVerifier doesn't actually check that the hostname in the URL matches the hostname in the SAN part of the peer\u2019s certificate.</p>\n<p dir=\"auto\">As a consequence, a server that had a certificate for say <code class=\"notranslate\">attacker.com</code> could be verified against a client request to <code class=\"notranslate\">victim.com</code>.</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/210",
                "createdAt": "2022-08-15T11:29:05Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "bug"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Improve constructing trustmanager",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/217",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/217",
        "createdAt": "2022-08-30T09:09:01Z",
        "number": 217,
        "mergeCommit": {
          "oid": "7b1807f98e7292189f39e383110212ba0f7f0b13",
          "message": "Improve constructing trustmanager (#217)\n\n* Added additional validations when constructing TrustManager\r\n\r\n* Improved unwrapping trust manager",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/7b1807f98e7292189f39e383110212ba0f7f0b13",
          "parents": {
            "nodes": [
              {
                "oid": "db2b7ca146d99f661da9cd0bcb7b837708895771",
                "message": "Bump version.netty-handler from 4.1.79.Final to 4.1.80.Final (#216)\n\nBumps `version.netty-handler` from 4.1.79.Final to 4.1.80.Final.\r\n\r\nUpdates `netty-handler` from 4.1.79.Final to 4.1.80.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.79.Final...netty-4.1.80.Final)\r\n\r\nUpdates `netty-resolver-dns` from 4.1.79.Final to 4.1.80.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.79.Final...netty-4.1.80.Final)\r\n\r\nUpdates `netty-transport-native-epoll` from 4.1.79.Final to 4.1.80.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.79.Final...netty-4.1.80.Final)\r\n\r\nUpdates `netty-codec-http2` from 4.1.79.Final to 4.1.80.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.79.Final...netty-4.1.80.Final)\r\n\r\nUpdates `netty-transport-native-unix-common` from 4.1.79.Final to 4.1.80.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.79.Final...netty-4.1.80.Final)\r\n\r\nUpdates `netty-resolver-dns-native-macos` from 4.1.79.Final to 4.1.80.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.79.Final...netty-4.1.80.Final)\r\n\r\nUpdates `netty-buffer` from 4.1.79.Final to 4.1.80.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.79.Final...netty-4.1.80.Final)\r\n\r\nUpdates `netty-codec` from 4.1.79.Final to 4.1.80.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.79.Final...netty-4.1.80.Final)\r\n\r\nUpdates `netty-common` from 4.1.79.Final to 4.1.80.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.79.Final...netty-4.1.80.Final)\r\n\r\nUpdates `netty-transport` from 4.1.79.Final to 4.1.80.Final\r\n- [Release notes](https://github.com/netty/netty/releases)\r\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.79.Final...netty-4.1.80.Final)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: io.netty:netty-handler\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-resolver-dns\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-transport-native-epoll\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-codec-http2\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-transport-native-unix-common\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-resolver-dns-native-macos\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-buffer\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-codec\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-common\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: io.netty:netty-transport\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-apache4/src/test/java/nl/altindag/ssl/SSLFactoryIT.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-apache5/src/test/java/nl/altindag/ssl/SSLFactoryIT.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-jetty/src/test/java/nl/altindag/ssl/SSLFactoryIT.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-netty/src/test/java/nl/altindag/ssl/SSLFactoryIT.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-pem/src/test/java/nl/altindag/ssl/SSLFactoryIT.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/TrustManagerUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/ValidationUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryIT.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/TrustManagerUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc4-B6on2gAoYzE4MjNmODNhM2UyZjNhMDI0YTAwNjkyYzU2YzE4NDhiOTY3ZmQyMA",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/217/commits/c1823f83a3e2f3a024a00692c56c1848b967fd20"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 196,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/196",
                "title": "Version 7.4.3 fails to accept all certificates",
                "bodyHTML": "<p dir=\"auto\"><strong>Describe the bug</strong><br>\nIt seems that changes in version 7.4.3 skips accept-all truststore configured using<br>\n<code class=\"notranslate\">builder.withUnsafeTrustMaterial()</code> or <code class=\"notranslate\">builder.withTrustingAllCertificatesWithoutValidation()</code></p>\n<p dir=\"auto\">This is because UnsafeX509ExtendedTrustManager has 0 accepted X509Certificate<br>\ntherefore it is skipped during checking in CombinableX509TrustManager</p>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SSLFactory.Builder builder = SSLFactory.builder().withDefaultTrustMaterial();\nbuilder.withUnsafeTrustMaterial();\nSSLFactory factory = builder.build();\n\nSSLContext sslContext = factory.getSslContext();\nSSLContext.setDefault(sslContext);\"><pre class=\"notranslate\"><code class=\"notranslate\">SSLFactory.Builder builder = SSLFactory.builder().withDefaultTrustMaterial();\nbuilder.withUnsafeTrustMaterial();\nSSLFactory factory = builder.build();\n\nSSLContext sslContext = factory.getSslContext();\nSSLContext.setDefault(sslContext);\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected behavior</strong><br>\nValidation of the TLS certificate should pass and connection should be established</p>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java Version 11.0</li>\n<li>Gradle</li>\n<li>OS MacOS</li>\n</ul>\n<p dir=\"auto\"><strong>Additional context</strong><br>\nThe test passes with 7.3.0 and 7.4.2</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/196",
                "createdAt": "2022-07-04T14:51:36Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "bug"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix FenixHostnameVerifier for absolute names. (#230)",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/234",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/234",
        "createdAt": "2022-09-26T13:52:39Z",
        "number": 234,
        "mergeCommit": {
          "oid": "dc300a321670a761a73adb677d49c727dc049deb",
          "message": "Fix FenixHostnameVerifier for absolute names. (#230) (#234)\n\nAdds a (uncommon) test case to verify the fix.\r\nAdds a documentation statement about the behavior of this verifier in\r\nterms of wildcards and CN attribute.\r\n\r\nThis will also remove a un-needed check in the SAN extraction stream.\r\n\r\nSigned-off-by: Bernd Eckenfels <b.eckenfels@seeburger.de>\r\n\r\nSigned-off-by: Bernd Eckenfels <b.eckenfels@seeburger.de>",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/dc300a321670a761a73adb677d49c727dc049deb",
          "parents": {
            "nodes": [
              {
                "oid": "0e5032f52f687327018d8318ccb69c67816b2b1b",
                "message": "Bump version.junit from 5.9.0 to 5.9.1 (#231)\n\nBumps `version.junit` from 5.9.0 to 5.9.1.\r\n\r\nUpdates `junit-jupiter-api` from 5.9.0 to 5.9.1\r\n- [Release notes](https://github.com/junit-team/junit5/releases)\r\n- [Commits](https://github.com/junit-team/junit5/compare/r5.9.0...r5.9.1)\r\n\r\nUpdates `junit-jupiter-engine` from 5.9.0 to 5.9.1\r\n- [Release notes](https://github.com/junit-team/junit5/releases)\r\n- [Commits](https://github.com/junit-team/junit5/compare/r5.9.0...r5.9.1)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.junit.jupiter:junit-jupiter-api\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: org.junit.jupiter:junit-jupiter-engine\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/hostnameverifier/FenixHostnameVerifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/hostnameverifier/FenixHostnameVerifierShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc4_m_WF2gAoNDdhNzMyNTQ2NzMxNTlkMTI1MjljYjY1ZDVmMzZhN2MxNjgzMzY3OA",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/234/commits/47a73254673159d12529cb65d5f36a7c16833678"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 230,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/230",
                "title": "FenixHostnameVerifier issues",
                "bodyHTML": "<p dir=\"auto\">Should this be an endsWith()?</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/Hakky54/sslcontext-kickstart/blob/c779b17a64f0738d1dd2d2ec9c5e02bc6f5521f3/sslcontext-kickstart/src/main/java/nl/altindag/ssl/hostnameverifier/FenixHostnameVerifier.java#L188\">sslcontext-kickstart/sslcontext-kickstart/src/main/java/nl/altindag/ssl/hostnameverifier/FenixHostnameVerifier.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 188\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/Hakky54/sslcontext-kickstart/commit/c779b17a64f0738d1dd2d2ec9c5e02bc6f5521f3\">c779b17</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L188\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"188\"></td>\n          <td id=\"LC188\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (!<span class=\"pl-s1\">absoluteHostname</span>.<span class=\"pl-en\">startsWith</span>(<span class=\"pl-s\">\".\"</span>)) { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">can the !empty be removed if you check for size=2 anyway?</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/Hakky54/sslcontext-kickstart/blob/c779b17a64f0738d1dd2d2ec9c5e02bc6f5521f3/sslcontext-kickstart/src/main/java/nl/altindag/ssl/hostnameverifier/FenixHostnameVerifier.java#L124\">sslcontext-kickstart/sslcontext-kickstart/src/main/java/nl/altindag/ssl/hostnameverifier/FenixHostnameVerifier.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 124\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/Hakky54/sslcontext-kickstart/commit/c779b17a64f0738d1dd2d2ec9c5e02bc6f5521f3\">c779b17</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L124\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"124\"></td>\n          <td id=\"LC124\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> .<span class=\"pl-en\">filter</span>(<span class=\"pl-s1\">subjectAlternativeName</span> -&gt; !<span class=\"pl-s1\">subjectAlternativeName</span>.<span class=\"pl-en\">isEmpty</span>()) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Is this intentionally not checking CN?</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/Hakky54/sslcontext-kickstart/blob/c779b17a64f0738d1dd2d2ec9c5e02bc6f5521f3/sslcontext-kickstart/src/main/java/nl/altindag/ssl/hostnameverifier/FenixHostnameVerifier.java#L119\">sslcontext-kickstart/sslcontext-kickstart/src/main/java/nl/altindag/ssl/hostnameverifier/FenixHostnameVerifier.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 119\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/Hakky54/sslcontext-kickstart/commit/c779b17a64f0738d1dd2d2ec9c5e02bc6f5521f3\">c779b17</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L119\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"119\"></td>\n          <td id=\"LC119\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">List</span>&lt;?&gt;&gt; <span class=\"pl-s1\">subjectAlternativeNames</span> = <span class=\"pl-smi\">Optional</span>.<span class=\"pl-en\">ofNullable</span>(<span class=\"pl-s1\">certificate</span>.<span class=\"pl-en\">getSubjectAlternativeNames</span>()) </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">i can provide a PR for those issues if youmagree it needs to be fixed.</p>\n<p dir=\"auto\">this verifier should probably also carry a warning that it does not know/forbid patterns in TLDs (*.co.uk instead of *.dom.co.uk or even *.com)?</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/230",
                "createdAt": "2022-09-23T17:09:15Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Added support for one liner pem certificates",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/243",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/243",
        "createdAt": "2022-10-24T14:10:46Z",
        "number": 243,
        "mergeCommit": {
          "oid": "ea47945a2b2857f92da4199538f20e4f709ba7cf",
          "message": "Added support for one liner pem certificates (#243)\n\n* Added support for one liner pem certificates including private keys\r\n\r\n* Applied sonar recommendation\r\n\r\n* Corrected reference file\r\n\r\n* Removed redundant extraction of pem content\r\n\r\n* Applied feedback\r\n\r\n* Initialize the encryption algorithm and salt to field length just once\r\n\r\n* Added test for RSA AES 256 CBC\r\n\r\n* Corrected test name\r\n\r\n* renamed file\r\n\r\n* Added explaining exception message for unsupported encrypted private key",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/ea47945a2b2857f92da4199538f20e4f709ba7cf",
          "parents": {
            "nodes": [
              {
                "oid": "84f858bc95120d644573a84df448ba6d942dcbcc",
                "message": "Bump mockito-junit-jupiter from 4.8.0 to 4.8.1 (#242)\n\nBumps [mockito-junit-jupiter](https://github.com/mockito/mockito) from 4.8.0 to 4.8.1.\r\n- [Release notes](https://github.com/mockito/mockito/releases)\r\n- [Commits](https://github.com/mockito/mockito/compare/v4.8.0...v4.8.1)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.mockito:mockito-junit-jupiter\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart-for-pem/src/test/resources/pem/one-liner-encrypted-rsa-aes-256-cbc-private-key.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart-for-pem/src/test/resources/pem/one-liner-encrypted-rsa-des-ede3-cbc-identity.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart-for-pem/src/test/resources/pem/one-liner-encrypted-rsa-faulty-private-key.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart-for-pem/src/test/resources/pem/one-liner-github-certificate.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart-for-pem/src/test/resources/pem/one-liner-invalid-certificate.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart-for-pem/src/test/resources/pem/one-liner-multiple-certificates.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart-for-pem/src/test/resources/pem/one-liner-stackexchange.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart-for-pem/src/test/resources/pem/one-liner-unencrypted-ec-identity.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart-for-pem/src/test/resources/pem/one-liner-unencrypted-identity.pem"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart-for-pem/src/test/resources/pem/one-liner-unencrypted-rsa-identity.pem"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5BaxVh2gAoZDU0ODA3OTIyYzczNGJlNDcwY2E2NTIwZWRjNDQ2MWEwMzA5ZmRjMA",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/243/commits/d54807922c734be470ca6520edc4461a0309fdc0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 241,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/241",
                "title": "PemUtils parses can't handle single line keys or certs",
                "bodyHTML": "<p dir=\"auto\"><strong>Describe the bug</strong><br>\nA clear and concise description of what the bug is.<br>\nPemUtils parsers (<code class=\"notranslate\">parseIdentityMaterial</code> and <code class=\"notranslate\">parseTrustMaterial</code>, etc) require that the <code class=\"notranslate\">-----BEGIN PRIVATE KEY-----</code> sections ends with newline. This is not required and makes it so that it breaks one</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"-----BEGIN PRIVATE KEY-----KEYSTUFHEREASDASDASD-----END PRIVATE KEY-----\"><pre class=\"notranslate\"><code class=\"notranslate\">-----BEGIN PRIVATE KEY-----KEYSTUFHEREASDASDASD-----END PRIVATE KEY-----\n</code></pre></div>\n<p dir=\"auto\">and</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"-----BEGIN CERTIFICATE-----KEYSTUFHEREASDASDASD-----END CERTIFICATE-----\"><pre class=\"notranslate\"><code class=\"notranslate\">-----BEGIN CERTIFICATE-----KEYSTUFHEREASDASDASD-----END CERTIFICATE-----\n</code></pre></div>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<ol dir=\"auto\">\n<li>Provide as much of a code sample as possible.</li>\n<li>provide full stack traces if possible</li>\n</ol>\n<p dir=\"auto\">use any of the PemUtils parses with a single line key info and watch it crash</p>\n<p dir=\"auto\"><strong>Expected behavior</strong><br>\nA clear and concise description of what you expected to happen.<br>\nHandle single line keys and certs with ease.</p>\n<p dir=\"auto\"><strong>Screenshots</strong><br>\nIf applicable, add screenshots to help explain your problem.</p>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java Version 11</li>\n<li>Maven Version -</li>\n<li>OS Windows</li>\n</ul>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/241",
                "createdAt": "2022-10-21T11:45:07Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Default ssl configuration within security Provider",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/251",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/251",
        "createdAt": "2022-11-25T21:45:46Z",
        "number": 251,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyManagerUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/TrustManagerUtils.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/DefaultSSLConfigurationIT.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/keymanager/RootKeyManagerFactorySpiShould.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/provider/FenixProviderShould.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/provider/FenixServiceSupplierShould.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/RootTrustManagerFactorySpiShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyManagerUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/TrustManagerUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/junit-platform.properties"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5DupMU2gAoNzMwOTA4YTU2NzllYzVkNjUwNGNlZGM5NjBjMTYxN2JkZmJiMDFmZg",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/251/commits/730908a5679ec5d6504cedc960c1617bdfbb01ff"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 250,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/250",
                "title": "Provide method to set default Truststore",
                "bodyHTML": "<p dir=\"auto\"><strong>Is your feature request related to a problem? Please describe.</strong><br>\nI was trying to add Truststore to all SSLContext that will be used in the app<br>\nCurrently this lib requires manual injection of SSLContext into all connection libraries to achieve it.<br>\nIt's cumbersome when there are few higher level libraries that are using different connection libraries under the hood (eg Apache and OkHttp).</p>\n<p dir=\"auto\"><strong>Describe the solution you'd like</strong><br>\nIt would be good to set single TruststoreFactory (or SSLContext factory) that will generate desired objects.</p>\n<p dir=\"auto\"><strong>Additional context</strong><br>\nI created a simple TrustManagerFactory that provides TrustManagers.<br>\nI would be good to have this functionality out of the box in this lib.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class SingletonTrustManagerFactorySpi extends TrustManagerFactorySpi {\n\n    private static TrustManager[] trustManagers;\n\n    public static void setTrustManager(TrustManager aTrustManager) {\n        trustManagers = new TrustManager[]{aTrustManager};\n    }\n\n    @Override\n    protected void engineInit(KeyStore keyStore) {\n        log.info(&quot;Ignoring provided keystore to SingletonTrustManager&quot;);\n    }\n\n    @Override\n    protected void engineInit(ManagerFactoryParameters managerFactoryParameters) {\n        log.info(&quot;Ignoring provided ManagerFactoryParameters&quot;);\n    }\n\n    @Override\n    protected TrustManager[] engineGetTrustManagers() {\n        return trustManagers;\n    }\n}\npublic class SingletonTrustManagerFactoryProvider extends Provider {\n\n    public SingletonTrustManagerFactoryProvider() {\n        super(&quot;TrustManagerFactoryProvider&quot;, 1.0, &quot;Provides TrustManagerFactory&quot;);\n        Service service = new Service(this,\n                &quot;TrustManagerFactory&quot;,\n                &quot;PKIX&quot;,\n                SingletonTrustManagerFactorySpi.class.getName(),\n                ImmutableList.of(&quot;SunPKIX&quot;, &quot;X509&quot;, &quot;X.509&quot;),\n                Collections.emptyMap());\n        putService(service);\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">public class SingletonTrustManagerFactorySpi extends TrustManagerFactorySpi {\n\n    private static TrustManager[] trustManagers;\n\n    public static void setTrustManager(TrustManager aTrustManager) {\n        trustManagers = new TrustManager[]{aTrustManager};\n    }\n\n    @Override\n    protected void engineInit(KeyStore keyStore) {\n        log.info(\"Ignoring provided keystore to SingletonTrustManager\");\n    }\n\n    @Override\n    protected void engineInit(ManagerFactoryParameters managerFactoryParameters) {\n        log.info(\"Ignoring provided ManagerFactoryParameters\");\n    }\n\n    @Override\n    protected TrustManager[] engineGetTrustManagers() {\n        return trustManagers;\n    }\n}\npublic class SingletonTrustManagerFactoryProvider extends Provider {\n\n    public SingletonTrustManagerFactoryProvider() {\n        super(\"TrustManagerFactoryProvider\", 1.0, \"Provides TrustManagerFactory\");\n        Service service = new Service(this,\n                \"TrustManagerFactory\",\n                \"PKIX\",\n                SingletonTrustManagerFactorySpi.class.getName(),\n                ImmutableList.of(\"SunPKIX\", \"X509\", \"X.509\"),\n                Collections.emptyMap());\n        putService(service);\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">This method should be available in TrustManagerUtils</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    public void setDefaultTrustManager(TrustManager trustManager) {\n        SingletonTrustManagerFactorySpi.setTrustManager(trustManager);\n\n        ProviderList providerList = ProviderList.insertAt(Providers.getProviderList(),\n                new SingletonTrustManagerFactoryProvider(), 0);\n        Providers.setProviderList(providerList);\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    public void setDefaultTrustManager(TrustManager trustManager) {\n        SingletonTrustManagerFactorySpi.setTrustManager(trustManager);\n\n        ProviderList providerList = ProviderList.insertAt(Providers.getProviderList(),\n                new SingletonTrustManagerFactoryProvider(), 0);\n        Providers.setProviderList(providerList);\n    }\n</code></pre></div>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/250",
                "createdAt": "2022-11-21T22:50:26Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Added private key and certificate chain option in SSLFactory",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/290",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/290",
        "createdAt": "2023-03-11T13:42:10Z",
        "number": 290,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/SSLFactory.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5L0ezb2gAoNjNmNDkxNjEyMDU5ZmQ5MDkwNzYwNjdjNmQ5YTIyNjY1MTc5YWE0YQ",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/290/commits/63f491612059fd909076067c6d9a22665179aa4a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 289,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/289",
                "title": "Getting All Certificates",
                "bodyHTML": "<p dir=\"auto\">Thanks for creating should a great library!</p>\n<p dir=\"auto\">I have a question about getting all the certificates associated with the <code class=\"notranslate\">SSLFactory</code> but I am coming up blank on how exactly to get access to all of them.</p>\n<p dir=\"auto\">I create a factory using the following code:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"var builder = SSLFactory.builder()\n    .withSwappableTrustMaterial()\n    .withSwappableIdentityMaterial()\"><pre class=\"notranslate\"><span class=\"pl-smi\">var</span> <span class=\"pl-s1\">builder</span> = <span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-en\">builder</span>()\n    .<span class=\"pl-en\">withSwappableTrustMaterial</span>()\n    .<span class=\"pl-en\">withSwappableIdentityMaterial</span>()</pre></div>\n<p dir=\"auto\">Followed by either of the following two flows depending on if I am processing a JKS or PEM</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"//JKS\nbuilder\n    .withTrustMaterial(get(&lt;PATH&gt;), &lt;PASSWORD&gt;.toCharArray())\n    .withIdentityMaterial(get(&lt;PATH&gt;), &lt;PASSWORD&gt;.toCharArray())\n\n//PEM\nbuilder\n    .withTrustMaterial(loadTrustMaterial(get(&lt;PATH&gt;))))\n    .withIdentityMaterial(loadIdentityMaterial(get(&lt;PATH&gt;), get(&lt;PATH&gt;)))\n\nvar factory = builder.build();\"><pre class=\"notranslate\"><span class=\"pl-c\">//JKS</span>\n<span class=\"pl-s1\">builder</span>\n    .<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-en\">get</span>(&lt;<span class=\"pl-c1\">PATH</span>&gt;),<span class=\"pl-smi\"></span> &lt;<span class=\"pl-smi\">PASSWORD</span>&gt;.<span class=\"pl-smi\">toCharArray</span>())\n    .<span class=\"pl-en\">withIdentityMaterial</span>(<span class=\"pl-en\">get</span>(&lt;<span class=\"pl-c1\">PATH</span>&gt;),<span class=\"pl-smi\"></span> &lt;<span class=\"pl-smi\">PASSWORD</span>&gt;.<span class=\"pl-smi\">toCharArray</span>())\n\n<span class=\"pl-c\">//PEM</span>\n<span class=\"pl-s1\">builder</span>\n    .<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-en\">loadTrustMaterial</span>(<span class=\"pl-en\">get</span>(&lt;<span class=\"pl-c1\">PATH</span>&gt;))))\n    .<span class=\"pl-en\">withIdentityMaterial</span>(<span class=\"pl-en\">loadIdentityMaterial</span>(<span class=\"pl-en\">get</span>(&lt;<span class=\"pl-c1\">PATH</span>&gt;), <span class=\"pl-en\">get</span>(&lt;<span class=\"pl-c1\">PATH</span>&gt;)))\n\n<span class=\"pl-smi\">var</span> <span class=\"pl-s1\">factory</span> = <span class=\"pl-s1\">builder</span>.<span class=\"pl-en\">build</span>();</pre></div>\n<p dir=\"auto\">I would like to be able to get all the certificates in use by this factory which I naively thought would be returned by the following call:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"factory.getTrustedCertificates()\"><pre class=\"notranslate\"><span class=\"pl-s1\">factory</span>.<span class=\"pl-en\">getTrustedCertificates</span>()</pre></div>\n<p dir=\"auto\">This seems to only return the certificates loaded using  <code class=\"notranslate\">withTrustMaterial</code> which in retrospect makes sense. Is there any way to get the certificates loaded via the <code class=\"notranslate\">withIdentityMaterial</code> calls?</p>\n<p dir=\"auto\">I did some poking around and it seemed that the following gets close:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"var key = factory.getKeyManager().get();\"><pre class=\"notranslate\"><span class=\"pl-smi\">var</span> <span class=\"pl-s1\">key</span> = <span class=\"pl-s1\">factory</span>.<span class=\"pl-en\">getKeyManager</span>().<span class=\"pl-en\">get</span>();</pre></div>\n<p dir=\"auto\">Inside the manager there is a <code class=\"notranslate\">credentialsMap</code> which chooses an alias based on the certificates used as the second parameter of <code class=\"notranslate\">withIdentityMaterial</code> but the manager doesn't return a list of the all the aliases.</p>\n<p dir=\"auto\">Any help or suggestions you can provide would be greatly appreciated. Thanks!</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/289",
                "createdAt": "2023-03-10T20:20:57Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add system trusted certificates for Linux",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/310",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/310",
        "createdAt": "2023-04-14T08:55:08Z",
        "number": 310,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5OTgMa2gAoNTYwMzE2ZWJkN2Q2YWQyMDA3MDdlYzczMGVlOTRmY2Y3NTAwMWI4Zg",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/310/commits/560316ebd7d6ad200707ec730ee94fcf75001b8f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 309,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/309",
                "title": "Method names withDefaultTrustMaterial vs withSystemTrustMaterial",
                "bodyHTML": "<p dir=\"auto\">Currently (at least for me suprisingly) those methods mean this semantically (under linux at least)</p>\n<p dir=\"auto\"><code class=\"notranslate\">withDefaultTrustMaterial</code> adds the default for the system ca store, under linux e.g. <code class=\"notranslate\">ca-certificates</code> which lets you validate officially signed certificates</p>\n<p dir=\"auto\"><code class=\"notranslate\">withSystemTrustMaterial</code> adds the support for OS bases keystores of the user to expand the validation with custom imported certificates. For linux, there is no standard keystore (unless you use android).</p>\n<p dir=\"auto\">Iam not sure what <code class=\"notranslate\">withDefaultTrustMaterial</code> does under macos/windows, i assume that <code class=\"notranslate\">withSystemTrustMaterial</code> under macos actually adds the ability to validate official certificates AND custom certificates.</p>\n<p dir=\"auto\">My suggestion would be to fill up what we know about those methods for each os and then reconsider, if the naming still fits or even if it is very much OS specific.</p>\n<ul dir=\"auto\">\n<li>MacOS: IMHO <code class=\"notranslate\">withDefaultTrustMaterial</code> does nothing under macos, <code class=\"notranslate\">withSystemTrustMaterial</code> adds support for official and custom cert validation</li>\n<li>Linux: <code class=\"notranslate\">withDefaultTrustMaterial</code> adds support for official certificates, while <code class=\"notranslate\">withSystemTrustMaterial</code> does nothing</li>\n<li>Android: IMHO <code class=\"notranslate\">withDefaultTrustMaterial</code> adds support for official certificates, while <code class=\"notranslate\">withSystemTrustMaterial</code> does add special android certificates (not sure about both).</li>\n<li>Windows: TBA</li>\n</ul>\n<p dir=\"auto\">The inverse behavior for Linux/MacOS is what concerns me. It's a tripwire i would say</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/309",
                "createdAt": "2023-04-13T10:46:48Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Enhance system trusted certificates for mac",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/311",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/311",
        "createdAt": "2023-04-14T11:00:40Z",
        "number": 311,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/CertificateUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/MacCertificateUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/CertificateUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyStoreUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/TrustManagerUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5OUO-02gAoMmMzMTU5ZWRiOTJlZTBkYjRkMDhhNTFiMzQxMmNmM2Q1MGI0MjBiMA",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/311/commits/2c3159edb92ee0db4d08a51b3412cf3d50b420b0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 309,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/309",
                "title": "Method names withDefaultTrustMaterial vs withSystemTrustMaterial",
                "bodyHTML": "<p dir=\"auto\">Currently (at least for me suprisingly) those methods mean this semantically (under linux at least)</p>\n<p dir=\"auto\"><code class=\"notranslate\">withDefaultTrustMaterial</code> adds the default for the system ca store, under linux e.g. <code class=\"notranslate\">ca-certificates</code> which lets you validate officially signed certificates</p>\n<p dir=\"auto\"><code class=\"notranslate\">withSystemTrustMaterial</code> adds the support for OS bases keystores of the user to expand the validation with custom imported certificates. For linux, there is no standard keystore (unless you use android).</p>\n<p dir=\"auto\">Iam not sure what <code class=\"notranslate\">withDefaultTrustMaterial</code> does under macos/windows, i assume that <code class=\"notranslate\">withSystemTrustMaterial</code> under macos actually adds the ability to validate official certificates AND custom certificates.</p>\n<p dir=\"auto\">My suggestion would be to fill up what we know about those methods for each os and then reconsider, if the naming still fits or even if it is very much OS specific.</p>\n<ul dir=\"auto\">\n<li>MacOS: IMHO <code class=\"notranslate\">withDefaultTrustMaterial</code> does nothing under macos, <code class=\"notranslate\">withSystemTrustMaterial</code> adds support for official and custom cert validation</li>\n<li>Linux: <code class=\"notranslate\">withDefaultTrustMaterial</code> adds support for official certificates, while <code class=\"notranslate\">withSystemTrustMaterial</code> does nothing</li>\n<li>Android: IMHO <code class=\"notranslate\">withDefaultTrustMaterial</code> adds support for official certificates, while <code class=\"notranslate\">withSystemTrustMaterial</code> does add special android certificates (not sure about both).</li>\n<li>Windows: TBA</li>\n</ul>\n<p dir=\"auto\">The inverse behavior for Linux/MacOS is what concerns me. It's a tripwire i would say</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/309",
                "createdAt": "2023-04-13T10:46:48Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Enhance system trusted certificates",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/313",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/313",
        "createdAt": "2023-04-14T23:41:19Z",
        "number": 313,
        "mergeCommit": {
          "oid": "08c89aa0a2f18809f61fa7a4c6eb369770345579",
          "message": "Enhance system trusted certificates (#313)\n\n* Added mac system trusted certificates\r\n\r\n* Added linux directories and mechanism to load all of it\r\n\r\n* Applied sonar recommendation\r\n\r\n* Removed redundant certificate file\r\n\r\n* Added additional linux certificates\r\n\r\n* Added lookup command for keychain files\r\n\r\n* Applied sonar recommendations\r\n\r\n* Added unit tests\r\n\r\n* Added test for linux\r\n\r\n* Added test for linux\r\n\r\n* Added test for linux\r\n\r\n* Fixed tests for java 17\r\n\r\n* Disabled some tests for windows\r\n\r\n* Added another test\r\n\r\n* Enabled test for windows\r\n\r\n* Fixed test",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/08c89aa0a2f18809f61fa7a4c6eb369770345579",
          "parents": {
            "nodes": [
              {
                "oid": "0b645763631541b38011c73794502de1b241914f",
                "message": "Added compatibility badges for android and kotlin"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/LinuxCertificateUtils.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/MacCertificateUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/CertificateUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyStoreUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/LinuxCertificateUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/MacCertificateUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/TrustManagerUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/resources/pem/invalid.pem"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5OXpZC2gAoNzYxMGVjMzE0M2Q2ZmNiZmZiN2NmMzAyMWE2ZWI2MjI5ZmYxNDNlZA",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/313/commits/7610ec3143d6fcbffb7cf3021a6eb6229ff143ed"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 309,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/309",
                "title": "Method names withDefaultTrustMaterial vs withSystemTrustMaterial",
                "bodyHTML": "<p dir=\"auto\">Currently (at least for me suprisingly) those methods mean this semantically (under linux at least)</p>\n<p dir=\"auto\"><code class=\"notranslate\">withDefaultTrustMaterial</code> adds the default for the system ca store, under linux e.g. <code class=\"notranslate\">ca-certificates</code> which lets you validate officially signed certificates</p>\n<p dir=\"auto\"><code class=\"notranslate\">withSystemTrustMaterial</code> adds the support for OS bases keystores of the user to expand the validation with custom imported certificates. For linux, there is no standard keystore (unless you use android).</p>\n<p dir=\"auto\">Iam not sure what <code class=\"notranslate\">withDefaultTrustMaterial</code> does under macos/windows, i assume that <code class=\"notranslate\">withSystemTrustMaterial</code> under macos actually adds the ability to validate official certificates AND custom certificates.</p>\n<p dir=\"auto\">My suggestion would be to fill up what we know about those methods for each os and then reconsider, if the naming still fits or even if it is very much OS specific.</p>\n<ul dir=\"auto\">\n<li>MacOS: IMHO <code class=\"notranslate\">withDefaultTrustMaterial</code> does nothing under macos, <code class=\"notranslate\">withSystemTrustMaterial</code> adds support for official and custom cert validation</li>\n<li>Linux: <code class=\"notranslate\">withDefaultTrustMaterial</code> adds support for official certificates, while <code class=\"notranslate\">withSystemTrustMaterial</code> does nothing</li>\n<li>Android: IMHO <code class=\"notranslate\">withDefaultTrustMaterial</code> adds support for official certificates, while <code class=\"notranslate\">withSystemTrustMaterial</code> does add special android certificates (not sure about both).</li>\n<li>Windows: TBA</li>\n</ul>\n<p dir=\"auto\">The inverse behavior for Linux/MacOS is what concerns me. It's a tripwire i would say</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/309",
                "createdAt": "2023-04-13T10:46:48Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add support for java modules",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/333",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/333",
        "createdAt": "2023-05-24T12:18:39Z",
        "number": 333,
        "mergeCommit": {
          "oid": "fd6b69e4df24d3cc64968c88a1f3f184a9d5a406",
          "message": "Add support for java modules (#333)\n\n* Adjusted apache4 packages\r\n\r\n* Adjusted apache5 packages\r\n\r\n* Adjusted jetty packages\r\n\r\n* Adjusted netty packages\r\n\r\n* Adjusted pem packages\r\n\r\n* Moved publicly accessible classes to an internal package\r\n\r\n* Set to java 11, removed automatic module name\r\n\r\n* Added module descriptors\r\n\r\n* Added missing require statement for httpcore\r\n\r\n* Moved trustoptions and trust validations into public package\r\n\r\n* set java version to 8\r\n\r\n* removed java server module requirement\r\n\r\n* Add java 8 support while also supporting modules\r\n\r\n* Replaced Sun HttpServer with Javalin\r\n\r\n* Disable github java 8 build\r\n\r\n* Removed redundant start call\r\n\r\n* Replaced javalin with netty in jetty module\r\n\r\n* Replaced javalin with netty\r\n\r\n* Improved dependency management\r\n\r\n* Improved dependency management\r\n\r\n* Removed maven jar plugin\r\n\r\n* Fixed broken links\r\n\r\n* Removed redundant test",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/fd6b69e4df24d3cc64968c88a1f3f184a9d5a406",
          "parents": {
            "nodes": [
              {
                "oid": "b52e7917f7c7f82800f8cc1dbd7855ed569bb70b",
                "message": "Bump maven-source-plugin from 3.2.1 to 3.3.0 (#331)\n\nBumps [maven-source-plugin](https://github.com/apache/maven-source-plugin) from 3.2.1 to 3.3.0.\r\n- [Commits](https://github.com/apache/maven-source-plugin/compare/maven-source-plugin-3.2.1...maven-source-plugin-3.3.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.apache.maven.plugins:maven-source-plugin\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-minor\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/ChainAndAuthTypeWithSSLEngineValidatorShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/ChainAndAuthTypeWithSocketValidatorShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/EnhanceableX509ExtendedTrustManagerShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/HotSwappableX509ExtendedTrustManagerIT.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/LoggingX509ExtendedTrustManagerShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/CertificateUtilsIT.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/LinuxCertificateUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/internal/IOUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/internal/UriUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/internal/ValidationUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5RPazm2gAoMzQyMmYxYzdjMTdkYWFhNDcxNGIwZDA3YjgxMTgxNjhkOWFiZDFiYg",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/333/commits/3422f1c7c17daaa4714b0d07b8118168d9abd1bb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 332,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/332",
                "title": "Add support for Java Platform Module System",
                "bodyHTML": "<p dir=\"auto\">End users should still be able to use this library with java 8 while it is also compatible with java modules (Java 11+)<br>\nEvery maven module should contain module-info.java<br>\nInternal libraries should be encapsulated and if required only exposed to sub maven modules.</p>\n<p dir=\"auto\">To be expected:</p>\n<ul dir=\"auto\">\n<li>New major release</li>\n<li>Breaking changes (package name changes in submodules as it is conflicting with the core module)</li>\n<li>Internal api with public access modifiers will be moved to a sub package internal and will be locked with modules</li>\n</ul>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/332",
                "createdAt": "2023-05-23T19:36:45Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Switched to SSL Server",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/335",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/335",
        "createdAt": "2023-05-27T21:48:09Z",
        "number": 335,
        "mergeCommit": {
          "oid": "bd5bf4536641b6a1283c01208fd20210ea30bf90",
          "message": "Switched to SSL Server (#335)\n\n* Switched to SSL Server\r\n\r\n* Added exclusion for cycle dependency\r\n\r\n* Bumped version\r\n\r\n* Bumped version\r\n\r\n* Bumped version\r\n\r\n* Trigger Build",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/bd5bf4536641b6a1283c01208fd20210ea30bf90",
          "parents": {
            "nodes": [
              {
                "oid": "b9064534216894bac4e336fe78bbb9cf21ef7128",
                "message": "Removed deprecated methods"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "DELETED",
                "path": "sslcontext-kickstart-for-netty/src/test/java/nl/altindag/ssl/netty/ServerUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-pem/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-pem/src/test/java/nl/altindag/ssl/pem/SSLFactoryIT.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "sslcontext-kickstart-for-pem/src/test/java/nl/altindag/ssl/pem/ServerUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryIT.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/ServerUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/keymanager/HotSwappableX509ExtendedKeyManagerIT.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/HotSwappableX509ExtendedTrustManagerIT.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/CertificateUtilsIT.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5Rgt972gAoNmJlN2NjM2I2ZWY4NDBkNGE4ZDhjZTk3ZWEwYzY5ZTk4ZWIyODk0Yw",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/335/commits/6be7cc3b6ef840d4a8d8ce97ea0c69e98eb2894c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 336,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/336",
                "title": "Reduce code duplication for using ssl server ",
                "bodyHTML": "",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/336",
                "createdAt": "2023-05-27T21:49:00Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix trustAnchors parameter must be non empty for InflatableTrustManager",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/345",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/345",
        "createdAt": "2023-06-09T18:31:43Z",
        "number": 345,
        "mergeCommit": {
          "oid": "c02cfcae1a28629f94cd17d984245649c7595fb5",
          "message": "Fix trustAnchors parameter must be non empty for InflatableTrustManager (#345)\n\n* Only create trust manager if there are trusted certificates\r\n\r\n* Proceed validating chain with other trust managers\r\n\r\n* Added test for rethrow case\r\n\r\n* Added tests\r\n\r\n* Added additional validations for new certificate\r\n\r\n* Added method for single certificate\r\n\r\n* Added additional tests\r\n\r\n* Unwrapped runtime exception",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/c02cfcae1a28629f94cd17d984245649c7595fb5",
          "parents": {
            "nodes": [
              {
                "oid": "45458e61c9e862527c395e39c8dd483a80e90560",
                "message": "Added contributors"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/CombinableX509TrustManager.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/InflatableX509ExtendedTrustManager.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/TrustManagerUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryIT.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/CompositeX509ExtendedTrustManagerShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/InflatableX509ExtendedTrustManagerShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/TrustManagerUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5SpaD22gAoNDFkZjU3MDdkZmQ5Nzg4YTYxNzM4ZjY3ZWYxN2ZlY2Y3YjNjYjU5OQ",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/345/commits/41df5707dfd9788a61738f67ef17fecf7b3cb599"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 344,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/344",
                "title": "InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty on Windows",
                "bodyHTML": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Hakky54/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Hakky54\">@Hakky54</a></p>\n<p dir=\"auto\">With the latest version 8.1.0, our QA pipeline failed on Windows (sorry, I made all my previous tests on Linux) with:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"javax.net.ssl.SSLException: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n\tat org.apache.hc.core5.reactor.ssl.SSLIOSession.convert(SSLIOSession.java:317)\n\tat org.apache.hc.core5.reactor.ssl.SSLIOSession.doWrap(SSLIOSession.java:324)\n\tat org.apache.hc.core5.reactor.ssl.SSLIOSession.doHandshake(SSLIOSession.java:367)\n\tat org.apache.hc.core5.reactor.ssl.SSLIOSession.access$100(SSLIOSession.java:74)\n\tat org.apache.hc.core5.reactor.ssl.SSLIOSession$1.inputReady(SSLIOSession.java:201)\n\tat org.apache.hc.core5.reactor.InternalDataChannel.onIOEvent(InternalDataChannel.java:142)\n\tat org.apache.hc.core5.reactor.InternalChannel.handleIOEvent(InternalChannel.java:51)\n\t... 5 more\nCaused by: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n\tat java.base/java.security.cert.PKIXParameters.setTrustAnchors(PKIXParameters.java:200)\n\tat java.base/java.security.cert.PKIXParameters.&lt;init&gt;(PKIXParameters.java:120)\n\tat java.base/java.security.cert.PKIXBuilderParameters.&lt;init&gt;(PKIXBuilderParameters.java:104)\n\tat java.base/sun.security.validator.PKIXValidator.&lt;init&gt;(PKIXValidator.java:99)\n\tat java.base/sun.security.validator.Validator.getInstance(Validator.java:181)\n\tat java.base/sun.security.ssl.X509TrustManagerImpl.getValidator(X509TrustManagerImpl.java:300)\n\tat java.base/sun.security.ssl.X509TrustManagerImpl.checkTrustedInit(X509TrustManagerImpl.java:176)\n\tat java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:246)\n\tat java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:141)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.lambda$checkServerTrusted$5(CompositeX509ExtendedTrustManager.java:91)\n\tat nl.altindag.ssl.trustmanager.CombinableX509TrustManager.checkTrusted(CombinableX509TrustManager.java:40)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.checkServerTrusted(CompositeX509ExtendedTrustManager.java:91)\n\tat java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1335)\"><pre class=\"notranslate\"><code class=\"notranslate\">javax.net.ssl.SSLException: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n\tat org.apache.hc.core5.reactor.ssl.SSLIOSession.convert(SSLIOSession.java:317)\n\tat org.apache.hc.core5.reactor.ssl.SSLIOSession.doWrap(SSLIOSession.java:324)\n\tat org.apache.hc.core5.reactor.ssl.SSLIOSession.doHandshake(SSLIOSession.java:367)\n\tat org.apache.hc.core5.reactor.ssl.SSLIOSession.access$100(SSLIOSession.java:74)\n\tat org.apache.hc.core5.reactor.ssl.SSLIOSession$1.inputReady(SSLIOSession.java:201)\n\tat org.apache.hc.core5.reactor.InternalDataChannel.onIOEvent(InternalDataChannel.java:142)\n\tat org.apache.hc.core5.reactor.InternalChannel.handleIOEvent(InternalChannel.java:51)\n\t... 5 more\nCaused by: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n\tat java.base/java.security.cert.PKIXParameters.setTrustAnchors(PKIXParameters.java:200)\n\tat java.base/java.security.cert.PKIXParameters.&lt;init&gt;(PKIXParameters.java:120)\n\tat java.base/java.security.cert.PKIXBuilderParameters.&lt;init&gt;(PKIXBuilderParameters.java:104)\n\tat java.base/sun.security.validator.PKIXValidator.&lt;init&gt;(PKIXValidator.java:99)\n\tat java.base/sun.security.validator.Validator.getInstance(Validator.java:181)\n\tat java.base/sun.security.ssl.X509TrustManagerImpl.getValidator(X509TrustManagerImpl.java:300)\n\tat java.base/sun.security.ssl.X509TrustManagerImpl.checkTrustedInit(X509TrustManagerImpl.java:176)\n\tat java.base/sun.security.ssl.X509TrustManagerImpl.checkTrusted(X509TrustManagerImpl.java:246)\n\tat java.base/sun.security.ssl.X509TrustManagerImpl.checkServerTrusted(X509TrustManagerImpl.java:141)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.lambda$checkServerTrusted$5(CompositeX509ExtendedTrustManager.java:91)\n\tat nl.altindag.ssl.trustmanager.CombinableX509TrustManager.checkTrusted(CombinableX509TrustManager.java:40)\n\tat nl.altindag.ssl.trustmanager.CompositeX509ExtendedTrustManager.checkServerTrusted(CompositeX509ExtendedTrustManager.java:91)\n\tat java.base/sun.security.ssl.CertificateMessage$T13CertificateConsumer.checkServerCerts(CertificateMessage.java:1335)\n</code></pre></div>\n<p dir=\"auto\">Not sure what is the problem...</p>\n<p dir=\"auto\">The failing test is here:<br>\n<a href=\"https://github.com/SonarSource/sonarlint-core/blob/130de06eb43f48452138145a05bd4f4647dcdd7d/core/src/test/java/mediumtest/SslMediumTests.java#L110\">https://github.com/SonarSource/sonarlint-core/blob/130de06eb43f48452138145a05bd4f4647dcdd7d/core/src/test/java/mediumtest/SslMediumTests.java#L110</a></p>\n<p dir=\"auto\">And this is how we setup the SSLFactory:<br>\n<a href=\"https://github.com/SonarSource/sonarlint-core/blob/130de06eb43f48452138145a05bd4f4647dcdd7d/http/src/main/java/org/sonarsource/sonarlint/core/http/HttpClientProvider.java#L57\">https://github.com/SonarSource/sonarlint-core/blob/130de06eb43f48452138145a05bd4f4647dcdd7d/http/src/main/java/org/sonarsource/sonarlint/core/http/HttpClientProvider.java#L57</a></p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/344",
                "createdAt": "2023-06-09T08:40:10Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Added new Windows KeyStores",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/357",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/357",
        "createdAt": "2023-06-19T19:39:00Z",
        "number": 357,
        "mergeCommit": {
          "oid": "7caf6824da81f5e40f6c8a1b940cffa3af091b72",
          "message": "Added new Windows KeyStores (#357)\n\n* Added new Windows KeyStores\r\n\r\n* Added some tests\r\n\r\n* Added some temp print statements\r\n\r\n* Removed null validation\r\n\r\n* Added sys out\r\n\r\n* Enabled console output\r\n\r\n* Disabled console output\r\n\r\n* Improved logging\r\n\r\n* Added additional tests",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/7caf6824da81f5e40f6c8a1b940cffa3af091b72",
          "parents": {
            "nodes": [
              {
                "oid": "dc57f3d9297a702ba63f14a2e8f0ca5854c3badc",
                "message": "Log if UnsafeTrustManager is being used."
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyStoreUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5TX0Rj2gAoNDU3YzZkMDc4N2RhMTIxYzdjNDRmNjI0N2YzZWU1MGI1YWQ1ODNhNA",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/357/commits/457c6d0787da121c7c44f6247f3ee50b5ad583a4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 356,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/356",
                "title": "New System Keystores in Windows",
                "bodyHTML": "<p dir=\"auto\">With Java 11.0.18 and 17.0.5 a long standing issue (<a href=\"https://bugs.openjdk.org/browse/JDK-6782021\" rel=\"nofollow\">https://bugs.openjdk.org/browse/JDK-6782021</a>) with Windows-MY was solved. This includes the introduction of new keystore types in SunMSCAPI</p>\n<p dir=\"auto\">From: <a href=\"https://bugs.openjdk.org/browse/JDK-8286790\" rel=\"nofollow\">https://bugs.openjdk.org/browse/JDK-8286790</a></p>\n<p dir=\"auto\">The Windows KeyStore support in the SunMSCAPI provider has been expanded to include access to the local machine location. The new keystore types are:</p>\n<ul dir=\"auto\">\n<li>\"Windows-MY-LOCALMACHINE\"</li>\n<li>\"Windows-ROOT-LOCALMACHINE\"</li>\n</ul>\n<p dir=\"auto\">The following keystore types were also added, allowing developers to make it clear they map to the current user:</p>\n<ul dir=\"auto\">\n<li>\"Windows-MY-CURRENTUSER\" (same as \"Windows-MY\")</li>\n<li>\"Windows-ROOT-CURRENTUSER\" (same as \"Windows-ROOT\")</li>\n</ul>\n<p dir=\"auto\">Perhaps it could be generated automatically from something like:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    try {\n        final Provider p = Security.getProvider(&quot;SunMSCAPI&quot;);\n        for(final Enumeration e = p.keys(); e.hasMoreElements();) {\n            final String name = e.nextElement().toString();\n            if (name.startsWith(&quot;KeyStore.&quot;)) {\n                System.out.println(name.substring(9));\n            }\n\n            }\n    } catch (final Exception e) {\n        System.out.println(e);\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    try {\n        final Provider p = Security.getProvider(\"SunMSCAPI\");\n        for(final Enumeration e = p.keys(); e.hasMoreElements();) {\n            final String name = e.nextElement().toString();\n            if (name.startsWith(\"KeyStore.\")) {\n                System.out.println(name.substring(9));\n            }\n\n            }\n    } catch (final Exception e) {\n        System.out.println(e);\n    }\n</code></pre></div>\n<p dir=\"auto\">Which returns in Java 11/17</p>\n<p dir=\"auto\">Windows-MY-CURRENTUSER<br>\nWindows-MY-LOCALMACHINE<br>\nWindows-ROOT-LOCALMACHINE<br>\nWindows-ROOT-CURRENTUSER<br>\nWindows-ROOT<br>\nWindows-MY</p>\n<p dir=\"auto\">Could this be added in the KeyStoreUtils.loadSystemKeyStores() ? The new Windows-MY-LOCALMACHINE is very useful for services that run on ACME certificates published automatically to the store (e.g. with win.acme)</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/356",
                "createdAt": "2023-06-19T13:56:17Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Added option to filter out not supported ciphers and protocols",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/363",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/363",
        "createdAt": "2023-07-20T22:56:56Z",
        "number": 363,
        "mergeCommit": {
          "oid": "f2899c2fbabe382c70d8874a8113fa377414ae1b",
          "message": "Merge pull request #363 from Hakky54/bug-fix/filter-out-unsupported-ciphers-and-protocols\n\nAdded option to filter out not supported ciphers and protocols",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/f2899c2fbabe382c70d8874a8113fa377414ae1b",
          "parents": {
            "nodes": [
              {
                "oid": "49d227bffffcb9a8dafb142adca157f07aaf7d5c",
                "message": "[maven-release-plugin] prepare for next development iteration"
              },
              {
                "oid": "6d4e94b3b7260d54625172ef7a0222921e76c97f",
                "message": "Added option to filter out not supported ciphers and protocols"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "CHANGELOG.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "README.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/SSLFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5WDS562gAoNmQ0ZTk0YjNiNzI2MGQ1NDYyNTE3MmVmN2EwMjIyOTIxZTc2Yzk3Zg",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/363/commits/6d4e94b3b7260d54625172ef7a0222921e76c97f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 362,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/362",
                "title": "Potential Regression in 8.1.3 (#4c16ca8)",
                "bodyHTML": "<h3 dir=\"auto\">Describe the bug</h3>\n<p dir=\"auto\">Previously supported cipher suites are no longer supported since 8.1.3. I have not had time to debug this yet, but I am opening this issue to track the problem, it did not exist in <a href=\"https://github.com/javalin/javalin-ssl/actions/runs/5373326492\">8.1.2</a>.</p>\n<h3 dir=\"auto\">To Reproduce</h3>\n<p dir=\"auto\">Running the test suite in the actions runner fails with the following error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"KeystoreLoadingTests &gt; Loading a valid P12 keystore from a path FAILED\n    io.javalin.util.JavalinException: java.lang.IllegalArgumentException: cipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 is not supported.\n        at app//io.javalin.Javalin.start(Javalin.java:186)\n        at app//io.javalin.community.ssl.IntegrationTestClass.assertWorks(IntegrationTestClass.java:141)\n        at app//io.javalin.community.ssl.IntegrationTestClass.assertSslWorks(IntegrationTestClass.java:152)\n        at app//io.javalin.community.ssl.KeystoreLoadingTests.loadValidP12FromPath(KeystoreLoadingTests.java:85)\n\n        Caused by:\n        java.lang.IllegalArgumentException: cipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 is not supported.\n            at org.conscrypt.NativeCrypto.checkEnabledCipherSuites(NativeCrypto.java:1117)\n            at org.conscrypt.SSLParametersImpl.setEnabledCipherSuites(SSLParametersImpl.java:264)\n            at org.conscrypt.ConscryptEngine.setEnabledCipherSuites(ConscryptEngine.java:677)\n            at java.base/javax.net.ssl.SSLEngine.setSSLParameters(SSLEngine.java:1331)\n            at org.conscrypt.ConscryptEngine.setSSLParameters(ConscryptEngine.java:532)\n            at org.conscrypt.Java8EngineWrapper.setSSLParameters(Java8EngineWrapper.java:66)\n            at nl.altindag.ssl.sslcontext.FenixSSLContextSpi.getSSLEngine(FenixSSLContextSpi.java:84)\n            at nl.altindag.ssl.sslcontext.FenixSSLContextSpi.engineCreateSSLEngine(FenixSSLContextSpi.java:68)\n            at java.base/javax.net.ssl.SSLContext.createSSLEngine(SSLContext.java:373)\n            at org.eclipse.jetty.util.ssl.SslContextFactory.checkConfiguration(SslContextFactory.java:220)\n            at org.eclipse.jetty.util.ssl.SslContextFactory.doStart(SslContextFactory.java:215)\n            at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:93)\n            at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:171)\n            at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:121)\n            at org.eclipse.jetty.server.SslConnectionFactory.doStart(SslConnectionFactory.java:112)\n            at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:93)\n            at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:171)\n            at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:121)\n            at org.eclipse.jetty.server.AbstractConnector.doStart(AbstractConnector.java:367)\n            at org.eclipse.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:75)\n            at org.eclipse.jetty.server.ServerConnector.doStart(ServerConnector.java:228)\n            at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:93)\n            at org.eclipse.jetty.server.Server.doStart(Server.java:428)\n            at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:93)\n            at io.javalin.jetty.JettyServer.start(JettyServer.kt:82)\n            at io.javalin.Javalin.start(Javalin.java:171)\n            ... 3 more\"><pre class=\"notranslate\"><code class=\"notranslate\">KeystoreLoadingTests &gt; Loading a valid P12 keystore from a path FAILED\n    io.javalin.util.JavalinException: java.lang.IllegalArgumentException: cipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 is not supported.\n        at app//io.javalin.Javalin.start(Javalin.java:186)\n        at app//io.javalin.community.ssl.IntegrationTestClass.assertWorks(IntegrationTestClass.java:141)\n        at app//io.javalin.community.ssl.IntegrationTestClass.assertSslWorks(IntegrationTestClass.java:152)\n        at app//io.javalin.community.ssl.KeystoreLoadingTests.loadValidP12FromPath(KeystoreLoadingTests.java:85)\n\n        Caused by:\n        java.lang.IllegalArgumentException: cipherSuite TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 is not supported.\n            at org.conscrypt.NativeCrypto.checkEnabledCipherSuites(NativeCrypto.java:1117)\n            at org.conscrypt.SSLParametersImpl.setEnabledCipherSuites(SSLParametersImpl.java:264)\n            at org.conscrypt.ConscryptEngine.setEnabledCipherSuites(ConscryptEngine.java:677)\n            at java.base/javax.net.ssl.SSLEngine.setSSLParameters(SSLEngine.java:1331)\n            at org.conscrypt.ConscryptEngine.setSSLParameters(ConscryptEngine.java:532)\n            at org.conscrypt.Java8EngineWrapper.setSSLParameters(Java8EngineWrapper.java:66)\n            at nl.altindag.ssl.sslcontext.FenixSSLContextSpi.getSSLEngine(FenixSSLContextSpi.java:84)\n            at nl.altindag.ssl.sslcontext.FenixSSLContextSpi.engineCreateSSLEngine(FenixSSLContextSpi.java:68)\n            at java.base/javax.net.ssl.SSLContext.createSSLEngine(SSLContext.java:373)\n            at org.eclipse.jetty.util.ssl.SslContextFactory.checkConfiguration(SslContextFactory.java:220)\n            at org.eclipse.jetty.util.ssl.SslContextFactory.doStart(SslContextFactory.java:215)\n            at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:93)\n            at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:171)\n            at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:121)\n            at org.eclipse.jetty.server.SslConnectionFactory.doStart(SslConnectionFactory.java:112)\n            at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:93)\n            at org.eclipse.jetty.util.component.ContainerLifeCycle.start(ContainerLifeCycle.java:171)\n            at org.eclipse.jetty.util.component.ContainerLifeCycle.doStart(ContainerLifeCycle.java:121)\n            at org.eclipse.jetty.server.AbstractConnector.doStart(AbstractConnector.java:367)\n            at org.eclipse.jetty.server.AbstractNetworkConnector.doStart(AbstractNetworkConnector.java:75)\n            at org.eclipse.jetty.server.ServerConnector.doStart(ServerConnector.java:228)\n            at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:93)\n            at org.eclipse.jetty.server.Server.doStart(Server.java:428)\n            at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:93)\n            at io.javalin.jetty.JettyServer.start(JettyServer.kt:82)\n            at io.javalin.Javalin.start(Javalin.java:171)\n            ... 3 more\n</code></pre></div>\n<h3 dir=\"auto\">Environmental Data:</h3>\n<ul dir=\"auto\">\n<li>Java Version: [11,17,18]</li>\n<li>Maven Version: N/A, Using gradle</li>\n<li>OS: [Windows, Linux, Mac]</li>\n</ul>\n<h3 dir=\"auto\">Additional context</h3>\n<p dir=\"auto\">Actions Runner Logs: <a href=\"https://github.com/javalin/javalin-ssl/actions/runs/5606563554?pr=90\">https://github.com/javalin/javalin-ssl/actions/runs/5606563554?pr=90</a><br>\nUbuntu JDK18 runner logs: <a href=\"https://github.com/Hakky54/sslcontext-kickstart/files/12101999/logs_491.zip\">logs_491.zip</a></p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/362",
                "createdAt": "2023-07-20T04:03:06Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Bug Fix - Resolve exception for system certificates on Mac and Linux",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/368",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/368",
        "createdAt": "2023-08-03T21:19:11Z",
        "number": 368,
        "mergeCommit": {
          "oid": "424a1aba749fe5452481ac1a89e04585666a9755",
          "message": "Bug Fix - Resolve exception for system certificates on Mac and Linux (#368)\n\n* Only create truststore if it is not empty\r\n\r\n* Log invalid certificates and proceed with the flow.\r\n\r\n* Follow symbolic links.",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/424a1aba749fe5452481ac1a89e04585666a9755",
          "parents": {
            "nodes": [
              {
                "oid": "c698bae5ec8920b892027d9a5972bb4bef039bcc",
                "message": "Return unmodifiableMap"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/CertificateUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/LinuxCertificateUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/CertificateUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyStoreUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/LinuxCertificateUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5XJVHc2gAoZWI2MDJiZGI1YzllMmMxNzFmOTliYzk0ZTdlODI3NDMwNGY2NzEzZQ",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/368/commits/eb602bdb5c9e2c171f99bc94e7e8274304f6713e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 367,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/367",
                "title": "withSystemTrustMaterial cannot create TrustStore because certificate is absent",
                "bodyHTML": "<p dir=\"auto\"><strong>Describe the bug</strong></p>\n<p dir=\"auto\">We recently released a new version of our product containing your library, and it appears that a lot of users have issues when creating the <code class=\"notranslate\">SSLFactoryBuilder#withSystemTrustMaterial</code>.</p>\n<p dir=\"auto\">This results in the error <code class=\"notranslate\">Could not create TrustStore because certificate is absent</code>.<br>\nOne user on Linux has multiple certificates under <code class=\"notranslate\">/etc/ssl/certs</code> which is a symlink to <code class=\"notranslate\">/var/lib/ca-certificates/pem</code>. For Linux, <code class=\"notranslate\">/etc/ssl/certs</code> should be a valid path for certificates given your library source code, which is surprising that it's failing.</p>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<p dir=\"auto\">I was not able to reproduce it, here is the list of OS on which users have issues:</p>\n<ul dir=\"auto\">\n<li>Mac OS X x86_64</li>\n<li>macOS 13.5</li>\n<li>openSUSE Tumbleweed 20230801</li>\n</ul>\n<p dir=\"auto\">All use Java 17.0.7.</p>\n<p dir=\"auto\">One is using Zscalar and Global Protect for system security. Zscalar replaces the certs with its own so that it is able to examine the traffic.</p>\n<p dir=\"auto\">Here is the stack trace related to the issue:</p>\n<p dir=\"auto\"><code class=\"notranslate\">Caused by: java.lang.IllegalArgumentException: Could not create TrustStore because certificate is absent at nl.altindag.ssl.util.internal.ValidationUtils.lambda$requireNotEmpty$2(ValidationUtils.java:47) at nl.altindag.ssl.util.internal.ValidationUtils.requireNotEmpty(ValidationUtils.java:52) at nl.altindag.ssl.util.internal.ValidationUtils.requireNotEmpty(ValidationUtils.java:47) at nl.altindag.ssl.util.KeyStoreUtils.createTrustStore(KeyStoreUtils.java:177) at nl.altindag.ssl.util.KeyStoreUtils.loadSystemKeyStores(KeyStoreUtils.java:219) at nl.altindag.ssl.util.TrustManagerUtils.createTrustManagerWithSystemTrustedCertificates(TrustManagerUtils.java:89) at nl.altindag.ssl.SSLFactory$Builder.withSystemTrustMaterial(SSLFactory.java:210)</code></p>\n<p dir=\"auto\"><strong>Expected behavior</strong></p>\n<p dir=\"auto\">A certificate directory should be found, and certificates within this directory should be loaded so the trust store can be created.</p>\n<p dir=\"auto\">How we setup the SSLFactoryBuilder: <a href=\"https://github.com/SonarSource/sonarlint-core/blob/master/http/src/main/java/org/sonarsource/sonarlint/core/http/HttpClientProvider.java#L63\">https://github.com/SonarSource/sonarlint-core/blob/master/http/src/main/java/org/sonarsource/sonarlint/core/http/HttpClientProvider.java#L63</a></p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/367",
                "createdAt": "2023-08-03T13:43:24Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Bug Fix - Resolve antivirus alerts for mac system certificates",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/370",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/370",
        "createdAt": "2023-08-08T16:18:32Z",
        "number": 370,
        "mergeCommit": {
          "oid": "4b69734b1bba2cfc451e6f7318a6b405f60c36d2",
          "message": "Removed ~/Library/Keychains/login.keychain-db keychain file from MacCertificateUtils",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/4b69734b1bba2cfc451e6f7318a6b405f60c36d2",
          "parents": {
            "nodes": [
              {
                "oid": "0e19970e552c5ca6c83a98241a68d0f8de9be67d",
                "message": "Resolve sonar issue"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/MacCertificateUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/MacCertificateUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5XczPv2gAoNjVmMTBhNWJjYWRlMDZlMmZmZGNlZTRlNWNmOTBjNzlmODBmOWM5NA",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/370/commits/65f10a5bcade06e2ffdcee4e5cf90c79f80f9c94"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 369,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/369",
                "title": "MacCertificateUtils: Invoke \"security\" without the need of a shell",
                "bodyHTML": "<h2 dir=\"auto\">Summary</h2>\n<p dir=\"auto\">In <code class=\"notranslate\">MacCertificateUtils.createProcess(String)</code> (see <a href=\"https://github.com/Hakky54/sslcontext-kickstart/blob/master/sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/MacCertificateUtils.java#L94-L103\">HERE</a>), in order to get the installed certificates via running the macOS-specific command <em>security</em>, a shell is spawned to handle running the command. This should not rely on a shell as an additional layer and rather invoke the command at <code class=\"notranslate\">/usr/bin/security</code> directly.</p>\n<h2 dir=\"auto\">Related problem(s)</h2>\n<p dir=\"auto\">We're using the library internally for SonarLint and we got the information that it seems to be flagged by some antivirus software as potential secret theft (maybe due to the fact that it is handled via the shell, but I cannot say so and I'm only guessing on that side, mentioned by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/nquinquenel/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nquinquenel\">@nquinquenel</a> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1835095305\" data-permission-text=\"Title is private\" data-url=\"https://github.com/Hakky54/sslcontext-kickstart/issues/367\" data-hovercard-type=\"issue\" data-hovercard-url=\"/Hakky54/sslcontext-kickstart/issues/367/hovercard\" href=\"https://github.com/Hakky54/sslcontext-kickstart/issues/367\">#367</a>) or at least some warning is thrown.<br>\nNevertheless, if it is connected to the issue or not, the shell layer should be avoided if possible.</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/369",
                "createdAt": "2023-08-08T08:51:23Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fixes #387 by moving to latest Bouncy Castle for Java 8",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/388",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/388",
        "createdAt": "2023-10-06T19:31:16Z",
        "number": 388,
        "mergeCommit": {
          "oid": "c629e7b498daf1df37cf65760f8d12ef1df1b0a1",
          "message": "Fixes #387 by moving to latest Bouncy Castle for Java 8",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/c629e7b498daf1df37cf65760f8d12ef1df1b0a1",
          "parents": {
            "nodes": [
              {
                "oid": "e4fe009e0e5c36d192429af221ebacce9ffbbadd",
                "message": "Bump version.netty-handler from 4.1.98.Final to 4.1.99.Final (#385)\n\nBumps `version.netty-handler` from 4.1.98.Final to 4.1.99.Final.\n\nUpdates `io.netty:netty-handler` from 4.1.98.Final to 4.1.99.Final\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.98.Final...netty-4.1.99.Final)\n\nUpdates `io.netty:netty-resolver-dns` from 4.1.98.Final to 4.1.99.Final\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.98.Final...netty-4.1.99.Final)\n\nUpdates `io.netty:netty-transport-native-epoll` from 4.1.98.Final to 4.1.99.Final\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.98.Final...netty-4.1.99.Final)\n\nUpdates `io.netty:netty-codec-http2` from 4.1.98.Final to 4.1.99.Final\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.98.Final...netty-4.1.99.Final)\n\nUpdates `io.netty:netty-transport-native-unix-common` from 4.1.98.Final to 4.1.99.Final\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.98.Final...netty-4.1.99.Final)\n\nUpdates `io.netty:netty-resolver-dns-native-macos` from 4.1.98.Final to 4.1.99.Final\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.98.Final...netty-4.1.99.Final)\n\nUpdates `io.netty:netty-buffer` from 4.1.98.Final to 4.1.99.Final\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.98.Final...netty-4.1.99.Final)\n\nUpdates `io.netty:netty-codec` from 4.1.98.Final to 4.1.99.Final\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.98.Final...netty-4.1.99.Final)\n\nUpdates `io.netty:netty-common` from 4.1.98.Final to 4.1.99.Final\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.98.Final...netty-4.1.99.Final)\n\nUpdates `io.netty:netty-transport` from 4.1.98.Final to 4.1.99.Final\n- [Commits](https://github.com/netty/netty/compare/netty-4.1.98.Final...netty-4.1.99.Final)\n\n---\nupdated-dependencies:\n- dependency-name: io.netty:netty-handler\n  dependency-type: direct:production\n  update-type: version-update:semver-patch\n- dependency-name: io.netty:netty-resolver-dns\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n- dependency-name: io.netty:netty-transport-native-epoll\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n- dependency-name: io.netty:netty-codec-http2\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n- dependency-name: io.netty:netty-transport-native-unix-common\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n- dependency-name: io.netty:netty-resolver-dns-native-macos\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n- dependency-name: io.netty:netty-buffer\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n- dependency-name: io.netty:netty-codec\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n- dependency-name: io.netty:netty-common\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n- dependency-name: io.netty:netty-transport\n  dependency-type: direct:development\n  update-type: version-update:semver-patch\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart-for-pem/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5cJNWr2gAoYjIzYjhiNWE2OGFlMGUyOWM2NDkyMjIyMTJlYWRlZTFlNjE3NDkwZQ",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/388/commits/b23b8b5a68ae0e29c649222212eadee1e617490e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 387,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/387",
                "title": "Dependency on bcpkix-jdk15on introduces vulnerability CVE-2023-33201",
                "bodyHTML": "<p dir=\"auto\"><strong>Describe the bug</strong><br>\nsslcontext-kickstart-for-pem depends on BouncyCastle <code class=\"notranslate\">bcpkix-jdk15on</code> v1.7.0, which contains vulnerability <a href=\"https://www.cvedetails.com/cve/CVE-2023-33201/\" rel=\"nofollow\">CVE-2023-33201</a>. This is the latest version of this module, and is not longer maintained because BC supports only LTS versions of Java (versions 8 and up).</p>\n<p dir=\"auto\">If you run Snyk, Blackduck or other vulnerability scan on this module, the compliance alarms will go off.  See also <a href=\"https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15on\" rel=\"nofollow\">https://mvnrepository.com/artifact/org.bouncycastle/bcprov-jdk15on</a></p>\n<p dir=\"auto\"><strong>Expected behavior</strong><br>\nI'm using this software to make my life easier but compliance people are coming after me. This doesn't make my life easier :D</p>\n<p dir=\"auto\"><strong>Additional context</strong><br>\nSuggest you drop support for Java versions &lt; 8, by upgrading your BouncyCastle dependency to <code class=\"notranslate\">bcpkix-jdk18on</code> v1.7.6 which is not vulnerable.</p>\n<p dir=\"auto\">Other readers, note that you can work around this in the current version by changing you Maven dependency as so</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\t\t&lt;dependency&gt;\n\t\t\t&lt;groupId&gt;io.github.hakky54&lt;/groupId&gt;\n\t\t\t&lt;artifactId&gt;sslcontext-kickstart-for-pem&lt;/artifactId&gt;\n\t\t\t&lt;version&gt;8.1.6&lt;/version&gt;\n\t\t\t&lt;!-- Begin temporary fix for CVE-2023-33201 --&gt;\n\t\t\t&lt;exclusions&gt;\n\t\t\t\t&lt;exclusion&gt;\n\t\t\t\t\t&lt;groupId&gt;org.bouncycastle&lt;/groupId&gt;\n\t\t\t\t\t&lt;artifactId&gt;bcpkix-jdk15on&lt;/artifactId&gt;\n\t\t\t\t&lt;/exclusion&gt;\n\t\t\t&lt;/exclusions&gt;\n\t\t&lt;/dependency&gt;\n\t\t&lt;dependency&gt;\n\t\t\t&lt;groupId&gt;org.bouncycastle&lt;/groupId&gt;\n\t\t\t&lt;artifactId&gt;bcpkix-jdk18on&lt;/artifactId&gt;\n\t\t\t&lt;version&gt;1.76&lt;/version&gt;\n\t\t\t&lt;!-- End temporary fix for CVE-2023-33201 --&gt;\n\t\t&lt;/dependency&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">\t\t&lt;dependency&gt;\n\t\t\t&lt;groupId&gt;io.github.hakky54&lt;/groupId&gt;\n\t\t\t&lt;artifactId&gt;sslcontext-kickstart-for-pem&lt;/artifactId&gt;\n\t\t\t&lt;version&gt;8.1.6&lt;/version&gt;\n\t\t\t&lt;!-- Begin temporary fix for CVE-2023-33201 --&gt;\n\t\t\t&lt;exclusions&gt;\n\t\t\t\t&lt;exclusion&gt;\n\t\t\t\t\t&lt;groupId&gt;org.bouncycastle&lt;/groupId&gt;\n\t\t\t\t\t&lt;artifactId&gt;bcpkix-jdk15on&lt;/artifactId&gt;\n\t\t\t\t&lt;/exclusion&gt;\n\t\t\t&lt;/exclusions&gt;\n\t\t&lt;/dependency&gt;\n\t\t&lt;dependency&gt;\n\t\t\t&lt;groupId&gt;org.bouncycastle&lt;/groupId&gt;\n\t\t\t&lt;artifactId&gt;bcpkix-jdk18on&lt;/artifactId&gt;\n\t\t\t&lt;version&gt;1.76&lt;/version&gt;\n\t\t\t&lt;!-- End temporary fix for CVE-2023-33201 --&gt;\n\t\t&lt;/dependency&gt;\n</code></pre></div>\n<p dir=\"auto\">This will keep your compliance dept \u2705</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/387",
                "createdAt": "2023-10-06T18:59:40Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Added capability to conceal trusted certificates",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/392",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/392",
        "createdAt": "2023-10-12T12:11:01Z",
        "number": 392,
        "mergeCommit": {
          "oid": "d1f522c59748a2cdf6363cbc369d37067c488468",
          "message": "Added capability to conceal trusted certificates (#392)\n\n* Added initial implementation of concealed trusted certificates\r\n\r\n* Applied sonar recommendation\r\n\r\n* Renamed method\r\n\r\n* Added tests\r\n\r\n* Applied sonar recommendation",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/d1f522c59748a2cdf6363cbc369d37067c488468",
          "parents": {
            "nodes": [
              {
                "oid": "85808eebe74b0ce0dd0adbae72eb68a1e66d7d35",
                "message": "Merge pull request #390 from Hakky54/dependabot/maven/sslcontext-kickstart-for-netty/io.netty-netty-codec-http2-4.1.100.Final\n\nBump io.netty:netty-codec-http2 from 4.1.99.Final to 4.1.100.Final in /sslcontext-kickstart-for-netty"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/SSLFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/trustmanager/EnhanceableX509ExtendedTrustManager.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/TrustManagerUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/trustmanager/EnhanceableX509ExtendedTrustManagerShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/TrustManagerUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5coGml2gAoNjNkMmE1ZDJjOWI2MDA5YWQyMTIxZDk1ZGQzYTljY2QwYzVkOTUwZg",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/392/commits/63d2a5d2c9b6009ad2121d95dd3a9ccd0c5d950f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 391,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/391",
                "title": "Disable \"Acceptable client certificate CA names\" on MTLS client connect.",
                "bodyHTML": "<h3 dir=\"auto\">Discussed in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"5722198\" data-permission-text=\"Title is private\" data-url=\"https://github.com/Hakky54/sslcontext-kickstart/discussions/389\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/Hakky54/sslcontext-kickstart/discussions/389/hovercard\" href=\"https://github.com/Hakky54/sslcontext-kickstart/discussions/389\">#389</a></h3>\n<div type=\"discussions-op-text\" dir=\"auto\">\n<p dir=\"auto\"><sup>Originally posted by <strong>gerardnorton</strong> October 10, 2023</sup><br>\nIn MTLS configuration, by default, all allowed clients CN are returned when a client initializes an SSL communication. This can lead to many security risks and information leaks.</p>\n<p dir=\"auto\">This is my server implementation:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Bean\npublic ConfigurableServletWebServerFactory webServerFactory(\n                        SslContextFactory.Server sslContextFactory,\n                        @Value(&quot;${server.port}&quot;) int serverPort) {\n     JettyServletWebServerFactory factory = new JettyServletWebServerFactory();\n     JettyServerCustomizer jettyServerCustomizer = server -&gt; {\n          ServerConnector serverConnector = new ServerConnector(server, sslContextFactory);\n          serverConnector.setPort(serverPort);\n          server.setConnectors(new Connector[] {serverConnector});\n     };\n     factory.setServerCustomizers(Collections.singletonList(jettyServerCustomizer));\n     return factory;\n}\n\n@Bean\npublic SSLFactory sslFactory(@Value(&quot;${ssl.keystore-path}&quot;) String keyStorePath,\n                        @Value(&quot;${ssl.keystore-password}&quot;) String keyStorePassword,\n                        @Value(&quot;${ssl.truststore-path}&quot;) String trustStorePath,\n                        @Value(&quot;${ssl.truststore-password}&quot;) String trustStorePassword)\n                        throws Exception {\n    ...\n    return SSLFactory.builder()\n         .withIdentityMaterial(identityKeystore.toPath(), keyStorePassword.toCharArray())\n         .withTrustMaterial(identityTruststore.toPath(),   trustStorePassword.toCharArray())\n         .withSwappableIdentityMaterial().withSwappableTrustMaterial()\n         .withNeedClientAuthentication(Boolean.TRUE)\n         .withProtocols(&quot;TLSv1.3&quot;, &quot;TLSv1.2&quot;)\n         .withCiphers(&quot;TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384&quot;, &quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384&quot;)\n         .withSessionTimeout(3600).withSessionCacheSize(1024).build();\n}\n\n@Bean\npublic SslContextFactory.Server sslContextFactory(SSLFactory sslFactory) {\n         return JettySslUtils.forServer(sslFactory);\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Bean</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-smi\">ConfigurableServletWebServerFactory</span> <span class=\"pl-s1\">webServerFactory</span>(\n                        <span class=\"pl-smi\">SslContextFactory</span>.<span class=\"pl-smi\">Server</span> <span class=\"pl-s1\">sslContextFactory</span>,\n                        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Value</span>(<span class=\"pl-s\">\"${server.port}\"</span>) <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">serverPort</span>) {\n     <span class=\"pl-smi\">JettyServletWebServerFactory</span> <span class=\"pl-s1\">factory</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">JettyServletWebServerFactory</span>();\n     <span class=\"pl-smi\">JettyServerCustomizer</span> <span class=\"pl-s1\">jettyServerCustomizer</span> = <span class=\"pl-s1\">server</span> -&gt; {\n          <span class=\"pl-smi\">ServerConnector</span> <span class=\"pl-s1\">serverConnector</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ServerConnector</span>(<span class=\"pl-s1\">server</span>, <span class=\"pl-s1\">sslContextFactory</span>);\n          <span class=\"pl-s1\">serverConnector</span>.<span class=\"pl-en\">setPort</span>(<span class=\"pl-s1\">serverPort</span>);\n          <span class=\"pl-s1\">server</span>.<span class=\"pl-en\">setConnectors</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">Connector</span>[] {<span class=\"pl-s1\">serverConnector</span>});\n     };\n     <span class=\"pl-s1\">factory</span>.<span class=\"pl-en\">setServerCustomizers</span>(<span class=\"pl-smi\">Collections</span>.<span class=\"pl-en\">singletonList</span>(<span class=\"pl-s1\">jettyServerCustomizer</span>));\n     <span class=\"pl-k\">return</span> <span class=\"pl-s1\">factory</span>;\n}\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Bean</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-smi\">SSLFactory</span> <span class=\"pl-s1\">sslFactory</span>(<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Value</span>(<span class=\"pl-s\">\"${ssl.keystore-path}\"</span>) <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">keyStorePath</span>,\n                        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Value</span>(<span class=\"pl-s\">\"${ssl.keystore-password}\"</span>) <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">keyStorePassword</span>,\n                        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Value</span>(<span class=\"pl-s\">\"${ssl.truststore-path}\"</span>) <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">trustStorePath</span>,\n                        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Value</span>(<span class=\"pl-s\">\"${ssl.truststore-password}\"</span>) <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">trustStorePassword</span>)\n                        <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">Exception</span> {\n    ...\n    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-en\">builder</span>()\n         .<span class=\"pl-en\">withIdentityMaterial</span>(<span class=\"pl-s1\">identityKeystore</span>.<span class=\"pl-en\">toPath</span>(), <span class=\"pl-s1\">keyStorePassword</span>.<span class=\"pl-en\">toCharArray</span>())\n         .<span class=\"pl-en\">withTrustMaterial</span>(<span class=\"pl-s1\">identityTruststore</span>.<span class=\"pl-en\">toPath</span>(),   <span class=\"pl-s1\">trustStorePassword</span>.<span class=\"pl-en\">toCharArray</span>())\n         .<span class=\"pl-en\">withSwappableIdentityMaterial</span>().<span class=\"pl-en\">withSwappableTrustMaterial</span>()\n         .<span class=\"pl-en\">withNeedClientAuthentication</span>(<span class=\"pl-smi\">Boolean</span>.<span class=\"pl-c1\">TRUE</span>)\n         .<span class=\"pl-en\">withProtocols</span>(<span class=\"pl-s\">\"TLSv1.3\"</span>, <span class=\"pl-s\">\"TLSv1.2\"</span>)\n         .<span class=\"pl-en\">withCiphers</span>(<span class=\"pl-s\">\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\"</span>, <span class=\"pl-s\">\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\"</span>)\n         .<span class=\"pl-en\">withSessionTimeout</span>(<span class=\"pl-c1\">3600</span>).<span class=\"pl-en\">withSessionCacheSize</span>(<span class=\"pl-c1\">1024</span>).<span class=\"pl-en\">build</span>();\n}\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Bean</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-smi\">SslContextFactory</span>.<span class=\"pl-smi\">Server</span> <span class=\"pl-s1\">sslContextFactory</span>(<span class=\"pl-smi\">SSLFactory</span> <span class=\"pl-s1\">sslFactory</span>) {\n         <span class=\"pl-k\">return</span> <span class=\"pl-smi\">JettySslUtils</span>.<span class=\"pl-en\">forServer</span>(<span class=\"pl-s1\">sslFactory</span>);\n}</pre></div>\n<p dir=\"auto\">Command to check issue:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"openssl s_client -showcerts -servername 127.0.0.1 -connect 127.0.0.1:8443 &lt;/dev/nul\"><pre class=\"notranslate\">openssl s_client -showcerts -servername 127.0.0.1 -connect 127.0.0.1:8443 <span class=\"pl-k\">&lt;</span>/dev/nul</pre></div>\n<p dir=\"auto\">Partial reponse:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Server certificate\nsubject=CN = ssl-server-cert\nissuer=CN = ssl-ca-cert\n\nAcceptable client certificate CA names\nCN = ssl-ca-cert\nCN = admin@localhost.local\nCN = demo01@hotmail.com\nCN = demo02@hotmail.com\nClient Certificate Types: ECDSA sign, RSA sign, DSA sign\nRequested Signature Algorithms: ECDSA+SHA256:ECDSA+SHA384:ECDSA+SHA512:Ed25519:Ed448:RSA-PSS+SHA256:RSA-PSS+SHA384:RSA-PSS+SHA512:RSA-PSS+SHA256:RSA-PSS+SHA384:RSA-PSS+SHA512:RSA+SHA256:RSA+SHA384:RSA+SHA512:DSA+SHA256:ECDSA+SHA224:RSA+SHA224:DSA+SHA224:ECDSA+SHA1:RSA+SHA1:DSA+SHA1\nShared Requested Signature Algorithms: ECDSA+SHA256:ECDSA+SHA384:ECDSA+SHA512:Ed25519:Ed448:RSA-PSS+SHA256:RSA-PSS+SHA384:RSA-PSS+SHA512:RSA-PSS+SHA256:RSA-PSS+SHA384:RSA-PSS+SHA512:RSA+SHA256:RSA+SHA384:RSA+SHA512:DSA+SHA256:ECDSA+SHA224:RSA+SHA224:DSA+SHA224\nPeer signing digest: SHA256\nPeer signature type: RSA-PSS\nServer Temp Key: X25519, 253 bits\n\nSSL handshake has read 2228 bytes and written 472 bytes\nVerification error: self-signed certificate in certificate chain\"><pre class=\"notranslate\">Server certificate\nsubject=CN = ssl-server-cert\nissuer=CN = ssl-ca-cert\n\nAcceptable client certificate CA names\nCN = ssl-ca-cert\nCN = admin@localhost.local\nCN = demo01@hotmail.com\nCN = demo02@hotmail.com\nClient Certificate Types: ECDSA sign, RSA sign, DSA sign\nRequested Signature Algorithms: ECDSA+SHA256:ECDSA+SHA384:ECDSA+SHA512:Ed25519:Ed448:RSA-PSS+SHA256:RSA-PSS+SHA384:RSA-PSS+SHA512:RSA-PSS+SHA256:RSA-PSS+SHA384:RSA-PSS+SHA512:RSA+SHA256:RSA+SHA384:RSA+SHA512:DSA+SHA256:ECDSA+SHA224:RSA+SHA224:DSA+SHA224:ECDSA+SHA1:RSA+SHA1:DSA+SHA1\nShared Requested Signature Algorithms: ECDSA+SHA256:ECDSA+SHA384:ECDSA+SHA512:Ed25519:Ed448:RSA-PSS+SHA256:RSA-PSS+SHA384:RSA-PSS+SHA512:RSA-PSS+SHA256:RSA-PSS+SHA384:RSA-PSS+SHA512:RSA+SHA256:RSA+SHA384:RSA+SHA512:DSA+SHA256:ECDSA+SHA224:RSA+SHA224:DSA+SHA224\nPeer signing digest: SHA256\nPeer signature type: RSA-PSS\nServer Temp Key: X25519, 253 bits\n\nSSL handshake has <span class=\"pl-c1\">read</span> 2228 bytes and written 472 bytes\nVerification error: self-signed certificate <span class=\"pl-k\">in</span> certificate chain</pre></div>\n<p dir=\"auto\">How can I disable the response of allowed clients in the truststore file?</p>\n<p dir=\"auto\">Best regards :-)</p>\n</div>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/391",
                "createdAt": "2023-10-11T06:35:27Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Added support for excluding ciphers and protocols",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/433",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/433",
        "createdAt": "2024-01-10T20:15:39Z",
        "number": 433,
        "mergeCommit": {
          "oid": "5c7a88508b0aa30be235ef6a6b0e0bd43844f984",
          "message": "Added support for excluding ciphers and protocols (#433)\n\n* Added methods for excluding ciphers and protocols\r\n\r\n* Added test for fallback ciphers and protocols\r\n\r\n* Added test for base merge function",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/5c7a88508b0aa30be235ef6a6b0e0bd43844f984",
          "parents": {
            "nodes": [
              {
                "oid": "01e02baa22f9b8e87294a4e2d9c1c03f323d63a1",
                "message": "Bump org.assertj:assertj-core from 3.25.0 to 3.25.1 (#431)\n\nBumps [org.assertj:assertj-core](https://github.com/assertj/assertj) from 3.25.0 to 3.25.1.\r\n- [Release notes](https://github.com/assertj/assertj/releases)\r\n- [Commits](https://github.com/assertj/assertj/compare/assertj-build-3.25.0...assertj-build-3.25.1)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.assertj:assertj-core\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/SSLFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/SSLParametersUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/SSLFactoryShould.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/SSLParametersUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5juaLt2gAoYTdlYzg4MmU0ZmY2MGEyYzBhMjYxZGRlYjhiYjI1NmI2MTczMjkwMw",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/433/commits/a7ec882e4ff60a2c0a261ddeb8bb256b61732903"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 432,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/432",
                "title": "Add Support For `withoutProtocols` + `withoutCiphers`",
                "bodyHTML": "<p dir=\"auto\">So it seems one can select which protocols and ciphers to use by doing the following:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"SSLFactory.builder()\n          .withProtocols(&quot;TLSv1.3&quot;, &quot;TLSv1.2&quot;)\n          .withCiphers(\n                    &quot;TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384&quot;,\n                    &quot;TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384&quot;,\n                    ...\n          )\n          ...\"><pre class=\"notranslate\"><span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-en\">builder</span>()\n          .<span class=\"pl-en\">withProtocols</span>(<span class=\"pl-s\">\"TLSv1.3\"</span>, <span class=\"pl-s\">\"TLSv1.2\"</span>)\n          .<span class=\"pl-en\">withCiphers</span>(\n                    <span class=\"pl-s\">\"TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384\"</span>,\n                    <span class=\"pl-s\">\"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\"</span>,\n                    ...\n          )\n          ...</pre></div>\n<p dir=\"auto\">Would it be possible to support excluding both protocols and ciphers as well:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"SSLFactory.builder()\n          .withoutProtocols(&quot;SSLv3&quot;)\n          .withoutCiphers(\n                    &quot;SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA&quot;,\n                    &quot;SSL_DHE_DSS_WITH_DES_CBC_SHA&quot;,\n                    ...\n          )\n          ...\"><pre class=\"notranslate\"><span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-en\">builder</span>()\n          .<span class=\"pl-en\">withoutProtocols</span>(<span class=\"pl-s\">\"SSLv3\"</span>)\n          .<span class=\"pl-en\">withoutCiphers</span>(\n                    <span class=\"pl-s\">\"SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA\"</span>,\n                    <span class=\"pl-s\">\"SSL_DHE_DSS_WITH_DES_CBC_SHA\"</span>,\n                    ...\n          )\n          ...</pre></div>\n<p dir=\"auto\">The idea would be it takes the default protocols and ciphers and remove the ones specified in without. When both are used which might be a little weird, it would remove the without from the with ones.</p>\n<p dir=\"auto\">Please let me know thoughts on this idea or if there is an existing / better way to do this.</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/432",
                "createdAt": "2024-01-09T18:15:35Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support for adding certificate in a nested trustManager of CompositeX509ExtendedTrustManager",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/436",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/436",
        "createdAt": "2024-01-12T15:55:04Z",
        "number": 436,
        "mergeCommit": {
          "oid": "f2a3ceef258ba1cd2d18f0a309c20a83dfe7f7fc",
          "message": "Support for adding certificate in a nested trustManager of CompositeX509ExtendedTrustManager (#436)\n\n* Support for adding certificate in a nested trustManager of CompositeX509ExtendedTrustManager\r\n\r\n* Added test case for validating the content of CompositeX509ExtendedTrustManager",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/f2a3ceef258ba1cd2d18f0a309c20a83dfe7f7fc",
          "parents": {
            "nodes": [
              {
                "oid": "5c7a88508b0aa30be235ef6a6b0e0bd43844f984",
                "message": "Added support for excluding ciphers and protocols (#433)\n\n* Added methods for excluding ciphers and protocols\r\n\r\n* Added test for fallback ciphers and protocols\r\n\r\n* Added test for base merge function"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/TrustManagerUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/TrustManagerUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5j8TTu2gAoMWYxMTNkNWI1OTliYTZjOGQxZmVhOThhMzQ4MjY0YjRjYjQ5MGIzNA",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/436/commits/1f113d5b599ba6c8d1fea98a348264b4cb490b34"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 434,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/434",
                "title": "Question about Classic Configuration Migration",
                "bodyHTML": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Hakky54/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Hakky54\">@Hakky54</a>, thanks for creating and maintaining this library, it looks really useful. I apologize in advance for the dumb question, but I just wanted to confirm my understanding was correct.</p>\n<p dir=\"auto\">My use case is I want to use the default <code class=\"notranslate\">cacerts</code> file, add some additional certificates to it at run time, and then use the combined list of certificates globally within the application. I <em>think</em> this would be the equivalent of having a predefined truststore with the certificates already combined and passing it in by <code class=\"notranslate\">-Djavax.net.ssl.trustStore=/path/to/my/cacerts -Djavax.net.ssl.trustStorePassword=changeit</code>, is that right?</p>\n<p dir=\"auto\">Based on the code samples from your README, I think all I need to do is combine the examples:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// build the default factory\nSSLFactory sslFactory = SSLFactory.builder()\n        .withDefaultTrustMaterial()\n        .withSystemTrustMaterial()\n        .withInflatableTrustMaterial()\n        .build();\n\nList&lt;X509Certificate&gt; certificates = ... ;\n// dynamically add the certificates I want to \nTrustManagerUtils.addCertificate(sslFactory.getTrustManager().get(), certificates);\n\n// this sets the trustStore as if I had passed it in -Djavax.net.ssl.trustStore=/path/to/my/cacerts ?\nSSLContext.setDefault(sslFactory.getSslContext());\"><pre class=\"notranslate\"><span class=\"pl-c\">// build the default factory</span>\n<span class=\"pl-smi\">SSLFactory</span> <span class=\"pl-s1\">sslFactory</span> = <span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-en\">builder</span>()\n        .<span class=\"pl-en\">withDefaultTrustMaterial</span>()\n        .<span class=\"pl-en\">withSystemTrustMaterial</span>()\n        .<span class=\"pl-en\">withInflatableTrustMaterial</span>()\n        .<span class=\"pl-en\">build</span>();\n\n<span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">X509Certificate</span>&gt; <span class=\"pl-s1\">certificates</span> = ... ;\n<span class=\"pl-c\">// dynamically add the certificates I want to </span>\n<span class=\"pl-smi\">TrustManagerUtils</span>.<span class=\"pl-en\">addCertificate</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getTrustManager</span>().<span class=\"pl-en\">get</span>(), <span class=\"pl-s1\">certificates</span>);\n\n<span class=\"pl-c\">// this sets the trustStore as if I had passed it in -Djavax.net.ssl.trustStore=/path/to/my/cacerts ?</span>\n<span class=\"pl-smi\">SSLContext</span>.<span class=\"pl-en\">setDefault</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getSslContext</span>());</pre></div>\n<p dir=\"auto\">Is my understanding correct that the above would have the same effect as if all of the certificates were present in the default <code class=\"notranslate\">cacerts</code> file from the beginning?</p>\n<p dir=\"auto\">Do I need to worry about calling <code class=\"notranslate\">KeyManagerUtils.swapKeyManager(..)</code> or <code class=\"notranslate\">TrustManagerUtils.swapTrustManager(..)</code>?</p>\n<p dir=\"auto\">Thank you in advance</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/434",
                "createdAt": "2024-01-12T04:03:59Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Simplify swapping trust manager",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/437",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/437",
        "createdAt": "2024-01-14T12:07:34Z",
        "number": 437,
        "mergeCommit": {
          "oid": "9210300447a25476262d93718aebba518c6ff1d3",
          "message": "Simplified computing new trust manager with custom configuration from base trust manager (#437)",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/9210300447a25476262d93718aebba518c6ff1d3",
          "parents": {
            "nodes": [
              {
                "oid": "a40319874bb23b496c028b4ef1e652ec16c811b6",
                "message": "Simplified adding certificate to TrustManager"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/TrustManagerUtils.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5kBZXz2gAoMzlkNjFhOTY2NjZlOWQxYjRmZjE3OTg2ODczZTU2MDAxNGM5OGFkZA",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/437/commits/39d61a96666e9d1b4ff17986873e560014c98add"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 434,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/434",
                "title": "Question about Classic Configuration Migration",
                "bodyHTML": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Hakky54/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Hakky54\">@Hakky54</a>, thanks for creating and maintaining this library, it looks really useful. I apologize in advance for the dumb question, but I just wanted to confirm my understanding was correct.</p>\n<p dir=\"auto\">My use case is I want to use the default <code class=\"notranslate\">cacerts</code> file, add some additional certificates to it at run time, and then use the combined list of certificates globally within the application. I <em>think</em> this would be the equivalent of having a predefined truststore with the certificates already combined and passing it in by <code class=\"notranslate\">-Djavax.net.ssl.trustStore=/path/to/my/cacerts -Djavax.net.ssl.trustStorePassword=changeit</code>, is that right?</p>\n<p dir=\"auto\">Based on the code samples from your README, I think all I need to do is combine the examples:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// build the default factory\nSSLFactory sslFactory = SSLFactory.builder()\n        .withDefaultTrustMaterial()\n        .withSystemTrustMaterial()\n        .withInflatableTrustMaterial()\n        .build();\n\nList&lt;X509Certificate&gt; certificates = ... ;\n// dynamically add the certificates I want to \nTrustManagerUtils.addCertificate(sslFactory.getTrustManager().get(), certificates);\n\n// this sets the trustStore as if I had passed it in -Djavax.net.ssl.trustStore=/path/to/my/cacerts ?\nSSLContext.setDefault(sslFactory.getSslContext());\"><pre class=\"notranslate\"><span class=\"pl-c\">// build the default factory</span>\n<span class=\"pl-smi\">SSLFactory</span> <span class=\"pl-s1\">sslFactory</span> = <span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-en\">builder</span>()\n        .<span class=\"pl-en\">withDefaultTrustMaterial</span>()\n        .<span class=\"pl-en\">withSystemTrustMaterial</span>()\n        .<span class=\"pl-en\">withInflatableTrustMaterial</span>()\n        .<span class=\"pl-en\">build</span>();\n\n<span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">X509Certificate</span>&gt; <span class=\"pl-s1\">certificates</span> = ... ;\n<span class=\"pl-c\">// dynamically add the certificates I want to </span>\n<span class=\"pl-smi\">TrustManagerUtils</span>.<span class=\"pl-en\">addCertificate</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getTrustManager</span>().<span class=\"pl-en\">get</span>(), <span class=\"pl-s1\">certificates</span>);\n\n<span class=\"pl-c\">// this sets the trustStore as if I had passed it in -Djavax.net.ssl.trustStore=/path/to/my/cacerts ?</span>\n<span class=\"pl-smi\">SSLContext</span>.<span class=\"pl-en\">setDefault</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getSslContext</span>());</pre></div>\n<p dir=\"auto\">Is my understanding correct that the above would have the same effect as if all of the certificates were present in the default <code class=\"notranslate\">cacerts</code> file from the beginning?</p>\n<p dir=\"auto\">Do I need to worry about calling <code class=\"notranslate\">KeyManagerUtils.swapKeyManager(..)</code> or <code class=\"notranslate\">TrustManagerUtils.swapTrustManager(..)</code>?</p>\n<p dir=\"auto\">Thank you in advance</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/434",
                "createdAt": "2024-01-12T04:03:59Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Added timeout for fetching windows keystores",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/445",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/445",
        "createdAt": "2024-01-20T22:40:03Z",
        "number": 445,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/MockUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/CertificateUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyStoreUtilsShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/TrustManagerUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5kosxf2gAoMTk1MDU4MDA1YjI4NjAwYjc0NmM4MWM1ZDFmNmYwNTExZTc0NjdmMg",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/445/commits/195058005b28600b746c81c5d1f6f0511e7467f2"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 444,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/444",
                "title": "Loading the keystore takes a very long time in some rare cases",
                "bodyHTML": "<p dir=\"auto\">Hi, this is more a behavior report than a bug, but it could be valuable to share.</p>\n<p dir=\"auto\"><strong>Describe the bug</strong></p>\n<p dir=\"auto\">When loading a keystore, it may get stuck on some rare occasions. It can get stuck for 1, 2, 5, 10 minutes, or indefinitely, as reported by the user.</p>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<p dir=\"auto\">The only reported issue was found on Windows 10. Whenever the user tried to initialize our HTTP client, it got stuck. We retrieved the following stack trace from this user's thread dump:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\tat platform/jdk.crypto.mscapi@17.0.9/sun.security.mscapi.CKeyStore.loadKeysOrCertificateChains(Native Method)\n\tat platform/jdk.crypto.mscapi@17.0.9/sun.security.mscapi.CKeyStore.engineLoad(CKeyStore.java:734)\n\tat platform/jdk.crypto.mscapi@17.0.9/sun.security.mscapi.CKeyStore$MY.engineLoad(CKeyStore.java:60)\n\tat java.base@17.0.9/java.security.KeyStore.load(KeyStore.java:1473)\n\tat nl.altindag.ssl.util.KeyStoreUtils.createKeyStore(KeyStoreUtils.java:150)\n\tat nl.altindag.ssl.util.KeyStoreUtils.createKeyStoreIfAvailable(KeyStoreUtils.java:260)\n\tat nl.altindag.ssl.util.KeyStoreUtils.lambda$loadSystemKeyStores$1(KeyStoreUtils.java:233)\n\tat nl.altindag.ssl.util.KeyStoreUtils$$Lambda$1986/0x0000000801397048.apply(Unknown Source)\n\tat java.base@17.0.9/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base@17.0.9/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base@17.0.9/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base@17.0.9/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base@17.0.9/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base@17.0.9/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base@17.0.9/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base@17.0.9/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat nl.altindag.ssl.util.KeyStoreUtils.loadSystemKeyStores(KeyStoreUtils.java:236)\n\tat nl.altindag.ssl.util.TrustManagerUtils.createTrustManagerWithSystemTrustedCertificates(TrustManagerUtils.java:89)\n\tat nl.altindag.ssl.SSLFactory$Builder.withSystemTrustMaterial(SSLFactory.java:209)\"><pre class=\"notranslate\"><code class=\"notranslate\">\tat platform/jdk.crypto.mscapi@17.0.9/sun.security.mscapi.CKeyStore.loadKeysOrCertificateChains(Native Method)\n\tat platform/jdk.crypto.mscapi@17.0.9/sun.security.mscapi.CKeyStore.engineLoad(CKeyStore.java:734)\n\tat platform/jdk.crypto.mscapi@17.0.9/sun.security.mscapi.CKeyStore$MY.engineLoad(CKeyStore.java:60)\n\tat java.base@17.0.9/java.security.KeyStore.load(KeyStore.java:1473)\n\tat nl.altindag.ssl.util.KeyStoreUtils.createKeyStore(KeyStoreUtils.java:150)\n\tat nl.altindag.ssl.util.KeyStoreUtils.createKeyStoreIfAvailable(KeyStoreUtils.java:260)\n\tat nl.altindag.ssl.util.KeyStoreUtils.lambda$loadSystemKeyStores$1(KeyStoreUtils.java:233)\n\tat nl.altindag.ssl.util.KeyStoreUtils$$Lambda$1986/0x0000000801397048.apply(Unknown Source)\n\tat java.base@17.0.9/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base@17.0.9/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base@17.0.9/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base@17.0.9/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base@17.0.9/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base@17.0.9/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base@17.0.9/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base@17.0.9/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat nl.altindag.ssl.util.KeyStoreUtils.loadSystemKeyStores(KeyStoreUtils.java:236)\n\tat nl.altindag.ssl.util.TrustManagerUtils.createTrustManagerWithSystemTrustedCertificates(TrustManagerUtils.java:89)\n\tat nl.altindag.ssl.SSLFactory$Builder.withSystemTrustMaterial(SSLFactory.java:209)\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected behavior</strong></p>\n<p dir=\"auto\">We would expect the loading of the keystore to take a short time.</p>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java 17</li>\n<li>Windows 10</li>\n<li>Issue happens when using SonarLint (in which we embed the sslcontext-kickstart library) at the IDE startups (when the HTTP client is initialized)</li>\n</ul>\n<p dir=\"auto\"><strong>Additional context</strong></p>\n<p dir=\"auto\">The issue was fixed by itself, but the user does not know why. Apparently, nothing was changed.</p>\n<p dir=\"auto\">We saw this JDK <a href=\"https://bugs.openjdk.org/browse/JDK-8313367\" rel=\"nofollow\">bug</a> report mentioning that, on Windows, it may ask for specific privilege to read the certificates, in which case it could explain the issue the user had. Perhaps it is asking for credentials to read the certificate, and the user might have missed it, or it wasn't proposed at all. So far, this is our only guess.</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/444",
                "createdAt": "2024-01-16T08:38:24Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "no-activity"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support timeout option for certificate extracting client",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/451",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/451",
        "createdAt": "2024-01-31T22:56:33Z",
        "number": 451,
        "mergeCommit": {
          "oid": "daa3c8d5c4ec38de67a0a503a0ccc3e6881d01b7",
          "message": "Support timeout option for certificate extracting client (#451)\n\n* Added timeout option\r\n\r\n* Added tests\r\n\r\n* Adjusted variable name",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/daa3c8d5c4ec38de67a0a503a0ccc3e6881d01b7",
          "parents": {
            "nodes": [
              {
                "oid": "600691fa57d112905d04bb4055c1467a099f62ac",
                "message": "Bump org.apache.httpcomponents.client5:httpclient5 from 5.3 to 5.3.1 (#449)\n\nBumps [org.apache.httpcomponents.client5:httpclient5](https://github.com/apache/httpcomponents-client) from 5.3 to 5.3.1.\r\n- [Changelog](https://github.com/apache/httpcomponents-client/blob/rel/v5.3.1/RELEASE_NOTES.txt)\r\n- [Commits](https://github.com/apache/httpcomponents-client/compare/rel/v5.3...rel/v5.3.1)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.apache.httpcomponents.client5:httpclient5\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/CertificateExtractingClient.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/CertificateExtractingClientIT.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5loEEY2gAoMGNkM2I5MmI2NzAwMDIyODJhNDgyZTdlYWE5NWM0MmE3YmExYjUwOA",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/451/commits/0cd3b92b670002282a482e7eaa95c42a7ba1b508"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 22,
                "url": "https://github.com/Hakky54/certificate-ripper/issues/22",
                "title": "Allow to set timeout when destination not reachable",
                "bodyHTML": "<p dir=\"auto\"><strong>Is your feature request related to a problem? Please describe.</strong><br>\nWe are using crip in dockerfiles for devcontainers and fetch some certs to trust them. Unfortunately some urls are not always accessible and this leads to crip hanging for minutes when it doesn't reach its destination.</p>\n<p dir=\"auto\"><strong>Describe the solution you'd like</strong><br>\nuse a sensible default (couple seconds) or allow to specify a timeout which is much shorter than minutes.</p>\n<p dir=\"auto\"><strong>Describe alternatives you've considered</strong><br>\nbuild logic around crip which checks if the destination is reachable before calling crip.</p>",
                "resourcePath": "/Hakky54/certificate-ripper/issues/22",
                "createdAt": "2024-01-31T16:35:31Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Added Fenix Security Provider",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/454",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/454",
        "createdAt": "2024-02-09T22:16:48Z",
        "number": 454,
        "mergeCommit": {
          "oid": "642b21becee8f718c3eb3d09dcb2922876d892d7",
          "message": "Added Fenix Security Provider (#454)\n\n* Added FenixProvider\r\n\r\n* Added author\r\n\r\n* Added tests\r\n\r\n* Added documentation",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/642b21becee8f718c3eb3d09dcb2922876d892d7",
          "parents": {
            "nodes": [
              {
                "oid": "24797ea3c1bf24e503018d507d4e1aa78744ac74",
                "message": "Bump version.junit from 5.10.1 to 5.10.2 (#452)\n\nBumps `version.junit` from 5.10.1 to 5.10.2.\r\n\r\nUpdates `org.junit.jupiter:junit-jupiter-api` from 5.10.1 to 5.10.2\r\n- [Release notes](https://github.com/junit-team/junit5/releases)\r\n- [Commits](https://github.com/junit-team/junit5/compare/r5.10.1...r5.10.2)\r\n\r\nUpdates `org.junit.jupiter:junit-jupiter-engine` from 5.10.1 to 5.10.2\r\n- [Release notes](https://github.com/junit-team/junit5/releases)\r\n- [Commits](https://github.com/junit-team/junit5/compare/r5.10.1...r5.10.2)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: org.junit.jupiter:junit-jupiter-api\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n- dependency-name: org.junit.jupiter:junit-jupiter-engine\r\n  dependency-type: direct:development\r\n  update-type: version-update:semver-patch\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "README.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/module-info.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/provider/FenixProvider.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/provider/SSLFactoryProvider.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/sslcontext/FenixSSLContext.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/sslcontext/FenixSSLContextSpi.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/provider/FenixProviderShould.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/provider/SSLFactoryProviderShould.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/sslcontext/FenixSSLContextSpiShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5mhd772gAoODJjMGNhNGVkMGM2MTQ1Yzg2ZmViNzY0YzYzMzdiY2JmNjM2ZGU0NA",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/454/commits/82c0ca4ed0c6145c86feb764c6337bcbf636de44"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 434,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/434",
                "title": "Question about Classic Configuration Migration",
                "bodyHTML": "<p dir=\"auto\">Hi <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/Hakky54/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/Hakky54\">@Hakky54</a>, thanks for creating and maintaining this library, it looks really useful. I apologize in advance for the dumb question, but I just wanted to confirm my understanding was correct.</p>\n<p dir=\"auto\">My use case is I want to use the default <code class=\"notranslate\">cacerts</code> file, add some additional certificates to it at run time, and then use the combined list of certificates globally within the application. I <em>think</em> this would be the equivalent of having a predefined truststore with the certificates already combined and passing it in by <code class=\"notranslate\">-Djavax.net.ssl.trustStore=/path/to/my/cacerts -Djavax.net.ssl.trustStorePassword=changeit</code>, is that right?</p>\n<p dir=\"auto\">Based on the code samples from your README, I think all I need to do is combine the examples:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// build the default factory\nSSLFactory sslFactory = SSLFactory.builder()\n        .withDefaultTrustMaterial()\n        .withSystemTrustMaterial()\n        .withInflatableTrustMaterial()\n        .build();\n\nList&lt;X509Certificate&gt; certificates = ... ;\n// dynamically add the certificates I want to \nTrustManagerUtils.addCertificate(sslFactory.getTrustManager().get(), certificates);\n\n// this sets the trustStore as if I had passed it in -Djavax.net.ssl.trustStore=/path/to/my/cacerts ?\nSSLContext.setDefault(sslFactory.getSslContext());\"><pre class=\"notranslate\"><span class=\"pl-c\">// build the default factory</span>\n<span class=\"pl-smi\">SSLFactory</span> <span class=\"pl-s1\">sslFactory</span> = <span class=\"pl-smi\">SSLFactory</span>.<span class=\"pl-en\">builder</span>()\n        .<span class=\"pl-en\">withDefaultTrustMaterial</span>()\n        .<span class=\"pl-en\">withSystemTrustMaterial</span>()\n        .<span class=\"pl-en\">withInflatableTrustMaterial</span>()\n        .<span class=\"pl-en\">build</span>();\n\n<span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">X509Certificate</span>&gt; <span class=\"pl-s1\">certificates</span> = ... ;\n<span class=\"pl-c\">// dynamically add the certificates I want to </span>\n<span class=\"pl-smi\">TrustManagerUtils</span>.<span class=\"pl-en\">addCertificate</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getTrustManager</span>().<span class=\"pl-en\">get</span>(), <span class=\"pl-s1\">certificates</span>);\n\n<span class=\"pl-c\">// this sets the trustStore as if I had passed it in -Djavax.net.ssl.trustStore=/path/to/my/cacerts ?</span>\n<span class=\"pl-smi\">SSLContext</span>.<span class=\"pl-en\">setDefault</span>(<span class=\"pl-s1\">sslFactory</span>.<span class=\"pl-en\">getSslContext</span>());</pre></div>\n<p dir=\"auto\">Is my understanding correct that the above would have the same effect as if all of the certificates were present in the default <code class=\"notranslate\">cacerts</code> file from the beginning?</p>\n<p dir=\"auto\">Do I need to worry about calling <code class=\"notranslate\">KeyManagerUtils.swapKeyManager(..)</code> or <code class=\"notranslate\">TrustManagerUtils.swapTrustManager(..)</code>?</p>\n<p dir=\"auto\">Thank you in advance</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/434",
                "createdAt": "2024-01-12T04:03:59Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Added specific mac intel and m1 ci",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/462",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/462",
        "createdAt": "2024-02-21T23:58:21Z",
        "number": 462,
        "mergeCommit": {
          "oid": "dc381e084493e885d23ab8903e6dd897ffe88c6d",
          "message": "Configered mac m1 ci  build (#462)\n\n* Added specific mac intel and m1 versions\r\n\r\n* Comparing different mac versions\r\n\r\n* Dropped macos-12",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/dc381e084493e885d23ab8903e6dd897ffe88c6d",
          "parents": {
            "nodes": [
              {
                "oid": "320b837280b372e2f4acd67fb639c7cb41014575",
                "message": "[maven-release-plugin] prepare for next development iteration"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/maven.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5nlfBw2gAoOWQzNGJjZjFkZTM3NjliYjIzMzllN2ZhZjhmYzBiYjE3ZTc1MDY5MA",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/462/commits/9d34bcf1de3769bb2339e7faf8fc0bb17e750690"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 461,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/461",
                "title": "aarch64 macOS runner support",
                "bodyHTML": "<p dir=\"auto\"><a href=\"https://github.blog/changelog/2024-01-30-github-actions-introducing-the-new-m1-macos-runner-available-to-open-source/\" rel=\"nofollow\">They're now available</a> by using the <a href=\"https://github.com/actions/runner-images/blob/main/images/macos/macos-14-arm64-Readme.md\"><code class=\"notranslate\">macos-14</code></a> OS in GH Actions.</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/461",
                "createdAt": "2024-02-21T22:49:12Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add ci for mac m1 and intel",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/463",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/463",
        "createdAt": "2024-02-22T18:35:05Z",
        "number": 463,
        "mergeCommit": {
          "oid": "c917b7e8100dde057cf8185ae8d9425d8f73829f",
          "message": "Add ci for mac m1 and intel (#463)\n\n* Added specific mac intel and m1 versions\r\n\r\n* Comparing different mac versions\r\n\r\n* Dropped macos-12\r\n\r\n* Added mac intel to the build",
          "commitUrl": "https://github.com/Hakky54/sslcontext-kickstart/commit/c917b7e8100dde057cf8185ae8d9425d8f73829f",
          "parents": {
            "nodes": [
              {
                "oid": "dc381e084493e885d23ab8903e6dd897ffe88c6d",
                "message": "Configered mac m1 ci  build (#462)\n\n* Added specific mac intel and m1 versions\r\n\r\n* Comparing different mac versions\r\n\r\n* Dropped macos-12"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/maven.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5nrnem2gAoMTg4Mjc2MDUyNjkwMWEwMDMyNTkxN2FjMDcxYWU5MDlmNmZhNWUyOQ",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/463/commits/1882760526901a00325917ac071ae909f6fa5e29"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 461,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/461",
                "title": "aarch64 macOS runner support",
                "bodyHTML": "<p dir=\"auto\"><a href=\"https://github.blog/changelog/2024-01-30-github-actions-introducing-the-new-m1-macos-runner-available-to-open-source/\" rel=\"nofollow\">They're now available</a> by using the <a href=\"https://github.com/actions/runner-images/blob/main/images/macos/macos-14-arm64-Readme.md\"><code class=\"notranslate\">macos-14</code></a> OS in GH Actions.</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/461",
                "createdAt": "2024-02-21T22:49:12Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Loading Windows keystores with a timeout option",
        "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/473",
        "resourcePath": "/Hakky54/sslcontext-kickstart/pull/473",
        "createdAt": "2024-03-19T23:22:11Z",
        "number": 473,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/KeyStoreUtils.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "sslcontext-kickstart/src/main/java/nl/altindag/ssl/util/internal/ConcurrencyUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "sslcontext-kickstart/src/test/java/nl/altindag/ssl/util/KeyStoreUtilsShould.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADODcGqFc5qKCxS2gAoY2QwM2YwZTVkZTFjMjA2Nzg0ZDU0NzNjY2Q5NWQzMjBjOTQ0Y2VhMA",
                "url": "https://github.com/Hakky54/sslcontext-kickstart/pull/473/commits/cd03f0e5de1c206784d5473ccd95d320c944cea0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 444,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/444",
                "title": "Loading the keystore takes a very long time in some rare cases",
                "bodyHTML": "<p dir=\"auto\">Hi, this is more a behavior report than a bug, but it could be valuable to share.</p>\n<p dir=\"auto\"><strong>Describe the bug</strong></p>\n<p dir=\"auto\">When loading a keystore, it may get stuck on some rare occasions. It can get stuck for 1, 2, 5, 10 minutes, or indefinitely, as reported by the user.</p>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<p dir=\"auto\">The only reported issue was found on Windows 10. Whenever the user tried to initialize our HTTP client, it got stuck. We retrieved the following stack trace from this user's thread dump:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\tat platform/jdk.crypto.mscapi@17.0.9/sun.security.mscapi.CKeyStore.loadKeysOrCertificateChains(Native Method)\n\tat platform/jdk.crypto.mscapi@17.0.9/sun.security.mscapi.CKeyStore.engineLoad(CKeyStore.java:734)\n\tat platform/jdk.crypto.mscapi@17.0.9/sun.security.mscapi.CKeyStore$MY.engineLoad(CKeyStore.java:60)\n\tat java.base@17.0.9/java.security.KeyStore.load(KeyStore.java:1473)\n\tat nl.altindag.ssl.util.KeyStoreUtils.createKeyStore(KeyStoreUtils.java:150)\n\tat nl.altindag.ssl.util.KeyStoreUtils.createKeyStoreIfAvailable(KeyStoreUtils.java:260)\n\tat nl.altindag.ssl.util.KeyStoreUtils.lambda$loadSystemKeyStores$1(KeyStoreUtils.java:233)\n\tat nl.altindag.ssl.util.KeyStoreUtils$$Lambda$1986/0x0000000801397048.apply(Unknown Source)\n\tat java.base@17.0.9/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base@17.0.9/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base@17.0.9/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base@17.0.9/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base@17.0.9/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base@17.0.9/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base@17.0.9/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base@17.0.9/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat nl.altindag.ssl.util.KeyStoreUtils.loadSystemKeyStores(KeyStoreUtils.java:236)\n\tat nl.altindag.ssl.util.TrustManagerUtils.createTrustManagerWithSystemTrustedCertificates(TrustManagerUtils.java:89)\n\tat nl.altindag.ssl.SSLFactory$Builder.withSystemTrustMaterial(SSLFactory.java:209)\"><pre class=\"notranslate\"><code class=\"notranslate\">\tat platform/jdk.crypto.mscapi@17.0.9/sun.security.mscapi.CKeyStore.loadKeysOrCertificateChains(Native Method)\n\tat platform/jdk.crypto.mscapi@17.0.9/sun.security.mscapi.CKeyStore.engineLoad(CKeyStore.java:734)\n\tat platform/jdk.crypto.mscapi@17.0.9/sun.security.mscapi.CKeyStore$MY.engineLoad(CKeyStore.java:60)\n\tat java.base@17.0.9/java.security.KeyStore.load(KeyStore.java:1473)\n\tat nl.altindag.ssl.util.KeyStoreUtils.createKeyStore(KeyStoreUtils.java:150)\n\tat nl.altindag.ssl.util.KeyStoreUtils.createKeyStoreIfAvailable(KeyStoreUtils.java:260)\n\tat nl.altindag.ssl.util.KeyStoreUtils.lambda$loadSystemKeyStores$1(KeyStoreUtils.java:233)\n\tat nl.altindag.ssl.util.KeyStoreUtils$$Lambda$1986/0x0000000801397048.apply(Unknown Source)\n\tat java.base@17.0.9/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\n\tat java.base@17.0.9/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\n\tat java.base@17.0.9/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\n\tat java.base@17.0.9/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base@17.0.9/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base@17.0.9/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base@17.0.9/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base@17.0.9/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat nl.altindag.ssl.util.KeyStoreUtils.loadSystemKeyStores(KeyStoreUtils.java:236)\n\tat nl.altindag.ssl.util.TrustManagerUtils.createTrustManagerWithSystemTrustedCertificates(TrustManagerUtils.java:89)\n\tat nl.altindag.ssl.SSLFactory$Builder.withSystemTrustMaterial(SSLFactory.java:209)\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected behavior</strong></p>\n<p dir=\"auto\">We would expect the loading of the keystore to take a short time.</p>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java 17</li>\n<li>Windows 10</li>\n<li>Issue happens when using SonarLint (in which we embed the sslcontext-kickstart library) at the IDE startups (when the HTTP client is initialized)</li>\n</ul>\n<p dir=\"auto\"><strong>Additional context</strong></p>\n<p dir=\"auto\">The issue was fixed by itself, but the user does not know why. Apparently, nothing was changed.</p>\n<p dir=\"auto\">We saw this JDK <a href=\"https://bugs.openjdk.org/browse/JDK-8313367\" rel=\"nofollow\">bug</a> report mentioning that, on Windows, it may ask for specific privilege to read the certificates, in which case it could explain the issue the user had. Perhaps it is asking for credentials to read the certificate, and the user might have missed it, or it wasn't proposed at all. So far, this is our only guess.</p>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/444",
                "createdAt": "2024-01-16T08:38:24Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "no-activity"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 467,
                "url": "https://github.com/Hakky54/sslcontext-kickstart/issues/467",
                "title": "Loading of System-Certificates takes long or forever when USB-Token Software is installed.",
                "bodyHTML": "<p dir=\"auto\">We have an Issue Starting the SonarLint Eclipse Plugin after installing Software to support code signing via USB-Token.<br>\nThe problem can be reproduced by using your library in a main-method.<br>\n(the SonarLint-Plugin uses your library internally)</p>\n<p dir=\"auto\">While reading system certificates the application hangs forever.</p>\n<p dir=\"auto\">Uninstalling this software solves the problem.<br>\nWe use SafeNet Authentication Client (<a href=\"https://cpl.thalesgroup.com/de/access-management/security-applications/authentication-client-token-management\" rel=\"nofollow\">link</a>)</p>\n<p dir=\"auto\"><strong>To Reproduce</strong></p>\n<ol dir=\"auto\">\n<li>Install the SafeNet Authentication Client</li>\n<li>run the following code (in a project with your library as dependency)</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\tpublic static void main(String... args) {\n\t\tSSLFactory.builder()\n        .withDefaultTrustMaterial()\n        .withSystemTrustMaterial()\n        .build();\n\t}\"><pre class=\"notranslate\"><code class=\"notranslate\">\tpublic static void main(String... args) {\n\t\tSSLFactory.builder()\n        .withDefaultTrustMaterial()\n        .withSystemTrustMaterial()\n        .build();\n\t}\n</code></pre></div>\n<p dir=\"auto\">execution hangs forever.</p>\n<p dir=\"auto\">Since i don't need to sing locally i will remove this application for now.</p>\n<p dir=\"auto\"><strong>Expected behavior</strong><br>\nexecution of that code to take a second or so</p>\n<p dir=\"auto\"><strong>Environmental Data:</strong></p>\n<ul dir=\"auto\">\n<li>Java Version 8 and 17</li>\n<li>OS Windows 10</li>\n</ul>\n<p dir=\"auto\"><strong>Stack-Trace</strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&quot;main&quot; #1 prio=5 os_prio=0 tid=0x000001b648bfc000 nid=0x46e4 runnable [0x0000007ce84fe000]\n   java.lang.Thread.State: RUNNABLE\n        at sun.security.mscapi.CKeyStore.loadKeysOrCertificateChains(Native Method)\n        at sun.security.mscapi.CKeyStore.engineLoad(CKeyStore.java:711)\n        at sun.security.mscapi.CKeyStore$MY.engineLoad(CKeyStore.java:57)\n        at java.security.KeyStore.load(KeyStore.java:1445)\n        at nl.altindag.ssl.util.KeyStoreUtils.createKeyStore(KeyStoreUtils.java:150)\n        at nl.altindag.ssl.util.KeyStoreUtils.createKeyStoreIfAvailable(KeyStoreUtils.java:260)\n        at nl.altindag.ssl.util.KeyStoreUtils.lambda$loadSystemKeyStores$1(KeyStoreUtils.java:233)\n        at nl.altindag.ssl.util.KeyStoreUtils$$Lambda$18/1638172114.apply(Unknown Source)\n        at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n        at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n        at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\n        at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\n        at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n        at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\"><pre class=\"notranslate\"><code class=\"notranslate\">\"main\" #1 prio=5 os_prio=0 tid=0x000001b648bfc000 nid=0x46e4 runnable [0x0000007ce84fe000]\n   java.lang.Thread.State: RUNNABLE\n        at sun.security.mscapi.CKeyStore.loadKeysOrCertificateChains(Native Method)\n        at sun.security.mscapi.CKeyStore.engineLoad(CKeyStore.java:711)\n        at sun.security.mscapi.CKeyStore$MY.engineLoad(CKeyStore.java:57)\n        at java.security.KeyStore.load(KeyStore.java:1445)\n        at nl.altindag.ssl.util.KeyStoreUtils.createKeyStore(KeyStoreUtils.java:150)\n        at nl.altindag.ssl.util.KeyStoreUtils.createKeyStoreIfAvailable(KeyStoreUtils.java:260)\n        at nl.altindag.ssl.util.KeyStoreUtils.lambda$loadSystemKeyStores$1(KeyStoreUtils.java:233)\n        at nl.altindag.ssl.util.KeyStoreUtils$$Lambda$18/1638172114.apply(Unknown Source)\n        at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\n        at java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:948)\n        at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)\n        at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)\n        at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n        at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\n</code></pre></div>",
                "resourcePath": "/Hakky54/sslcontext-kickstart/issues/467",
                "createdAt": "2024-03-15T08:52:33Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  }
]