[
  {
    "repository": {
      "pullRequest": {
        "title": "MOE Sync 2020-10-01",
        "url": "https://github.com/google/guava/pull/5256",
        "resourcePath": "/google/guava/pull/5256",
        "createdAt": "2020-10-01T14:33:55Z",
        "number": 5256,
        "mergeCommit": {
          "oid": "52882ad975d2a55bb624143f02387515b3b01f46",
          "message": "Mark BigDecimalMathTest as fully @GwtIncompatible.\n\nCurrently it has every member annotated as @GwtIncompatible. This works fine internally, but the external GWT tests (which we run only at release time) complain about the resulting empty BigDecimalMathTest_gwt:\nhttps://github.com/google/guava/blob/master/guava-gwt/test/com/google/common/math/BigDecimalMathTest_gwt.java\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=334778309",
          "commitUrl": "https://github.com/google/guava/commit/52882ad975d2a55bb624143f02387515b3b01f46",
          "parents": {
            "nodes": [
              {
                "oid": "0cb89dd110ce88770207889901e95ea2ac896932",
                "message": "Fully remove GWT-RPC support externally.\n\nReally, really closes https://github.com/google/guava/issues/3680.\n\nPossible future work:\n- Be consistent about whether we put @GwtCompatible on the remaining internal CustomFieldSerializer classes. (For those files, it probably acts only as documentation (of something that is pretty obvious :)). Our open-source build used to take action when it saw `@GwtCompatible(emulated=true)`, but (a) it doesn't anymore, (b) those files don't exist externally anymore, and (c) they weren't `emulated=true` :) I believe that our internal build requires @GwtCompatible on most files in our GWT target, but I think there's an exception for GWT-target-only sources.)\n- Remove some of the GwtSerializationDependencies classes. However, some of these classe are set up as *supertypes* of our prod classes, so this would require some surgery. Keeping them is harmless: It doesn't actually make the classes GWT-serializable.\n- Remove the usages of serializable=true on @GwtCompatible, at least externally but maybe just entirely.\n\nRELNOTES=[Guava types can no longer be sent over GWT-RPC.](https://groups.google.com/d/msg/guava-announce/zHZTFg7YF3o/rQNnwdHeEwAJ) Even the earlier, temporary way to reenable support (`guava.gwt.emergency_reenable_rpc`) no longer has an effect.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=334598649"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "DELETED",
                "path": "guava-gwt/src/com/google/common/collect/SingletonImmutableSet_CustomFieldSerializer.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "guava-gwt/src/com/google/common/collect/SingletonImmutableTable_CustomFieldSerializer.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "guava-gwt/src/com/google/common/collect/SparseImmutableTable_CustomFieldSerializer.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "guava-gwt/src/com/google/common/collect/Table_CustomFieldSerializerBase.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "guava-gwt/src/com/google/common/collect/TreeBasedTable_CustomFieldSerializer.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "guava-gwt/src/com/google/common/collect/TreeMultimap_CustomFieldSerializer.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "guava-gwt/src/com/google/common/collect/UsingToStringOrdering_CustomFieldSerializer.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "guava-gwt/src/com/google/common/primitives/UnsignedLong_CustomFieldSerializer.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "guava-gwt/test/com/google/common/math/BigDecimalMathTest_gwt.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/math/BigDecimalMathTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDk2MzA5NTM3OjBmOWVlNThkOGNhYThhMTJhYzc3ZmUwMWUwOTdlMzkzODYxNTdkMmM=",
                "url": "https://github.com/google/guava/pull/5256/commits/0f9ee58d8caa8a12ac77fe01e097e39386157d2c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3680,
                "url": "https://github.com/google/guava/issues/3680",
                "title": "Remove GWT-RPC support",
                "bodyHTML": "<p dir=\"auto\">In January, <a href=\"https://groups.google.com/d/topic/guava-announce/zHZTFg7YF3o/discussion\" rel=\"nofollow\">we announced that we'd remove it</a> at the beginning of 2020. We've already laid some groundwork for that.</p>\n<p dir=\"auto\">I'm filing this issue as an additional way of raising awareness. I'll try to also mention it from relevant CLs.</p>",
                "resourcePath": "/google/guava/issues/3680",
                "createdAt": "2019-11-05T15:18:45Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "platform=gwt"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "#3679 - Removed all references to now useless workaround",
        "url": "https://github.com/google/guava/pull/5259",
        "resourcePath": "/google/guava/pull/5259",
        "createdAt": "2020-10-02T21:54:49Z",
        "number": 5259,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Iterables.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Lists.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Queues.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Sets.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Collections2.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/FluentIterable.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Iterables.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Lists.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Queues.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Sets.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDk3MTUyMDE2OjdhMzA0NWIzNDZhM2Y0YzI2YjdjMTdmNDNjYWE0MGEzODM3YTg4ZjA=",
                "url": "https://github.com/google/guava/pull/5259/commits/7a3045b346a3f4c26b7c17f43caa40a3837a88f0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3679,
                "url": "https://github.com/google/guava/issues/3679",
                "title": "Various cast() methods that work around JDK-6558557 are no longer necessary",
                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/49f5a6332a63737dff70cf77472f9867bc7ca6eb/guava/src/com/google/common/collect/Collections2.java#L355-L358\">guava/guava/src/com/google/common/collect/Collections2.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 355 to 358\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/guava/commit/49f5a6332a63737dff70cf77472f9867bc7ca6eb\">49f5a63</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L355\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"355\"></td>\n          <td id=\"LC355\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">/** Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557 */</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L356\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"356\"></td>\n          <td id=\"LC356\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">static</span> &lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-en\">cast</span>(<span class=\"pl-smi\">Iterable</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-s1\">iterable</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L357\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"357\"></td>\n          <td id=\"LC357\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> (<span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt;) <span class=\"pl-s1\">iterable</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L358\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"358\"></td>\n          <td id=\"LC358\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">It's probably not worth the effort to refactor all the callers of this method, but I just wanted to bring to your attention that <a href=\"https://bugs.java.com/bugdatabase/view_bug.do?bug_id=6558557\" rel=\"nofollow\">JDK-6558557</a> was fixed in Java 1.7, so if that's the only reason for that method to exist, it's no longer necessary.</p>\n<p dir=\"auto\">That's all \ud83d\ude42</p>",
                "resourcePath": "/google/guava/issues/3679",
                "createdAt": "2019-11-04T03:09:47Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "#3679 - Removed all references to now useless workaround",
        "url": "https://github.com/google/guava/pull/5260",
        "resourcePath": "/google/guava/pull/5260",
        "createdAt": "2020-10-02T22:09:27Z",
        "number": 5260,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Iterables.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Lists.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Queues.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Sets.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Collections2.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/FluentIterable.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Iterables.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Lists.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Queues.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Sets.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDk3MTU2MzMxOmM5MWY2MjNmNTg1YmE5OWEyZmI1Njg1ZDNmNmZhOTQwYmJkYzhhZGU=",
                "url": "https://github.com/google/guava/pull/5260/commits/c91f623f585ba99a2fb5685d3f6fa940bbdc8ade"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3679,
                "url": "https://github.com/google/guava/issues/3679",
                "title": "Various cast() methods that work around JDK-6558557 are no longer necessary",
                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/49f5a6332a63737dff70cf77472f9867bc7ca6eb/guava/src/com/google/common/collect/Collections2.java#L355-L358\">guava/guava/src/com/google/common/collect/Collections2.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 355 to 358\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/guava/commit/49f5a6332a63737dff70cf77472f9867bc7ca6eb\">49f5a63</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L355\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"355\"></td>\n          <td id=\"LC355\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">/** Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557 */</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L356\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"356\"></td>\n          <td id=\"LC356\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">static</span> &lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-en\">cast</span>(<span class=\"pl-smi\">Iterable</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-s1\">iterable</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L357\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"357\"></td>\n          <td id=\"LC357\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> (<span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt;) <span class=\"pl-s1\">iterable</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L358\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"358\"></td>\n          <td id=\"LC358\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">It's probably not worth the effort to refactor all the callers of this method, but I just wanted to bring to your attention that <a href=\"https://bugs.java.com/bugdatabase/view_bug.do?bug_id=6558557\" rel=\"nofollow\">JDK-6558557</a> was fixed in Java 1.7, so if that's the only reason for that method to exist, it's no longer necessary.</p>\n<p dir=\"auto\">That's all \ud83d\ude42</p>",
                "resourcePath": "/google/guava/issues/3679",
                "createdAt": "2019-11-04T03:09:47Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Clarified HashMultimap javadoc about concurrency",
        "url": "https://github.com/google/guava/pull/5261",
        "resourcePath": "/google/guava/pull/5261",
        "createdAt": "2020-10-02T22:34:20Z",
        "number": 5261,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/HashMultimap.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/HashMultimap.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDk3MTYyOTk5OjQ3ZjgwMWU5Njc5NGYwN2VhOWFiYjI3YzhjNDQ0OWFlMDY4NzZlMzE=",
                "url": "https://github.com/google/guava/pull/5261/commits/47f801e96794f07ea9abb27c8c4449ae06876e31"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3682,
                "url": "https://github.com/google/guava/issues/3682",
                "title": "MultiMap concurrency unclear Javadoc",
                "bodyHTML": "<p dir=\"auto\">From <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"47418372\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/135\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/135/hovercard?comment_id=472966705&amp;comment_type=issue_comment\" href=\"https://github.com/google/guava/issues/135#issuecomment-472966705\">#135 (comment)</a></p>\n<p dir=\"auto\">The <a href=\"https://google.github.io/guava/releases/27.0-jre/api/docs/com/google/common/collect/HashMultimap.html\" rel=\"nofollow\">javadoc for HashMultimap</a>  states:</p>\n<blockquote>\n<p dir=\"auto\">This class is not threadsafe when any concurrent operations update the multimap. Concurrent read operations will work correctly.</p>\n</blockquote>\n<p dir=\"auto\">Does this mean that it is thread-safe if only one thread writes to the map (while any number of threads may read simultaniously) ? The javadoc for <a href=\"https://google.github.io/guava/releases/27.0-jre/api/docs/com/google/common/collect/ArrayListMultimap.html\" rel=\"nofollow\">other MultiMap implementations</a> is the same and i think it should be clearer on that.</p>",
                "resourcePath": "/google/guava/issues/3682",
                "createdAt": "2019-11-06T06:08:59Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "type=api-docs"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "MOE Sync 2020-10-06",
        "url": "https://github.com/google/guava/pull/5264",
        "resourcePath": "/google/guava/pull/5264",
        "createdAt": "2020-10-06T16:08:42Z",
        "number": 5264,
        "mergeCommit": {
          "oid": "392f6bf278d6baa907f3d737bb5a216f94ff0794",
          "message": "Move gwt-user dep to test scope.\n\nWe no longer need it as a prod dependency (not even `provided`) after removing GWT-RPC support.\n\n(Followup after https://github.com/google/guava/issues/3680)\n\nFixes https://github.com/google/truth/issues/637, if GitHub will let me get away with closing a Truth issue with a Guava commit :)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=335644672",
          "commitUrl": "https://github.com/google/guava/commit/392f6bf278d6baa907f3d737bb5a216f94ff0794",
          "parents": {
            "nodes": [
              {
                "oid": "e8a8330bbf6805007038f9e407560f96e7fd3d69",
                "message": "Remove a couple GwtSerializationDependencies classes from open-source Guava after all.\n\nAs noted in 0cb89dd110ce88770207889901e95ea2ac896932, this isn't necessary. As *also* noted there, we have *additional* FooGwtSerializationDependencies classes that I'm leaving in place because they are *supertypes* of the prod classes and thus harder to remove.\n\nBut I'm removing these 2 because it saves me a few lines in the Copybara config :)\n\n(Followup after https://github.com/google/guava/issues/3680)\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=335047921"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-gwt/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDk4NjY5NjI3OjZhNjI4NWQxZTEyYjhkMmM2MmI4Yjc1MmQ2ZWUxYTQ0ZjQ4ZDBkYWM=",
                "url": "https://github.com/google/guava/pull/5264/commits/6a6285d1e12b8d2c62b8b752d6ee1a44f48d0dac"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 637,
                "url": "https://github.com/google/truth/issues/637",
                "title": "Remove unnecessary dependency to gwt-user",
                "bodyHTML": "<p dir=\"auto\">Our static dependency analysis tool detected an error <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"510910246\" data-permission-text=\"Title is private\" data-url=\"https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/980\" data-hovercard-type=\"issue\" data-hovercard-url=\"/GoogleCloudPlatform/cloud-opensource-java/issues/980/hovercard\" href=\"https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/980\">GoogleCloudPlatform/cloud-opensource-java#980</a> on gwt-user used by <code class=\"notranslate\"> com.google.truth:truth:1.0</code>.</p>\n<p dir=\"auto\">Discussed with <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/netdpb/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/netdpb\">@netdpb</a> , it seems that Truth declares unnecessary dependency:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    &lt;!-- Required only to build the -gwt sub-artifact. --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.google.gwt&lt;/groupId&gt;\n      &lt;artifactId&gt;gwt-user&lt;/artifactId&gt;\n      &lt;scope&gt;provided&lt;/scope&gt;\n    &lt;/dependency&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">    &lt;!-- Required only to build the -gwt sub-artifact. --&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.google.gwt&lt;/groupId&gt;\n      &lt;artifactId&gt;gwt-user&lt;/artifactId&gt;\n      &lt;scope&gt;provided&lt;/scope&gt;\n    &lt;/dependency&gt;\n</code></pre></div>\n<p dir=\"auto\">There's no \"-gwt sub-artifact\" found under com.google.truth: <a href=\"https://search.maven.org/search?q=g:com.google.truth\" rel=\"nofollow\">https://search.maven.org/search?q=g:com.google.truth</a> .</p>\n<p dir=\"auto\">Would you remove the dependency if not needed?</p>",
                "resourcePath": "/google/truth/issues/637",
                "createdAt": "2019-10-22T21:14:17Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Removed all references to now useless workaround",
        "url": "https://github.com/google/guava/pull/5265",
        "resourcePath": "/google/guava/pull/5265",
        "createdAt": "2020-10-07T19:17:36Z",
        "number": 5265,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Iterables.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Lists.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Queues.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Sets.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Collections2.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/FluentIterable.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Iterables.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Lists.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Queues.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Sets.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDk5NDYzMjQwOjczMmNmZDY0ZjdmOGFhNDJlMjlkNzhhYmIwM2RmYjJmZTk4NGRmZGU=",
                "url": "https://github.com/google/guava/pull/5265/commits/732cfd64f7f8aa42e29d78abb03dfb2fe984dfde"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3679,
                "url": "https://github.com/google/guava/issues/3679",
                "title": "Various cast() methods that work around JDK-6558557 are no longer necessary",
                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/49f5a6332a63737dff70cf77472f9867bc7ca6eb/guava/src/com/google/common/collect/Collections2.java#L355-L358\">guava/guava/src/com/google/common/collect/Collections2.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 355 to 358\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/guava/commit/49f5a6332a63737dff70cf77472f9867bc7ca6eb\">49f5a63</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L355\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"355\"></td>\n          <td id=\"LC355\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">/** Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557 */</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L356\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"356\"></td>\n          <td id=\"LC356\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">static</span> &lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-en\">cast</span>(<span class=\"pl-smi\">Iterable</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-s1\">iterable</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L357\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"357\"></td>\n          <td id=\"LC357\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> (<span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt;) <span class=\"pl-s1\">iterable</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L358\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"358\"></td>\n          <td id=\"LC358\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">It's probably not worth the effort to refactor all the callers of this method, but I just wanted to bring to your attention that <a href=\"https://bugs.java.com/bugdatabase/view_bug.do?bug_id=6558557\" rel=\"nofollow\">JDK-6558557</a> was fixed in Java 1.7, so if that's the only reason for that method to exist, it's no longer necessary.</p>\n<p dir=\"auto\">That's all \ud83d\ude42</p>",
                "resourcePath": "/google/guava/issues/3679",
                "createdAt": "2019-11-04T03:09:47Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Clarified HashMultimap javadoc about concurrency",
        "url": "https://github.com/google/guava/pull/5266",
        "resourcePath": "/google/guava/pull/5266",
        "createdAt": "2020-10-07T19:21:14Z",
        "number": 5266,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/HashMultimap.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/HashMultimap.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDk5NDY1MTM2Ojk3NTc3ZDIzN2U2OTNkMDFlNjExNWExMThlNjJiMTBkN2M4NDkwNTY=",
                "url": "https://github.com/google/guava/pull/5266/commits/97577d237e693d01e6115a118e62b10d7c849056"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3682,
                "url": "https://github.com/google/guava/issues/3682",
                "title": "MultiMap concurrency unclear Javadoc",
                "bodyHTML": "<p dir=\"auto\">From <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"47418372\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/135\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/135/hovercard?comment_id=472966705&amp;comment_type=issue_comment\" href=\"https://github.com/google/guava/issues/135#issuecomment-472966705\">#135 (comment)</a></p>\n<p dir=\"auto\">The <a href=\"https://google.github.io/guava/releases/27.0-jre/api/docs/com/google/common/collect/HashMultimap.html\" rel=\"nofollow\">javadoc for HashMultimap</a>  states:</p>\n<blockquote>\n<p dir=\"auto\">This class is not threadsafe when any concurrent operations update the multimap. Concurrent read operations will work correctly.</p>\n</blockquote>\n<p dir=\"auto\">Does this mean that it is thread-safe if only one thread writes to the map (while any number of threads may read simultaniously) ? The javadoc for <a href=\"https://google.github.io/guava/releases/27.0-jre/api/docs/com/google/common/collect/ArrayListMultimap.html\" rel=\"nofollow\">other MultiMap implementations</a> is the same and i think it should be clearer on that.</p>",
                "resourcePath": "/google/guava/issues/3682",
                "createdAt": "2019-11-06T06:08:59Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "type=api-docs"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "MOE Sync 2020-10-09",
        "url": "https://github.com/google/guava/pull/5268",
        "resourcePath": "/google/guava/pull/5268",
        "createdAt": "2020-10-09T13:30:14Z",
        "number": 5268,
        "mergeCommit": {
          "oid": "be1c0d8a4fd00e6c5cc362cc0021db5e9e3d4fef",
          "message": "Removed all references to now useless workaround\n\nFixes #3679\nFixes #5265\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=336161257",
          "commitUrl": "https://github.com/google/guava/commit/be1c0d8a4fd00e6c5cc362cc0021db5e9e3d4fef",
          "parents": {
            "nodes": [
              {
                "oid": "62ea9014fcd19711dd235a3036650518f91fe017",
                "message": "Clarify `HashMultimap` docs about concurrency.\n\nCloses #5266.\nFixes #3682.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=336158810"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Lists.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Queues.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Sets.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Collections2.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/FluentIterable.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/HashMultimap.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Iterables.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Lists.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Queues.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Sets.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTAwNTkxMjE5OjI2ZGEwOTQ5YzFjZjU0ZWI3MzA1NzhlNzVmZTA4N2Y2NzExMGVlNzE=",
                "url": "https://github.com/google/guava/pull/5268/commits/26da0949c1cf54eb730578e75fe087f67110ee71"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3679,
                "url": "https://github.com/google/guava/issues/3679",
                "title": "Various cast() methods that work around JDK-6558557 are no longer necessary",
                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/49f5a6332a63737dff70cf77472f9867bc7ca6eb/guava/src/com/google/common/collect/Collections2.java#L355-L358\">guava/guava/src/com/google/common/collect/Collections2.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 355 to 358\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/guava/commit/49f5a6332a63737dff70cf77472f9867bc7ca6eb\">49f5a63</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L355\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"355\"></td>\n          <td id=\"LC355\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">/** Used to avoid http://bugs.sun.com/view_bug.do?bug_id=6558557 */</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L356\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"356\"></td>\n          <td id=\"LC356\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">static</span> &lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-en\">cast</span>(<span class=\"pl-smi\">Iterable</span>&lt;<span class=\"pl-smi\">T</span>&gt; <span class=\"pl-s1\">iterable</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L357\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"357\"></td>\n          <td id=\"LC357\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">return</span> (<span class=\"pl-smi\">Collection</span>&lt;<span class=\"pl-smi\">T</span>&gt;) <span class=\"pl-s1\">iterable</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L358\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"358\"></td>\n          <td id=\"LC358\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">It's probably not worth the effort to refactor all the callers of this method, but I just wanted to bring to your attention that <a href=\"https://bugs.java.com/bugdatabase/view_bug.do?bug_id=6558557\" rel=\"nofollow\">JDK-6558557</a> was fixed in Java 1.7, so if that's the only reason for that method to exist, it's no longer necessary.</p>\n<p dir=\"auto\">That's all \ud83d\ude42</p>",
                "resourcePath": "/google/guava/issues/3679",
                "createdAt": "2019-11-04T03:09:47Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 3682,
                "url": "https://github.com/google/guava/issues/3682",
                "title": "MultiMap concurrency unclear Javadoc",
                "bodyHTML": "<p dir=\"auto\">From <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"47418372\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/135\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/135/hovercard?comment_id=472966705&amp;comment_type=issue_comment\" href=\"https://github.com/google/guava/issues/135#issuecomment-472966705\">#135 (comment)</a></p>\n<p dir=\"auto\">The <a href=\"https://google.github.io/guava/releases/27.0-jre/api/docs/com/google/common/collect/HashMultimap.html\" rel=\"nofollow\">javadoc for HashMultimap</a>  states:</p>\n<blockquote>\n<p dir=\"auto\">This class is not threadsafe when any concurrent operations update the multimap. Concurrent read operations will work correctly.</p>\n</blockquote>\n<p dir=\"auto\">Does this mean that it is thread-safe if only one thread writes to the map (while any number of threads may read simultaniously) ? The javadoc for <a href=\"https://google.github.io/guava/releases/27.0-jre/api/docs/com/google/common/collect/ArrayListMultimap.html\" rel=\"nofollow\">other MultiMap implementations</a> is the same and i think it should be clearer on that.</p>",
                "resourcePath": "/google/guava/issues/3682",
                "createdAt": "2019-11-06T06:08:59Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "type=api-docs"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "#3951 - Joiner implements Collector",
        "url": "https://github.com/google/guava/pull/5287",
        "resourcePath": "/google/guava/pull/5287",
        "createdAt": "2020-10-17T23:29:43Z",
        "number": 5287,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/base/JoinerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/base/Joiner.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTA1MzYxOTgxOjdiNWNlMDU4OTI4OGQzODFjMDAyMGYxMTM0NTUwZDJlNTEwYmJhZDQ=",
                "url": "https://github.com/google/guava/pull/5287/commits/7b5ce0589288d381c0020f1134550d2e510bbad4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3951,
                "url": "https://github.com/google/guava/issues/3951",
                "title": "Provide Joiner as Collector",
                "bodyHTML": "<p dir=\"auto\">The main advantage of Guava <code class=\"notranslate\">Joiner</code> over JDKs <code class=\"notranslate\">Collectors.joining(...)</code> or <code class=\"notranslate\">StringJoiner</code> that it can handle arbitrary objects and has a convenient builder api to express e.g. <code class=\"notranslate\">.useForNull(nullText)</code>.</p>\n<p dir=\"auto\">Thus allow the usage of Joiner when streams come into play and get rid of cumbersome expressions like <code class=\"notranslate\">.filter(Objects::nonNull).map(Object::toString)</code>.</p>\n<p dir=\"auto\">E.g. with factory method <em>joiningOn(...)</em>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"objectStream.collect(joiningOn(&quot;, &quot;).skipNulls());\nobjectStream.collect(joiningOn(&quot;, &quot;).useForNull(&quot;&lt;N/A&gt;&quot;));\"><pre class=\"notranslate\"><code class=\"notranslate\">objectStream.collect(joiningOn(\", \").skipNulls());\nobjectStream.collect(joiningOn(\", \").useForNull(\"&lt;N/A&gt;\"));\n</code></pre></div>\n<p dir=\"auto\">Alternatively <code class=\"notranslate\">Joiner</code> could implement Collector interface.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"objectStream.collect(Joiner.on(&quot;, &quot;).skipNulls());\nobjectStream.collect(Joiner.on(&quot;, &quot;).useForNull(&quot;&lt;N/A&gt;&quot;));\"><pre class=\"notranslate\"><code class=\"notranslate\">objectStream.collect(Joiner.on(\", \").skipNulls());\nobjectStream.collect(Joiner.on(\", \").useForNull(\"&lt;N/A&gt;\"));\n</code></pre></div>",
                "resourcePath": "/google/guava/issues/3951",
                "createdAt": "2020-07-03T07:46:32Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=addition"
                      }
                    },
                    {
                      "node": {
                        "name": "package=base"
                      }
                    },
                    {
                      "node": {
                        "name": "platform=java8"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "#5284 - Fixed different result when closing encoding stream twice",
        "url": "https://github.com/google/guava/pull/5288",
        "resourcePath": "/google/guava/pull/5288",
        "createdAt": "2020-10-17T23:52:30Z",
        "number": 5288,
        "mergeCommit": null,
        "potentialMergeCommit": {
          "oid": "ddc121492f6361cae4d4d5fa6ecc28207d6b26bf",
          "message": "Merge fbba72eb6e4a4e1f6def245b48112ffcb5b34975 into 8f212ba60a83c5c9a85f08a4fc049bad2abd91e2",
          "commitUrl": "https://github.com/google/guava/commit/ddc121492f6361cae4d4d5fa6ecc28207d6b26bf",
          "parents": {
            "nodes": [
              {
                "oid": "8f212ba60a83c5c9a85f08a4fc049bad2abd91e2",
                "message": "Add missing `@since` tag for `merge` in `TreeRangeMap` and `ImmutableRangeMap`.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 630655296"
              },
              {
                "oid": "fbba72eb6e4a4e1f6def245b48112ffcb5b34975",
                "message": "#5284 - PR feedback"
              }
            ]
          }
        },
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/io/BaseEncodingTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/io/BaseEncoding.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/io/BaseEncodingTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/io/BaseEncoding.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTA1MzYzOTg5OmZiYmE3MmViNmU0YTRlMWY2ZGVmMjQ1YjQ4MTEyZmZjYjViMzQ5NzU=",
                "url": "https://github.com/google/guava/pull/5288/commits/fbba72eb6e4a4e1f6def245b48112ffcb5b34975"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5284,
                "url": "https://github.com/google/guava/issues/5284",
                "title": "BaseEncoding.encodingStream().close() is non-idempotent",
                "bodyHTML": "<p dir=\"auto\"><a href=\"https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/io/Closeable.html#close()\" rel=\"nofollow\"><code class=\"notranslate\">Closeable.close</code></a> says:</p>\n<blockquote>\n<p dir=\"auto\">If the stream is already closed then invoking this method has no effect.</p>\n</blockquote>\n<p dir=\"auto\">Code:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"StringWriter w = new StringWriter();\nOutputStream out = BaseEncoding.base64().encodingStream(w);\nout.write(0);\nout.close();\nSystem.out.println(w);\nout.close();\nSystem.out.println(w);\"><pre class=\"notranslate\"><code class=\"notranslate\">StringWriter w = new StringWriter();\nOutputStream out = BaseEncoding.base64().encodingStream(w);\nout.write(0);\nout.close();\nSystem.out.println(w);\nout.close();\nSystem.out.println(w);\n</code></pre></div>\n<p dir=\"auto\">Output:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"AA==\nAA==A===\"><pre class=\"notranslate\"><code class=\"notranslate\">AA==\nAA==A===\n</code></pre></div>",
                "resourcePath": "/google/guava/issues/5284",
                "createdAt": "2020-10-16T13:53:01Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=io"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix compatibility between the cache compute methods and a load",
        "url": "https://github.com/google/guava/pull/5348",
        "resourcePath": "/google/guava/pull/5348",
        "createdAt": "2020-12-05T06:56:29Z",
        "number": 5348,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/cache/LocalCacheMapComputeTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/cache/LocalCache.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTMyOTM0ODQwOmVkMWU4ZTQyZTVlODIxM2U2MDMwODE1NTkzNWM0M2I2ZjlkYjNhZjQ=",
                "url": "https://github.com/google/guava/pull/5348/commits/ed1e8e42e5e8213e60308155935c43b6f9db3af4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2827,
                "url": "https://github.com/google/guava/issues/2827",
                "title": "Cache load + compute methods are incompatible",
                "bodyHTML": "<p dir=\"auto\">A <code class=\"notranslate\">Map.compute</code> may return <code class=\"notranslate\">null</code> to indicate the entry should be removed if present. The <code class=\"notranslate\">valueReference</code> is stored within the cache, allowing a subsequent <code class=\"notranslate\">LoadingCache.get</code> to wait on it. This results in <code class=\"notranslate\">LocalCache.waitForLoadingValue</code> to throw an <code class=\"notranslate\">InvalidCacheLoadException</code> with the message <code class=\"notranslate\">CacheLoader returned null for key</code>. Since the cache loader was not invoked, this message is incorrect and means the two methods cannot be used together, concurrently.</p>\n<p dir=\"auto\">The user expectation would be that the load proceeds by retrying the load if <code class=\"notranslate\">null</code> from a computation (but fails if from a cache loader). That may require using a sentinel value.</p>\n<p dir=\"auto\">You can checkout this <a href=\"https://github.com/ben-manes/caffeine/commit/764df3aac6aacb78a4fc5a2134f911fd60dfa9f9\">commit</a> and run <code class=\"notranslate\">MultiThreadedTest</code> using <code class=\"notranslate\">./gradlew slowGuavaTest</code>.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Expected: is an empty collection\n     but: &lt;[Failed: key 15 on operation com.github.benmanes.caffeine.cache.MultiThreadedTest$$Lambda$3/841283083@91eee99\ncom.google.common.cache.CacheLoader$InvalidCacheLoadException: CacheLoader returned null for key 15.\n\tat com.google.common.cache.LocalCache$Segment.waitForLoadingValue(LocalCache.java:2321)\n\tat com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2206)\n\tat com.google.common.cache.LocalCache.get(LocalCache.java:4147)\n\tat com.google.common.cache.LocalCache.getAll(LocalCache.java:4210)\n\tat com.google.common.cache.LocalCache$LocalLoadingCache.getAll(LocalCache.java:5154)\n\tat com.github.benmanes.caffeine.cache.testing.GuavaCacheFromContext$GuavaLoadingCache.getAll(GuavaCacheFromContext.java:422)\n\tat com.github.benmanes.caffeine.cache.MultiThreadedTest.lambda$1(MultiThreadedTest.java:101)\n\tat com.github.benmanes.caffeine.testing.Threads$Thrasher.run(Threads.java:149)\"><pre class=\"notranslate\"><span class=\"pl-s1\">Expected</span>: <span class=\"pl-smi\">is</span> <span class=\"pl-s1\">an</span> <span class=\"pl-smi\">empty</span> <span class=\"pl-s1\">collection</span>\n     <span class=\"pl-s1\">but</span>: &lt;[<span class=\"pl-s1\">Failed</span>: <span class=\"pl-smi\">key</span> <span class=\"pl-c1\">15</span> <span class=\"pl-s1\">on</span> <span class=\"pl-s1\">operation</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">MultiThreadedTest$$Lambda$3</span>/<span class=\"pl-c1\">841283083</span><span class=\"pl-c1\">@</span><span class=\"pl-c1\">91</span><span class=\"pl-c1\">eee99</span>\n<span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">CacheLoader$InvalidCacheLoadException</span>: <span class=\"pl-s1\">CacheLoader</span> <span class=\"pl-smi\">returned</span> <span class=\"pl-s1\">null</span> <span class=\"pl-s1\">for</span> <span class=\"pl-s1\">key</span> <span class=\"pl-c1\">15.</span>\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache$Segment</span>.<span class=\"pl-en\">waitForLoadingValue</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">2321</span>)\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache$Segment</span>.<span class=\"pl-s1\">get</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">2206</span>)\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">4147</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache</span>.<span class=\"pl-en\">getAll</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">4210</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache$LocalLoadingCache</span>.<span class=\"pl-en\">getAll</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">5154</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">GuavaCacheFromContext$GuavaLoadingCache</span>.<span class=\"pl-en\">getAll</span>(<span class=\"pl-smi\">GuavaCacheFromContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">422</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">MultiThreadedTest</span>.<span class=\"pl-en\">lambda$1</span>(<span class=\"pl-smi\">MultiThreadedTest</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">101</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">Threads$Thrasher</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">Threads</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">149</span>)</pre></div>",
                "resourcePath": "/google/guava/issues/2827",
                "createdAt": "2017-05-24T21:30:43Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=cache"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 5342,
                "url": "https://github.com/google/guava/issues/5342",
                "title": "Cache.asMap() interface makes it possible to map NULL values into the cache",
                "bodyHTML": "<p dir=\"auto\">Through the <code class=\"notranslate\">asMap()</code> interface it is possible in certain situations to partially map NULL values into the <code class=\"notranslate\">Cache</code> which results in an unpredictable state. When using <code class=\"notranslate\">ConcurrentMap.compute</code> and <code class=\"notranslate\">ConcurrentMap.computeIfPresent</code> it possible to remap a previous value to null rather than removing it, which I think would be the expected behaviour here.</p>\n<p dir=\"auto\">Attached <a href=\"https://github.com/google/guava/files/5636058/CacheNullValueTest.java.zip\">CacheNullValueTest.java.zip</a> contains test cases that reproduces this problem, tested on 30.0-jre</p>",
                "resourcePath": "/google/guava/issues/5342",
                "createdAt": "2020-12-03T12:38:49Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=cache"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "#3945 - Fixed parent.relativePath issue in guava-bom",
        "url": "https://github.com/google/guava/pull/5349",
        "resourcePath": "/google/guava/pull/5349",
        "createdAt": "2020-12-05T19:19:26Z",
        "number": 5349,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-bom/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTMzMDc5NzAzOjM4MzMwY2I1Y2NjYjcxN2U3NTNjZGJjZjJmYmZjY2QxMGQ5OTRiZWY=",
                "url": "https://github.com/google/guava/pull/5349/commits/38330cb5cccb717e753cdbcf2fbfccd10d994bef"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3945,
                "url": "https://github.com/google/guava/issues/3945",
                "title": "parent.relativePath'  points at com.google.guava:guava-parent instead of org.sonatype.oss:oss-parent",
                "bodyHTML": "<p dir=\"auto\">[WARNING]<br>\n[WARNING] Some problems were encountered while building the effective model for com.google.guava:guava-bom:pom:HEAD-jre-SNAPSHOT<br>\n[WARNING] 'parent.relativePath' of POM com.google.guava:guava-bom:HEAD-jre-SNAPSHOT (/home/elharo/guava/guava-bom/pom.xml) points at com.google.guava:guava-parent instead of org.sonatype.oss:oss-parent, please verify your project structure @ line 14, column 11<br>\n[WARNING]<br>\n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.<br>\n[WARNING]<br>\n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.<br>\n[WARNING]</p>",
                "resourcePath": "/google/guava/issues/3945",
                "createdAt": "2020-06-29T13:04:18Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "MOE Sync 2020-12-10",
        "url": "https://github.com/google/guava/pull/5352",
        "resourcePath": "/google/guava/pull/5352",
        "createdAt": "2020-12-10T15:21:40Z",
        "number": 5352,
        "mergeCommit": {
          "oid": "fbbec2bf00619d88b83e4a5a3fd007765c08a172",
          "message": "Fix `relativePath` warning for guava-bom.\n\nFixes #3945.\nCloses #5349.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=346096869",
          "commitUrl": "https://github.com/google/guava/commit/fbbec2bf00619d88b83e4a5a3fd007765c08a172",
          "parents": {
            "nodes": [
              {
                "oid": "7e01b017e1dff7c0005748d7139c8d96a5d69206",
                "message": "First step in cleaning up PSL handling. Next stage will be to change the template to store the trie string as a separate static constant, so that I can write a unit test that verifies that.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=345716528"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-bom/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/thirdparty/publicsuffix/PublicSuffixType.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-bom/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/thirdparty/publicsuffix/PublicSuffixType.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTM2MDE0MDE2OmFhODBlMjM2YzYyNTFiN2E4ZmU1MjlhYmMzZDEwZTI2OTU5NGJhZjI=",
                "url": "https://github.com/google/guava/pull/5352/commits/aa80e236c6251b7a8fe529abc3d10e269594baf2"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3945,
                "url": "https://github.com/google/guava/issues/3945",
                "title": "parent.relativePath'  points at com.google.guava:guava-parent instead of org.sonatype.oss:oss-parent",
                "bodyHTML": "<p dir=\"auto\">[WARNING]<br>\n[WARNING] Some problems were encountered while building the effective model for com.google.guava:guava-bom:pom:HEAD-jre-SNAPSHOT<br>\n[WARNING] 'parent.relativePath' of POM com.google.guava:guava-bom:HEAD-jre-SNAPSHOT (/home/elharo/guava/guava-bom/pom.xml) points at com.google.guava:guava-parent instead of org.sonatype.oss:oss-parent, please verify your project structure @ line 14, column 11<br>\n[WARNING]<br>\n[WARNING] It is highly recommended to fix these problems because they threaten the stability of your build.<br>\n[WARNING]<br>\n[WARNING] For this reason, future Maven versions might no longer support building such malformed projects.<br>\n[WARNING]</p>",
                "resourcePath": "/google/guava/issues/3945",
                "createdAt": "2020-06-29T13:04:18Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Adds HttpStatus API",
        "url": "https://github.com/google/guava/pull/5359",
        "resourcePath": "/google/guava/pull/5359",
        "createdAt": "2020-12-16T19:37:56Z",
        "number": 5359,
        "mergeCommit": null,
        "potentialMergeCommit": {
          "oid": "25bb549a68283fe434dcb986ed2e9ddf2c291fbf",
          "message": "Merge 13583ecc3287e67154423fca352585c6c7355359 into 8f212ba60a83c5c9a85f08a4fc049bad2abd91e2",
          "commitUrl": "https://github.com/google/guava/commit/25bb549a68283fe434dcb986ed2e9ddf2c291fbf",
          "parents": {
            "nodes": [
              {
                "oid": "8f212ba60a83c5c9a85f08a4fc049bad2abd91e2",
                "message": "Add missing `@since` tag for `merge` in `TreeRangeMap` and `ImmutableRangeMap`.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 630655296"
              },
              {
                "oid": "13583ecc3287e67154423fca352585c6c7355359",
                "message": "Adds HttpStatus API"
              }
            ]
          }
        },
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "android/guava-tests/test/com/google/common/net/HttpStatusTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "android/guava/src/com/google/common/net/HttpStatus.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "guava-tests/test/com/google/common/net/HttpStatusTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "guava/src/com/google/common/net/HttpStatus.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTQxMzk0NjMzOjEzNTgzZWNjMzI4N2U2NzE1NDQyM2ZjYTM1MjU4NWM2YzczNTUzNTk=",
                "url": "https://github.com/google/guava/pull/5359/commits/13583ecc3287e67154423fca352585c6c7355359"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 927,
                "url": "https://github.com/google/guava/issues/927",
                "title": "Add HTTP status codes",
                "bodyHTML": "<p dir=\"auto\"><em><a href=\"https://code.google.com/p/guava-libraries/issues/detail?id=927\" rel=\"nofollow\">Original issue</a> created by <strong>electrum</strong> on 2012-03-09 at 07:58 PM</em></p>\n<hr>\n<p dir=\"auto\">The new HttpHeaders and MediaType classes are great!  Can we get a similar HttpStatusCodes class?  The JAX-RS Response.Status class could be a good starting point.</p>",
                "resourcePath": "/google/guava/issues/927",
                "createdAt": "2014-10-31T17:29:04Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=net"
                      }
                    },
                    {
                      "node": {
                        "name": "type=addition"
                      }
                    },
                    {
                      "node": {
                        "name": "status=research"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix assertion for `FilesTest.testCopyIdenticalFiles()`.",
        "url": "https://github.com/google/guava/pull/5386",
        "resourcePath": "/google/guava/pull/5386",
        "createdAt": "2021-01-19T17:43:27Z",
        "number": 5386,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/io/FilesTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/io/FilesTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTU3NjAwMjE1OjIwZmVhZmY5MmUyMTYyZWI5MGM0ODM1OTEwZDBkMDE0YzZlOWE4NjI=",
                "url": "https://github.com/google/guava/pull/5386/commits/20feaff92e2162eb90c4835910d0d014c6e9a862"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5381,
                "url": "https://github.com/google/guava/issues/5381",
                "title": "Small improvement in Files test (FilesTest.testCopyIdenticalFiles)",
                "bodyHTML": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">In the following test</p>\n<p dir=\"auto\"><a href=\"https://github.com/google/guava/blob/master/guava-tests/test/com/google/common/io/FilesTest.java#L192\">https://github.com/google/guava/blob/master/guava-tests/test/com/google/common/io/FilesTest.java#L192</a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public void testCopyIdenticalFiles() throws IOException {\n    File temp1 = createTempFile();\n    Files.write(ASCII, temp1, Charsets.UTF_8);\n    File temp2 = createTempFile();\n    Files.write(ASCII, temp2, Charsets.UTF_8);\n    Files.copy(temp1, temp2);\n    assertEquals(ASCII, Files.toString(temp1, Charsets.UTF_8));\n  }\"><pre class=\"notranslate\"><code class=\"notranslate\">public void testCopyIdenticalFiles() throws IOException {\n    File temp1 = createTempFile();\n    Files.write(ASCII, temp1, Charsets.UTF_8);\n    File temp2 = createTempFile();\n    Files.write(ASCII, temp2, Charsets.UTF_8);\n    Files.copy(temp1, temp2);\n    assertEquals(ASCII, Files.toString(temp1, Charsets.UTF_8));\n  }\n</code></pre></div>\n<p dir=\"auto\">Wouldn't it be better to use <code class=\"notranslate\">temp2</code> in the final assert:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    assertEquals(ASCII, Files.toString(temp1, Charsets.UTF_8));\"><pre class=\"notranslate\"><code class=\"notranslate\">    assertEquals(ASCII, Files.toString(temp1, Charsets.UTF_8));\n</code></pre></div>\n<p dir=\"auto\">=&gt;</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    assertEquals(ASCII, Files.toString(temp2, Charsets.UTF_8));\"><pre class=\"notranslate\"><code class=\"notranslate\">    assertEquals(ASCII, Files.toString(temp2, Charsets.UTF_8));\n</code></pre></div>\n<p dir=\"auto\">Thanks,</p>",
                "resourcePath": "/google/guava/issues/5381",
                "createdAt": "2021-01-16T11:10:13Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "status=fixed"
                      }
                    },
                    {
                      "node": {
                        "name": "package=io"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix compatibility between the cache compute methods and a load.",
        "url": "https://github.com/google/guava/pull/5406",
        "resourcePath": "/google/guava/pull/5406",
        "createdAt": "2021-02-12T15:47:18Z",
        "number": 5406,
        "mergeCommit": {
          "oid": "42bf4f4eb7d299d635838296e322ec7e1e77a440",
          "message": "Fix compatibility between the cache compute methods and a load.\n\nFixes #5348\nFixes #5342\nFixes #2827\nResolves underlying cause of #2108\n\nRELNOTES=Fix compatibility between the cache compute methods and a load.\nPiperOrigin-RevId: 357192480",
          "commitUrl": "https://github.com/google/guava/commit/42bf4f4eb7d299d635838296e322ec7e1e77a440",
          "parents": {
            "nodes": [
              {
                "oid": "7c566b5f6d4f5eb5f780152e80ba69e0ea4f9036",
                "message": "Assign or use the result of a primitive wrapper method invocation (it will soon be an ERROR to ignore it).\n\nRELNOTES=N/A\nPiperOrigin-RevId: 356761994"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2827,
                "url": "https://github.com/google/guava/issues/2827",
                "title": "Cache load + compute methods are incompatible",
                "bodyHTML": "<p dir=\"auto\">A <code class=\"notranslate\">Map.compute</code> may return <code class=\"notranslate\">null</code> to indicate the entry should be removed if present. The <code class=\"notranslate\">valueReference</code> is stored within the cache, allowing a subsequent <code class=\"notranslate\">LoadingCache.get</code> to wait on it. This results in <code class=\"notranslate\">LocalCache.waitForLoadingValue</code> to throw an <code class=\"notranslate\">InvalidCacheLoadException</code> with the message <code class=\"notranslate\">CacheLoader returned null for key</code>. Since the cache loader was not invoked, this message is incorrect and means the two methods cannot be used together, concurrently.</p>\n<p dir=\"auto\">The user expectation would be that the load proceeds by retrying the load if <code class=\"notranslate\">null</code> from a computation (but fails if from a cache loader). That may require using a sentinel value.</p>\n<p dir=\"auto\">You can checkout this <a href=\"https://github.com/ben-manes/caffeine/commit/764df3aac6aacb78a4fc5a2134f911fd60dfa9f9\">commit</a> and run <code class=\"notranslate\">MultiThreadedTest</code> using <code class=\"notranslate\">./gradlew slowGuavaTest</code>.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Expected: is an empty collection\n     but: &lt;[Failed: key 15 on operation com.github.benmanes.caffeine.cache.MultiThreadedTest$$Lambda$3/841283083@91eee99\ncom.google.common.cache.CacheLoader$InvalidCacheLoadException: CacheLoader returned null for key 15.\n\tat com.google.common.cache.LocalCache$Segment.waitForLoadingValue(LocalCache.java:2321)\n\tat com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2206)\n\tat com.google.common.cache.LocalCache.get(LocalCache.java:4147)\n\tat com.google.common.cache.LocalCache.getAll(LocalCache.java:4210)\n\tat com.google.common.cache.LocalCache$LocalLoadingCache.getAll(LocalCache.java:5154)\n\tat com.github.benmanes.caffeine.cache.testing.GuavaCacheFromContext$GuavaLoadingCache.getAll(GuavaCacheFromContext.java:422)\n\tat com.github.benmanes.caffeine.cache.MultiThreadedTest.lambda$1(MultiThreadedTest.java:101)\n\tat com.github.benmanes.caffeine.testing.Threads$Thrasher.run(Threads.java:149)\"><pre class=\"notranslate\"><span class=\"pl-s1\">Expected</span>: <span class=\"pl-smi\">is</span> <span class=\"pl-s1\">an</span> <span class=\"pl-smi\">empty</span> <span class=\"pl-s1\">collection</span>\n     <span class=\"pl-s1\">but</span>: &lt;[<span class=\"pl-s1\">Failed</span>: <span class=\"pl-smi\">key</span> <span class=\"pl-c1\">15</span> <span class=\"pl-s1\">on</span> <span class=\"pl-s1\">operation</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">MultiThreadedTest$$Lambda$3</span>/<span class=\"pl-c1\">841283083</span><span class=\"pl-c1\">@</span><span class=\"pl-c1\">91</span><span class=\"pl-c1\">eee99</span>\n<span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">CacheLoader$InvalidCacheLoadException</span>: <span class=\"pl-s1\">CacheLoader</span> <span class=\"pl-smi\">returned</span> <span class=\"pl-s1\">null</span> <span class=\"pl-s1\">for</span> <span class=\"pl-s1\">key</span> <span class=\"pl-c1\">15.</span>\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache$Segment</span>.<span class=\"pl-en\">waitForLoadingValue</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">2321</span>)\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache$Segment</span>.<span class=\"pl-s1\">get</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">2206</span>)\n\t<span class=\"pl-smi\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">4147</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache</span>.<span class=\"pl-en\">getAll</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">4210</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">LocalCache$LocalLoadingCache</span>.<span class=\"pl-en\">getAll</span>(<span class=\"pl-smi\">LocalCache</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">5154</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">GuavaCacheFromContext$GuavaLoadingCache</span>.<span class=\"pl-en\">getAll</span>(<span class=\"pl-smi\">GuavaCacheFromContext</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">422</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">cache</span>.<span class=\"pl-s1\">MultiThreadedTest</span>.<span class=\"pl-en\">lambda$1</span>(<span class=\"pl-smi\">MultiThreadedTest</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">101</span>)\n\t<span class=\"pl-s1\">at</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">github</span>.<span class=\"pl-s1\">benmanes</span>.<span class=\"pl-s1\">caffeine</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">Threads$Thrasher</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">Threads</span>.<span class=\"pl-smi\">java</span>:<span class=\"pl-c1\">149</span>)</pre></div>",
                "resourcePath": "/google/guava/issues/2827",
                "createdAt": "2017-05-24T21:30:43Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=cache"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 5342,
                "url": "https://github.com/google/guava/issues/5342",
                "title": "Cache.asMap() interface makes it possible to map NULL values into the cache",
                "bodyHTML": "<p dir=\"auto\">Through the <code class=\"notranslate\">asMap()</code> interface it is possible in certain situations to partially map NULL values into the <code class=\"notranslate\">Cache</code> which results in an unpredictable state. When using <code class=\"notranslate\">ConcurrentMap.compute</code> and <code class=\"notranslate\">ConcurrentMap.computeIfPresent</code> it possible to remap a previous value to null rather than removing it, which I think would be the expected behaviour here.</p>\n<p dir=\"auto\">Attached <a href=\"https://github.com/google/guava/files/5636058/CacheNullValueTest.java.zip\">CacheNullValueTest.java.zip</a> contains test cases that reproduces this problem, tested on 30.0-jre</p>",
                "resourcePath": "/google/guava/issues/5342",
                "createdAt": "2020-12-03T12:38:49Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=cache"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Set `-source 8 -target 8` in the open-source build, and remove Java8Usage.",
        "url": "https://github.com/google/guava/pull/5444",
        "resourcePath": "/google/guava/pull/5444",
        "createdAt": "2021-03-23T18:45:02Z",
        "number": 5444,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "android/guava/src/com/google/common/base/Java8Usage.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/base/Preconditions.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "guava/src/com/google/common/base/Java8Usage.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/base/Preconditions.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTk5MDk3MTcyOmQ3MDU4YTQ1OWU1MGIxYWYxMDIwMjAyYjg0NmY5ZmJmMjdlN2JlYjU=",
                "url": "https://github.com/google/guava/pull/5444/commits/d7058a459e50b1af1020202b846f9fbf27e7beb5"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5269,
                "url": "https://github.com/google/guava/issues/5269",
                "title": "Build Android flavor with `-source 8 -target 8` (but still avoid Java 7+ APIs)",
                "bodyHTML": "<p dir=\"auto\">Currently, our \"Android\" flavor of Guava supports 2 use cases:</p>\n<ul dir=\"auto\">\n<li>Android users (API level 15 (Ice Cream Sandwich) and up)</li>\n<li>Java 7 users</li>\n</ul>\n<p dir=\"auto\">We are definitely <em>not</em> going to start using Java 8 <em>APIs</em>. Thus, we are <em>not</em> going to increase our minimum Android version to 24, nor are we going to require our users to enable <a href=\"https://developer.android.com/studio/write/java8-support-table\" rel=\"nofollow\">library desugaring</a>. In short: We'll continue to support older versions of Android with no changes on users' part.</p>\n<p dir=\"auto\">However, we <em>are</em> investigating whether to stop supporting <em>non</em>-Android users who use Java 7. This would let us simplify some implementations (mainly by using lambdas), but more importantly, it would let us make some API improvements -- like <code class=\"notranslate\">default</code> methods on interfaces and type annotations (such as for nullness).</p>\n<p dir=\"auto\">This is part of a larger effort by many Google projects to consider dropping support for Java 7. Please let us know if you anticipate problems from this change -- mainly, if you are using Guava in your library or app and you support Java 7. Thanks.</p>\n<p dir=\"auto\">(Please also spread the word. I will additionally <a href=\"https://groups.google.com/g/guava-announce/c/EIMDZF4dIdY\" rel=\"nofollow\">announce this on our mailing list</a>. Later, we may also try to introduce some warnings when Guava is run under Java 7.)</p>",
                "resourcePath": "/google/guava/issues/5269",
                "createdAt": "2020-10-09T14:21:18Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "platform=java8"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Mark `Abstract*.delegate` methods in `graph` as package-private.",
        "url": "https://github.com/google/guava/pull/5452",
        "resourcePath": "/google/guava/pull/5452",
        "createdAt": "2021-03-29T17:12:02Z",
        "number": 5452,
        "mergeCommit": {
          "oid": "98d35bc16ff8efd5404d8f8b493ba4bca0f59b63",
          "message": "Mark `Abstract*.delegate` methods in `graph` as package-private.\n\nThe method was exposing the package-private `BaseGraph` type through the public type `ImmutableGraph`.\n\n(But it was exposing it only as `protected`, and no one could subclass `ImmutableGraph` outside the package. So this should be mostly academic.)\n\nFixes https://github.com/google/guava/issues/5450\n\nRELNOTES=n/a\nPiperOrigin-RevId: 365607207",
          "commitUrl": "https://github.com/google/guava/commit/98d35bc16ff8efd5404d8f8b493ba4bca0f59b63",
          "parents": {
            "nodes": [
              {
                "oid": "018796b79b314b5b7790c9320c1a7c89140af76d",
                "message": "Update Public Suffix data.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 364934301"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/graph/ForwardingValueGraph.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/graph/Graphs.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/graph/ImmutableGraph.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/graph/StandardMutableGraph.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/graph/ForwardingGraph.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/graph/ForwardingNetwork.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/graph/ForwardingValueGraph.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/graph/Graphs.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/graph/ImmutableGraph.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/graph/StandardMutableGraph.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjAyOTQ2NzExOjk4ZDM1YmMxNmZmOGVmZDU0MDRkOGY4YjQ5M2JhNGJjYTBmNTliNjM=",
                "url": "https://github.com/google/guava/pull/5452/commits/98d35bc16ff8efd5404d8f8b493ba4bca0f59b63"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5450,
                "url": "https://github.com/google/guava/issues/5450",
                "title": "ImmutableGraph.delegate() exposes package-private BaseGraph",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">com.google.common.graph.ImmutableGraph</code> inherits and overrides the method <code class=\"notranslate\">delegate()</code> which returns the package-private type <code class=\"notranslate\">BaseGraph</code>:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/018796b79b314b5b7790c9320c1a7c89140af76d/guava/src/com/google/common/graph/ImmutableGraph.java#L103\">guava/guava/src/com/google/common/graph/ImmutableGraph.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 103\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/guava/commit/018796b79b314b5b7790c9320c1a7c89140af76d\">018796b</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L103\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"103\"></td>\n          <td id=\"LC103\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">protected</span> <span class=\"pl-smi\">BaseGraph</span>&lt;<span class=\"pl-smi\">N</span>&gt; <span class=\"pl-en\">delegate</span>() { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">It looks like the method is only used within the same package, so this could be fixed by making both <code class=\"notranslate\">ForwardingGraph.delegate()</code> and <code class=\"notranslate\">ImmutableGraph.delegate()</code> package-private.</p>",
                "resourcePath": "/google/guava/issues/5450",
                "createdAt": "2021-03-29T16:01:54Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "package=graph"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix a rounding bug in `UnsignedLong.doubleValue()` and `.floatValue()`.",
        "url": "https://github.com/google/guava/pull/5490",
        "resourcePath": "/google/guava/pull/5490",
        "createdAt": "2021-04-14T00:32:46Z",
        "number": 5490,
        "mergeCommit": {
          "oid": "e61cf2e8d76eb4f7b6bb457cb0e964667de773a7",
          "message": "Fix a rounding bug in `UnsignedLong.doubleValue()` and `.floatValue()`.\n\nSee the bug report for a detailed analysis.\n\nFixes https://github.com/google/guava/issues/5375. Thanks to @harpocrates (Alex Theriault) for the bug report and suggested fix.\n\nRELNOTES=Fixed a rounding bug in `UnsignedLong.doubleValue()`.\nPiperOrigin-RevId: 368332108",
          "commitUrl": "https://github.com/google/guava/commit/e61cf2e8d76eb4f7b6bb457cb0e964667de773a7",
          "parents": {
            "nodes": [
              {
                "oid": "1054847679c75c0688369ec93c9d845affa7a762",
                "message": "Fix comment in Converter.\n\nConverter.apply is annotated as returning null, so it's sound. The LegacyConverter problem arises only if users view the converter as a Function<A, B>, since Function<A, B>.apply is *not* annotated as returning null (and yet a LegacyConverter may do so, even given a non-null input).\n\nRELNOTES=n/a\nPiperOrigin-RevId: 368219982"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5375,
                "url": "https://github.com/google/guava/issues/5375",
                "title": "UnsignedLong to double conversion does not always round correctly",
                "bodyHTML": "<p dir=\"auto\">The <code class=\"notranslate\">UnsignedLong.doubleValue</code> method claims to convert <code class=\"notranslate\">long</code> to <code class=\"notranslate\">double</code> with correct rounding. Assuming \"correct rounding\" means produces the <code class=\"notranslate\">double</code> whose real value is the closest to the real value of the <code class=\"notranslate\">long</code>, here is a counter example:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"double guavaDouble = UnsignedLong.fromLongBits(0xfffffffffffff402L).doubleValue();\nSystem.out.println(&quot;Original:      &quot; + java.lang.Long.toUnsignedString(0xfffffffffffff402L));\nSystem.out.println(&quot;Guava double:  &quot; + new java.math.BigDecimal(guavaDouble));\nSystem.out.println(&quot;Closer double: &quot; + new java.math.BigDecimal(18446744073709549568d));\"><pre class=\"notranslate\"><span class=\"pl-smi\">double</span> <span class=\"pl-s1\">guavaDouble</span> = <span class=\"pl-smi\">UnsignedLong</span>.<span class=\"pl-en\">fromLongBits</span>(<span class=\"pl-c1\">0xfffffffffffff402L</span>).<span class=\"pl-en\">doubleValue</span>();\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"Original:      \"</span> + <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">lang</span>.<span class=\"pl-s1\">Long</span>.<span class=\"pl-en\">toUnsignedString</span>(<span class=\"pl-c1\">0xfffffffffffff402L</span>));\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"Guava double:  \"</span> + <span class=\"pl-k\">new</span> <span class=\"pl-smi\">java</span>.<span class=\"pl-smi\">math</span>.<span class=\"pl-smi\">BigDecimal</span>(<span class=\"pl-s1\">guavaDouble</span>));\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"Closer double: \"</span> + <span class=\"pl-k\">new</span> <span class=\"pl-smi\">java</span>.<span class=\"pl-smi\">math</span>.<span class=\"pl-smi\">BigDecimal</span>(<span class=\"pl-c1\">18446744073709549568d</span>));</pre></div>\n<p dir=\"auto\">This outputs</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Original:      18446744073709548546\nGuava double:  18446744073709547520\nCloser double: 18446744073709549568\"><pre class=\"notranslate\"><code class=\"notranslate\">Original:      18446744073709548546\nGuava double:  18446744073709547520\nCloser double: 18446744073709549568\n</code></pre></div>\n<p dir=\"auto\">The double that Guava produces is 26 away from the original value, but there was a closer double only 22 away from the original value. (There are no closer values - <code class=\"notranslate\">18446744073709547520</code> and <code class=\"notranslate\">18446744073709549568</code> are successive doubles: <code class=\"notranslate\">Math.nextAfter(18446744073709547520d, java.lang.Double.MAX_VALUE) == 18446744073709549568d</code>)</p>\n<hr>\n<p dir=\"auto\">Assuming this isn't desired behaviour, <code class=\"notranslate\">UnsignedLong.doubleValue</code> could be fixed by using the following implementation (<a href=\"https://github.com/WebAssembly/spec/blob/5475b7015684a07ba69762f8438e3bcff2647686/interpreter/exec/f64_convert.ml#L27-L32\">based on the reference WebAssembly interpreter's implementation of the <code class=\"notranslate\">f64.convert_i64_u</code> instruction</a>). Here, the rounding is to the nearest double, with ties going to even.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Override\npublic double doubleValue() {\n  if (value &gt;= 0) {\n    @SuppressWarnings(&quot;cast&quot;)\n    return (double) value;\n  } else {\n    @SuppressWarnings(&quot;cast&quot;)\n    return (double) ((value &gt;&gt;&gt; 1) | (value &amp; 1L)) * 2.0;\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-smi\">double</span> <span class=\"pl-s1\">doubleValue</span>() {\n  <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">value</span> &gt;= <span class=\"pl-c1\">0</span>) {\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">SuppressWarnings</span>(<span class=\"pl-s\">\"cast\"</span>)\n    <span class=\"pl-smi\">return</span> (<span class=\"pl-smi\">double</span>) <span class=\"pl-s1\">value</span>;\n  } <span class=\"pl-k\">else</span> {\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">SuppressWarnings</span>(<span class=\"pl-s\">\"cast\"</span>)\n    <span class=\"pl-smi\">return</span> (<span class=\"pl-smi\">double</span>) ((<span class=\"pl-s1\">value</span> &gt;&gt;&gt; <span class=\"pl-c1\">1</span>) | (<span class=\"pl-s1\">value</span> &amp; <span class=\"pl-c1\">1L</span>)) * <span class=\"pl-c1\">2.0</span>;\n  }\n}</pre></div>",
                "resourcePath": "/google/guava/issues/5375",
                "createdAt": "2020-12-31T17:29:14Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=primitives"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove `@Beta` from `EventBus` and related classes.",
        "url": "https://github.com/google/guava/pull/5515",
        "resourcePath": "/google/guava/pull/5515",
        "createdAt": "2021-04-19T20:12:10Z",
        "number": 5515,
        "mergeCommit": {
          "oid": "781ac8a447256fe0185ffdecd0fc993bbf84889f",
          "message": "Remove `@Beta` from `EventBus` and related classes.\n\nNote that we're primarily removing this because we do not intend to make further changes to the package, and we're discouraging its use. (See https://github.com/google/guava/commit/82a3ecf42cf63f2ea4db5c605d80c4478d8877ae.) We're not going to actually `@Deprecate` it, though, because that would be unnecessarily disruptive especially given that migrating to another solution is not necessarily straightforward.\n\nFixes https://github.com/google/guava/issues/3360.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 369293158",
          "commitUrl": "https://github.com/google/guava/commit/781ac8a447256fe0185ffdecd0fc993bbf84889f",
          "parents": {
            "nodes": [
              {
                "oid": "48b72fca2af117c3282e185407e2484f75aba2b2",
                "message": "Fix exception message in `CacheBuilderSpec`.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 369289369"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3360,
                "url": "https://github.com/google/guava/issues/3360",
                "title": "Remove @Beta from EventBus",
                "bodyHTML": "<p dir=\"auto\">EventBus has been marked as Beta for 8 years already (since Jul 25, 2011).</p>",
                "resourcePath": "/google/guava/issues/3360",
                "createdAt": "2019-01-07T12:57:16Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status=fixed"
                      }
                    },
                    {
                      "node": {
                        "name": "package=eventbus"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Clarify what \"different equivalence relations\" means.",
        "url": "https://github.com/google/guava/pull/5517",
        "resourcePath": "/google/guava/pull/5517",
        "createdAt": "2021-04-19T21:13:39Z",
        "number": 5517,
        "mergeCommit": {
          "oid": "12a3d4fd4a36f02daad88e057f7b153a3c083982",
          "message": "Clarify what \"different equivalence relations\" means.\n\nFixes https://github.com/google/guava/issues/3808.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 369303576",
          "commitUrl": "https://github.com/google/guava/commit/12a3d4fd4a36f02daad88e057f7b153a3c083982",
          "parents": {
            "nodes": [
              {
                "oid": "6f764671680d56b264dee6ab32e18420b6465398",
                "message": "Fix typo.\n\nhttps://github.com/google/guava/pull/5502#discussion_r616031995\n\nRELNOTES=n/a\nPiperOrigin-RevId: 369302184"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3808,
                "url": "https://github.com/google/guava/issues/3808",
                "title": "Some methods' description of behavior for different equivalence relations is unclear",
                "bodyHTML": "<p dir=\"auto\">Some methods dealing with Sets declare that their results are undefined when passing Sets that are based on different equivalence relations, and give HashSet as an example. Unless I'm missing something, I believe that HashSet is not an example of this and should be removed from the examples (TreeSet and the keySet of IdentityHashMap are, however, examples of Sets using different equivalence relations.)</p>\n<p dir=\"auto\">An example from Sets.java:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/87a383e06a30c89e1e07689c2ea7a005a1379743/guava/src/com/google/common/collect/Sets.java#L721-L723\">guava/guava/src/com/google/common/collect/Sets.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 721 to 723\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/guava/commit/87a383e06a30c89e1e07689c2ea7a005a1379743\">87a383e</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L721\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"721\"></td>\n          <td id=\"LC721\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">   * &lt;p&gt;Results are undefined if {@code set1} and {@code set2} are sets based on different</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L722\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"722\"></td>\n          <td id=\"LC722\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">   * equivalence relations (as {@link HashSet}, {@link TreeSet}, and the {@link Map#keySet} of an</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L723\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"723\"></td>\n          <td id=\"LC723\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">   * {@code IdentityHashMap} all are).</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>",
                "resourcePath": "/google/guava/issues/3808",
                "createdAt": "2020-02-25T22:39:17Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "type=api-docs"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Delete the `FileBackedOutputStream` temp file if writing to it fails.",
        "url": "https://github.com/google/guava/pull/5519",
        "resourcePath": "/google/guava/pull/5519",
        "createdAt": "2021-04-20T13:29:06Z",
        "number": 5519,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/io/FileBackedOutputStream.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/io/FileBackedOutputStream.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjE5MzI3MDc1OjRlOTQwYTI1MDFmNTIyNzQ3NjA2MmRlZDBkMjgzODE0MjJkYzU4YzQ=",
                "url": "https://github.com/google/guava/pull/5519/commits/4e940a2501f5227476062ded0d28381422dc58c4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1664,
                "url": "https://github.com/google/guava/issues/1664",
                "title": "com.google.common.io.FileBackedOutputStream.update resource leak",
                "bodyHTML": "<p dir=\"auto\"><em><a href=\"https://code.google.com/p/guava-libraries/issues/detail?id=1664\" rel=\"nofollow\">Original issue</a> created by <strong>cherio</strong> on 2014-02-11 at 03:19 AM</em></p>\n<hr>\n<p dir=\"auto\">FileBackedOutputStream.update(int) method creates a temporary file. When resetOnFinalize=false then the next line is trying to create FileOutputStream. In case it fails (e.g. disk is full, or for some other reason) the file will remain in the file system as litter. This is a resource leak.</p>\n<p dir=\"auto\">Temporary file management in this case should be a subject for try{...}catch{...}.</p>\n<p dir=\"auto\">It may also be a good idea to try and delete the file (if not null) in close().</p>",
                "resourcePath": "/google/guava/issues/1664",
                "createdAt": "2014-10-31T17:54:48Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=io"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make `MoreFiles.deleteRecursively()` throw `NoSuchFileException` when the `path` argument itself doesn't exist.",
        "url": "https://github.com/google/guava/pull/5521",
        "resourcePath": "/google/guava/pull/5521",
        "createdAt": "2021-04-20T19:57:27Z",
        "number": 5521,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/io/MoreFilesTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/io/MoreFiles.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjE5NjM4OTI4OmIxYTg2Nzk3ZTEwZDE4YTU5YWQyYTZhM2ZiMjA5MDBkMmViYjk2ZmQ=",
                "url": "https://github.com/google/guava/pull/5521/commits/b1a86797e10d18a59ad2a6a3fb20900d2ebb96fd"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3203,
                "url": "https://github.com/google/guava/issues/3203",
                "title": "MoreFiles.deleteRecursively() doesn't throw NoSuchFileException if the given path doesn't exist",
                "bodyHTML": "<p dir=\"auto\">Instead, it throws a <code class=\"notranslate\">FileSystemException</code> with a <code class=\"notranslate\">NoSuchFileException</code> suppressed, making it impossible to distinguish \"the root path doesn't exist\" from \"impossible to delete one of the children of the root path\". That would be the way to implement \"deleteRecursivelyIfExists\" kind of operation, atomic with regard to the root existence:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"try {\n  MoreFiles.deleteRecursively(path);\n} catch (NoSuchFileException e) {\n  // ignore\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">try</span> {\n  <span class=\"pl-smi\">MoreFiles</span>.<span class=\"pl-en\">deleteRecursively</span>(<span class=\"pl-s1\">path</span>);\n} <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">NoSuchFileException</span> <span class=\"pl-s1\">e</span>) {\n  <span class=\"pl-c\">// ignore</span>\n}</pre></div>\n<p dir=\"auto\">BTW, it's not obvious what does <em>(optional specific exception)</em> construction mean in Javadocs, and I didn't find the definition or elaboration of this construction.</p>",
                "resourcePath": "/google/guava/issues/3203",
                "createdAt": "2018-07-13T13:59:22Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "package=io"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Update pom.xml CI info.",
        "url": "https://github.com/google/guava/pull/5564",
        "resourcePath": "/google/guava/pull/5564",
        "createdAt": "2021-05-18T16:32:31Z",
        "number": 5564,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjQ2OTE0MjM1OjczNzhmN2RlNDI1NDE4NDEzMmFmMDdlNGM1OGIwMjZjYWNiNjVjZjI=",
                "url": "https://github.com/google/guava/pull/5564/commits/7378f7de4254184132af07e4c58b026cacb65cf2"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5558,
                "url": "https://github.com/google/guava/issues/5558",
                "title": "`pom.xml` should refer to GitHub Actions rather than Travis CI",
                "bodyHTML": "<p dir=\"auto\">Currently in file <code class=\"notranslate\">pom.xml</code>, it has the following section:</p>\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  &lt;ciManagement&gt;\n    &lt;system&gt;Travis CI&lt;/system&gt;\n    &lt;url&gt;https://travis-ci.org/google/guava&lt;/url&gt;\n  &lt;/ciManagement&gt;\"><pre class=\"notranslate\">  &lt;<span class=\"pl-ent\">ciManagement</span>&gt;\n    &lt;<span class=\"pl-ent\">system</span>&gt;Travis CI&lt;/<span class=\"pl-ent\">system</span>&gt;\n    &lt;<span class=\"pl-ent\">url</span>&gt;https://travis-ci.org/google/guava&lt;/<span class=\"pl-ent\">url</span>&gt;\n  &lt;/<span class=\"pl-ent\">ciManagement</span>&gt;</pre></div>\n<p dir=\"auto\">It should probably be changed to GitHub Actions now.</p>\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  &lt;ciManagement&gt;\n    &lt;system&gt;GitHub Actions&lt;/system&gt;\n    &lt;url&gt;https://github.com/google/guava/actions&lt;/url&gt;\n  &lt;/ciManagement&gt;\"><pre class=\"notranslate\">  &lt;<span class=\"pl-ent\">ciManagement</span>&gt;\n    &lt;<span class=\"pl-ent\">system</span>&gt;GitHub Actions&lt;/<span class=\"pl-ent\">system</span>&gt;\n    &lt;<span class=\"pl-ent\">url</span>&gt;https://github.com/google/guava/actions&lt;/<span class=\"pl-ent\">url</span>&gt;\n  &lt;/<span class=\"pl-ent\">ciManagement</span>&gt;</pre></div>",
                "resourcePath": "/google/guava/issues/5558",
                "createdAt": "2021-05-15T16:01:33Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "type=documentation"
                      }
                    },
                    {
                      "node": {
                        "name": "status=in-progress"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove `@Beta` from `Interner` and `Interners`.",
        "url": "https://github.com/google/guava/pull/5603",
        "resourcePath": "/google/guava/pull/5603",
        "createdAt": "2021-06-14T22:11:45Z",
        "number": 5603,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5594,
                "url": "https://github.com/google/guava/issues/5594",
                "title": "Remove @Beta from Interners",
                "bodyHTML": "<p dir=\"auto\">Interning has been part of Guava for quite some time and in my experience pretty stable.</p>\n<p dir=\"auto\">Can the <code class=\"notranslate\">@Beta</code>  be removed from this component?</p>",
                "resourcePath": "/google/guava/issues/5594",
                "createdAt": "2021-06-07T07:35:19Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Added url to guava pom",
        "url": "https://github.com/google/guava/pull/5619",
        "resourcePath": "/google/guava/pull/5619",
        "createdAt": "2021-06-21T07:12:05Z",
        "number": 5619,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Njc0Mjg0NzMzOjE2NTc4YjQ4MTljNmRlMDZmZGIwMWNlZjg1YThmZDZlYjA0NDhjNDk=",
                "url": "https://github.com/google/guava/pull/5619/commits/16578b4819c6de06fdb01cef85a8fd6eb0448c49"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5618,
                "url": "https://github.com/google/guava/issues/5618",
                "title": "wrong url in pom file",
                "bodyHTML": "<p dir=\"auto\">guava does not define a project URL in the pom file. In that case, maven inherits the value of the parent pom and appends the artifact id (see <a href=\"https://maven.apache.org/ref/3.6.1/maven-model-builder/\" rel=\"nofollow\">maven documentation</a>).<br>\nBy that maven resolves the URL to <a href=\"https://github.com/google/guava/guava\">https://github.com/google/guava/guava</a>, which does not exist.</p>\n<h2 dir=\"auto\">Suggested Solution</h2>\n<p dir=\"auto\">Add an URL tag to <code class=\"notranslate\">guava/pom.xml</code></p>",
                "resourcePath": "/google/guava/issues/5618",
                "createdAt": "2021-06-21T07:10:23Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add an explicit project URL to Guava's main `pom.xml`.",
        "url": "https://github.com/google/guava/pull/5620",
        "resourcePath": "/google/guava/pull/5620",
        "createdAt": "2021-06-21T15:12:22Z",
        "number": 5620,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5618,
                "url": "https://github.com/google/guava/issues/5618",
                "title": "wrong url in pom file",
                "bodyHTML": "<p dir=\"auto\">guava does not define a project URL in the pom file. In that case, maven inherits the value of the parent pom and appends the artifact id (see <a href=\"https://maven.apache.org/ref/3.6.1/maven-model-builder/\" rel=\"nofollow\">maven documentation</a>).<br>\nBy that maven resolves the URL to <a href=\"https://github.com/google/guava/guava\">https://github.com/google/guava/guava</a>, which does not exist.</p>\n<h2 dir=\"auto\">Suggested Solution</h2>\n<p dir=\"auto\">Add an URL tag to <code class=\"notranslate\">guava/pom.xml</code></p>",
                "resourcePath": "/google/guava/issues/5618",
                "createdAt": "2021-06-21T07:10:23Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix murmur3_32 with UTF-8 encoding for input with non-BMP character",
        "url": "https://github.com/google/guava/pull/5649",
        "resourcePath": "/google/guava/pull/5649",
        "createdAt": "2021-07-16T17:32:27Z",
        "number": 5649,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/hash/Murmur3Hash32Test.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/hash/Murmur3_32HashFunction.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjkxNjQ0Mzk0OjZhYzA5MDkyYTkyYjY0NmI5MjQ5MTRjZjg4OTg2ODcyNjIxNDJkNjg=",
                "url": "https://github.com/google/guava/pull/5649/commits/6ac09092a92b646b924914cf8898687262142d68"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5648,
                "url": "https://github.com/google/guava/issues/5648",
                "title": "Incorrect hash result from murmur3_32 with String input containing surrogate pairs",
                "bodyHTML": "<p dir=\"auto\">Here is the test program comparing behavior of</p>\n<ul dir=\"auto\">\n<li>Guava's <code class=\"notranslate\">Hashing.murmur3_32</code> with <code class=\"notranslate\">hashBytes(str.getBytes(encoding))</code></li>\n<li>Guava's <code class=\"notranslate\">Hashing.murmur3_32</code> with <code class=\"notranslate\">hashString(str, encoding)</code></li>\n<li>Airlift's <code class=\"notranslate\">Murmur3Hash32.hash(str.getBytes(encoding))</code> (<a href=\"https://github.com/airlift/slice/blob/d3a025291fd8d6a062e44f3823ee49196783ab9c/src/main/java/io/airlift/slice/Murmur3Hash32.java\">https://github.com/airlift/slice/blob/d3a025291fd8d6a062e44f3823ee49196783ab9c/src/main/java/io/airlift/slice/Murmur3Hash32.java</a>)</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class Murmur\n{\n    public static void main(String[] args)\n    {\n        for (String string : List.of(&quot;plan ascii&quot;, &quot;BMP Pi\u0119kna \u0142\u0105ka w \u6771\u4eac\u90fd&quot;,  &quot;surrogate pair \ud83d\udcb0&quot;)) {\n            for (Charset charset : List.of(StandardCharsets.UTF_16, StandardCharsets.UTF_8)) {\n                int airliftValue = Murmur3Hash32.hash(Slices.wrappedBuffer(string.getBytes(charset)));\n                int guavaValue1 = Hashing.murmur3_32().hashBytes(string.getBytes(charset)).asInt();\n                int guavaValue2 = Hashing.murmur3_32().hashString(string, charset).asInt();\n                System.out.println(&quot;airliftValue = &quot; + airliftValue);\n                System.out.println(&quot;guavaValue1  = &quot; + guavaValue1);\n                System.out.println(&quot;guavaValue2  = &quot; + guavaValue2);\n                System.out.println();\n            }\n        }\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">public class Murmur\n{\n    public static void main(String[] args)\n    {\n        for (String string : List.of(\"plan ascii\", \"BMP Pi\u0119kna \u0142\u0105ka w \u6771\u4eac\u90fd\",  \"surrogate pair \ud83d\udcb0\")) {\n            for (Charset charset : List.of(StandardCharsets.UTF_16, StandardCharsets.UTF_8)) {\n                int airliftValue = Murmur3Hash32.hash(Slices.wrappedBuffer(string.getBytes(charset)));\n                int guavaValue1 = Hashing.murmur3_32().hashBytes(string.getBytes(charset)).asInt();\n                int guavaValue2 = Hashing.murmur3_32().hashString(string, charset).asInt();\n                System.out.println(\"airliftValue = \" + airliftValue);\n                System.out.println(\"guavaValue1  = \" + guavaValue1);\n                System.out.println(\"guavaValue2  = \" + guavaValue2);\n                System.out.println();\n            }\n        }\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">Results when run with Guava <code class=\"notranslate\">30.1-jre</code> and Airlift Slice <code class=\"notranslate\">0.40</code>:</p>\n<p dir=\"auto\">Note that results agree except for the last case. I expect them to agree in all cases, especially between the two Guava alternative API methods.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"string: plan ascii, charset: UTF-16\nairliftValue = -731716445\nguavaValue1  = -731716445\nguavaValue2  = -731716445\n\nstring: plan ascii, charset: UTF-8\nairliftValue = -218266838\nguavaValue1  = -218266838\nguavaValue2  = -218266838\n\nstring: BMP Pi\u0119kna \u0142\u0105ka w \u6771\u4eac\u90fd, charset: UTF-16\nairliftValue = -989030725\nguavaValue1  = -989030725\nguavaValue2  = -989030725\n\nstring: BMP Pi\u0119kna \u0142\u0105ka w \u6771\u4eac\u90fd, charset: UTF-8\nairliftValue = 103331700\nguavaValue1  = 103331700\nguavaValue2  = 103331700\n\nstring: surrogate pair \ud83d\udcb0, charset: UTF-16\nairliftValue = 2147098392\nguavaValue1  = 2147098392\nguavaValue2  = 2147098392\n\nstring: surrogate pair \ud83d\udcb0, charset: UTF-8\nairliftValue = -1114908744\nguavaValue1  = -1114908744\nguavaValue2  = -2027737699\"><pre class=\"notranslate\"><code class=\"notranslate\">string: plan ascii, charset: UTF-16\nairliftValue = -731716445\nguavaValue1  = -731716445\nguavaValue2  = -731716445\n\nstring: plan ascii, charset: UTF-8\nairliftValue = -218266838\nguavaValue1  = -218266838\nguavaValue2  = -218266838\n\nstring: BMP Pi\u0119kna \u0142\u0105ka w \u6771\u4eac\u90fd, charset: UTF-16\nairliftValue = -989030725\nguavaValue1  = -989030725\nguavaValue2  = -989030725\n\nstring: BMP Pi\u0119kna \u0142\u0105ka w \u6771\u4eac\u90fd, charset: UTF-8\nairliftValue = 103331700\nguavaValue1  = 103331700\nguavaValue2  = 103331700\n\nstring: surrogate pair \ud83d\udcb0, charset: UTF-16\nairliftValue = 2147098392\nguavaValue1  = 2147098392\nguavaValue2  = 2147098392\n\nstring: surrogate pair \ud83d\udcb0, charset: UTF-8\nairliftValue = -1114908744\nguavaValue1  = -1114908744\nguavaValue2  = -2027737699\n</code></pre></div>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/losipiuk/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/losipiuk\">@losipiuk</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wendigo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wendigo\">@wendigo</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/alexjo2144/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alexjo2144\">@alexjo2144</a></p>",
                "resourcePath": "/google/guava/issues/5648",
                "createdAt": "2021-07-16T15:07:10Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "P4"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Deprecate buggy `murmur3_32` and introduce `murmur3_32_fixed`.",
        "url": "https://github.com/google/guava/pull/5657",
        "resourcePath": "/google/guava/pull/5657",
        "createdAt": "2021-07-26T21:06:42Z",
        "number": 5657,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/hash/HashFunctionEnum.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/hash/HashingTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/hash/Murmur3Hash32Test.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/hash/Hashing.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/hash/Murmur3_32HashFunction.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/hash/HashFunctionEnum.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/hash/HashingTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/hash/Murmur3Hash32Test.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/hash/Hashing.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/hash/Murmur3_32HashFunction.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Njk3MzUyNzAyOjVlZjA0NzVmOWExMGUzNTAxNmYzMjNhYmZiYWIzNGQ2OTFhMjkyYTA=",
                "url": "https://github.com/google/guava/pull/5657/commits/5ef0475f9a10e35016f323abfbab34d691a292a0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5648,
                "url": "https://github.com/google/guava/issues/5648",
                "title": "Incorrect hash result from murmur3_32 with String input containing surrogate pairs",
                "bodyHTML": "<p dir=\"auto\">Here is the test program comparing behavior of</p>\n<ul dir=\"auto\">\n<li>Guava's <code class=\"notranslate\">Hashing.murmur3_32</code> with <code class=\"notranslate\">hashBytes(str.getBytes(encoding))</code></li>\n<li>Guava's <code class=\"notranslate\">Hashing.murmur3_32</code> with <code class=\"notranslate\">hashString(str, encoding)</code></li>\n<li>Airlift's <code class=\"notranslate\">Murmur3Hash32.hash(str.getBytes(encoding))</code> (<a href=\"https://github.com/airlift/slice/blob/d3a025291fd8d6a062e44f3823ee49196783ab9c/src/main/java/io/airlift/slice/Murmur3Hash32.java\">https://github.com/airlift/slice/blob/d3a025291fd8d6a062e44f3823ee49196783ab9c/src/main/java/io/airlift/slice/Murmur3Hash32.java</a>)</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class Murmur\n{\n    public static void main(String[] args)\n    {\n        for (String string : List.of(&quot;plan ascii&quot;, &quot;BMP Pi\u0119kna \u0142\u0105ka w \u6771\u4eac\u90fd&quot;,  &quot;surrogate pair \ud83d\udcb0&quot;)) {\n            for (Charset charset : List.of(StandardCharsets.UTF_16, StandardCharsets.UTF_8)) {\n                int airliftValue = Murmur3Hash32.hash(Slices.wrappedBuffer(string.getBytes(charset)));\n                int guavaValue1 = Hashing.murmur3_32().hashBytes(string.getBytes(charset)).asInt();\n                int guavaValue2 = Hashing.murmur3_32().hashString(string, charset).asInt();\n                System.out.println(&quot;airliftValue = &quot; + airliftValue);\n                System.out.println(&quot;guavaValue1  = &quot; + guavaValue1);\n                System.out.println(&quot;guavaValue2  = &quot; + guavaValue2);\n                System.out.println();\n            }\n        }\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">public class Murmur\n{\n    public static void main(String[] args)\n    {\n        for (String string : List.of(\"plan ascii\", \"BMP Pi\u0119kna \u0142\u0105ka w \u6771\u4eac\u90fd\",  \"surrogate pair \ud83d\udcb0\")) {\n            for (Charset charset : List.of(StandardCharsets.UTF_16, StandardCharsets.UTF_8)) {\n                int airliftValue = Murmur3Hash32.hash(Slices.wrappedBuffer(string.getBytes(charset)));\n                int guavaValue1 = Hashing.murmur3_32().hashBytes(string.getBytes(charset)).asInt();\n                int guavaValue2 = Hashing.murmur3_32().hashString(string, charset).asInt();\n                System.out.println(\"airliftValue = \" + airliftValue);\n                System.out.println(\"guavaValue1  = \" + guavaValue1);\n                System.out.println(\"guavaValue2  = \" + guavaValue2);\n                System.out.println();\n            }\n        }\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">Results when run with Guava <code class=\"notranslate\">30.1-jre</code> and Airlift Slice <code class=\"notranslate\">0.40</code>:</p>\n<p dir=\"auto\">Note that results agree except for the last case. I expect them to agree in all cases, especially between the two Guava alternative API methods.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"string: plan ascii, charset: UTF-16\nairliftValue = -731716445\nguavaValue1  = -731716445\nguavaValue2  = -731716445\n\nstring: plan ascii, charset: UTF-8\nairliftValue = -218266838\nguavaValue1  = -218266838\nguavaValue2  = -218266838\n\nstring: BMP Pi\u0119kna \u0142\u0105ka w \u6771\u4eac\u90fd, charset: UTF-16\nairliftValue = -989030725\nguavaValue1  = -989030725\nguavaValue2  = -989030725\n\nstring: BMP Pi\u0119kna \u0142\u0105ka w \u6771\u4eac\u90fd, charset: UTF-8\nairliftValue = 103331700\nguavaValue1  = 103331700\nguavaValue2  = 103331700\n\nstring: surrogate pair \ud83d\udcb0, charset: UTF-16\nairliftValue = 2147098392\nguavaValue1  = 2147098392\nguavaValue2  = 2147098392\n\nstring: surrogate pair \ud83d\udcb0, charset: UTF-8\nairliftValue = -1114908744\nguavaValue1  = -1114908744\nguavaValue2  = -2027737699\"><pre class=\"notranslate\"><code class=\"notranslate\">string: plan ascii, charset: UTF-16\nairliftValue = -731716445\nguavaValue1  = -731716445\nguavaValue2  = -731716445\n\nstring: plan ascii, charset: UTF-8\nairliftValue = -218266838\nguavaValue1  = -218266838\nguavaValue2  = -218266838\n\nstring: BMP Pi\u0119kna \u0142\u0105ka w \u6771\u4eac\u90fd, charset: UTF-16\nairliftValue = -989030725\nguavaValue1  = -989030725\nguavaValue2  = -989030725\n\nstring: BMP Pi\u0119kna \u0142\u0105ka w \u6771\u4eac\u90fd, charset: UTF-8\nairliftValue = 103331700\nguavaValue1  = 103331700\nguavaValue2  = 103331700\n\nstring: surrogate pair \ud83d\udcb0, charset: UTF-16\nairliftValue = 2147098392\nguavaValue1  = 2147098392\nguavaValue2  = 2147098392\n\nstring: surrogate pair \ud83d\udcb0, charset: UTF-8\nairliftValue = -1114908744\nguavaValue1  = -1114908744\nguavaValue2  = -2027737699\n</code></pre></div>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/losipiuk/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/losipiuk\">@losipiuk</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wendigo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wendigo\">@wendigo</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/alexjo2144/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/alexjo2144\">@alexjo2144</a></p>",
                "resourcePath": "/google/guava/issues/5648",
                "createdAt": "2021-07-16T15:07:10Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "P4"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use a single Supplier instance inside a configured MultiMapBuilder",
        "url": "https://github.com/google/guava/pull/5676",
        "resourcePath": "/google/guava/pull/5676",
        "createdAt": "2021-08-09T11:08:28Z",
        "number": 5676,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/MultimapBuilder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzA2NDI0ODMxOmU4ZmQ0YWNkZWNlNWM1NTU4MGVlNjYyZmM3N2E4NmQ2YTFkMzQ1NTY=",
                "url": "https://github.com/google/guava/pull/5676/commits/e8fd4acdece5c55580ee662fc77a86d6a1d34556"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5673,
                "url": "https://github.com/google/guava/issues/5673",
                "title": "MultimapBuilder creates unnecessary objects",
                "bodyHTML": "<p dir=\"auto\">Looking at high memory usage in one of our components, we noticed that for every MultiMap created by a MultimapBuilder, we have a Supplier too (in our case it is a HashSetSupplier, but it applies to other Suppliers too)</p>\n<p dir=\"auto\">the reason for that is that we do:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  public static final MultimapBuilder.SetMultimapBuilder&lt;Object, Object&gt; RELATIONS_MAP_BUILDER = MultimapBuilder\n      .hashKeys(2)\n      .hashSetValues(1);\"><pre class=\"notranslate\"><code class=\"notranslate\">  public static final MultimapBuilder.SetMultimapBuilder&lt;Object, Object&gt; RELATIONS_MAP_BUILDER = MultimapBuilder\n      .hashKeys(2)\n      .hashSetValues(1);\n</code></pre></div>\n<p dir=\"auto\">which in turn calls this Guava code</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    public SetMultimapBuilder&lt;K0, Object&gt; hashSetValues(final int expectedValuesPerKey) {\n      checkNonnegative(expectedValuesPerKey, &quot;expectedValuesPerKey&quot;);\n      return new SetMultimapBuilder&lt;K0, Object&gt;() {\n        @Override\n        public &lt;K extends K0, V&gt; SetMultimap&lt;K, V&gt; build() {\n          return Multimaps.newSetMultimap(\n              MultimapBuilderWithKeys.this.&lt;K, V&gt;createMap(),\n              new HashSetSupplier&lt;V&gt;(expectedValuesPerKey));\n        }\n      };\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    public SetMultimapBuilder&lt;K0, Object&gt; hashSetValues(final int expectedValuesPerKey) {\n      checkNonnegative(expectedValuesPerKey, \"expectedValuesPerKey\");\n      return new SetMultimapBuilder&lt;K0, Object&gt;() {\n        @Override\n        public &lt;K extends K0, V&gt; SetMultimap&lt;K, V&gt; build() {\n          return Multimaps.newSetMultimap(\n              MultimapBuilderWithKeys.this.&lt;K, V&gt;createMap(),\n              new HashSetSupplier&lt;V&gt;(expectedValuesPerKey));\n        }\n      };\n    }\n</code></pre></div>\n<p dir=\"auto\">This creates a new <code class=\"notranslate\">hashSetSupplier</code> every time build is invoked.<br>\nThis looks incorrect to me, and the suppliers should be properties of the newly returned builder, shouldn't they?</p>",
                "resourcePath": "/google/guava/issues/5673",
                "createdAt": "2021-08-07T10:27:07Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "type=performance"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Reject non-ASCII digits in `HostAndPort` port numbers.",
        "url": "https://github.com/google/guava/pull/5685",
        "resourcePath": "/google/guava/pull/5685",
        "createdAt": "2021-08-12T16:40:27Z",
        "number": 5685,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/net/HostAndPortTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/net/InetAddressesTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/net/HostAndPort.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/net/InetAddresses.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/net/HostAndPortTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/net/InetAddressesTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/net/HostAndPort.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/net/InetAddresses.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzExMjMxNjUyOjYzNWJjMDQ0MTU0MzM3OTA4M2JlZTZhNzNjYTA4YzA5MzJiMDJjYzE=",
                "url": "https://github.com/google/guava/pull/5685/commits/635bc0441543379083bee6a73ca08c0932b02cc1"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5681,
                "url": "https://github.com/google/guava/issues/5681",
                "title": "`HostAndPort.fromString(String)` parses non-ASCII ports",
                "bodyHTML": "<p dir=\"auto\">The method <code class=\"notranslate\">HostAndPort.fromString(String)</code> parses non-ASCII ports due to its usage of <code class=\"notranslate\">Integer.parseInt</code>:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/2b6b844683e6ff63fc8ba676692cf636f74504fd/guava/src/com/google/common/net/HostAndPort.java#L195\">guava/guava/src/com/google/common/net/HostAndPort.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 195\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/guava/commit/2b6b844683e6ff63fc8ba676692cf636f74504fd\">2b6b844</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L195\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"195\"></td>\n          <td id=\"LC195\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-s1\">port</span> = <span class=\"pl-smi\">Integer</span>.<span class=\"pl-en\">parseInt</span>(<span class=\"pl-s1\">portString</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">For example:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// 127.0.0.1:80\nSystem.out.println(HostAndPort.fromString(&quot;127.0.0.1:8\\u0660&quot;));\"><pre class=\"notranslate\"><span class=\"pl-c\">// 127.0.0.1:80</span>\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-smi\">HostAndPort</span>.<span class=\"pl-en\">fromString</span>(<span class=\"pl-s\">\"127.0.0.1:8<span class=\"pl-cce\">\\u0660</span>\"</span>));</pre></div>\n<p dir=\"auto\">Whether that is the intended behavior depends on which RFC this method wants to comply with (if any). Though for example <a href=\"https://datatracker.ietf.org/doc/html/rfc3986#appendix-A\" rel=\"nofollow\">RFC 3986</a> specifying the URI syntax defines port as <code class=\"notranslate\">*DIGIT</code> (where <code class=\"notranslate\">DIGIT</code> is <code class=\"notranslate\">0</code>-<code class=\"notranslate\">9</code> as defined by <a href=\"https://datatracker.ietf.org/doc/html/rfc2234#section-6.1\" rel=\"nofollow\">RFC 2234</a>).<br>\nFor reference, Java's <code class=\"notranslate\">URI</code> class does not parse non-ASCII ports, but <code class=\"notranslate\">URL</code> does (violating <a href=\"https://datatracker.ietf.org/doc/html/rfc1738#section-5\" rel=\"nofollow\">RFC 1738</a>).</p>\n<p dir=\"auto\">(Possibly relevant for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"301964873\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/3052\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/3052/hovercard\" href=\"https://github.com/google/guava/issues/3052\">#3052</a>)</p>",
                "resourcePath": "/google/guava/issues/5681",
                "createdAt": "2021-08-10T04:18:25Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=net"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 5682,
                "url": "https://github.com/google/guava/issues/5682",
                "title": "`InetAddresses.forString(String)` parses non-ASCII decimals",
                "bodyHTML": "<p dir=\"auto\">The method <code class=\"notranslate\">InetAddresses.forString(String)</code> parses non-ASCII decimals due to its usage of <code class=\"notranslate\">Character.digit(...)</code>.<br>\nFor example:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// /127.0.0.1\nSystem.out.println(InetAddresses.forString(&quot;127.0.0.\\u0661&quot;));\n// /0:0:0:0:0:0:0:1\nSystem.out.println(InetAddresses.forString(&quot;0:0:0:0:0:0:0:\\u0661&quot;));\"><pre class=\"notranslate\"><span class=\"pl-c\">// /127.0.0.1</span>\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-smi\">InetAddresses</span>.<span class=\"pl-en\">forString</span>(<span class=\"pl-s\">\"127.0.0.<span class=\"pl-cce\">\\u0661</span>\"</span>));\n<span class=\"pl-c\">// /0:0:0:0:0:0:0:1</span>\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-smi\">InetAddresses</span>.<span class=\"pl-en\">forString</span>(<span class=\"pl-s\">\"0:0:0:0:0:0:0:<span class=\"pl-cce\">\\u0661</span>\"</span>));</pre></div>\n<p dir=\"auto\">While it appears there is no RFC which strictly specifies the syntax, related RFCs, such as <a href=\"https://datatracker.ietf.org/doc/html/rfc3986#appendix-A\" rel=\"nofollow\">RFC 3986</a> specifying the URI syntax, explicitly only allow ASCII <code class=\"notranslate\">0</code>-<code class=\"notranslate\">9</code> (respectively <code class=\"notranslate\">f</code> for IPv6).<br>\nAdditionally there is <a href=\"https://datatracker.ietf.org/doc/html/draft-main-ipaddr-text-rep-00#section-3\" rel=\"nofollow\">this draft</a> which also only permits ASCII digits.</p>\n<p dir=\"auto\">Note however, that Java's <code class=\"notranslate\">InetAddress.getByName(String)</code> does support non-ASCII digits as well, though it is not clear whether that is intended or just an oversight.</p>\n<p dir=\"auto\">(This issue might be relevant for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"425075724\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/3417\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/3417/hovercard\" href=\"https://github.com/google/guava/issues/3417\">#3417</a>)</p>",
                "resourcePath": "/google/guava/issues/5682",
                "createdAt": "2021-08-10T04:40:29Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=net"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Copy the `setUp` and `tearDown` from the parent builder to derived test suites.",
        "url": "https://github.com/google/guava/pull/5690",
        "resourcePath": "/google/guava/pull/5690",
        "createdAt": "2021-08-18T22:28:43Z",
        "number": 5690,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-testlib/src/com/google/common/collect/testing/FeatureSpecificTestSuiteBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-testlib/src/com/google/common/collect/testing/ListTestSuiteBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-testlib/src/com/google/common/collect/testing/MapTestSuiteBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-testlib/src/com/google/common/collect/testing/SetTestSuiteBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-testlib/src/com/google/common/collect/testing/SortedMapTestSuiteBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-testlib/src/com/google/common/collect/testing/SortedSetTestSuiteBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-testlib/src/com/google/common/collect/testing/google/BiMapTestSuiteBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-testlib/src/com/google/common/collect/testing/google/MultimapTestSuiteBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-testlib/src/com/google/common/collect/testing/google/MultisetTestSuiteBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-testlib/test/com/google/common/collect/testing/MapTestSuiteBuilderTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzE1NDU3NzEzOjM3NTg2ZjZkNzY4MzM2ZmY1ZWRkNzA2YWYxMTg4Y2FkZTU2MjVhZTM=",
                "url": "https://github.com/google/guava/pull/5690/commits/37586f6d768336ff5edd706af1188cade5625ae3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5674,
                "url": "https://github.com/google/guava/issues/5674",
                "title": "collect.testing does not pass setUp/tearDown to derived tests",
                "bodyHTML": "<p dir=\"auto\">When testing collections the supplied <code class=\"notranslate\">setUp</code> and <code class=\"notranslate\">tearDown</code> are not executed for derived suites such as keySet, values, and entrySet. I believe the expected behavior is to pass the parent's instances to the children, e.g. in <code class=\"notranslate\">MapTestSuiteBuilder</code></p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/88b1bdcb613de9f985cf3f873b7eec0a2e13741b/guava-testlib/src/com/google/common/collect/testing/MapTestSuiteBuilder.java#L129-L135\">guava/guava-testlib/src/com/google/common/collect/testing/MapTestSuiteBuilder.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 129 to 135\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/guava/commit/88b1bdcb613de9f985cf3f873b7eec0a2e13741b\">88b1bdc</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L129\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"129\"></td>\n          <td id=\"LC129\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-s1\">derivedSuites</span>.<span class=\"pl-en\">add</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L130\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"130\"></td>\n          <td id=\"LC130\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-en\">createDerivedEntrySetSuite</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L131\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"131\"></td>\n          <td id=\"LC131\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">             <span class=\"pl-k\">new</span> <span class=\"pl-smi\">MapEntrySetGenerator</span>&lt;<span class=\"pl-smi\">K</span>, <span class=\"pl-smi\">V</span>&gt;(<span class=\"pl-s1\">parentBuilder</span>.<span class=\"pl-en\">getSubjectGenerator</span>())) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L132\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"132\"></td>\n          <td id=\"LC132\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         .<span class=\"pl-en\">withFeatures</span>(<span class=\"pl-en\">computeEntrySetFeatures</span>(<span class=\"pl-s1\">parentBuilder</span>.<span class=\"pl-en\">getFeatures</span>())) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L133\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"133\"></td>\n          <td id=\"LC133\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         .<span class=\"pl-en\">named</span>(<span class=\"pl-s1\">parentBuilder</span>.<span class=\"pl-en\">getName</span>() + <span class=\"pl-s\">\" entrySet\"</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L134\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"134\"></td>\n          <td id=\"LC134\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         .<span class=\"pl-en\">suppressing</span>(<span class=\"pl-s1\">parentBuilder</span>.<span class=\"pl-en\">getSuppressedTests</span>()) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L135\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"135\"></td>\n          <td id=\"LC135\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         .<span class=\"pl-en\">createTestSuite</span>()); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">For example, the below test has a generator that depends the call to <code class=\"notranslate\">setUp()</code> to initialize its state. This fails with an NPE when the derived tests are executed,</p>\n<details>\n<summary>\nCode sample\n<p dir=\"auto\">A test generator that depends the call to setUp() to initialize will fail with an NPE when the derived tests are executed\n</p></summary>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import static com.google.common.base.Preconditions.checkNotNull;\n\nimport java.util.HashMap;\nimport java.util.Map;\nimport java.util.concurrent.atomic.AtomicReference;\n\nimport com.google.common.collect.testing.MapTestSuiteBuilder;\nimport com.google.common.collect.testing.TestStringMapGenerator;\nimport com.google.common.collect.testing.features.CollectionFeature;\nimport com.google.common.collect.testing.features.CollectionSize;\nimport com.google.common.collect.testing.features.MapFeature;\n\nimport junit.framework.Test;\nimport junit.framework.TestCase;\n\npublic final class MapTests extends TestCase {\n  public static Test suite() {\n    var generator = new MapGenerator();\n    return MapTestSuiteBuilder\n        .using(generator)\n        .named(&quot;HashMap&quot;)\n        .withFeatures(\n            MapFeature.GENERAL_PURPOSE,\n            MapFeature.ALLOWS_NULL_KEYS,\n            MapFeature.ALLOWS_NULL_VALUES,\n            MapFeature.ALLOWS_NULL_ENTRY_QUERIES,\n            CollectionFeature.SUPPORTS_ITERATOR_REMOVE,\n            CollectionSize.ZERO)\n        .withSetUp(generator::setUp)\n        .withTearDown(generator::tearDown)\n        .createTestSuite();\n  }\n\n  static final class MapGenerator extends TestStringMapGenerator {\n    Map&lt;String, String&gt; map;\n\n    @Override\n    protected Map&lt;String, String&gt; create(Map.Entry&lt;String, String&gt;[] entries) {\n      checkNotNull(map, &quot;Map was not initialized&quot;);\n      map.clear();\n      for (var entry : entries) {\n        map.put(entry.getKey(), entry.getValue());\n      }\n      return map;\n    }\n\n    void setUp() {\n      map = new HashMap&lt;&gt;();\n    }\n\n    void tearDown() {\n      map = null;\n    }\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">base</span>.<span class=\"pl-s1\">Preconditions</span>.<span class=\"pl-s1\">checkNotNull</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">HashMap</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">Map</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">concurrent</span>.<span class=\"pl-s1\">atomic</span>.<span class=\"pl-s1\">AtomicReference</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">collect</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">MapTestSuiteBuilder</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">collect</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">TestStringMapGenerator</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">collect</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">features</span>.<span class=\"pl-s1\">CollectionFeature</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">collect</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">features</span>.<span class=\"pl-s1\">CollectionSize</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">collect</span>.<span class=\"pl-s1\">testing</span>.<span class=\"pl-s1\">features</span>.<span class=\"pl-s1\">MapFeature</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">framework</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">framework</span>.<span class=\"pl-s1\">TestCase</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MapTests</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">TestCase</span> {\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">Test</span> <span class=\"pl-en\">suite</span>() {\n    <span class=\"pl-smi\">var</span> <span class=\"pl-s1\">generator</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">MapGenerator</span>();\n    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">MapTestSuiteBuilder</span>\n        .<span class=\"pl-en\">using</span>(<span class=\"pl-s1\">generator</span>)\n        .<span class=\"pl-en\">named</span>(<span class=\"pl-s\">\"HashMap\"</span>)\n        .<span class=\"pl-en\">withFeatures</span>(\n            <span class=\"pl-smi\">MapFeature</span>.<span class=\"pl-c1\">GENERAL_PURPOSE</span>,\n            <span class=\"pl-smi\">MapFeature</span>.<span class=\"pl-c1\">ALLOWS_NULL_KEYS</span>,\n            <span class=\"pl-smi\">MapFeature</span>.<span class=\"pl-c1\">ALLOWS_NULL_VALUES</span>,\n            <span class=\"pl-smi\">MapFeature</span>.<span class=\"pl-c1\">ALLOWS_NULL_ENTRY_QUERIES</span>,\n            <span class=\"pl-smi\">CollectionFeature</span>.<span class=\"pl-c1\">SUPPORTS_ITERATOR_REMOVE</span>,\n            <span class=\"pl-smi\">CollectionSize</span>.<span class=\"pl-c1\">ZERO</span>)\n        .<span class=\"pl-en\">withSetUp</span>(<span class=\"pl-s1\">generator</span>::<span class=\"pl-s1\">setUp</span>)\n        .<span class=\"pl-en\">withTearDown</span>(<span class=\"pl-s1\">generator</span>::<span class=\"pl-s1\">tearDown</span>)\n        .<span class=\"pl-en\">createTestSuite</span>();\n  }\n\n  <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MapGenerator</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">TestStringMapGenerator</span> {\n    <span class=\"pl-smi\">Map</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">map</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n    <span class=\"pl-k\">protected</span> <span class=\"pl-smi\">Map</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-en\">create</span>(<span class=\"pl-smi\">Map</span>.<span class=\"pl-smi\">Entry</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">String</span>&gt;[] <span class=\"pl-s1\">entries</span>) {\n      <span class=\"pl-en\">checkNotNull</span>(<span class=\"pl-s1\">map</span>, <span class=\"pl-s\">\"Map was not initialized\"</span>);\n      <span class=\"pl-s1\">map</span>.<span class=\"pl-en\">clear</span>();\n      <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">var</span> <span class=\"pl-s1\">entry</span> : <span class=\"pl-s1\">entries</span>) {\n        <span class=\"pl-s1\">map</span>.<span class=\"pl-en\">put</span>(<span class=\"pl-s1\">entry</span>.<span class=\"pl-en\">getKey</span>(), <span class=\"pl-s1\">entry</span>.<span class=\"pl-en\">getValue</span>());\n      }\n      <span class=\"pl-k\">return</span> <span class=\"pl-s1\">map</span>;\n    }\n\n    <span class=\"pl-smi\">void</span> <span class=\"pl-en\">setUp</span>() {\n      <span class=\"pl-s1\">map</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">HashMap</span>&lt;&gt;();\n    }\n\n    <span class=\"pl-smi\">void</span> <span class=\"pl-en\">tearDown</span>() {\n      <span class=\"pl-s1\">map</span> = <span class=\"pl-c1\">null</span>;\n    }\n  }\n}</pre></div>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/378614/128649963-1b4367e3-45fa-4026-9489-f6afe8bf2c1e.png\"><img width=\"1680\" alt=\"Screen Shot 2021-08-08 at 5 15 00 PM\" src=\"https://user-images.githubusercontent.com/378614/128649963-1b4367e3-45fa-4026-9489-f6afe8bf2c1e.png\" style=\"max-width: 100%;\"></a>\n</details>\n<p dir=\"auto\">That is not to imply that having a generator depend on external initialization logic is desirable, e.g. by instead creating a new map for each invocation. However the gap here is the surprise that the setUp and tearDown only apply to some test cases and not to others.</p>",
                "resourcePath": "/google/guava/issues/5674",
                "createdAt": "2021-08-09T00:19:52Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=testing"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix bug in `TopKSelector` call to `Arrays.sort`.",
        "url": "https://github.com/google/guava/pull/5696",
        "resourcePath": "/google/guava/pull/5696",
        "createdAt": "2021-08-26T16:53:41Z",
        "number": 5696,
        "mergeCommit": {
          "oid": "f79d923a38734bb584707ed77a98fb6d84d2aa28",
          "message": "Fix bug in `TopKSelector` call to `Arrays.sort`.\n\nFixes #5691\nFixes #5692\n\nRELNOTES=n/a\nPiperOrigin-RevId: 393150511",
          "commitUrl": "https://github.com/google/guava/commit/f79d923a38734bb584707ed77a98fb6d84d2aa28",
          "parents": {
            "nodes": [
              {
                "oid": "d2c202add26837e05a931bb281a65e9ea1f29f56",
                "message": "Mention the dangers of minimization/optimization for EventBus users.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 392914141"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/collect/TopKSelectorTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/TopKSelector.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/collect/TopKSelectorTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/TopKSelector.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NzIwNjg5Nzk5OmY3OWQ5MjNhMzg3MzRiYjU4NDcwN2VkNzdhOThmYjZkODRkMmFhMjg=",
                "url": "https://github.com/google/guava/pull/5696/commits/f79d923a38734bb584707ed77a98fb6d84d2aa28"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5692,
                "url": "https://github.com/google/guava/issues/5692",
                "title": "TopKSelector is unstable when quicksort fallback to Arrays.sort.",
                "bodyHTML": "<p dir=\"auto\">Related PR : <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"974581919\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/5691\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/google/guava/pull/5691/hovercard\" href=\"https://github.com/google/guava/pull/5691\">#5691</a><br>\nThe result of <code class=\"notranslate\">TopKSelector</code> may be wrong when <code class=\"notranslate\">trim()</code> is invoked and quiksort fallback to <code class=\"notranslate\">Arrasys.sort()</code>. Because <code class=\"notranslate\">Arrasys.sort()</code> is been used by mistake there.<br>\nFollowing test case can trigger this bug.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"{\n    int n = 10000;\n    int k = 10000;\n    int testIteration = 10;\n    Random random = new Random(System.currentTimeMillis());\n    for (int iter = 0; iter &lt; testIteration; iter ++) {\n      // target array to be sorted using TopKSelector\n      List&lt;Integer&gt; target = new ArrayList&lt;&gt;();\n      for (int i = 0; i &lt; 9; i++) {\n        List&lt;Integer&gt; sortedArray = new ArrayList();\n        for (int j = 0; j &lt; n; j++) {\n          sortedArray.add(random.nextInt());\n        }\n        sortedArray.sort(Integer::compareTo);\n        target.addAll(sortedArray);\n      }\n\n      TopKSelector&lt;Integer&gt; top = TopKSelector.least(k, Integer::compareTo);\n      for (int value : target) {\n        top.offer(value);\n      }\n\n      target.sort(Integer::compareTo);\n      assertEquals(top.topK(), target.subList(0, k));\n    }\n  }\"><pre class=\"notranslate\"><code class=\"notranslate\">{\n    int n = 10000;\n    int k = 10000;\n    int testIteration = 10;\n    Random random = new Random(System.currentTimeMillis());\n    for (int iter = 0; iter &lt; testIteration; iter ++) {\n      // target array to be sorted using TopKSelector\n      List&lt;Integer&gt; target = new ArrayList&lt;&gt;();\n      for (int i = 0; i &lt; 9; i++) {\n        List&lt;Integer&gt; sortedArray = new ArrayList();\n        for (int j = 0; j &lt; n; j++) {\n          sortedArray.add(random.nextInt());\n        }\n        sortedArray.sort(Integer::compareTo);\n        target.addAll(sortedArray);\n      }\n\n      TopKSelector&lt;Integer&gt; top = TopKSelector.least(k, Integer::compareTo);\n      for (int value : target) {\n        top.offer(value);\n      }\n\n      target.sort(Integer::compareTo);\n      assertEquals(top.topK(), target.subList(0, k));\n    }\n  }\n</code></pre></div>",
                "resourcePath": "/google/guava/issues/5692",
                "createdAt": "2021-08-19T12:31:15Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Debeta xmlEscapers",
        "url": "https://github.com/google/guava/pull/5752",
        "resourcePath": "/google/guava/pull/5752",
        "createdAt": "2021-10-11T17:24:23Z",
        "number": 5752,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/xml/XmlEscapers.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4tB-a12gAoNDhiNGZkN2EyNTBhZTgyODQ5ODQ2NjhiM2QzNThmZjFmZTE2Yjc3Yw",
                "url": "https://github.com/google/guava/pull/5752/commits/48b4fd7a250ae8284984668b3d358ff1fe16b77c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5744,
                "url": "https://github.com/google/guava/issues/5744",
                "title": "Remove @Beta from XmlEscapers",
                "bodyHTML": "<p dir=\"auto\">9 years ago com.google.common.xml.XmlEscapers was marked as Beta. Maybe 2021 is the good year to remove this annotation?</p>",
                "resourcePath": "/google/guava/issues/5744",
                "createdAt": "2021-09-30T21:01:15Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Override MapMakerInternalMap#compute",
        "url": "https://github.com/google/guava/pull/5769",
        "resourcePath": "/google/guava/pull/5769",
        "createdAt": "2021-11-01T23:16:20Z",
        "number": 5769,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/MapMakerInternalMap.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4t9AXv2gAoNDE3Nzg2ZDBmNDA1NGU1YjViZThlZTM1YjIyZDMwNWVmNjMwMTFkYQ",
                "url": "https://github.com/google/guava/pull/5769/commits/417786d0f4054e5b5be8ee35b22d305ef63011da"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5766,
                "url": "https://github.com/google/guava/issues/5766",
                "title": "Efficient implementation for MapMakerInternalMap#compute",
                "bodyHTML": "<p dir=\"auto\">The map created by <code class=\"notranslate\">MapMaker#build</code> currently use the inefficient <code class=\"notranslate\">compute</code> implementation from <code class=\"notranslate\">ConcurrentMap</code>. I assume that it could be optimized for atomic operations by reducing lookups and locking it. Contention will also cause the mapping function to be ran multiple time, preventing atomic update.</p>",
                "resourcePath": "/google/guava/issues/5766",
                "createdAt": "2021-10-29T22:32:06Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Implemented the following methods for",
        "url": "https://github.com/google/guava/pull/5790",
        "resourcePath": "/google/guava/pull/5790",
        "createdAt": "2021-11-24T17:39:18Z",
        "number": 5790,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/util/concurrent/AtomicDoubleArrayTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/util/concurrent/AtomicDoubleTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/util/concurrent/AtomicDouble.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/util/concurrent/AtomicDoubleArray.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4u-q182gAoZDIxYzA2NTk0MmU1ZDk2NTZmMGY4NzU1NmVjMjRjNjNkOTQ1ZjUyNA",
                "url": "https://github.com/google/guava/pull/5790/commits/d21c065942e5d9656f0f87556ec24c63d945f524"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5742,
                "url": "https://github.com/google/guava/issues/5742",
                "title": "AtomicDouble/AtomicDoubleArray accumulate and update methods",
                "bodyHTML": "<p dir=\"auto\">The built-in Java classes AtomicInteger, AtomicLong, AtomicIntegerArray, and AtomicLongArray all implement the methods accumulateAndGet(), getAndAccumulate(), updateAndGet(), and getAndUpdate(). The Guava classes AtomicDouble and AtomicDoubleArray do not currently implement any of those methods.</p>",
                "resourcePath": "/google/guava/issues/5742",
                "createdAt": "2021-09-29T22:44:22Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=addition"
                      }
                    },
                    {
                      "node": {
                        "name": "package=concurrent"
                      }
                    },
                    {
                      "node": {
                        "name": "platform=java8"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Init lockFreeBitArray with length to reduce memory",
        "url": "https://github.com/google/guava/pull/5799",
        "resourcePath": "/google/guava/pull/5799",
        "createdAt": "2021-12-01T15:24:21Z",
        "number": 5799,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/hash/BloomFilter.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4vQYBv2gAoNTAxMDNlMjQ0ZjUwNjhiMmM5ZmVhNTkyM2U4N2RlYmExNzAwYjdkNA",
                "url": "https://github.com/google/guava/pull/5799/commits/50103e244f5068b2c9fea5923e87deba1700b7d4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5770,
                "url": "https://github.com/google/guava/issues/5770",
                "title": "Halve memory used by BloomFilter.java : readFrom()",
                "bodyHTML": "<p dir=\"auto\">guava/src/com/google/common/hash/BloomFilter.java</p>\n<p dir=\"auto\">readFrom allocates a temporary bitmap (data) of the size required, fills it and then passes that to new LockFreeBitArray(data) which allocates the same amount of memory and copies the bitmap (data) which is then discarded.<br>\nIf the bitmap (data) is say 100MB in size, then double that of memory used during this process (along with extra CPU in the copy).</p>\n<p dir=\"auto\">The readFrom could allocate the LockFreeBitArray(data) itself and read the data directly into that bitmap instead of using a temporary intermediate bitmap.</p>",
                "resourcePath": "/google/guava/issues/5770",
                "createdAt": "2021-11-02T21:14:41Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=hash"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "type=performance"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix Javadoc search on JDK 11:",
        "url": "https://github.com/google/guava/pull/5800",
        "resourcePath": "/google/guava/pull/5800",
        "createdAt": "2021-12-01T16:07:59Z",
        "number": 5800,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4vQja42gAoN2QxYzJmZmRlMmM5MzExYTlmZGIzZDAwNzY5OTI2OGM2NjAyMmYyYg",
                "url": "https://github.com/google/guava/pull/5800/commits/7d1c2ffde2c9311a9fdb3d007699268c66022f2b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5457,
                "url": "https://github.com/google/guava/issues/5457",
                "title": "Broken link in Javadoc",
                "bodyHTML": "<ol dir=\"auto\">\n<li>Go to <a href=\"https://guava.dev/releases/30.1.1-jre/api/docs/\" rel=\"nofollow\">https://guava.dev/releases/30.1.1-jre/api/docs/</a></li>\n<li>Search for \"unsignedbytes\"</li>\n<li>Get redirected to <a href=\"https://guava.dev/releases/30.1.1-jre/api/docs/undefined/com/google/common/primitives/UnsignedBytes.html\" rel=\"nofollow\">https://guava.dev/releases/30.1.1-jre/api/docs/undefined/com/google/common/primitives/UnsignedBytes.html</a> which returns HTTP 404.</li>\n</ol>",
                "resourcePath": "/google/guava/issues/5457",
                "createdAt": "2021-03-31T03:04:20Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix small style issues.",
        "url": "https://github.com/google/guava/pull/5802",
        "resourcePath": "/google/guava/pull/5802",
        "createdAt": "2021-12-01T18:44:11Z",
        "number": 5802,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-testlib/test/com/google/common/collect/testing/FeatureSpecificTestSuiteBuilderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-testlib/test/com/google/common/collect/testing/FeatureSpecificTestSuiteBuilderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4vRGMr2gAoMDE5MTBkNzI4NDVhYzk5Yzg5YzExZDhjNzJhNDEzNjAxNmYxNjVjMA",
                "url": "https://github.com/google/guava/pull/5802/commits/01910d72845ac99c89c11d8c72a4136016f165c0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5795,
                "url": "https://github.com/google/guava/issues/5795",
                "title": "Review code style in FeatureSpecificTestSuiteBuilderTest",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">testWasRun</code> should be private. Array type declaration should not look like this: <code class=\"notranslate\">boolean setUp[]</code></p>",
                "resourcePath": "/google/guava/issues/5795",
                "createdAt": "2021-11-29T06:52:47Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix Javadoc search on JDK 11:",
        "url": "https://github.com/google/guava/pull/5805",
        "resourcePath": "/google/guava/pull/5805",
        "createdAt": "2021-12-03T15:33:32Z",
        "number": 5805,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4vXhX52gAoNWMyYjY3ZDc1N2ZkMmUxN2RkMWFlNGZkOWEyZmZlNGM2ZGNkM2EyOQ",
                "url": "https://github.com/google/guava/pull/5805/commits/5c2b67d757fd2e17dd1ae4fd9a2ffe4c6dcd3a29"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5457,
                "url": "https://github.com/google/guava/issues/5457",
                "title": "Broken link in Javadoc",
                "bodyHTML": "<ol dir=\"auto\">\n<li>Go to <a href=\"https://guava.dev/releases/30.1.1-jre/api/docs/\" rel=\"nofollow\">https://guava.dev/releases/30.1.1-jre/api/docs/</a></li>\n<li>Search for \"unsignedbytes\"</li>\n<li>Get redirected to <a href=\"https://guava.dev/releases/30.1.1-jre/api/docs/undefined/com/google/common/primitives/UnsignedBytes.html\" rel=\"nofollow\">https://guava.dev/releases/30.1.1-jre/api/docs/undefined/com/google/common/primitives/UnsignedBytes.html</a> which returns HTTP 404.</li>\n</ol>",
                "resourcePath": "/google/guava/issues/5457",
                "createdAt": "2021-03-31T03:04:20Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove `@Beta` from a number of `com.google.common.testing` classes.",
        "url": "https://github.com/google/guava/pull/5824",
        "resourcePath": "/google/guava/pull/5824",
        "createdAt": "2021-12-13T22:57:54Z",
        "number": 5824,
        "mergeCommit": {
          "oid": "93a8f02f5601178273d0e38be418540f066bd405",
          "message": "Remove `@Beta` from a number of `com.google.common.testing` classes.\n\nFixes https://github.com/google/guava/issues/3452\n\nRELNOTES=Several classes in `com.google.common.testing` that were previously marked `@Beta` are now fully supported.\nPiperOrigin-RevId: 416320108",
          "commitUrl": "https://github.com/google/guava/commit/93a8f02f5601178273d0e38be418540f066bd405",
          "parents": {
            "nodes": [
              {
                "oid": "261ac7afbf04dce2bd7e20a2085338e1f9a857d8",
                "message": "De-beta APIs in com.google.common.net\n\nFixes https://github.com/google/guava/issues/3052\nFixes https://github.com/google/guava/issues/3414\nFixes https://github.com/google/guava/issues/3417\nFixes https://github.com/google/guava/issues/3423\n\nRELNOTES=`net`: Removed `@Beta` from APIs in net.\nPiperOrigin-RevId: 416312524"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3452,
                "url": "https://github.com/google/guava/issues/3452",
                "title": "Would you promote EqualsTester as not @Beta?",
                "bodyHTML": "<p dir=\"auto\">Would you promote EqualsTester as not <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/beta/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/beta\">@beta</a>?</p>\n<p dir=\"auto\">I think the class has been there for a while and I believe it has been useful for many users. Do you think it's good time to remove <code class=\"notranslate\">@Beta</code> from EqualsTester?</p>",
                "resourcePath": "/google/guava/issues/3452",
                "createdAt": "2019-05-03T13:13:11Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=testing"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "De-beta APIs in com.google.common.net",
        "url": "https://github.com/google/guava/pull/5826",
        "resourcePath": "/google/guava/pull/5826",
        "createdAt": "2021-12-14T16:21:57Z",
        "number": 5826,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/net/InternetDomainName.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/net/MediaType.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/net/PercentEscaper.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/net/HostAndPort.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/net/HostSpecifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/net/HttpHeaders.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/net/InetAddresses.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/net/InternetDomainName.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/net/MediaType.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/net/PercentEscaper.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4v1XMK2gAoYzU2MTNjOThhMGYxMmMxYzA3ZTgzOTFhZjYxMmU4YjY2NDUyMzFjYg",
                "url": "https://github.com/google/guava/pull/5826/commits/c5613c98a0f12c1c07e8391af612e8b6645231cb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3052,
                "url": "https://github.com/google/guava/issues/3052",
                "title": "De-beta-ify HostAndPort",
                "bodyHTML": "<p dir=\"auto\">Apache jclouds makes extensive use of HostAndPort.  Could you promote this?</p>",
                "resourcePath": "/google/guava/issues/3052",
                "createdAt": "2018-03-03T03:41:18Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=net"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 3414,
                "url": "https://github.com/google/guava/issues/3414",
                "title": "Remove @Beta from MediaType",
                "bodyHTML": "<p dir=\"auto\">Possible concerns:</p>\n<ul dir=\"auto\">\n<li>MediaType isn't lenient enough for real-world media types (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"47425788\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/1726\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/1726/hovercard\" href=\"https://github.com/google/guava/issues/1726\">#1726</a>).</li>\n<li>It's still arguably kind of sad that \"withParameter(s)\" deletes things.</li>\n<li>Do we have any hope that this would ever be suitable for use on Android? (And do enough people use/want it there that we'd bother?) We would at least need to convert the constants to static methods, but even then, we'd be pulling in a lot of code through ImmutableListMultimap, Multimaps.transformValues, and perhaps other APIs we use. (We could probably avoid transformValues if that's significant, but ImmutableListMultimap is baked deep in, and justifiably so.)</li>\n<li>We have an internal spreadsheet called \"Media Type Audit.\" I think it mostly covers features that we could add (without changing any existing API), but we could check.</li>\n</ul>",
                "resourcePath": "/google/guava/issues/3414",
                "createdAt": "2019-03-25T19:10:32Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=net"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 3417,
                "url": "https://github.com/google/guava/issues/3417",
                "title": "Remove @Beta from InetAddresses.forString",
                "bodyHTML": "<p dir=\"auto\">I'm not very familiar with this method, but I see issues that sound like they affect it:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"314732269\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/3116\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/3116/hovercard\" href=\"https://github.com/google/guava/issues/3116\">#3116</a></li>\n<li><del><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"180522000\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/2587\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/2587/hovercard\" href=\"https://github.com/google/guava/issues/2587\">#2587</a> (and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"47424922\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/1557\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/1557/hovercard\" href=\"https://github.com/google/guava/issues/1557\">#1557</a>?)</del></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"47425143\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/1604\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/1604/hovercard\" href=\"https://github.com/google/guava/issues/1604\">#1604</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"47421973\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/986\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/986/hovercard\" href=\"https://github.com/google/guava/issues/986\">#986</a></li>\n</ul>",
                "resourcePath": "/google/guava/issues/3417",
                "createdAt": "2019-03-25T19:24:46Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=net"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 3423,
                "url": "https://github.com/google/guava/issues/3423",
                "title": "Remove @Beta from InternetDomainName",
                "bodyHTML": "<p dir=\"auto\">I fear that we're not close here: <a href=\"https://github.com/google/guava/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+internetdomainname\">https://github.com/google/guava/issues?utf8=%E2%9C%93&amp;q=is%3Aissue+is%3Aopen+internetdomainname</a></p>\n<p dir=\"auto\">Plus, we have an old internal doc called \"Registry Suffixes in InternetDomainName\" that proposed splitting the class in two, which would be very involved.</p>",
                "resourcePath": "/google/guava/issues/3423",
                "createdAt": "2019-03-25T19:47:31Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=net"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove `@Beta` from APIs in `Files`. Add `@InlineMe` where we can.",
        "url": "https://github.com/google/guava/pull/5834",
        "resourcePath": "/google/guava/pull/5834",
        "createdAt": "2021-12-16T17:00:47Z",
        "number": 5834,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/io/Files.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/io/Resources.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/io/Files.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/io/Resources.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4v9iVR2gAoMmZhMDQyYmYzZjI3ZjY1NDRkYWJkNjRlMGZmNmRjODdlOGVhNmE5Mw",
                "url": "https://github.com/google/guava/pull/5834/commits/2fa042bf3f27f6544dabd64e0ff6dc87e8ea6a93"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3285,
                "url": "https://github.com/google/guava/issues/3285",
                "title": "Remove @Beta from Files",
                "bodyHTML": "<p dir=\"auto\">The <code class=\"notranslate\">Files</code> class has been around since 1.0, so it would be nice to remove it from beta.<br>\n(FYI, our main need at the moment is the <code class=\"notranslate\">asByteSource</code> method [related to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"367312224\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/3284\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/3284/hovercard\" href=\"https://github.com/google/guava/issues/3284\">#3284</a>]).</p>",
                "resourcePath": "/google/guava/issues/3285",
                "createdAt": "2018-10-05T18:05:14Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "package=io"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Do not allow `CacheLoader.loadAll` to modify the given set of keys.",
        "url": "https://github.com/google/guava/pull/5858",
        "resourcePath": "/google/guava/pull/5858",
        "createdAt": "2022-01-05T21:54:40Z",
        "number": 5858,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/cache/LocalCache.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/cache/LocalCache.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4wlPXV2gAoYWIzYjdhMmY1ODAzNjliOWQ1NTYzMjIzMzlkNmJhYjliMjk1MjcxMQ",
                "url": "https://github.com/google/guava/pull/5858/commits/ab3b7a2f580369b9d556322339d6bab9b2952711"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5810,
                "url": "https://github.com/google/guava/issues/5810",
                "title": "CacheLoader.loadAll should not be allowed to modify the keys",
                "bodyHTML": "<p dir=\"auto\">I noticed this mistake in Caffeine and my new tests fail for Guava. In both cases the mutable set of keys to load is provided to the user, who might downcast and add or remove an element. By doing so the loop iterating on them will not have the expected behavior. I believe wrapping with <code class=\"notranslate\">Collections.unmodifiableSet(set)</code> would be a simple change and it is doubtful anyone did this.</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/3072f4fe6dd57678886ba800efc9da4667abc366/guava/src/com/google/common/cache/LocalCache.java#L4034-L4043\">guava/guava/src/com/google/common/cache/LocalCache.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 4034 to 4043\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/guava/commit/3072f4fe6dd57678886ba800efc9da4667abc366\">3072f4f</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L4034\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4034\"></td>\n          <td id=\"LC4034\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (!<span class=\"pl-s1\">keysToLoad</span>.<span class=\"pl-en\">isEmpty</span>()) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4035\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4035\"></td>\n          <td id=\"LC4035\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-k\">try</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4036\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4036\"></td>\n          <td id=\"LC4036\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-smi\">Map</span>&lt;<span class=\"pl-smi\">K</span>, <span class=\"pl-smi\">V</span>&gt; <span class=\"pl-s1\">newEntries</span> = <span class=\"pl-en\">loadAll</span>(<span class=\"pl-s1\">keysToLoad</span>, <span class=\"pl-s1\">defaultLoader</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4037\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4037\"></td>\n          <td id=\"LC4037\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">K</span> <span class=\"pl-s1\">key</span> : <span class=\"pl-s1\">keysToLoad</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4038\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4038\"></td>\n          <td id=\"LC4038\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-smi\">V</span> <span class=\"pl-s1\">value</span> = <span class=\"pl-s1\">newEntries</span>.<span class=\"pl-en\">get</span>(<span class=\"pl-s1\">key</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4039\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4039\"></td>\n          <td id=\"LC4039\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">value</span> == <span class=\"pl-c1\">null</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4040\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4040\"></td>\n          <td id=\"LC4040\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">InvalidCacheLoadException</span>(<span class=\"pl-s\">\"loadAll failed to return a value for \"</span> + <span class=\"pl-s1\">key</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4041\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4041\"></td>\n          <td id=\"LC4041\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4042\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4042\"></td>\n          <td id=\"LC4042\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">       <span class=\"pl-s1\">result</span>.<span class=\"pl-en\">put</span>(<span class=\"pl-s1\">key</span>, <span class=\"pl-s1\">value</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L4043\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"4043\"></td>\n          <td id=\"LC4043\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>",
                "resourcePath": "/google/guava/issues/5810",
                "createdAt": "2021-12-05T02:00:50Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=cache"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Init `LockFreeBitArray` with length to reduce memory when deserializing `BloomFilter`.",
        "url": "https://github.com/google/guava/pull/5866",
        "resourcePath": "/google/guava/pull/5866",
        "createdAt": "2022-01-11T19:13:04Z",
        "number": 5866,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/hash/BloomFilter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/hash/BloomFilter.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4w0Tnc2gAoMjE0ZGVkOTdiYmQzMzFjODU2MjMwNmQ4NTA5YWQwMjA2NzFiMTNiNg",
                "url": "https://github.com/google/guava/pull/5866/commits/214ded97bbd331c8562306d8509ad020671b13b6"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5770,
                "url": "https://github.com/google/guava/issues/5770",
                "title": "Halve memory used by BloomFilter.java : readFrom()",
                "bodyHTML": "<p dir=\"auto\">guava/src/com/google/common/hash/BloomFilter.java</p>\n<p dir=\"auto\">readFrom allocates a temporary bitmap (data) of the size required, fills it and then passes that to new LockFreeBitArray(data) which allocates the same amount of memory and copies the bitmap (data) which is then discarded.<br>\nIf the bitmap (data) is say 100MB in size, then double that of memory used during this process (along with extra CPU in the copy).</p>\n<p dir=\"auto\">The readFrom could allocate the LockFreeBitArray(data) itself and read the data directly into that bitmap instead of using a temporary intermediate bitmap.</p>",
                "resourcePath": "/google/guava/issues/5770",
                "createdAt": "2021-11-02T21:14:41Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=hash"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "type=performance"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Init `LockFreeBitArray` with length to reduce memory when deserializing `BloomFilter`.",
        "url": "https://github.com/google/guava/pull/5869",
        "resourcePath": "/google/guava/pull/5869",
        "createdAt": "2022-01-13T16:51:31Z",
        "number": 5869,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/hash/BloomFilterTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/hash/BloomFilter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/hash/BloomFilterStrategies.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/hash/BloomFilterTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/hash/BloomFilter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/hash/BloomFilterStrategies.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4w8mpW2gAoZDQ4YTE2MzRjODYwYTI2ZDQ3NTJmYTk5NTNlNzUyNGU3ZGQxM2I4MQ",
                "url": "https://github.com/google/guava/pull/5869/commits/d48a1634c860a26d4752fa9953e7524e7dd13b81"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5770,
                "url": "https://github.com/google/guava/issues/5770",
                "title": "Halve memory used by BloomFilter.java : readFrom()",
                "bodyHTML": "<p dir=\"auto\">guava/src/com/google/common/hash/BloomFilter.java</p>\n<p dir=\"auto\">readFrom allocates a temporary bitmap (data) of the size required, fills it and then passes that to new LockFreeBitArray(data) which allocates the same amount of memory and copies the bitmap (data) which is then discarded.<br>\nIf the bitmap (data) is say 100MB in size, then double that of memory used during this process (along with extra CPU in the copy).</p>\n<p dir=\"auto\">The readFrom could allocate the LockFreeBitArray(data) itself and read the data directly into that bitmap instead of using a temporary intermediate bitmap.</p>",
                "resourcePath": "/google/guava/issues/5770",
                "createdAt": "2021-11-02T21:14:41Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=hash"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "type=performance"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Change access modifier of the Strategy interface to public, so that users can customize flexible Strategies",
        "url": "https://github.com/google/guava/pull/5870",
        "resourcePath": "/google/guava/pull/5870",
        "createdAt": "2022-01-14T10:12:57Z",
        "number": 5870,
        "mergeCommit": null,
        "potentialMergeCommit": {
          "oid": "1cd5294fa90d3a54326fc5cc59e0d97d9165c2c4",
          "message": "Merge 4a934edde323148083aa00b76d6993ef9aa9e23d into 8f212ba60a83c5c9a85f08a4fc049bad2abd91e2",
          "commitUrl": "https://github.com/google/guava/commit/1cd5294fa90d3a54326fc5cc59e0d97d9165c2c4",
          "parents": {
            "nodes": [
              {
                "oid": "8f212ba60a83c5c9a85f08a4fc049bad2abd91e2",
                "message": "Add missing `@since` tag for `merge` in `TreeRangeMap` and `ImmutableRangeMap`.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 630655296"
              },
              {
                "oid": "4a934edde323148083aa00b76d6993ef9aa9e23d",
                "message": "Change access modifier of the Strategy interface to Public,so that users can customize flexible Strategies"
              }
            ]
          }
        },
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/base/Splitter.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4xBcn42gAoNGE5MzRlZGRlMzIzMTQ4MDgzYWEwMGI3NmQ2OTkzZWY5YWE5ZTIzZA",
                "url": "https://github.com/google/guava/pull/5870/commits/4a934edde323148083aa00b76d6993ef9aa9e23d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5850,
                "url": "https://github.com/google/guava/issues/5850",
                "title": "It is necessary to set Strategy in Splitter to public so that users can customize flexible Strategies.",
                "bodyHTML": "<p dir=\"auto\">It is necessary to set Strategy in Splitter to public\uff0cso that users can customize flexible Strategies.<br>\n<code class=\"notranslate\">public interface Strategy { Iterator&lt;String&gt; iterator(Splitter splitter, CharSequence toSplit); }</code></p>\n<p dir=\"auto\">Or provide other ways for users to programmatically define Strategies.<br>\nOtherwise we would have been seeing some of the following requirements, some of which I really needed</p>\n<p dir=\"auto\"><a href=\"https://github.com/google/guava/issues/3491\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/3491/hovercard\">#3491</a>\u3001<a href=\"https://github.com/google/guava/issues/1900\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/1900/hovercard\">#1900</a>\u3001... ...</p>\n<p dir=\"auto\">more issues see: <a href=\"https://github.com/google/guava/issues?q=is%3Aissue+is%3Aopen+splitter\">Splitter related issues</a></p>",
                "resourcePath": "/google/guava/issues/5850",
                "createdAt": "2021-12-27T01:59:29Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "package=base"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "#5842 stopTimers capture in ServiceManager",
        "url": "https://github.com/google/guava/pull/5873",
        "resourcePath": "/google/guava/pull/5873",
        "createdAt": "2022-01-17T17:20:47Z",
        "number": 5873,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/util/concurrent/ServiceManagerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/util/concurrent/ServiceManager.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4xKYO52gAoOGM5NmY0ZmViN2VlYjVkOGZkMWM3YmY4MzZlODg5N2Y2ZTE2OWE5Yw",
                "url": "https://github.com/google/guava/pull/5873/commits/8c96f4feb7eeb5d8fd1c7bf836e8897f6e169a9c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5842,
                "url": "https://github.com/google/guava/issues/5842",
                "title": "Provide ServiceManager.stopTimes() to enable debugging slow ServiceManager shutdowns",
                "bodyHTML": "<p dir=\"auto\">Consider providing <code class=\"notranslate\">ServiceManager.stopTimes()</code> to enable debugging slow ServiceManager shutdowns.</p>\n<p dir=\"auto\">There currently exists <code class=\"notranslate\">serviceManager.startupTimes()</code> for startup time, this would be the equivalent for the shutdown process.</p>",
                "resourcePath": "/google/guava/issues/5842",
                "createdAt": "2021-12-22T02:15:58Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=addition"
                      }
                    },
                    {
                      "node": {
                        "name": "package=concurrent"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove `@Beta` from various Escapers and Escaper accessories.",
        "url": "https://github.com/google/guava/pull/5876",
        "resourcePath": "/google/guava/pull/5876",
        "createdAt": "2022-01-18T17:19:26Z",
        "number": 5876,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5744,
                "url": "https://github.com/google/guava/issues/5744",
                "title": "Remove @Beta from XmlEscapers",
                "bodyHTML": "<p dir=\"auto\">9 years ago com.google.common.xml.XmlEscapers was marked as Beta. Maybe 2021 is the good year to remove this annotation?</p>",
                "resourcePath": "/google/guava/issues/5744",
                "createdAt": "2021-09-30T21:01:15Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Import PR https://github.com/google/guava/pull/5877: Unify unmodifiable map behavior",
        "url": "https://github.com/google/guava/pull/5889",
        "resourcePath": "/google/guava/pull/5889",
        "createdAt": "2022-01-21T19:45:47Z",
        "number": 5889,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/collect/MapsTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Maps.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4xZyeg2gAoMzAzNmY3M2ExYWNlZTIxNGRkOTllZTZmYThmOGJkM2RkZTk5NDliOA",
                "url": "https://github.com/google/guava/pull/5889/commits/3036f73a1acee214dd99ee6fa8f8bd3dde9949b8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5874,
                "url": "https://github.com/google/guava/issues/5874",
                "title": "Inconsistency in behavior between unmodifiable and immutable maps",
                "bodyHTML": "<p dir=\"auto\">Hi, it might be not a real issue, but I am just rising it.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// JDK\n\nfinal TreeMap&lt;Integer, String&gt; baseMap = new TreeMap&lt;&gt;() {{put(1, &quot;one&quot;);}};\n\nfinal NavigableMap&lt;Object, Object&gt; jdkUnmodifiableNavigableMap = Collections.unmodifiableNavigableMap(baseMap);\njdkUnmodifiableNavigableMap.compute(null, (k, v) -&gt; v);\n\nfinal SortedMap&lt;Object, Object&gt; jdkUnmodifiableSortedMap = Collections.unmodifiableSortedMap(baseMap);\njdkUnmodifiableSortedMap.compute(null, (k, v) -&gt; v);\n\nfinal Map&lt;Object, Object&gt; jdkUnmodifiableMap = Collections.unmodifiableMap(baseMap);\njdkUnmodifiableMap.compute(null, (k, v) -&gt; v);\n\nfinal Map&lt;Integer, String&gt; jdk11_ImmutableMap = Map.of(1, &quot;one&quot;);\njdk11_ImmutableMap.compute(null, (k, v) -&gt; v);\n\n// Guava\n\nfinal ImmutableMap&lt;Integer, String&gt; immutableMap = ImmutableMap.of(1, &quot;one&quot;);\nimmutableMap.compute(null, (k, v) -&gt; v);\n\nfinal ImmutableSortedMap&lt;Integer, String&gt; guavaImmutableSortedMap = ImmutableSortedMap.of(1, &quot;one&quot;);\nguavaImmutableSortedMap.compute(null, (k, v) -&gt; v);\"><pre class=\"notranslate\"><span class=\"pl-c\">// JDK</span>\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">TreeMap</span>&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">baseMap</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">TreeMap</span>&lt;&gt;() {{<span class=\"pl-en\">put</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\">\"one\"</span>);}};\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">NavigableMap</span>&lt;<span class=\"pl-smi\">Object</span>, <span class=\"pl-smi\">Object</span>&gt; <span class=\"pl-s1\">jdkUnmodifiableNavigableMap</span> = <span class=\"pl-smi\">Collections</span>.<span class=\"pl-en\">unmodifiableNavigableMap</span>(<span class=\"pl-s1\">baseMap</span>);\n<span class=\"pl-s1\">jdkUnmodifiableNavigableMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">SortedMap</span>&lt;<span class=\"pl-smi\">Object</span>, <span class=\"pl-smi\">Object</span>&gt; <span class=\"pl-s1\">jdkUnmodifiableSortedMap</span> = <span class=\"pl-smi\">Collections</span>.<span class=\"pl-en\">unmodifiableSortedMap</span>(<span class=\"pl-s1\">baseMap</span>);\n<span class=\"pl-s1\">jdkUnmodifiableSortedMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Map</span>&lt;<span class=\"pl-smi\">Object</span>, <span class=\"pl-smi\">Object</span>&gt; <span class=\"pl-s1\">jdkUnmodifiableMap</span> = <span class=\"pl-smi\">Collections</span>.<span class=\"pl-en\">unmodifiableMap</span>(<span class=\"pl-s1\">baseMap</span>);\n<span class=\"pl-s1\">jdkUnmodifiableMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Map</span>&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">jdk11_ImmutableMap</span> = <span class=\"pl-smi\">Map</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\">\"one\"</span>);\n<span class=\"pl-s1\">jdk11_ImmutableMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);\n\n<span class=\"pl-c\">// Guava</span>\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">ImmutableMap</span>&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">immutableMap</span> = <span class=\"pl-smi\">ImmutableMap</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\">\"one\"</span>);\n<span class=\"pl-s1\">immutableMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);\n\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">ImmutableSortedMap</span>&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">guavaImmutableSortedMap</span> = <span class=\"pl-smi\">ImmutableSortedMap</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\">\"one\"</span>);\n<span class=\"pl-s1\">guavaImmutableSortedMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);</pre></div>\n<p dir=\"auto\">and other immutable maps from guava will throw</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.UnsupportedOperationException\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.UnsupportedOperationException\n</code></pre></div>\n<p dir=\"auto\">At the same time there are 2 implementations in Guava library that have slightly different behavior:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"final TreeMap&lt;Integer, String&gt; baseMap = new TreeMap&lt;&gt;() {{put(1, &quot;one&quot;);}};\nfinal NavigableMap&lt;Object, Object&gt; guavaUnmodifiableNavigableMap = Maps.unmodifiableNavigableMap(baseMap);\nguavaUnmodifiableNavigableMap.compute(null, (k, v) -&gt; v);\"><pre class=\"notranslate\"><span class=\"pl-k\">final</span> <span class=\"pl-smi\">TreeMap</span>&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">baseMap</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">TreeMap</span>&lt;&gt;() {{<span class=\"pl-en\">put</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\">\"one\"</span>);}};\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">NavigableMap</span>&lt;<span class=\"pl-smi\">Object</span>, <span class=\"pl-smi\">Object</span>&gt; <span class=\"pl-s1\">guavaUnmodifiableNavigableMap</span> = <span class=\"pl-smi\">Maps</span>.<span class=\"pl-en\">unmodifiableNavigableMap</span>(<span class=\"pl-s1\">baseMap</span>);\n<span class=\"pl-s1\">guavaUnmodifiableNavigableMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);</pre></div>\n<p dir=\"auto\">will throw</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.NullPointerException\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.NullPointerException\n</code></pre></div>\n<p dir=\"auto\">And the other one will just silently go through.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"final BiMap&lt;Integer, String&gt; baseBiMap = HashBiMap.create();\nbaseBiMap.put(1, &quot;one&quot;);\nfinal BiMap&lt;Integer, String&gt; unmodifiableBiMap = Maps.unmodifiableBiMap(baseBiMap);\nunmodifiableBiMap.compute(null, (k, v) -&gt; v);\"><pre class=\"notranslate\"><span class=\"pl-k\">final</span> <span class=\"pl-smi\">BiMap</span>&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">baseBiMap</span> = <span class=\"pl-smi\">HashBiMap</span>.<span class=\"pl-en\">create</span>();\n<span class=\"pl-s1\">baseBiMap</span>.<span class=\"pl-en\">put</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s\">\"one\"</span>);\n<span class=\"pl-k\">final</span> <span class=\"pl-smi\">BiMap</span>&lt;<span class=\"pl-smi\">Integer</span>, <span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">unmodifiableBiMap</span> = <span class=\"pl-smi\">Maps</span>.<span class=\"pl-en\">unmodifiableBiMap</span>(<span class=\"pl-s1\">baseBiMap</span>);\n<span class=\"pl-s1\">unmodifiableBiMap</span>.<span class=\"pl-en\">compute</span>(<span class=\"pl-c1\">null</span>, (<span class=\"pl-s1\">k</span>, <span class=\"pl-s1\">v</span>) -&gt; <span class=\"pl-s1\">v</span>);</pre></div>\n<p dir=\"auto\">I am not sure if this has been done on purpose by design or was just simply overseen. Happy to contribute if you would qualify it as a something to be changed.</p>",
                "resourcePath": "/google/guava/issues/5874",
                "createdAt": "2022-01-17T20:40:34Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status=fixed"
                      }
                    },
                    {
                      "node": {
                        "name": "type=enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "platform=java8"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add a `constrain` method to Range.",
        "url": "https://github.com/google/guava/pull/5892",
        "resourcePath": "/google/guava/pull/5892",
        "createdAt": "2022-01-22T20:27:34Z",
        "number": 5892,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/collect/RangeTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Range.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4xcrJv2gAoMzQyMzgyZjBlMDdiMmZjMDU4YzkxY2M0NGNlOTY1OTA1ZmU3NWMzOQ",
                "url": "https://github.com/google/guava/pull/5892/commits/342382f0e07b2fc058c91cc44ce965905fe75c39"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5882,
                "url": "https://github.com/google/guava/issues/5882",
                "title": "Add a `constrain` method to Range",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">com.google.common.primitives.Ints</code> already has the very useful <code class=\"notranslate\">static int constrainToRange(int value, int min, int max)</code>. It would be nice to add this as a method to the <code class=\"notranslate\">Range</code> class.</p>\n<p dir=\"auto\">Two advantages:</p>\n<ol dir=\"auto\">\n<li>This would be generically available to any <code class=\"notranslate\">Comparable</code> type.</li>\n<li>It just reads better- compare <code class=\"notranslate\">Range.closed(3,9).constrain(4)</code> vs <code class=\"notranslate\">Ints.constrainToRange(3,4,9)</code>. In the latter case it's not immediately clear which parameter is the input and which are the bounds, but in the former it's super obvious.</li>\n</ol>\n<p dir=\"auto\">One problem is; what should the output of <code class=\"notranslate\">Range.greaterThan(3).constrain(1)</code> be?</p>\n<ul dir=\"auto\">\n<li>On one hand, it seems like <code class=\"notranslate\">myRange.contains(myRange.constrain(x))</code>should always be <code class=\"notranslate\">true</code>, so maybe we should throw an <code class=\"notranslate\">IllegalArgumentException</code> if the <em>exceeded</em> bound is open.</li>\n<li>On the other hand, <code class=\"notranslate\">(3...5].constrain(1) = 3</code> doesn't seem entirely unreasonable either.</li>\n</ul>",
                "resourcePath": "/google/guava/issues/5882",
                "createdAt": "2022-01-19T22:48:50Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=addition"
                      }
                    },
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "stopTimers capture in ServiceManager",
        "url": "https://github.com/google/guava/pull/5903",
        "resourcePath": "/google/guava/pull/5903",
        "createdAt": "2022-01-28T23:04:14Z",
        "number": 5903,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/util/concurrent/ServiceManagerTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/util/concurrent/ServiceManager.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4xw0Vb2gAoNWQzMGIzNWM3MDk0ZjczYTYwZDEzZjQ3ODYxZWQzMWI2Mjc2YjM1ZA",
                "url": "https://github.com/google/guava/pull/5903/commits/5d30b35c7094f73a60d13f47861ed31b6276b35d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5842,
                "url": "https://github.com/google/guava/issues/5842",
                "title": "Provide ServiceManager.stopTimes() to enable debugging slow ServiceManager shutdowns",
                "bodyHTML": "<p dir=\"auto\">Consider providing <code class=\"notranslate\">ServiceManager.stopTimes()</code> to enable debugging slow ServiceManager shutdowns.</p>\n<p dir=\"auto\">There currently exists <code class=\"notranslate\">serviceManager.startupTimes()</code> for startup time, this would be the equivalent for the shutdown process.</p>",
                "resourcePath": "/google/guava/issues/5842",
                "createdAt": "2021-12-22T02:15:58Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=addition"
                      }
                    },
                    {
                      "node": {
                        "name": "package=concurrent"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Bump actions/cache from 2.1.7 to 3.",
        "url": "https://github.com/google/guava/pull/5979",
        "resourcePath": "/google/guava/pull/5979",
        "createdAt": "2022-03-21T19:00:43Z",
        "number": 5979,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc40wya12gAoMWIwYTg5MDhmNWU5MjRlNzk1NDQzNDUyODM0NWM1MjNkNTA0NGZmYg",
                "url": "https://github.com/google/guava/pull/5979/commits/1b0a8908f5e924e7954434528345c523d5044ffb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5798,
                "url": "https://github.com/google/guava/issues/5798",
                "title": "Apply JANITOR to generated Javadoc to resurrect frames-like experience to allow browsing",
                "bodyHTML": "<p dir=\"auto\">Newer Javadoc has done away with HTML frames, which means it's much harder to browse available classes. This is especially damaging for a project like Guava which tends to provide lots of good stuff you don't even know about.</p>\n<p dir=\"auto\">See <a href=\"https://stackoverflow.com/questions/51992347/missing-iframe-view-for-javadocs-jdk-11\" rel=\"nofollow\">this stackoverflow thread</a>.</p>\n<p dir=\"auto\">This change has disgusted many developers including me.</p>\n<p dir=\"auto\">There is a workaround available though: See <a href=\"https://stackoverflow.com/a/59423977/263801\" rel=\"nofollow\">this reply</a>.</p>\n<p dir=\"auto\">Feature request: apply the <a href=\"https://gitlab.com/gerib/userscripts/-/wikis/JANITOR-%E2%80%93-Java-API-Navigation-Is-The-Only-Rescue\" rel=\"nofollow\">JANITOR</a> fixup (or some equivalent) to the generated Javadocs so people can browse the API docs again.</p>",
                "resourcePath": "/google/guava/issues/5798",
                "createdAt": "2021-11-30T16:10:18Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P4"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": " feat: use build-in cache in actions/setup-java",
        "url": "https://github.com/google/guava/pull/6036",
        "resourcePath": "/google/guava/pull/6036",
        "createdAt": "2022-05-03T13:51:16Z",
        "number": 6036,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc43Osf12gAoYWE2YzFmMTU2NDBkYzZkM2FjMzVmNmRhYzRiYmVmODhiODg4MmE2Mg",
                "url": "https://github.com/google/guava/pull/6036/commits/aa6c1f15640dc6d3ac35f6dac4bbef88b8882a62"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6035,
                "url": "https://github.com/google/guava/issues/6035",
                "title": "Use build-in cache in actions/setup-java and remove actions/cache",
                "bodyHTML": "<p dir=\"auto\">The actions <a href=\"https://github.com/actions/setup-java\">setup-java</a> had built-in caching and restoring dependencies in it by <a href=\"https://github.com/actions/cache\">actions/cache</a>. details can refer it's <a href=\"https://github.com/actions/setup-java#caching-packages-dependencies\">main page</a></p>\n<p dir=\"auto\">so <code class=\"notranslate\">actions/cache</code> can be replaced by add a k-v pair <code class=\"notranslate\">cache: 'maven'</code> in config of <code class=\"notranslate\">actions/setup-java</code></p>",
                "resourcePath": "/google/guava/issues/6035",
                "createdAt": "2022-05-03T13:50:16Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": " feat: use build-in cache in actions/setup-java",
        "url": "https://github.com/google/guava/pull/6037",
        "resourcePath": "/google/guava/pull/6037",
        "createdAt": "2022-05-03T14:39:59Z",
        "number": 6037,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc43O4qV2gAoN2VmNTQ5YTkxMGIxYmRlZjcwNTBkNTBjYmY1NjVkZjdjMWRmZWQ0NQ",
                "url": "https://github.com/google/guava/pull/6037/commits/7ef549a910b1bdef7050d50cbf565df7c1dfed45"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6035,
                "url": "https://github.com/google/guava/issues/6035",
                "title": "Use build-in cache in actions/setup-java and remove actions/cache",
                "bodyHTML": "<p dir=\"auto\">The actions <a href=\"https://github.com/actions/setup-java\">setup-java</a> had built-in caching and restoring dependencies in it by <a href=\"https://github.com/actions/cache\">actions/cache</a>. details can refer it's <a href=\"https://github.com/actions/setup-java#caching-packages-dependencies\">main page</a></p>\n<p dir=\"auto\">so <code class=\"notranslate\">actions/cache</code> can be replaced by add a k-v pair <code class=\"notranslate\">cache: 'maven'</code> in config of <code class=\"notranslate\">actions/setup-java</code></p>",
                "resourcePath": "/google/guava/issues/6035",
                "createdAt": "2022-05-03T13:50:16Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Enable Error Prone for Maven builds.",
        "url": "https://github.com/google/guava/pull/6128",
        "resourcePath": "/google/guava/pull/6128",
        "createdAt": "2022-08-04T00:49:33Z",
        "number": 6128,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-testlib/src/com/google/common/collect/testing/Platform.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/reflect/TypeTokenResolutionTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/reflect/TypeTokenSubtypeTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/reflect/TypeTokenTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-testlib/src/com/google/common/collect/testing/Platform.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/reflect/TypeTokenResolutionTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/reflect/TypeTokenSubtypeTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/reflect/TypeTokenTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc48nSOa2gAoYzU1YzBlNzA2OTNiN2MyYzM1YWEyZjI2Y2Y3NGE2OGQzODNlZDBmYg",
                "url": "https://github.com/google/guava/pull/6128/commits/c55c0e70693b7c2c35aa2f26cf74a68d383ed0fb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2484,
                "url": "https://github.com/google/guava/issues/2484",
                "title": "Build with javac-with-errorprone",
                "bodyHTML": "<p dir=\"auto\">We use it internally. It would be nice for external contributors if we extended that to our open-source build. And it would set a good example. Possibly we could even turn on some compile errors that haven't been enabled for all of Google. Further, this may make it easier for us to switch from Animal Sniffer to the (currently internal but maybe to be released someday?) Error Prone version checker.</p>",
                "resourcePath": "/google/guava/issues/2484",
                "createdAt": "2016-05-19T15:36:30Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Attempt to improve documentation of `@ParametricNullness`.",
        "url": "https://github.com/google/guava/pull/6145",
        "resourcePath": "/google/guava/pull/6145",
        "createdAt": "2022-08-10T21:08:55Z",
        "number": 6145,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/graph/ParametricNullness.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/hash/ParametricNullness.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/html/ParametricNullness.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/io/ParametricNullness.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/math/ParametricNullness.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/net/ParametricNullness.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/primitives/ParametricNullness.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/reflect/ParametricNullness.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/util/concurrent/ParametricNullness.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/xml/ParametricNullness.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc48_O4k2gAoZjFkY2JlN2M5ODE3MDk5NjY2YjkzMDdhN2RhMGYwYWQ3NmM5N2Y0YQ",
                "url": "https://github.com/google/guava/pull/6145/commits/f1dcbe7c9817099666b9307a7da0f0ad76c97f4a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6126,
                "url": "https://github.com/google/guava/issues/6126",
                "title": "Nullness javadocs are unclear and break certain static analyzers",
                "bodyHTML": "<p dir=\"auto\">I'm looking at the changes in 31.0 for enhanced null-checking, and I'm trying to validate that my understanding of the change is correct and bring attention to some issues I am having with the approach.</p>\n<p dir=\"auto\">As an example, let's look at one of the methods that changed from 30 to 31: <code class=\"notranslate\">Iterables.findFirst()</code>. Comparing the signatures in javadoc we have:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://guava.dev/releases/31.1-jre/api/docs/com/google/common/collect/Iterables.html#getFirst(java.lang.Iterable,T)\" rel=\"nofollow\">31</a>: <code class=\"notranslate\">public static &lt;T extends @Nullable Object&gt; T getFirst(Iterable&lt;? extends T&gt; iterable, T defaultValue)</code></li>\n<li><a href=\"https://guava.dev/releases/30.1-jre/api/docs/com/google/common/collect/Iterables.html#getFirst(java.lang.Iterable,T)\" rel=\"nofollow\">30</a>: <code class=\"notranslate\">public static &lt;T&gt; @Nullable T getFirst\u200b(Iterable&lt;? extends T&gt; iterable, @Nullable T defaultValue)</code></li>\n</ul>\n<p dir=\"auto\">If I understand correctly, nothing has changed in the contract, and in both versions the returned object can be null, the <code class=\"notranslate\">defaultValue</code> can be null and the <code class=\"notranslate\">iterable</code> cannot be null. The issues we are having are as follows:</p>\n<ol dir=\"auto\">\n<li>This seems fairly hostile to some of the static analysis tools on the market as they have to change their implementation logic to inspect the Generic type of the method/class rather than looking at the parameter or method annotations. We are using <a href=\"https://github.com/uber/NullAway\">Nullaway</a>, and when upgrading to guava 31 previously working code is now broken. While the release notes indeed <a href=\"https://github.com/google/guava/releases/tag/v31.0\">call this out</a> it's unobvious that this should cause more false positives rather than just identifying more issues because more information is being shared: <em>\"By providing additional nullness information, this release may result in more errors or warnings from any nullness analyzers you might use.\"</em> The issue isn't that we're receiving more nullness information, but that the contract for that how that information is being provided has changed. As an example this code now causes an issue: <code class=\"notranslate\">@Nullable String value = Iterables.getFirst(ImmutableList.&lt;String&gt;of(), null)</code> because it appears to the static analyzer that second parameter of <code class=\"notranslate\">Iterable#getFirst</code> is null hostile even though this is correct code.</li>\n<li>This makes it difficult to read the javadoc for non-static methods like <a href=\"https://guava.dev/releases/31.0-jre/api/docs/com/google/common/util/concurrent/FutureCallback.html#onSuccess(V)\" rel=\"nofollow\">FutureCallback#onSuccess</a>. I can no longer look at this method and understand the nullness convention because there is no information in the method that <code class=\"notranslate\">V</code> is actually nullable. I have to look at the class signature itself. Compare this to the <a href=\"https://guava.dev/releases/30.1-jre/api/docs/com/google/common/util/concurrent/FutureCallback.html#onSuccess(V)\" rel=\"nofollow\">old javadoc</a>. Even for static methods, it's unclear that the Nullable actually applies to instances of type <code class=\"notranslate\">T</code> in the signature as the annotation is on the base type <code class=\"notranslate\">Object</code>. Is this a common java convention that I just haven't seen before?</li>\n<li>It's seems strange in light of the <a href=\"https://guava.dev/releases/31.1-jre/api/docs/com/google/common/collect/package-summary.html\" rel=\"nofollow\">package annotation</a> of <a href=\"https://www.javadoc.io/doc/com.google.code.findbugs/jsr305/3.0.1/javax/annotation/ParametersAreNonnullByDefault.html\" rel=\"nofollow\">ParametersAreNonnullByDefault</a> the definition which calls out that \"to indicate that the method parameters in that element are nonnull by default unless there is ... An explicit nullness annotation.\" It's unobvious that the nullness parameter on the generic type of the method or class count as an explicit nullness annotation (but I am curious whether this was the intent of the JSR authors).</li>\n</ol>\n<p dir=\"auto\">There are a couple other questions I have (how does this convention apply when there is a non-null param and a nullable return, or vice versa) but the ones above are the most pressing.</p>",
                "resourcePath": "/google/guava/issues/6126",
                "createdAt": "2022-08-02T04:27:49Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "fix: fix unreleased resource.",
        "url": "https://github.com/google/guava/pull/6179",
        "resourcePath": "/google/guava/pull/6179",
        "createdAt": "2022-09-20T07:14:59Z",
        "number": 6179,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/io/FileBackedOutputStream.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4_QA222gAoYmI1MWYzNDIxMmZiOGNlYzNkYmM2MDdjYzA5NTczOWFiMmQ5ODQ3Mg",
                "url": "https://github.com/google/guava/pull/6179/commits/bb51f34212fb8cec3dbc607cc095739ab2d98472"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5756,
                "url": "https://github.com/google/guava/issues/5756",
                "title": "unreleased resource : streams",
                "bodyHTML": "<p dir=\"auto\">com/google/common/io/filebackedoutputstream     235line</p>\n<blockquote>\n<p dir=\"auto\">FileOutputstream transfer=new FileOutputStream(temp)\uff1b</p>\n</blockquote>",
                "resourcePath": "/google/guava/issues/5756",
                "createdAt": "2021-10-18T08:51:17Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=io"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix Spliterator implementations for sorted collections",
        "url": "https://github.com/google/guava/pull/6188",
        "resourcePath": "/google/guava/pull/6188",
        "createdAt": "2022-09-28T20:23:28Z",
        "number": 6188,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/CollectSpliterators.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/ImmutableSortedSet.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc4_zqYK2gAoOGY3NTRmZmU0NmJiZTMwYmRmZGY5NGEwMDI3ZjNlM2FhZjQ4ZmE1NA",
                "url": "https://github.com/google/guava/pull/6188/commits/8f754ffe46bbe30bdfdf94a0027f3e3aaf48fa54"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6187,
                "url": "https://github.com/google/guava/issues/6187",
                "title": "Spliterators for sorted collections cause inefficient stream operations when natural ordering is used",
                "bodyHTML": "<p dir=\"auto\">The Spliterators returned by sorted collections such as <code class=\"notranslate\">ImmutableSortedSet</code> and <code class=\"notranslate\">RegularImmutableAsList</code> result in unnecessary sorting occurring when a sort operation is performed on their associated Stream. The root cause is that the<br>\nSpliterators' <code class=\"notranslate\">getComparator()</code> implementations always return a <code class=\"notranslate\">Comparator</code> instance, even when natural ordering is used.</p>\n<p dir=\"auto\">According to the <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/Spliterator.html#getComparator--\" rel=\"nofollow\">Javadoc</a>, <code class=\"notranslate\">null</code> should be returned by <code class=\"notranslate\">getComparator()</code> to indicate the source items are sorted in natural order.</p>\n<p dir=\"auto\">You can see <a href=\"https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/StreamOpFlag.java#L751-L755\">here</a> that the <code class=\"notranslate\">SORTED</code> flag gets unset when a spliterator has the <code class=\"notranslate\">SORTED</code> characteristic but does not return a <code class=\"notranslate\">null</code> comparator. And <a href=\"https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/stream/SortedOps.java#L136-L139\">here</a> is where the missed optimization happens due to that.</p>\n<p dir=\"auto\">The issue is trivially reproducible by doing the following, and stepping through the code in SortedOps where the expected no-op / optimization would ideally happen:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"ImmutableSortedSet&lt;Integer&gt; sortedSet = ImmutableSortedSet.of(1, 2, 3, 4);\n// sorted should be a no-op, but isn't because ImmutableSortedSet's Spliterator does not return a null comparator.\nsortedSet.stream().sorted().collect(Collectors.toList());\"><pre class=\"notranslate\"><span class=\"pl-smi\">ImmutableSortedSet</span>&lt;<span class=\"pl-smi\">Integer</span>&gt; <span class=\"pl-s1\">sortedSet</span> = <span class=\"pl-smi\">ImmutableSortedSet</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>);\n<span class=\"pl-c\">// sorted should be a no-op, but isn't because ImmutableSortedSet's Spliterator does not return a null comparator.</span>\n<span class=\"pl-s1\">sortedSet</span>.<span class=\"pl-en\">stream</span>().<span class=\"pl-en\">sorted</span>().<span class=\"pl-en\">collect</span>(<span class=\"pl-smi\">Collectors</span>.<span class=\"pl-en\">toList</span>());</pre></div>",
                "resourcePath": "/google/guava/issues/6187",
                "createdAt": "2022-09-28T20:15:41Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "type=performance"
                      }
                    },
                    {
                      "node": {
                        "name": "P4"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make the build work under more JDK versions.",
        "url": "https://github.com/google/guava/pull/6243",
        "resourcePath": "/google/guava/pull/6243",
        "createdAt": "2022-11-15T20:14:43Z",
        "number": 6243,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5C9Rd62gAoNzZhMGE1OTYyODBkMWY1NjlkMjU5NGRjZmE1MzA0MmM1NGEwNGIwNw",
                "url": "https://github.com/google/guava/pull/6243/commits/76a0a596280d1f569d2594dcfa53042c54a04b07"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5801,
                "url": "https://github.com/google/guava/issues/5801",
                "title": "Run tests under Java 17",
                "bodyHTML": "<p dir=\"auto\">We would want to detect anything that breaks with more recent versions than what we currently test with (Java 11).</p>\n<p dir=\"auto\">To do so, I'm told that we'll have to omit the <code class=\"notranslate\">--no-module-directories</code> option that we're likely adding in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1068593361\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/5800\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/google/guava/pull/5800/hovercard\" href=\"https://github.com/google/guava/pull/5800\">#5800</a>, just as we'll have to have found a way to omit it under Java <em>8</em>.</p>\n<p dir=\"auto\">I think that's fine, as I think we're using it only to work around a JDK11(?) bug that was fixed in JDK13(?): <a href=\"https://bugs.openjdk.java.net/browse/JDK-8215582\" rel=\"nofollow\">https://bugs.openjdk.java.net/browse/JDK-8215582</a></p>\n<p dir=\"auto\">After that, I see issues because we pass the JDK sources to our Javadoc generation (so that <code class=\"notranslate\">@inheritDoc</code> works for JDK classes). We've seen this before, though we just <a href=\"https://github.com/google/guava/commit/79983a915f6c37bda832b37ab6f9e7ac09c57388#diff-6cfc723e311703fd7b9a713e48e221e5a32745a7c82058b1cb6125ccb2c420fe\">omitted files to work around it</a>. (Maybe we'd want to <em>rewrite</em> the files, or maybe we can really pass <code class=\"notranslate\">-source 17</code> or whatever nowadays??) For purposes of filing this bug, I'm just skipping that by passing <code class=\"notranslate\">-Dmaven.javadoc.skip=true</code>.</p>\n<p dir=\"auto\">There's also <a href=\"https://github.com/openjdk/jdk/blob/123e786db21e427dc9aaaa443d188f6f914a57d8/src/java.base/share/classes/java/util/TreeMap.java#L579\">a <code class=\"notranslate\">TreeMap</code> bug that I've been meaning to report for a long time</a>. (As of Java <em>15</em>, that was the only test failure.)</p>\n<p dir=\"auto\">My notes from Java 15 (internal bug 182929722) also describe some compilation errors, which I still see (as expected) under Java 17:</p>\n<blockquote>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  [ERROR] /usr/local/google/home/cpovirk/clients/guava-black/guava/guava-tests/benchmark/com/google/common/util/concurrent/FuturesGetCheckedBenchmark.java:[37,25] package java.security.acl does not exist\"><pre class=\"notranslate\"><code class=\"notranslate\">  [ERROR] /usr/local/google/home/cpovirk/clients/guava-black/guava/guava-tests/benchmark/com/google/common/util/concurrent/FuturesGetCheckedBenchmark.java:[37,25] package java.security.acl does not exist\n</code></pre></div>\n<p dir=\"auto\">Just pick another exception type to test with.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  [ERROR] /usr/local/google/home/cpovirk/clients/guava-black/guava/guava-tests/test/com/google/common/reflect/TypeTokenTest.java:[421,11] types java.lang.CharSequence and java.util.List&lt;E&gt; are incompatible;\n  [ERROR]   class java.lang.Object&amp;java.util.List&lt;java.lang.String&gt;&amp;java.lang.CharSequence inherits abstract and default for isEmpty() from types java.lang.CharSequence and java.util.List\n  [ERROR] /usr/local/google/home/cpovirk/clients/guava-black/guava/guava-tests/test/com/google/common/reflect/TypeTokenTest.java:[435,11] types java.lang.CharSequence and java.util.List&lt;E&gt; are incompatible;\n  [ERROR]   class java.lang.Object&amp;java.util.List&lt;java.lang.String&gt;&amp;java.lang.CharSequence inherits abstract and default for isEmpty() from types java.lang.CharSequence and java.util.List\"><pre class=\"notranslate\"><code class=\"notranslate\">  [ERROR] /usr/local/google/home/cpovirk/clients/guava-black/guava/guava-tests/test/com/google/common/reflect/TypeTokenTest.java:[421,11] types java.lang.CharSequence and java.util.List&lt;E&gt; are incompatible;\n  [ERROR]   class java.lang.Object&amp;java.util.List&lt;java.lang.String&gt;&amp;java.lang.CharSequence inherits abstract and default for isEmpty() from types java.lang.CharSequence and java.util.List\n  [ERROR] /usr/local/google/home/cpovirk/clients/guava-black/guava/guava-tests/test/com/google/common/reflect/TypeTokenTest.java:[435,11] types java.lang.CharSequence and java.util.List&lt;E&gt; are incompatible;\n  [ERROR]   class java.lang.Object&amp;java.util.List&lt;java.lang.String&gt;&amp;java.lang.CharSequence inherits abstract and default for isEmpty() from types java.lang.CharSequence and java.util.List\n</code></pre></div>\n<p dir=\"auto\">...because both define <code class=\"notranslate\">isEmpty()</code>. Just pick another type.</p>\n</blockquote>",
                "resourcePath": "/google/guava/issues/5801",
                "createdAt": "2021-12-01T18:36:44Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    },
                    {
                      "node": {
                        "name": "platform=java17"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Document ForwardingExecutorService behavior for default methods",
        "url": "https://github.com/google/guava/pull/6299",
        "resourcePath": "/google/guava/pull/6299",
        "createdAt": "2023-01-17T21:09:28Z",
        "number": 6299,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/util/concurrent/ForwardingExecutorService.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5Hk4Ef2gAoMTViNWI3MjI1NTVkNTdiMzRhNDM4MDBjOWM0YmQwZDE1Y2Y1ZmQ2ZQ",
                "url": "https://github.com/google/guava/pull/6299/commits/15b5b722555d57b34a43800c9c4bd0d15cf5fd6e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6296,
                "url": "https://github.com/google/guava/issues/6296",
                "title": "Support ExecutorService.close in ForwardingExecutorService",
                "bodyHTML": "<p dir=\"auto\">JDK's <code class=\"notranslate\">ExecutorService</code> is <code class=\"notranslate\">AutoCloseable</code> since Java 19.<br>\n<code class=\"notranslate\">ForwardingExecutorService</code> does not forward the <code class=\"notranslate\">close</code> method.</p>\n<p dir=\"auto\">Forward close too, when running on Java 19.</p>",
                "resourcePath": "/google/guava/issues/6296",
                "createdAt": "2023-01-16T11:43:59Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=api-docs"
                      }
                    },
                    {
                      "node": {
                        "name": "package=concurrent"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Document ForwardingExecutorService behavior for default methods.",
        "url": "https://github.com/google/guava/pull/6300",
        "resourcePath": "/google/guava/pull/6300",
        "createdAt": "2023-01-18T14:57:00Z",
        "number": 6300,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6296,
                "url": "https://github.com/google/guava/issues/6296",
                "title": "Support ExecutorService.close in ForwardingExecutorService",
                "bodyHTML": "<p dir=\"auto\">JDK's <code class=\"notranslate\">ExecutorService</code> is <code class=\"notranslate\">AutoCloseable</code> since Java 19.<br>\n<code class=\"notranslate\">ForwardingExecutorService</code> does not forward the <code class=\"notranslate\">close</code> method.</p>\n<p dir=\"auto\">Forward close too, when running on Java 19.</p>",
                "resourcePath": "/google/guava/issues/6296",
                "createdAt": "2023-01-16T11:43:59Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=api-docs"
                      }
                    },
                    {
                      "node": {
                        "name": "package=concurrent"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "update doc and access modifier  for ConsumingQueueIterator.",
        "url": "https://github.com/google/guava/pull/6305",
        "resourcePath": "/google/guava/pull/6305",
        "createdAt": "2023-01-21T14:00:53Z",
        "number": 6305,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/ConsumingQueueIterator.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5IQzBp2gAoNjhkOTJiN2RjMzE1YzQ1Njc0MDU3MDA0NmY5YjNhOGYzZmQzYjZjZA",
                "url": "https://github.com/google/guava/pull/6305/commits/68d92b7dc315c456740570046f9b3a8f3fd3b6cd"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6141,
                "url": "https://github.com/google/guava/issues/6141",
                "title": "ConsumingQueueIterator is not thread safe",
                "bodyHTML": "<p dir=\"auto\">The code of <code class=\"notranslate\">ConsumingQueueIterator</code> is not thread safe because it is not using an atomic operation in <code class=\"notranslate\">computeNext</code></p>\n<p dir=\"auto\">we have this stacktrace once in our whole cluster</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.util.NoSuchElementException: null\n    at java.util.AbstractQueue.remove(AbstractQueue.java:117)\n    at com.google.common.collect.ConsumingQueueIterator.computeNext(ConsumingQueueIterator.java:44)\n    at com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:146)\n    at com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:141)\n    ...\"><pre class=\"notranslate\"><code class=\"notranslate\">java.util.NoSuchElementException: null\n    at java.util.AbstractQueue.remove(AbstractQueue.java:117)\n    at com.google.common.collect.ConsumingQueueIterator.computeNext(ConsumingQueueIterator.java:44)\n    at com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:146)\n    at com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:141)\n    ...\n</code></pre></div>\n<p dir=\"auto\">Instead of</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  public T computeNext() {\n    // TODO(b/192579700): Use a ternary once it no longer confuses our nullness checker.\n    if (queue.isEmpty()) {\n      return endOfData();\n    }\n    return queue.remove();\n  }\"><pre class=\"notranslate\"><code class=\"notranslate\">  public T computeNext() {\n    // TODO(b/192579700): Use a ternary once it no longer confuses our nullness checker.\n    if (queue.isEmpty()) {\n      return endOfData();\n    }\n    return queue.remove();\n  }\n</code></pre></div>\n<p dir=\"auto\">I suggest sth like this but this changes the semantics since queued <code class=\"notranslate\">null</code>s mess this up... ofc its questionable if it makes sense at all</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  protected T computeNext() {\n    final var result = queue.poll();\n    return result == null ? endOfData() : result;\n  }\"><pre class=\"notranslate\"><code class=\"notranslate\">  protected T computeNext() {\n    final var result = queue.poll();\n    return result == null ? endOfData() : result;\n  }\n</code></pre></div>\n<p dir=\"auto\">for me its also unclear why computeNext is public...</p>",
                "resourcePath": "/google/guava/issues/6141",
                "createdAt": "2022-08-09T16:01:11Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "type=api-docs"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Update doc for ConsumingQueueIterator and access modifier for ConsumingQueueIterator.computeNext.",
        "url": "https://github.com/google/guava/pull/6306",
        "resourcePath": "/google/guava/pull/6306",
        "createdAt": "2023-01-21T14:27:07Z",
        "number": 6306,
        "mergeCommit": {
          "oid": "b4a6ddadd8b7106eef949621770152221d689bbc",
          "message": "Update doc for ConsumingQueueIterator and access modifier for ConsumingQueueIterator.computeNext.\n\nFixes #6141\nFixes #6305\n\nRELNOTES=n/a\nPiperOrigin-RevId: 503646089",
          "commitUrl": "https://github.com/google/guava/commit/b4a6ddadd8b7106eef949621770152221d689bbc",
          "parents": {
            "nodes": [
              {
                "oid": "e57caa05124219b885b651ba40db3bc649202ec2",
                "message": "Bump deps.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 503506407"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6141,
                "url": "https://github.com/google/guava/issues/6141",
                "title": "ConsumingQueueIterator is not thread safe",
                "bodyHTML": "<p dir=\"auto\">The code of <code class=\"notranslate\">ConsumingQueueIterator</code> is not thread safe because it is not using an atomic operation in <code class=\"notranslate\">computeNext</code></p>\n<p dir=\"auto\">we have this stacktrace once in our whole cluster</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.util.NoSuchElementException: null\n    at java.util.AbstractQueue.remove(AbstractQueue.java:117)\n    at com.google.common.collect.ConsumingQueueIterator.computeNext(ConsumingQueueIterator.java:44)\n    at com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:146)\n    at com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:141)\n    ...\"><pre class=\"notranslate\"><code class=\"notranslate\">java.util.NoSuchElementException: null\n    at java.util.AbstractQueue.remove(AbstractQueue.java:117)\n    at com.google.common.collect.ConsumingQueueIterator.computeNext(ConsumingQueueIterator.java:44)\n    at com.google.common.collect.AbstractIterator.tryToComputeNext(AbstractIterator.java:146)\n    at com.google.common.collect.AbstractIterator.hasNext(AbstractIterator.java:141)\n    ...\n</code></pre></div>\n<p dir=\"auto\">Instead of</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  public T computeNext() {\n    // TODO(b/192579700): Use a ternary once it no longer confuses our nullness checker.\n    if (queue.isEmpty()) {\n      return endOfData();\n    }\n    return queue.remove();\n  }\"><pre class=\"notranslate\"><code class=\"notranslate\">  public T computeNext() {\n    // TODO(b/192579700): Use a ternary once it no longer confuses our nullness checker.\n    if (queue.isEmpty()) {\n      return endOfData();\n    }\n    return queue.remove();\n  }\n</code></pre></div>\n<p dir=\"auto\">I suggest sth like this but this changes the semantics since queued <code class=\"notranslate\">null</code>s mess this up... ofc its questionable if it makes sense at all</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  protected T computeNext() {\n    final var result = queue.poll();\n    return result == null ? endOfData() : result;\n  }\"><pre class=\"notranslate\"><code class=\"notranslate\">  protected T computeNext() {\n    final var result = queue.poll();\n    return result == null ? endOfData() : result;\n  }\n</code></pre></div>\n<p dir=\"auto\">for me its also unclear why computeNext is public...</p>",
                "resourcePath": "/google/guava/issues/6141",
                "createdAt": "2022-08-09T16:01:11Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "type=api-docs"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add a note to `Hashing.goodFastHash` about memory usage.",
        "url": "https://github.com/google/guava/pull/6328",
        "resourcePath": "/google/guava/pull/6328",
        "createdAt": "2023-02-21T21:19:06Z",
        "number": 6328,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/hash/Hashing.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/hash/Hashing.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5Kdmm02gAoYzUxN2Q5MzFmNWY2NDhjYWI5MzBlYjBlMDVlMTA0OWU2ZmI5NjFmYw",
                "url": "https://github.com/google/guava/pull/6328/commits/c517d931f5f648cab930eb0e05e1049e6fb961fc"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6324,
                "url": "https://github.com/google/guava/issues/6324",
                "title": "Out of Memories found by OSS-Fuzz",
                "bodyHTML": "<p dir=\"auto\">Dear guava developers,</p>\n<p dir=\"auto\">Fuzzing has found multiple out of memories in <a href=\"https://github.com/google/oss-fuzz\">OSS-Fuzz</a> with JVM Fuzzer <a href=\"https://github.com/CodeIntelligenceTesting/jazzer\">Jazzer</a> in guava. We have reviewed the findings and consider them security-related due to the potential of a denial of service.</p>\n<p dir=\"auto\">All issues are happening in Hashing.goodFastHash, for issue <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=51690\" rel=\"nofollow\">51690</a> the crash seems to happened in <a href=\"https://github.com/google/guava/blob/master/guava/src/com/google/common/hash/HashCode.java#L240\">HashCode.java</a>.</p>\n<p dir=\"auto\">Part of the stack trace: == Java Exception: com.code_intelligence.jazzer.api.FuzzerSecurityIssueLow: Out of memory (use '-Xmx1710m' to reproduce)<br>\nCaused by: java.lang.OutOfMemoryError: Java heap space at java.base/java.lang.Object.clone(Native Method)<br>\nat com.google.common.hash.HashCode.fromBytes(HashCode.java:240)<br>\nat HashingFuzzer.testHashCode(HashingFuzzer.java:97)<br>\nat HashingFuzzer.testHash(HashingFuzzer.java:132)<br>\nat HashingFuzzer.fuzzerTestOneInput(HashingFuzzer.java:169)<br>\nat java.base/java.lang.invoke.LambdaForm$DMH/0x0000000800b95c40.invokeStaticInit(LambdaForm$DMH)<br>\nat java.base/java.lang.invoke.LambdaForm$MH/0x0000000800bd4040.invoke(LambdaForm$MH)<br>\nat java.base/java.lang.invoke.LambdaForm$MH/0x0000000800bd4840.invoke_MT(LambdaForm$MH)<br>\nDEDUP_TOKEN: 1c29eb17191ff9f1<br>\n\u2026</p>\n<p dir=\"auto\">For issue <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=51712\" rel=\"nofollow\">51712</a> the crash seems to happened in <a href=\"https://github.com/google/guava/blob/master/guava/src/com/google/common/hash/HashCode.java#L414\">HashCode.java</a> as well.</p>\n<p dir=\"auto\">Part of the stack trace: == Java Exception: com.code_intelligence.jazzer.api.FuzzerSecurityIssueLow: Out of memory (use '-Xmx1843m' to reproduce)<br>\nCaused by: java.lang.OutOfMemoryError: Java heap space<br>\nat java.base/java.lang.AbstractStringBuilder.(AbstractStringBuilder.java:88)<br>\nat java.base/java.lang.StringBuilder.(StringBuilder.java:113)<br>\nat com.google.common.hash.HashCode.toString(HashCode.java:414)<br>\nat HashingFuzzer.testHashCode(HashingFuzzer.java:99)<br>\nat HashingFuzzer.testHash(HashingFuzzer.java:132)<br>\nat HashingFuzzer.fuzzerTestOneInput(HashingFuzzer.java:169)<br>\nat java.base/java.lang.invoke.LambdaForm$DMH/0x0000000800b95c40.invokeStaticInit(LambdaForm$DMH)<br>\nat java.base/java.lang.invoke.LambdaForm$MH/0x0000000800bd4040.invoke(LambdaForm$MH)<br>\nat java.base/java.lang.invoke.LambdaForm$MH/0x0000000800bd4840.invoke_MT(LambdaForm$MH)<br>\n\u2026</p>\n<p dir=\"auto\">For issue <a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=51717\" rel=\"nofollow\">51717</a> the crash seems to happened in <a href=\"https://github.com/google/guava/blob/master/guava/src/com/google/common/hash/Hashing.java#L691\">Hashing.java</a>.</p>\n<p dir=\"auto\">Part of the stack trace: == Java Exception: com.code_intelligence.jazzer.api.FuzzerSecurityIssueLow: Out of memory (use '-Xmx1843m' to reproduce)<br>\nCaused by: java.lang.OutOfMemoryError: Java heap space<br>\nat com.google.common.hash.Hashing$ConcatenatedHashFunction.makeHash(Hashing.java:691)<br>\nat com.google.common.hash.AbstractCompositeHashFunction$1.hash(AbstractCompositeHashFunction.java:192)<br>\nat HashingFuzzer.testHash(HashingFuzzer.java:124) at HashingFuzzer.fuzzerTestOneInput(HashingFuzzer.java:169)<br>\nat java.base/java.lang.invoke.LambdaForm$DMH/0x0000000800b95c40.invokeStaticInit(LambdaForm$DMH)<br>\nat java.base/java.lang.invoke.LambdaForm$MH/0x0000000800bd4040.invoke(LambdaForm$MH)<br>\nat java.base/java.lang.invoke.LambdaForm$MH/0x0000000800bd4840.invoke_MT(LambdaForm$MH)<br>\n\u2026</p>\n<p dir=\"auto\">We would appreciate if you could take a look into the findings. Do you see a risk that this might be exploited by untrusted input?<br>\nWe have added several Reproducer.zips which contains a README that describes how to reproduce the issue.</p>\n<p dir=\"auto\"><a href=\"https://github.com/google/guava/files/10721362/51690-guava-HashingFuzzer.zip\">51690-guava-HashingFuzzer.zip</a><br>\n<a href=\"https://github.com/google/guava/files/10721364/51712-guava-HashingFuzzer.zip\">51712-guava-HashingFuzzer.zip</a><br>\n<a href=\"https://github.com/google/guava/files/10721366/51717-guava-HashingFuzzer.zip\">51717-guava-HashingFuzzer.zip</a></p>\n<p dir=\"auto\">OSS-Fuzz Issues for Out of Memory:<br>\n<a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=51690\" rel=\"nofollow\">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=51690</a><br>\n<a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=51712\" rel=\"nofollow\">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=51712</a><br>\n<a href=\"https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=51717\" rel=\"nofollow\">https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=51717</a><br>\nHint: The provided OSS-Fuzz Issue links are only accessible if the issue gets fixed or you are the maintainer of the OSS-Fuzz project.</p>\n<p dir=\"auto\">Fuzz target: <a href=\"https://github.com/google/oss-fuzz/blob/master/projects/guava/HashingFuzzer.java\">https://github.com/google/oss-fuzz/blob/master/projects/guava/HashingFuzzer.java</a></p>",
                "resourcePath": "/google/guava/issues/6324",
                "createdAt": "2023-02-13T10:42:56Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove `@Beta` from `ByteStreams`.",
        "url": "https://github.com/google/guava/pull/6404",
        "resourcePath": "/google/guava/pull/6404",
        "createdAt": "2023-04-10T17:43:23Z",
        "number": 6404,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3239,
                "url": "https://github.com/google/guava/issues/3239",
                "title": "What's the status of ByteStreams API?",
                "bodyHTML": "<p dir=\"auto\">The <code class=\"notranslate\">com.google.common.io.ByteStreams</code> class is marked with <code class=\"notranslate\">@Beta</code>, which I understand to mean that it's public API might change and thus we're warned about using it with libraries (<a href=\"https://google.github.io/guava/releases/26.0-jre/api/docs/com/google/common/annotations/Beta.html\" rel=\"nofollow\">reference</a>).</p>\n<p dir=\"auto\">Is there an ETA when the API might be considered stable enough to remove <code class=\"notranslate\">@Beta</code>?</p>",
                "resourcePath": "/google/guava/issues/3239",
                "createdAt": "2018-08-15T23:14:44Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "package=io"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove `@Beta` from `RangeMap`, `RangeSet`, and friends.",
        "url": "https://github.com/google/guava/pull/6405",
        "resourcePath": "/google/guava/pull/6405",
        "createdAt": "2023-04-10T18:24:22Z",
        "number": 6405,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/RangeMap.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/RangeSet.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/TreeRangeMap.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/TreeRangeSet.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/ImmutableRangeMap.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/ImmutableRangeSet.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/RangeMap.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/RangeSet.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/TreeRangeMap.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/TreeRangeSet.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5N9GIe2gAoOTU4NWYzZTJhNzEwYjJiOWQyYzk4Y2QxYjZmNjc2NTIyZTllZjAwYg",
                "url": "https://github.com/google/guava/pull/6405/commits/9585f3e2a710b2b9d2c98cd1b6f676522e9ef00b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3376,
                "url": "https://github.com/google/guava/issues/3376",
                "title": "Remove @Beta from RangeSet and RangeMap",
                "bodyHTML": "<p dir=\"auto\">Range has been marked with <code class=\"notranslate\">@Beta</code> since 10.0 (September 28, 2011).<br>\nRangeMap, RangeSet and their implementations since 14.0 (February 25, 2013).</p>\n<p dir=\"auto\">I would like to propose to remove the <code class=\"notranslate\">@Beta</code> annotation.</p>",
                "resourcePath": "/google/guava/issues/3376",
                "createdAt": "2019-02-06T11:32:15Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove `@Beta` from `FluentIterable` APIs.",
        "url": "https://github.com/google/guava/pull/6407",
        "resourcePath": "/google/guava/pull/6407",
        "createdAt": "2023-04-10T20:30:27Z",
        "number": 6407,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3426,
                "url": "https://github.com/google/guava/issues/3426",
                "title": "Remove @Beta from FluentIterable.from(E[])",
                "bodyHTML": "<p dir=\"auto\">We already did this for <code class=\"notranslate\">from(Iterable)</code>.</p>\n<p dir=\"auto\">As noted in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"425093225\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/3425\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/3425/hovercard\" href=\"https://github.com/google/guava/issues/3425\">#3425</a>, we might have general reservations about committing to more <code class=\"notranslate\">FluentIterable</code> methods now that <code class=\"notranslate\">Stream</code> exists.</p>\n<p dir=\"auto\">Aside from that, the only reservations I know of are:</p>\n<ul dir=\"auto\">\n<li>Arguably \"from\" was the wrong name for this, since it reflects changes to the backing array. (But this is equally true of the <code class=\"notranslate\">Iterable</code> overload.) We might have preferred \"for\" (though that's a keyword, so we'd have to pick a longer name...).</li>\n<li>I think that it might not actually be truly 100% unmodifiable, since the returned iterator might be able to be cast to <code class=\"notranslate\">ListIterator</code>, on which users could call <code class=\"notranslate\">set</code>.</li>\n</ul>",
                "resourcePath": "/google/guava/issues/3426",
                "createdAt": "2019-03-25T20:13:06Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove `@Beta` from `Invokable` and some methods in `TypeToken`.",
        "url": "https://github.com/google/guava/pull/6409",
        "resourcePath": "/google/guava/pull/6409",
        "createdAt": "2023-04-10T20:36:59Z",
        "number": 6409,
        "mergeCommit": {
          "oid": "a195f7d60444e3bf2e64c543a1900096ede2dfe1",
          "message": "Remove `@Beta` from `Invokable` and some methods in `TypeToken`.\n\nFixes https://github.com/google/guava/issues/3051\n\nRELNOTES=`reflect`: Remove `@Beta` from `Invokable` and some methods in `TypeToken`.\nPiperOrigin-RevId: 523204476",
          "commitUrl": "https://github.com/google/guava/commit/a195f7d60444e3bf2e64c543a1900096ede2dfe1",
          "parents": {
            "nodes": [
              {
                "oid": "ba8ad69d031978fd6862623dae451133b04b6973",
                "message": "Remove `@Beta` from `Striped`.\n\nhttps://github.com/google/guava/issues/3253\n\nRELNOTES=`concurrent`: Remove `@Beta` from `Striped`.\nPiperOrigin-RevId: 523203718"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3051,
                "url": "https://github.com/google/guava/issues/3051",
                "title": "De-beta-ify Invokable and TypeToken",
                "bodyHTML": "<p dir=\"auto\">Apache jclouds makes extensive use of Invokable and TypeToken.  Could you promote these?</p>",
                "resourcePath": "/google/guava/issues/3051",
                "createdAt": "2018-03-03T03:40:51Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "package=reflect"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove `@Beta` from `Futures`.",
        "url": "https://github.com/google/guava/pull/6413",
        "resourcePath": "/google/guava/pull/6413",
        "createdAt": "2023-04-11T18:40:06Z",
        "number": 6413,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3403,
                "url": "https://github.com/google/guava/issues/3403",
                "title": "Remove @Beta from Futures.transform, catching, and *Async variants",
                "bodyHTML": "<p dir=\"auto\">These methods are very heavily used internally. They're probably less so externally, but that may change as AndroidX exposes <code class=\"notranslate\">ListenableFuture</code> in more APIs. Plus, Dagger Producers uses these methods.</p>\n<p dir=\"auto\">Blockers:</p>\n<ul dir=\"auto\">\n<li>likely change to make <code class=\"notranslate\">catching</code> not catch the <code class=\"notranslate\">CancellationException</code> from cancellation (internal bug 27587642)</li>\n<li>possible changes to interruption behavior (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"60168853\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/1989\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/1989/hovercard\" href=\"https://github.com/google/guava/issues/1989\">#1989</a>)</li>\n</ul>",
                "resourcePath": "/google/guava/issues/3403",
                "createdAt": "2019-03-12T20:56:19Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=concurrent"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove `@Beta` from `FluentFuture`.",
        "url": "https://github.com/google/guava/pull/6414",
        "resourcePath": "/google/guava/pull/6414",
        "createdAt": "2023-04-11T18:40:58Z",
        "number": 6414,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/util/concurrent/FluentFuture.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/util/concurrent/FluentFuture.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5ODXWS2gAoYTRlYmY1ZWY2MWYzOTUxMmQzMWQwMmI0YmYyYTAwNjVlYTRmYTJiYg",
                "url": "https://github.com/google/guava/pull/6414/commits/a4ebf5ef61f39512d31d02b4bf2a0065ea4fa2bb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3419,
                "url": "https://github.com/google/guava/issues/3419",
                "title": "Remove @Beta from remaining FluentFuture APIs",
                "bodyHTML": "<p dir=\"auto\">Now that we changed the type hierarchy, I think there's not much blocking this, except:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"420201745\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/3403\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/3403/hovercard\" href=\"https://github.com/google/guava/issues/3403\">#3403</a> lists concerns about specific methods.</li>\n<li>If we got very ambitious, we could try to make it not actually be a <code class=\"notranslate\">Future</code>, more of a \"builder.\" But it's hard to imagine that that would be a priority. [Edit: Part of the motivation here is that that would be a better model for attaching \"interceptors,\" like for tracing.]</li>\n</ul>",
                "resourcePath": "/google/guava/issues/3419",
                "createdAt": "2019-03-25T19:34:17Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=concurrent"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=debeta"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "mergeStableSorted was added to create a stable version of mergeSorted\u2026",
        "url": "https://github.com/google/guava/pull/6457",
        "resourcePath": "/google/guava/pull/6457",
        "createdAt": "2023-04-26T00:08:34Z",
        "number": 6457,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Iterators.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5PJiQj2gAoYmZlZjVmMjlhNWQ5YzNhNThmZDMxOTQ4ZGNlNmIwYTU5M2JjNDM4YQ",
                "url": "https://github.com/google/guava/pull/6457/commits/bfef5f29a5d9c3a58fd31948dce6b0a593bc438a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 5773,
                "url": "https://github.com/google/guava/issues/5773",
                "title": "Make `Iterators.mergeSorted()` stable",
                "bodyHTML": "<p dir=\"auto\">I've noticed that <code class=\"notranslate\">Iterators.mergeSorted()</code> is unstable.</p>\n<p dir=\"auto\">So for example if I have arrays: <code class=\"notranslate\">[A_1, B_1, C_1]</code> <code class=\"notranslate\">[A_2, B_2, C_2]</code> (where the comparator looks only at the letter), I'd like the result to iterate <code class=\"notranslate\">[A_1, A_2,  B_1, B_2,  C_1, C_2]</code>. The current implementation doesn't guarantee this.</p>\n<p dir=\"auto\">Might it be possible to add a stable version?</p>\n<p dir=\"auto\">I confess it's not obvious what to do if the arrays are something like <code class=\"notranslate\">[A_1, A_2, B_1]</code>, <code class=\"notranslate\">[A_3]</code> - to me it would make sense to empty the first iterator of <code class=\"notranslate\">A_n</code> elements before moving on to the second, so <code class=\"notranslate\">[A_1, A_2, A_3, B_1]</code>.</p>\n<p dir=\"auto\">[I appreciate I'm being a little lazy with my terminology here - I can provide a fully fleshed example if it's not clear]</p>",
                "resourcePath": "/google/guava/issues/5773",
                "createdAt": "2021-11-03T18:11:59Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Include `LICENSE` in the generated jar under `META-INF`.",
        "url": "https://github.com/google/guava/pull/6477",
        "resourcePath": "/google/guava/pull/6477",
        "createdAt": "2023-05-08T18:16:10Z",
        "number": 6477,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6468,
                "url": "https://github.com/google/guava/issues/6468",
                "title": "Please include LICENSE file under META-INF/ in the release jars",
                "bodyHTML": "<p dir=\"auto\">The current release jars miss <code class=\"notranslate\">META-INF/LICENSE</code>.<br>\nFor instance, see <a href=\"https://repo1.maven.org/maven2/com/google/guava/guava/31.1-jre/\" rel=\"nofollow\">https://repo1.maven.org/maven2/com/google/guava/guava/31.1-jre/</a> -&gt; guava-31.1-jre.jar</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"% unzip -l guava-31.1-jre.jar  | grep META-INF\n     2578  02-28-2022 16:18   META-INF/MANIFEST.MF\n        0  02-28-2022 16:18   META-INF/\n        0  02-28-2022 16:18   META-INF/maven/\n        0  02-28-2022 16:18   META-INF/maven/com.google.guava/\n        0  02-28-2022 16:18   META-INF/maven/com.google.guava/guava/\n      133  02-28-2022 16:18   META-INF/maven/com.google.guava/guava/pom.properties\n    10981  02-28-2022 16:06   META-INF/maven/com.google.guava/guava/pom.xml\"><pre class=\"notranslate\"><code class=\"notranslate\">% unzip -l guava-31.1-jre.jar  | grep META-INF\n     2578  02-28-2022 16:18   META-INF/MANIFEST.MF\n        0  02-28-2022 16:18   META-INF/\n        0  02-28-2022 16:18   META-INF/maven/\n        0  02-28-2022 16:18   META-INF/maven/com.google.guava/\n        0  02-28-2022 16:18   META-INF/maven/com.google.guava/guava/\n      133  02-28-2022 16:18   META-INF/maven/com.google.guava/guava/pom.properties\n    10981  02-28-2022 16:06   META-INF/maven/com.google.guava/guava/pom.xml\n</code></pre></div>\n<p dir=\"auto\">The license requires to give a copy of the license when redistributing the software:</p>\n<blockquote>\n<p dir=\"auto\">See <a href=\"https://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">https://www.apache.org/licenses/LICENSE-2.0</a><br>\n4.a You must give any other recipients of the Work or Derivative Works a copy of this License; and</p>\n</blockquote>\n<p dir=\"auto\">Even though the jar file includes a link to <a href=\"http://www.apache.org/licenses/LICENSE-2.0.txt\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0.txt</a>, the link is not a copy as the link might become inaccessible, so the recipients might fail to receive \"a copy of the License\".</p>\n<p dir=\"auto\">I suggest including the license file as <code class=\"notranslate\">META-INF/LICENSE</code>.</p>\n<p dir=\"auto\">By the way, Google Guice does include the license (Apache-2.0) as <code class=\"notranslate\">META-INF/LICENSE</code>: <a href=\"https://repo1.maven.org/maven2/com/google/inject/guice/5.1.0/\" rel=\"nofollow\">https://repo1.maven.org/maven2/com/google/inject/guice/5.1.0/</a></p>\n<p dir=\"auto\">Just in case, here's the opinion of the Apache Software Foundation: <a href=\"https://issues.apache.org/jira/browse/LEGAL-642\" rel=\"nofollow\">https://issues.apache.org/jira/browse/LEGAL-642</a></p>",
                "resourcePath": "/google/guava/issues/6468",
                "createdAt": "2023-05-02T08:32:38Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "status=in-progress"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Publish Proguard configs as part of Guava.",
        "url": "https://github.com/google/guava/pull/6479",
        "resourcePath": "/google/guava/pull/6479",
        "createdAt": "2023-05-09T00:08:28Z",
        "number": 6479,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2117,
                "url": "https://github.com/google/guava/issues/2117",
                "title": "Publish Proguard configs with Guava",
                "bodyHTML": "<p dir=\"auto\">We are working on some internally. Once they're ready, we should publish them in Guava. I don't know if there's a standard way to do this with Maven.</p>",
                "resourcePath": "/google/guava/issues/2117",
                "createdAt": "2015-07-27T15:18:05Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add unit test for untested CharMatcher.retainFrom() method.",
        "url": "https://github.com/google/guava/pull/6502",
        "resourcePath": "/google/guava/pull/6502",
        "createdAt": "2023-05-17T20:12:01Z",
        "number": 6502,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/base/CharMatcherTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/base/CharMatcherTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5QwH_W2gAoODNhYTNkMjZkMjMwMjlhMTFiZDhlMDI1NmU5ZTdlMWMyYTVmNDg1YQ",
                "url": "https://github.com/google/guava/pull/6502/commits/83aa3d26d23029a11bd8e0256e9e7e1c2a5f485a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6069,
                "url": "https://github.com/google/guava/issues/6069",
                "title": "CharMatcher.retainFrom(CharSequence) is never tested",
                "bodyHTML": "<p dir=\"auto\">I just found out that <code class=\"notranslate\">CharMatcher.retainFrom(CharSequence)</code>, while having a very simple implementation, is not tested at all in the whole codebase.</p>",
                "resourcePath": "/google/guava/issues/6069",
                "createdAt": "2022-06-02T12:40:22Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=base"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Restrict permissions when creating temporary files and directories, or fail if that's not possible.",
        "url": "https://github.com/google/guava/pull/6513",
        "resourcePath": "/google/guava/pull/6513",
        "createdAt": "2023-05-25T19:54:14Z",
        "number": 6513,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2575,
                "url": "https://github.com/google/guava/issues/2575",
                "title": "Security scan reported problem with com.google.common.io.FileBackedOutputStream",
                "bodyHTML": "<p dir=\"auto\">We are using google commons APIs in our project and security scan on our code has reported following problem. Could you please let me know if this is of any concern or it can be fixed in new version of this API.</p>\n<p dir=\"auto\"><strong>Problem:</strong> Creating and using insecure temporary files can leave application and system data vulnerable to attack. In particular,file names created by the tmpnam family of functions can be easily guessed by an attacker. If an attacker can predictthe filename and create a malicious collision, he may be able to manipulate the behavior of the application.</p>\n<p dir=\"auto\"><strong>Recommendations (Generated by tool)</strong><br>\nEnsure that unpredictable names are used for temporary files and that files are created in a secure directory with appropriate permissions. Using mkstemp() is a reasonably safe way to create temporary files. It will attempt to create and open a unique file based on a filename template provided by the user, combined with a series of randomly generated characters. Note that mkstemp() is safe if only the descriptor is used and the returned filename is not used in a subsequent function call with extra privileges. Using mkstemp() does not completely eliminate race conditions but does provide better protection than other methods</p>\n<p dir=\"auto\">Class:<br>\ncom.google.common.io.FileBackedOutputStream</p>",
                "resourcePath": "/google/guava/issues/2575",
                "createdAt": "2016-09-26T22:46:07Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "package=io"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 4011,
                "url": "https://github.com/google/guava/issues/4011",
                "title": "CVE-2020-8908: Files::createTempDir local information disclosure vulnerability",
                "bodyHTML": "<h1 dir=\"auto\">IMPORTANT NOTE</h1>\n<p dir=\"auto\"><strong>Updating to Guava 30.0 does not fix this security vulnerability</strong>. The method is merely deprecated. There currently exits no fix for this vulnerability.</p>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"696211338\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/4011\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/4011/hovercard?comment_id=765672282&amp;comment_type=issue_comment\" href=\"https://github.com/google/guava/issues/4011#issuecomment-765672282\">#4011 (comment)</a></p>\n<hr>\n<p dir=\"auto\">Since the fix for this vulnerability is now disclosed by this commit (<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/google/guava/commit/fec0dbc4634006a6162cfd4d0d09c962073ddf40/hovercard\" href=\"https://github.com/google/guava/commit/fec0dbc4634006a6162cfd4d0d09c962073ddf40\"><tt>fec0dbc</tt></a>) and it was closed internally by google as 'Intended Functionality' I figure I'll disclose the vulnerability fully.</p>\n<h2 dir=\"auto\">Vulnerability</h2>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"File guavaTempDir = com.google.common.io.Files.createTempDir();\nSystem.out.println(&quot;Guava Temp Dir: &quot; + guavaTempDir.getName());\nrunLS(guavaTempDir.getParentFile(), guavaTempDir); // Prints the file permissions -&gt; drwxr-xr-x\nFile child = new File(guavaTempDir, &quot;guava-child.txt&quot;);\nchild.createNewFile();\nrunLS(guavaTempDir, child); // Prints the file permissions -&gt; -rw-r--r--\"><pre class=\"notranslate\"><span class=\"pl-smi\">File</span> <span class=\"pl-s1\">guavaTempDir</span> = <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">Files</span>.<span class=\"pl-en\">createTempDir</span>();\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"Guava Temp Dir: \"</span> + <span class=\"pl-s1\">guavaTempDir</span>.<span class=\"pl-en\">getName</span>());\n<span class=\"pl-en\">runLS</span>(<span class=\"pl-s1\">guavaTempDir</span>.<span class=\"pl-en\">getParentFile</span>(), <span class=\"pl-s1\">guavaTempDir</span>); <span class=\"pl-c\">// Prints the file permissions -&gt; drwxr-xr-x</span>\n<span class=\"pl-smi\">File</span> <span class=\"pl-s1\">child</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">File</span>(<span class=\"pl-s1\">guavaTempDir</span>, <span class=\"pl-s\">\"guava-child.txt\"</span>);\n<span class=\"pl-s1\">child</span>.<span class=\"pl-en\">createNewFile</span>();\n<span class=\"pl-en\">runLS</span>(<span class=\"pl-s1\">guavaTempDir</span>, <span class=\"pl-s1\">child</span>); <span class=\"pl-c\">// Prints the file permissions -&gt; -rw-r--r--</span></pre></div>\n<p dir=\"auto\">On the flip side, when using <code class=\"notranslate\">java.nio.file.Files</code>, this creates a directory with the correct file permissions.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Path temp = Files.createTempDirectory(&quot;random-directory&quot;);\nSystem.out.println(&quot;Files Temp Dir: &quot; + temp.getFileName());\nrunLS(temp.toFile().getParentFile(), temp.toFile()); // Prints the file permissions -&gt; drwx------\nPath child = temp.resolve(&quot;jdk-child.txt&quot;);\nchild.toFile().createNewFile();\nrunLS(temp.toFile(), child.toFile()); // Prints the file permissions -&gt; -rw-r--r--\"><pre class=\"notranslate\"><span class=\"pl-smi\">Path</span> <span class=\"pl-s1\">temp</span> = <span class=\"pl-smi\">Files</span>.<span class=\"pl-en\">createTempDirectory</span>(<span class=\"pl-s\">\"random-directory\"</span>);\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"Files Temp Dir: \"</span> + <span class=\"pl-s1\">temp</span>.<span class=\"pl-en\">getFileName</span>());\n<span class=\"pl-en\">runLS</span>(<span class=\"pl-s1\">temp</span>.<span class=\"pl-en\">toFile</span>().<span class=\"pl-en\">getParentFile</span>(), <span class=\"pl-s1\">temp</span>.<span class=\"pl-en\">toFile</span>()); <span class=\"pl-c\">// Prints the file permissions -&gt; drwx------</span>\n<span class=\"pl-smi\">Path</span> <span class=\"pl-s1\">child</span> = <span class=\"pl-s1\">temp</span>.<span class=\"pl-en\">resolve</span>(<span class=\"pl-s\">\"jdk-child.txt\"</span>);\n<span class=\"pl-s1\">child</span>.<span class=\"pl-en\">toFile</span>().<span class=\"pl-en\">createNewFile</span>();\n<span class=\"pl-en\">runLS</span>(<span class=\"pl-s1\">temp</span>.<span class=\"pl-en\">toFile</span>(), <span class=\"pl-s1\">child</span>.<span class=\"pl-en\">toFile</span>()); <span class=\"pl-c\">// Prints the file permissions -&gt; -rw-r--r--</span></pre></div>\n<h2 dir=\"auto\">Impact</h2>\n<p dir=\"auto\">The impact of this vulnerability is that, the file permissions on the file created by <code class=\"notranslate\">com.google.common.io.Files.createTempDir</code> allows an attacker running a malicious program co-resident on the same machine can steal secrets stored in this directory. This is because by default on unix-like operating systems the <code class=\"notranslate\">/temp</code> directory is shared between all users, so if the correct file permissions aren't set by the directory/file creator, the file becomes readable by all other users on that system.</p>\n<h2 dir=\"auto\">Workaround</h2>\n<p dir=\"auto\">This vulnerability can be fixed by explicitly setting the <code class=\"notranslate\">java.io.tmpdir</code> system property to a \"safe\" directory when starting the JVM.</p>\n<h2 dir=\"auto\">Resolution</h2>\n<p dir=\"auto\">The resolution by the Google team was the following:</p>\n<blockquote>\n<p dir=\"auto\">The team decided to document the behavior, as well as deprecate the method as other alternatives exist.</p>\n</blockquote>\n<p dir=\"auto\">This completely makes sense to me, and I think is appropriate. The open question that exists in my mind is whether or not this issue warrants a CVE number issued.</p>",
                "resourcePath": "/google/guava/issues/4011",
                "createdAt": "2020-09-08T22:13:01Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=io"
                      }
                    },
                    {
                      "node": {
                        "name": "status=in-progress"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix `Files.createTempDir` and `FileBackedOutputStream` under Windows.",
        "url": "https://github.com/google/guava/pull/6539",
        "resourcePath": "/google/guava/pull/6539",
        "createdAt": "2023-06-07T15:20:15Z",
        "number": 6539,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/io/TempFileCreator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/io/TempFileCreator.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5SbW4E2gAoNmRkZTE3ZDk3NDVmMjE0OTM0N2U0MjU0MDQ0Y2E2ZjRlZWJlMzUyZQ",
                "url": "https://github.com/google/guava/pull/6539/commits/6dde17d9745f2149347e4254044ca6f4eebe352e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6535,
                "url": "https://github.com/google/guava/issues/6535",
                "title": "Files#createTempDir stopped working on Windows with 32.0.0",
                "bodyHTML": "<p dir=\"auto\">After update to guava 32.0.0<br>\non Windows we start having such exception</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" Caused by: java.lang.UnsupportedOperationException: 'posix:permissions' not supported as initial attribute\n            at sun.nio.fs.WindowsSecurityDescriptor.fromAttribute(WindowsSecurityDescriptor.java:358)\n            at sun.nio.fs.WindowsFileSystemProvider.createDirectory(WindowsFileSystemProvider.java:492)\n            at java.nio.file.Files.createDirectory(Files.java:674)\n            at java.nio.file.TempFileHelper.create(TempFileHelper.java:136)\n            at java.nio.file.TempFileHelper.createTempDirectory(TempFileHelper.java:173)\n            at java.nio.file.Files.createTempDirectory(Files.java:950)\n            at com.google.common.io.TempFileCreator$JavaNioCreator.createTempDir(TempFileCreator.java:102)\n            at com.google.common.io.Files.createTempDir(Files.java:439)\"><pre class=\"notranslate\"><code class=\"notranslate\"> Caused by: java.lang.UnsupportedOperationException: 'posix:permissions' not supported as initial attribute\n            at sun.nio.fs.WindowsSecurityDescriptor.fromAttribute(WindowsSecurityDescriptor.java:358)\n            at sun.nio.fs.WindowsFileSystemProvider.createDirectory(WindowsFileSystemProvider.java:492)\n            at java.nio.file.Files.createDirectory(Files.java:674)\n            at java.nio.file.TempFileHelper.create(TempFileHelper.java:136)\n            at java.nio.file.TempFileHelper.createTempDirectory(TempFileHelper.java:173)\n            at java.nio.file.Files.createTempDirectory(Files.java:950)\n            at com.google.common.io.TempFileCreator$JavaNioCreator.createTempDir(TempFileCreator.java:102)\n            at com.google.common.io.Files.createTempDir(Files.java:439)\n</code></pre></div>\n<p dir=\"auto\">seems it is related to<br>\n<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284/hovercard\" href=\"https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284\"><tt>feb83a1</tt></a></p>",
                "resourcePath": "/google/guava/issues/6535",
                "createdAt": "2023-06-03T18:18:26Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "package=io"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix `Files.createTempDir` and `FileBackedOutputStream` under Windows.",
        "url": "https://github.com/google/guava/pull/6540",
        "resourcePath": "/google/guava/pull/6540",
        "createdAt": "2023-06-07T15:23:36Z",
        "number": 6540,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6535,
                "url": "https://github.com/google/guava/issues/6535",
                "title": "Files#createTempDir stopped working on Windows with 32.0.0",
                "bodyHTML": "<p dir=\"auto\">After update to guava 32.0.0<br>\non Windows we start having such exception</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" Caused by: java.lang.UnsupportedOperationException: 'posix:permissions' not supported as initial attribute\n            at sun.nio.fs.WindowsSecurityDescriptor.fromAttribute(WindowsSecurityDescriptor.java:358)\n            at sun.nio.fs.WindowsFileSystemProvider.createDirectory(WindowsFileSystemProvider.java:492)\n            at java.nio.file.Files.createDirectory(Files.java:674)\n            at java.nio.file.TempFileHelper.create(TempFileHelper.java:136)\n            at java.nio.file.TempFileHelper.createTempDirectory(TempFileHelper.java:173)\n            at java.nio.file.Files.createTempDirectory(Files.java:950)\n            at com.google.common.io.TempFileCreator$JavaNioCreator.createTempDir(TempFileCreator.java:102)\n            at com.google.common.io.Files.createTempDir(Files.java:439)\"><pre class=\"notranslate\"><code class=\"notranslate\"> Caused by: java.lang.UnsupportedOperationException: 'posix:permissions' not supported as initial attribute\n            at sun.nio.fs.WindowsSecurityDescriptor.fromAttribute(WindowsSecurityDescriptor.java:358)\n            at sun.nio.fs.WindowsFileSystemProvider.createDirectory(WindowsFileSystemProvider.java:492)\n            at java.nio.file.Files.createDirectory(Files.java:674)\n            at java.nio.file.TempFileHelper.create(TempFileHelper.java:136)\n            at java.nio.file.TempFileHelper.createTempDirectory(TempFileHelper.java:173)\n            at java.nio.file.Files.createTempDirectory(Files.java:950)\n            at com.google.common.io.TempFileCreator$JavaNioCreator.createTempDir(TempFileCreator.java:102)\n            at com.google.common.io.Files.createTempDir(Files.java:439)\n</code></pre></div>\n<p dir=\"auto\">seems it is related to<br>\n<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284/hovercard\" href=\"https://github.com/google/guava/commit/feb83a1c8fd2e7670b244d5afd23cba5aca43284\"><tt>feb83a1</tt></a></p>",
                "resourcePath": "/google/guava/issues/6535",
                "createdAt": "2023-06-03T18:18:26Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "package=io"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Try to test Windows CI.",
        "url": "https://github.com/google/guava/pull/6542",
        "resourcePath": "/google/guava/pull/6542",
        "createdAt": "2023-06-08T14:43:29Z",
        "number": 6542,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5Sh1n52gAoZTIyMDYxYzBiODhhZGY2YzZmNTk5MjRmNDk5NGM4NWY4ZjBkOTg5Mw",
                "url": "https://github.com/google/guava/pull/6542/commits/e22061c0b88adf6c6f59924f4994c85f8f0d9893"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2686,
                "url": "https://github.com/google/guava/issues/2686",
                "title": "Consider running CI under Windows",
                "bodyHTML": "<p dir=\"auto\">As is currently done in <a href=\"https://github.com/google/google-java-format\">google-java-format</a>, I think it's worth testing Guava against Windows using AppVeyor, or at least I think it's worth for the Guava team to consider looking into it.</p>\n<p dir=\"auto\">Currently, Guava makes no guarantees that it will run successfully on Windows, as explained in the README:</p>\n<blockquote>\n<p dir=\"auto\"><strong>IMPORTANT WARNINGS</strong><br>\n...<br>\n5, We unit-test and benchmark the libraries using only OpenJDK 1.7 on Linux. Some features, especially in <code class=\"notranslate\">com.google.common.io</code>, may not work correctly in other environments.</p>\n</blockquote>\n<p dir=\"auto\">I do understand that there would need to be a number of changes or improvements before Guava can build successfully on Windows (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"100406171\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/2130\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/2130/hovercard\" href=\"https://github.com/google/guava/issues/2130\">#2130</a>), so I suspect this would be a long-term thing to tackle.</p>",
                "resourcePath": "/google/guava/issues/2686",
                "createdAt": "2016-12-15T23:34:01Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Run CI under Windows, suppressing existing failures.",
        "url": "https://github.com/google/guava/pull/6543",
        "resourcePath": "/google/guava/pull/6543",
        "createdAt": "2023-06-08T18:35:10Z",
        "number": 6543,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2686,
                "url": "https://github.com/google/guava/issues/2686",
                "title": "Consider running CI under Windows",
                "bodyHTML": "<p dir=\"auto\">As is currently done in <a href=\"https://github.com/google/google-java-format\">google-java-format</a>, I think it's worth testing Guava against Windows using AppVeyor, or at least I think it's worth for the Guava team to consider looking into it.</p>\n<p dir=\"auto\">Currently, Guava makes no guarantees that it will run successfully on Windows, as explained in the README:</p>\n<blockquote>\n<p dir=\"auto\"><strong>IMPORTANT WARNINGS</strong><br>\n...<br>\n5, We unit-test and benchmark the libraries using only OpenJDK 1.7 on Linux. Some features, especially in <code class=\"notranslate\">com.google.common.io</code>, may not work correctly in other environments.</p>\n</blockquote>\n<p dir=\"auto\">I do understand that there would need to be a number of changes or improvements before Guava can build successfully on Windows (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"100406171\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/2130\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/guava/issues/2130/hovercard\" href=\"https://github.com/google/guava/issues/2130\">#2130</a>), so I suspect this would be a long-term thing to tackle.</p>",
                "resourcePath": "/google/guava/issues/2686",
                "createdAt": "2016-12-15T23:34:01Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Partial rollback of cl/441881361 to fix https://github.com/google/guava/issues/6565",
        "url": "https://github.com/google/guava/pull/6571",
        "resourcePath": "/google/guava/pull/6571",
        "createdAt": "2023-06-21T14:42:11Z",
        "number": 6571,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/cache/CacheBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/cache/CacheBuilder.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5Tjpqf2gAoYTVjNWY3ZWU5NTBmNGJjZGE0NDc2NTFlNjNmZjU4NDE4ZDAzMTg0Mw",
                "url": "https://github.com/google/guava/pull/6571/commits/a5c5f7ee950f4bcda447651e63ff58418d031843"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6565,
                "url": "https://github.com/google/guava/issues/6565",
                "title": "Instantiating Cache in a custom system class loader leads to a recursive invocation exception",
                "bodyHTML": "<p dir=\"auto\">Having a custom system class loader, which instantiates <code class=\"notranslate\">com.google.common.cache.Cache</code> as part of its construction results in recursive invocation exception.</p>\n<p dir=\"auto\">The error occurs in line 240 of <code class=\"notranslate\">com.google.common.cache.CacheBuilder</code>. The code comment suggests that this situation was envisaged. This was working correctly in version <code class=\"notranslate\">31.1-jre</code> and the error started to manifest in version <code class=\"notranslate\">32.0.0-jre</code>.</p>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/5511940/246966231-1d57d424-e2b6-41f1-a56f-f4fd4edd97fc.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDkxMDgsIm5iZiI6MTcxNDk0ODgwOCwicGF0aCI6Ii81NTExOTQwLzI0Njk2NjIzMS0xZDU3ZDQyNC1lMmI2LTQxZjEtYTU2Zi1mNGZkNGVkZDk3ZmMucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMjI0MDA4WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9YWQ0N2RhYjIzMzE1OTY2ZWExM2FhNGQxMjFlYzYxNTY1YzJlZjQ4OGE2OGM2ZWJjN2ZjMWNlMjBiOGMyMjdiYSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.lWkKJk3eaQE4kS5z4rGbDPBX3dfnxmOiFjd7VT2eOiU\"><img width=\"2000\" alt=\"image\" src=\"https://private-user-images.githubusercontent.com/5511940/246966231-1d57d424-e2b6-41f1-a56f-f4fd4edd97fc.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDkxMDgsIm5iZiI6MTcxNDk0ODgwOCwicGF0aCI6Ii81NTExOTQwLzI0Njk2NjIzMS0xZDU3ZDQyNC1lMmI2LTQxZjEtYTU2Zi1mNGZkNGVkZDk3ZmMucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMjI0MDA4WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9YWQ0N2RhYjIzMzE1OTY2ZWExM2FhNGQxMjFlYzYxNTY1YzJlZjQ4OGE2OGM2ZWJjN2ZjMWNlMjBiOGMyMjdiYSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.lWkKJk3eaQE4kS5z4rGbDPBX3dfnxmOiFjd7VT2eOiU\" style=\"max-width: 100%;\"></a>",
                "resourcePath": "/google/guava/issues/6565",
                "createdAt": "2023-06-20T00:45:13Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=cache"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Improve efficiency of bulk removals in transformed lists.",
        "url": "https://github.com/google/guava/pull/6575",
        "resourcePath": "/google/guava/pull/6575",
        "createdAt": "2023-06-21T20:30:36Z",
        "number": 6575,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/collect/Lists.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Lists.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5TlvVr2gAoZTgyYWNmNmE4NTRlMmY0YWZlMDhmNmMwZmFiZmMxMjcwZWYxMzEwZQ",
                "url": "https://github.com/google/guava/pull/6575/commits/e82acf6a854e2f4afe08f6c0fabfc1270ef1310e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6087,
                "url": "https://github.com/google/guava/issues/6087",
                "title": "bulk removals from sublists of transformed lists are slow",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">com.google.common.collect.Lists.transform(List, Function).subList(int, int).clear()</code> is slow when removing a series of items from middle of decorated ArrayList. <code class=\"notranslate\">java.util.List.clear()</code> method is intended to alleviate this problem but TransformedList fails to override. Furthermore, when working with <code class=\"notranslate\">javafx.collections.ObservableList</code> or similar, an excessive number of events are generated. This can lead to more severe performance  implications. Issue is addressed via PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1035215523\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/5762\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/google/guava/pull/5762/hovercard\" href=\"https://github.com/google/guava/pull/5762\">#5762</a>.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class TransformedListTest {\n    public static void main(String[] pArgs) {\n        Stream.of(100, 1_000, 10_000, 100_000, 1_000_000).forEach(\n            pCnt -&gt; Stream.of(false, true).forEach(\n                pTransform -&gt; {\n                    List&lt;Integer&gt; list = IntStream.range(0, pCnt)\n                        .boxed()\n                        .collect(Collectors.toCollection(ArrayList::new));\n                    if (pTransform) {\n                        list = Lists.transform(list, i -&gt; i);\n                    }\n\n                    final int idx1 = pCnt / 4;\n                    final int idx2 = pCnt * 3 / 4;\n                    final List&lt;Integer&gt; subList = list.subList(idx1, idx2);\n\n                    final Instant start = Instant.now();\n                    subList.clear();\n                    final Instant end = Instant.now();\n\n                    System.out.printf(\n                        &quot;Cleared %,d to %,d from %s list of size %,d in %s%n&quot;,\n                        idx1,\n                        idx2,\n                        pTransform ? &quot;transformed&quot; : &quot;standard   &quot;,\n                        pCnt,\n                        Duration.between(start, end)\n                    );\n                }\n            )\n        );\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">TransformedListTest</span> {\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">pArgs</span>) {\n        <span class=\"pl-smi\">Stream</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-c1\">100</span>, <span class=\"pl-c1\">1_000</span>, <span class=\"pl-c1\">10_000</span>, <span class=\"pl-c1\">100_000</span>, <span class=\"pl-c1\">1_000_000</span>).<span class=\"pl-en\">forEach</span>(\n            <span class=\"pl-s1\">pCnt</span> -&gt; <span class=\"pl-smi\">Stream</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-c1\">false</span>, <span class=\"pl-c1\">true</span>).<span class=\"pl-en\">forEach</span>(\n                <span class=\"pl-s1\">pTransform</span> -&gt; {\n                    <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">Integer</span>&gt; <span class=\"pl-s1\">list</span> = <span class=\"pl-smi\">IntStream</span>.<span class=\"pl-en\">range</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-s1\">pCnt</span>)\n                        .<span class=\"pl-en\">boxed</span>()\n                        .<span class=\"pl-en\">collect</span>(<span class=\"pl-smi\">Collectors</span>.<span class=\"pl-en\">toCollection</span>(<span class=\"pl-smi\">ArrayList</span>::<span class=\"pl-k\">new</span>));\n                    <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">pTransform</span>) {\n                        <span class=\"pl-s1\">list</span> = <span class=\"pl-smi\">Lists</span>.<span class=\"pl-en\">transform</span>(<span class=\"pl-s1\">list</span>, <span class=\"pl-s1\">i</span> -&gt; <span class=\"pl-s1\">i</span>);\n                    }\n\n                    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">idx1</span> = <span class=\"pl-s1\">pCnt</span> / <span class=\"pl-c1\">4</span>;\n                    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">idx2</span> = <span class=\"pl-s1\">pCnt</span> * <span class=\"pl-c1\">3</span> / <span class=\"pl-c1\">4</span>;\n                    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">Integer</span>&gt; <span class=\"pl-s1\">subList</span> = <span class=\"pl-s1\">list</span>.<span class=\"pl-en\">subList</span>(<span class=\"pl-s1\">idx1</span>, <span class=\"pl-s1\">idx2</span>);\n\n                    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Instant</span> <span class=\"pl-s1\">start</span> = <span class=\"pl-smi\">Instant</span>.<span class=\"pl-en\">now</span>();\n                    <span class=\"pl-s1\">subList</span>.<span class=\"pl-en\">clear</span>();\n                    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Instant</span> <span class=\"pl-s1\">end</span> = <span class=\"pl-smi\">Instant</span>.<span class=\"pl-en\">now</span>();\n\n                    <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">printf</span>(\n                        <span class=\"pl-s\">\"Cleared %,d to %,d from %s list of size %,d in %s%n\"</span>,\n                        <span class=\"pl-s1\">idx1</span>,\n                        <span class=\"pl-s1\">idx2</span>,\n                        <span class=\"pl-s1\">pTransform</span> ? <span class=\"pl-s\">\"transformed\"</span> : <span class=\"pl-s\">\"standard   \"</span>,\n                        <span class=\"pl-s1\">pCnt</span>,\n                        <span class=\"pl-smi\">Duration</span>.<span class=\"pl-en\">between</span>(<span class=\"pl-s1\">start</span>, <span class=\"pl-s1\">end</span>)\n                    );\n                }\n            )\n        );\n    }\n}</pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Cleared 25 to 75 from standard    list of size 100 in PT0S\nCleared 25 to 75 from transformed list of size 100 in PT0.0019993S\nCleared 250 to 750 from standard    list of size 1,000 in PT0S\nCleared 250 to 750 from transformed list of size 1,000 in PT0.0010005S\nCleared 2,500 to 7,500 from standard    list of size 10,000 in PT0S\nCleared 2,500 to 7,500 from transformed list of size 10,000 in PT0.0029997S\nCleared 25,000 to 75,000 from standard    list of size 100,000 in PT0S\nCleared 25,000 to 75,000 from transformed list of size 100,000 in PT0.2990039S\nCleared 250,000 to 750,000 from standard    list of size 1,000,000 in PT0.0029991S\nCleared 250,000 to 750,000 from transformed list of size 1,000,000 in PT1M12.1428634S\"><pre class=\"notranslate\"><code class=\"notranslate\">Cleared 25 to 75 from standard    list of size 100 in PT0S\nCleared 25 to 75 from transformed list of size 100 in PT0.0019993S\nCleared 250 to 750 from standard    list of size 1,000 in PT0S\nCleared 250 to 750 from transformed list of size 1,000 in PT0.0010005S\nCleared 2,500 to 7,500 from standard    list of size 10,000 in PT0S\nCleared 2,500 to 7,500 from transformed list of size 10,000 in PT0.0029997S\nCleared 25,000 to 75,000 from standard    list of size 100,000 in PT0S\nCleared 25,000 to 75,000 from transformed list of size 100,000 in PT0.2990039S\nCleared 250,000 to 750,000 from standard    list of size 1,000,000 in PT0.0029991S\nCleared 250,000 to 750,000 from transformed list of size 1,000,000 in PT1M12.1428634S\n</code></pre></div>",
                "resourcePath": "/google/guava/issues/6087",
                "createdAt": "2022-06-21T21:57:47Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "type=performance"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Merge nested `try`-`catch` blocks.",
        "url": "https://github.com/google/guava/pull/6600",
        "resourcePath": "/google/guava/pull/6600",
        "createdAt": "2023-06-27T14:00:43Z",
        "number": 6600,
        "mergeCommit": {
          "oid": "f9a29d73b1c501e7fac40560376e10f619882326",
          "message": "Merge nested `try`-`catch` blocks.\n\nFixes https://github.com/google/guava/issues/6599\n\nRELNOTES=n/a\nPiperOrigin-RevId: 543735962",
          "commitUrl": "https://github.com/google/guava/commit/f9a29d73b1c501e7fac40560376e10f619882326",
          "parents": {
            "nodes": [
              {
                "oid": "641d9e682be2468dc2afa74ded4af0ae7455f8d0",
                "message": "Add some classes to `package-info` for `primitives` and `util.concurrent`.\n\n(Also, mention `FluentFuture` inside `ListenableFuture`.)\n\nI also re-ordered some sections. There is an argument that the `primitives` static utilities still belong above the value types, but it depends on how you weigh total usages for the group of classes vs. usage of individual popular classes, how you adjust for utilities available in newer versions of Java, and how much we want to be prescriptive in suggesting things. I put some weight on \"value types are a good thing.\"\n\nRELNOTES=n/a\nPiperOrigin-RevId: 543537713"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/util/concurrent/SimpleTimeLimiter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/util/concurrent/SimpleTimeLimiter.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5UCn_z2gAoZjlhMjlkNzNiMWM1MDFlN2ZhYzQwNTYwMzc2ZTEwZjYxOTg4MjMyNg",
                "url": "https://github.com/google/guava/pull/6600/commits/f9a29d73b1c501e7fac40560376e10f619882326"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6599,
                "url": "https://github.com/google/guava/issues/6599",
                "title": "Sloppy code in SimpleTimeLimiter",
                "bodyHTML": "<p dir=\"auto\">I find a try statement inside another try statement in InterruptedException:</p>\n<p dir=\"auto\">private &lt;T extends <a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/nullable/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nullable\">@nullable</a> Object&gt; T callWithTimeout(<br>\n...<br>\nFuture future = executor.submit(callable);</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"try {\n  if (amInterruptible) {\n    try {\n      return future.get(timeoutDuration, timeoutUnit);\n    } catch (InterruptedException e) {\n      future.cancel(true);\n      throw e;\n    }\n  } else {\n    return Uninterruptibles.getUninterruptibly(future, timeoutDuration, timeoutUnit);\n  }\n} catch (ExecutionException e) {\n  throw throwCause(e, true /* combineStackTraces */);\n} catch (TimeoutException e) {\n  future.cancel(true);\n  throw new UncheckedTimeoutException(e);\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">try {\n  if (amInterruptible) {\n    try {\n      return future.get(timeoutDuration, timeoutUnit);\n    } catch (InterruptedException e) {\n      future.cancel(true);\n      throw e;\n    }\n  } else {\n    return Uninterruptibles.getUninterruptibly(future, timeoutDuration, timeoutUnit);\n  }\n} catch (ExecutionException e) {\n  throw throwCause(e, true /* combineStackTraces */);\n} catch (TimeoutException e) {\n  future.cancel(true);\n  throw new UncheckedTimeoutException(e);\n}\n</code></pre></div>\n<p dir=\"auto\">}<br>\nThe code looks sloppy. Can it be improved?</p>",
                "resourcePath": "/google/guava/issues/6599",
                "createdAt": "2023-06-27T08:20:57Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=concurrent"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P4"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Suppress an `unusable-by-js` warning.",
        "url": "https://github.com/google/guava/pull/6608",
        "resourcePath": "/google/guava/pull/6608",
        "createdAt": "2023-06-29T17:25:54Z",
        "number": 6608,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-gwt/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Platform.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5UQ3542gAoYWNiMWRhYWVhZmE3N2YyZTRjYTNkZWZlMzQ4ZjUwMGZhN2E3Y2I0Yw",
                "url": "https://github.com/google/guava/pull/6608/commits/acb1daaeafa77f2e4ca3defe348f500fa7a7cb4c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6602,
                "url": "https://github.com/google/guava/issues/6602",
                "title": "GWT compiler shows warning for class Platform.getDeclaringClassOrNullForJ2cl(Enum)",
                "bodyHTML": "<p dir=\"auto\">The GWT compiler (latest version - 2.10.0) shows this warnings (using the latest version of guava)</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Warnings in com/google/common/collect/super/com/google/common/collect/Platform.java\n   [WARN] Line 107: [unusable-by-js] Return type of 'Class Platform.getDeclaringClassOrNullForJ2cl(Enum)' is not usable by but exposed to JavaScript.\n[WARN] Suppress &quot;[unusable-by-js]&quot; warnings by adding a `@SuppressWarnings(&quot;unusable-by-js&quot;)` annotation to the corresponding member.\"><pre class=\"notranslate\"><code class=\"notranslate\">Warnings in com/google/common/collect/super/com/google/common/collect/Platform.java\n   [WARN] Line 107: [unusable-by-js] Return type of 'Class Platform.getDeclaringClassOrNullForJ2cl(Enum)' is not usable by but exposed to JavaScript.\n[WARN] Suppress \"[unusable-by-js]\" warnings by adding a `@SuppressWarnings(\"unusable-by-js\")` annotation to the corresponding member.\n</code></pre></div>\n<p dir=\"auto\">Is it possible to add the suggested <code class=\"notranslate\">@SuppressWarnings(\"unusable-by-js\")</code> to suppress it and avoid such warnings?</p>",
                "resourcePath": "/google/guava/issues/6602",
                "createdAt": "2023-06-28T08:54:34Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "platform=gwt"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Delete the old release script, and update our internal release script to update the Gradle Metadata.",
        "url": "https://github.com/google/guava/pull/6613",
        "resourcePath": "/google/guava/pull/6613",
        "createdAt": "2023-06-30T14:23:00Z",
        "number": 6613,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6612,
                "url": "https://github.com/google/guava/issues/6612",
                "title": "Gradle Metadata of 32.1.0 has a SNAPSHOT version number",
                "bodyHTML": "<p dir=\"auto\">I am very sorry <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cpovirk/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cpovirk\">@cpovirk</a> but the Gradle Metadata just published is broken. If you look at these two files:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://repo1.maven.org/maven2/com/google/guava/guava/32.1.0-jre/guava-32.1.0-jre.module\" rel=\"nofollow\">https://repo1.maven.org/maven2/com/google/guava/guava/32.1.0-jre/guava-32.1.0-jre.module</a></li>\n<li><a href=\"https://repo1.maven.org/maven2/com/google/guava/guava/32.1.0-android/guava-32.1.0-android.module\" rel=\"nofollow\">https://repo1.maven.org/maven2/com/google/guava/guava/32.1.0-android/guava-32.1.0-android.module</a></li>\n</ul>\n<p dir=\"auto\">You see several versions like <code class=\"notranslate\">HEAD-android-SNAPSHOT</code> in them.</p>\n<p dir=\"auto\">I believe this is because the <code class=\"notranslate\">util/set_version.sh</code> script was not used to set the version <a href=\"https://github.com/google/guava/commit/53bb66554b195ab3aec3da285f1f140b1abae44d\">here</a>.<br>\nMy assumption was that this is somehow automatically used before each release. So I did not think about that further. I guess I was wrong and that's not the case. \ud83d\ude1e</p>\n<p dir=\"auto\">These lines need to be executed on a version change:<br>\n<a href=\"https://github.com/google/guava/blob/master/util/set_version.sh#L18-L21\">https://github.com/google/guava/blob/master/util/set_version.sh#L18-L21</a></p>\n<p dir=\"auto\">I am afraid this requires patching, as in certain situations the metadata now points at files not available on Maven Central.</p>",
                "resourcePath": "/google/guava/issues/6612",
                "createdAt": "2023-06-30T12:08:31Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P1"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Under Gradle, return to having `guava` automatically pull in the empty `listenablefuture-9999....jar` instead of making Gradle report a conflict that users need to [resolve](https://github.com/google/guava/releases/tag/v32.1.0#user-content-overlap).",
        "url": "https://github.com/google/guava/pull/6658",
        "resourcePath": "/google/guava/pull/6658",
        "createdAt": "2023-07-28T22:05:03Z",
        "number": 6658,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/module.json"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "integration-tests/gradle/build.gradle.kts"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5WsVuN2gAoODQ3NjhhM2VmMWVkYmRkY2NjZThiZDMxMmNjZmE5NmU4ZjNkYzk0Yw",
                "url": "https://github.com/google/guava/pull/6658/commits/84768a3ef1edbddccce8bd312ccfa96e8f3dc94c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6642,
                "url": "https://github.com/google/guava/issues/6642",
                "title": "guava:32.1.1-jre conflicts with google-cloud-datastore:2.16.0",
                "bodyHTML": "<p dir=\"auto\">Using gradlew 7.4, this <code class=\"notranslate\">build.gradle</code> file:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"apply plugin: 'java'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation 'com.google.cloud:google-cloud-datastore:2.16.0'\n    implementation 'com.google.guava:guava:32.1.1-jre'\n}\n\nprint configurations.runtimeClasspath.files\"><pre class=\"notranslate\"><code class=\"notranslate\">apply plugin: 'java'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation 'com.google.cloud:google-cloud-datastore:2.16.0'\n    implementation 'com.google.guava:guava:32.1.1-jre'\n}\n\nprint configurations.runtimeClasspath.files\n</code></pre></div>\n<p dir=\"auto\">...fails like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ gradlew dependencies\n\nFAILURE: Build failed with an exception.\n\n* Where:\nBuild file '/tmp/gradle-guava-error/build.gradle' line: 13\n\n* What went wrong:\nA problem occurred evaluating root project 'test'.\n&gt; Could not resolve all files for configuration ':runtimeClasspath'.\n   &gt; Could not resolve com.google.guava:guava:32.1.1-jre.\n     Required by:\n         project :\n      &gt; Module 'com.google.guava:guava' has been rejected:\n           Cannot select module with conflict on capability 'com.google.guava:listenablefuture:1.0' also provided by [com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava(runtime)]\n   &gt; Could not resolve com.google.guava:guava:31.0.0-jre.\n     Required by:\n         project :\n      &gt; Module 'com.google.guava:guava' has been rejected:\n           Cannot select module with conflict on capability 'com.google.guava:listenablefuture:1.0' also provided by [com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava(runtime)]\n   &gt; Could not resolve com.google.guava:guava:32.0.1-jre.\n     Required by:\n         project : &gt; com.google.cloud:google-cloud-datastore:2.16.0\n      &gt; Module 'com.google.guava:guava' has been rejected:\n           Cannot select module with conflict on capability 'com.google.guava:listenablefuture:1.0' also provided by [com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava(runtime)]\n   &gt; Could not resolve com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava.\n     Required by:\n         project : &gt; com.google.cloud:google-cloud-datastore:2.16.0\n         project : &gt; com.google.cloud:google-cloud-datastore:2.16.0 &gt; com.google.api.grpc:grpc-google-cloud-datastore-admin-v1:2.16.0\n      &gt; Module 'com.google.guava:listenablefuture' has been rejected:\n           Cannot select module with conflict on capability 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava' also provided by [com.google.guava:guava:32.1.1-jre(jreRuntimeElements)]\n\n* Try:\n&gt; Run with --stacktrace option to get the stack trace.\n&gt; Run with --info or --debug option to get more log output.\n&gt; Run with --scan to get full insights.\n\n* Get more help at https://help.gradle.org\n\nBUILD FAILED in 314ms\"><pre class=\"notranslate\"><code class=\"notranslate\">$ gradlew dependencies\n\nFAILURE: Build failed with an exception.\n\n* Where:\nBuild file '/tmp/gradle-guava-error/build.gradle' line: 13\n\n* What went wrong:\nA problem occurred evaluating root project 'test'.\n&gt; Could not resolve all files for configuration ':runtimeClasspath'.\n   &gt; Could not resolve com.google.guava:guava:32.1.1-jre.\n     Required by:\n         project :\n      &gt; Module 'com.google.guava:guava' has been rejected:\n           Cannot select module with conflict on capability 'com.google.guava:listenablefuture:1.0' also provided by [com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava(runtime)]\n   &gt; Could not resolve com.google.guava:guava:31.0.0-jre.\n     Required by:\n         project :\n      &gt; Module 'com.google.guava:guava' has been rejected:\n           Cannot select module with conflict on capability 'com.google.guava:listenablefuture:1.0' also provided by [com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava(runtime)]\n   &gt; Could not resolve com.google.guava:guava:32.0.1-jre.\n     Required by:\n         project : &gt; com.google.cloud:google-cloud-datastore:2.16.0\n      &gt; Module 'com.google.guava:guava' has been rejected:\n           Cannot select module with conflict on capability 'com.google.guava:listenablefuture:1.0' also provided by [com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava(runtime)]\n   &gt; Could not resolve com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava.\n     Required by:\n         project : &gt; com.google.cloud:google-cloud-datastore:2.16.0\n         project : &gt; com.google.cloud:google-cloud-datastore:2.16.0 &gt; com.google.api.grpc:grpc-google-cloud-datastore-admin-v1:2.16.0\n      &gt; Module 'com.google.guava:listenablefuture' has been rejected:\n           Cannot select module with conflict on capability 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava' also provided by [com.google.guava:guava:32.1.1-jre(jreRuntimeElements)]\n\n* Try:\n&gt; Run with --stacktrace option to get the stack trace.\n&gt; Run with --info or --debug option to get more log output.\n&gt; Run with --scan to get full insights.\n\n* Get more help at https://help.gradle.org\n\nBUILD FAILED in 314ms\n</code></pre></div>\n<p dir=\"auto\">It succeeds with 32.0.1-jre or if excluding the transitive listenablefuture dependency from datastore:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    implementation dependencies.create('com.google.cloud:google-cloud-datastore:2.16.0') {\n        exclude group: 'com.google.guava', module: 'listenablefuture'\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    implementation dependencies.create('com.google.cloud:google-cloud-datastore:2.16.0') {\n        exclude group: 'com.google.guava', module: 'listenablefuture'\n    }\n</code></pre></div>",
                "resourcePath": "/google/guava/issues/6642",
                "createdAt": "2023-07-20T14:23:28Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P1"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Declare dependency versions inline instead of in our parent pom.",
        "url": "https://github.com/google/guava/pull/6659",
        "resourcePath": "/google/guava/pull/6659",
        "createdAt": "2023-07-31T15:52:56Z",
        "number": 6659,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-testlib/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-gwt/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-testlib/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5W0YMQ2gAoYmQxZTI0YmE0ZTZmMGM3MGQ4MjgxZDAyMzA4NDQ3MGMxMTVjNjJhZA",
                "url": "https://github.com/google/guava/pull/6659/commits/bd1e24ba4e6f0c70d8281d023084470c115c62ad"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6654,
                "url": "https://github.com/google/guava/issues/6654",
                "title": "guava:32.1.1-jre causes issues with mockito-core:3.x",
                "bodyHTML": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">In our project, we use mockito 3.x (3.8.0) for unit testing.<br>\nWhen we attempted to upgrade guava-jre to 32.1.1, we're running into odd issues.</p>\n<p dir=\"auto\">Below is build.gradle file snip:</p>\n<p dir=\"auto\">dependencies {</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"implementation 'org.mockito:mockito-core:3.8.0' // this is done just for testing ..\nimplementation 'com.google.guava:guava:32.1.1-jre'\ntestImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'\ntestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'\"><pre class=\"notranslate\"><code class=\"notranslate\">implementation 'org.mockito:mockito-core:3.8.0' // this is done just for testing ..\nimplementation 'com.google.guava:guava:32.1.1-jre'\ntestImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'\ntestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'\n</code></pre></div>\n<p dir=\"auto\">}</p>\n<p dir=\"auto\">When code is compiled - running into this:</p>\n<blockquote>\n<p dir=\"auto\">Task :compileJava FAILED<br>\n/tmp/mytestprojects/test/src/main/java/org/example/Main.java:8: error: cannot find symbol<br>\norg.mockito.Matchers.matches(\"abc\");<br>\n^<br>\nsymbol:   class Matchers<br>\nlocation: package org.mockito<br>\n1 error</p>\n</blockquote>\n<p dir=\"auto\">FAILURE: Build failed with an exception.</p>\n<p dir=\"auto\">However, the code just compiles fine when we switch to 32.0.1-jre.</p>\n<p dir=\"auto\">Appreciate your help in triaging this.</p>",
                "resourcePath": "/google/guava/issues/6654",
                "createdAt": "2023-07-26T14:29:37Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Declare versions of test-only dependencies inline instead of in our parent pom.",
        "url": "https://github.com/google/guava/pull/6660",
        "resourcePath": "/google/guava/pull/6660",
        "createdAt": "2023-07-31T18:23:31Z",
        "number": 6660,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-testlib/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-gwt/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-testlib/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5W1PKl2gAoM2EzMjAxNzNiZDk3YmUwY2QxMzk5MDI2MTEyZWExZDc2MTJhZWYzZg",
                "url": "https://github.com/google/guava/pull/6660/commits/3a320173bd97be0cd1399026112ea1d7612aef3f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6654,
                "url": "https://github.com/google/guava/issues/6654",
                "title": "guava:32.1.1-jre causes issues with mockito-core:3.x",
                "bodyHTML": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">In our project, we use mockito 3.x (3.8.0) for unit testing.<br>\nWhen we attempted to upgrade guava-jre to 32.1.1, we're running into odd issues.</p>\n<p dir=\"auto\">Below is build.gradle file snip:</p>\n<p dir=\"auto\">dependencies {</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"implementation 'org.mockito:mockito-core:3.8.0' // this is done just for testing ..\nimplementation 'com.google.guava:guava:32.1.1-jre'\ntestImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'\ntestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'\"><pre class=\"notranslate\"><code class=\"notranslate\">implementation 'org.mockito:mockito-core:3.8.0' // this is done just for testing ..\nimplementation 'com.google.guava:guava:32.1.1-jre'\ntestImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'\ntestRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'\n</code></pre></div>\n<p dir=\"auto\">}</p>\n<p dir=\"auto\">When code is compiled - running into this:</p>\n<blockquote>\n<p dir=\"auto\">Task :compileJava FAILED<br>\n/tmp/mytestprojects/test/src/main/java/org/example/Main.java:8: error: cannot find symbol<br>\norg.mockito.Matchers.matches(\"abc\");<br>\n^<br>\nsymbol:   class Matchers<br>\nlocation: package org.mockito<br>\n1 error</p>\n</blockquote>\n<p dir=\"auto\">FAILURE: Build failed with an exception.</p>\n<p dir=\"auto\">However, the code just compiles fine when we switch to 32.0.1-jre.</p>\n<p dir=\"auto\">Appreciate your help in triaging this.</p>",
                "resourcePath": "/google/guava/issues/6654",
                "createdAt": "2023-07-26T14:29:37Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Put the versions of dependencies directly in Gradle Metadata.",
        "url": "https://github.com/google/guava/pull/6667",
        "resourcePath": "/google/guava/pull/6667",
        "createdAt": "2023-08-02T18:33:48Z",
        "number": 6667,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/module.json"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5XCdzY2gAoNDc4N2NmNTU5MTY0NmQyNTkxOGVkYzdhZjI5YjlmN2MxZWQ0MDM0Yg",
                "url": "https://github.com/google/guava/pull/6667/commits/4787cf5591646d25918edc7af29b9f7c1ed4034b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6657,
                "url": "https://github.com/google/guava/issues/6657",
                "title": "missing guava dependencies when updating from 32.0.1-jre to 32.1.1-jre",
                "bodyHTML": "<p dir=\"auto\">My Java project has a transitive dependency on <code class=\"notranslate\">com.google.guava:guava</code>.</p>\n<p dir=\"auto\">I manually update the version of guava by adding a constraint to the dependencies section of my <code class=\"notranslate\">build.gradle</code>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"dependencies {\n   .....\n    constraints {\n        // update guava to latest\n        implementation(&quot;com.google.guava:guava:32.0.1-jre&quot;) {\n            because(&quot;cdk uses an old version&quot;)\n        }\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">dependencies {\n   .....\n    constraints {\n        // update guava to latest\n        implementation(\"com.google.guava:guava:32.0.1-jre\") {\n            because(\"cdk uses an old version\")\n        }\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">When updating from version <code class=\"notranslate\">32.0.1-jre</code> to version <code class=\"notranslate\">32.1.1-jre</code> the following transitive dependencies of guava cannot be resolved:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"   &gt; Could not find com.google.code.findbugs:jsr305:.\n     Required by:\n         project : &gt; com.google.guava:guava:32.1.1-jre\n   &gt; Could not find org.checkerframework:checker-qual:.\n     Required by:\n         project : &gt; com.google.guava:guava:32.1.1-jre\n   &gt; Could not find com.google.errorprone:error_prone_annotations:.\n     Required by:\n         project : &gt; com.google.guava:guava:32.1.1-jre\n   &gt; Could not find com.google.j2objc:j2objc-annotations:.\n     Required by:\n         project : &gt; com.google.guava:guava:32.1.1-jre\"><pre class=\"notranslate\"><code class=\"notranslate\">   &gt; Could not find com.google.code.findbugs:jsr305:.\n     Required by:\n         project : &gt; com.google.guava:guava:32.1.1-jre\n   &gt; Could not find org.checkerframework:checker-qual:.\n     Required by:\n         project : &gt; com.google.guava:guava:32.1.1-jre\n   &gt; Could not find com.google.errorprone:error_prone_annotations:.\n     Required by:\n         project : &gt; com.google.guava:guava:32.1.1-jre\n   &gt; Could not find com.google.j2objc:j2objc-annotations:.\n     Required by:\n         project : &gt; com.google.guava:guava:32.1.1-jre\n</code></pre></div>\n<p dir=\"auto\">I use the official maven repository to resolve dependencies:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"repositories {\n        mavenCentral(name: 'official maven')\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">repositories {\n        mavenCentral(name: 'official maven')\n}\n</code></pre></div>\n<p dir=\"auto\">As there is no such issue of resolving these transitive dependencies when switching back to guava version <code class=\"notranslate\">32.0.1-jre</code> even after manually deleting all directories that start with <code class=\"notranslate\">com.google</code> in the gradle cache the issue isn't caused by the libraries not being available from the repository.</p>\n<p dir=\"auto\">I cannot (or don't know how to) redact information from the gradle build scan, so I opted for providing you with the console output of <code class=\"notranslate\">gradlew -info clean compileJava</code>.</p>\n<p dir=\"auto\">Please let me know if there is anything else you need to look into this.</p>",
                "resourcePath": "/google/guava/issues/6657",
                "createdAt": "2023-07-28T07:38:01Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Change `MediaType.parse` to allow and skip over linear whitespace on either side of the `=` separator in a parameter (`attribute=value`) as well as on either side of the `/` between the type and subtype (because nothing in the specification suggests that it be treated differently than the `;` or the `=`).",
        "url": "https://github.com/google/guava/pull/6671",
        "resourcePath": "/google/guava/pull/6671",
        "createdAt": "2023-08-07T15:46:37Z",
        "number": 6671,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/net/MediaTypeTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/net/MediaType.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/net/MediaTypeTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/net/MediaType.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5XWfv32gAoYmU4OWIxZTcwNmU0YTI0OTQ3MjNiNDA1ZDUyZTE1NjY1ZTJiY2I4NQ",
                "url": "https://github.com/google/guava/pull/6671/commits/be89b1e706e4a2494723b405d52e15665e2bcb85"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6663,
                "url": "https://github.com/google/guava/issues/6663",
                "title": "Could not parse MediaType",
                "bodyHTML": "<p dir=\"auto\">When GuavaAPI  parse Content-Type String to GuavaMediaType,  there exception happen:<br>\nMaven Dependency:</p>\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"       &lt;dependency&gt;\n            &lt;groupId&gt;com.google.guava&lt;/groupId&gt;\n            &lt;artifactId&gt;guava&lt;/artifactId&gt;\n            &lt;version&gt;32.1.2-jre&lt;/version&gt;\n        &lt;/dependency&gt;\"><pre class=\"notranslate\">       &lt;<span class=\"pl-ent\">dependency</span>&gt;\n            &lt;<span class=\"pl-ent\">groupId</span>&gt;com.google.guava&lt;/<span class=\"pl-ent\">groupId</span>&gt;\n            &lt;<span class=\"pl-ent\">artifactId</span>&gt;guava&lt;/<span class=\"pl-ent\">artifactId</span>&gt;\n            &lt;<span class=\"pl-ent\">version</span>&gt;32.1.2-jre&lt;/<span class=\"pl-ent\">version</span>&gt;\n        &lt;/<span class=\"pl-ent\">dependency</span>&gt;</pre></div>\n<p dir=\"auto\">Code:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        MediaType parse = MediaType.parse(&quot;multipart/form-data;charset=UTF-8;boundary =--jelsaflflksafjel&quot;);\n        System.out.println(parse);\"><pre class=\"notranslate\">        <span class=\"pl-smi\">MediaType</span> <span class=\"pl-s1\">parse</span> = <span class=\"pl-smi\">MediaType</span>.<span class=\"pl-en\">parse</span>(<span class=\"pl-s\">\"multipart/form-data;charset=UTF-8;boundary =--jelsaflflksafjel\"</span>);\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">parse</span>);</pre></div>\n<p dir=\"auto\">Exception:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/home/asialjim/.jdks/corretto-17.0.7/bin/java -javaagent:/home/asialjim/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/232.8660.185/lib/idea_rt.jar=43365:/home/asialjim/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/232.8660.185/bin -Dfile.encoding=UTF-8 -classpath /home/asialjim/IdeaProjects/test/guava-test/target/classes:/home/asialjim/.m2/repository/com/google/guava/guava/32.1.2-jre/guava-32.1.2-jre.jar:/home/asialjim/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/home/asialjim/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/asialjim/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/asialjim/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/home/asialjim/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/home/asialjim/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar io.github.asialjim.frame.remote.Main\nException in thread &quot;main&quot; java.lang.IllegalArgumentException: Could not parse 'multipart/form-data;charset=UTF-8;boundary =--jelsaflflksafjel'\n\tat com.google.common.net.MediaType.parse(MediaType.java:1085)\n\tat io.github.asialjim.frame.remote.Main.main(Main.java:8)\nCaused by: java.lang.IllegalStateException\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:496)\n\tat com.google.common.net.MediaType$Tokenizer.consumeCharacter(MediaType.java:1123)\n\tat com.google.common.net.MediaType.parse(MediaType.java:1063)\n\t... 1 more\"><pre class=\"notranslate\"><code class=\"notranslate\">/home/asialjim/.jdks/corretto-17.0.7/bin/java -javaagent:/home/asialjim/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/232.8660.185/lib/idea_rt.jar=43365:/home/asialjim/.local/share/JetBrains/Toolbox/apps/IDEA-U/ch-0/232.8660.185/bin -Dfile.encoding=UTF-8 -classpath /home/asialjim/IdeaProjects/test/guava-test/target/classes:/home/asialjim/.m2/repository/com/google/guava/guava/32.1.2-jre/guava-32.1.2-jre.jar:/home/asialjim/.m2/repository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar:/home/asialjim/.m2/repository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar:/home/asialjim/.m2/repository/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/home/asialjim/.m2/repository/org/checkerframework/checker-qual/3.33.0/checker-qual-3.33.0.jar:/home/asialjim/.m2/repository/com/google/errorprone/error_prone_annotations/2.18.0/error_prone_annotations-2.18.0.jar:/home/asialjim/.m2/repository/com/google/j2objc/j2objc-annotations/2.8/j2objc-annotations-2.8.jar io.github.asialjim.frame.remote.Main\nException in thread \"main\" java.lang.IllegalArgumentException: Could not parse 'multipart/form-data;charset=UTF-8;boundary =--jelsaflflksafjel'\n\tat com.google.common.net.MediaType.parse(MediaType.java:1085)\n\tat io.github.asialjim.frame.remote.Main.main(Main.java:8)\nCaused by: java.lang.IllegalStateException\n\tat com.google.common.base.Preconditions.checkState(Preconditions.java:496)\n\tat com.google.common.net.MediaType$Tokenizer.consumeCharacter(MediaType.java:1123)\n\tat com.google.common.net.MediaType.parse(MediaType.java:1063)\n\t... 1 more\n</code></pre></div>\n<p dir=\"auto\">When I delete the space charactor  between  'boundary'  and '=---' like this;</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"        MediaType parse = MediaType.parse(&quot;multipart/form-data;charset=UTF-8;boundary=--jelsaflflksafjel&quot;);\n        System.out.println(parse);\"><pre class=\"notranslate\">        <span class=\"pl-smi\">MediaType</span> <span class=\"pl-s1\">parse</span> = <span class=\"pl-smi\">MediaType</span>.<span class=\"pl-en\">parse</span>(<span class=\"pl-s\">\"multipart/form-data;charset=UTF-8;boundary=--jelsaflflksafjel\"</span>);\n        <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">parse</span>);</pre></div>\n<p dir=\"auto\">Then It's worked!</p>\n<p dir=\"auto\">By the way,  This Content-Type:  'multipart/form-data;charset=UTF-8;boundary =--jelsaflflksafjel'  with space charactor  was generated by trip framework</p>",
                "resourcePath": "/google/guava/issues/6663",
                "createdAt": "2023-08-02T01:59:26Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=net"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove unused `logger` (left over from cl/543484764). Fixes https://github.com/google/guava/issues/6684",
        "url": "https://github.com/google/guava/pull/6685",
        "resourcePath": "/google/guava/pull/6685",
        "createdAt": "2023-08-24T13:32:26Z",
        "number": 6685,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/Platform.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5YseeG2gAoODdkN2QyY2I5ODJjMDRiNGI0ZTBlZDA3ZjBmYWY1NTQyOWRhYTk2NA",
                "url": "https://github.com/google/guava/pull/6685/commits/87d7d2cb982c04b4b4e0ed07f0faf55429daa964"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6684,
                "url": "https://github.com/google/guava/issues/6684",
                "title": "Unused `java.util.logging.Logger` in class initializer for `com.google.common.collect.Platform`",
                "bodyHTML": "<p dir=\"auto\">The <code class=\"notranslate\">java.util.logging.Logger</code> created in the class initializer for <a href=\"https://github.com/google/guava/blob/f39084a064fe77ab6f0fe61131428ca5cd06a465/guava/src/com/google/common/collect/Platform.java#L35\"><code class=\"notranslate\">com.google.common.collect.Platform</code></a> is not used any more and should (probably?) be removed.</p>",
                "resourcePath": "/google/guava/issues/6684",
                "createdAt": "2023-08-24T09:27:36Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "package=base"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "platform=gwt"
                      }
                    },
                    {
                      "node": {
                        "name": "P4"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make `UnmodifiableMultiset.removeIf(Predicate)` unsupported",
        "url": "https://github.com/google/guava/pull/6715",
        "resourcePath": "/google/guava/pull/6715",
        "createdAt": "2023-09-12T15:28:56Z",
        "number": 6715,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6702,
                "url": "https://github.com/google/guava/issues/6702",
                "title": "UnmodifiableMultiset.removeIf() should throw `UnsupportedOperationException`",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">UnmodifiableMultiset.removeIf()</code> should throw <code class=\"notranslate\">UnsupportedOperationException</code>, even if nothing would be removed. This would make it match the other mutating methods in <code class=\"notranslate\">UnmodifiableMultiset</code>.</p>\n<p dir=\"auto\">Currently, if the predicate doesn't accept any of the elements in the set, <code class=\"notranslate\">removeIf</code> succeeds and does nothing. The set isn't modified, but it's surprising that <code class=\"notranslate\">removeIf</code> doesn't throw <code class=\"notranslate\">UnsupportedOperationException</code> in this case.</p>\n<p dir=\"auto\">I'll attach a PR which will fix this, assuming you agree it should be changed.</p>",
                "resourcePath": "/google/guava/issues/6702",
                "createdAt": "2023-09-05T15:42:02Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "P4"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix `Files.createTempDir` and `FileBackedOutputStream` under Windows _services_ (at least under JDK 9+), a rare use case.",
        "url": "https://github.com/google/guava/pull/6730",
        "resourcePath": "/google/guava/pull/6730",
        "createdAt": "2023-09-26T19:12:35Z",
        "number": 6730,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6634,
                "url": "https://github.com/google/guava/issues/6634",
                "title": "From Guava 32.0.1-jre, Files.createTempDir() and FileBackedOutputStream can fail or create un-deletable directories/files when used from a Windows service",
                "bodyHTML": "<p dir=\"auto\">Hello I rencently upgraded from 31.1-jre to 32.0.1-jre.<br>\nFYI 32.0.0-jre was KO because of the then-corrected-in-32.0.1-jre error: java.lang.UnsupportedOperationException: 'posix:permissions' not supported as initial attribute. So let's not talk about this version.</p>\n<p dir=\"auto\">In 32.0.1-jre the method Files.createTempDir() has been modified and a program RUNNING ON WINDOWS is now unable to delete its own folders created by this call.</p>\n<p dir=\"auto\">Here is a sample creating a folder with java's own \"createTempDirectory\" and deleting it (this works fine) and then the same with Guava and it cannot delete it's own folder created with guava.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n        @Test\n\tpublic void testApp() throws IOException {\n\t\tPath tempDir = java.nio.file.Files.createTempDirectory(&quot;temp&quot;);\n\t\tdisplayDirectoryPermissions(tempDir);\n\t\tboolean isDeleted = tempDir.toFile().delete();\n\t\tassertTrue(isDeleted);\n\n\t\tSystem.out.println(&quot; - - - - - - - - - &quot;);\n\n\t\tPath tempDir2 = Files.createTempDir().toPath();\n\t\tdisplayDirectoryPermissions(tempDir2);\n\t\tboolean isDeleted2 = tempDir2.toFile().delete();\n\t\tassertTrue(isDeleted2);\n\t}\n\n\tprivate static void displayDirectoryPermissions(Path directory) throws IOException {\n        System.out.println(&quot;Informations sur les droits d'acc\u00e8s du r\u00e9pertoire : &quot; + directory.toAbsolutePath());\n\n\t\tAclFileAttributeView view = java.nio.file.Files.getFileAttributeView(directory, AclFileAttributeView.class);\n\t\tSystem.out.println(view.toString());\n\n\t\tview.getAcl().forEach(it -&gt; System.out.println(it.toString()));\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">\n        @Test\n\tpublic void testApp() throws IOException {\n\t\tPath tempDir = java.nio.file.Files.createTempDirectory(\"temp\");\n\t\tdisplayDirectoryPermissions(tempDir);\n\t\tboolean isDeleted = tempDir.toFile().delete();\n\t\tassertTrue(isDeleted);\n\n\t\tSystem.out.println(\" - - - - - - - - - \");\n\n\t\tPath tempDir2 = Files.createTempDir().toPath();\n\t\tdisplayDirectoryPermissions(tempDir2);\n\t\tboolean isDeleted2 = tempDir2.toFile().delete();\n\t\tassertTrue(isDeleted2);\n\t}\n\n\tprivate static void displayDirectoryPermissions(Path directory) throws IOException {\n        System.out.println(\"Informations sur les droits d'acc\u00e8s du r\u00e9pertoire : \" + directory.toAbsolutePath());\n\n\t\tAclFileAttributeView view = java.nio.file.Files.getFileAttributeView(directory, AclFileAttributeView.class);\n\t\tSystem.out.println(view.toString());\n\n\t\tview.getAcl().forEach(it -&gt; System.out.println(it.toString()));\n    }\n</code></pre></div>\n<p dir=\"auto\">Here are the (desidentified) trace and there is a huge difference beween both calls:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Informations sur les droits d'acc\u00e8s du r\u00e9pertoire : e:\\xxxxxxx\\target\\temp18063228888024228555\nsun.nio.fs.WindowsAclFileAttributeView@7494f96a\nBUILTIN\\Administrators:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:ALLOW\nBUILTIN\\Administrators:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nNT AUTHORITY\\SYSTEM:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:ALLOW\nNT AUTHORITY\\SYSTEM:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nNT AUTHORITY\\Authenticated Users:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/SYNCHRONIZE:ALLOW\nNT AUTHORITY\\Authenticated Users:DELETE:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nBUILTIN\\Users:READ_DATA/READ_NAMED_ATTRS/EXECUTE/READ_ATTRIBUTES/READ_ACL/SYNCHRONIZE:ALLOW\nBUILTIN\\Users:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\n - - - - - - - - - \nInformations sur les droits d'acc\u00e8s du r\u00e9pertoire : e:\\xxxxxxx\\target\\3980498532511240827\nsun.nio.fs.WindowsAclFileAttributeView@32502377\nWINDOWS-DOMAIN\\computerName$:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:FILE_INHERIT/DIRECTORY_INHERIT:ALLOW\"><pre class=\"notranslate\"><code class=\"notranslate\">Informations sur les droits d'acc\u00e8s du r\u00e9pertoire : e:\\xxxxxxx\\target\\temp18063228888024228555\nsun.nio.fs.WindowsAclFileAttributeView@7494f96a\nBUILTIN\\Administrators:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:ALLOW\nBUILTIN\\Administrators:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nNT AUTHORITY\\SYSTEM:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:ALLOW\nNT AUTHORITY\\SYSTEM:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nNT AUTHORITY\\Authenticated Users:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/SYNCHRONIZE:ALLOW\nNT AUTHORITY\\Authenticated Users:DELETE:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nBUILTIN\\Users:READ_DATA/READ_NAMED_ATTRS/EXECUTE/READ_ATTRIBUTES/READ_ACL/SYNCHRONIZE:ALLOW\nBUILTIN\\Users:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\n - - - - - - - - - \nInformations sur les droits d'acc\u00e8s du r\u00e9pertoire : e:\\xxxxxxx\\target\\3980498532511240827\nsun.nio.fs.WindowsAclFileAttributeView@32502377\nWINDOWS-DOMAIN\\computerName$:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:FILE_INHERIT/DIRECTORY_INHERIT:ALLOW\n</code></pre></div>",
                "resourcePath": "/google/guava/issues/6634",
                "createdAt": "2023-07-12T13:35:30Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "package=io"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "clone of https://github.com/google/guava/pull/6730 but with Windows testing on JDK8",
        "url": "https://github.com/google/guava/pull/6731",
        "resourcePath": "/google/guava/pull/6731",
        "createdAt": "2023-09-26T19:16:47Z",
        "number": 6731,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/io/FilesCreateTempDirTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/io/TempFileCreator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/io/FilesCreateTempDirTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/io/TempFileCreator.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5bRATN2gAoYmI5NDEwOTIwZTJlYTI0NDQyYjQxNTUwYzRiYmI3ZTZkZGQzNmI3Ng",
                "url": "https://github.com/google/guava/pull/6731/commits/bb9410920e2ea24442b41550c4bbb7e6ddd36b76"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6634,
                "url": "https://github.com/google/guava/issues/6634",
                "title": "From Guava 32.0.1-jre, Files.createTempDir() and FileBackedOutputStream can fail or create un-deletable directories/files when used from a Windows service",
                "bodyHTML": "<p dir=\"auto\">Hello I rencently upgraded from 31.1-jre to 32.0.1-jre.<br>\nFYI 32.0.0-jre was KO because of the then-corrected-in-32.0.1-jre error: java.lang.UnsupportedOperationException: 'posix:permissions' not supported as initial attribute. So let's not talk about this version.</p>\n<p dir=\"auto\">In 32.0.1-jre the method Files.createTempDir() has been modified and a program RUNNING ON WINDOWS is now unable to delete its own folders created by this call.</p>\n<p dir=\"auto\">Here is a sample creating a folder with java's own \"createTempDirectory\" and deleting it (this works fine) and then the same with Guava and it cannot delete it's own folder created with guava.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n        @Test\n\tpublic void testApp() throws IOException {\n\t\tPath tempDir = java.nio.file.Files.createTempDirectory(&quot;temp&quot;);\n\t\tdisplayDirectoryPermissions(tempDir);\n\t\tboolean isDeleted = tempDir.toFile().delete();\n\t\tassertTrue(isDeleted);\n\n\t\tSystem.out.println(&quot; - - - - - - - - - &quot;);\n\n\t\tPath tempDir2 = Files.createTempDir().toPath();\n\t\tdisplayDirectoryPermissions(tempDir2);\n\t\tboolean isDeleted2 = tempDir2.toFile().delete();\n\t\tassertTrue(isDeleted2);\n\t}\n\n\tprivate static void displayDirectoryPermissions(Path directory) throws IOException {\n        System.out.println(&quot;Informations sur les droits d'acc\u00e8s du r\u00e9pertoire : &quot; + directory.toAbsolutePath());\n\n\t\tAclFileAttributeView view = java.nio.file.Files.getFileAttributeView(directory, AclFileAttributeView.class);\n\t\tSystem.out.println(view.toString());\n\n\t\tview.getAcl().forEach(it -&gt; System.out.println(it.toString()));\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">\n        @Test\n\tpublic void testApp() throws IOException {\n\t\tPath tempDir = java.nio.file.Files.createTempDirectory(\"temp\");\n\t\tdisplayDirectoryPermissions(tempDir);\n\t\tboolean isDeleted = tempDir.toFile().delete();\n\t\tassertTrue(isDeleted);\n\n\t\tSystem.out.println(\" - - - - - - - - - \");\n\n\t\tPath tempDir2 = Files.createTempDir().toPath();\n\t\tdisplayDirectoryPermissions(tempDir2);\n\t\tboolean isDeleted2 = tempDir2.toFile().delete();\n\t\tassertTrue(isDeleted2);\n\t}\n\n\tprivate static void displayDirectoryPermissions(Path directory) throws IOException {\n        System.out.println(\"Informations sur les droits d'acc\u00e8s du r\u00e9pertoire : \" + directory.toAbsolutePath());\n\n\t\tAclFileAttributeView view = java.nio.file.Files.getFileAttributeView(directory, AclFileAttributeView.class);\n\t\tSystem.out.println(view.toString());\n\n\t\tview.getAcl().forEach(it -&gt; System.out.println(it.toString()));\n    }\n</code></pre></div>\n<p dir=\"auto\">Here are the (desidentified) trace and there is a huge difference beween both calls:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Informations sur les droits d'acc\u00e8s du r\u00e9pertoire : e:\\xxxxxxx\\target\\temp18063228888024228555\nsun.nio.fs.WindowsAclFileAttributeView@7494f96a\nBUILTIN\\Administrators:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:ALLOW\nBUILTIN\\Administrators:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nNT AUTHORITY\\SYSTEM:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:ALLOW\nNT AUTHORITY\\SYSTEM:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nNT AUTHORITY\\Authenticated Users:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/SYNCHRONIZE:ALLOW\nNT AUTHORITY\\Authenticated Users:DELETE:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nBUILTIN\\Users:READ_DATA/READ_NAMED_ATTRS/EXECUTE/READ_ATTRIBUTES/READ_ACL/SYNCHRONIZE:ALLOW\nBUILTIN\\Users:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\n - - - - - - - - - \nInformations sur les droits d'acc\u00e8s du r\u00e9pertoire : e:\\xxxxxxx\\target\\3980498532511240827\nsun.nio.fs.WindowsAclFileAttributeView@32502377\nWINDOWS-DOMAIN\\computerName$:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:FILE_INHERIT/DIRECTORY_INHERIT:ALLOW\"><pre class=\"notranslate\"><code class=\"notranslate\">Informations sur les droits d'acc\u00e8s du r\u00e9pertoire : e:\\xxxxxxx\\target\\temp18063228888024228555\nsun.nio.fs.WindowsAclFileAttributeView@7494f96a\nBUILTIN\\Administrators:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:ALLOW\nBUILTIN\\Administrators:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nNT AUTHORITY\\SYSTEM:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:ALLOW\nNT AUTHORITY\\SYSTEM:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nNT AUTHORITY\\Authenticated Users:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/SYNCHRONIZE:ALLOW\nNT AUTHORITY\\Authenticated Users:DELETE:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nBUILTIN\\Users:READ_DATA/READ_NAMED_ATTRS/EXECUTE/READ_ATTRIBUTES/READ_ACL/SYNCHRONIZE:ALLOW\nBUILTIN\\Users:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\n - - - - - - - - - \nInformations sur les droits d'acc\u00e8s du r\u00e9pertoire : e:\\xxxxxxx\\target\\3980498532511240827\nsun.nio.fs.WindowsAclFileAttributeView@32502377\nWINDOWS-DOMAIN\\computerName$:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:FILE_INHERIT/DIRECTORY_INHERIT:ALLOW\n</code></pre></div>",
                "resourcePath": "/google/guava/issues/6634",
                "createdAt": "2023-07-12T13:35:30Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "package=io"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "clone of https://github.com/google/guava/pull/6730 but without the prod change -- should fail Windows testing",
        "url": "https://github.com/google/guava/pull/6732",
        "resourcePath": "/google/guava/pull/6732",
        "createdAt": "2023-09-26T19:22:53Z",
        "number": 6732,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/io/FilesCreateTempDirTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/io/TempFileCreator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/io/FilesCreateTempDirTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/io/TempFileCreator.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5bRCJ-2gAoZTJhNGE1MmNiZTYxMzExYjNiMzk1NjU3YzUzZmZmNWIxMDNlYzMwNg",
                "url": "https://github.com/google/guava/pull/6732/commits/e2a4a52cbe61311b3b395657c53fff5b103ec306"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6634,
                "url": "https://github.com/google/guava/issues/6634",
                "title": "From Guava 32.0.1-jre, Files.createTempDir() and FileBackedOutputStream can fail or create un-deletable directories/files when used from a Windows service",
                "bodyHTML": "<p dir=\"auto\">Hello I rencently upgraded from 31.1-jre to 32.0.1-jre.<br>\nFYI 32.0.0-jre was KO because of the then-corrected-in-32.0.1-jre error: java.lang.UnsupportedOperationException: 'posix:permissions' not supported as initial attribute. So let's not talk about this version.</p>\n<p dir=\"auto\">In 32.0.1-jre the method Files.createTempDir() has been modified and a program RUNNING ON WINDOWS is now unable to delete its own folders created by this call.</p>\n<p dir=\"auto\">Here is a sample creating a folder with java's own \"createTempDirectory\" and deleting it (this works fine) and then the same with Guava and it cannot delete it's own folder created with guava.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"\n        @Test\n\tpublic void testApp() throws IOException {\n\t\tPath tempDir = java.nio.file.Files.createTempDirectory(&quot;temp&quot;);\n\t\tdisplayDirectoryPermissions(tempDir);\n\t\tboolean isDeleted = tempDir.toFile().delete();\n\t\tassertTrue(isDeleted);\n\n\t\tSystem.out.println(&quot; - - - - - - - - - &quot;);\n\n\t\tPath tempDir2 = Files.createTempDir().toPath();\n\t\tdisplayDirectoryPermissions(tempDir2);\n\t\tboolean isDeleted2 = tempDir2.toFile().delete();\n\t\tassertTrue(isDeleted2);\n\t}\n\n\tprivate static void displayDirectoryPermissions(Path directory) throws IOException {\n        System.out.println(&quot;Informations sur les droits d'acc\u00e8s du r\u00e9pertoire : &quot; + directory.toAbsolutePath());\n\n\t\tAclFileAttributeView view = java.nio.file.Files.getFileAttributeView(directory, AclFileAttributeView.class);\n\t\tSystem.out.println(view.toString());\n\n\t\tview.getAcl().forEach(it -&gt; System.out.println(it.toString()));\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">\n        @Test\n\tpublic void testApp() throws IOException {\n\t\tPath tempDir = java.nio.file.Files.createTempDirectory(\"temp\");\n\t\tdisplayDirectoryPermissions(tempDir);\n\t\tboolean isDeleted = tempDir.toFile().delete();\n\t\tassertTrue(isDeleted);\n\n\t\tSystem.out.println(\" - - - - - - - - - \");\n\n\t\tPath tempDir2 = Files.createTempDir().toPath();\n\t\tdisplayDirectoryPermissions(tempDir2);\n\t\tboolean isDeleted2 = tempDir2.toFile().delete();\n\t\tassertTrue(isDeleted2);\n\t}\n\n\tprivate static void displayDirectoryPermissions(Path directory) throws IOException {\n        System.out.println(\"Informations sur les droits d'acc\u00e8s du r\u00e9pertoire : \" + directory.toAbsolutePath());\n\n\t\tAclFileAttributeView view = java.nio.file.Files.getFileAttributeView(directory, AclFileAttributeView.class);\n\t\tSystem.out.println(view.toString());\n\n\t\tview.getAcl().forEach(it -&gt; System.out.println(it.toString()));\n    }\n</code></pre></div>\n<p dir=\"auto\">Here are the (desidentified) trace and there is a huge difference beween both calls:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Informations sur les droits d'acc\u00e8s du r\u00e9pertoire : e:\\xxxxxxx\\target\\temp18063228888024228555\nsun.nio.fs.WindowsAclFileAttributeView@7494f96a\nBUILTIN\\Administrators:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:ALLOW\nBUILTIN\\Administrators:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nNT AUTHORITY\\SYSTEM:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:ALLOW\nNT AUTHORITY\\SYSTEM:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nNT AUTHORITY\\Authenticated Users:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/SYNCHRONIZE:ALLOW\nNT AUTHORITY\\Authenticated Users:DELETE:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nBUILTIN\\Users:READ_DATA/READ_NAMED_ATTRS/EXECUTE/READ_ATTRIBUTES/READ_ACL/SYNCHRONIZE:ALLOW\nBUILTIN\\Users:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\n - - - - - - - - - \nInformations sur les droits d'acc\u00e8s du r\u00e9pertoire : e:\\xxxxxxx\\target\\3980498532511240827\nsun.nio.fs.WindowsAclFileAttributeView@32502377\nWINDOWS-DOMAIN\\computerName$:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:FILE_INHERIT/DIRECTORY_INHERIT:ALLOW\"><pre class=\"notranslate\"><code class=\"notranslate\">Informations sur les droits d'acc\u00e8s du r\u00e9pertoire : e:\\xxxxxxx\\target\\temp18063228888024228555\nsun.nio.fs.WindowsAclFileAttributeView@7494f96a\nBUILTIN\\Administrators:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:ALLOW\nBUILTIN\\Administrators:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nNT AUTHORITY\\SYSTEM:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:ALLOW\nNT AUTHORITY\\SYSTEM:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nNT AUTHORITY\\Authenticated Users:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/SYNCHRONIZE:ALLOW\nNT AUTHORITY\\Authenticated Users:DELETE:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\nBUILTIN\\Users:READ_DATA/READ_NAMED_ATTRS/EXECUTE/READ_ATTRIBUTES/READ_ACL/SYNCHRONIZE:ALLOW\nBUILTIN\\Users:FILE_INHERIT/DIRECTORY_INHERIT/INHERIT_ONLY:ALLOW\n - - - - - - - - - \nInformations sur les droits d'acc\u00e8s du r\u00e9pertoire : e:\\xxxxxxx\\target\\3980498532511240827\nsun.nio.fs.WindowsAclFileAttributeView@32502377\nWINDOWS-DOMAIN\\computerName$:READ_DATA/WRITE_DATA/APPEND_DATA/READ_NAMED_ATTRS/WRITE_NAMED_ATTRS/EXECUTE/DELETE_CHILD/READ_ATTRIBUTES/WRITE_ATTRIBUTES/DELETE/READ_ACL/WRITE_ACL/WRITE_OWNER/SYNCHRONIZE:FILE_INHERIT/DIRECTORY_INHERIT:ALLOW\n</code></pre></div>",
                "resourcePath": "/google/guava/issues/6634",
                "createdAt": "2023-07-12T13:35:30Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "package=io"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Bump `failureaccess` dep to 1.0.2.",
        "url": "https://github.com/google/guava/pull/6788",
        "resourcePath": "/google/guava/pull/6788",
        "createdAt": "2023-10-17T16:39:57Z",
        "number": 6788,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6776,
                "url": "https://github.com/google/guava/issues/6776",
                "title": "Javadoc fails with \"cannot access InternalFutureFailureAccess\"",
                "bodyHTML": "<p dir=\"auto\">I am not convinced that this is ultimately Guava's fault, but Guava seems to be causing the problem.</p>\n<p dir=\"auto\">My builds fail during Javadoc because of Guava, like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[INFO] --- javadoc:3.5.0:jar (default) @ guava-javadoc-bug-module ---\n[INFO] No previous run data found, generating javadoc.\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for guava-javadoc-bug 1.0.0:\n[INFO] \n[INFO] guava-javadoc-bug .................................. SUCCESS [  0.395 s]\n[INFO] guava-javadoc-bug-module ........................... FAILURE [  0.691 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.242 s\n[INFO] Finished at: 2023-10-12T14:55:10-05:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:3.5.0:jar (default) on project guava-javadoc-bug-module: MavenReportException: Error while generating Javadoc: \n[ERROR] Exit code: 1\n[ERROR] /Users/archie/bugs/guava-javadoc-bug.0/module/src/main/java/com/example/MyFuture.java:6: error: cannot access InternalFutureFailureAccess\n[ERROR] public abstract class MyFuture extends AbstractFuture&lt;Void&gt; {\n[ERROR]                 ^\n[ERROR]   class file for com.google.common.util.concurrent.internal.InternalFutureFailureAccess not found\n[ERROR] warning: unknown enum constant Level.FULL\n[ERROR]   reason: class file for com.google.j2objc.annotations.ReflectionSupport$Level not found\n[ERROR] 1 error\n[ERROR] 1 warning\n[ERROR] Command line was: /opt/homebrew/Cellar/openjdk@17/17.0.8.1/libexec/openjdk.jdk/Contents/Home/bin/javadoc @options @packages\n[ERROR] \n[ERROR] Refer to the generated Javadoc files in '/Users/archie/bugs/guava-javadoc-bug.0/module/target/apidocs' dir.\"><pre class=\"notranslate\"><code class=\"notranslate\">[INFO] --- javadoc:3.5.0:jar (default) @ guava-javadoc-bug-module ---\n[INFO] No previous run data found, generating javadoc.\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for guava-javadoc-bug 1.0.0:\n[INFO] \n[INFO] guava-javadoc-bug .................................. SUCCESS [  0.395 s]\n[INFO] guava-javadoc-bug-module ........................... FAILURE [  0.691 s]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  1.242 s\n[INFO] Finished at: 2023-10-12T14:55:10-05:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:3.5.0:jar (default) on project guava-javadoc-bug-module: MavenReportException: Error while generating Javadoc: \n[ERROR] Exit code: 1\n[ERROR] /Users/archie/bugs/guava-javadoc-bug.0/module/src/main/java/com/example/MyFuture.java:6: error: cannot access InternalFutureFailureAccess\n[ERROR] public abstract class MyFuture extends AbstractFuture&lt;Void&gt; {\n[ERROR]                 ^\n[ERROR]   class file for com.google.common.util.concurrent.internal.InternalFutureFailureAccess not found\n[ERROR] warning: unknown enum constant Level.FULL\n[ERROR]   reason: class file for com.google.j2objc.annotations.ReflectionSupport$Level not found\n[ERROR] 1 error\n[ERROR] 1 warning\n[ERROR] Command line was: /opt/homebrew/Cellar/openjdk@17/17.0.8.1/libexec/openjdk.jdk/Contents/Home/bin/javadoc @options @packages\n[ERROR] \n[ERROR] Refer to the generated Javadoc files in '/Users/archie/bugs/guava-javadoc-bug.0/module/target/apidocs' dir.\n</code></pre></div>\n<p dir=\"auto\">To reproduce the bug, first verify you are using JDK 17. Then:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ git clone git@github.com:archiecobbs/guava-javadoc-bug.git\n$ cd guava-javadoc-bug\n$ mvn\"><pre class=\"notranslate\">$ git clone git@github.com:archiecobbs/guava-javadoc-bug.git\n$ <span class=\"pl-c1\">cd</span> guava-javadoc-bug\n$ mvn</pre></div>\n<p dir=\"auto\">The problem goes away if you remove the <code class=\"notranslate\">&lt;Automatic-Module-Name&gt;${automatic.module.name}&lt;/Automatic-Module-Name&gt;</code> in the JAR plugin configuration.</p>",
                "resourcePath": "/google/guava/issues/6776",
                "createdAt": "2023-10-12T19:59:34Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=concurrent"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make `equals` work when comparing a `cartesianProduct` against another `Set`.",
        "url": "https://github.com/google/guava/pull/6789",
        "resourcePath": "/google/guava/pull/6789",
        "createdAt": "2023-10-17T17:38:58Z",
        "number": 6789,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6780,
                "url": "https://github.com/google/guava/issues/6780",
                "title": "`CartesianSet.equals` always returns false for other `Set` types",
                "bodyHTML": "<h3 dir=\"auto\">Version</h3>\n<p dir=\"auto\">32.1.3-jre</p>\n<h3 dir=\"auto\">Description</h3>\n<p dir=\"auto\">The internal class <code class=\"notranslate\">CartesianSet</code> returned by <code class=\"notranslate\">Sets.cartesianProduct</code> implements <code class=\"notranslate\">equals</code> in a way that it is never equal to any other <code class=\"notranslate\">Set</code> type because it calls <code class=\"notranslate\">super.equals</code> which is actually <code class=\"notranslate\">Object.equals</code> (and therefore checks for object identity).<br>\nThat does not seem intended.</p>\n<h3 dir=\"auto\">Example</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Object o1 = ImmutableSet.of(ImmutableList.of(1, 2));\nObject o2 = Sets.cartesianProduct(ImmutableList.of(\n    ImmutableSet.of(1), ImmutableSet.of(2)\n));\n\nSystem.out.println(&quot;o1.equals(o2): &quot; + o1.equals(o2));\nSystem.out.println(&quot;o2.equals(o1): &quot; + o2.equals(o1));\"><pre class=\"notranslate\"><span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">o1</span> = <span class=\"pl-smi\">ImmutableSet</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-smi\">ImmutableList</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>));\n<span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">o2</span> = <span class=\"pl-smi\">Sets</span>.<span class=\"pl-en\">cartesianProduct</span>(<span class=\"pl-smi\">ImmutableList</span>.<span class=\"pl-en\">of</span>(\n    <span class=\"pl-smi\">ImmutableSet</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-c1\">1</span>), <span class=\"pl-smi\">ImmutableSet</span>.<span class=\"pl-en\">of</span>(<span class=\"pl-c1\">2</span>)\n));\n\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"o1.equals(o2): \"</span> + <span class=\"pl-s1\">o1</span>.<span class=\"pl-en\">equals</span>(<span class=\"pl-s1\">o2</span>));\n<span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s\">\"o2.equals(o1): \"</span> + <span class=\"pl-s1\">o2</span>.<span class=\"pl-en\">equals</span>(<span class=\"pl-s1\">o1</span>));</pre></div>",
                "resourcePath": "/google/guava/issues/6780",
                "createdAt": "2023-10-14T20:59:25Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add Maven wrapper distribution checksum",
        "url": "https://github.com/google/guava/pull/6807",
        "resourcePath": "/google/guava/pull/6807",
        "createdAt": "2023-10-25T22:27:01Z",
        "number": 6807,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".mvn/wrapper/maven-wrapper.properties"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5dzece2gAoOGRmYjkwYzY4ZTc2ZTJmNWI3OTQ3ZWQxOThkZmJhYzEwZjBiMzNiMQ",
                "url": "https://github.com/google/guava/pull/6807/commits/8dfb90c68e76e2f5b7947ed198dfbac10f0b33b1"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6805,
                "url": "https://github.com/google/guava/issues/6805",
                "title": "Add checksums for Maven wrapper",
                "bodyHTML": "<p dir=\"auto\">It is possible to specify the expected checksums for the Maven wrapper and the Maven distribution using <code class=\"notranslate\">wrapperSha256Sum</code> and <code class=\"notranslate\">distributionSha256Sum</code> in the <code class=\"notranslate\">maven-wrapper.properties</code> file, see <a href=\"https://maven.apache.org/wrapper/index.html#checksum-verification-of-downloaded-binaries\" rel=\"nofollow\">https://maven.apache.org/wrapper/index.html#checksum-verification-of-downloaded-binaries</a>.</p>\n<p dir=\"auto\">Do you think it would make sense to specify these checksums for Guava? This could cause issues though if the user does not have the needed packages installed locally, see for example:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/050f89f39f3a0e3276cd5696a82e0bb050915b52/mvnw#L271-L272\">guava/mvnw</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 271 to 272\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/guava/commit/050f89f39f3a0e3276cd5696a82e0bb050915b52\">050f89f</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L271\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"271\"></td>\n          <td id=\"LC271\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.<span class=\"pl-pds\">\"</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L272\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"272\"></td>\n          <td id=\"LC272\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c1\">echo</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Please install either command, or disable validation by removing 'wrapperSha256Sum' from your maven-wrapper.properties.<span class=\"pl-pds\">\"</span></span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">(As side note, if the files had already been downloaded before, their checksums are apparently not checked anymore, see <a href=\"https://issues.apache.org/jira/browse/MWRAPPER-93\" rel=\"nofollow\">MWRAPPER-93</a>)</p>",
                "resourcePath": "/google/guava/issues/6805",
                "createdAt": "2023-10-25T20:36:03Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Check compatibility against the Android SDK (including [always-desugared APIs](https://github.com/open-toast/gummy-bears#android) but still not opt-in library desugaring) instead of the JDK.",
        "url": "https://github.com/google/guava/pull/6846",
        "resourcePath": "/google/guava/pull/6846",
        "createdAt": "2023-11-21T17:17:45Z",
        "number": 6846,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5gDFC02gAoZTMyOWE0NGYyYzViNTBmOGU0MjE3MGM3ZTJkNjllNzRkNDZjODE1ZA",
                "url": "https://github.com/google/guava/pull/6846/commits/e329a44f2c5b50f8e42170c7e2d69e74d46c815d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 4005,
                "url": "https://github.com/google/guava/issues/4005",
                "title": "Experiment with checking against *Android* Animal Sniffer signatures",
                "bodyHTML": "<p dir=\"auto\">...as opposed to just checking against \"Java 6\" and \"Java 8.\"</p>\n<p dir=\"auto\">I somewhat doubt that we'd get much out of this (and it might even have drawbacks if it starts flagging types like <code class=\"notranslate\">Unsafe</code>?), but I wanted to record somewhere that I learned of this possibility.</p>\n<p dir=\"auto\">I saw it in action in <a href=\"https://github.com/googleapis/google-http-java-client/blob/e957229fd77c08b7dd6233e2a243f6c675ba32bf/pom.xml#L515-L527\">https://github.com/googleapis/google-http-java-client/blob/e957229fd77c08b7dd6233e2a243f6c675ba32bf/pom.xml#L515-L527</a></p>",
                "resourcePath": "/google/guava/issues/4005",
                "createdAt": "2020-09-02T17:18:04Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "refactor: make `LocalCache` not use `synchronized` to detect recursive loads (#6845)",
        "url": "https://github.com/google/guava/pull/6851",
        "resourcePath": "/google/guava/pull/6851",
        "createdAt": "2023-11-25T20:16:36Z",
        "number": 6851,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/cache/LocalCacheTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/cache/LocalCache.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5gXMlm2gAoNDk4YmFmMWU1ODVjMzYxOTY4ZWYwZjNlMmIyNWE3N2JhMmEyMzQ1ZA",
                "url": "https://github.com/google/guava/pull/6851/commits/498baf1e585c361968ef0f3e2b25a77ba2a2345d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6845,
                "url": "https://github.com/google/guava/issues/6845",
                "title": "remove `synchronized` from `LocalCache::get(key, loader)` to allow for `VirtualThread`-friendly value-loading",
                "bodyHTML": "<h3 dir=\"auto\">API(s)</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"com.google.common.cache.LocalCache$Segment.lockedGetOrLoad\"><pre class=\"notranslate\"><span class=\"pl-smi\">com</span>.<span class=\"pl-smi\">google</span>.<span class=\"pl-smi\">common</span>.<span class=\"pl-smi\">cache</span>.<span class=\"pl-smi\">LocalCache$Segment</span>.<span class=\"pl-smi\">lockedGetOrLoad</span></pre></div>\n<h3 dir=\"auto\">How do you want it to be improved?</h3>\n<p dir=\"auto\"><a href=\"https://github.com/google/guava/blob/4f12c5891a7adedbaa1d99fc9f77d8cc4e9da206/guava/src/com/google/common/cache/LocalCache.java#L2191C1-L2191C71\">This load</a> should be possible without using <code class=\"notranslate\">synchronized</code>.</p>\n<h3 dir=\"auto\">Why do we need it to be improved?</h3>\n<p dir=\"auto\">Using synchronized here is not performant when the current Thread is a Java 21 <code class=\"notranslate\">VirtualThread</code> and the loader does some blocking operation, because the <code class=\"notranslate\">synchronized</code> prevents the JVM from unmounting the Thread. The performance could be drastically improved by using p.e. <code class=\"notranslate\">ReentrantLock</code>.</p>\n<h3 dir=\"auto\">Example</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Thread.ofVirtual().start( () -&gt; {\n  Database database;\n  var databaseLoader = new CacheLoader&lt;String, Object&gt;() {\n        @Override\n        public Object load(String key) {\n            return database.load(key); // loads an object by querying a database over the network \n        }\n    };\nvar cache = CacheBuilder.newBuilder().build(databaseLoader);\nvar fooObject = cache.getOrLoad(&quot;foo&quot;); // cache miss, invokes the loader\n});\"><pre class=\"notranslate\"><span class=\"pl-smi\">Thread</span>.<span class=\"pl-en\">ofVirtual</span>().<span class=\"pl-en\">start</span>( () -&gt; {\n  <span class=\"pl-smi\">Database</span> <span class=\"pl-s1\">database</span>;\n  <span class=\"pl-smi\">var</span> <span class=\"pl-s1\">databaseLoader</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">CacheLoader</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>&gt;() {\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Object</span> <span class=\"pl-en\">load</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">key</span>) {\n            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">database</span>.<span class=\"pl-en\">load</span>(<span class=\"pl-s1\">key</span>); <span class=\"pl-c\">// loads an object by querying a database over the network </span>\n        }\n    };\n<span class=\"pl-smi\">var</span> <span class=\"pl-s1\">cache</span> = <span class=\"pl-smi\">CacheBuilder</span>.<span class=\"pl-en\">newBuilder</span>().<span class=\"pl-en\">build</span>(<span class=\"pl-s1\">databaseLoader</span>);\n<span class=\"pl-smi\">var</span> <span class=\"pl-s1\">fooObject</span> = <span class=\"pl-s1\">cache</span>.<span class=\"pl-en\">getOrLoad</span>(<span class=\"pl-s\">\"foo\"</span>); <span class=\"pl-c\">// cache miss, invokes the loader</span>\n});</pre></div>\n<h3 dir=\"auto\">Current Behavior</h3>\n<p dir=\"auto\">In the above example, the loader is invoked. This invocation happens inside a <code class=\"notranslate\">synchronized</code> block in <code class=\"notranslate\">com.google.common.cache.LocalCache$Segment.lockedGetOrLoad</code>. Because the loader does I/O but is inside the <code class=\"notranslate\">synchronized</code> block the <code class=\"notranslate\">VirtualThread</code> can not be unmounted and therefore blocks its carrier. This is bad for the throughput of the application. This behavior can be observed  using any loader that does a blocking operation when it is invoked from a <code class=\"notranslate\">VirtualThread</code> (just start your JVM with <code class=\"notranslate\">-Djdk.tracePinnedThreads=full</code>). The performance impact is dependent on how long the loader takes, but since generally one only caches things that are expensive to do I believe this to be a problem for pretty much anyone using <code class=\"notranslate\">LocalCache</code> in combination with <code class=\"notranslate\">VirtualThreads</code>.</p>\n<h3 dir=\"auto\">Desired Behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">com.google.common.cache.LocalCache$Segment.lockedGetOrLoad</code> should work gracefully with VirtualThreads and not block the carrier Thread if a loader does I/O or some other blocking operation.</p>\n<p dir=\"auto\">The method should therefore be refactored to lock using some other method, p.e. a <code class=\"notranslate\">ReentrantLock</code>.</p>\n<h3 dir=\"auto\">Concrete Use Cases</h3>\n<p dir=\"auto\">We use a <code class=\"notranslate\">LocalCache</code> to cache frequently used database objects. Our loader therefore executes a SQL query over the network, which is a blocking operation and takes comparatively long. We are currently experimenting with using <code class=\"notranslate\">VirtualThreads</code> in order to improve the throughput of I/O heavy workloads.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I agree to follow the <a href=\"https://github.com/google/.github/blob/master/CODE_OF_CONDUCT.md\">code of conduct</a>.</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I have read and understood the <a href=\"https://github.com/google/guava/wiki/HowToContribute#feature-requests\">contribution guidelines</a>.</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I have read and understood <a href=\"https://github.com/google/guava/wiki/PhilosophyExplained\">Guava's philosophy</a>, and I strongly believe that this proposal aligns with it.</p>\n</li>\n</ul>",
                "resourcePath": "/google/guava/issues/6845",
                "createdAt": "2023-11-21T13:28:47Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "package=cache"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make `LocalCache` not use `synchronized` to detect recursive loads.",
        "url": "https://github.com/google/guava/pull/6857",
        "resourcePath": "/google/guava/pull/6857",
        "createdAt": "2023-12-01T14:46:19Z",
        "number": 6857,
        "mergeCommit": {
          "oid": "1512730820a99e329a475b7143b7295775ef26ba",
          "message": "Make `LocalCache` not use `synchronized` to detect recursive loads.\n\nFixes #6851\nFixes #6845\n\nRELNOTES=n/a\nPiperOrigin-RevId: 588778069",
          "commitUrl": "https://github.com/google/guava/commit/1512730820a99e329a475b7143b7295775ef26ba",
          "parents": {
            "nodes": [
              {
                "oid": "d5108721bf4b848b6473178e195d655d8801228f",
                "message": "Make the J2CL version of `ExtraObjectsMethodsForWeb` public.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 588595558"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/cache/LocalCacheTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/cache/LocalCache.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/cache/LocalCacheTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/cache/LocalCache.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5g6CWp2gAoMTUxMjczMDgyMGE5OWUzMjlhNDc1YjcxNDNiNzI5NTc3NWVmMjZiYQ",
                "url": "https://github.com/google/guava/pull/6857/commits/1512730820a99e329a475b7143b7295775ef26ba"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6845,
                "url": "https://github.com/google/guava/issues/6845",
                "title": "remove `synchronized` from `LocalCache::get(key, loader)` to allow for `VirtualThread`-friendly value-loading",
                "bodyHTML": "<h3 dir=\"auto\">API(s)</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"com.google.common.cache.LocalCache$Segment.lockedGetOrLoad\"><pre class=\"notranslate\"><span class=\"pl-smi\">com</span>.<span class=\"pl-smi\">google</span>.<span class=\"pl-smi\">common</span>.<span class=\"pl-smi\">cache</span>.<span class=\"pl-smi\">LocalCache$Segment</span>.<span class=\"pl-smi\">lockedGetOrLoad</span></pre></div>\n<h3 dir=\"auto\">How do you want it to be improved?</h3>\n<p dir=\"auto\"><a href=\"https://github.com/google/guava/blob/4f12c5891a7adedbaa1d99fc9f77d8cc4e9da206/guava/src/com/google/common/cache/LocalCache.java#L2191C1-L2191C71\">This load</a> should be possible without using <code class=\"notranslate\">synchronized</code>.</p>\n<h3 dir=\"auto\">Why do we need it to be improved?</h3>\n<p dir=\"auto\">Using synchronized here is not performant when the current Thread is a Java 21 <code class=\"notranslate\">VirtualThread</code> and the loader does some blocking operation, because the <code class=\"notranslate\">synchronized</code> prevents the JVM from unmounting the Thread. The performance could be drastically improved by using p.e. <code class=\"notranslate\">ReentrantLock</code>.</p>\n<h3 dir=\"auto\">Example</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Thread.ofVirtual().start( () -&gt; {\n  Database database;\n  var databaseLoader = new CacheLoader&lt;String, Object&gt;() {\n        @Override\n        public Object load(String key) {\n            return database.load(key); // loads an object by querying a database over the network \n        }\n    };\nvar cache = CacheBuilder.newBuilder().build(databaseLoader);\nvar fooObject = cache.getOrLoad(&quot;foo&quot;); // cache miss, invokes the loader\n});\"><pre class=\"notranslate\"><span class=\"pl-smi\">Thread</span>.<span class=\"pl-en\">ofVirtual</span>().<span class=\"pl-en\">start</span>( () -&gt; {\n  <span class=\"pl-smi\">Database</span> <span class=\"pl-s1\">database</span>;\n  <span class=\"pl-smi\">var</span> <span class=\"pl-s1\">databaseLoader</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">CacheLoader</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>&gt;() {\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Object</span> <span class=\"pl-en\">load</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">key</span>) {\n            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">database</span>.<span class=\"pl-en\">load</span>(<span class=\"pl-s1\">key</span>); <span class=\"pl-c\">// loads an object by querying a database over the network </span>\n        }\n    };\n<span class=\"pl-smi\">var</span> <span class=\"pl-s1\">cache</span> = <span class=\"pl-smi\">CacheBuilder</span>.<span class=\"pl-en\">newBuilder</span>().<span class=\"pl-en\">build</span>(<span class=\"pl-s1\">databaseLoader</span>);\n<span class=\"pl-smi\">var</span> <span class=\"pl-s1\">fooObject</span> = <span class=\"pl-s1\">cache</span>.<span class=\"pl-en\">getOrLoad</span>(<span class=\"pl-s\">\"foo\"</span>); <span class=\"pl-c\">// cache miss, invokes the loader</span>\n});</pre></div>\n<h3 dir=\"auto\">Current Behavior</h3>\n<p dir=\"auto\">In the above example, the loader is invoked. This invocation happens inside a <code class=\"notranslate\">synchronized</code> block in <code class=\"notranslate\">com.google.common.cache.LocalCache$Segment.lockedGetOrLoad</code>. Because the loader does I/O but is inside the <code class=\"notranslate\">synchronized</code> block the <code class=\"notranslate\">VirtualThread</code> can not be unmounted and therefore blocks its carrier. This is bad for the throughput of the application. This behavior can be observed  using any loader that does a blocking operation when it is invoked from a <code class=\"notranslate\">VirtualThread</code> (just start your JVM with <code class=\"notranslate\">-Djdk.tracePinnedThreads=full</code>). The performance impact is dependent on how long the loader takes, but since generally one only caches things that are expensive to do I believe this to be a problem for pretty much anyone using <code class=\"notranslate\">LocalCache</code> in combination with <code class=\"notranslate\">VirtualThreads</code>.</p>\n<h3 dir=\"auto\">Desired Behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">com.google.common.cache.LocalCache$Segment.lockedGetOrLoad</code> should work gracefully with VirtualThreads and not block the carrier Thread if a loader does I/O or some other blocking operation.</p>\n<p dir=\"auto\">The method should therefore be refactored to lock using some other method, p.e. a <code class=\"notranslate\">ReentrantLock</code>.</p>\n<h3 dir=\"auto\">Concrete Use Cases</h3>\n<p dir=\"auto\">We use a <code class=\"notranslate\">LocalCache</code> to cache frequently used database objects. Our loader therefore executes a SQL query over the network, which is a blocking operation and takes comparatively long. We are currently experimenting with using <code class=\"notranslate\">VirtualThreads</code> in order to improve the throughput of I/O heavy workloads.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I agree to follow the <a href=\"https://github.com/google/.github/blob/master/CODE_OF_CONDUCT.md\">code of conduct</a>.</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I have read and understood the <a href=\"https://github.com/google/guava/wiki/HowToContribute#feature-requests\">contribution guidelines</a>.</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I have read and understood <a href=\"https://github.com/google/guava/wiki/PhilosophyExplained\">Guava's philosophy</a>, and I strongly believe that this proposal aligns with it.</p>\n</li>\n</ul>",
                "resourcePath": "/google/guava/issues/6845",
                "createdAt": "2023-11-21T13:28:47Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "package=cache"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add `Duration` overload for `Suppliers.memoizeWithExpiration`.",
        "url": "https://github.com/google/guava/pull/6909",
        "resourcePath": "/google/guava/pull/6909",
        "createdAt": "2024-01-10T17:18:54Z",
        "number": 6909,
        "mergeCommit": {
          "oid": "76e46ec35bbc220ba56d1e9a0abd853a7df51ece",
          "message": "Add `Duration` overload for `Suppliers.memoizeWithExpiration`.\n\nThis CL contains part but not all of https://github.com/google/guava/pull/3691\n\nFixes https://github.com/google/guava/issues/3169\n\nWe'd considered this previously in cl/197933201 but gotten stuck on the question of whether to accept and/or return the `java.util.function` type. My claim is that we want an overload that is near-identical to the old one for ease of migration. Additionally, if we want to support `java.util.function.Supplier` in the future, then we're going to have to add an overload of the existing `memoize` method, and which point it would probably look _more_ weird if we had 2 overloads for `memoize` (and maybe `synchronizedSupplier`) but only a single `memoizeWithExpiration` method.\n\nRELNOTES=`base`: Added a `Duration` overload for `Suppliers.memoizeWithExpiration`.\nPiperOrigin-RevId: 597280125",
          "commitUrl": "https://github.com/google/guava/commit/76e46ec35bbc220ba56d1e9a0abd853a7df51ece",
          "parents": {
            "nodes": [
              {
                "oid": "ca0ad2ab28cd6cd0974bf2df30ee495dfefb94bf",
                "message": "Bump copyright year.\n\nWithout this, our Javadoc lists 2023 as the most recent year, and that gets weird after a little while.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 596671950"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava-tests/test/com/google/common/base/SuppliersTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "android/guava/src/com/google/common/base/IgnoreJRERequirement.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "android/guava/src/com/google/common/base/Internal.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/base/Suppliers.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava-tests/test/com/google/common/base/SuppliersTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "guava/src/com/google/common/base/IgnoreJRERequirement.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "guava/src/com/google/common/base/Internal.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/base/Suppliers.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5jtZE92gAoNzZlNDZlYzM1YmJjMjIwYmE1NmQxZTlhMGFiZDg1M2E3ZGY1MWVjZQ",
                "url": "https://github.com/google/guava/pull/6909/commits/76e46ec35bbc220ba56d1e9a0abd853a7df51ece"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3169,
                "url": "https://github.com/google/guava/issues/3169",
                "title": "Add java.time.Duration overloads to Suppliers.memoizeWithExpiration()",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">Suppliers.memoizeWithExpiration()</code> takes a <code class=\"notranslate\">TimeUnit</code>. Consider adding a <code class=\"notranslate\">java.time.Duration</code> overload similar to what you did with <code class=\"notranslate\">CacheBuilder</code>.</p>",
                "resourcePath": "/google/guava/issues/3169",
                "createdAt": "2018-05-30T08:24:42Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=addition"
                      }
                    },
                    {
                      "node": {
                        "name": "package=base"
                      }
                    },
                    {
                      "node": {
                        "name": "status=triaged"
                      }
                    },
                    {
                      "node": {
                        "name": "platform=java8"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Roll back [the change that made `LocalCache` avoid `synchronized`](https://github.com/google/guava/commit/1512730820a99e329a475b7143b7295775ef26ba).",
        "url": "https://github.com/google/guava/pull/6972",
        "resourcePath": "/google/guava/pull/6972",
        "createdAt": "2024-02-07T19:54:23Z",
        "number": 6972,
        "mergeCommit": {
          "oid": "0e1aebf73ec48848b17b402a22f33f55756073e8",
          "message": "Roll back [the change that made `LocalCache` avoid `synchronized`](https://github.com/google/guava/commit/1512730820a99e329a475b7143b7295775ef26ba).\n\nThe `LocalCache` change led to [false reports of recursion during refresh](https://github.com/google/guava/pull/6851#issuecomment-1931276822).\n\nThis CL keeps the new tests from the `LocalCache` change, which already would have passed before the CL. Ideally we would additionally include [tests that demonstrate the refresh problem](https://github.com/google/guava/pull/6851#issuecomment-1931276822), but we'll need to see if the contributor can sign a CLA.\n\nThis rollback un-fixes https://github.com/google/guava/issues/6845. Users of `common.cache` and virtual threads will likely have to wait until `synchronized` no longer pins threads. (And at that point, if not earlier, they should migrate to [Caffeine](https://github.com/ben-manes/caffeine) :))\n\nRELNOTES=`cache`: Fixed a bug that could cause [false \"recursive load\" reports during refresh](https://github.com/google/guava/pull/6851#issuecomment-1931276822).\nPiperOrigin-RevId: 605069776",
          "commitUrl": "https://github.com/google/guava/commit/0e1aebf73ec48848b17b402a22f33f55756073e8",
          "parents": {
            "nodes": [
              {
                "oid": "476faf9e2cf5dbc77b462b0c11a658c41d617f00",
                "message": "Bump gradle/wrapper-validation-action from 2.0.0 to 2.0.1\n\nBumps [gradle/wrapper-validation-action](https://github.com/gradle/wrapper-validation-action) from 2.0.0 to 2.0.1.\n- [Release notes](https://github.com/gradle/wrapper-validation-action/releases)\n- [Commits](https://github.com/gradle/wrapper-validation-action/compare/27152f6fa06a6b8062ef7195c795692e51fc2c81...a494d935f4b56874c4a5a87d19af7afcf3a163d0)\n\nFixes #6967\n\nRELNOTES=n/a\nPiperOrigin-RevId: 605019012"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/guava/src/com/google/common/cache/LocalCache.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/cache/LocalCache.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5mTRaO2gAoMGUxYWViZjczZWM0ODg0OGIxN2I0MDJhMjJmMzNmNTU3NTYwNzNlOA",
                "url": "https://github.com/google/guava/pull/6972/commits/0e1aebf73ec48848b17b402a22f33f55756073e8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6845,
                "url": "https://github.com/google/guava/issues/6845",
                "title": "remove `synchronized` from `LocalCache::get(key, loader)` to allow for `VirtualThread`-friendly value-loading",
                "bodyHTML": "<h3 dir=\"auto\">API(s)</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"com.google.common.cache.LocalCache$Segment.lockedGetOrLoad\"><pre class=\"notranslate\"><span class=\"pl-smi\">com</span>.<span class=\"pl-smi\">google</span>.<span class=\"pl-smi\">common</span>.<span class=\"pl-smi\">cache</span>.<span class=\"pl-smi\">LocalCache$Segment</span>.<span class=\"pl-smi\">lockedGetOrLoad</span></pre></div>\n<h3 dir=\"auto\">How do you want it to be improved?</h3>\n<p dir=\"auto\"><a href=\"https://github.com/google/guava/blob/4f12c5891a7adedbaa1d99fc9f77d8cc4e9da206/guava/src/com/google/common/cache/LocalCache.java#L2191C1-L2191C71\">This load</a> should be possible without using <code class=\"notranslate\">synchronized</code>.</p>\n<h3 dir=\"auto\">Why do we need it to be improved?</h3>\n<p dir=\"auto\">Using synchronized here is not performant when the current Thread is a Java 21 <code class=\"notranslate\">VirtualThread</code> and the loader does some blocking operation, because the <code class=\"notranslate\">synchronized</code> prevents the JVM from unmounting the Thread. The performance could be drastically improved by using p.e. <code class=\"notranslate\">ReentrantLock</code>.</p>\n<h3 dir=\"auto\">Example</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Thread.ofVirtual().start( () -&gt; {\n  Database database;\n  var databaseLoader = new CacheLoader&lt;String, Object&gt;() {\n        @Override\n        public Object load(String key) {\n            return database.load(key); // loads an object by querying a database over the network \n        }\n    };\nvar cache = CacheBuilder.newBuilder().build(databaseLoader);\nvar fooObject = cache.getOrLoad(&quot;foo&quot;); // cache miss, invokes the loader\n});\"><pre class=\"notranslate\"><span class=\"pl-smi\">Thread</span>.<span class=\"pl-en\">ofVirtual</span>().<span class=\"pl-en\">start</span>( () -&gt; {\n  <span class=\"pl-smi\">Database</span> <span class=\"pl-s1\">database</span>;\n  <span class=\"pl-smi\">var</span> <span class=\"pl-s1\">databaseLoader</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">CacheLoader</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Object</span>&gt;() {\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n        <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Object</span> <span class=\"pl-en\">load</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">key</span>) {\n            <span class=\"pl-k\">return</span> <span class=\"pl-s1\">database</span>.<span class=\"pl-en\">load</span>(<span class=\"pl-s1\">key</span>); <span class=\"pl-c\">// loads an object by querying a database over the network </span>\n        }\n    };\n<span class=\"pl-smi\">var</span> <span class=\"pl-s1\">cache</span> = <span class=\"pl-smi\">CacheBuilder</span>.<span class=\"pl-en\">newBuilder</span>().<span class=\"pl-en\">build</span>(<span class=\"pl-s1\">databaseLoader</span>);\n<span class=\"pl-smi\">var</span> <span class=\"pl-s1\">fooObject</span> = <span class=\"pl-s1\">cache</span>.<span class=\"pl-en\">getOrLoad</span>(<span class=\"pl-s\">\"foo\"</span>); <span class=\"pl-c\">// cache miss, invokes the loader</span>\n});</pre></div>\n<h3 dir=\"auto\">Current Behavior</h3>\n<p dir=\"auto\">In the above example, the loader is invoked. This invocation happens inside a <code class=\"notranslate\">synchronized</code> block in <code class=\"notranslate\">com.google.common.cache.LocalCache$Segment.lockedGetOrLoad</code>. Because the loader does I/O but is inside the <code class=\"notranslate\">synchronized</code> block the <code class=\"notranslate\">VirtualThread</code> can not be unmounted and therefore blocks its carrier. This is bad for the throughput of the application. This behavior can be observed  using any loader that does a blocking operation when it is invoked from a <code class=\"notranslate\">VirtualThread</code> (just start your JVM with <code class=\"notranslate\">-Djdk.tracePinnedThreads=full</code>). The performance impact is dependent on how long the loader takes, but since generally one only caches things that are expensive to do I believe this to be a problem for pretty much anyone using <code class=\"notranslate\">LocalCache</code> in combination with <code class=\"notranslate\">VirtualThreads</code>.</p>\n<h3 dir=\"auto\">Desired Behavior</h3>\n<p dir=\"auto\"><code class=\"notranslate\">com.google.common.cache.LocalCache$Segment.lockedGetOrLoad</code> should work gracefully with VirtualThreads and not block the carrier Thread if a loader does I/O or some other blocking operation.</p>\n<p dir=\"auto\">The method should therefore be refactored to lock using some other method, p.e. a <code class=\"notranslate\">ReentrantLock</code>.</p>\n<h3 dir=\"auto\">Concrete Use Cases</h3>\n<p dir=\"auto\">We use a <code class=\"notranslate\">LocalCache</code> to cache frequently used database objects. Our loader therefore executes a SQL query over the network, which is a blocking operation and takes comparatively long. We are currently experimenting with using <code class=\"notranslate\">VirtualThreads</code> in order to improve the throughput of I/O heavy workloads.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I agree to follow the <a href=\"https://github.com/google/.github/blob/master/CODE_OF_CONDUCT.md\">code of conduct</a>.</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I have read and understood the <a href=\"https://github.com/google/guava/wiki/HowToContribute#feature-requests\">contribution guidelines</a>.</p>\n</li>\n<li class=\"task-list-item\">\n<p dir=\"auto\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I have read and understood <a href=\"https://github.com/google/guava/wiki/PhilosophyExplained\">Guava's philosophy</a>, and I strongly believe that this proposal aligns with it.</p>\n</li>\n</ul>",
                "resourcePath": "/google/guava/issues/6845",
                "createdAt": "2023-11-21T13:28:47Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "package=cache"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add action version comments in GitHub workflow files",
        "url": "https://github.com/google/guava/pull/7079",
        "resourcePath": "/google/guava/pull/7079",
        "createdAt": "2024-03-05T21:00:47Z",
        "number": 7079,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/gradle-wrapper-validation.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5oxDd-2gAoY2Q1ODU1ZmIyNjFkYTAxYTcwYmI2ODU2MDE0Y2NiYjc3MmYwOGY2Mg",
                "url": "https://github.com/google/guava/pull/7079/commits/cd5855fb261da01a70bb6856014ccbb772f08f62"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 7068,
                "url": "https://github.com/google/guava/issues/7068",
                "title": "Add action version comments in GitHub workflow files",
                "bodyHTML": "<p dir=\"auto\">The GitHub workflow files of Guava currently refer to action versions by commit hash, for example:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/a6a34dc42627f2dc5b8937f428322739b74ce8f3/.github/workflows/ci.yml#L69-L70\">guava/.github/workflows/ci.yml</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 69 to 70\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/guava/commit/a6a34dc42627f2dc5b8937f428322739b74ce8f3\">a6a34dc</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L69\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"69\"></td>\n          <td id=\"LC69\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> - <span class=\"pl-ent\">name</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Check out repository<span class=\"pl-pds\">'</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L70\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"70\"></td>\n          <td id=\"LC70\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-ent\">uses</span>: <span class=\"pl-s\">actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">While this is good from a security perspective, it makes it difficult at a glance to see which version number (such as \"v1.2.3\") of that action is used.</p>\n<p dir=\"auto\">What do you think about adding version comments, such as <code class=\"notranslate\"># v1.2.3</code>, behind the commit hashes? It seems Dependabot will <a href=\"https://github.blog/changelog/2022-10-31-dependabot-now-updates-comments-in-github-actions-workflows-referencing-action-versions/\" rel=\"nofollow\">automatically update those comments</a>.</p>",
                "resourcePath": "/google/guava/issues/7068",
                "createdAt": "2024-03-04T12:26:51Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add action version comments in GitHub workflow files",
        "url": "https://github.com/google/guava/pull/7083",
        "resourcePath": "/google/guava/pull/7083",
        "createdAt": "2024-03-06T16:07:35Z",
        "number": 7083,
        "mergeCommit": {
          "oid": "b90ce5bde751e20ca24574aad7dd22646269ab07",
          "message": "Add action version comments in GitHub workflow files\n\nResolves #7068\nFixes #7079\n\nRELNOTES=n/a\nPiperOrigin-RevId: 613225504",
          "commitUrl": "https://github.com/google/guava/commit/b90ce5bde751e20ca24574aad7dd22646269ab07",
          "parents": {
            "nodes": [
              {
                "oid": "cf86414a87e6e0d008f9438619e97eeefd22a32f",
                "message": "Deprecate the remaining two `propagateIfPossible` overloads.\n\nWe'd missed these years ago.\n\nThey won't be deleted, but we recommend migrating off them: Their behavior is less clear, and we are considering some static analysis that would likely apply to the new methods but not the old.\n\n(I notice that there is already [ThrowIfUncheckedKnownChecked](https://errorprone.info/bugpattern/ThrowIfUncheckedKnownChecked). That's a little different, since `propagateIfPossible(knownCheckedException, clazz)` isn't necessarily a no-op. But that could probably would be better written with `throwIfInstanceOf` to make clear that we know we're not rethrowing unchecked exceptions. Anyway, the possible future static analysis includes `throwIfInstanceOf(exception, classThatItCouldNeverBeAnInstanceOf)`, as sometimes seen when accidentally operating on an `ExecutionException` instead of its cause.)\n\nRELNOTES=`base`: Deprecated the remaining two overloads of `Throwables.propagateIfPossible`. They won't be deleted, but we recommend migrating off them.\nPiperOrigin-RevId: 613210259"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/gradle-wrapper-validation.yml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5o2_um2gAoYjkwY2U1YmRlNzUxZTIwY2EyNDU3NGFhZDdkZDIyNjQ2MjY5YWIwNw",
                "url": "https://github.com/google/guava/pull/7083/commits/b90ce5bde751e20ca24574aad7dd22646269ab07"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 7068,
                "url": "https://github.com/google/guava/issues/7068",
                "title": "Add action version comments in GitHub workflow files",
                "bodyHTML": "<p dir=\"auto\">The GitHub workflow files of Guava currently refer to action versions by commit hash, for example:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/guava/blob/a6a34dc42627f2dc5b8937f428322739b74ce8f3/.github/workflows/ci.yml#L69-L70\">guava/.github/workflows/ci.yml</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 69 to 70\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/guava/commit/a6a34dc42627f2dc5b8937f428322739b74ce8f3\">a6a34dc</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L69\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"69\"></td>\n          <td id=\"LC69\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> - <span class=\"pl-ent\">name</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Check out repository<span class=\"pl-pds\">'</span></span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L70\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"70\"></td>\n          <td id=\"LC70\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   <span class=\"pl-ent\">uses</span>: <span class=\"pl-s\">actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">While this is good from a security perspective, it makes it difficult at a glance to see which version number (such as \"v1.2.3\") of that action is used.</p>\n<p dir=\"auto\">What do you think about adding version comments, such as <code class=\"notranslate\"># v1.2.3</code>, behind the commit hashes? It seems Dependabot will <a href=\"https://github.blog/changelog/2022-10-31-dependabot-now-updates-comments-in-github-actions-workflows-referencing-action-versions/\" rel=\"nofollow\">automatically update those comments</a>.</p>",
                "resourcePath": "/google/guava/issues/7068",
                "createdAt": "2024-03-04T12:26:51Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix: Java 18+ Builds",
        "url": "https://github.com/google/guava/pull/7087",
        "resourcePath": "/google/guava/pull/7087",
        "createdAt": "2024-03-08T07:28:15Z",
        "number": 7087,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5pDQCZ2gAoY2JkMTllZWYzYTcwMGZiMDY5NWRlYWY1ZWQ2ODhjZGU0NmIzZGFlMw",
                "url": "https://github.com/google/guava/pull/7087/commits/cbd19eef3a700fb0695deaf5ed688cde46b3dae3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 7065,
                "url": "https://github.com/google/guava/issues/7065",
                "title": "Guava build fails on `master` with JDK 21",
                "bodyHTML": "<h3 dir=\"auto\">Description</h3>\n<p dir=\"auto\">Using latest LTS JVM (21):</p>\n<ol dir=\"auto\">\n<li><code class=\"notranslate\">git clone git@github.com:google/guava.git</code></li>\n<li><code class=\"notranslate\">cd guava &amp;&amp; mvn clean package</code></li>\n<li>Build fails</li>\n</ol>\n<h3 dir=\"auto\">Example</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"See above\"><pre class=\"notranslate\"><span class=\"pl-smi\">See</span> <span class=\"pl-s1\">above</span></pre></div>\n<h3 dir=\"auto\">Expected Behavior</h3>\n<p dir=\"auto\">The build should not fail</p>\n<h3 dir=\"auto\">Actual Behavior</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[INFO] \n[INFO] --- bundle:5.1.8:bundle (default-bundle) @ guava ---\n[INFO] Building bundle: /Volumes/VAULTROOM/guava/guava/target/guava-HEAD-jre-SNAPSHOT.jar\n[INFO] Writing manifest: /Volumes/VAULTROOM/guava/guava/target/classes/META-INF/MANIFEST.MF\n[INFO] \n[INFO] --- source:3.3.0:jar-no-fork (attach-sources) @ guava ---\n[INFO] Building jar: /Volumes/VAULTROOM/guava/guava/target/guava-HEAD-jre-SNAPSHOT-sources.jar\n[INFO] \n[INFO] --- javadoc:3.5.0:jar (attach-docs) @ guava ---\n[INFO] No previous run data found, generating javadoc.\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for Guava Maven Parent HEAD-jre-SNAPSHOT:\n[INFO] \n[INFO] Guava Maven Parent ................................. SUCCESS [  3.488 s]\n[INFO] Guava: Google Core Libraries for Java .............. FAILURE [ 48.658 s]\n[INFO] Guava BOM .......................................... SKIPPED\n[INFO] Guava Testing Library .............................. SKIPPED\n[INFO] Guava Unit Tests ................................... SKIPPED\n[INFO] Guava GWT compatible libs .......................... SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  53.890 s\n[INFO] Finished at: 2024-03-01T13:22:02-08:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:3.5.0:jar (attach-docs) on project guava: MavenReportException: Error while generating Javadoc: \n[ERROR] Exit code: 1\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/vm/ScopedValueContainer.java:28: error: StructureViolationException is a preview API and is disabled by default.\n[ERROR] import java.util.concurrent.StructureViolationException;\n[ERROR]                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:31: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaTemplateAccess.java:49: error: StringTemplate is a preview API and is disabled by default.\n[ERROR]     StringTemplate of(List&lt;String&gt; fragments, List&lt;?&gt; values);\n[ERROR]     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaTemplateAccess.java:75: error: StringTemplate is a preview API and is disabled by default.\n[ERROR]     StringTemplate combine(StringTemplate... sts);\n[ERROR]                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaTemplateAccess.java:75: error: StringTemplate is a preview API and is disabled by default.\n[ERROR]     StringTemplate combine(StringTemplate... sts);\n[ERROR]     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:50: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     ByteBuffer newDirectByteBuffer(long addr, int cap, Object obj, MemorySegment segment);\n[ERROR]                                                                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:60: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     ByteBuffer newMappedByteBuffer(UnmapperProxy unmapperProxy, long addr, int cap, Object obj, MemorySegment segment);\n[ERROR]                                                                                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:66: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     ByteBuffer newHeapByteBuffer(byte[] hb, int offset, int capacity, MemorySegment segment);\n[ERROR]                                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:86: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     MemorySegment bufferSegment(Buffer buffer);\n[ERROR]     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:32: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:33: error: Arena is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.Arena;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:1206: error: Arena is a preview API and is disabled by default.\n[ERROR]                              Arena arena)\n[ERROR]                              ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:1205: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment map(MapMode mode, long offset, long size,\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:58: error: ValueLayout is a preview API and is disabled by default.\n[ERROR] import static java.lang.foreign.ValueLayout.JAVA_BYTE;\n[ERROR]                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:70: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         implements MemorySegment, SegmentAllocator, BiFunction&lt;String, List&lt;Number&gt;, RuntimeException&gt;\n[ERROR]                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:70: error: SegmentAllocator is a preview API and is disabled by default.\n[ERROR]         implements MemorySegment, SegmentAllocator, BiFunction&lt;String, List&lt;Number&gt;, RuntimeException&gt;\n[ERROR]                                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:29: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:30: error: ValueLayout is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.ValueLayout;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:29: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/misc/ScopedMemoryAccess.java:32: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:29: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:30: error: Arena is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.Arena;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:31: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment.Scope;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:31: error: Scope is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment.Scope;\n[ERROR]                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:53: error: Scope is a preview API and is disabled by default.\n[ERROR]         implements Scope\n[ERROR]                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:115: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment asSlice(long offset, long newSize, long byteAlignment) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:127: error: Arena is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize, Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                          ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:127: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize, Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:127: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize, Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:135: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize) {\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:141: error: Arena is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:141: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:141: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:147: error: Scope is a preview API and is disabled by default.\n[ERROR]     public MemorySegment reinterpretInternal(Class&lt;?&gt; callerClass, long newSize, Scope scope, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:147: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment reinterpretInternal(Class&lt;?&gt; callerClass, long newSize, Scope scope, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                                                        ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:147: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment reinterpretInternal(Class&lt;?&gt; callerClass, long newSize, Scope scope, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:165: error: MemoryLayout is a preview API and is disabled by default.\n[ERROR]     public Spliterator&lt;MemorySegment&gt; spliterator(MemoryLayout elementLayout) {\n[ERROR]                                                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:165: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public Spliterator&lt;MemorySegment&gt; spliterator(MemoryLayout elementLayout) {\n[ERROR]                        ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:182: error: MemoryLayout is a preview API and is disabled by default.\n[ERROR]     public Stream&lt;MemorySegment&gt; elements(MemoryLayout elementLayout) {\n[ERROR]                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:182: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public Stream&lt;MemorySegment&gt; elements(MemoryLayout elementLayout) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:187: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment fill(byte value){\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:194: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment allocate(long byteSize, long byteAlignment) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:258: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final Optional&lt;MemorySegment&gt; asOverlappingSlice(MemorySegment other) {\n[ERROR]                                                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:258: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final Optional&lt;MemorySegment&gt; asOverlappingSlice(MemorySegment other) {\n[ERROR]                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:276: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final long segmentOffset(MemorySegment other) {\n[ERROR]                                     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:309: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final byte[] toArray(ValueLayout.OfByte elementLayout) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:309: error: OfByte is a preview API and is disabled by default.\n[ERROR]     public final byte[] toArray(ValueLayout.OfByte elementLayout) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:314: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final short[] toArray(ValueLayout.OfShort elementLayout) {\n[ERROR]                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:314: error: OfShort is a preview API and is disabled by default.\n[ERROR]     public final short[] toArray(ValueLayout.OfShort elementLayout) {\n[ERROR]                                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:319: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final char[] toArray(ValueLayout.OfChar elementLayout) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:319: error: OfChar is a preview API and is disabled by default.\n[ERROR]     public final char[] toArray(ValueLayout.OfChar elementLayout) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:324: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final int[] toArray(ValueLayout.OfInt elementLayout) {\n[ERROR]                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:324: error: OfInt is a preview API and is disabled by default.\n[ERROR]     public final int[] toArray(ValueLayout.OfInt elementLayout) {\n[ERROR]                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:329: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final float[] toArray(ValueLayout.OfFloat elementLayout) {\n[ERROR]                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:329: error: OfFloat is a preview API and is disabled by default.\n[ERROR]     public final float[] toArray(ValueLayout.OfFloat elementLayout) {\n[ERROR]                                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:334: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final long[] toArray(ValueLayout.OfLong elementLayout) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:334: error: OfLong is a preview API and is disabled by default.\n[ERROR]     public final long[] toArray(ValueLayout.OfLong elementLayout) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:339: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final double[] toArray(ValueLayout.OfDouble elementLayout) {\n[ERROR]                                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:339: error: OfDouble is a preview API and is disabled by default.\n[ERROR]     public final double[] toArray(ValueLayout.OfDouble elementLayout) {\n[ERROR]                                              ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:343: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     private &lt;Z&gt; Z toArray(Class&lt;Z&gt; arrayClass, ValueLayout elemLayout, IntFunction&lt;Z&gt; arrayFactory, Function&lt;Z, MemorySegment&gt; segmentFactory) {\n[ERROR]                                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:343: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     private &lt;Z&gt; Z toArray(Class&lt;Z&gt; arrayClass, ValueLayout elemLayout, IntFunction&lt;Z&gt; arrayFactory, Function&lt;Z, MemorySegment&gt; segmentFactory) {\n[ERROR]                                                                                                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:372: error: MemoryLayout is a preview API and is disabled by default.\n[ERROR]     public final boolean isAlignedForElement(long offset, MemoryLayout layout) {\n[ERROR]                                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:411: error: Scope is a preview API and is disabled by default.\n[ERROR]     public Scope scope() {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:594: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcElementLayout, long srcOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:594: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcElementLayout, long srcOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:595: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstElementLayout, long dstOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:595: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstElementLayout, long dstOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:626: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcLayout, long srcOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:626: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcLayout, long srcOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:656: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstLayout, long dstOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:656: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstLayout, long dstOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:683: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static long mismatch(MemorySegment srcSegment, long srcFromOffset, long srcToOffset,\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:684: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]                                 MemorySegment dstSegment, long dstFromOffset, long dstToOffset) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:79: error: Arena is a preview API and is disabled by default.\n[ERROR]     public Arena asArena() {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:94: error: Arena is a preview API and is disabled by default.\n[ERROR]     public static final MemorySessionImpl toMemorySession(Arena arena) {\n[ERROR]                                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:156: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment allocate(long byteSize, long byteAlignment) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:223: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static final void checkValidState(MemorySegment segment) {\n[ERROR]                                              ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:118: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegment(long byteSize, long byteAlignment, MemorySessionImpl sessionImpl) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:154: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegmentUnchecked(long min, long byteSize, MemorySessionImpl sessionImpl, Runnable action) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:164: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegmentUnchecked(long min, long byteSize, MemorySessionImpl sessionImpl) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:170: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegmentUnchecked(long min, long byteSize) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:430: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     static class SegmentSplitter implements Spliterator&lt;MemorySegment&gt; {\n[ERROR]                                                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:459: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public boolean tryAdvance(Consumer&lt;? super MemorySegment&gt; action) {\n[ERROR]                                                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:478: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public void forEachRemaining(Consumer&lt;? super MemorySegment&gt; action) {\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:113: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(byte[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:147: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(char[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:181: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(short[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:215: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(int[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:249: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(long[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:283: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(float[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:317: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(double[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] 91 errors\n[ERROR] Command line was: /Library/Java/JavaVirtualMachines/gvm-ce.jdk21/Contents/Home/bin/javadoc @options @argfile\n[ERROR] \n[ERROR] Refer to the generated Javadoc files in '/Volumes/VAULTROOM/guava/guava/target/apidocs' dir.\n[ERROR] \n[ERROR] -&gt; [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException\n[ERROR] \n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR]   mvn &lt;args&gt; -rf :guava\"><pre class=\"notranslate\"><code class=\"notranslate\">[INFO] \n[INFO] --- bundle:5.1.8:bundle (default-bundle) @ guava ---\n[INFO] Building bundle: /Volumes/VAULTROOM/guava/guava/target/guava-HEAD-jre-SNAPSHOT.jar\n[INFO] Writing manifest: /Volumes/VAULTROOM/guava/guava/target/classes/META-INF/MANIFEST.MF\n[INFO] \n[INFO] --- source:3.3.0:jar-no-fork (attach-sources) @ guava ---\n[INFO] Building jar: /Volumes/VAULTROOM/guava/guava/target/guava-HEAD-jre-SNAPSHOT-sources.jar\n[INFO] \n[INFO] --- javadoc:3.5.0:jar (attach-docs) @ guava ---\n[INFO] No previous run data found, generating javadoc.\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for Guava Maven Parent HEAD-jre-SNAPSHOT:\n[INFO] \n[INFO] Guava Maven Parent ................................. SUCCESS [  3.488 s]\n[INFO] Guava: Google Core Libraries for Java .............. FAILURE [ 48.658 s]\n[INFO] Guava BOM .......................................... SKIPPED\n[INFO] Guava Testing Library .............................. SKIPPED\n[INFO] Guava Unit Tests ................................... SKIPPED\n[INFO] Guava GWT compatible libs .......................... SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  53.890 s\n[INFO] Finished at: 2024-03-01T13:22:02-08:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:3.5.0:jar (attach-docs) on project guava: MavenReportException: Error while generating Javadoc: \n[ERROR] Exit code: 1\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/vm/ScopedValueContainer.java:28: error: StructureViolationException is a preview API and is disabled by default.\n[ERROR] import java.util.concurrent.StructureViolationException;\n[ERROR]                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:31: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaTemplateAccess.java:49: error: StringTemplate is a preview API and is disabled by default.\n[ERROR]     StringTemplate of(List&lt;String&gt; fragments, List&lt;?&gt; values);\n[ERROR]     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaTemplateAccess.java:75: error: StringTemplate is a preview API and is disabled by default.\n[ERROR]     StringTemplate combine(StringTemplate... sts);\n[ERROR]                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaTemplateAccess.java:75: error: StringTemplate is a preview API and is disabled by default.\n[ERROR]     StringTemplate combine(StringTemplate... sts);\n[ERROR]     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:50: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     ByteBuffer newDirectByteBuffer(long addr, int cap, Object obj, MemorySegment segment);\n[ERROR]                                                                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:60: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     ByteBuffer newMappedByteBuffer(UnmapperProxy unmapperProxy, long addr, int cap, Object obj, MemorySegment segment);\n[ERROR]                                                                                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:66: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     ByteBuffer newHeapByteBuffer(byte[] hb, int offset, int capacity, MemorySegment segment);\n[ERROR]                                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:86: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     MemorySegment bufferSegment(Buffer buffer);\n[ERROR]     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:32: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:33: error: Arena is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.Arena;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:1206: error: Arena is a preview API and is disabled by default.\n[ERROR]                              Arena arena)\n[ERROR]                              ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:1205: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment map(MapMode mode, long offset, long size,\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:58: error: ValueLayout is a preview API and is disabled by default.\n[ERROR] import static java.lang.foreign.ValueLayout.JAVA_BYTE;\n[ERROR]                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:70: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         implements MemorySegment, SegmentAllocator, BiFunction&lt;String, List&lt;Number&gt;, RuntimeException&gt;\n[ERROR]                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:70: error: SegmentAllocator is a preview API and is disabled by default.\n[ERROR]         implements MemorySegment, SegmentAllocator, BiFunction&lt;String, List&lt;Number&gt;, RuntimeException&gt;\n[ERROR]                                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:29: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:30: error: ValueLayout is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.ValueLayout;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:29: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/misc/ScopedMemoryAccess.java:32: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:29: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:30: error: Arena is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.Arena;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:31: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment.Scope;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:31: error: Scope is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment.Scope;\n[ERROR]                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:53: error: Scope is a preview API and is disabled by default.\n[ERROR]         implements Scope\n[ERROR]                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:115: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment asSlice(long offset, long newSize, long byteAlignment) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:127: error: Arena is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize, Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                          ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:127: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize, Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:127: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize, Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:135: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize) {\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:141: error: Arena is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:141: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:141: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:147: error: Scope is a preview API and is disabled by default.\n[ERROR]     public MemorySegment reinterpretInternal(Class&lt;?&gt; callerClass, long newSize, Scope scope, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:147: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment reinterpretInternal(Class&lt;?&gt; callerClass, long newSize, Scope scope, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                                                        ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:147: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment reinterpretInternal(Class&lt;?&gt; callerClass, long newSize, Scope scope, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:165: error: MemoryLayout is a preview API and is disabled by default.\n[ERROR]     public Spliterator&lt;MemorySegment&gt; spliterator(MemoryLayout elementLayout) {\n[ERROR]                                                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:165: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public Spliterator&lt;MemorySegment&gt; spliterator(MemoryLayout elementLayout) {\n[ERROR]                        ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:182: error: MemoryLayout is a preview API and is disabled by default.\n[ERROR]     public Stream&lt;MemorySegment&gt; elements(MemoryLayout elementLayout) {\n[ERROR]                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:182: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public Stream&lt;MemorySegment&gt; elements(MemoryLayout elementLayout) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:187: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment fill(byte value){\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:194: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment allocate(long byteSize, long byteAlignment) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:258: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final Optional&lt;MemorySegment&gt; asOverlappingSlice(MemorySegment other) {\n[ERROR]                                                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:258: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final Optional&lt;MemorySegment&gt; asOverlappingSlice(MemorySegment other) {\n[ERROR]                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:276: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final long segmentOffset(MemorySegment other) {\n[ERROR]                                     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:309: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final byte[] toArray(ValueLayout.OfByte elementLayout) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:309: error: OfByte is a preview API and is disabled by default.\n[ERROR]     public final byte[] toArray(ValueLayout.OfByte elementLayout) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:314: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final short[] toArray(ValueLayout.OfShort elementLayout) {\n[ERROR]                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:314: error: OfShort is a preview API and is disabled by default.\n[ERROR]     public final short[] toArray(ValueLayout.OfShort elementLayout) {\n[ERROR]                                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:319: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final char[] toArray(ValueLayout.OfChar elementLayout) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:319: error: OfChar is a preview API and is disabled by default.\n[ERROR]     public final char[] toArray(ValueLayout.OfChar elementLayout) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:324: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final int[] toArray(ValueLayout.OfInt elementLayout) {\n[ERROR]                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:324: error: OfInt is a preview API and is disabled by default.\n[ERROR]     public final int[] toArray(ValueLayout.OfInt elementLayout) {\n[ERROR]                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:329: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final float[] toArray(ValueLayout.OfFloat elementLayout) {\n[ERROR]                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:329: error: OfFloat is a preview API and is disabled by default.\n[ERROR]     public final float[] toArray(ValueLayout.OfFloat elementLayout) {\n[ERROR]                                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:334: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final long[] toArray(ValueLayout.OfLong elementLayout) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:334: error: OfLong is a preview API and is disabled by default.\n[ERROR]     public final long[] toArray(ValueLayout.OfLong elementLayout) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:339: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final double[] toArray(ValueLayout.OfDouble elementLayout) {\n[ERROR]                                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:339: error: OfDouble is a preview API and is disabled by default.\n[ERROR]     public final double[] toArray(ValueLayout.OfDouble elementLayout) {\n[ERROR]                                              ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:343: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     private &lt;Z&gt; Z toArray(Class&lt;Z&gt; arrayClass, ValueLayout elemLayout, IntFunction&lt;Z&gt; arrayFactory, Function&lt;Z, MemorySegment&gt; segmentFactory) {\n[ERROR]                                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:343: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     private &lt;Z&gt; Z toArray(Class&lt;Z&gt; arrayClass, ValueLayout elemLayout, IntFunction&lt;Z&gt; arrayFactory, Function&lt;Z, MemorySegment&gt; segmentFactory) {\n[ERROR]                                                                                                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:372: error: MemoryLayout is a preview API and is disabled by default.\n[ERROR]     public final boolean isAlignedForElement(long offset, MemoryLayout layout) {\n[ERROR]                                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:411: error: Scope is a preview API and is disabled by default.\n[ERROR]     public Scope scope() {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:594: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcElementLayout, long srcOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:594: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcElementLayout, long srcOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:595: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstElementLayout, long dstOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:595: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstElementLayout, long dstOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:626: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcLayout, long srcOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:626: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcLayout, long srcOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:656: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstLayout, long dstOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:656: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstLayout, long dstOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:683: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static long mismatch(MemorySegment srcSegment, long srcFromOffset, long srcToOffset,\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:684: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]                                 MemorySegment dstSegment, long dstFromOffset, long dstToOffset) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:79: error: Arena is a preview API and is disabled by default.\n[ERROR]     public Arena asArena() {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:94: error: Arena is a preview API and is disabled by default.\n[ERROR]     public static final MemorySessionImpl toMemorySession(Arena arena) {\n[ERROR]                                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:156: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment allocate(long byteSize, long byteAlignment) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:223: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static final void checkValidState(MemorySegment segment) {\n[ERROR]                                              ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:118: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegment(long byteSize, long byteAlignment, MemorySessionImpl sessionImpl) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:154: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegmentUnchecked(long min, long byteSize, MemorySessionImpl sessionImpl, Runnable action) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:164: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegmentUnchecked(long min, long byteSize, MemorySessionImpl sessionImpl) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:170: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegmentUnchecked(long min, long byteSize) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:430: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     static class SegmentSplitter implements Spliterator&lt;MemorySegment&gt; {\n[ERROR]                                                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:459: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public boolean tryAdvance(Consumer&lt;? super MemorySegment&gt; action) {\n[ERROR]                                                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:478: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public void forEachRemaining(Consumer&lt;? super MemorySegment&gt; action) {\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:113: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(byte[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:147: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(char[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:181: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(short[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:215: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(int[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:249: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(long[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:283: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(float[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:317: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(double[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] 91 errors\n[ERROR] Command line was: /Library/Java/JavaVirtualMachines/gvm-ce.jdk21/Contents/Home/bin/javadoc @options @argfile\n[ERROR] \n[ERROR] Refer to the generated Javadoc files in '/Volumes/VAULTROOM/guava/guava/target/apidocs' dir.\n[ERROR] \n[ERROR] -&gt; [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException\n[ERROR] \n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR]   mvn &lt;args&gt; -rf :guava\n</code></pre></div>\n<h3 dir=\"auto\">Packages</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Platforms</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Checklist</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I agree to follow the <a href=\"https://github.com/google/.github/blob/master/CODE_OF_CONDUCT.md\">code of conduct</a>.</li>\n</ul>",
                "resourcePath": "/google/guava/issues/7065",
                "createdAt": "2024-03-01T21:26:33Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "chore(ci): improvements to gha workflows",
        "url": "https://github.com/google/guava/pull/7089",
        "resourcePath": "/google/guava/pull/7089",
        "createdAt": "2024-03-08T18:29:33Z",
        "number": 7089,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": ".github/workflows/ci.test.yml"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": ".github/workflows/ci.yml"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": ".github/workflows/codeql.yml"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": ".github/workflows/dependency-review.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/gradle-wrapper-validation.yml"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": ".github/workflows/on.pr.yml"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": ".github/workflows/on.push.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/scorecard.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5pHDAU2gAoYzU4NDZlMTBiOTk0ZWEyNTgwMDA2MDkxZGQyNmM1ZmUwMTI2ZDhhNg",
                "url": "https://github.com/google/guava/pull/7089/commits/c5846e10b994ea2580006091dd26c5fe0126d8a6"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 7088,
                "url": "https://github.com/google/guava/issues/7088",
                "title": "Supply Chain Security",
                "bodyHTML": "<p dir=\"auto\">The Java ecosystem would be appreciative if, given Guava's place as the number 4 artifact worldwide, efforts could be made to ship releases with <a href=\"https://spdx.dev\" rel=\"nofollow\">SBOMs</a>, <a href=\"https://slsa.dev\" rel=\"nofollow\">SLSA provenance</a>, and <a href=\"https://sigstore\" rel=\"nofollow\">Sigstore support</a>. This will prepare many many downstream projects and libraries for stronger dependency security.</p>",
                "resourcePath": "/google/guava/issues/7088",
                "createdAt": "2024-03-08T07:43:07Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Guava + JPMS",
        "url": "https://github.com/google/guava/pull/7094",
        "resourcePath": "/google/guava/pull/7094",
        "createdAt": "2024-03-10T21:57:18Z",
        "number": 7094,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/cache/CacheBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/cache/Striped64.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/ImmutableCollection.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/graph/ValueGraph.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/primitives/package-info.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/util/concurrent/AbstractFuture.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/util/concurrent/ExecutionSequencer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/util/concurrent/ListeningExecutorService.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "guava/src/module-info.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5pLdHJ2gAoMTM1YjJiOGIwMzRiZTkzY2ZmNjgyNzkxOTM3ZTIxOGY2OWEyNGRiNQ",
                "url": "https://github.com/google/guava/pull/7094/commits/135b2b8b034be93cff682791937e218f69a24db5"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 2970,
                "url": "https://github.com/google/guava/issues/2970",
                "title": "Add module-info.java",
                "bodyHTML": "<p dir=\"auto\">So that projects depend on this can be published to a public artifact repository.<br>\nNote that this is not breaking backward compatibility. All codes except this file can be still compiled in Java 6.</p>",
                "resourcePath": "/google/guava/issues/2970",
                "createdAt": "2017-10-18T07:52:24Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status=research"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make build and tests work with Java 21, and enable CI for them.",
        "url": "https://github.com/google/guava/pull/7102",
        "resourcePath": "/google/guava/pull/7102",
        "createdAt": "2024-03-12T19:52:35Z",
        "number": 7102,
        "mergeCommit": {
          "oid": "f2b8c4f47f253bb83c7959ffd2b7346e473c2788",
          "message": "Make build and tests work with Java 21, and enable CI for them.\n\nThe main changes is that tests need `-Djava.security.manager=allow`.\n\nFixes and closes https://github.com/google/guava/issues/7065\n\nHelps with https://github.com/google/guava/issues/6790\n\nFixes https://github.com/google/guava/issues/6245 (at least the remaining parts that we actually care about)\n\nFixes #7087\n\nSigned-off-by: Sam Gammon <sam@elide.ventures>\nRELNOTES=n/a\nPiperOrigin-RevId: 615151162",
          "commitUrl": "https://github.com/google/guava/commit/f2b8c4f47f253bb83c7959ffd2b7346e473c2788",
          "parents": {
            "nodes": [
              {
                "oid": "c6e91c498ced26631029d1bdfdb9154d4a217368",
                "message": "Update to Error Prone annotations 2.26.1\n\nRELNOTES=N/A\nPiperOrigin-RevId: 615137941"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": ".github/workflows/ci.yml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "android/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5pbcND2gAoZjJiOGM0ZjQ3ZjI1M2JiODNjNzk1OWZmZDJiNzM0NmU0NzNjMjc4OA",
                "url": "https://github.com/google/guava/pull/7102/commits/f2b8c4f47f253bb83c7959ffd2b7346e473c2788"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 6245,
                "url": "https://github.com/google/guava/issues/6245",
                "title": "Fix JDK18+ `SecurityManager` build failures (and maybe other failures on some older JDKs)",
                "bodyHTML": "<p dir=\"auto\">See <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1450324570\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/guava/issues/6243\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/google/guava/pull/6243/hovercard\" href=\"https://github.com/google/guava/pull/6243\">#6243</a>.</p>",
                "resourcePath": "/google/guava/issues/6245",
                "createdAt": "2022-11-16T14:00:48Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 7065,
                "url": "https://github.com/google/guava/issues/7065",
                "title": "Guava build fails on `master` with JDK 21",
                "bodyHTML": "<h3 dir=\"auto\">Description</h3>\n<p dir=\"auto\">Using latest LTS JVM (21):</p>\n<ol dir=\"auto\">\n<li><code class=\"notranslate\">git clone git@github.com:google/guava.git</code></li>\n<li><code class=\"notranslate\">cd guava &amp;&amp; mvn clean package</code></li>\n<li>Build fails</li>\n</ol>\n<h3 dir=\"auto\">Example</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"See above\"><pre class=\"notranslate\"><span class=\"pl-smi\">See</span> <span class=\"pl-s1\">above</span></pre></div>\n<h3 dir=\"auto\">Expected Behavior</h3>\n<p dir=\"auto\">The build should not fail</p>\n<h3 dir=\"auto\">Actual Behavior</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[INFO] \n[INFO] --- bundle:5.1.8:bundle (default-bundle) @ guava ---\n[INFO] Building bundle: /Volumes/VAULTROOM/guava/guava/target/guava-HEAD-jre-SNAPSHOT.jar\n[INFO] Writing manifest: /Volumes/VAULTROOM/guava/guava/target/classes/META-INF/MANIFEST.MF\n[INFO] \n[INFO] --- source:3.3.0:jar-no-fork (attach-sources) @ guava ---\n[INFO] Building jar: /Volumes/VAULTROOM/guava/guava/target/guava-HEAD-jre-SNAPSHOT-sources.jar\n[INFO] \n[INFO] --- javadoc:3.5.0:jar (attach-docs) @ guava ---\n[INFO] No previous run data found, generating javadoc.\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for Guava Maven Parent HEAD-jre-SNAPSHOT:\n[INFO] \n[INFO] Guava Maven Parent ................................. SUCCESS [  3.488 s]\n[INFO] Guava: Google Core Libraries for Java .............. FAILURE [ 48.658 s]\n[INFO] Guava BOM .......................................... SKIPPED\n[INFO] Guava Testing Library .............................. SKIPPED\n[INFO] Guava Unit Tests ................................... SKIPPED\n[INFO] Guava GWT compatible libs .......................... SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  53.890 s\n[INFO] Finished at: 2024-03-01T13:22:02-08:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:3.5.0:jar (attach-docs) on project guava: MavenReportException: Error while generating Javadoc: \n[ERROR] Exit code: 1\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/vm/ScopedValueContainer.java:28: error: StructureViolationException is a preview API and is disabled by default.\n[ERROR] import java.util.concurrent.StructureViolationException;\n[ERROR]                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:31: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaTemplateAccess.java:49: error: StringTemplate is a preview API and is disabled by default.\n[ERROR]     StringTemplate of(List&lt;String&gt; fragments, List&lt;?&gt; values);\n[ERROR]     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaTemplateAccess.java:75: error: StringTemplate is a preview API and is disabled by default.\n[ERROR]     StringTemplate combine(StringTemplate... sts);\n[ERROR]                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaTemplateAccess.java:75: error: StringTemplate is a preview API and is disabled by default.\n[ERROR]     StringTemplate combine(StringTemplate... sts);\n[ERROR]     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:50: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     ByteBuffer newDirectByteBuffer(long addr, int cap, Object obj, MemorySegment segment);\n[ERROR]                                                                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:60: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     ByteBuffer newMappedByteBuffer(UnmapperProxy unmapperProxy, long addr, int cap, Object obj, MemorySegment segment);\n[ERROR]                                                                                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:66: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     ByteBuffer newHeapByteBuffer(byte[] hb, int offset, int capacity, MemorySegment segment);\n[ERROR]                                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:86: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     MemorySegment bufferSegment(Buffer buffer);\n[ERROR]     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:32: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:33: error: Arena is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.Arena;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:1206: error: Arena is a preview API and is disabled by default.\n[ERROR]                              Arena arena)\n[ERROR]                              ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:1205: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment map(MapMode mode, long offset, long size,\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:58: error: ValueLayout is a preview API and is disabled by default.\n[ERROR] import static java.lang.foreign.ValueLayout.JAVA_BYTE;\n[ERROR]                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:70: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         implements MemorySegment, SegmentAllocator, BiFunction&lt;String, List&lt;Number&gt;, RuntimeException&gt;\n[ERROR]                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:70: error: SegmentAllocator is a preview API and is disabled by default.\n[ERROR]         implements MemorySegment, SegmentAllocator, BiFunction&lt;String, List&lt;Number&gt;, RuntimeException&gt;\n[ERROR]                                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:29: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:30: error: ValueLayout is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.ValueLayout;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:29: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/misc/ScopedMemoryAccess.java:32: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:29: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:30: error: Arena is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.Arena;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:31: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment.Scope;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:31: error: Scope is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment.Scope;\n[ERROR]                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:53: error: Scope is a preview API and is disabled by default.\n[ERROR]         implements Scope\n[ERROR]                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:115: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment asSlice(long offset, long newSize, long byteAlignment) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:127: error: Arena is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize, Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                          ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:127: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize, Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:127: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize, Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:135: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize) {\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:141: error: Arena is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:141: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:141: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:147: error: Scope is a preview API and is disabled by default.\n[ERROR]     public MemorySegment reinterpretInternal(Class&lt;?&gt; callerClass, long newSize, Scope scope, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:147: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment reinterpretInternal(Class&lt;?&gt; callerClass, long newSize, Scope scope, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                                                        ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:147: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment reinterpretInternal(Class&lt;?&gt; callerClass, long newSize, Scope scope, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:165: error: MemoryLayout is a preview API and is disabled by default.\n[ERROR]     public Spliterator&lt;MemorySegment&gt; spliterator(MemoryLayout elementLayout) {\n[ERROR]                                                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:165: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public Spliterator&lt;MemorySegment&gt; spliterator(MemoryLayout elementLayout) {\n[ERROR]                        ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:182: error: MemoryLayout is a preview API and is disabled by default.\n[ERROR]     public Stream&lt;MemorySegment&gt; elements(MemoryLayout elementLayout) {\n[ERROR]                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:182: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public Stream&lt;MemorySegment&gt; elements(MemoryLayout elementLayout) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:187: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment fill(byte value){\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:194: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment allocate(long byteSize, long byteAlignment) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:258: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final Optional&lt;MemorySegment&gt; asOverlappingSlice(MemorySegment other) {\n[ERROR]                                                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:258: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final Optional&lt;MemorySegment&gt; asOverlappingSlice(MemorySegment other) {\n[ERROR]                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:276: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final long segmentOffset(MemorySegment other) {\n[ERROR]                                     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:309: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final byte[] toArray(ValueLayout.OfByte elementLayout) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:309: error: OfByte is a preview API and is disabled by default.\n[ERROR]     public final byte[] toArray(ValueLayout.OfByte elementLayout) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:314: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final short[] toArray(ValueLayout.OfShort elementLayout) {\n[ERROR]                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:314: error: OfShort is a preview API and is disabled by default.\n[ERROR]     public final short[] toArray(ValueLayout.OfShort elementLayout) {\n[ERROR]                                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:319: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final char[] toArray(ValueLayout.OfChar elementLayout) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:319: error: OfChar is a preview API and is disabled by default.\n[ERROR]     public final char[] toArray(ValueLayout.OfChar elementLayout) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:324: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final int[] toArray(ValueLayout.OfInt elementLayout) {\n[ERROR]                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:324: error: OfInt is a preview API and is disabled by default.\n[ERROR]     public final int[] toArray(ValueLayout.OfInt elementLayout) {\n[ERROR]                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:329: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final float[] toArray(ValueLayout.OfFloat elementLayout) {\n[ERROR]                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:329: error: OfFloat is a preview API and is disabled by default.\n[ERROR]     public final float[] toArray(ValueLayout.OfFloat elementLayout) {\n[ERROR]                                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:334: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final long[] toArray(ValueLayout.OfLong elementLayout) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:334: error: OfLong is a preview API and is disabled by default.\n[ERROR]     public final long[] toArray(ValueLayout.OfLong elementLayout) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:339: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final double[] toArray(ValueLayout.OfDouble elementLayout) {\n[ERROR]                                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:339: error: OfDouble is a preview API and is disabled by default.\n[ERROR]     public final double[] toArray(ValueLayout.OfDouble elementLayout) {\n[ERROR]                                              ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:343: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     private &lt;Z&gt; Z toArray(Class&lt;Z&gt; arrayClass, ValueLayout elemLayout, IntFunction&lt;Z&gt; arrayFactory, Function&lt;Z, MemorySegment&gt; segmentFactory) {\n[ERROR]                                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:343: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     private &lt;Z&gt; Z toArray(Class&lt;Z&gt; arrayClass, ValueLayout elemLayout, IntFunction&lt;Z&gt; arrayFactory, Function&lt;Z, MemorySegment&gt; segmentFactory) {\n[ERROR]                                                                                                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:372: error: MemoryLayout is a preview API and is disabled by default.\n[ERROR]     public final boolean isAlignedForElement(long offset, MemoryLayout layout) {\n[ERROR]                                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:411: error: Scope is a preview API and is disabled by default.\n[ERROR]     public Scope scope() {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:594: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcElementLayout, long srcOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:594: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcElementLayout, long srcOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:595: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstElementLayout, long dstOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:595: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstElementLayout, long dstOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:626: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcLayout, long srcOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:626: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcLayout, long srcOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:656: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstLayout, long dstOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:656: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstLayout, long dstOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:683: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static long mismatch(MemorySegment srcSegment, long srcFromOffset, long srcToOffset,\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:684: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]                                 MemorySegment dstSegment, long dstFromOffset, long dstToOffset) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:79: error: Arena is a preview API and is disabled by default.\n[ERROR]     public Arena asArena() {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:94: error: Arena is a preview API and is disabled by default.\n[ERROR]     public static final MemorySessionImpl toMemorySession(Arena arena) {\n[ERROR]                                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:156: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment allocate(long byteSize, long byteAlignment) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:223: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static final void checkValidState(MemorySegment segment) {\n[ERROR]                                              ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:118: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegment(long byteSize, long byteAlignment, MemorySessionImpl sessionImpl) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:154: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegmentUnchecked(long min, long byteSize, MemorySessionImpl sessionImpl, Runnable action) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:164: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegmentUnchecked(long min, long byteSize, MemorySessionImpl sessionImpl) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:170: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegmentUnchecked(long min, long byteSize) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:430: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     static class SegmentSplitter implements Spliterator&lt;MemorySegment&gt; {\n[ERROR]                                                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:459: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public boolean tryAdvance(Consumer&lt;? super MemorySegment&gt; action) {\n[ERROR]                                                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:478: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public void forEachRemaining(Consumer&lt;? super MemorySegment&gt; action) {\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:113: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(byte[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:147: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(char[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:181: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(short[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:215: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(int[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:249: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(long[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:283: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(float[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:317: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(double[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] 91 errors\n[ERROR] Command line was: /Library/Java/JavaVirtualMachines/gvm-ce.jdk21/Contents/Home/bin/javadoc @options @argfile\n[ERROR] \n[ERROR] Refer to the generated Javadoc files in '/Volumes/VAULTROOM/guava/guava/target/apidocs' dir.\n[ERROR] \n[ERROR] -&gt; [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException\n[ERROR] \n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR]   mvn &lt;args&gt; -rf :guava\"><pre class=\"notranslate\"><code class=\"notranslate\">[INFO] \n[INFO] --- bundle:5.1.8:bundle (default-bundle) @ guava ---\n[INFO] Building bundle: /Volumes/VAULTROOM/guava/guava/target/guava-HEAD-jre-SNAPSHOT.jar\n[INFO] Writing manifest: /Volumes/VAULTROOM/guava/guava/target/classes/META-INF/MANIFEST.MF\n[INFO] \n[INFO] --- source:3.3.0:jar-no-fork (attach-sources) @ guava ---\n[INFO] Building jar: /Volumes/VAULTROOM/guava/guava/target/guava-HEAD-jre-SNAPSHOT-sources.jar\n[INFO] \n[INFO] --- javadoc:3.5.0:jar (attach-docs) @ guava ---\n[INFO] No previous run data found, generating javadoc.\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for Guava Maven Parent HEAD-jre-SNAPSHOT:\n[INFO] \n[INFO] Guava Maven Parent ................................. SUCCESS [  3.488 s]\n[INFO] Guava: Google Core Libraries for Java .............. FAILURE [ 48.658 s]\n[INFO] Guava BOM .......................................... SKIPPED\n[INFO] Guava Testing Library .............................. SKIPPED\n[INFO] Guava Unit Tests ................................... SKIPPED\n[INFO] Guava GWT compatible libs .......................... SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  53.890 s\n[INFO] Finished at: 2024-03-01T13:22:02-08:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:3.5.0:jar (attach-docs) on project guava: MavenReportException: Error while generating Javadoc: \n[ERROR] Exit code: 1\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/vm/ScopedValueContainer.java:28: error: StructureViolationException is a preview API and is disabled by default.\n[ERROR] import java.util.concurrent.StructureViolationException;\n[ERROR]                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:31: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaTemplateAccess.java:49: error: StringTemplate is a preview API and is disabled by default.\n[ERROR]     StringTemplate of(List&lt;String&gt; fragments, List&lt;?&gt; values);\n[ERROR]     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaTemplateAccess.java:75: error: StringTemplate is a preview API and is disabled by default.\n[ERROR]     StringTemplate combine(StringTemplate... sts);\n[ERROR]                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaTemplateAccess.java:75: error: StringTemplate is a preview API and is disabled by default.\n[ERROR]     StringTemplate combine(StringTemplate... sts);\n[ERROR]     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:50: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     ByteBuffer newDirectByteBuffer(long addr, int cap, Object obj, MemorySegment segment);\n[ERROR]                                                                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:60: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     ByteBuffer newMappedByteBuffer(UnmapperProxy unmapperProxy, long addr, int cap, Object obj, MemorySegment segment);\n[ERROR]                                                                                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:66: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     ByteBuffer newHeapByteBuffer(byte[] hb, int offset, int capacity, MemorySegment segment);\n[ERROR]                                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/access/JavaNioAccess.java:86: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     MemorySegment bufferSegment(Buffer buffer);\n[ERROR]     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:32: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:33: error: Arena is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.Arena;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:1206: error: Arena is a preview API and is disabled by default.\n[ERROR]                              Arena arena)\n[ERROR]                              ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/sun/nio/ch/FileChannelImpl.java:1205: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment map(MapMode mode, long offset, long size,\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:58: error: ValueLayout is a preview API and is disabled by default.\n[ERROR] import static java.lang.foreign.ValueLayout.JAVA_BYTE;\n[ERROR]                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:70: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         implements MemorySegment, SegmentAllocator, BiFunction&lt;String, List&lt;Number&gt;, RuntimeException&gt;\n[ERROR]                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:70: error: SegmentAllocator is a preview API and is disabled by default.\n[ERROR]         implements MemorySegment, SegmentAllocator, BiFunction&lt;String, List&lt;Number&gt;, RuntimeException&gt;\n[ERROR]                                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:29: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:30: error: ValueLayout is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.ValueLayout;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:29: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/misc/ScopedMemoryAccess.java:32: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:29: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:30: error: Arena is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.Arena;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:31: error: MemorySegment is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment.Scope;\n[ERROR]                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:31: error: Scope is a preview API and is disabled by default.\n[ERROR] import java.lang.foreign.MemorySegment.Scope;\n[ERROR]                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:53: error: Scope is a preview API and is disabled by default.\n[ERROR]         implements Scope\n[ERROR]                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:115: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment asSlice(long offset, long newSize, long byteAlignment) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:127: error: Arena is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize, Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                          ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:127: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize, Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:127: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize, Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:135: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(long newSize) {\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:141: error: Arena is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:141: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:141: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment reinterpret(Arena arena, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:147: error: Scope is a preview API and is disabled by default.\n[ERROR]     public MemorySegment reinterpretInternal(Class&lt;?&gt; callerClass, long newSize, Scope scope, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:147: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment reinterpretInternal(Class&lt;?&gt; callerClass, long newSize, Scope scope, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]                                                                                                        ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:147: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment reinterpretInternal(Class&lt;?&gt; callerClass, long newSize, Scope scope, Consumer&lt;MemorySegment&gt; cleanup) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:165: error: MemoryLayout is a preview API and is disabled by default.\n[ERROR]     public Spliterator&lt;MemorySegment&gt; spliterator(MemoryLayout elementLayout) {\n[ERROR]                                                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:165: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public Spliterator&lt;MemorySegment&gt; spliterator(MemoryLayout elementLayout) {\n[ERROR]                        ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:182: error: MemoryLayout is a preview API and is disabled by default.\n[ERROR]     public Stream&lt;MemorySegment&gt; elements(MemoryLayout elementLayout) {\n[ERROR]                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:182: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public Stream&lt;MemorySegment&gt; elements(MemoryLayout elementLayout) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:187: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final MemorySegment fill(byte value){\n[ERROR]                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:194: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment allocate(long byteSize, long byteAlignment) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:258: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final Optional&lt;MemorySegment&gt; asOverlappingSlice(MemorySegment other) {\n[ERROR]                                                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:258: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final Optional&lt;MemorySegment&gt; asOverlappingSlice(MemorySegment other) {\n[ERROR]                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:276: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public final long segmentOffset(MemorySegment other) {\n[ERROR]                                     ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:309: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final byte[] toArray(ValueLayout.OfByte elementLayout) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:309: error: OfByte is a preview API and is disabled by default.\n[ERROR]     public final byte[] toArray(ValueLayout.OfByte elementLayout) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:314: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final short[] toArray(ValueLayout.OfShort elementLayout) {\n[ERROR]                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:314: error: OfShort is a preview API and is disabled by default.\n[ERROR]     public final short[] toArray(ValueLayout.OfShort elementLayout) {\n[ERROR]                                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:319: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final char[] toArray(ValueLayout.OfChar elementLayout) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:319: error: OfChar is a preview API and is disabled by default.\n[ERROR]     public final char[] toArray(ValueLayout.OfChar elementLayout) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:324: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final int[] toArray(ValueLayout.OfInt elementLayout) {\n[ERROR]                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:324: error: OfInt is a preview API and is disabled by default.\n[ERROR]     public final int[] toArray(ValueLayout.OfInt elementLayout) {\n[ERROR]                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:329: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final float[] toArray(ValueLayout.OfFloat elementLayout) {\n[ERROR]                                  ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:329: error: OfFloat is a preview API and is disabled by default.\n[ERROR]     public final float[] toArray(ValueLayout.OfFloat elementLayout) {\n[ERROR]                                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:334: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final long[] toArray(ValueLayout.OfLong elementLayout) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:334: error: OfLong is a preview API and is disabled by default.\n[ERROR]     public final long[] toArray(ValueLayout.OfLong elementLayout) {\n[ERROR]                                            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:339: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public final double[] toArray(ValueLayout.OfDouble elementLayout) {\n[ERROR]                                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:339: error: OfDouble is a preview API and is disabled by default.\n[ERROR]     public final double[] toArray(ValueLayout.OfDouble elementLayout) {\n[ERROR]                                              ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:343: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     private &lt;Z&gt; Z toArray(Class&lt;Z&gt; arrayClass, ValueLayout elemLayout, IntFunction&lt;Z&gt; arrayFactory, Function&lt;Z, MemorySegment&gt; segmentFactory) {\n[ERROR]                                                ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:343: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     private &lt;Z&gt; Z toArray(Class&lt;Z&gt; arrayClass, ValueLayout elemLayout, IntFunction&lt;Z&gt; arrayFactory, Function&lt;Z, MemorySegment&gt; segmentFactory) {\n[ERROR]                                                                                                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:372: error: MemoryLayout is a preview API and is disabled by default.\n[ERROR]     public final boolean isAlignedForElement(long offset, MemoryLayout layout) {\n[ERROR]                                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:411: error: Scope is a preview API and is disabled by default.\n[ERROR]     public Scope scope() {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:594: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcElementLayout, long srcOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:594: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcElementLayout, long srcOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:595: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstElementLayout, long dstOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:595: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstElementLayout, long dstOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:626: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcLayout, long srcOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:626: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]     public static void copy(MemorySegment srcSegment, ValueLayout srcLayout, long srcOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:656: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstLayout, long dstOffset,\n[ERROR]                             ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:656: error: ValueLayout is a preview API and is disabled by default.\n[ERROR]                             MemorySegment dstSegment, ValueLayout dstLayout, long dstOffset,\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:683: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static long mismatch(MemorySegment srcSegment, long srcFromOffset, long srcToOffset,\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:684: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]                                 MemorySegment dstSegment, long dstFromOffset, long dstToOffset) {\n[ERROR]                                 ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:79: error: Arena is a preview API and is disabled by default.\n[ERROR]     public Arena asArena() {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:94: error: Arena is a preview API and is disabled by default.\n[ERROR]     public static final MemorySessionImpl toMemorySession(Arena arena) {\n[ERROR]                                                           ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:156: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public MemorySegment allocate(long byteSize, long byteAlignment) {\n[ERROR]            ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/MemorySessionImpl.java:223: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static final void checkValidState(MemorySegment segment) {\n[ERROR]                                              ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:118: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegment(long byteSize, long byteAlignment, MemorySessionImpl sessionImpl) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:154: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegmentUnchecked(long min, long byteSize, MemorySessionImpl sessionImpl, Runnable action) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:164: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegmentUnchecked(long min, long byteSize, MemorySessionImpl sessionImpl) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/NativeMemorySegmentImpl.java:170: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     public static MemorySegment makeNativeSegmentUnchecked(long min, long byteSize) {\n[ERROR]                   ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:430: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]     static class SegmentSplitter implements Spliterator&lt;MemorySegment&gt; {\n[ERROR]                                                         ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:459: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public boolean tryAdvance(Consumer&lt;? super MemorySegment&gt; action) {\n[ERROR]                                                    ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/AbstractMemorySegmentImpl.java:478: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public void forEachRemaining(Consumer&lt;? super MemorySegment&gt; action) {\n[ERROR]                                                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:113: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(byte[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:147: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(char[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:181: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(short[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:215: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(int[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:249: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(long[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:283: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(float[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] /Volumes/VAULTROOM/guava/guava/target/jdk-sources/java.base/jdk/internal/foreign/HeapMemorySegmentImpl.java:317: error: MemorySegment is a preview API and is disabled by default.\n[ERROR]         public static MemorySegment fromArray(double[] arr) {\n[ERROR]                       ^\n[ERROR]   (use --enable-preview to enable preview APIs)\n[ERROR] 91 errors\n[ERROR] Command line was: /Library/Java/JavaVirtualMachines/gvm-ce.jdk21/Contents/Home/bin/javadoc @options @argfile\n[ERROR] \n[ERROR] Refer to the generated Javadoc files in '/Volumes/VAULTROOM/guava/guava/target/apidocs' dir.\n[ERROR] \n[ERROR] -&gt; [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException\n[ERROR] \n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR]   mvn &lt;args&gt; -rf :guava\n</code></pre></div>\n<h3 dir=\"auto\">Packages</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Platforms</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Checklist</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I agree to follow the <a href=\"https://github.com/google/.github/blob/master/CODE_OF_CONDUCT.md\">code of conduct</a>.</li>\n</ul>",
                "resourcePath": "/google/guava/issues/7065",
                "createdAt": "2024-03-01T21:26:33Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Check `isEmpty()` instead of `size == 0`.",
        "url": "https://github.com/google/guava/pull/7144",
        "resourcePath": "/google/guava/pull/7144",
        "createdAt": "2024-04-09T18:13:16Z",
        "number": 7144,
        "mergeCommit": {
          "oid": "911661a9519815e4a132acd8ce2bd8ce42bd18dd",
          "message": "Check `isEmpty()` instead of `size == 0`.\n\nThat way is simpler.\n\nIt's also somewhat better for users who pass a filtered collection, **but:**\n- We may undo this change in the future (as we are considering approaches that would actually use the result of `size` for more than an emptiness check).\n- A nonempty filtered collection will still apply the filter at least once during the `isEmpty` call, so that can still cause trouble if the filter has side effects or \"call the filter until it returns `true`\" is slow enough to matter.\n- Other methods in Guava likely still trigger similar behavior when given a filtered collection, as do methods outside of Guava.\n\nFixes https://github.com/google/guava/issues/7143 (for now)\n\nRELNOTES=n/a\nPiperOrigin-RevId: 623232817",
          "commitUrl": "https://github.com/google/guava/commit/911661a9519815e4a132acd8ce2bd8ce42bd18dd",
          "parents": {
            "nodes": [
              {
                "oid": "48b664367aa552d49040fdd6cab5149b14bc4c93",
                "message": "Internal change\n\nRELNOTES=n/a\nPiperOrigin-RevId: 623178329"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "guava/src/com/google/common/collect/ImmutableSet.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOATXBkc5sKitS2gAoOTExNjYxYTk1MTk4MTVlNGExMzJhY2Q4Y2UyYmQ4Y2U0MmJkMThkZA",
                "url": "https://github.com/google/guava/pull/7144/commits/911661a9519815e4a132acd8ce2bd8ce42bd18dd"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 7143,
                "url": "https://github.com/google/guava/issues/7143",
                "title": "Copying a filtered collection with ImmutableSet.copyOf() should require visiting each element only once",
                "bodyHTML": "<h3 dir=\"auto\">Description</h3>\n<p dir=\"auto\">Since Google Guava 33.1.0 in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/google/guava/commit/5c4f5b205a3965b02626d0445f05accfa95e1b07/hovercard\" href=\"https://github.com/google/guava/commit/5c4f5b205a3965b02626d0445f05accfa95e1b07\"><tt>5c4f5b2</tt></a>, using ImmutableSet to copy a filtered collection requires iterating over and applying the predicate function, along with any side effects, to each element twice. The expected number of times is once per element.</p>\n<p dir=\"auto\">This change message seems to indicate this behavior was understood by the author.</p>\n<blockquote>\n<p dir=\"auto\">I could imagine bad performance for users who call <code class=\"notranslate\">ImmutableSet.copyOf(Collections.filter(...))</code>. If that's an issue in practice, then maybe we should insert a special case for it inside <code class=\"notranslate\">copyOf</code>. I at least made sure to call <code class=\"notranslate\">size()</code> only once.</p>\n</blockquote>\n<p dir=\"auto\">I believe the code should handle this case if only to avoid unnecessary executions of the filter function which may negate any potential allocation savings. If this change cannot be made, please consider replacing <code class=\"notranslate\">size()</code> with <code class=\"notranslate\">isEmpty()</code>. For collections where <code class=\"notranslate\">size()</code> is not constant time, <code class=\"notranslate\">isEmpty()</code> is almost always cheaper, including for filtered collections.</p>\n<h3 dir=\"auto\">Example</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import com.google.common.collect.Collections2;\nimport com.google.common.collect.ImmutableSet;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class FilteredImmutableRepro {\n    public static void main(String[] unused) {\n        List&lt;String&gt; example = new ArrayList&lt;&gt;();\n        example.add(&quot;one&quot;);\n        example.add(&quot;two&quot;);\n        example.add(&quot;three&quot;);\n\n        ImmutableSet.copyOf(Collections2.filter(example, element -&gt; {\n            System.out.println(element);\n            return true;\n        }));\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">collect</span>.<span class=\"pl-s1\">Collections2</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">common</span>.<span class=\"pl-s1\">collect</span>.<span class=\"pl-s1\">ImmutableSet</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">ArrayList</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">List</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">FilteredImmutableRepro</span> {\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">unused</span>) {\n        <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">example</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ArrayList</span>&lt;&gt;();\n        <span class=\"pl-s1\">example</span>.<span class=\"pl-en\">add</span>(<span class=\"pl-s\">\"one\"</span>);\n        <span class=\"pl-s1\">example</span>.<span class=\"pl-en\">add</span>(<span class=\"pl-s\">\"two\"</span>);\n        <span class=\"pl-s1\">example</span>.<span class=\"pl-en\">add</span>(<span class=\"pl-s\">\"three\"</span>);\n\n        <span class=\"pl-smi\">ImmutableSet</span>.<span class=\"pl-en\">copyOf</span>(<span class=\"pl-smi\">Collections2</span>.<span class=\"pl-en\">filter</span>(<span class=\"pl-s1\">example</span>, <span class=\"pl-s1\">element</span> -&gt; {\n            <span class=\"pl-smi\">System</span>.<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">println</span>(<span class=\"pl-s1\">element</span>);\n            <span class=\"pl-k\">return</span> <span class=\"pl-c1\">true</span>;\n        }));\n    }\n}</pre></div>\n<h3 dir=\"auto\">Expected Behavior</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"one\ntwo\nthree\"><pre class=\"notranslate\"><code class=\"notranslate\">one\ntwo\nthree\n</code></pre></div>\n<h3 dir=\"auto\">Actual Behavior</h3>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"one\ntwo\nthree\none\ntwo\nthree\"><pre class=\"notranslate\"><code class=\"notranslate\">one\ntwo\nthree\none\ntwo\nthree\n</code></pre></div>\n<h3 dir=\"auto\">Packages</h3>\n<p dir=\"auto\">com.google.common.collect</p>\n<h3 dir=\"auto\">Platforms</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Checklist</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I agree to follow the <a href=\"https://github.com/google/.github/blob/master/CODE_OF_CONDUCT.md\">code of conduct</a>.</li>\n</ul>",
                "resourcePath": "/google/guava/issues/7143",
                "createdAt": "2024-04-09T17:36:11Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "type=enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "package=collect"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix [Gradle GWT compilation breakage](https://github.com/google/guava/issues/7134).",
        "url": "https://github.com/google/guava/pull/7153",
        "resourcePath": "/google/guava/pull/7153",
        "createdAt": "2024-04-11T14:29:12Z",
        "number": 7153,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 7134,
                "url": "https://github.com/google/guava/issues/7134",
                "title": "guava-gwt should publish Gradle module metadata or somehow fix POM",
                "bodyHTML": "<h3 dir=\"auto\">Description</h3>\n<p dir=\"auto\">Using guava-gwt from Gradle, when resolving a \"runtime\" configuration, the j2objc-annotations dependency is missing. This is because it's declared in the <code class=\"notranslate\">jreApiElements</code> variant but not in the <code class=\"notranslate\">jreRuntimeElements</code> one.</p>\n<p dir=\"auto\">When using Maven, or explicitly disabling Gradle module metadata, the dependency will be there as it's declared with the default <code class=\"notranslate\">&lt;scope&gt;compile&lt;/scope&gt;</code> in Maven (Maven lacking an equivalent to Gradle's <code class=\"notranslate\">compileOnlyApi</code>).</p>\n<p dir=\"auto\">As a workaround, the dependency can be explicitly added to the project.</p>\n<p dir=\"auto\"><a href=\"https://github.com/google/guava/files/14829528/sscce.zip\">sscce.zip</a></p>\n<h3 dir=\"auto\">Example</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"See attached project; build it with\n\n./gradlew assemble\n\nYou can add --info to see the exact command-line for the GWT compiler.\"><pre class=\"notranslate\"><span class=\"pl-smi\">See</span> <span class=\"pl-s1\">attached</span> <span class=\"pl-s1\">project</span>; <span class=\"pl-smi\">build</span> <span class=\"pl-s1\">it</span> <span class=\"pl-smi\">with</span>\n\n./<span class=\"pl-smi\">gradlew</span> <span class=\"pl-s1\">assemble</span>\n\n<span class=\"pl-smi\">You</span> <span class=\"pl-s1\">can</span> <span class=\"pl-s1\">add</span> --<span class=\"pl-smi\">info</span> <span class=\"pl-s1\">to</span> <span class=\"pl-smi\">see</span> <span class=\"pl-s1\">the</span> <span class=\"pl-smi\">exact</span> <span class=\"pl-s1\">command</span>-<span class=\"pl-smi\">line</span> <span class=\"pl-s1\">for</span> <span class=\"pl-s1\">the</span> <span class=\"pl-c1\">GWT</span> <span class=\"pl-s1\">compiler</span>.</pre></div>\n<h3 dir=\"auto\">Expected Behavior</h3>\n<p dir=\"auto\">Compilation should succeed.</p>\n<h3 dir=\"auto\">Actual Behavior</h3>\n<p dir=\"auto\">Compilation fails, GWT complaining about the j2objc annotations.</p>\n<p dir=\"auto\">Edit <code class=\"notranslate\">build.gradle.kts</code> to uncomment the j2objc-annotations dependency and rebuild, now it should compile without error.</p>\n<p dir=\"auto\">You can also run <code class=\"notranslate\">./gradlew dependencies</code> and compare the <code class=\"notranslate\">compileClasspath</code> and <code class=\"notranslate\">runtimeClasspath</code> dependency trees (note that the latter will also contain <code class=\"notranslate\">gwt-dev</code> and all its dependencies):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"./gradlew dependencies --configuration compileClasspath\n./gradlew dependencies --configuration runtimeClasspath\"><pre class=\"notranslate\"><code class=\"notranslate\">./gradlew dependencies --configuration compileClasspath\n./gradlew dependencies --configuration runtimeClasspath\n</code></pre></div>\n<h3 dir=\"auto\">Packages</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">Platforms</h3>\n<p dir=\"auto\">GWT</p>\n<h3 dir=\"auto\">Checklist</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I agree to follow the <a href=\"https://github.com/google/.github/blob/master/CODE_OF_CONDUCT.md\">code of conduct</a>.</li>\n</ul>",
                "resourcePath": "/google/guava/issues/7134",
                "createdAt": "2024-04-01T23:41:06Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "package=general"
                      }
                    },
                    {
                      "node": {
                        "name": "platform=gwt"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  }
]