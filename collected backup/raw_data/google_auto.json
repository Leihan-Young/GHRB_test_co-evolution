[
  {
    "repository": {
      "pullRequest": {
        "title": "Moe Sync",
        "url": "https://github.com/google/auto/pull/675",
        "resourcePath": "/google/auto/pull/675",
        "createdAt": "2018-11-06T20:41:25Z",
        "number": 675,
        "mergeCommit": {
          "oid": "182066019898429d951f06683182c7a5520d5d9e",
          "message": "Adds the transient modifier to the cache field. This tells serialization\nto avoid serializing such fields. Not having this causes serialization\nto be nondeterministic, depending on whether or not the memoized accessor has\nbeen called.\n\nThis is more robust than depending on the @LazyInit annotation, which the processor sometimes can't find.\n\nRELNOTES=none\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=220301585",
          "commitUrl": "https://github.com/google/auto/commit/182066019898429d951f06683182c7a5520d5d9e",
          "parents": {
            "nodes": [
              {
                "oid": "b85dbf6dce242ee95d38a61818158b6044852da5",
                "message": "Enable a test for a bug that's been fixed for a while\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=219712298"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "RENAMED",
                "path": "service/processor/src/test/resources/META-INF/services/test.SomeServiceMulti"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "service/processor/src/test/resources/test/AnotherService.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "service/processor/src/test/resources/test/AnotherServiceProvider.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "service/processor/src/test/resources/test/Enclosing.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "service/processor/src/test/resources/test/MultiServiceProvider.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "service/processor/src/test/resources/test/NoServices.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "service/processor/src/test/resources/test/SomeService.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "service/processor/src/test/resources/test/SomeServiceProvider1.java"
              }
            },
            {
              "node": {
                "changeType": "RENAMED",
                "path": "service/processor/src/test/resources/test/SomeServiceProvider2.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/extension/memoized/processor/MemoizeExtension.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjI4ODI3ODE4OjU0Y2EyYjc5YjVjZDFmN2Q0MjBlYmFmYzVjNTgzNzEyMDA3MjQ5MTA=",
                "url": "https://github.com/google/auto/pull/675/commits/54ca2b79b5cd1f7d420ebafc5c58371200724910"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 632,
                "url": "https://github.com/google/auto/issues/632",
                "title": "Separate annotation from processor on AutoService",
                "bodyHTML": "<p dir=\"auto\">Should separate the annotation from the processor, this way we wont get the following warning and it would be prepared for gradle 5.</p>\n<p dir=\"auto\">The following annotation processors were detected on the compile classpath: 'com.google.auto.service.processor.AutoServiceProcessor'. Detecting annotation processors on the compile classpath is deprecated and Gradle 5.0 will ignore them. Please add them to the annotation processor path instead. If you did not intend to use annotation processors, you can use the '-proc:none' compiler argument to ignore them.</p>",
                "resourcePath": "/google/auto/issues/632",
                "createdAt": "2018-04-25T23:58:03Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Autofactory: Support Gradle incremental annotation processing",
        "url": "https://github.com/google/auto/pull/708",
        "resourcePath": "/google/auto/pull/708",
        "createdAt": "2019-03-06T17:23:57Z",
        "number": 708,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjU4ODEwOTUxOjg1ODNmMGFhNWYxZTg4N2UzNjZiM2FiMDVhYjk3MDZkZTY2N2ZjNzQ=",
                "url": "https://github.com/google/auto/pull/708/commits/8583f0aa5f1e887e366b3ab05ab9706de667fc74"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 679,
                "url": "https://github.com/google/auto/issues/679",
                "title": "AutoFactoryProcessor is not incremental in Gradle",
                "bodyHTML": "<p dir=\"auto\">As pointed out here<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"308377132\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/auto/issues/615\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/auto/issues/615/hovercard?comment_id=433682099&amp;comment_type=issue_comment\" href=\"https://github.com/google/auto/issues/615#issuecomment-433682099\">#615 (comment)</a><br>\n<code class=\"notranslate\">AutoFactoryProcessor</code> is not incremental in <code class=\"notranslate\">com.google.auto.factory:auto-factory:1.0-beta6</code></p>",
                "resourcePath": "/google/auto/issues/679",
                "createdAt": "2018-11-16T16:15:30Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Moe Sync",
        "url": "https://github.com/google/auto/pull/724",
        "resourcePath": "/google/auto/pull/724",
        "createdAt": "2019-04-16T15:08:22Z",
        "number": 724,
        "mergeCommit": {
          "oid": "445b9eda1e6c6ac5b789ed15f16ebd88d7aadf5a",
          "message": "Handle GWT serialization when some of the properties use property builders. The code was still assuming that every property has a setter, and compilation got an exception if a property had a builder instead.\n\nFixes https://github.com/google/auto/issues/364.\n\nRELNOTES=Handle GWT serialization when some of the properties use property builders.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=243723997",
          "commitUrl": "https://github.com/google/auto/commit/445b9eda1e6c6ac5b789ed15f16ebd88d7aadf5a",
          "parents": {
            "nodes": [
              {
                "oid": "0cced0d4a09ffe01f1c315672b722a66631b72f5",
                "message": "Ensure that setUseCaches(false) is called when reading extensions.\n\nFixes https://github.com/google/auto/issues/718.\n\nRELNOTES=Fix an intermittent issue with AutoValue extensions and Gradle.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=242786899"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/src/test/java/com/google/auto/value/gwt/GwtCompilationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/src/test/java/com/google/auto/value/gwt/GwtValueTypeWithBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/GwtSerialization.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/gwtserializer.vm"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjcwOTUzMjUwOjI0ZTU1ODA5NGUwNmFmZmVlMzhmMjA2YWVmNzNmNjM2OTZlNjU0NmU=",
                "url": "https://github.com/google/auto/pull/724/commits/24e558094e06affee38f206aef73f63696e6546e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 364,
                "url": "https://github.com/google/auto/issues/364",
                "title": "value: GWT serializable, list accumulation ",
                "bodyHTML": "<p dir=\"auto\">The following doesn't compile:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@AutoValue\n@GwtCompatible(serializable = true)\nabstract class Animal {\n\n    abstract ImmutableList&lt;String&gt; countries();\n\n    static Builder builder() {\n        return new AutoValue_Animal.Builder();\n    }\n\n    @AutoValue.Builder\n    abstract static class Builder {\n        abstract ImmutableList.Builder&lt;String&gt; countriesBuilder();\n        abstract Animal build();\n        Builder addCountry(String value) {\n            countriesBuilder().add(value);\n            return this;\n        }\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">AutoValue</span>\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">GwtCompatible</span>(<span class=\"pl-s1\">serializable</span> = <span class=\"pl-c1\">true</span>)\n<span class=\"pl-k\">abstract</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Animal</span> {\n\n    <span class=\"pl-k\">abstract</span> <span class=\"pl-smi\">ImmutableList</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-en\">countries</span>();\n\n    <span class=\"pl-k\">static</span> <span class=\"pl-smi\">Builder</span> <span class=\"pl-en\">builder</span>() {\n        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">AutoValue_Animal</span>.<span class=\"pl-smi\">Builder</span>();\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-smi\">AutoValue</span>.<span class=\"pl-s1\">Builder</span>\n    <span class=\"pl-k\">abstract</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Builder</span> {\n        <span class=\"pl-k\">abstract</span> <span class=\"pl-smi\">ImmutableList</span>.<span class=\"pl-smi\">Builder</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-en\">countriesBuilder</span>();\n        <span class=\"pl-k\">abstract</span> <span class=\"pl-smi\">Animal</span> <span class=\"pl-en\">build</span>();\n        <span class=\"pl-smi\">Builder</span> <span class=\"pl-en\">addCountry</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">value</span>) {\n            <span class=\"pl-en\">countriesBuilder</span>().<span class=\"pl-en\">add</span>(<span class=\"pl-s1\">value</span>);\n            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">this</span>;\n        }\n    }\n}</pre></div>\n<p dir=\"auto\">The error is:</p>\n<blockquote>\n<p dir=\"auto\">com.google.auto.value.processor.escapevelocity.EvaluationException: java.util.NoSuchElementException<br>\nat com.google.auto.value.processor.escapevelocity.Node.evaluationException(Node.java:63)</p>\n</blockquote>\n<p dir=\"auto\">When serializable is false, it compiles.</p>\n<p dir=\"auto\">Also I found it surprising that the compiler generates the ImmutableList.builder() call in this case. Are there other collection libraries supported too, or only Guava?</p>",
                "resourcePath": "/google/auto/issues/364",
                "createdAt": "2016-08-01T17:25:10Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Recursive supertype and superinterface validation",
        "url": "https://github.com/google/auto/pull/733",
        "resourcePath": "/google/auto/pull/733",
        "createdAt": "2019-05-14T20:45:19Z",
        "number": 733,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/com/google/auto/common/SuperficialValidation.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/test/java/com/google/auto/common/SuperficialValidationTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mjc4ODQ0ODMzOjU2YmY2OTkwMDA2OWY3M2ZmNTU3OGE5YWE3OWVkNWRlMWU3MGU2OTU=",
                "url": "https://github.com/google/auto/pull/733/commits/56bf69900069f73ff5578a9aa79ed5de1e70e695"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 660,
                "url": "https://github.com/google/auto/issues/660",
                "title": "BasicAnnotationProcessor does not recursively validate superclasses / superinterfaces",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">BasicAnnotationProcessor</code> only validates immediate superclass and superinterfaces. <a href=\"https://github.com/Leland-Takamine/auto/commit/de950e8843210fe7dcd197891512d159cb77b2b8\">This commit</a> demonstrates the behavior. The first test passes, but the second fails. It's possible to update <code class=\"notranslate\">SuperficialValidation</code> to recursively validate superclasses and superinterfaces. Is this something that <code class=\"notranslate\">BasicAnnotationProcessor</code> should support?</p>",
                "resourcePath": "/google/auto/issues/660",
                "createdAt": "2018-08-22T22:02:03Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Moe Sync",
        "url": "https://github.com/google/auto/pull/737",
        "resourcePath": "/google/auto/pull/737",
        "createdAt": "2019-05-27T14:32:12Z",
        "number": 737,
        "mergeCommit": {
          "oid": "f13cae11623c6725a7aa15f67572577862d24242",
          "message": "Migrate Correspondence subclasses to instead call Correspondence.from.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=249869914",
          "commitUrl": "https://github.com/google/auto/commit/f13cae11623c6725a7aa15f67572577862d24242",
          "parents": {
            "nodes": [
              {
                "oid": "a0de99b71ad00d1bd4645d7a75d0eff3567133b5",
                "message": "Better support for ImmutableSortedSet and ImmutableSortedMap. Use .copyOfSorted when setting from a SortedSet or SortedMap. Use .naturalOrder when constructing a builder.\n\nFixes https://github.com/google/auto/issues/666.\n\nRELNOTES=Use ImmutableSortedSet.copyOfSorted and .naturalOrder where appropriate.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=249632356"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/AutoOneOfProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/AutoOneOfTemplateVars.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/AutoValueOrOneOfProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/BuilderMethodClassifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/BuilderSpec.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/PropertyBuilderClassifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/autooneof.vm"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/AutoOneOfCompilationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/AutoValueCompilationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/howto.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MjgyNTM2ODc5OjZjOWJkOWZkYmM0NmE0YzdhYzAxYjRkMmFjY2Q3NTcxZGQxNDQzMzg=",
                "url": "https://github.com/google/auto/pull/737/commits/6c9bd9fdbc46a4c7ac01b4d2accd7571dd144338"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 666,
                "url": "https://github.com/google/auto/issues/666",
                "title": "Using a collection builder with ImmutableSortedSet",
                "bodyHTML": "<p dir=\"auto\">I want to have a class similar to the below but ImmutableSortedSet.Builder throws an exception from it's factory method.  Is this possible?</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public abstract static class Builder {\n    private static Builder builder() {\n        return new AutoValue_Object.Builder();\n    }\n\n    abstract ImmutableSortedSet.Builder&lt;ComparableObject&gt; pointsBuilder();\n\n    public abstract Builder setPoints(final ImmutableList&lt;ComparableObject&gt; points);\n\n    public Builder addPoint(final ComparableObject point) {\n        pointsBuilder().add(point);\n        return this;\n    }\n    \n    public abstract Object build();\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">public abstract static class Builder {\n    private static Builder builder() {\n        return new AutoValue_Object.Builder();\n    }\n\n    abstract ImmutableSortedSet.Builder&lt;ComparableObject&gt; pointsBuilder();\n\n    public abstract Builder setPoints(final ImmutableList&lt;ComparableObject&gt; points);\n\n    public Builder addPoint(final ComparableObject point) {\n        pointsBuilder().add(point);\n        return this;\n    }\n    \n    public abstract Object build();\n}\n</code></pre></div>",
                "resourcePath": "/google/auto/issues/666",
                "createdAt": "2018-09-25T11:01:15Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Moe Sync",
        "url": "https://github.com/google/auto/pull/748",
        "resourcePath": "/google/auto/pull/748",
        "createdAt": "2019-08-14T12:19:18Z",
        "number": 748,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/TypeEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/autooneof.vm"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/autovalue.vm"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/equalshashcode.vm"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/AutoValueCompilationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/ReformatterTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/TypeEncoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/TypeSimplifierTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/howto.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/index.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzA3MzAyOTU2OjAzMWQ0M2E2ZDUzNmI0ODZmZDAyODk3M2YxOGY2NDRlZjBlOGM1MDM=",
                "url": "https://github.com/google/auto/pull/748/commits/031d43a6d536b486fd028973f18f644ef0e8c503"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 89,
                "url": "https://github.com/google/auto/issues/89",
                "title": "Document the order of AutoValue fields, taken from superclasses and interfaces",
                "bodyHTML": "<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class AutoValueTest {\n\n    public static void main(String[] args) {\n        System.out.println(\n                new AutoValue_AutoValueTest_Sub(1.0f, 'c', 2L, 1, &quot;s&quot;, null));\n    }\n\n    static interface Interface1 {\n        float getFloat();\n        Object getObject();\n    }\n\n    static interface Interface2 {\n        float getFloat();\n        char getChar();\n    }\n\n    static interface Interface3 {\n        long getLong();\n    }\n\n    static abstract class Super implements Interface2, Interface3 {\n        abstract int getInt();\n    }\n\n    @AutoValue\n    static abstract class Sub extends Super implements Interface1, Interface2 {\n        abstract String getString();\n        public abstract Object getObject();\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">public class AutoValueTest {\n\n    public static void main(String[] args) {\n        System.out.println(\n                new AutoValue_AutoValueTest_Sub(1.0f, 'c', 2L, 1, \"s\", null));\n    }\n\n    static interface Interface1 {\n        float getFloat();\n        Object getObject();\n    }\n\n    static interface Interface2 {\n        float getFloat();\n        char getChar();\n    }\n\n    static interface Interface3 {\n        long getLong();\n    }\n\n    static abstract class Super implements Interface2, Interface3 {\n        abstract int getInt();\n    }\n\n    @AutoValue\n    static abstract class Sub extends Super implements Interface1, Interface2 {\n        abstract String getString();\n        public abstract Object getObject();\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">Please, document the order of <code class=\"notranslate\">AutoValue_AutoValueTest_Sub</code> constructor arguments.</p>",
                "resourcePath": "/google/auto/issues/89",
                "createdAt": "2014-03-29T15:13:56Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "type=documentation"
                      }
                    },
                    {
                      "node": {
                        "name": "P4"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 688,
                "url": "https://github.com/google/auto/issues/688",
                "title": "User guide refers to previous release",
                "bodyHTML": "<p dir=\"auto\">Docs still refer to 1.6.2 even if now 1.6.3 is out.</p>",
                "resourcePath": "/google/auto/issues/688",
                "createdAt": "2018-12-14T16:25:56Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 745,
                "url": "https://github.com/google/auto/issues/745",
                "title": "AutoFactory crashes on classes in the default package",
                "bodyHTML": "<p dir=\"auto\">AutoFactory crashes on classes in the default package, e.g.:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import com.google.auto.factory.AutoFactory;\n\n@AutoFactory\npublic final class DefaultPackage {}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">auto</span>.<span class=\"pl-s1\">factory</span>.<span class=\"pl-s1\">AutoFactory</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">AutoFactory</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">DefaultPackage</span> {}</pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"error: Failed to process @AutoFactory annotations:\n  java.lang.StringIndexOutOfBoundsException: String index out of range: -1\n        at java.lang.String.substring(String.java:1969)\n        at java.lang.String.subSequence(String.java:2005)\n        at com.google.auto.factory.processor.FactoryWriter.getPackage(FactoryWriter.java:262)\n        at com.google.auto.factory.processor.FactoryWriter.writeFactory(FactoryWriter.java:97)\"><pre class=\"notranslate\"><code class=\"notranslate\">error: Failed to process @AutoFactory annotations:\n  java.lang.StringIndexOutOfBoundsException: String index out of range: -1\n        at java.lang.String.substring(String.java:1969)\n        at java.lang.String.subSequence(String.java:2005)\n        at com.google.auto.factory.processor.FactoryWriter.getPackage(FactoryWriter.java:262)\n        at com.google.auto.factory.processor.FactoryWriter.writeFactory(FactoryWriter.java:97)\n</code></pre></div>",
                "resourcePath": "/google/auto/issues/745",
                "createdAt": "2019-08-07T16:43:11Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: factory"
                      }
                    },
                    {
                      "node": {
                        "name": "Status: accepted"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Moe Sync",
        "url": "https://github.com/google/auto/pull/750",
        "resourcePath": "/google/auto/pull/750",
        "createdAt": "2019-08-15T18:33:12Z",
        "number": 750,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/TypeEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/autooneof.vm"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/autovalue.vm"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/equalshashcode.vm"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/AutoValueCompilationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/ReformatterTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/TypeEncoderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/TypeSimplifierTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/howto.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/index.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzA3ODA5NzI1Ojk5YzRjNjE2ODM4MzA1YjM4Y2QyNDk5YjE2OGRkMjYyOGVhMDdkN2E=",
                "url": "https://github.com/google/auto/pull/750/commits/99c4c616838305b38cd2499b168dd2628ea07d7a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 89,
                "url": "https://github.com/google/auto/issues/89",
                "title": "Document the order of AutoValue fields, taken from superclasses and interfaces",
                "bodyHTML": "<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public class AutoValueTest {\n\n    public static void main(String[] args) {\n        System.out.println(\n                new AutoValue_AutoValueTest_Sub(1.0f, 'c', 2L, 1, &quot;s&quot;, null));\n    }\n\n    static interface Interface1 {\n        float getFloat();\n        Object getObject();\n    }\n\n    static interface Interface2 {\n        float getFloat();\n        char getChar();\n    }\n\n    static interface Interface3 {\n        long getLong();\n    }\n\n    static abstract class Super implements Interface2, Interface3 {\n        abstract int getInt();\n    }\n\n    @AutoValue\n    static abstract class Sub extends Super implements Interface1, Interface2 {\n        abstract String getString();\n        public abstract Object getObject();\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">public class AutoValueTest {\n\n    public static void main(String[] args) {\n        System.out.println(\n                new AutoValue_AutoValueTest_Sub(1.0f, 'c', 2L, 1, \"s\", null));\n    }\n\n    static interface Interface1 {\n        float getFloat();\n        Object getObject();\n    }\n\n    static interface Interface2 {\n        float getFloat();\n        char getChar();\n    }\n\n    static interface Interface3 {\n        long getLong();\n    }\n\n    static abstract class Super implements Interface2, Interface3 {\n        abstract int getInt();\n    }\n\n    @AutoValue\n    static abstract class Sub extends Super implements Interface1, Interface2 {\n        abstract String getString();\n        public abstract Object getObject();\n    }\n}\n</code></pre></div>\n<p dir=\"auto\">Please, document the order of <code class=\"notranslate\">AutoValue_AutoValueTest_Sub</code> constructor arguments.</p>",
                "resourcePath": "/google/auto/issues/89",
                "createdAt": "2014-03-29T15:13:56Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "type=documentation"
                      }
                    },
                    {
                      "node": {
                        "name": "P4"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 688,
                "url": "https://github.com/google/auto/issues/688",
                "title": "User guide refers to previous release",
                "bodyHTML": "<p dir=\"auto\">Docs still refer to 1.6.2 even if now 1.6.3 is out.</p>",
                "resourcePath": "/google/auto/issues/688",
                "createdAt": "2018-12-14T16:25:56Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 745,
                "url": "https://github.com/google/auto/issues/745",
                "title": "AutoFactory crashes on classes in the default package",
                "bodyHTML": "<p dir=\"auto\">AutoFactory crashes on classes in the default package, e.g.:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import com.google.auto.factory.AutoFactory;\n\n@AutoFactory\npublic final class DefaultPackage {}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">auto</span>.<span class=\"pl-s1\">factory</span>.<span class=\"pl-s1\">AutoFactory</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">AutoFactory</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">DefaultPackage</span> {}</pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"error: Failed to process @AutoFactory annotations:\n  java.lang.StringIndexOutOfBoundsException: String index out of range: -1\n        at java.lang.String.substring(String.java:1969)\n        at java.lang.String.subSequence(String.java:2005)\n        at com.google.auto.factory.processor.FactoryWriter.getPackage(FactoryWriter.java:262)\n        at com.google.auto.factory.processor.FactoryWriter.writeFactory(FactoryWriter.java:97)\"><pre class=\"notranslate\"><code class=\"notranslate\">error: Failed to process @AutoFactory annotations:\n  java.lang.StringIndexOutOfBoundsException: String index out of range: -1\n        at java.lang.String.substring(String.java:1969)\n        at java.lang.String.subSequence(String.java:2005)\n        at com.google.auto.factory.processor.FactoryWriter.getPackage(FactoryWriter.java:262)\n        at com.google.auto.factory.processor.FactoryWriter.writeFactory(FactoryWriter.java:97)\n</code></pre></div>",
                "resourcePath": "/google/auto/issues/745",
                "createdAt": "2019-08-07T16:43:11Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: factory"
                      }
                    },
                    {
                      "node": {
                        "name": "Status: accepted"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Moe Sync",
        "url": "https://github.com/google/auto/pull/763",
        "resourcePath": "/google/auto/pull/763",
        "createdAt": "2019-09-30T18:03:37Z",
        "number": 763,
        "mergeCommit": {
          "oid": "86f456371a23353acfa6dc5aacf880eb10439fad",
          "message": "Add an API to allow extensions to find out about builders.\n\nFixes https://github.com/google/auto/issues/421.\n\nRELNOTES=Add an API to allow AutoValue extensions to find out about builders.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=272009461",
          "commitUrl": "https://github.com/google/auto/commit/86f456371a23353acfa6dc5aacf880eb10439fad",
          "parents": {
            "nodes": [
              {
                "oid": "7646889ded2a74c4377ac8decece3b879209cf35",
                "message": "Ensure that types are substituted correctly in property builders.\n\nThe regression test tickles a bug in Eclipse so this change introduces a new place to put tests like that. I don't know how to work around the Eclipse failure, which is a NullPointerException inside Types.asMemberOf.\n\nRELNOTES=Property builders now work correctly when their actual return type is different from the corresponding property type because of type variable substitution.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=271621735"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/extension/AutoValueExtension.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/BuilderSpec.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/ExtensionContext.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/TypeSimplifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/ExtensionTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzIyOTA0ODU3OjgzMjQ4MGVhMjA1YzFmODc0ZDk3MjcyOWI3NGYxMzYyMzAzNzU2ZTk=",
                "url": "https://github.com/google/auto/pull/763/commits/832480ea205c1f874d972729b74f1362303756e9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 421,
                "url": "https://github.com/google/auto/issues/421",
                "title": "Proposal: Expose read-only builder properties in Extensions API",
                "bodyHTML": "<p dir=\"auto\">Hey all,</p>\n<p dir=\"auto\">I've run into a few cases now where an extension implementation would be improved by being builder-aware (so it can generate code calling into it). What would you think of exposing this in a read-only fashion in the extensions API?</p>",
                "resourcePath": "/google/auto/issues/421",
                "createdAt": "2016-12-30T20:18:39Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=addition"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Moe Sync",
        "url": "https://github.com/google/auto/pull/779",
        "resourcePath": "/google/auto/pull/779",
        "createdAt": "2019-10-17T13:32:57Z",
        "number": 779,
        "mergeCommit": {
          "oid": "7dc5450ec1abdd6473a5dd11dcb19f4115ff7a89",
          "message": "Document that <annotationProcessorPaths> is the preferred way to use auto-value for Maven and Gradle.\n\nFixes https://github.com/google/auto/issues/773.\n\nRELNOTES=Document that `<annotationProcessorPaths>` is the preferred way to use auto-value for Maven and Gradle.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=275036598",
          "commitUrl": "https://github.com/google/auto/commit/7dc5450ec1abdd6473a5dd11dcb19f4115ff7a89",
          "parents": {
            "nodes": [
              {
                "oid": "78eef202297404a65d4e4745315aa1c0b0efb3a7",
                "message": "Fix 4 ErrorProneStyle findings:\n* Constructors and methods with the same name should appear sequentially with no other code in between. Please re-order or re-name methods.\n* These grouping parentheses are unnecessary; it is unlikely the code will be misinterpreted without them\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=274183390"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "service/README.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/index.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzI5MjY0MDE5OmM5OGZhNmU3YjQwNGM4ODNkM2RlODJkMWJhNDFhM2M3OTVmNWM3ODA=",
                "url": "https://github.com/google/auto/pull/779/commits/c98fa6e7b404c883d3de82d1ba41a3c795f5c780"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 773,
                "url": "https://github.com/google/auto/issues/773",
                "title": "Documentation should prefer specifying annotation processor paths",
                "bodyHTML": "<p dir=\"auto\"><a href=\"https://github.com/google/auto/blob/master/value/userguide/index.md#in-pomxml\">https://github.com/google/auto/blob/master/value/userguide/index.md#in-pomxml</a> first suggests to use <code class=\"notranslate\">&lt;provided&gt;true&lt;/provided&gt;</code> on the Maven dependency, and then suggests configuring <code class=\"notranslate\">&lt;annotationProcessorPaths&gt;</code> as an alternative.</p>\n<p dir=\"auto\">We should switch the priority of those (for all artifacts). Using <code class=\"notranslate\">&lt;provided&gt;true&lt;/provided&gt;</code> puts the annotation processor and its dependencies on the compile-time and runtime classpath, and could lead to linkage errors at runtime (e.g., <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"501088978\" data-permission-text=\"Title is private\" data-url=\"https://github.com/googleapis/java-core/issues/46\" data-hovercard-type=\"issue\" data-hovercard-url=\"/googleapis/java-core/issues/46/hovercard\" href=\"https://github.com/googleapis/java-core/issues/46\">googleapis/java-core#46</a>).</p>",
                "resourcePath": "/google/auto/issues/773",
                "createdAt": "2019-10-08T20:26:08Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=documentation"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: *"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "MOE Sync 2019-11-08",
        "url": "https://github.com/google/auto/pull/784",
        "resourcePath": "/google/auto/pull/784",
        "createdAt": "2019-11-08T16:23:02Z",
        "number": 784,
        "mergeCommit": {
          "oid": "107694bb74c7a8ba4259b4ca01e2e368329bf761",
          "message": "Make @Memoized have class-level retention\n\nRELNOTES=Make @Memoized have class-level retention\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=279158345",
          "commitUrl": "https://github.com/google/auto/commit/107694bb74c7a8ba4259b4ca01e2e368329bf761",
          "parents": {
            "nodes": [
              {
                "oid": "ab2f06757f5e76afe915dd4e97dfc718362c1595",
                "message": "Be more explicit about which Java versions AutoValue supports. The compiler must be at least Java 8, but it can generate code for Java 7.\n\nAlso update gwtserializer/pom.xml to specify Java 7 rather than Java 6. Compiling with -source 6 is no longer supported in recent Java versions.\n\nFixes https://github.com/google/auto/issues/771.\nCloses https://github.com/google/auto/pull/524.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=279157033"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "README.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/README.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/gwtserializer/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/extension/memoized/Memoized.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/index.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzM4NzUyNjA3OmY4YWUyMzIwZTk0ZDdiMWI2ZTUzOGEzZDQyYmExYzlkYTBmYThmYmM=",
                "url": "https://github.com/google/auto/pull/784/commits/f8ae2320e94d7b1b6e538a3d42ba1c9da0fa8fbc"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 771,
                "url": "https://github.com/google/auto/issues/771",
                "title": "AutoValue actually depends on Java 8+",
                "bodyHTML": "<p dir=\"auto\">The auto-value documentation claims that it support Java 1.6+, but due to its transitive dependencies, it actually requires Java 8.</p>\n<p dir=\"auto\">auto-value 1.6.6 depends on auto-service 1.0-rc6. auto-service uses guava's <code class=\"notranslate\">com.google.common.collect.ImmutableSet.toImmutableSet()</code> which is only available in the <code class=\"notranslate\">-jre</code> flavor of guava (which requires Java 8+).</p>",
                "resourcePath": "/google/auto/issues/771",
                "createdAt": "2019-10-04T20:29:46Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=documentation"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "MOE Sync 2019-12-02",
        "url": "https://github.com/google/auto/pull/797",
        "resourcePath": "/google/auto/pull/797",
        "createdAt": "2019-12-02T17:53:12Z",
        "number": 797,
        "mergeCommit": {
          "oid": "628df548685b4fc0f2a9af856f97cc2a68da246b",
          "message": "Use CLASS retention for @AutoService.\n\nThis reapplies 28a2c791575a7e4545293169bea0921b81363a3 after fixing an\ninternal, fragile test.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=283349599",
          "commitUrl": "https://github.com/google/auto/commit/628df548685b4fc0f2a9af856f97cc2a68da246b",
          "parents": {
            "nodes": [
              {
                "oid": "6b0f772854fdbee1cc5323d765393c933270b470",
                "message": "In TemplateVars, check that getResource returns non-null. This check is redundant because if we reach this point then we've already checked that getResourceAsStream returns non-null for the same resource. But it's a little tricky to trace through the logic to prove that.\n\nFixes https://github.com/google/auto/issues/796.\n\nRELNOTES=n/a\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=283336231"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "service/annotations/src/main/java/com/google/auto/service/AutoService.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/TemplateVars.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzQ3ODIwNzk4OjM3N2I5ZDk2NGRlZWViMDYxOTUyM2M0NDE4NmNhYjcyN2FmMWJjNmE=",
                "url": "https://github.com/google/auto/pull/797/commits/377b9d964deeeb0619523c44186cab727af1bc6a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 796,
                "url": "https://github.com/google/auto/issues/796",
                "title": "Missing Check against Null",
                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/auto/blob/bffac145b41c24424bbce8197f5a8eee22c7e13f/value/src/main/java/com/google/auto/value/processor/TemplateVars.java#L157\">auto/value/src/main/java/com/google/auto/value/processor/TemplateVars.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 157\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/auto/commit/bffac145b41c24424bbce8197f5a8eee22c7e13f\">bffac14</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L157\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"157\"></td>\n          <td id=\"LC157\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-smi\">URL</span> <span class=\"pl-s1\">resourceUrl</span> = <span class=\"pl-smi\">TemplateVars</span>.<span class=\"pl-k\">class</span>.<span class=\"pl-en\">getResource</span>(<span class=\"pl-s1\">resourceName</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\nThe program can dereference a null-pointer because it does not check the return value of a function that might return null.<p></p>",
                "resourcePath": "/google/auto/issues/796",
                "createdAt": "2019-12-02T08:15:19Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "MOE Sync 2020-01-02",
        "url": "https://github.com/google/auto/pull/804",
        "resourcePath": "/google/auto/pull/804",
        "createdAt": "2020-01-02T14:40:01Z",
        "number": 804,
        "mergeCommit": {
          "oid": "a69b35ab263e96c0a51742a694f2f3a07763e771",
          "message": "Improve toString alignment in AutoValue's toString.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=287824372",
          "commitUrl": "https://github.com/google/auto/commit/a69b35ab263e96c0a51742a694f2f3a07763e771",
          "parents": {
            "nodes": [
              {
                "oid": "e97d1f085274ee22b2744e278fec79a8ec570061",
                "message": "When checking builder setter parameters, use the final type. The final type is the type after type-variable substitution. Report this type in error messages, since it may not be obvious.\n\n(See AutoValueNotEclipseTest for an example of the problem this is fixing.)\n\nFix CompileWithEclipseTest so that it actually does exclude AutoValueNotEclipseTest.java from the compilation, as intended. Move the existing test within that file into AutoValueTest.java, since apparently the Eclipse bug it was provoking has been fixed. Add the test for the bug being fixed here into AutoValueNotEclipseTest.java, because it hits another Eclipse bug.\n\nFixes https://github.com/google/auto/issues/802.\n\nRELNOTES=Fixed an issue with type checking of setter parameters in the presence of inheritance and generics.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=287580372"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/src/test/java/com/google/auto/value/AutoValueNotEclipseTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/BuilderMethodClassifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/autovalue.vm"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/AutoValueCompilationTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzU4NjgwMjgyOjI4NTYzMTE1M2YwZWU4MjJkNGNlYjM0ZWE4NzQ1ODNmODk5ZGM2ZjM=",
                "url": "https://github.com/google/auto/pull/804/commits/285631153f0ee822d4ceb34ea874583f899dc6f3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 802,
                "url": "https://github.com/google/auto/issues/802",
                "title": "Builder interface fails to deduce nullable setter param for optional getter",
                "bodyHTML": "<p dir=\"auto\">This looks to be related to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"177977987\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/auto/issues/380\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/auto/issues/380/hovercard\" href=\"https://github.com/google/auto/issues/380\">#380</a>, which was fixed in 1.6.4. I have an <a href=\"https://github.com/chrisbouchard/test-autovalue\">test project</a> with my example (and a similar example that works).</p>\n<p dir=\"auto\">I have an interface and a builder interface, and an abstract <code class=\"notranslate\">@AutoValue</code> class with builder that implements them.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public interface InterfaceBreaks&lt;FOO&gt; {\n    Optional&lt;FOO&gt; getFoo();\n\n    interface Builder&lt;FOO, BUILDER extends Builder&lt;FOO, BUILDER&gt;&gt; {\n        BUILDER setFoo(@Nullable FOO foo);\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">InterfaceBreaks</span>&lt;<span class=\"pl-smi\">FOO</span>&gt; {\n    <span class=\"pl-smi\">Optional</span>&lt;<span class=\"pl-smi\">FOO</span>&gt; <span class=\"pl-en\">getFoo</span>();\n\n    <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">Builder</span>&lt;<span class=\"pl-smi\">FOO</span>, <span class=\"pl-smi\">BUILDER</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">Builder</span>&lt;<span class=\"pl-smi\">FOO</span>, <span class=\"pl-smi\">BUILDER</span>&gt;&gt; {\n        <span class=\"pl-smi\">BUILDER</span> <span class=\"pl-en\">setFoo</span>(<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Nullable</span> <span class=\"pl-smi\">FOO</span> <span class=\"pl-s1\">foo</span>);\n    }\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@AutoValue\npublic abstract class ImplementationBreaks implements InterfaceBreaks&lt;String&gt; {\n    public static Builder builder() {\n        return new AutoValue_ImplementationBreaks.Builder();\n    }\n\n    @AutoValue.Builder\n    public abstract static class Builder implements InterfaceBreaks.Builder&lt;String, Builder&gt; {\n        public abstract ImplementationBreaks build();\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">AutoValue</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">ImplementationBreaks</span> <span class=\"pl-k\">implements</span> <span class=\"pl-smi\">InterfaceBreaks</span>&lt;<span class=\"pl-smi\">String</span>&gt; {\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">Builder</span> <span class=\"pl-en\">builder</span>() {\n        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">AutoValue_ImplementationBreaks</span>.<span class=\"pl-smi\">Builder</span>();\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-smi\">AutoValue</span>.<span class=\"pl-s1\">Builder</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Builder</span> <span class=\"pl-k\">implements</span> <span class=\"pl-smi\">InterfaceBreaks</span>.<span class=\"pl-smi\">Builder</span>&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">Builder</span>&gt; {\n        <span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-smi\">ImplementationBreaks</span> <span class=\"pl-en\">build</span>();\n    }\n}</pre></div>\n<p dir=\"auto\">Compiling these classes with AutoValue produces the error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"C:\\&lt;path&gt;\\InterfaceBreaks.java:14: error: Parameter type of setter method should be java.util.Optional&lt;java.lang.String&gt; to match getter net.upliftinglemma.test.autovalue.breaks.ImplementationBreaks.getFoo, or it should be a type that can be passed to Optional.ofNullable to produce java.util.Optional&lt;java.lang.String&gt;\n        BUILDER setFoo(@Nullable FOO foo);\"><pre class=\"notranslate\"><code class=\"notranslate\">C:\\&lt;path&gt;\\InterfaceBreaks.java:14: error: Parameter type of setter method should be java.util.Optional&lt;java.lang.String&gt; to match getter net.upliftinglemma.test.autovalue.breaks.ImplementationBreaks.getFoo, or it should be a type that can be passed to Optional.ofNullable to produce java.util.Optional&lt;java.lang.String&gt;\n        BUILDER setFoo(@Nullable FOO foo);\n</code></pre></div>\n<p dir=\"auto\">As with <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"177977987\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/auto/issues/380\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/auto/issues/380/hovercard\" href=\"https://github.com/google/auto/issues/380\">#380</a>, adding a specialized override of the builder method allows AutoValue to pick up the correct type.</p>",
                "resourcePath": "/google/auto/issues/802",
                "createdAt": "2019-12-19T16:08:21Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "MOE Sync 2020-01-13",
        "url": "https://github.com/google/auto/pull/806",
        "resourcePath": "/google/auto/pull/806",
        "createdAt": "2020-01-13T17:35:28Z",
        "number": 806,
        "mergeCommit": {
          "oid": "bd7bed2e4df1b4012f4c97f7d09bfc54eca1c12d",
          "message": "Make it an error if a setter has a @Nullable parameter when the property being set is not @Nullable. We will generate code that rejects a null parameter whether or not @Nullable is present, so allowing it is just misleading users of the API.\n\nThe mirror situation, where the property is @Nullable but the setter is not, is arguably also incorrect. In that case the generated code does *not* reject a null parameter, even though we might expect it to in the absence of @Nullable on the parameter. However, changing that would surely break a lot of existing code.\n\nFixes https://github.com/google/auto/issues/777.\n\nRELNOTES=It is now a compilation error if a setter method in a builder has a parameter marked @Nullable when the corresponding property is not in fact @Nullable. This already generated a NullPointerException at runtime.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=289103954",
          "commitUrl": "https://github.com/google/auto/commit/bd7bed2e4df1b4012f4c97f7d09bfc54eca1c12d",
          "parents": {
            "nodes": [
              {
                "oid": "65087f1953253e1b0d00b4e29b21722b9640a102",
                "message": "Delete Auto-Parent pom.xml entirely.\n\nIt no longer provides meaningful functionality, and the Auto projects no longer use it. And of course existing users can continue to reference the releases in Maven Central.\n\nFollowup to CL 245779060.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=288955500"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/BuilderMethodClassifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/BuilderSpec.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/AutoValueCompilationTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0MzYyMjM4NjEzOmIxMWIwMjhkOTVjYzI3Y2RkMDAxNGQyYWVhMjFlZWQ4Njg3ZmIzYjM=",
                "url": "https://github.com/google/auto/pull/806/commits/b11b028d95cc27cdd0014d2aea21eed8687fb3b3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 777,
                "url": "https://github.com/google/auto/issues/777",
                "title": "AutoValue should fail if Builder annotations violate invariants",
                "bodyHTML": "<p dir=\"auto\">One element where human error can occur when writing the AutoValue class + Builder is if the setter/getter Nullability annotations are mismatched:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@AutoValue\npublic abstract class Foo {\n\n  public abstract String value();\n\n  @AutoValue.Builder\n  public static abstract class Builder {\n\n    public abstract Builder value(@Nullable String value);\n\n    public abstract Foo build();\n  }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@AutoValue\npublic abstract class Foo {\n\n  public abstract String value();\n\n  @AutoValue.Builder\n  public static abstract class Builder {\n\n    public abstract Builder value(@Nullable String value);\n\n    public abstract Foo build();\n  }\n}\n</code></pre></div>\n<p dir=\"auto\">Here, the Builder declares it allows a nullable field but the immutable type does not. What is the expected behavior?</p>\n<p dir=\"auto\">Here is the generated class:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Generated(&quot;com.google.auto.value.processor.AutoValueProcessor&quot;)\nfinal class AutoValue_Foo extends Foo {\n\n  private final String value;\n\n  private AutoValue_Foo(\n      String value) {\n    this.value = value;\n  }\n\n  @Override\n  public String value() {\n    return value;\n  }\n\n  static final class Builder extends Foo.Builder {\n    private String value;\n    Builder() {\n    }\n    @Override\n    public Foo.Builder value(@Nullable String value) {\n      if (value == null) {\n        throw new NullPointerException(&quot;Null value&quot;);\n      }\n      this.value = value;\n      return this;\n    }\n    @Override\n    public Foo build() {\n      String missing = &quot;&quot;;\n      if (this.value == null) {\n        missing += &quot; value&quot;;\n      }\n      if (!missing.isEmpty()) {\n        throw new IllegalStateException(&quot;Missing required properties:&quot; + missing);\n      }\n      return new AutoValue_Foo(\n          this.value);\n    }\n  }\n\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@Generated(\"com.google.auto.value.processor.AutoValueProcessor\")\nfinal class AutoValue_Foo extends Foo {\n\n  private final String value;\n\n  private AutoValue_Foo(\n      String value) {\n    this.value = value;\n  }\n\n  @Override\n  public String value() {\n    return value;\n  }\n\n  static final class Builder extends Foo.Builder {\n    private String value;\n    Builder() {\n    }\n    @Override\n    public Foo.Builder value(@Nullable String value) {\n      if (value == null) {\n        throw new NullPointerException(\"Null value\");\n      }\n      this.value = value;\n      return this;\n    }\n    @Override\n    public Foo build() {\n      String missing = \"\";\n      if (this.value == null) {\n        missing += \" value\";\n      }\n      if (!missing.isEmpty()) {\n        throw new IllegalStateException(\"Missing required properties:\" + missing);\n      }\n      return new AutoValue_Foo(\n          this.value);\n    }\n  }\n\n}\n</code></pre></div>\n<p dir=\"auto\">The implementation does propagate the <code class=\"notranslate\">@Nullable</code> annotation as defined by the Builder, but also enforces nonnull-ness by throwing an NPE. I believe in this scenario, AutoValue should fail the codegen step since this is likely user error.</p>\n<p dir=\"auto\">The reverse should be fine (where the getter is looser in terms of <code class=\"notranslate\">@Nullable</code> but Builder wants non-null inputs only) but I cannot imagine where the above is ever done intentionally and can only lead to error prone use of the generated Builder.</p>",
                "resourcePath": "/google/auto/issues/777",
                "createdAt": "2019-10-14T19:17:19Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "MOE Sync 2020-02-11",
        "url": "https://github.com/google/auto/pull/811",
        "resourcePath": "/google/auto/pull/811",
        "createdAt": "2020-02-12T01:03:23Z",
        "number": 811,
        "mergeCommit": {
          "oid": "ecb6032d6398317da0539ce0ac7287989ea7b0e3",
          "message": "If AutoValue detects an error, don't invoke extensions or generate code.\nFor example if there's a type mismatch between a property getter and the\ncorresponding setter in a Builder, we may otherwise end up invoking an extension\nwith an inconsistent state. Also the generated code is likely to have compile\nerrors of its own, which distract from the real source of the problem.\n\nFixes https://github.com/google/auto/issues/809.\n\nRELNOTES=Don't generate code or invoke extensions if AutoValue detects a problem, for example a mismatch between getters and setters.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=294552938",
          "commitUrl": "https://github.com/google/auto/commit/ecb6032d6398317da0539ce0ac7287989ea7b0e3",
          "parents": {
            "nodes": [
              {
                "oid": "4ab1b53b0ae9a6dbaae3cbc54c270e90fc7daa84",
                "message": "Add type parameters to void AutoOneOf values.\n\nThis allows users of AutoOneOf to not have to manually cast the value.\n\nBefore:\n\n@SuppressWarnings(\"unchecked\")\npublic static <T> MyOneOf<T> empty() {\n  return (MyOneOf<T>) AutoOneOf_MyOneOf.empty();\n}\n\nAfter:\n\npublic static <T> MyOneOf<T> empty() {\n  return AutoOneOf_MyOneOf.empty();\n}\n\nRELNOTES=Add type parameters to factory methods for void AutoOneOf values\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=294216002"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/ExtensionTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0Mzc0MDMxMTkxOjNiMGU1NTgzNDg4MTI4MDNkNzE5MjQxZmZhNTc3ZDUxMjVhZTkzM2U=",
                "url": "https://github.com/google/auto/pull/811/commits/3b0e558348812803d719241ffa577d5125ae933e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 809,
                "url": "https://github.com/google/auto/issues/809",
                "title": "Multiple setters results in NPE in BuilderContext.setters()",
                "bodyHTML": "<p dir=\"auto\">The following class will result in an NPE if an extension attempts to access <code class=\"notranslate\">setters()</code></p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"package test;\nimport com.google.auto.value.AutoValue;\nimport java.util.List;\n\n@AutoValue\npublic abstract class Test {\n  abstract Integer property();\n  abstract List&lt;String&gt; listProperty();\n  \n  @AutoValue.Builder\n  public interface Builder {\n    Builder property(Integer property);\n    Builder listProperty(List&lt;String&gt; listProperty);\n    Builder listProperty(String... listPropertyValues);\n    Test build();\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">package</span> <span class=\"pl-s1\">test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">auto</span>.<span class=\"pl-s1\">value</span>.<span class=\"pl-s1\">AutoValue</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">List</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">AutoValue</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Test</span> {\n  <span class=\"pl-k\">abstract</span> <span class=\"pl-smi\">Integer</span> <span class=\"pl-en\">property</span>();\n  <span class=\"pl-k\">abstract</span> <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-en\">listProperty</span>();\n  \n  <span class=\"pl-c1\">@</span><span class=\"pl-smi\">AutoValue</span>.<span class=\"pl-s1\">Builder</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">Builder</span> {\n    <span class=\"pl-smi\">Builder</span> <span class=\"pl-en\">property</span>(<span class=\"pl-smi\">Integer</span> <span class=\"pl-s1\">property</span>);\n    <span class=\"pl-smi\">Builder</span> <span class=\"pl-en\">listProperty</span>(<span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">listProperty</span>);\n    <span class=\"pl-smi\">Builder</span> <span class=\"pl-en\">listProperty</span>(<span class=\"pl-smi\">String</span>... <span class=\"pl-s1\">listPropertyValues</span>);\n    <span class=\"pl-smi\">Test</span> <span class=\"pl-en\">build</span>();\n  }\n}</pre></div>\n<p dir=\"auto\">Example stack trace</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.lang.NullPointerException\n\tat com.google.auto.value.processor.BuilderSpec$Builder.setters(BuilderSpec.java:158)\n\tat com.ryanharter.auto.value.moshi.AutoValueMoshiExtension.addBuilderFieldSetting(AutoValueMoshiExtension.java:762)\n\tat com.ryanharter.auto.value.moshi.AutoValueMoshiExtension.createReadMethod(AutoValueMoshiExtension.java:711)\n\tat com.ryanharter.auto.value.moshi.AutoValueMoshiExtension.createJsonAdapter(AutoValueMoshiExtension.java:508)\n\tat com.ryanharter.auto.value.moshi.AutoValueMoshiExtension.generateClass(AutoValueMoshiExtension.java:244)\n\tat com.google.auto.value.processor.AutoValueProcessor.writeExtensions(AutoValueProcessor.java:292)\n\tat com.google.auto.value.processor.AutoValueProcessor.processType(AutoValueProcessor.java:254)\n\tat com.google.auto.value.processor.AutoValueOrOneOfProcessor.process(AutoValueOrOneOfProcessor.java:312)\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: java.lang.NullPointerException\n\tat com.google.auto.value.processor.BuilderSpec$Builder.setters(BuilderSpec.java:158)\n\tat com.ryanharter.auto.value.moshi.AutoValueMoshiExtension.addBuilderFieldSetting(AutoValueMoshiExtension.java:762)\n\tat com.ryanharter.auto.value.moshi.AutoValueMoshiExtension.createReadMethod(AutoValueMoshiExtension.java:711)\n\tat com.ryanharter.auto.value.moshi.AutoValueMoshiExtension.createJsonAdapter(AutoValueMoshiExtension.java:508)\n\tat com.ryanharter.auto.value.moshi.AutoValueMoshiExtension.generateClass(AutoValueMoshiExtension.java:244)\n\tat com.google.auto.value.processor.AutoValueProcessor.writeExtensions(AutoValueProcessor.java:292)\n\tat com.google.auto.value.processor.AutoValueProcessor.processType(AutoValueProcessor.java:254)\n\tat com.google.auto.value.processor.AutoValueOrOneOfProcessor.process(AutoValueOrOneOfProcessor.java:312)\n</code></pre></div>",
                "resourcePath": "/google/auto/issues/809",
                "createdAt": "2020-02-05T04:53:45Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "Status: accepted"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "MOE Sync 2020-04-27",
        "url": "https://github.com/google/auto/pull/841",
        "resourcePath": "/google/auto/pull/841",
        "createdAt": "2020-04-27T18:40:19Z",
        "number": 841,
        "mergeCommit": {
          "oid": "6aeb44f8a31cc8205cd54881f1f33e9c04b1c0d1",
          "message": "Generalize the logic for determining if we can make a BarBuilder out of a Bar.\n\nIf you have an `@AutoValue` class `Foo` with a property `Bar bar()` and `Foo.Builder` has a method `BarBuilder barBuilder()`, then we previously allowed that, provided we knew how to make a `BarBuilder` (for example by calling `Bar.builder()`). But if, in addition, `Foo` has its own `toBuilder()` method, then we also need to be able to make a `BarBuilder` out of an existing `Bar`, because if you call `Foo.Builder builder = foo1.toBuilder()` then the builder returned by `builder.barBuilder()` must start off with the contents of `foo1.bar()`. Previously we allowed that when `Bar` had a method `BarBuilder toBuilder()`. We also had a special case for Guava classes like `ImmutableList`. `ImmutableList` doesn't have a `toBuilder()` method, but you can make an `ImmutableList.Builder` out of an `ImmutableList` by starting with an empty `ImmutableList.Builder` and calling `addAll(theImmutableList)`. The change here generalizes that special case: it will work if the `BarBuilder` class has a method `addAll` or `putAll` that can accept an argument of type `Bar`. `ImmutableList.Builder<E>` has a method `addAll(Iterable<? extends E>)` and you can pass an `ImmutableList<E>` to that method, so we still accept `ImmutableList.Builder<T> barBuilder()`. But we now also accept any other class that qualifies.\n\nFixes https://github.com/google/auto/issues/794.\n\nRELNOTES=Generalized the logic for determining if we can make a BarBuilder out of a Bar. For example, if your `@AutoValue` class `Foo` has a property `IntList ints()`, then your builder can have `IntListBuilder intsBuilder()`, where `IntListBuilder` is your own type, and this will work even if there is a `Foo.toBuilder()` method, provided it's possible to call `IntListBuilder.addAll(IntList)`. Previously it worked, but not if there was a `Foo.toBuilder()` because we didn't know how to make `IntListBuilder` out of `IntList`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=308628522",
          "commitUrl": "https://github.com/google/auto/commit/6aeb44f8a31cc8205cd54881f1f33e9c04b1c0d1",
          "parents": {
            "nodes": [
              {
                "oid": "b0bf15e19f2b8a794a7890201330d774d9948f12",
                "message": "[AutoValue] Add serializable extension's g3doc to the opensource filegroup.\n\nThe serializable/g3doc build rule wasn't used.\n\nRELNOTES=Add documentation for SerializableAutoValue extension.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=306863229"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/BuilderMethodClassifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/PropertyBuilderClassifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/AutoValueCompilationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/builders-howto.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/howto.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDA5Njc1MTc5Ojg2MDkwNTg2NWU2NmYzOTg1ZDdlN2Q1ZGMwZjQ0YTlmMmE3OTA2Y2M=",
                "url": "https://github.com/google/auto/pull/841/commits/860905865e66f3985d7e7d5dc0f44a9f2a7906cc"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 794,
                "url": "https://github.com/google/auto/issues/794",
                "title": "Provide a no-dependency way to accumulate for collections",
                "bodyHTML": "<p dir=\"auto\">The recommended way to <a href=\"https://github.com/google/auto/blob/master/value/userguide/builders-howto.md#-accumulate-values-for-a-collection-valued-property-without-breaking-the-chain\">accumulate items into an immutable collection</a> shows examples using Guava.</p>\n<p dir=\"auto\">Some libraries use AutoValue but don't want to force the user to use Guava because Guava is known to cause headaches when different libraries require/provide different versions of Guava.</p>\n<p dir=\"auto\">So it would be nice to have collection builders present directly in AutoValue, like a ListBuilder, a SetBuilder, a MapBuilder. Those builders would then return Collection.unmodifiable***-wrapped collections.</p>",
                "resourcePath": "/google/auto/issues/794",
                "createdAt": "2019-11-26T14:51:05Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=addition"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Have SerializableAutoValueExtension declare that it is \"isolating\".",
        "url": "https://github.com/google/auto/pull/845",
        "resourcePath": "/google/auto/pull/845",
        "createdAt": "2020-05-08T19:54:38Z",
        "number": 845,
        "mergeCommit": {
          "oid": "8e7515a5a796a236a798c299e5338910a4524f3b",
          "message": "Have SerializableAutoValueExtension declare that it is \"isolating\".\n\nSince it is a built-in extension, and since AutoValue itself only describes\nitself as isolating if all extensions are, this omission meant that the\npresence of AutoValue disabled incremental builds in Gradle.\n\nAdd a test to ensure that we don't forget this with future extensions.\n\nFixes https://github.com/google/auto/issues/844.\n\nRELNOTES=AutoValue is once again \"isolating\" for Gradle incremental compilation.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=310610697",
          "commitUrl": "https://github.com/google/auto/commit/8e7515a5a796a236a798c299e5338910a4524f3b",
          "parents": {
            "nodes": [
              {
                "oid": "2bbe5068fa94956471e2ff89841d3e6f93d6d441",
                "message": "Allow boxed @AutoValue properties to be set from the corresponding primitive type.\n\nWe also allow the converse, though that's less likely to be useful.\n\nRELNOTES=Allow boxed @AutoValue properties to be set from the corresponding primitive type.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=309320843"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/extension/serializable/processor/SerializableAutoValueExtension.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "value/src/test/java/com/google/auto/value/processor/IncrementalExtensionTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDE1NDA1NDQwOjQ0Y2E0ZGQwYjdlN2ExYjNkMjU0MWEwNjUzNDJmYTE4ZGE2MjA4NDg=",
                "url": "https://github.com/google/auto/pull/845/commits/44ca4dd0b7e7a1b3d2541a065342fa18da620848"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 844,
                "url": "https://github.com/google/auto/issues/844",
                "title": "AutoValue 1.7.1 Breaks Incremental Annotation Processing",
                "bodyHTML": "<p dir=\"auto\">Since updating to 1.7.1, AutoValue no longer appears to report its correct incremental annotation processing type</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&gt; Task :calendar:kaptReleaseKotlin\n[WARN] Incremental annotation processing requested, but support is disabled because the following processors are not incremental: com.google.auto.value.processor.AutoValueProcessor (DYNAMIC).\"><pre class=\"notranslate\"><code class=\"notranslate\">&gt; Task :calendar:kaptReleaseKotlin\n[WARN] Incremental annotation processing requested, but support is disabled because the following processors are not incremental: com.google.auto.value.processor.AutoValueProcessor (DYNAMIC).\n</code></pre></div>\n<p dir=\"auto\">Note that we see this for projects with extensions and projects with no extensions.</p>",
                "resourcePath": "/google/auto/issues/844",
                "createdAt": "2020-05-05T05:06:45Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Don't emit unnecessary parentheses in AutoAnnotation",
        "url": "https://github.com/google/auto/pull/850",
        "resourcePath": "/google/auto/pull/850",
        "createdAt": "2020-05-18T22:44:14Z",
        "number": 850,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/invoker.properties"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/autoannotation.vm"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/AutoAnnotationCompilationTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDE5Nzc4NzE0OjZmNjcwMTMxNmYxZDBkM2U0YTIxYzllYTA1ZjFmODZiYjZjYzhlODg=",
                "url": "https://github.com/google/auto/pull/850/commits/6f6701316f1d0d3e4a21c9ea05f1f86bb6cc8e88"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 849,
                "url": "https://github.com/google/auto/issues/849",
                "title": "UnnecessaryParentheses issue in generated hashCode() method flagged by error prone ",
                "bodyHTML": "<p dir=\"auto\">Similarly to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"369302466\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/auto/issues/670\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/auto/issues/670/hovercard\" href=\"https://github.com/google/auto/issues/670\">#670</a>, the recent EP version (2.3.5-SNAPSHOT) is flagging the generated code as invalid:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"bazel-out/k8-fastbuild/bin/java/com/google/gerrit/util/cli/_javac/cli/libcli_sourcegenfiles/com/google/gerrit/util/cli/AutoAnnotation_OptionUtil_newOption.java:220: error: [UnnecessaryParentheses] These grouping parentheses are unnecessary; it is unlikely the code will be misinterpreted without them\n        + (-176714719 ^ (Arrays.hashCode(forbids)))\n                        ^\n    (see https://errorprone.info/bugpattern/UnnecessaryParentheses)\n  Did you mean '+ (-176714719 ^ Arrays.hashCode(forbids))'?\"><pre class=\"notranslate\"><code class=\"notranslate\">bazel-out/k8-fastbuild/bin/java/com/google/gerrit/util/cli/_javac/cli/libcli_sourcegenfiles/com/google/gerrit/util/cli/AutoAnnotation_OptionUtil_newOption.java:220: error: [UnnecessaryParentheses] These grouping parentheses are unnecessary; it is unlikely the code will be misinterpreted without them\n        + (-176714719 ^ (Arrays.hashCode(forbids)))\n                        ^\n    (see https://errorprone.info/bugpattern/UnnecessaryParentheses)\n  Did you mean '+ (-176714719 ^ Arrays.hashCode(forbids))'?\n</code></pre></div>",
                "resourcePath": "/google/auto/issues/849",
                "createdAt": "2020-05-17T17:37:05Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P4"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "MOE Sync 2020-05-20",
        "url": "https://github.com/google/auto/pull/852",
        "resourcePath": "/google/auto/pull/852",
        "createdAt": "2020-05-20T19:40:58Z",
        "number": 852,
        "mergeCommit": {
          "oid": "b9ba06a327d08a741ed70f1573540e063fb6c69c",
          "message": "Drop unnecessary parentheses in AutoAnnotation `equals` and `hashCode` methods.\n\nFixes https://github.com/google/auto/issues/849. Closes https://github.com/google/auto/pull/850.\n\nRELNOTES=Drop unnecessary parentheses in AutoAnnotation `equals` and `hashCode` methods.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=312284275",
          "commitUrl": "https://github.com/google/auto/commit/b9ba06a327d08a741ed70f1573540e063fb6c69c",
          "parents": {
            "nodes": [
              {
                "oid": "2797d38007e3a07e6197986721c99a1bdcdd4614",
                "message": "Defer processing in `@AutoValue` classes if any abstract method has an undefined return type or parameter type. This avoids problems in certain cases where other annotation processors will generate the currently-undefined type.\n\nFixes https://github.com/google/auto/issues/847.\n\nRELNOTES=Fixed a problem when an `@AutoValue` class references types that are generated by other annotation processors.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=312172526"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/AutoValueOrOneOfProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/BuilderSpec.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "value/src/main/java/com/google/auto/value/processor/MissingTypeException.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "value/src/main/java/com/google/auto/value/processor/MissingTypes.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/TypeEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/TypeSimplifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/autoannotation.vm"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/AutoAnnotationCompilationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/AutoValueCompilationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/TypeEncoderTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDIwOTgwMzc3OmJkNjZhYmNkZjI5YTk5Yzk0YmRhMGM0MTgwZGNmNDYzODg2ZGRjOWY=",
                "url": "https://github.com/google/auto/pull/852/commits/bd66abcdf29a99c94bda0c4180dcf463886ddc9f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 847,
                "url": "https://github.com/google/auto/issues/847",
                "title": "Unable to generate AutoValue class referencing class generated by another annotation processor (since 1.5.3)",
                "bodyHTML": "<p dir=\"auto\">I am writing an annotation processor that generates several classes in a library that also uses AutoValue. Beginning with <a href=\"https://github.com/google/auto/releases/tag/auto-value-1.5.3\">1.5.3</a>, I receive an error during compilation <code class=\"notranslate\">Did not generate @AutoValue class for com.google.ads.googleads.lib.GoogleAdsClient because it references undefined types</code>.</p>\n<p dir=\"auto\">The class using AutoValue both extends and contains references to classes generated by the annotation processor I am writing. Prior to 1.5.3, this worked fine - as I understand it, my annotation processor would generate all necessary classes, and then AutoValue would generate the necessary classes using the generated code. However, since 1.5.3, and in every subsequent version, this does not work producing the error mentioned above.</p>\n<p dir=\"auto\">For reference, <a href=\"https://github.com/googleads/google-ads-java/blob/911a0bd0b049400a2ce92644f035eb8e9848383a/google-ads/src/main/java/com/google/ads/googleads/lib/GoogleAdsClient.java#L69\">this is where we use AutoValue</a>. As you can see, the GoogleAdsClient class extends AbstractGoogleAdsClient. In the public version I've linked to, AbstractGoogleAdsClient is present in the library. However, we will be replacing that class with a version generated by the annotation processor I am writing. There will also be a reference to a generated class in the Builder class, but that is not present in the public library I've linked to.</p>\n<p dir=\"auto\">Any idea what could be causing this or how to fix it?</p>",
                "resourcePath": "/google/auto/issues/847",
                "createdAt": "2020-05-13T15:23:00Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            },
            {
              "node": {
                "number": 849,
                "url": "https://github.com/google/auto/issues/849",
                "title": "UnnecessaryParentheses issue in generated hashCode() method flagged by error prone ",
                "bodyHTML": "<p dir=\"auto\">Similarly to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"369302466\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/auto/issues/670\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/auto/issues/670/hovercard\" href=\"https://github.com/google/auto/issues/670\">#670</a>, the recent EP version (2.3.5-SNAPSHOT) is flagging the generated code as invalid:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"bazel-out/k8-fastbuild/bin/java/com/google/gerrit/util/cli/_javac/cli/libcli_sourcegenfiles/com/google/gerrit/util/cli/AutoAnnotation_OptionUtil_newOption.java:220: error: [UnnecessaryParentheses] These grouping parentheses are unnecessary; it is unlikely the code will be misinterpreted without them\n        + (-176714719 ^ (Arrays.hashCode(forbids)))\n                        ^\n    (see https://errorprone.info/bugpattern/UnnecessaryParentheses)\n  Did you mean '+ (-176714719 ^ Arrays.hashCode(forbids))'?\"><pre class=\"notranslate\"><code class=\"notranslate\">bazel-out/k8-fastbuild/bin/java/com/google/gerrit/util/cli/_javac/cli/libcli_sourcegenfiles/com/google/gerrit/util/cli/AutoAnnotation_OptionUtil_newOption.java:220: error: [UnnecessaryParentheses] These grouping parentheses are unnecessary; it is unlikely the code will be misinterpreted without them\n        + (-176714719 ^ (Arrays.hashCode(forbids)))\n                        ^\n    (see https://errorprone.info/bugpattern/UnnecessaryParentheses)\n  Did you mean '+ (-176714719 ^ Arrays.hashCode(forbids))'?\n</code></pre></div>",
                "resourcePath": "/google/auto/issues/849",
                "createdAt": "2020-05-17T17:37:05Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P4"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "MOE Sync 2020-06-12",
        "url": "https://github.com/google/auto/pull/856",
        "resourcePath": "/google/auto/pull/856",
        "createdAt": "2020-06-12T19:30:18Z",
        "number": 856,
        "mergeCommit": {
          "oid": "e62e0abd2fbdfd2512c292ef95d4d152a5ca0691",
          "message": "Fix a problem with references to Factory classes in other packages.\n\nDetect references to not-yet-generated Factory classes, and associate them with the correct package name if the Factory is one of the ones currently being generated.\n\nFixes https://github.com/google/auto/issues/297.\n\nRELNOTES=Fix a problem with references to Factory classes in other packages.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=316148042",
          "commitUrl": "https://github.com/google/auto/commit/e62e0abd2fbdfd2512c292ef95d4d152a5ca0691",
          "parents": {
            "nodes": [
              {
                "oid": "08f930a190737eca212da08ece6afa8e4287c336",
                "message": "Make the nested @AutoValue class static otherwise you get the following error:\n`Nested @AutoValue class must be static`\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=316117150"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/main/java/com/google/auto/factory/processor/AutoFactoryDeclaration.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/main/java/com/google/auto/factory/processor/AutoFactoryProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/main/java/com/google/auto/factory/processor/FactoryDescriptor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/main/java/com/google/auto/factory/processor/FactoryMethodDescriptor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "factory/src/main/java/com/google/auto/factory/processor/PackageAndClass.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDMzODUwMzAxOmFiOTlmYjgzYWE1MDZmNzNhZmMwNDgxZTg4NjBkZTVlMzY2MGMyNTU=",
                "url": "https://github.com/google/auto/pull/856/commits/ab99fb83aa506f73afc0481e8860de5e3660c255"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 297,
                "url": "https://github.com/google/auto/issues/297",
                "title": "AutoFactory: Composition of factories broken",
                "bodyHTML": "<p dir=\"auto\">When referencing a auto generated factory in another auto generated factory the reference is not fully qualified and thus can not be resolved. Here is an example:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"package autoFactoryTest.sub;\n\nimport com.google.auto.factory.AutoFactory;\n\n@AutoFactory\npublic class B {\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">package</span> <span class=\"pl-s1\">autoFactoryTest</span>.<span class=\"pl-s1\">sub</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">auto</span>.<span class=\"pl-s1\">factory</span>.<span class=\"pl-s1\">AutoFactory</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">AutoFactory</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">B</span> {\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"package autoFactoryTest;\n\nimport com.google.auto.factory.AutoFactory;\nimport autoFactoryTest.sub.BFactory;\n\n@AutoFactory\npublic class A {\n    public A(BFactory b) {\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">package</span> <span class=\"pl-s1\">autoFactoryTest</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">auto</span>.<span class=\"pl-s1\">factory</span>.<span class=\"pl-s1\">AutoFactory</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">autoFactoryTest</span>.<span class=\"pl-s1\">sub</span>.<span class=\"pl-s1\">BFactory</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">AutoFactory</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">A</span> {\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">A</span>(<span class=\"pl-smi\">BFactory</span> <span class=\"pl-s1\">b</span>) {\n    }\n}</pre></div>\n<p dir=\"auto\">The reference to <code class=\"notranslate\">BFactory</code> from <code class=\"notranslate\">AFactory</code> is not fully qualified which cannot be resolved:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import javax.annotation.Generated;\nimport javax.inject.Inject;\n@Generated(&quot;com.google.auto.factory.processor.AutoFactoryProcessor&quot;)\npublic final class AFactory {\n  @Inject\n  public AFactory() {\n  }\n  public A create(BFactory b) {\n    return new A(b);\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">javax</span>.<span class=\"pl-s1\">annotation</span>.<span class=\"pl-s1\">Generated</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">javax</span>.<span class=\"pl-s1\">inject</span>.<span class=\"pl-s1\">Inject</span>;\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Generated</span>(<span class=\"pl-s\">\"com.google.auto.factory.processor.AutoFactoryProcessor\"</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">AFactory</span> {\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Inject</span>\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">AFactory</span>() {\n  }\n  <span class=\"pl-k\">public</span> <span class=\"pl-smi\">A</span> <span class=\"pl-en\">create</span>(<span class=\"pl-smi\">BFactory</span> <span class=\"pl-s1\">b</span>) {\n    <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">A</span>(<span class=\"pl-s1\">b</span>);\n  }\n}</pre></div>\n<p dir=\"auto\">compilation error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[ERROR] diagnostic: target/generated-sources/apt/autoFactoryTest/AFactory.java:8: error: cannot find symbol\"><pre class=\"notranslate\"><code class=\"notranslate\">[ERROR] diagnostic: target/generated-sources/apt/autoFactoryTest/AFactory.java:8: error: cannot find symbol\n</code></pre></div>",
                "resourcePath": "/google/auto/issues/297",
                "createdAt": "2015-12-17T12:08:03Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: factory"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "MOE Sync 2020-07-08",
        "url": "https://github.com/google/auto/pull/861",
        "resourcePath": "/google/auto/pull/861",
        "createdAt": "2020-07-08T21:55:26Z",
        "number": 861,
        "mergeCommit": {
          "oid": "b48441776bb1eefe120dd4de5711e50209f46917",
          "message": "Stop the LazyInit annotation from getting shaded by Maven, so that AutoValue can find it on the classpath.\n\nThe @LazyInit annotation is added if it's found on the classpath (https://github.com/google/auto/blob/da84ef1fae38f2d72901c2b95674271e89600f28/value/src/main/java/com/google/auto/value/extension/memoized/processor/MemoizeExtension.java#L577) but shading rewrites the package at https://github.com/google/auto/blob/da84ef1fae38f2d72901c2b95674271e89600f28/value/src/main/java/com/google/auto/value/extension/memoized/processor/MemoizeExtension.java#L104 from \"com.google.errorprone.annotations.concurrent\" to \"autovalue.shaded.com.google$.errorprone.annotations.$concurrent\" (you can verify this by disassembling the bytecode for MemoizeExtension.class in the release JAR). This means that even with the Error Prone annotations on the classpath, it won't be able to find the LazyInit annotation.\n\nSplitting up the package with a call to String#concat means Maven will no longer rewrite it, so AutoValue will be able to find the LazyInit annotation on the classpath if it's there.\n\nFixes https://github.com/google/auto/issues/427\n\nRELNOTES=Stop the LazyInit annotation from getting shaded by Maven, so that AutoValue can find it on the classpath.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=320196133",
          "commitUrl": "https://github.com/google/auto/commit/b48441776bb1eefe120dd4de5711e50209f46917",
          "parents": {
            "nodes": [
              {
                "oid": "d9d66ad60b4a09f74b7a9822fb347a1dbedf28f4",
                "message": "Fix handling of `@Nullable Optional<T> foo()` properties being set by `setFoo(@Nullable T)` setters.\n\nPreviously calling `setFoo(null)` resulted in the property being set to `null`, even though for `Optional<T> foo()` (without `@Nullable`) it would set the property to `Optional.empty()`. With this change, it is set to `Optional.empty()` whether or not it is `@Nullable`.\n\nRELNOTES=Fixed handling of `@Nullable Optional<T> foo()` properties being set by `setFoo(@Nullable T)` setters. Now `setFoo(null)` results in `Optional.empty()`, not `null`.\n\n-------------\nCreated by MOE: https://github.com/google/moe\nMOE_MIGRATED_REVID=320181666"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/extension/memoized/processor/MemoizeExtension.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDQ2NTA1MzE4Ojc0YTE4ZmQ1MDAwNzU0MjljMDdiOTVkYWVjNzlmYTg4ZTI3YTEyOTY=",
                "url": "https://github.com/google/auto/pull/861/commits/74a18fd500075429c07b95daec79fa88e27a1296"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 427,
                "url": "https://github.com/google/auto/issues/427",
                "title": "Memoized extension not picking up error-prone's `@LazyInit` annotations on the classpath",
                "bodyHTML": "<p dir=\"auto\">Since <code class=\"notranslate\">@Memoized</code> results in non-final fields, it can't be used in <code class=\"notranslate\">@Immutable</code>-annotated classes. error-prone does have support for <code class=\"notranslate\">@LazyInit</code> on fields like this though, would it be possible to have some sort of opt-in mechanism and generate these annotations with the fields?</p>",
                "resourcePath": "/google/auto/issues/427",
                "createdAt": "2017-01-17T09:27:43Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "AutoService: fix check for services with generics",
        "url": "https://github.com/google/auto/pull/871",
        "resourcePath": "/google/auto/pull/871",
        "createdAt": "2020-08-24T16:26:38Z",
        "number": 871,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "service/processor/src/main/java/com/google/auto/service/processor/AutoServiceProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "service/processor/src/test/java/com/google/auto/service/processor/AutoServiceProcessorTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "service/processor/src/test/resources/META-INF/services/test.ServiceWithGenerics"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "service/processor/src/test/resources/test/ServiceWithGenerics.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "service/processor/src/test/resources/test/ServiceWithGenericsProvider.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDcyNjMwMTE3OmUwMzk1MTMwYTVhMDZiYTljMGFjYmY1ZTljZTYwNjJlYWYyZjExMTQ=",
                "url": "https://github.com/google/auto/pull/871/commits/e0395130a5a06ba9c0acbf5e9ce6062eaf2f1114"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 870,
                "url": "https://github.com/google/auto/issues/870",
                "title": "AutoService fails for services with generics and verify = true",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">AutoService</code> fails when the service is a generic class <strong>and</strong> the <code class=\"notranslate\">verify</code> option is set to <code class=\"notranslate\">true</code>, even though the service provider is a concrete, no-generics class.</p>\n<p dir=\"auto\">For instance:</p>\n<p dir=\"auto\"><strong><code class=\"notranslate\">test/ServiceWithGenerics.java</code></strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package test;\npublic interface ServiceWithGenerics&lt;T&gt; { }\"><pre class=\"notranslate\"><code class=\"notranslate\">package test;\npublic interface ServiceWithGenerics&lt;T&gt; { }\n</code></pre></div>\n<p dir=\"auto\"><strong><code class=\"notranslate\">test/ServiceWithGenericsProvider.java</code></strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package test;\n@com.google.auto.service.AutoServiceAutoService(ServiceWithGenerics.class)\npublic class ServiceWithGenericsProvider implements ServiceWithGenerics&lt;Object&gt; { }\"><pre class=\"notranslate\"><code class=\"notranslate\">package test;\n@com.google.auto.service.AutoServiceAutoService(ServiceWithGenerics.class)\npublic class ServiceWithGenericsProvider implements ServiceWithGenerics&lt;Object&gt; { }\n</code></pre></div>\n<p dir=\"auto\">The failure message is:</p>\n<blockquote>\n<p dir=\"auto\">ServiceProviders must implement their service provider interface. test/ServiceWithGenericsProvider does not implement test/ServiceWithGenerics</p>\n</blockquote>\n<p dir=\"auto\">I'm expecting to see a <code class=\"notranslate\">META-INF/services/test.Service</code> file with <code class=\"notranslate\">test/ServiceWithGenericsProvider</code> as content.</p>\n<p dir=\"auto\">This issue doesn't occur when the <code class=\"notranslate\">verify</code> option isn't set or is set to <code class=\"notranslate\">false</code>.</p>\n<p dir=\"auto\">(By the way, I believe that all the tests should run with <code class=\"notranslate\">verify</code> being <code class=\"notranslate\">true</code>.)</p>",
                "resourcePath": "/google/auto/issues/870",
                "createdAt": "2020-08-24T14:58:54Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: service"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove redundant `hasNext()` checks. Since the `equalLists` method starts by checking that the lists have equal sizes, we can assume that `aIterator.hasNext()` \u2261 `bIterator.hasNext()`.",
        "url": "https://github.com/google/auto/pull/874",
        "resourcePath": "/google/auto/pull/874",
        "createdAt": "2020-09-02T03:26:17Z",
        "number": 874,
        "mergeCommit": {
          "oid": "61a787d7328b774f9f206cfc3a66ce30deadd913",
          "message": "Remove redundant `hasNext()` checks. Since the `equalLists` method starts by checking that the lists have equal sizes, we can assume that `aIterator.hasNext()` \u2261 `bIterator.hasNext()`.\n\nFixes https://github.com/google/auto/issues/873.\n\nPiperOrigin-RevId: 329635623",
          "commitUrl": "https://github.com/google/auto/commit/61a787d7328b774f9f206cfc3a66ce30deadd913",
          "parents": {
            "nodes": [
              {
                "oid": "47fc7b9f83e164c620eb5754894f02d1131aaa8a",
                "message": "Automatic code cleanup.\n\nPiperOrigin-RevId: 326930055"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/com/google/auto/common/MoreTypes.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NDc3NTQzNDAzOjYxYTc4N2Q3MzI4Yjc3NGY5ZjIwNmNmYzNhNjZjZTMwZGVhZGQ5MTM=",
                "url": "https://github.com/google/auto/pull/874/commits/61a787d7328b774f9f206cfc3a66ce30deadd913"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 873,
                "url": "https://github.com/google/auto/issues/873",
                "title": "Bug in MoreTypes::equalLists",
                "bodyHTML": "<p dir=\"auto\">The method <code class=\"notranslate\">MoreTypes::equalLists</code> reads:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    Iterator&lt;? extends TypeMirror&gt; aIterator = a.iterator();\n    Iterator&lt;? extends TypeMirror&gt; bIterator = b.iterator();\n    while (aIterator.hasNext()) {\n      if (!bIterator.hasNext()) {\n        return false;\n      }\n      TypeMirror nextMirrorA = aIterator.next();\n      TypeMirror nextMirrorB = bIterator.next();\n      if (!equal(nextMirrorA, nextMirrorB, visiting)) {\n        return false;\n      }\n    }\n    return !aIterator.hasNext();\"><pre class=\"notranslate\"><code class=\"notranslate\">    Iterator&lt;? extends TypeMirror&gt; aIterator = a.iterator();\n    Iterator&lt;? extends TypeMirror&gt; bIterator = b.iterator();\n    while (aIterator.hasNext()) {\n      if (!bIterator.hasNext()) {\n        return false;\n      }\n      TypeMirror nextMirrorA = aIterator.next();\n      TypeMirror nextMirrorB = bIterator.next();\n      if (!equal(nextMirrorA, nextMirrorB, visiting)) {\n        return false;\n      }\n    }\n    return !aIterator.hasNext();\n</code></pre></div>\n<p dir=\"auto\">The last line should be the check on whether <code class=\"notranslate\">b</code> has next, not whether <code class=\"notranslate\">a</code> has next: <code class=\"notranslate\">aIterator.hasNext()</code> will always return <code class=\"notranslate\">false</code>, but maybe <code class=\"notranslate\">bIterator.hasNext()</code> still has elements and that should be checked.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    return !bIterator.hasNext();\"><pre class=\"notranslate\"><code class=\"notranslate\">    return !bIterator.hasNext();\n</code></pre></div>",
                "resourcePath": "/google/auto/issues/873",
                "createdAt": "2020-09-01T13:31:18Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "AutoFactory fix truth and compile-testing incompatibility",
        "url": "https://github.com/google/auto/pull/892",
        "resourcePath": "/google/auto/pull/892",
        "createdAt": "2020-10-10T19:23:22Z",
        "number": 892,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTAxMDI0OTY3OjgzNTU4MTRkNzgxN2VhZTcxYzQ3ZTNhZmY0MjY1ZWYwMzJmMjVmMTU=",
                "url": "https://github.com/google/auto/pull/892/commits/8355814d7817eae71c47e3aff4265ef032f25f15"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 891,
                "url": "https://github.com/google/auto/issues/891",
                "title": "AutoFactory: Incompatibility truth 1.0.1 and compile-testing 0.18",
                "bodyHTML": "<p dir=\"auto\">The library truth changed the API of <code class=\"notranslate\">Subject</code>:<br>\n.. 0.45: Subject has generic args (<a href=\"https://truth.dev/api/0.45/com/google/common/truth/Subject.html\" rel=\"nofollow\">https://truth.dev/api/0.45/com/google/common/truth/Subject.html</a>)<br>\n0.46 .. 1.0.1: Subject has no generic args (<a href=\"https://truth.dev/api/0.46/com/google/common/truth/Subject.html\" rel=\"nofollow\">https://truth.dev/api/0.46/com/google/common/truth/Subject.html</a>)</p>\n<p dir=\"auto\">The compile-testing library:<br>\ntoday last release 0.18: makes use of Subject with generic args. The current source has the generic args already removed, but he sources of 0.18 release still have them. Also, this 0.18 defines the dependency to truth 0.44</p>\n<p dir=\"auto\">In auto-factory, the version for truth is set to 1.0.1. This causes to show compilation errors, at least with Eclipse and VS Code.<br>\nTo get the project setup in Eclipse and being able to run unit tests, I did these changes:</p>\n<ul dir=\"auto\">\n<li>set truth to 0.45</li>\n<li>add dependency to javax.annotation-api (to compile the generated <code class=\"notranslate\">@Generated</code> annotation)</li>\n<li>(in Eclipse ensure the installed JRE adds the tools.jar)</li>\n</ul>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    &lt;truth.version&gt;0.45&lt;/truth.version&gt;\n    ...\n    &lt;dependency&gt;\n      &lt;groupId&gt;javax.annotation&lt;/groupId&gt;\n      &lt;artifactId&gt;javax.annotation-api&lt;/artifactId&gt;\n      &lt;version&gt;1.3.2&lt;/version&gt;\n    &lt;/dependency&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">    &lt;truth.version&gt;0.45&lt;/truth.version&gt;\n    ...\n    &lt;dependency&gt;\n      &lt;groupId&gt;javax.annotation&lt;/groupId&gt;\n      &lt;artifactId&gt;javax.annotation-api&lt;/artifactId&gt;\n      &lt;version&gt;1.3.2&lt;/version&gt;\n    &lt;/dependency&gt;\n</code></pre></div>",
                "resourcePath": "/google/auto/issues/891",
                "createdAt": "2020-10-10T19:08:43Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: factory"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "The methods returned by `BuilderContext.buildMethod()` and `.toBuilderMethods()` can be inherited.",
        "url": "https://github.com/google/auto/pull/935",
        "resourcePath": "/google/auto/pull/935",
        "createdAt": "2020-11-16T18:42:49Z",
        "number": 935,
        "mergeCommit": {
          "oid": "f2cb2247898dcdcb05d52f1faf9689ecef4c0c41",
          "message": "The methods returned by `BuilderContext.buildMethod()` and `.toBuilderMethods()` can be inherited.\n\nThis change addresses cases like this:\n\n```java\ninterface Parent<BuilderT> {\n  BuilderT toBuilder();\n  interface Builder<BuilderT, BuiltT> {\",\n    BuilderT setThing(String x);\",\n    BuiltT build();\",\n  }\n}\n\n@AutoValue abstract class Foo implements Parent<Foo.Builder> {\n  @AutoValue.Builder\n  abstract static class Builder implements Parent.Builder<Builder, Foo> {}\n}\n```\n\nPreviously, there would be two problems with this. First, inheriting `toBuilder()` like this didn't work at all, because its return type is `BuilderT` and not `Foo.Builder`. Now we correctly interpret the inherited return type in the context of `Foo`. Second, in `BuilderContext.buildMethod()` we were looking for methods returning `Foo`, and again this failed because the inherited `build()` method returns `BuiltT`. The fix in both cases is to use `Types.asMemberOf` to determine the correct return type in context.\n\nFixes https://github.com/google/auto/issues/933.\n\nRELNOTES=The methods returned by `BuilderContext.buildMethod()` and `.toBuilderMethods()` can be inherited.\nPiperOrigin-RevId: 342670816",
          "commitUrl": "https://github.com/google/auto/commit/f2cb2247898dcdcb05d52f1faf9689ecef4c0c41",
          "parents": {
            "nodes": [
              {
                "oid": "97863af8fda6e87250dae9e477f98de62d1ff28b",
                "message": "Fix Javadoc typos.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 342637604"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/AutoValueProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/BuilderSpec.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/ExtensionTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTIxODU2MTM1OmYyY2IyMjQ3ODk4ZGNkY2IwNWQ1MmYxZmFmOTY4OWVjZWY0YzBjNDE=",
                "url": "https://github.com/google/auto/pull/935/commits/f2cb2247898dcdcb05d52f1faf9689ecef4c0c41"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 933,
                "url": "https://github.com/google/auto/issues/933",
                "title": "BuilderSpec doesn't expose inherited builder methods to auto value extensions",
                "bodyHTML": "<p dir=\"auto\">I'm running into an issue with <a href=\"https://github.com/rharter/auto-value-gson\">auto-value-gson</a> that seems to be caused by how the <code class=\"notranslate\">BuilderSpec</code> in auto-value exposes builder methods. As an example, I have this base builder class (in kotlin)</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"interface ExampleBaseBuilder&lt;out BuilderType : ExampleBaseBuilder&lt;BuilderType, out BuiltType&gt;, out BuiltType&gt; {\n  fun userId(userId: String): BuilderType\n\n  fun entityId(entityId: String): BuilderType\n\n  fun dateUpdated(dateUpdated: Long): BuilderType\n\n  fun build(): BuiltType\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">interface ExampleBaseBuilder&lt;out BuilderType : ExampleBaseBuilder&lt;BuilderType, out BuiltType&gt;, out BuiltType&gt; {\n  fun userId(userId: String): BuilderType\n\n  fun entityId(entityId: String): BuilderType\n\n  fun dateUpdated(dateUpdated: Long): BuilderType\n\n  fun build(): BuiltType\n}\n</code></pre></div>\n<p dir=\"auto\">this is extended by two builders in autovalue classes, which look like this (back to Java):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  @AutoValue.Builder\n  public interface Builder extends ExampleBaseBuilder&lt;Builder, ExampleClass&gt; {}\"><pre class=\"notranslate\"><code class=\"notranslate\">  @AutoValue.Builder\n  public interface Builder extends ExampleBaseBuilder&lt;Builder, ExampleClass&gt; {}\n</code></pre></div>\n<p dir=\"auto\">auto-value is able to generate both the class and builder just fine, but <code class=\"notranslate\">auto-value-gson</code> checks for the <code class=\"notranslate\">build</code> method in the <code class=\"notranslate\">BuilderSpec</code> that's passed to it, and can't find it. That seems to be because <code class=\"notranslate\">buildMethod()</code> is defined as follows:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Override\n    public Optional&lt;ExecutableElement&gt; buildMethod() {\n      return methodsIn(builderTypeElement.getEnclosedElements()).stream()\n          .filter(\n              m -&gt;\n                  m.getSimpleName().contentEquals(&quot;build&quot;)\n                      &amp;&amp; !m.getModifiers().contains(Modifier.PRIVATE)\n                      &amp;&amp; !m.getModifiers().contains(Modifier.STATIC)\n                      &amp;&amp; m.getParameters().isEmpty()\n                      &amp;&amp; erasedTypeIs(m.getReturnType(), autoValueClass))\n          .findFirst();\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    @Override\n    public Optional&lt;ExecutableElement&gt; buildMethod() {\n      return methodsIn(builderTypeElement.getEnclosedElements()).stream()\n          .filter(\n              m -&gt;\n                  m.getSimpleName().contentEquals(\"build\")\n                      &amp;&amp; !m.getModifiers().contains(Modifier.PRIVATE)\n                      &amp;&amp; !m.getModifiers().contains(Modifier.STATIC)\n                      &amp;&amp; m.getParameters().isEmpty()\n                      &amp;&amp; erasedTypeIs(m.getReturnType(), autoValueClass))\n          .findFirst();\n    }\n</code></pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">TypeElement#getEnclosedElements()</code>, then, returns only the methods declared on the class itself, not any of its ancestors. I was wondering: should the <code class=\"notranslate\">BuilderSpec</code> support finding builder methods on the builder's ancestors, or is this an intentional limitation of extensions?</p>\n<p dir=\"auto\">Thanks a ton for looking into this!</p>",
                "resourcePath": "/google/auto/issues/933",
                "createdAt": "2020-11-11T17:56:47Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow `@AutoService` to reference a generic service even if `-Averify=true`.",
        "url": "https://github.com/google/auto/pull/938",
        "resourcePath": "/google/auto/pull/938",
        "createdAt": "2020-12-08T17:05:39Z",
        "number": 938,
        "mergeCommit": {
          "oid": "afe607c395bc34efe56ac34bd3613c3d9a04d0eb",
          "message": "Allow `@AutoService` to reference a generic service even if `-Averify=true`.\n\nPreviously we allowed this without `-Averify`, but produced an error if `-Averify=true`. Now, that error becomes a warning, and can be suppressed outright with `@SuppressWarnings(\"rawtypes\")`.\n\nThe fundamental issue is that when you say `@AutoService(MyService.class)`, there is no way to specify a type parameter, even if both `MyService` and the implementing class have one. This accurately reflects the limitation that `ServiceLoader.load(MyService.class)` doesn't include generics either. So there's some necessary imprecision in the type system, but it's not outright wrong the way it would be if you specified an unrelated type.\n\nFixes https://github.com/google/auto/issues/870. Closes https://github.com/google/auto/pull/871.\n\nRELNOTES=`@AutoService` classes can now reference generic services and still pass `-Averify=true`.\nPiperOrigin-RevId: 346338973",
          "commitUrl": "https://github.com/google/auto/commit/afe607c395bc34efe56ac34bd3613c3d9a04d0eb",
          "parents": {
            "nodes": [
              {
                "oid": "08f158ebfffcfd99252f73dbc53a463431c2513e",
                "message": "Rewrite `AutoServiceProcessorTest` to use more modern Compile Testing APIs.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 346311927"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "service/processor/src/main/java/com/google/auto/service/processor/AutoServiceProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "service/processor/src/test/java/com/google/auto/service/processor/AutoServiceProcessorTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "service/processor/src/test/resources/test/EnclosingGeneric.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "service/processor/src/test/resources/test/GenericService.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "service/processor/src/test/resources/test/GenericServiceProvider.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "service/processor/src/test/resources/test/GenericServiceProviderSuppressWarnings.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTM0NTkyODA4OmFmZTYwN2MzOTViYzM0ZWZlNTZhYzM0YmQzNjEzYzNkOWEwNGQwZWI=",
                "url": "https://github.com/google/auto/pull/938/commits/afe607c395bc34efe56ac34bd3613c3d9a04d0eb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 870,
                "url": "https://github.com/google/auto/issues/870",
                "title": "AutoService fails for services with generics and verify = true",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">AutoService</code> fails when the service is a generic class <strong>and</strong> the <code class=\"notranslate\">verify</code> option is set to <code class=\"notranslate\">true</code>, even though the service provider is a concrete, no-generics class.</p>\n<p dir=\"auto\">For instance:</p>\n<p dir=\"auto\"><strong><code class=\"notranslate\">test/ServiceWithGenerics.java</code></strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package test;\npublic interface ServiceWithGenerics&lt;T&gt; { }\"><pre class=\"notranslate\"><code class=\"notranslate\">package test;\npublic interface ServiceWithGenerics&lt;T&gt; { }\n</code></pre></div>\n<p dir=\"auto\"><strong><code class=\"notranslate\">test/ServiceWithGenericsProvider.java</code></strong></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package test;\n@com.google.auto.service.AutoServiceAutoService(ServiceWithGenerics.class)\npublic class ServiceWithGenericsProvider implements ServiceWithGenerics&lt;Object&gt; { }\"><pre class=\"notranslate\"><code class=\"notranslate\">package test;\n@com.google.auto.service.AutoServiceAutoService(ServiceWithGenerics.class)\npublic class ServiceWithGenericsProvider implements ServiceWithGenerics&lt;Object&gt; { }\n</code></pre></div>\n<p dir=\"auto\">The failure message is:</p>\n<blockquote>\n<p dir=\"auto\">ServiceProviders must implement their service provider interface. test/ServiceWithGenericsProvider does not implement test/ServiceWithGenerics</p>\n</blockquote>\n<p dir=\"auto\">I'm expecting to see a <code class=\"notranslate\">META-INF/services/test.Service</code> file with <code class=\"notranslate\">test/ServiceWithGenericsProvider</code> as content.</p>\n<p dir=\"auto\">This issue doesn't occur when the <code class=\"notranslate\">verify</code> option isn't set or is set to <code class=\"notranslate\">false</code>.</p>\n<p dir=\"auto\">(By the way, I believe that all the tests should run with <code class=\"notranslate\">verify</code> being <code class=\"notranslate\">true</code>.)</p>",
                "resourcePath": "/google/auto/issues/870",
                "createdAt": "2020-08-24T14:58:54Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: service"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Handle `@AutoFactory` constructors that throw checked exceptions.",
        "url": "https://github.com/google/auto/pull/944",
        "resourcePath": "/google/auto/pull/944",
        "createdAt": "2020-12-15T19:31:16Z",
        "number": 944,
        "mergeCommit": {
          "oid": "3141e796b907acaec6d88c0affeffea2d9a37cdb",
          "message": "Handle `@AutoFactory` constructors that throw checked exceptions.\n\nThe generated `create` method needs to declare the same exceptions.\n\nFixes https://github.com/google/auto/issues/90.\n\nRELNOTES=`@AutoFactory` constructors can now declare checked exceptions. The same exceptions will be declared on the generated `create` method.\nPiperOrigin-RevId: 347657308",
          "commitUrl": "https://github.com/google/auto/commit/3141e796b907acaec6d88c0affeffea2d9a37cdb",
          "parents": {
            "nodes": [
              {
                "oid": "9cc29ca31a07cc94d205b306b5c8d8ec2314658b",
                "message": "Update AutoFactory compilation tests to use the more recent compile-testing API.\n\nIn a couple of places I changed `.onLine(M).atColumn(N)` into just `onLineContaining(S)`. I don't think we care that much about the column number of the error.\n\nAlso move a test input file that was in the wrong place.\n\nPiperOrigin-RevId: 347454890"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/main/java/com/google/auto/factory/processor/FactoryMethodDescriptor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/main/java/com/google/auto/factory/processor/ImplementationMethodDescriptor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/test/java/com/google/auto/factory/processor/AutoFactoryProcessorTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "factory/src/test/resources/expected/ConstructorAnnotatedThrowsFactory.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "factory/src/test/resources/expected/FactoryExtendingAbstractClassThrowsFactory.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "factory/src/test/resources/expected/SimpleClassThrowsFactory.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "factory/src/test/resources/good/ConstructorAnnotatedThrows.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "factory/src/test/resources/good/FactoryExtendingAbstractClassThrows.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "factory/src/test/resources/good/SimpleClassThrows.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTQwNjE3OTEwOjMxNDFlNzk2YjkwN2FjYWVjNmQ4OGMwYWZmZWZmZWEyZDlhMzdjZGI=",
                "url": "https://github.com/google/auto/pull/944/commits/3141e796b907acaec6d88c0affeffea2d9a37cdb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 90,
                "url": "https://github.com/google/auto/issues/90",
                "title": "AutoFactory does not support constructors that throw checked exceptions.",
                "bodyHTML": "<p dir=\"auto\">Checked exceptions declared by the constructor should be added to the throw list for the generated create() method.</p>",
                "resourcePath": "/google/auto/issues/90",
                "createdAt": "2014-04-03T21:53:33Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: factory"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Ensure that type annotations are placed correctly.",
        "url": "https://github.com/google/auto/pull/950",
        "resourcePath": "/google/auto/pull/950",
        "createdAt": "2021-01-08T19:43:21Z",
        "number": 950,
        "mergeCommit": {
          "oid": "f26d2df1d57fcb85d6cf63b2060fd9244ff44fa4",
          "message": "Ensure that type annotations are placed correctly.\n\nTreating them the same as other annotations leads to problems with nested types like `Map.Entry`. If a field or parameter is a `Map.Entry` that is `@Nullable`, and if `@Nullable` is a `TYPE_USE` annotation, then the declaration must use `Map.@Nullable Entry`. JavaPoet will do this correctly if the annotations are applied to the `TypeName` for the declaration.\n\nAlso ensure that type annotations are included in the `T` of `Provider<T>` when that appears in field or parameter declarations.\n\nFixes https://github.com/google/auto/issues/949.\n\nRELNOTES=AutoFactory type annotations are now placed correctly even for nested types.\nPiperOrigin-RevId: 350930373",
          "commitUrl": "https://github.com/google/auto/commit/f26d2df1d57fcb85d6cf63b2060fd9244ff44fa4",
          "parents": {
            "nodes": [
              {
                "oid": "a7cef3f59efdbb64dc419f6af1d5d7313db16a66",
                "message": "Bump mockito-core from 3.6.28 to 3.7.0 in /value\n\nBumps [mockito-core](https://github.com/mockito/mockito) from 3.6.28 to 3.7.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/mockito/mockito/releases\">mockito-core's releases</a>.</em></p>\n<blockquote>\n<h2>v3.7.0</h2>\n<p><!-- raw HTML omitted --><!-- raw HTML omitted --><em>Changelog generated by <a href=\"https://github.com/shipkit/shipkit-changelog\">Shipkit Changelog Gradle Plugin</a></em><!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<h4>3.7.0</h4>\n<ul>\n<li>2021-01-04 - <a href=\"https://github.com/mockito/mockito/compare/v3.6.54...v3.7.0\">2 commit(s)</a> by Szczepan Faber, Tim van der Lippe</li>\n<li>Publish new minor version to Maven central [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2165\">#2165</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/pull/2165\">mockito/mockito#2165</a>)</li>\n</ul>\n<h2>v3.6.54</h2>\n<p><!-- raw HTML omitted --><!-- raw HTML omitted --><em>Changelog generated by <a href=\"https://github.com/shipkit/shipkit-changelog\">Shipkit Changelog Gradle Plugin</a></em><!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<h4>3.6.54</h4>\n<ul>\n<li>2021-01-03 - <a href=\"https://github.com/mockito/mockito/compare/v3.6.52...v3.6.54\">2 commit(s)</a> by Raymond Aug\u00e9, dependabot[bot]</li>\n<li>Bump kotlin-stdlib from 1.4.21 to 1.4.21-2 [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2157\">#2157</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/pull/2157\">mockito/mockito#2157</a>)</li>\n<li>Fixes <a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/1997\">#1997</a> : make mockito-junit-jupiter workin in OSGiMockitoExtensi\u2026 [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2047\">#2047</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/pull/2047\">mockito/mockito#2047</a>)</li>\n<li>MockitoExtension cannot be used with JUnit 5 in OSGi integration tests [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/1997\">#1997</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/1997\">mockito/mockito#1997</a>)</li>\n</ul>\n<h2>v3.6.53</h2>\n<p><!-- raw HTML omitted --><!-- raw HTML omitted --><em>Changelog generated by <a href=\"https://github.com/shipkit/shipkit-changelog\">Shipkit Changelog Gradle Plugin</a></em><!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<h4>3.6.53</h4>\n<ul>\n<li>2021-01-03 - <a href=\"https://github.com/mockito/mockito/compare/v3.6.52...v3.6.53\">1 commit(s)</a> by Raymond Aug\u00e9</li>\n<li>Fixes <a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/1997\">#1997</a> : make mockito-junit-jupiter workin in OSGiMockitoExtensi\u2026 [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2047\">#2047</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/pull/2047\">mockito/mockito#2047</a>)</li>\n<li>MockitoExtension cannot be used with JUnit 5 in OSGi integration tests [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/1997\">#1997</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/1997\">mockito/mockito#1997</a>)</li>\n</ul>\n<h2>v3.6.52</h2>\n<p><!-- raw HTML omitted --><!-- raw HTML omitted --><em>Changelog generated by <a href=\"https://github.com/shipkit/shipkit-changelog\">Shipkit Changelog Gradle Plugin</a></em><!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<h4>3.6.52</h4>\n<ul>\n<li>2021-01-03 - <a href=\"https://github.com/mockito/mockito/compare/v3.6.51...v3.6.52\">1 commit(s)</a> by Daniel Kroening</li>\n<li>Fix in the doc for &quot;Mocking object construction&quot; [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2145\">#2145</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/pull/2145\">mockito/mockito#2145</a>)</li>\n</ul>\n<h2>v3.6.51</h2>\n<p><!-- raw HTML omitted --><!-- raw HTML omitted --><em>Changelog generated by <a href=\"https://github.com/shipkit/shipkit-changelog\">Shipkit Changelog Gradle Plugin</a></em><!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<h4>3.6.51</h4>\n<ul>\n<li>2020-12-31 - <a href=\"https://github.com/mockito/mockito/compare/v3.6.50...v3.6.51\">2 commit(s)</a> by Piotrek \u017bygie\u0142o, Szczepan Faber</li>\n<li>Add field type in <a href=\"https://github.com/Mock\">@Mock</a> example [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2158\">#2158</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/pull/2158\">mockito/mockito#2158</a>)</li>\n</ul>\n<h2>v3.6.50</h2>\n<p><!-- raw HTML omitted --><!-- raw HTML omitted --><em>Changelog generated by <a href=\"https://github.com/shipkit/shipkit-changelog\">Shipkit Changelog Gradle Plugin</a></em><!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<h4>3.6.50</h4>\n<ul>\n<li>2020-12-31 - <a href=\"https://github.com/mockito/mockito/compare/v3.6.49...v3.6.50\">3 commit(s)</a> by Michal, Szczepan Faber</li>\n<li>Apply new Shipkit Changelog plugin properties [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2163\">#2163</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/pull/2163\">mockito/mockito#2163</a>)</li>\n</ul>\n<h2>v3.6.49</h2>\n<p><!-- raw HTML omitted --><!-- raw HTML omitted --><em>Changelog generated by <a href=\"https://github.com/shipkit/shipkit-changelog\">Shipkit Changelog Gradle Plugin</a></em><!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<h4>3.6.49</h4>\n<ul>\n<li>2020-12-30 - <a href=\"https://github.com/mockito/mockito/compare/v3.6.48...v3.6.49\">2 commit(s)</a> by Szczepan Faber</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/mockito/mockito/commit/318781de2905a1c254046c3aec49c42655313aa6\"><code>318781d</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2165\">#2165</a> from mockito/TimvdLippe-patch-2</li>\n<li><a href=\"https://github.com/mockito/mockito/commit/0fb7ef58fbe46044ce76c42f37ee8234a3379d6a\"><code>0fb7ef5</code></a> Publish new minor version to Maven central</li>\n<li><a href=\"https://github.com/mockito/mockito/commit/32eb7e490233ac36d54fe1d79975f8df704f756e\"><code>32eb7e4</code></a> Bump kotlin-stdlib from 1.4.21 to 1.4.21-2 (<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2157\">#2157</a>)</li>\n<li><a href=\"https://github.com/mockito/mockito/commit/240d6e4b8eb3954cdd3285e345c6f8982bb76796\"><code>240d6e4</code></a> Make mockito-junit-jupiter work with JUnit 5 in OSGi integration tests (<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2047\">#2047</a>)</li>\n<li><a href=\"https://github.com/mockito/mockito/commit/1da75c2d6b4d42d751c31441f8bba4651e106a10\"><code>1da75c2</code></a> Fix in the Javadoc for &quot;Mocking object construction&quot; (<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2145\">#2145</a>)</li>\n<li><a href=\"https://github.com/mockito/mockito/commit/7d45fcd0a26d20e2acf4b0aedc044743736035bc\"><code>7d45fcd</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2158\">#2158</a> from pzygielo/type</li>\n<li><a href=\"https://github.com/mockito/mockito/commit/47d901e218aa268f7545b0b77f610b886d2ce005\"><code>47d901e</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2163\">#2163</a> from shestee/release/3.x</li>\n<li><a href=\"https://github.com/mockito/mockito/commit/6ade10a7963976d0440de8a738f0e947d6577937\"><code>6ade10a</code></a> Bumped version of Shipkit plugins</li>\n<li><a href=\"https://github.com/mockito/mockito/commit/9126184434294d9091f259f2e9b68a9e10bc65ae\"><code>9126184</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2160\">#2160</a> from mockito/mockitoguy-patch-4</li>\n<li><a href=\"https://github.com/mockito/mockito/commit/72d3a1002d9684ec2e332fbb2b8c5a18cce20173\"><code>72d3a10</code></a> Add field type in <a href=\"https://github.com/Mock\">@Mock</a> example</li>\n<li>Additional commits viewable in <a href=\"https://github.com/mockito/mockito/compare/v3.6.28...v3.7.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.mockito:mockito-core&package-manager=maven&previous-version=3.6.28&new-version=3.7.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n</details>\n\nFixes #947\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/google/auto/pull/947 from google:dependabot/maven/value/org.mockito-mockito-core-3.7.0 7b24e2ecba05101ed53ee71951916db16a2db344\nPiperOrigin-RevId: 350822538"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/test/java/com/google/auto/factory/processor/AutoFactoryProcessorTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/test/resources/expected/CheckerFrameworkNullableFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/test/resources/good/CheckerFrameworkNullable.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTUxOTI0NjkwOmYyNmQyZGYxZDU3ZmNiODVkNmNmNjNiMjA2MGZkOTI0NGZmNDRmYTQ=",
                "url": "https://github.com/google/auto/pull/950/commits/f26d2df1d57fcb85d6cf63b2060fd9244ff44fa4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 949,
                "url": "https://github.com/google/auto/issues/949",
                "title": "AutoFactory generated code is mis-annotating parameters",
                "bodyHTML": "<p dir=\"auto\">When using the <a href=\"https://checkerframework.org/api/org/checkerframework/checker/nullness/qual/Nullable.html\" rel=\"nofollow\">Checker Framework's <code class=\"notranslate\">TYPE_USE</code> Nullable annotation</a>,<br>\nAutoFactory is generating code that changes the scoping (?) of the inner-class which causes the annotation to be placed in the wrong location.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import com.my.package.Foo.Bar;\nimport com.my.package.Foo.Baz;\nimport org.checkerframework.checker.nullness.qual.Nullable;\n\n@AutoFactory\nclass MyClass {\n  MyClass(\n    @Nullable Bar bar,\n    @Nullable Baz baz,\n    ...\n  ) { ... }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">my</span>.<span class=\"pl-s1\">package</span>.<span class=\"pl-s1\">Foo</span>.<span class=\"pl-s1\">Bar</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">my</span>.<span class=\"pl-s1\">package</span>.<span class=\"pl-s1\">Foo</span>.<span class=\"pl-s1\">Baz</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">checkerframework</span>.<span class=\"pl-s1\">checker</span>.<span class=\"pl-s1\">nullness</span>.<span class=\"pl-s1\">qual</span>.<span class=\"pl-s1\">Nullable</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">AutoFactory</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">MyClass</span> {\n  <span class=\"pl-smi\">MyClass</span>(\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Nullable</span> <span class=\"pl-smi\">Bar</span> <span class=\"pl-s1\">bar</span>,\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Nullable</span> <span class=\"pl-smi\">Baz</span> <span class=\"pl-s1\">baz</span>,\n    ...\n  ) { ... }\n}</pre></div>\n<p dir=\"auto\">The above seems to be generating:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import com.my.package.Foo;\nimport org.checkerframework.checker.nullness.qual.Nullable;\n\nclass MyClassFactory {\n  MyClassFactory(\n    @Nullable Foo.Bar bar,\n    @Nullable Foo.Baz baz,\n    ...\n  ) { ... }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">my</span>.<span class=\"pl-s1\">package</span>.<span class=\"pl-s1\">Foo</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">checkerframework</span>.<span class=\"pl-s1\">checker</span>.<span class=\"pl-s1\">nullness</span>.<span class=\"pl-s1\">qual</span>.<span class=\"pl-s1\">Nullable</span>;\n\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">MyClassFactory</span> {\n  <span class=\"pl-smi\">MyClassFactory</span>(\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Nullable</span> <span class=\"pl-smi\">Foo</span>.<span class=\"pl-smi\">Bar</span> <span class=\"pl-s1\">bar</span>,\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Nullable</span> <span class=\"pl-smi\">Foo</span>.<span class=\"pl-smi\">Baz</span> <span class=\"pl-s1\">baz</span>,\n    ...\n  ) { ... }\n}</pre></div>\n<p dir=\"auto\">Because the build dies with this error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" scoping construct cannot be annotated with type-use annotation: @org.checkerframework.checker.nullness.qual.Nullable\n      @Nullable Foo.Bar bar,\n scoping construct cannot be annotated with type-use annotation: @org.checkerframework.checker.nullness.qual.Nullable\n      @Nullable Foo.Baz baz,\"><pre class=\"notranslate\"><code class=\"notranslate\"> scoping construct cannot be annotated with type-use annotation: @org.checkerframework.checker.nullness.qual.Nullable\n      @Nullable Foo.Bar bar,\n scoping construct cannot be annotated with type-use annotation: @org.checkerframework.checker.nullness.qual.Nullable\n      @Nullable Foo.Baz baz,\n</code></pre></div>\n<p dir=\"auto\">Why isn't the generated code using the same scoping setup as the source?</p>\n<p dir=\"auto\">Issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"443153516\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/auto/issues/732\" data-hovercard-type=\"issue\" data-hovercard-url=\"/google/auto/issues/732/hovercard\" href=\"https://github.com/google/auto/issues/732\">#732</a> may be related?</p>",
                "resourcePath": "/google/auto/issues/949",
                "createdAt": "2021-01-07T07:25:51Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: factory"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "If a getter is `getOAuth()`, allow the setter to be `oAuth(T)`.",
        "url": "https://github.com/google/auto/pull/955",
        "resourcePath": "/google/auto/pull/955",
        "createdAt": "2021-01-11T18:43:34Z",
        "number": 955,
        "mergeCommit": {
          "oid": "1bfc3b537042a240b9aedfdc0337cac1664fbc43",
          "message": "If a getter is `getOAuth()`, allow the setter to be `oAuth(T)`.\n\nNormally we follow the JavaBeans specification, which has special rules for properties that begin with more than one capital, like the `OAuth` implied by `getOAuth()` here. That means that the unprefixed setter should be spelled `OAuth(T)`. That's obviously obscure and unsettling, so we add logic to allow the setter to be either `OAuth(T)` or `oAuth(T)` in this case. We already have logic for the opposite case, where the getter is `oAuth()` and the setter is `setOAuth(T)`.\n\nFixes https://github.com/google/auto/issues/565.\n\nRELNOTES=Avoid surprising behaviour when getters are prefixed and setters are not, and a property name begins with two capital letters.\nPiperOrigin-RevId: 351188819",
          "commitUrl": "https://github.com/google/auto/commit/1bfc3b537042a240b9aedfdc0337cac1664fbc43",
          "parents": {
            "nodes": [
              {
                "oid": "f26d2df1d57fcb85d6cf63b2060fd9244ff44fa4",
                "message": "Ensure that type annotations are placed correctly.\n\nTreating them the same as other annotations leads to problems with nested types like `Map.Entry`. If a field or parameter is a `Map.Entry` that is `@Nullable`, and if `@Nullable` is a `TYPE_USE` annotation, then the declaration must use `Map.@Nullable Entry`. JavaPoet will do this correctly if the annotations are applied to the `TypeName` for the declaration.\n\nAlso ensure that type annotations are included in the `T` of `Provider<T>` when that appears in field or parameter declarations.\n\nFixes https://github.com/google/auto/issues/949.\n\nRELNOTES=AutoFactory type annotations are now placed correctly even for nested types.\nPiperOrigin-RevId: 350930373"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/BuilderMethodClassifier.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTUyOTM5NjY0OjFiZmMzYjUzNzA0MmEyNDBiOWFlZGZkYzAzMzdjYWMxNjY0ZmJjNDM=",
                "url": "https://github.com/google/auto/pull/955/commits/1bfc3b537042a240b9aedfdc0337cac1664fbc43"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 565,
                "url": "https://github.com/google/auto/issues/565",
                "title": "AutoValue does not handle names beginning with double capitals well",
                "bodyHTML": "<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package com.alpesh.Test\n public abstract class Test implements ITest {\n\n        public static Builder builder() {\n\t\treturn new AutoValue_Test.Builder();\n\t}\n\n\tAutoValue.Builder\n\tpublic abstract static class Builder {\n\t\tpublic abstract Builder xIdentityContext(String xIdentityContext);\n\t\tpublic abstract TnCredentials build();\n\t}\n\n}\n\n\npublic interface ITest {\n\tString getApiKey();\n\tboolean isDebug();\n\tString getUrl();\n\tString getXIdentityContext();\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">package com.alpesh.Test\n public abstract class Test implements ITest {\n\n        public static Builder builder() {\n\t\treturn new AutoValue_Test.Builder();\n\t}\n\n\tAutoValue.Builder\n\tpublic abstract static class Builder {\n\t\tpublic abstract Builder xIdentityContext(String xIdentityContext);\n\t\tpublic abstract TnCredentials build();\n\t}\n\n}\n\n\npublic interface ITest {\n\tString getApiKey();\n\tboolean isDebug();\n\tString getUrl();\n\tString getXIdentityContext();\n}\n</code></pre></div>\n<p dir=\"auto\">Consider the above code at first. Note the method name in ITest interface for method <code class=\"notranslate\">getXIdentityContext</code></p>\n<p dir=\"auto\">Build failed with</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Method does not correspond to a property of  com.alpesh.Test\n   \tpublic abstract Builder xIdentityContext(String xIdentityContext);\"><pre class=\"notranslate\"><code class=\"notranslate\">Method does not correspond to a property of  com.alpesh.Test\n   \tpublic abstract Builder xIdentityContext(String xIdentityContext);\n</code></pre></div>\n<p dir=\"auto\">Now, comes the interesting part, when changed that method name in ITest Interface with getXidentityContext  ( I -&gt; i )  and did same in AutoValue.Builder( I -&gt; i ). Build succeeded. Have any one experienced this before . Is Autovalue unable to detect property when there is two Capital letters at the beginnig ?</p>",
                "resourcePath": "/google/auto/issues/565",
                "createdAt": "2017-12-12T13:41:44Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Strip the whole \"More information\" section; there is no sidebar/top-left on GitHub where this appears.",
        "url": "https://github.com/google/auto/pull/963",
        "resourcePath": "/google/auto/pull/963",
        "createdAt": "2021-01-15T19:54:37Z",
        "number": 963,
        "mergeCommit": {
          "oid": "75c5d95807a1ce40530bc03d7a855f116ec22694",
          "message": "Strip the whole \"More information\" section; there is no sidebar/top-left on GitHub where this appears.\n\nFixes https://github.com/google/auto/issues/960\n\nRELNOTES=n/a\nPiperOrigin-RevId: 352056194",
          "commitUrl": "https://github.com/google/auto/commit/75c5d95807a1ce40530bc03d7a855f116ec22694",
          "parents": {
            "nodes": [
              {
                "oid": "7b9f962d9265f2a73b119f68a48bd359e180aa32",
                "message": "Bump plexus-java from 1.0.5 to 1.0.6 in /common\n\nBumps [plexus-java](https://github.com/codehaus-plexus/plexus-languages) from 1.0.5 to 1.0.6.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/codehaus-plexus/plexus-languages/commit/29371988cece5c37e2f6e661d249ca4a897e5988\"><code>2937198</code></a> [maven-release-plugin] prepare release plexus-languages-1.0.6</li>\n<li><a href=\"https://github.com/codehaus-plexus/plexus-languages/commit/e24c11531a55e7e234b3b7e5208c0b9c01216321\"><code>e24c115</code></a> manage maven-javadoc-plugin version in root pom</li>\n<li><a href=\"https://github.com/codehaus-plexus/plexus-languages/commit/695c2ca846dec90957d3b8c1b4881d60dfed32fa\"><code>695c2ca</code></a> Update maven-shared-resources for maven-checkstyle-plugin</li>\n<li><a href=\"https://github.com/codehaus-plexus/plexus-languages/commit/6473afcd32bdab490a6f53367c9b0eb54c07bfbd\"><code>6473afc</code></a> Bump guice from 4.1.0 to 4.2.3</li>\n<li><a href=\"https://github.com/codehaus-plexus/plexus-languages/commit/50a010b55f9c0e89a6e20c3a5b9e186c58d4e4de\"><code>50a010b</code></a> Bump actions/cache from v2.1.2 to v2.1.3</li>\n<li><a href=\"https://github.com/codehaus-plexus/plexus-languages/commit/4c4cb8acd760c502dc4b74bc93ae3328f1e8ad02\"><code>4c4cb8a</code></a> Bump release-drafter/release-drafter from v5.11.0 to v5.13.0</li>\n<li><a href=\"https://github.com/codehaus-plexus/plexus-languages/commit/93714422ea7ca907b1012930150ea3da3cd604d1\"><code>9371442</code></a> Bump maven-enforcer-plugin from 3.0.0-M1 to 3.0.0-M3</li>\n<li><a href=\"https://github.com/codehaus-plexus/plexus-languages/commit/bf4bb5488dabb99411055abd5e023cba52ff774d\"><code>bf4bb54</code></a> Bump plexus from 6.5 to 7</li>\n<li><a href=\"https://github.com/codehaus-plexus/plexus-languages/commit/1802e9fba5b48d96b6c17cdd13e76400edb56acb\"><code>1802e9f</code></a> Bump sisu-maven-plugin from 0.3.3 to 0.3.4</li>\n<li><a href=\"https://github.com/codehaus-plexus/plexus-languages/commit/eaba96a1cbdf4ca2d9d3c79e017d993b9fa8d5a3\"><code>eaba96a</code></a> Bump maven-failsafe-plugin from 2.21.0 to 2.22.2</li>\n<li>Additional commits viewable in <a href=\"https://github.com/codehaus-plexus/plexus-languages/compare/plexus-languages-1.0.5...plexus-languages-1.0.6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.codehaus.plexus:plexus-java&package-manager=maven&previous-version=1.0.5&new-version=1.0.6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n</details>\n\nFixes #953\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/google/auto/pull/953 from google:dependabot/maven/common/org.codehaus.plexus-plexus-java-1.0.6 1001b1089868ebc47f8013a67ba66fdf321bd4da\nPiperOrigin-RevId: 352054954"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/index.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTU1OTE1NzY1Ojc1YzVkOTU4MDdhMWNlNDA1MzBiYzAzZDdhODU1ZjExNmVjMjI2OTQ=",
                "url": "https://github.com/google/auto/pull/963/commits/75c5d95807a1ce40530bc03d7a855f116ec22694"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 960,
                "url": "https://github.com/google/auto/issues/960",
                "title": "There is no sidebar",
                "bodyHTML": "<p dir=\"auto\">\"More information</p>\n<p dir=\"auto\">See the links in the sidebar at the top left.\"</p>\n<p dir=\"auto\">No such sidebar exists on that page.</p>",
                "resourcePath": "/google/auto/issues/960",
                "createdAt": "2021-01-15T13:20:16Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "type=documentation"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow pass Comparator parameter to sorted collection builder",
        "url": "https://github.com/google/auto/pull/983",
        "resourcePath": "/google/auto/pull/983",
        "createdAt": "2021-02-07T17:01:07Z",
        "number": 983,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/BuilderMethodClassifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/PropertyBuilderClassifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/autovalue.vm"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/builders-howto.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/builders.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTY5MDA3Mzg3OjFhZjNlY2Y2NjJmN2E3M2ZjOWFhODMzMDk0MjBhNDJlM2Y0NGNiNmQ=",
                "url": "https://github.com/google/auto/pull/983/commits/1af3ecf662f7a73fc9aa83309420a42e3f44cb6d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 984,
                "url": "https://github.com/google/auto/issues/984",
                "title": "AutoValue: Allow passing a Comparator to a sorted collection builder",
                "bodyHTML": "<p dir=\"auto\">I have created a <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"802999826\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/auto/issues/983\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/google/auto/pull/983/hovercard\" href=\"https://github.com/google/auto/pull/983\">#983</a> proposal PR to allow specifying a comparator for sorted collection builders (ie. <code class=\"notranslate\">ImmutableSortedSet.Builder</code> or <code class=\"notranslate\">ImmutableSortedMap.Builder</code>) in a builder method.</p>\n<p dir=\"auto\">Currently, <em>naturalOrder</em> comparator is being used by default in a generated builder method.</p>",
                "resourcePath": "/google/auto/issues/984",
                "createdAt": "2021-02-07T17:31:31Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=addition"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow an AutoValue property builder to have a parameter.",
        "url": "https://github.com/google/auto/pull/990",
        "resourcePath": "/google/auto/pull/990",
        "createdAt": "2021-02-20T15:45:35Z",
        "number": 990,
        "mergeCommit": {
          "oid": "f19117aa41a09c4ba8b7b720604832daec552b85",
          "message": "Allow an AutoValue property builder to have a parameter.\n\nPreviously, a property builder for `abstract ImmutableSet<String> foos()` had to look like `abstract ImmutableSet.Builder<String> foosBuilder()`. For `ImmutableSortedSet`, this meant that you could only construct a builder using `ImmutableSortedSet.naturalOrder()`. Now, if you have `abstract ImmutableSortedSet<String> foos()` you can optionally write `abstract ImmutableSortedSet.Builder<String> foosBuilder(Comparator<String> comparator)`. This works because `ImmutableSortedSet.Builder<T>` has a constructor `ImmutableSortedSet.Builder(Comparator<T>)`.\n\nThis change is closely based on https://github.com/google/auto/pull/983 by Pawe\u0142 \u0141abaj. I adjusted the formatting slightly, renamed a couple of methods, and reworded the new text in the user guide. The only substantive change is that I removed the special knowledge of the static `orderedBy` method (from `ImmutableSortedSet` and `ImmutableSortedMap`) since the builder constructor works just as well in those cases.\n\nCloses https://github.com/google/auto/pull/983.\nFixes https://github.com/google/auto/issues/984.\n\nRELNOTES=AutoValue property builders can now have a single parameter which is passed to the constructor of the new builder.\nPiperOrigin-RevId: 358583454",
          "commitUrl": "https://github.com/google/auto/commit/f19117aa41a09c4ba8b7b720604832daec552b85",
          "parents": {
            "nodes": [
              {
                "oid": "7647c20d4e98678dc1511273bdb76edc48b04e54",
                "message": "Add `toString()` implementations for `MoreTypes.equivalence()` and `AnnotationMirrors.equivalence()`\n\nThey often come up in debugging information\n\nRELNOTES=n/a\nPiperOrigin-RevId: 357734043"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/src/test/java/com/google/auto/value/AutoValueTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/BuilderMethodClassifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/PropertyBuilderClassifier.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/autovalue.vm"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/builders-howto.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTc2OTYyMTY3OmYxOTExN2FhNDFhMDljNGJhOGI3YjcyMDYwNDgzMmRhZWM1NTJiODU=",
                "url": "https://github.com/google/auto/pull/990/commits/f19117aa41a09c4ba8b7b720604832daec552b85"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 984,
                "url": "https://github.com/google/auto/issues/984",
                "title": "AutoValue: Allow passing a Comparator to a sorted collection builder",
                "bodyHTML": "<p dir=\"auto\">I have created a <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"802999826\" data-permission-text=\"Title is private\" data-url=\"https://github.com/google/auto/issues/983\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/google/auto/pull/983/hovercard\" href=\"https://github.com/google/auto/pull/983\">#983</a> proposal PR to allow specifying a comparator for sorted collection builders (ie. <code class=\"notranslate\">ImmutableSortedSet.Builder</code> or <code class=\"notranslate\">ImmutableSortedMap.Builder</code>) in a builder method.</p>\n<p dir=\"auto\">Currently, <em>naturalOrder</em> comparator is being used by default in a generated builder method.</p>",
                "resourcePath": "/google/auto/issues/984",
                "createdAt": "2021-02-07T17:31:31Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=addition"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Document how to create a \"step builder\" with AutoValue.",
        "url": "https://github.com/google/auto/pull/1003",
        "resourcePath": "/google/auto/pull/1003",
        "createdAt": "2021-03-08T22:18:05Z",
        "number": 1003,
        "mergeCommit": {
          "oid": "984e89300b2483018e392399c74bf7ef1844f289",
          "message": "Document how to create a \"step builder\" with AutoValue.\n\nFixes https://github.com/google/auto/issues/1000.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 361656440",
          "commitUrl": "https://github.com/google/auto/commit/984e89300b2483018e392399c74bf7ef1844f289",
          "parents": {
            "nodes": [
              {
                "oid": "2f1cef90ca1e1017bb221054e2b55d0a24fa6846",
                "message": "Add spacing after the simple name when generating a `@ToPrettyString` representation.\n\nAlso fix a property name that was renamed.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 361578257"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/builders-howto.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTg3MTQ5MzU3Ojk4NGU4OTMwMGIyNDgzMDE4ZTM5MjM5OWM3NGJmN2VmMTg0NGYyODk=",
                "url": "https://github.com/google/auto/pull/1003/commits/984e89300b2483018e392399c74bf7ef1844f289"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1000,
                "url": "https://github.com/google/auto/issues/1000",
                "title": "Step builder?",
                "bodyHTML": "<p dir=\"auto\">Just curious why the step builder is not used in order to ensure all fields are set at compile time rather than runtime.</p>\n<p dir=\"auto\">Reference:<br>\n<a href=\"https://medium.com/@castigliego/step-builder-pattern-3bcac4eaf9e8\" rel=\"nofollow\">https://medium.com/@castigliego/step-builder-pattern-3bcac4eaf9e8</a></p>",
                "resourcePath": "/google/auto/issues/1000",
                "createdAt": "2021-03-08T11:04:48Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Suggest `compileOnlyApi` rather than `compile` for AutoValue with Gradle.",
        "url": "https://github.com/google/auto/pull/1005",
        "resourcePath": "/google/auto/pull/1005",
        "createdAt": "2021-03-15T18:52:53Z",
        "number": 1005,
        "mergeCommit": {
          "oid": "6fc80748f8f9165670182320375641a587ce2f4d",
          "message": "Suggest `compileOnlyApi` rather than `compile` for AutoValue with Gradle.\n\nSince `compileOnlyApi` is a recent feature, continue to mention the old way in a note.\n\nFixes https://github.com/google/auto/issues/995.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 362995141",
          "commitUrl": "https://github.com/google/auto/commit/6fc80748f8f9165670182320375641a587ce2f4d",
          "parents": {
            "nodes": [
              {
                "oid": "cdbae3556b2ddb910f923b5d83c4c188a9addf2f",
                "message": "Ensure compilation tests will run on JDK 16+.\n\nAs noted [here](https://github.com/google/compile-testing/issues/222), the change of the default `--illegal-access` from `permit` to `deny` will cause compile-testing tests to fail by default, with messages like this:\n\n```\nclass com.google.testing.compile.Parser (in unnamed module @0x4114d843) cannot\naccess class com.sun.tools.javac.api.JavacTool (in module jdk.compiler) because\nmodule jdk.compiler does not export com.sun.tools.javac.api to unnamed module\n@0x4114d843\n```\n\nWe can work around that by supplying the necessary `--add-opens` flag to the JVM that runs the tests.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 362531170"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/index.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NTkzMzE0OTAzOjZmYzgwNzQ4ZjhmOTE2NTY3MDE4MjMyMDM3NTY0MWE1ODdjZTJmNGQ=",
                "url": "https://github.com/google/auto/pull/1005/commits/6fc80748f8f9165670182320375641a587ce2f4d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 995,
                "url": "https://github.com/google/auto/issues/995",
                "title": "Recommend compileOnlyApi for gradle scope of autovalue annotations",
                "bodyHTML": "<p dir=\"auto\">in value/userguide/index.md</p>",
                "resourcePath": "/google/auto/issues/995",
                "createdAt": "2021-02-26T16:40:02Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "When building AutoValue, pick up AutoService via `<annotationProcessorPaths>`.",
        "url": "https://github.com/google/auto/pull/1046",
        "resourcePath": "/google/auto/pull/1046",
        "createdAt": "2021-04-06T14:59:12Z",
        "number": 1046,
        "mergeCommit": {
          "oid": "a2f647f9d44174f502fb2f8a89a6c3a887ef14fe",
          "message": "When building AutoValue, pick up AutoService via `<annotationProcessorPaths>`.\n\nThe annotation dependencies for `@AutoService` and for Error Prone are now regular compile-scoped dependencies. This prevents errors from overeager consumers that can't deal with missing annotation class files.\n\nThe `<annotationProcessorPaths>` incantations are kind of clunky since we need a different path for building tests (which must include AutoValueProcessor) and for building AutoValue itself (which obviously can't).\n\nFixes https://github.com/google/auto/issues/1032.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 367010584",
          "commitUrl": "https://github.com/google/auto/commit/a2f647f9d44174f502fb2f8a89a6c3a887ef14fe",
          "parents": {
            "nodes": [
              {
                "oid": "2b5d8b8ee69ffff6fbf89e2dad725fad60eb41ab",
                "message": "Move knowledge of getter methods from `BuilderMethodClassifier` to a new subclass.\n\nThis prepares the sharing of `BuilderMethodClassifier` between AutoValue and AutoBuilder. The logic for handling builders is substantially the same between the two. The main difference is that AutoValue properties come from abstract getter methods in the `@AutoValue` class, while AutoBuilder properties come from the parameters of the constructor or method that will be called. Before this change we had `ExecutableElement` instances that were the getter methods. Now we have `Element` instances that are refined as `ExecutableElement` in the new subclass `BuilderMethodClassifierForAutoValue`. In a later step we will introduce `BuilderMethodClassifierForAutoBuilder` where each `Element` will each be a `VariableElement` representing the property parameter.\n\nEarlier versions of this change ran into confusion between \"original\" and \"rewritten\" property types, so `BuilderMethodClassifier` now makes that distinction more explicit.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 366888706"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/processor/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjA5OTI0NzUyOmEyZjY0N2Y5ZDQ0MTc0ZjUwMmZiMmY4YTg5YTZjM2E4ODdlZjE0ZmU=",
                "url": "https://github.com/google/auto/pull/1046/commits/a2f647f9d44174f502fb2f8a89a6c3a887ef14fe"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1032,
                "url": "https://github.com/google/auto/issues/1032",
                "title": "NoClassDefFoundError in IntelliJ because AutoService has class retention",
                "bodyHTML": "<p dir=\"auto\">Maven projects using AutoValue have to explicitly depend on AutoService as well in order to avoid errors when using IDEs like IntelliJ.</p>\n<p dir=\"auto\">For example see <a href=\"https://github.com/googleapis/java-shared-config/blob/393ba5669675afb44740fdc45c8110feccf0b3b6/pom.xml#L773-L786\">https://github.com/googleapis/java-shared-config/blob/393ba5669675afb44740fdc45c8110feccf0b3b6/pom.xml#L773-L786</a>.</p>\n<p dir=\"auto\">Can we change AutoService's retention back to source? Alternatively, can we change AutoValue's dependency on AutoService to have the normal <code class=\"notranslate\">compile</code> scope instead of <code class=\"notranslate\">provided</code>?</p>",
                "resourcePath": "/google/auto/issues/1032",
                "createdAt": "2021-03-25T15:30:39Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "When building AutoFactory, pick up AutoService via `<annotationProcessorPaths>`.",
        "url": "https://github.com/google/auto/pull/1052",
        "resourcePath": "/google/auto/pull/1052",
        "createdAt": "2021-04-07T15:05:23Z",
        "number": 1052,
        "mergeCommit": {
          "oid": "0fb28d0b8320b1f286214f792bb00b7584b6a5f2",
          "message": "When building AutoFactory, pick up AutoService via `<annotationProcessorPaths>`.\n\nThe annotation dependency for `@AutoService` is now a regular compile-scoped dependency. This prevents errors from overeager consumers that can't deal with missing annotation class files.\n\nThis change is equivalent to the one we made for AutoValue in https://github.com/google/auto/pull/1046.\n\nFixes https://github.com/google/auto/issues/744.\n\nRELNOTES=AutoService dependency is now a regular compile-scoped dependency.\nPiperOrigin-RevId: 367221859",
          "commitUrl": "https://github.com/google/auto/commit/0fb28d0b8320b1f286214f792bb00b7584b6a5f2",
          "parents": {
            "nodes": [
              {
                "oid": "61eda8c587b5ecb895258830efe82129ae18202d",
                "message": "Update dependency on AutoValue from 1.7.5 to 1.8.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 367096748"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjEwNzQ3NTM1OjBmYjI4ZDBiODMyMGIxZjI4NjIxNGY3OTJiYjAwYjc1ODRiNmE1ZjI=",
                "url": "https://github.com/google/auto/pull/1052/commits/0fb28d0b8320b1f286214f792bb00b7584b6a5f2"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 744,
                "url": "https://github.com/google/auto/issues/744",
                "title": "AutoFactory adds unwanted AutoValue annotation processors to classpath",
                "bodyHTML": "<p dir=\"auto\">AutoFactory 1.0-beta6 has a compile-scoped dependency on AutoValue 1.5.3:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/auto/blob/2a52c553c69d353f65fdabc2f28cd46c2a31ccdf/factory/pom.xml#L74-L78\">auto/factory/pom.xml</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 74 to 78\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/auto/commit/2a52c553c69d353f65fdabc2f28cd46c2a31ccdf\">2a52c55</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L74\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"74\"></td>\n          <td id=\"LC74\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> &lt;<span class=\"pl-ent\">dependency</span>&gt; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L75\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"75\"></td>\n          <td id=\"LC75\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   &lt;<span class=\"pl-ent\">groupId</span>&gt;com.google.auto.value&lt;/<span class=\"pl-ent\">groupId</span>&gt; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L76\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"76\"></td>\n          <td id=\"LC76\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   &lt;<span class=\"pl-ent\">artifactId</span>&gt;auto-value&lt;/<span class=\"pl-ent\">artifactId</span>&gt; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L77\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"77\"></td>\n          <td id=\"LC77\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   &lt;<span class=\"pl-ent\">version</span>&gt;1.5.3&lt;/<span class=\"pl-ent\">version</span>&gt; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L78\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"78\"></td>\n          <td id=\"LC78\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> &lt;/<span class=\"pl-ent\">dependency</span>&gt; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<br>\nwhich adds the following annotation processors to classpath:<p></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"com.google.auto.value.extension.memoized.MemoizedValidator\ncom.google.auto.value.processor.AutoAnnotationProcessor\ncom.google.auto.value.processor.AutoValueBuilderProcessor\ncom.google.auto.value.processor.AutoValueProcessor\"><pre class=\"notranslate\"><code class=\"notranslate\">com.google.auto.value.extension.memoized.MemoizedValidator\ncom.google.auto.value.processor.AutoAnnotationProcessor\ncom.google.auto.value.processor.AutoValueBuilderProcessor\ncom.google.auto.value.processor.AutoValueProcessor\n</code></pre></div>\n<p dir=\"auto\">This is problematic for two reasons:</p>\n<ol dir=\"auto\">\n<li>AutoValue 1.5.3 doesn't support incap thus incap has to be disabled for the whole Gradle module.</li>\n<li>Consumers of AutoFactory don't expect any additional APs besides AutoFactory itself.</li>\n</ol>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ronshapiro/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ronshapiro\">@ronshapiro</a></p>",
                "resourcePath": "/google/auto/issues/744",
                "createdAt": "2019-07-30T21:07:32Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: factory"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix Gradle incremental compilation. Fixes https://github.com/google/auto/issues/1071.",
        "url": "https://github.com/google/auto/pull/1072",
        "resourcePath": "/google/auto/pull/1072",
        "createdAt": "2021-04-16T00:33:01Z",
        "number": 1072,
        "mergeCommit": {
          "oid": "ad8add1a686491a6222a88731ceaa65978c12b07",
          "message": "Fix Gradle incremental compilation. Fixes https://github.com/google/auto/issues/1071.\n\nRELNOTES=Gradle incremental compilation was accidentally broken in 1.8 and is now fixed.\nPiperOrigin-RevId: 368752469",
          "commitUrl": "https://github.com/google/auto/commit/ad8add1a686491a6222a88731ceaa65978c12b07",
          "parents": {
            "nodes": [
              {
                "oid": "4bdd64b4b4bb350300f42b0d09386ed4ba34366c",
                "message": "Update the AutoBuilder documentation about stability\n\nRELNOTES=n/a\nPiperOrigin-RevId: 368677272"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/processor/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjE2NDUxNzUxOmFkOGFkZDFhNjg2NDkxYTYyMjJhODg3MzFjZWFhNjU5NzhjMTJiMDc=",
                "url": "https://github.com/google/auto/pull/1072/commits/ad8add1a686491a6222a88731ceaa65978c12b07"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1071,
                "url": "https://github.com/google/auto/issues/1071",
                "title": "AutoValue 1.8 breaks gradle incremental compilation",
                "bodyHTML": "<p dir=\"auto\">Hello.<br>\nSince updating from AutoValue 1.7.5 to 1.8, using Gradle 6.8.3, it seems incremental compilation is broken.<br>\nI get the following log in info level after a single test file update:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&gt; Task :xxx:compileTestJava\n...\nTask ':xxx:compileTestJava' is not up-to-date because:\n  Input property 'stableSources' file xxx/JavaScriptInvocableFactoryTest.java has changed.\n...\nFull recompilation is required because com.google.auto.value.processor.AutoValueProcessor is not incremental. Analysis took 0.046 secs.\n...\"><pre class=\"notranslate\"><code class=\"notranslate\">&gt; Task :xxx:compileTestJava\n...\nTask ':xxx:compileTestJava' is not up-to-date because:\n  Input property 'stableSources' file xxx/JavaScriptInvocableFactoryTest.java has changed.\n...\nFull recompilation is required because com.google.auto.value.processor.AutoValueProcessor is not incremental. Analysis took 0.046 secs.\n...\n</code></pre></div>",
                "resourcePath": "/google/auto/issues/1071",
                "createdAt": "2021-04-15T23:11:09Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix Gradle incremental compilation for AutoValue and AutoFactory.",
        "url": "https://github.com/google/auto/pull/1073",
        "resourcePath": "/google/auto/pull/1073",
        "createdAt": "2021-04-16T15:05:49Z",
        "number": 1073,
        "mergeCommit": {
          "oid": "8f17e4c4b1065dde6ff699b1f172c8feca8acf62",
          "message": "Fix Gradle incremental compilation for AutoValue and AutoFactory.\n\nThe previous attempt to do so left out AutoFactory. It was also wrong because the new `annotationProcessorPath` entry was added to the path for compiling tests, not the processor itself.\n\nFixes https://github.com/google/auto/issues/1071 (again).\n\nRELNOTES=Fixed Gradle incremental compilation.\nPiperOrigin-RevId: 368851801",
          "commitUrl": "https://github.com/google/auto/commit/8f17e4c4b1065dde6ff699b1f172c8feca8acf62",
          "parents": {
            "nodes": [
              {
                "oid": "ad8add1a686491a6222a88731ceaa65978c12b07",
                "message": "Fix Gradle incremental compilation. Fixes https://github.com/google/auto/issues/1071.\n\nRELNOTES=Gradle incremental compilation was accidentally broken in 1.8 and is now fixed.\nPiperOrigin-RevId: 368752469"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/processor/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjE2OTAzMDI0OjhmMTdlNGM0YjEwNjVkZGU2ZmY2OTliMWYxNzJjOGZlY2E4YWNmNjI=",
                "url": "https://github.com/google/auto/pull/1073/commits/8f17e4c4b1065dde6ff699b1f172c8feca8acf62"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1071,
                "url": "https://github.com/google/auto/issues/1071",
                "title": "AutoValue 1.8 breaks gradle incremental compilation",
                "bodyHTML": "<p dir=\"auto\">Hello.<br>\nSince updating from AutoValue 1.7.5 to 1.8, using Gradle 6.8.3, it seems incremental compilation is broken.<br>\nI get the following log in info level after a single test file update:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&gt; Task :xxx:compileTestJava\n...\nTask ':xxx:compileTestJava' is not up-to-date because:\n  Input property 'stableSources' file xxx/JavaScriptInvocableFactoryTest.java has changed.\n...\nFull recompilation is required because com.google.auto.value.processor.AutoValueProcessor is not incremental. Analysis took 0.046 secs.\n...\"><pre class=\"notranslate\"><code class=\"notranslate\">&gt; Task :xxx:compileTestJava\n...\nTask ':xxx:compileTestJava' is not up-to-date because:\n  Input property 'stableSources' file xxx/JavaScriptInvocableFactoryTest.java has changed.\n...\nFull recompilation is required because com.google.auto.value.processor.AutoValueProcessor is not incremental. Analysis took 0.046 secs.\n...\n</code></pre></div>",
                "resourcePath": "/google/auto/issues/1071",
                "createdAt": "2021-04-15T23:11:09Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Continue rather than returning in the AutoService loop.",
        "url": "https://github.com/google/auto/pull/1097",
        "resourcePath": "/google/auto/pull/1097",
        "createdAt": "2021-05-24T22:22:54Z",
        "number": 1097,
        "mergeCommit": {
          "oid": "d4c865be14f28db279006e9f0241f067cb785d23",
          "message": "Continue rather than returning in the AutoService loop.\n\nThe old code would return as soon as it found a `META-INF/services` file that contributed nothing to the list of services to be generated. It should have continued instead, to go on to the next provider interface.\n\nFixes https://github.com/google/auto/issues/839. Thanks to @bbyk for the bug report.\n\nRELNOTES=Fixed a bug in AutoServiceProcessor that could lead to some services not being processed.\nPiperOrigin-RevId: 375717338",
          "commitUrl": "https://github.com/google/auto/commit/d4c865be14f28db279006e9f0241f067cb785d23",
          "parents": {
            "nodes": [
              {
                "oid": "668881918f428e051124ed904bd02b17e2a4a42b",
                "message": "Clarify that `Optional` values can be set from `@Nullable` parameters.\n\nThis was not all that clear from the documentation. If you have `Optional<String> getFoo()` property then you can set it with `setFoo(String)` _or_ `setFoo(@Nullable String)`. In the first case, you'll get an exception if the parameter is null, but in the second it will work, and `foo` will be `Optional.empty()`.\n\nAlso add a test that checks that you do indeed get an exception without `@Nullable`.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 375607596"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "service/processor/src/main/java/com/google/auto/service/processor/AutoServiceProcessor.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjUxNjc0Nzk4OmQ0Yzg2NWJlMTRmMjhkYjI3OTAwNmU5ZjAyNDFmMDY3Y2I3ODVkMjM=",
                "url": "https://github.com/google/auto/pull/1097/commits/d4c865be14f28db279006e9f0241f067cb785d23"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 839,
                "url": "https://github.com/google/auto/issues/839",
                "title": "Ensure to process all providers in when generating config files",
                "bodyHTML": "<p dir=\"auto\">In <code class=\"notranslate\">AutoServiceProcessor#generateConfigFiles</code> the loop over providers can<br>\nbe left prematurely if for a provider type there is no new services. The<br>\nremaining provider types can still have new services though.</p>\n<p dir=\"auto\">This is what I mean: <a href=\"https://github.com/google/auto/pull/837/files#diff-dcad1ce0295bb666afc2cbaa9744949aL193\">https://github.com/google/auto/pull/837/files#diff-dcad1ce0295bb666afc2cbaa9744949aL193</a></p>",
                "resourcePath": "/google/auto/issues/839",
                "createdAt": "2020-04-22T19:04:31Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: service"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Implicitly exclude Kotlin `@Metadata` annotations from `@CopyAnnotations`",
        "url": "https://github.com/google/auto/pull/1099",
        "resourcePath": "/google/auto/pull/1099",
        "createdAt": "2021-05-25T02:02:02Z",
        "number": 1099,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/AutoValueishProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/ClassNames.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/test/java/com/google/auto/value/processor/AutoValueCompilationTest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "MDE3OlB1bGxSZXF1ZXN0Q29tbWl0NjUxNzc0NDg1OmViMDMyOGU5YWM3NzcyYjVmODExZWE3ZDUwOTQ3ODZjY2M2ZDY3OGU=",
                "url": "https://github.com/google/auto/pull/1099/commits/eb0328e9ac7772b5f811ea7d5094786ccc6d678e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1087,
                "url": "https://github.com/google/auto/issues/1087",
                "title": "Feature request: implicitly exclude Kotlin `@Metadata` annotations from being copied",
                "bodyHTML": "<p dir=\"auto\">Context: kotlinc generates classes annotated with <code class=\"notranslate\">@kotlin.Metadata</code> annotations on them. These annotations contain binary data about the kotlin language features, which kotlin then uses to understand those features in compiled binaries (jars, class files, etc).</p>\n<p dir=\"auto\">These <code class=\"notranslate\">@Metadata</code> annotations are not intended to be present on classes other than the one generated by kotlinc, let alone on Java classes. Doing so can confuse or break kotlin tooling and reflection that inspects these annotations.</p>\n<p dir=\"auto\">AutoValue will automatically copy these annotations though unless opted out via <code class=\"notranslate\">@CopyAnnotations(excludes = [Metadata::class])</code>. I'd like to feature request <em>always</em> excluding copying these, as it is always an error to copy them. Happy to send a PR if you're open to it!</p>",
                "resourcePath": "/google/auto/issues/1087",
                "createdAt": "2021-05-06T20:02:17Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Ensure the order of copied annotations is deterministic.",
        "url": "https://github.com/google/auto/pull/1177",
        "resourcePath": "/google/auto/pull/1177",
        "createdAt": "2021-10-05T22:30:29Z",
        "number": 1177,
        "mergeCommit": {
          "oid": "8ad800edde0e8c743666a5d814e86ecd6c6f39c6",
          "message": "Ensure the order of copied annotations is deterministic.\n\nFixes https://github.com/google/auto/issues/1176.\n\nRELNOTES=The order of annotations copied into generated code is now deterministic.\nPiperOrigin-RevId: 401086698",
          "commitUrl": "https://github.com/google/auto/commit/8ad800edde0e8c743666a5d814e86ecd6c6f39c6",
          "parents": {
            "nodes": [
              {
                "oid": "206b67396601d99fe87580e7b76d65d3035cc8e3",
                "message": "Include type parameters of parent types in generated factory classes.\n\nSuppose you have the following types:\n```\ninterface Foo<M extends Bar> {...}\n\ninterface FooFactory<M extends Bar> {\n  Foo<M> create();\n}\n\n@AutoFactory(implementing = FooFactory.class)\nclass FooImpl<M extends Bar> implements Foo<M> {...}\n```\n\nThen the generated `FooImplFactory` class should look like this:\n\n```\nclass FooImplFactory<M extends Bar> implements FooFactory<M> {...}\n```\n\nBut before this change that was only the case if there was a `@Provided M` constructor parameter. Now we examine whether the requested supertypes of the generated class have type parameters, and if so we copy those onto the generated class.\n\nThis may not be 100% accurate but it should work for at least the commonest cases.\n\nRELNOTES=When a requested supertype of the generated factory class has a type parameter, the generated class now always has the same parameter.\nPiperOrigin-RevId: 400259157"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1176,
                "url": "https://github.com/google/auto/issues/1176",
                "title": "Non-deterministic ordering for annotations in generated AutoValue_ classes",
                "bodyHTML": "<p dir=\"auto\">A sporadic issue we're encountering in our project is that generated <code class=\"notranslate\">AutoValue_</code> classes appear to have non-deterministic annotations ordering. This results in recompilations in Gradle builds.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/1361086/135697734-a915c82b-3b41-4e3e-b071-3e998eb99502.png\"><img src=\"https://user-images.githubusercontent.com/1361086/135697734-a915c82b-3b41-4e3e-b071-3e998eb99502.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Here's an example based on the screenshot above, from our codebase. This uses autovalue + the <a href=\"https://github.com/rharter/auto-value-moshi\">auto-value-moshi </a>extension. It doesn't seem annotation-specific, both <code class=\"notranslate\">@Nullable</code> and <code class=\"notranslate\">@Json</code> appear in different orders at times</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public interface SearchFilters {\n\n  @Nullable\n  @Json(name = &quot;from&quot;)\n  List&lt;String&gt; getFromFilters();\n\n  @Nullable\n  @Json(name = &quot;after&quot;)\n  String getAfterFilter();\n\n  @Nullable\n  @Json(name = &quot;before&quot;)\n  String getBeforeFilter();\n\n  @Nullable\n  @Json(name = &quot;rxn&quot;)\n  List&lt;String&gt; getReactionsFilters();\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-smi\">SearchFilters</span> {\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Nullable</span>\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Json</span>(<span class=\"pl-s1\">name</span> = <span class=\"pl-s\">\"from\"</span>)\n  <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-en\">getFromFilters</span>();\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Nullable</span>\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Json</span>(<span class=\"pl-s1\">name</span> = <span class=\"pl-s\">\"after\"</span>)\n  <span class=\"pl-smi\">String</span> <span class=\"pl-en\">getAfterFilter</span>();\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Nullable</span>\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Json</span>(<span class=\"pl-s1\">name</span> = <span class=\"pl-s\">\"before\"</span>)\n  <span class=\"pl-smi\">String</span> <span class=\"pl-en\">getBeforeFilter</span>();\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Nullable</span>\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Json</span>(<span class=\"pl-s1\">name</span> = <span class=\"pl-s\">\"rxn\"</span>)\n  <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-en\">getReactionsFilters</span>();\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@JsonClass(generateAdapter = true, generator = &quot;avm&quot;)\n@AutoValue\nabstract class SearchFiltersAV implements SearchFilters {}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">JsonClass</span>(<span class=\"pl-s1\">generateAdapter</span> = <span class=\"pl-c1\">true</span>, <span class=\"pl-s1\">generator</span> = <span class=\"pl-s\">\"avm\"</span>)\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">AutoValue</span>\n<span class=\"pl-k\">abstract</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">SearchFiltersAV</span> <span class=\"pl-k\">implements</span> <span class=\"pl-smi\">SearchFilters</span> {}</pre></div>\n<p dir=\"auto\">It seems like the appropriate solution would be to sort annotations in generation, since order doesn't matter for functionality but does confuse systems using file watching for incremental compilation.</p>",
                "resourcePath": "/google/auto/issues/1176",
                "createdAt": "2021-10-02T00:26:51Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Handle missing classes better in AutoService.",
        "url": "https://github.com/google/auto/pull/1191",
        "resourcePath": "/google/auto/pull/1191",
        "createdAt": "2021-11-02T19:30:21Z",
        "number": 1191,
        "mergeCommit": {
          "oid": "d8083fded3f919a77be8ee3f68d23ce43e7d99a2",
          "message": "Handle missing classes better in AutoService.\n\nFixes https://github.com/google/auto/issues/1189.\nCloses https://github.com/google/auto/pull/1190/files.\nMany thanks to @astubbs for the bug report and repro, which was the basis for the new test here.\n\nIf an `@AutoService` annotation references a missing class, the `value` on [this line](https://github.com/google/auto/blob/15c76191f79a2a26a9f914541a5c9ac4965dd0c7/service/processor/src/main/java/com/google/auto/service/processor/AutoServiceProcessor.java#L306)...\n```java\n                    .flatMap(value -> value.accept(this, null).stream())\n```\nis the string `\"<error>\"`, due to quirky javac behaviour. Currently, the visitor expects an array of class literals, or, in its recursive call, a single class literal, but not a string. Since the visitor has no override for [`visitString`](https://docs.oracle.com/en/java/javase/11/docs/api/java.compiler/javax/lang/model/element/AnnotationValueVisitor.html#visitString(java.lang.String,P)), a null default value is returned. We can simply provide an empty `ImmutableSet` as the default value to fix the problem. There is no need to handle this error case specially, since the compiler will be outputting its own errors about the missing class anyway.\n\nRELNOTES=AutoService no longer throws an exception for a missing service class.\nPiperOrigin-RevId: 407325586",
          "commitUrl": "https://github.com/google/auto/commit/d8083fded3f919a77be8ee3f68d23ce43e7d99a2",
          "parents": {
            "nodes": [
              {
                "oid": "ce31cc18c042bf64995f92d6ca917a94b1e419fb",
                "message": "Bump actions/checkout from 2.3.5 to 2.4.0\n\nBumps [actions/checkout](https://github.com/actions/checkout) from 2.3.5 to 2.4.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/releases\">actions/checkout's releases</a>.</em></p>\n<blockquote>\n<h2>v2.4.0</h2>\n<ul>\n<li>Convert SSH URLs like <code>org-&lt;ORG_ID&gt;@github.com:</code> to <code>https://github.com/</code> - <a href=\"https://github-redirect.dependabot.com/actions/checkout/pull/621\">pr</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/checkout/commit/ec3a7ce113134d7a93b817d10a8272cb61118579\"><code>ec3a7ce</code></a> set insteadOf url for org-id (<a href=\"https://github-redirect.dependabot.com/actions/checkout/issues/621\">#621</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/fd47087372161c6f2a7b96d2ef87e944d89023ed\"><code>fd47087</code></a> codeql should analyze lib not dist (<a href=\"https://github-redirect.dependabot.com/actions/checkout/issues/620\">#620</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/3d677ac575eac4b370e52131024fa99ee754def1\"><code>3d677ac</code></a> script to generate license info (<a href=\"https://github-redirect.dependabot.com/actions/checkout/issues/614\">#614</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/826ba42d6c06e4d78b1b33478af7b54277e60b52\"><code>826ba42</code></a> npm audit fix (<a href=\"https://github-redirect.dependabot.com/actions/checkout/issues/612\">#612</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/eb8a193c1dbf4bbb2053320cef52bacc1a485839\"><code>eb8a193</code></a> update dev dependencies and react to new linting rules (<a href=\"https://github-redirect.dependabot.com/actions/checkout/issues/611\">#611</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/c49af7ca1f339b07a5baac8c8bfc49a5248f31d3\"><code>c49af7c</code></a> Create codeql-analysis.yml (<a href=\"https://github-redirect.dependabot.com/actions/checkout/issues/602\">#602</a>)</li>\n<li>See full diff in <a href=\"https://github.com/actions/checkout/compare/v2.3.5...v2.4.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=2.3.5&new-version=2.4.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n</details>\n\nFixes #1193\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/google/auto/pull/1193 from google:dependabot/github_actions/actions/checkout-2.4.0 37d55469c74a36487bc8c20bdd74c7341ddb298e\nPiperOrigin-RevId: 407181305"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "service/processor/src/main/java/com/google/auto/service/processor/AutoServiceProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "service/processor/src/test/java/com/google/auto/service/processor/AutoServiceProcessorTest.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "service/processor/src/test/resources/test/GenericServiceProviderWithMissingServiceClass.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAJwaYc4uAERt2gAoZDgwODNmZGVkM2Y5MTlhNzdiZThlZTNmNjhkMjNjZTQzZTdkOTlhMg",
                "url": "https://github.com/google/auto/pull/1191/commits/d8083fded3f919a77be8ee3f68d23ce43e7d99a2"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1189,
                "url": "https://github.com/google/auto/issues/1189",
                "title": "NPE on missing service class",
                "bodyHTML": "<p dir=\"auto\">I think this is happening to me after changing moving my implementations around</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java: FATAL ERROR: java.lang.NullPointerException: Cannot invoke \n&quot;com.google.common.collect.ImmutableSet.stream()&quot; \nbecause the return value of \n&quot;javax.lang.model.element.AnnotationValue.accept(javax.lang.model.element.AnnotationValueVisitor, Object)&quot;\n is null\n  \tat com.google.auto.service.processor.AutoServiceProcessor$1.lambda$visitArray$0(AutoServiceProcessor.java:306)\n  \tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:273)\n  \tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n  \tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\n  \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)\n  \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\n  \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)\n  \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n  \tat java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)\n  \tat com.google.auto.service.processor.AutoServiceProcessor$1.visitArray(AutoServiceProcessor.java:307)\n  \tat com.google.auto.service.processor.AutoServiceProcessor$1.visitArray(AutoServiceProcessor.java:294)\n  \tat jdk.compiler/com.sun.tools.javac.code.Attribute$Array.accept(Attribute.java:349)\n  \tat com.google.auto.service.processor.AutoServiceProcessor.getValueFieldOfClasses(AutoServiceProcessor.java:293)\n  \tat com.google.auto.service.processor.AutoServiceProcessor.processAnnotations(AutoServiceProcessor.java:137)\n  \tat com.google.auto.service.processor.AutoServiceProcessor.processImpl(AutoServiceProcessor.java:121)\n  \tat com.google.auto.service.processor.AutoServiceProcessor.process(AutoServiceProcessor.java:109)\n  \tat org.jetbrains.jps.javac.APIWrappers$ProcessorWrapper.process(APIWrappers.java:152)\n  \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)\n  \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n  \tat java.base/java.lang.reflect.Method.invoke(Method.java:567)\"><pre class=\"notranslate\"><code class=\"notranslate\">java: FATAL ERROR: java.lang.NullPointerException: Cannot invoke \n\"com.google.common.collect.ImmutableSet.stream()\" \nbecause the return value of \n\"javax.lang.model.element.AnnotationValue.accept(javax.lang.model.element.AnnotationValueVisitor, Object)\"\n is null\n  \tat com.google.auto.service.processor.AutoServiceProcessor$1.lambda$visitArray$0(AutoServiceProcessor.java:306)\n  \tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:273)\n  \tat java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)\n  \tat java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)\n  \tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)\n  \tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)\n  \tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)\n  \tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n  \tat java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)\n  \tat com.google.auto.service.processor.AutoServiceProcessor$1.visitArray(AutoServiceProcessor.java:307)\n  \tat com.google.auto.service.processor.AutoServiceProcessor$1.visitArray(AutoServiceProcessor.java:294)\n  \tat jdk.compiler/com.sun.tools.javac.code.Attribute$Array.accept(Attribute.java:349)\n  \tat com.google.auto.service.processor.AutoServiceProcessor.getValueFieldOfClasses(AutoServiceProcessor.java:293)\n  \tat com.google.auto.service.processor.AutoServiceProcessor.processAnnotations(AutoServiceProcessor.java:137)\n  \tat com.google.auto.service.processor.AutoServiceProcessor.processImpl(AutoServiceProcessor.java:121)\n  \tat com.google.auto.service.processor.AutoServiceProcessor.process(AutoServiceProcessor.java:109)\n  \tat org.jetbrains.jps.javac.APIWrappers$ProcessorWrapper.process(APIWrappers.java:152)\n  \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n  \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)\n  \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n  \tat java.base/java.lang.reflect.Method.invoke(Method.java:567)\n</code></pre></div>\n<p dir=\"auto\"><del>Haven't quite been able to narrow it down exactly yet though..</del> Reproduced <a href=\"https://github.com/google/auto/pull/1190\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/google/auto/pull/1190/hovercard\">in this PR</a> - see failing tests.</p>\n<p dir=\"auto\">version: 1.0</p>",
                "resourcePath": "/google/auto/issues/1189",
                "createdAt": "2021-11-01T11:16:20Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: service"
                      }
                    },
                    {
                      "node": {
                        "name": "Status: accepted"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Validate that `@AutoValue` (etc) classes have appropriate constructors.",
        "url": "https://github.com/google/auto/pull/1212",
        "resourcePath": "/google/auto/pull/1212",
        "createdAt": "2021-12-07T18:49:20Z",
        "number": 1212,
        "mergeCommit": {
          "oid": "a74508b7eac6254f8e00cf5d3634a10c690e058d",
          "message": "Validate that `@AutoValue` (etc) classes have appropriate constructors.\n\nThe class must have a non-private no-arg constructor so it can be subclassed in the generated code. Previously, if it didn't, we would generate code anyway and rely on the somewhat obscure compiler error message to signal the problem to the user. Now we check for the situation explicitly and produce a specific error message.\n\nFixes https://github.com/google/auto/issues/1209.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 414779231",
          "commitUrl": "https://github.com/google/auto/commit/a74508b7eac6254f8e00cf5d3634a10c690e058d",
          "parents": {
            "nodes": [
              {
                "oid": "1f8d7f26bf4b0613a8602085cae77f15693ab086",
                "message": "Make `@AutoBuilder` available unconditionally.\n\nRELNOTES=The `@AutoBuilder` annotation documented [here](https://github.com/google/auto/blob/master/value/userguide/autobuilder.md) is now fully stable and supported.\nPiperOrigin-RevId: 414523614"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1209,
                "url": "https://github.com/google/auto/issues/1209",
                "title": "AutoValue generates invalid code, constructor not validated",
                "bodyHTML": "<p dir=\"auto\">Consider the following class</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@AutoValue\nabstract class Foo {\n    Foo(String bar) {\n    }\n    abstract String hello();\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">AutoValue</span>\n<span class=\"pl-k\">abstract</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Foo</span> {\n    <span class=\"pl-smi\">Foo</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">bar</span>) {\n    }\n    <span class=\"pl-k\">abstract</span> <span class=\"pl-smi\">String</span> <span class=\"pl-en\">hello</span>();\n}</pre></div>\n<p dir=\"auto\">AutoValue should validate this class and fail with an error message. Instead it generates the following invalid constructor:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  AutoValue_Foo(\n      String hello) {\n    if (hello == null) {\n      throw new NullPointerException(&quot;Null hello&quot;);\n    }\n    this.hello = hello;\n  }\"><pre class=\"notranslate\">  <span class=\"pl-en\">AutoValue_Foo</span>(\n      <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">hello</span>) {\n    <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">hello</span> == <span class=\"pl-c1\">null</span>) {\n      <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">NullPointerException</span>(<span class=\"pl-s\">\"Null hello\"</span>);\n    }\n    <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">hello</span> = <span class=\"pl-s1\">hello</span>;\n  }</pre></div>\n<p dir=\"auto\">This is a compile error. The constructor is invalid because <code class=\"notranslate\">AutoValue_Foo</code> extends <code class=\"notranslate\">Foo</code>, and there is no default constructor in <code class=\"notranslate\">Foo</code>.</p>",
                "resourcePath": "/google/auto/issues/1209",
                "createdAt": "2021-12-06T06:52:25Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Disallow `@AutoValue final class`.",
        "url": "https://github.com/google/auto/pull/1218",
        "resourcePath": "/google/auto/pull/1218",
        "createdAt": "2021-12-13T15:51:06Z",
        "number": 1218,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1215,
                "url": "https://github.com/google/auto/issues/1215",
                "title": "Should not extend final class",
                "bodyHTML": "<p dir=\"auto\">AutoValue can't extend a final class but apparently it does, which leads to a compile error:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@AutoValue\nfinal class Foo {\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">AutoValue</span>\n<span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Foo</span> {\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Generated(&quot;com.google.auto.value.processor.AutoValueProcessor&quot;)\nfinal class AutoValue_Foo extends Foo {\n// ... doesn't compile\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Generated</span>(<span class=\"pl-s\">\"com.google.auto.value.processor.AutoValueProcessor\"</span>)\n<span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">AutoValue_Foo</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">Foo</span> {\n<span class=\"pl-c\">// ... doesn't compile</span>\n}</pre></div>",
                "resourcePath": "/google/auto/issues/1215",
                "createdAt": "2021-12-10T18:41:37Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Mention Dagger's assisted injection in the AutoFactory docs.",
        "url": "https://github.com/google/auto/pull/1227",
        "resourcePath": "/google/auto/pull/1227",
        "createdAt": "2021-12-18T21:06:59Z",
        "number": 1227,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1216,
                "url": "https://github.com/google/auto/issues/1216",
                "title": "Mention dagger's assisted injection in the auto factory docs",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">@AutoFactory</code> is <a href=\"https://dagger.dev/dev-guide/assisted-injection.html\" rel=\"nofollow\">mentioned in the dagger docs</a>. I guess linking back to dagger <a href=\"https://github.com/google/auto/tree/master/factory\">in the factory readme</a> would be helpful for users who don't know about this alternative yet.</p>",
                "resourcePath": "/google/auto/issues/1216",
                "createdAt": "2021-12-11T13:32:40Z",
                "labels": {
                  "edges": []
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix documentation for using AutoValue with Gradle.",
        "url": "https://github.com/google/auto/pull/1231",
        "resourcePath": "/google/auto/pull/1231",
        "createdAt": "2022-01-07T15:26:44Z",
        "number": 1231,
        "mergeCommit": {
          "oid": "ee741ded1ad3b3378fc661d97436e1372d21185d",
          "message": "Fix documentation for using AutoValue with Gradle.\n\ncompileOnlyApi only works with the Java Library plugin.\napi works with both the Java Library and Android plugins.\ncompileOnly seems to have always existed and appears to be exactly the same as compileOnlyApi,\naside from transitively exporting the dependency to consumers\n(i.e., compileOnlyApi adds to compileOnly the same way api adds to compile).\n\nValid dependency configurations can be found here:\n- [Java plugin](https://docs.gradle.org/current/userguide/java_plugin.html#tab:configurations)\n- [Java Library plugin](https://docs.gradle.org/current/userguide/java_library_plugin.html#sec:java_library_configurations_graph)\n- [Android plugin](https://developer.android.com/studio/build/dependencies#dependency_configurations)\n\nFixes #1220.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 420288492",
          "commitUrl": "https://github.com/google/auto/commit/ee741ded1ad3b3378fc661d97436e1372d21185d",
          "parents": {
            "nodes": [
              {
                "oid": "6dba06c2ffbcc1df165ca9361c45a67defc087f1",
                "message": "Bump gradle-test-kit from 7.3 to 7.3.3 in /value\n\nBumps [gradle-test-kit](https://github.com/gradle/gradle) from 7.3 to 7.3.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/gradle/gradle/releases\">gradle-test-kit's releases</a>.</em></p>\n<blockquote>\n<h2>7.3.3</h2>\n<p>This is a patch release for Gradle 7.3.</p>\n<p>It fixes the following issues:</p>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/gradle/gradle/issues/19360\">#19360</a> Upgrade checks to Log4j 2.17.0</li>\n</ul>\n<p>We recommend users upgrade to 7.3.3 instead of 7.3.</p>\n<p>Given the context of the Log4Shell vulnerability, make sure you take a look at <a href=\"https://blog.gradle.org/log4j-vulnerability\">our blog post</a> on this topic.</p>\n<h2>Upgrade Instructions</h2>\n<p>Switch your build to use Gradle 7.3.3 by updating your wrapper:</p>\n<pre><code>./gradlew wrapper --gradle-version=7.3.3\n</code></pre>\n<p>See the <a href=\"https://docs.gradle.org/7.3.3/userguide/upgrading_version_7.html#changes_7.3\">Gradle 7.x upgrade guide</a> to learn about deprecations, breaking changes and other considerations when upgrading to Gradle 7.3.3.</p>\n<h2>Reporting Problems</h2>\n<p>If you find a problem with this release, please file a bug on <a href=\"https://github.com/gradle/gradle/issues\">GitHub Issues</a> adhering to our issue guidelines.\nIf you're not sure you're encountering a bug, please use the <a href=\"https://discuss.gradle.org/c/help-discuss\">forum</a>.</p>\n<h2>7.3.2</h2>\n<p>This is a patch release for Gradle 7.3.</p>\n<p>It fixes the following issues:</p>\n<ul>\n<li><a href=\"https://github-redirect.dependabot.com/gradle/gradle/issues/19300\">#19300</a> Mitigations for log4j vulnerability in Gradle builds</li>\n<li><a href=\"https://github-redirect.dependabot.com/gradle/gradle/issues/19257\">#19257</a> Incremental java compilation fails when renaming classname with $ character</li>\n</ul>\n<p>We recommend users upgrade to 7.3.2 instead of 7.3.</p>\n<p>Given the context of the Log4Shell vulnerability, make sure you take a look at <a href=\"https://blog.gradle.org/log4j-vulnerability\">our blog post</a> on this topic.</p>\n<h2>Upgrade Instructions</h2>\n<p>Switch your build to use Gradle 7.3.2 by updating your wrapper:</p>\n<pre><code>./gradlew wrapper --gradle-version=7.3.2\n</code></pre>\n<p>See the <a href=\"https://docs.gradle.org/7.3.2/userguide/upgrading_version_7.html#changes_7.3\">Gradle 7.x upgrade guide</a> to learn about deprecations, breaking changes and other considerations when upgrading to Gradle 7.3.2.</p>\n<h2>Reporting Problems</h2>\n<p>If you find a problem with this release, please file a bug on <a href=\"https://github.com/gradle/gradle/issues\">GitHub Issues</a> adhering to our issue guidelines.\nIf you're not sure you're encountering a bug, please use the <a href=\"https://discuss.gradle.org/c/help-discuss\">forum</a>.</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/gradle/gradle/blob/master/released-versions.json\">gradle-test-kit's changelog</a>.</em></p>\n<blockquote>\n<p>{\n&quot;latestReleaseSnapshot&quot;: {\n&quot;version&quot;: &quot;7.4-20220106002224+0000&quot;,\n&quot;buildTime&quot;: &quot;20220106002224+0000&quot;\n},\n&quot;latestRc&quot;: {\n&quot;version&quot;: &quot;7.3.3-rc-1&quot;,\n&quot;buildTime&quot;: &quot;20211222090657+0000&quot;\n},\n&quot;finalReleases&quot;: [\n{\n&quot;version&quot;: &quot;7.3.3&quot;,\n&quot;buildTime&quot;: &quot;20211222123754+0000&quot;\n},\n{\n&quot;version&quot;: &quot;7.3.2&quot;,\n&quot;buildTime&quot;: &quot;20211215112231+0000&quot;\n},\n{\n&quot;version&quot;: &quot;7.3.1&quot;,\n&quot;buildTime&quot;: &quot;20211201154220+0000&quot;\n},\n{\n&quot;version&quot;: &quot;7.3&quot;,\n&quot;buildTime&quot;: &quot;20211109204036+0000&quot;\n},\n{\n&quot;version&quot;: &quot;7.2&quot;,\n&quot;buildTime&quot;: &quot;20210817095903+0000&quot;\n},\n{\n&quot;version&quot;: &quot;7.1.1&quot;,\n&quot;buildTime&quot;: &quot;20210702121643+0000&quot;\n},\n{\n&quot;version&quot;: &quot;7.1&quot;,\n&quot;buildTime&quot;: &quot;20210614144726+0000&quot;\n},\n{\n&quot;version&quot;: &quot;7.0.2&quot;,\n&quot;buildTime&quot;: &quot;20210514120231+0000&quot;\n},\n{\n&quot;version&quot;: &quot;7.0.1&quot;,\n&quot;buildTime&quot;: &quot;20210510160858+0000&quot;\n},\n{\n&quot;version&quot;: &quot;7.0&quot;,\n&quot;buildTime&quot;: &quot;20210409222731+0000&quot;\n},</p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/gradle/gradle/commit/6f556c80f945dc54b50e0be633da6c62dbe8dc71\"><code>6f556c8</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/gradle/gradle/issues/19363\">#19363</a> Release 7.3.3</li>\n<li><a href=\"https://github.com/gradle/gradle/commit/e88d628d90443b9476dd499dbd40ad6d4cb413e8\"><code>e88d628</code></a> Update release notes for 7.3.3</li>\n<li><a href=\"https://github.com/gradle/gradle/commit/0ffe93385e33f64d44c98c7e227a9c817a16b5ae\"><code>0ffe933</code></a> Update Log4j to 2.17.0</li>\n<li><a href=\"https://github.com/gradle/gradle/commit/0b9b3f3dc0e6355f01351af4191c4c81ccf39f02\"><code>0b9b3f3</code></a> Prepare for release 7.3.3</li>\n<li><a href=\"https://github.com/gradle/gradle/commit/b3b7dbaeb1d08dcb512a2a90925d00343a3daf10\"><code>b3b7dba</code></a> Update wrapper to 7.3.2</li>\n<li><a href=\"https://github.com/gradle/gradle/commit/26c186eb63b2b02e68d83b0dbc6ec69ab118653a\"><code>26c186e</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/gradle/gradle/issues/19311\">#19311</a> Log4j follow up</li>\n<li><a href=\"https://github.com/gradle/gradle/commit/dc0ffd3bdd7efa8034a0aa8deb6c7b685632bd1b\"><code>dc0ffd3</code></a> Fix tests following changes to constraint</li>\n<li><a href=\"https://github.com/gradle/gradle/commit/0122afa6f354cef5b15df7c47610386b5694c267\"><code>0122afa</code></a> Mark Log4j 2.15 as vulnerable</li>\n<li><a href=\"https://github.com/gradle/gradle/commit/53f3d205eb6edaa374ff4bb400af14acf141a20e\"><code>53f3d20</code></a> Rework Zinc log4j fix</li>\n<li><a href=\"https://github.com/gradle/gradle/commit/2f91c8ed36cf63f14aae1ceb34a1c46f5a11afe1\"><code>2f91c8e</code></a> Rework buildscript classpath log4j fix</li>\n<li>Additional commits viewable in <a href=\"https://github.com/gradle/gradle/compare/v7.3.0...v7.3.3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=dev.gradleplugins:gradle-test-kit&package-manager=maven&previous-version=7.3&new-version=7.3.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n</details>\n\nFixes #1230\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/google/auto/pull/1230 from google:dependabot/maven/value/dev.gradleplugins-gradle-test-kit-7.3.3 b2fc746ad66db68f85458b1a2215feb92cfb3cec\nPiperOrigin-RevId: 420286821"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/index.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAJwaYc4wqiNV2gAoZWU3NDFkZWQxYWQzYjMzNzhmYzY2MWQ5NzQzNmUxMzcyZDIxMTg1ZA",
                "url": "https://github.com/google/auto/pull/1231/commits/ee741ded1ad3b3378fc661d97436e1372d21185d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1220,
                "url": "https://github.com/google/auto/issues/1220",
                "title": "Could not find method compileOnlyApi()",
                "bodyHTML": "<p dir=\"auto\">I get the error</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&gt; Could not find method compileOnlyApi() for arguments [com.google.auto.value:auto-value-annotations:1.8.2] on object of type org.gradle.api.internal.artifacts.dsl.dependencies.DefaultDependencyHandler.\"><pre class=\"notranslate\"><code class=\"notranslate\">&gt; Could not find method compileOnlyApi() for arguments [com.google.auto.value:auto-value-annotations:1.8.2] on object of type org.gradle.api.internal.artifacts.dsl.dependencies.DefaultDependencyHandler.\n</code></pre></div>\n<p dir=\"auto\">While using:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    def auto_value_version = '1.8.2'\n    compileOnlyApi &quot;com.google.auto.value:auto-value-annotations:${auto_value_version}&quot;\n    annotationProcessor &quot;com.google.auto.value:auto-value:${auto_value_version}&quot;\"><pre class=\"notranslate\"><code class=\"notranslate\">    def auto_value_version = '1.8.2'\n    compileOnlyApi \"com.google.auto.value:auto-value-annotations:${auto_value_version}\"\n    annotationProcessor \"com.google.auto.value:auto-value:${auto_value_version}\"\n</code></pre></div>\n<p dir=\"auto\">On an Android project, using gradle 7.3.1</p>\n<p dir=\"auto\">Doc instructions followed: <a href=\"https://github.com/google/auto/blob/master/value/userguide/index.md#with-gradle\">https://github.com/google/auto/blob/master/value/userguide/index.md#with-gradle</a></p>",
                "resourcePath": "/google/auto/issues/1220",
                "createdAt": "2021-12-14T15:39:25Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "type=documentation"
                      }
                    },
                    {
                      "node": {
                        "name": "Status: accepted"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Change AutoAnnotation to have CLASS retention.",
        "url": "https://github.com/google/auto/pull/1252",
        "resourcePath": "/google/auto/pull/1252",
        "createdAt": "2022-02-01T19:10:40Z",
        "number": 1252,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1251,
                "url": "https://github.com/google/auto/issues/1251",
                "title": "Change retention of AutoAnnotation to CLASS to make it compatible with Gradle incremental compiler",
                "bodyHTML": "<p dir=\"auto\">We got a report that \"isolating\" processors might not produce correct results when combined with \"aggregating\" processors with the Gradle incremental compilation. In case the \"isolating\" processor and \"aggregating\" processor work on the same type, then all annotations have to have <code class=\"notranslate\">CLASS</code> or <code class=\"notranslate\">RUNTIME</code> retention, and not just <code class=\"notranslate\">SOURCE</code>. This is a rare case that was forgotten when documentation was written.  Check for details: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1085096459\" data-permission-text=\"Title is private\" data-url=\"https://github.com/gradle/gradle/issues/19366\" data-hovercard-type=\"issue\" data-hovercard-url=\"/gradle/gradle/issues/19366/hovercard\" href=\"https://github.com/gradle/gradle/issues/19366\">gradle/gradle#19366</a>.</p>\n<p dir=\"auto\">We noticed that one of your annotations is using <code class=\"notranslate\">SOURCE</code> retention:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/auto/blob/9f01954e13ff67caeacf5681e741c58bc3f50dee/value/src/main/java/com/google/auto/value/AutoAnnotation.java#L109-L111\">auto/value/src/main/java/com/google/auto/value/AutoAnnotation.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 109 to 111\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/auto/commit/9f01954e13ff67caeacf5681e741c58bc3f50dee\">9f01954</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L109\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"109\"></td>\n          <td id=\"LC109\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Target</span>(<span class=\"pl-smi\">ElementType</span>.<span class=\"pl-c1\">METHOD</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L110\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"110\"></td>\n          <td id=\"LC110\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Retention</span>(<span class=\"pl-smi\">RetentionPolicy</span>.<span class=\"pl-c1\">SOURCE</span>) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L111\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"111\"></td>\n          <td id=\"LC111\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">public</span> @interface <span class=\"pl-s1\">AutoAnnotation</span> {} </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">So to be 100% compatible with the Gradle incremental compilation, you should change that to <code class=\"notranslate\">CLASS</code> retention.</p>",
                "resourcePath": "/google/auto/issues/1251",
                "createdAt": "2022-01-31T11:22:51Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "Status: accepted"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Avoid using `instanceof` to determine the type of an `Element`.",
        "url": "https://github.com/google/auto/pull/1284",
        "resourcePath": "/google/auto/pull/1284",
        "createdAt": "2022-03-14T20:28:55Z",
        "number": 1284,
        "mergeCommit": {
          "oid": "5382e4591d906440eec6002d87caee597a4754d3",
          "message": "Avoid using `instanceof` to determine the type of an `Element`.\n\nFixes https://github.com/google/auto/issues/1283. As noted there, the API\ndocumentation clearly says that the same class could potentially implement more\nthan one of the `Element` subtypes.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 434553010",
          "commitUrl": "https://github.com/google/auto/commit/5382e4591d906440eec6002d87caee597a4754d3",
          "parents": {
            "nodes": [
              {
                "oid": "973dcbbd2400ddd9027e43c3d8511f7c96e34006",
                "message": "Bump maven-compiler-plugin from 3.10.0 to 3.10.1 in /factory\n\nBumps [maven-compiler-plugin](https://github.com/apache/maven-compiler-plugin) from 3.10.0 to 3.10.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/apache/maven-compiler-plugin/releases\">maven-compiler-plugin's releases</a>.</em></p>\n<blockquote>\n<h2>3.10.1</h2>\n<!-- raw HTML omitted -->\n<h2>\ud83d\ude80 New features and improvements</h2>\n<ul>\n<li><a href=\"https://issues.apache.org/jira/browse/MCOMPILER-426\">[MCOMPILER-426]</a> - add flag to enable-preview java compiler feature (<a href=\"https://github-redirect.dependabot.com/apache/maven-compiler-plugin/issues/98\">#98</a>) <a href=\"https://github.com/olamy\"><code>@\u200bolamy</code></a></li>\n</ul>\n<h2>\ud83d\udc1b Bug Fixes</h2>\n<ul>\n<li><a href=\"https://issues.apache.org/jira/browse/MCOMPILER-346\">[MCOMPILER-346]</a> - workaround to jdk bug: assertion error from javaxcompiler javax.tools API (<a href=\"https://github-redirect.dependabot.com/apache/maven-compiler-plugin/issues/97\">#97</a>) <a href=\"https://github.com/olamy\"><code>@\u200bolamy</code></a></li>\n<li><a href=\"https://issues.apache.org/jira/browse/MCOMPILER-485\">[MCOMPILER-485]</a> - Fixes internal string format in generated package-info.class (<a href=\"https://github-redirect.dependabot.com/apache/maven-compiler-plugin/issues/95\">#95</a>) <a href=\"https://github.com/dbwiddis\"><code>@\u200bdbwiddis</code></a></li>\n</ul>\n<h2>\ud83d\udce6 Dependency updates</h2>\n<ul>\n<li>Bump maven-javadoc-plugin from 3.3.1 to 3.3.2 (<a href=\"https://github-redirect.dependabot.com/apache/maven-compiler-plugin/issues/94\">#94</a>) <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a></li>\n</ul>\n<h2>Other contributions</h2>\n<ul>\n<li>thanks to <a href=\"https://github.com/basil\"><code>@\u200bbasil</code></a> for providing an IT test for the fix of <a href=\"https://issues.apache.org/jira/browse/MCOMPILER-346\">[MCOMPILER-346]</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/apache/maven-compiler-plugin/commit/4e08e2b9518fbbda7252236315b2ce03edcef505\"><code>4e08e2b</code></a> [maven-release-plugin] prepare release maven-compiler-plugin-3.10.1</li>\n<li><a href=\"https://github.com/apache/maven-compiler-plugin/commit/6795b0f508343dbc64dba384b85af2f1f3684b7a\"><code>6795b0f</code></a> [MCOMPILER-426] add flag to enable-preview java compiler feature (<a href=\"https://github-redirect.dependabot.com/apache/maven-compiler-plugin/issues/98\">#98</a>)</li>\n<li><a href=\"https://github.com/apache/maven-compiler-plugin/commit/1de8c91fba76fc345dca64cea300839bef436cba\"><code>1de8c91</code></a> MCOMPILER 346 workaround to jdk bug: assertion error from javaxcompiler javax...</li>\n<li><a href=\"https://github.com/apache/maven-compiler-plugin/commit/96ed94f5bcc0de6b6bd36816ce5caf3100dcd840\"><code>96ed94f</code></a> use shared release drafter</li>\n<li><a href=\"https://github.com/apache/maven-compiler-plugin/commit/fa80028166ffde859b1a1e20547701a9bed34d54\"><code>fa80028</code></a> [MCOMPILER-485] Fixes internal string format in generated package-info.class ...</li>\n<li><a href=\"https://github.com/apache/maven-compiler-plugin/commit/f605c0f52f20bf80c7473ec642474ba4fc028d4c\"><code>f605c0f</code></a> Merge pull request <a href=\"https://github-redirect.dependabot.com/apache/maven-compiler-plugin/issues/94\">#94</a> from apache/dependabot/maven/org.apache.maven.plugins-...</li>\n<li><a href=\"https://github.com/apache/maven-compiler-plugin/commit/4a54a9a01486e3c806518df56204cb1528545bb9\"><code>4a54a9a</code></a> Bump maven-javadoc-plugin from 3.3.1 to 3.3.2</li>\n<li><a href=\"https://github.com/apache/maven-compiler-plugin/commit/87b5a7ff8aef572238f8ccef7d213ea0772ce49d\"><code>87b5a7f</code></a> [maven-release-plugin] prepare for next development iteration</li>\n<li>See full diff in <a href=\"https://github.com/apache/maven-compiler-plugin/compare/maven-compiler-plugin-3.10.0...maven-compiler-plugin-3.10.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.apache.maven.plugins:maven-compiler-plugin&package-manager=maven&previous-version=3.10.0&new-version=3.10.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n</details>\n\nFixes #1279\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/google/auto/pull/1279 from google:dependabot/maven/factory/org.apache.maven.plugins-maven-compiler-plugin-3.10.1 ce3e3708023765b5f01fd31376b3539ab2006f6c\nPiperOrigin-RevId: 434463719"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "common/src/main/java/com/google/auto/common/BasicAnnotationProcessor.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAJwaYc40a-xP2gAoNTM4MmU0NTkxZDkwNjQ0MGVlYzYwMDJkODdjYWVlNTk3YTQ3NTRkMw",
                "url": "https://github.com/google/auto/pull/1284/commits/5382e4591d906440eec6002d87caee597a4754d3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1283,
                "url": "https://github.com/google/auto/issues/1283",
                "title": "BasicAnnotationProcessor: `instanceof` should not be used",
                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/auto/blob/973dcbbd2400ddd9027e43c3d8511f7c96e34006/common/src/main/java/com/google/auto/common/BasicAnnotationProcessor.java#L354\">auto/common/src/main/java/com/google/auto/common/BasicAnnotationProcessor.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 354\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/auto/commit/973dcbbd2400ddd9027e43c3d8511f7c96e34006\">973dcbb</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L354\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"354\"></td>\n          <td id=\"LC354\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">element</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">ExecutableElement</span>) { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">I believe I have spotted an error and wanted to report it. Based on <a href=\"https://docs.oracle.com/javase/8/docs/api/javax/lang/model/element/Element.html\" rel=\"nofollow\">Element</a> documentation, <code class=\"notranslate\">instanceof</code> should not be used in the aforementioned line. Instead either <em>visitor</em> or <code class=\"notranslate\">getKind()</code> should be utilized. Correct me if I am wrong.</p>\n<p dir=\"auto\">Thank you.</p>",
                "resourcePath": "/google/auto/issues/1283",
                "createdAt": "2022-03-14T15:09:50Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: common"
                      }
                    },
                    {
                      "node": {
                        "name": "Status: accepted"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Update Maven dependencies for the functional-test artifact.",
        "url": "https://github.com/google/auto/pull/1333",
        "resourcePath": "/google/auto/pull/1333",
        "createdAt": "2022-06-11T20:29:01Z",
        "number": 1333,
        "mergeCommit": {
          "oid": "2a87ebe0a860dcffa1808ea4d0babc6891c641b3",
          "message": "Update Maven dependencies for the functional-test artifact.\n\nThis is not a released artifact, so it doesn't matter very much whether the dependencies are up to date, but they might as well be.\n\nFixes #1331.\n\nRELNOTES=n/a\nPiperOrigin-RevId: 454719292",
          "commitUrl": "https://github.com/google/auto/commit/2a87ebe0a860dcffa1808ea4d0babc6891c641b3",
          "parents": {
            "nodes": [
              {
                "oid": "dac4ccd0f75b2b23b8af3b73105fbdf254a34bdd",
                "message": "Bump kotlin.version from 1.6.21 to 1.7.0 in /value\n\nBumps `kotlin.version` from 1.6.21 to 1.7.0.\nUpdates `kotlin-stdlib` from 1.6.21 to 1.7.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/JetBrains/kotlin/releases\">kotlin-stdlib's releases</a>.</em></p>\n<blockquote>\n<h2>Kotlin 1.7.0-RC2</h2>\n<h2>Changelog</h2>\n<h3>Compiler</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-52311\"><code>KT-52311</code></a> java.lang.VerifyError: Bad type on operand stack</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-52503\"><code>KT-52503</code></a> New green code appeared at the callable reference resolution</li>\n</ul>\n<h3>JavaScript</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-52518\"><code>KT-52518</code></a> Kotlin/JS IR: project with 1.6.21 fails to consume library built with 1.7.0-RC: ISE &quot;Unexpected IrType kind: KIND_NOT_SET&quot; at IrDeclarationDeserializer.deserializeIrTypeData()</li>\n</ul>\n<h3>Tools. CLI</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-52409\"><code>KT-52409</code></a> Report error when use-k2 with Multiplatform</li>\n</ul>\n<h3>Tools. Gradle</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-52509\"><code>KT-52509</code></a> Main variant published to Gradle plugin portal uses unshadowed artifact</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-52392\"><code>KT-52392</code></a> Gradle: 1.7.0 does not support custom gradle build configuration on Windows OS</li>\n</ul>\n<h3>Tools. Kapt</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-52284\"><code>KT-52284</code></a> FIR: add error in 1.7.0 branch if run with Kapt</li>\n</ul>\n<h2>Checksums</h2>\n<table>\n<thead>\n<tr>\n<th>File</th>\n<th>Sha256</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>kotlin-compiler-1.7.0-RC2.zip</td>\n<td>264b86c9d91d15a6eba0b720d759861adaab886ce37ae2dc8081af634eefba71</td>\n</tr>\n<tr>\n<td>kotlin-native-linux-x86_64-1.7.0-RC2.tar.gz</td>\n<td>650812727f1ce1c585d109e9435872ffa89316714ecde472cdf0927d5efc4a1c</td>\n</tr>\n<tr>\n<td>kotlin-native-macos-x86_64-1.7.0-RC2.tar.gz</td>\n<td>c4bfc7332ccd2ea952a201f489d1ff57fa0b2ae93dccac5a2459c545e5655cf3</td>\n</tr>\n<tr>\n<td>kotlin-native-macos-aarch64-1.7.0-RC2.tar.gz</td>\n<td>753e0ea090bc190eb63f6caf4bacf69817253aaa0d2f4eb6e7e79267a3041cb6</td>\n</tr>\n<tr>\n<td>kotlin-native-windows-x86_64-1.7.0-RC2.zip</td>\n<td>58c824f3e0fdbd358584b87745d918518513ab83b5e0c67ca072f5402477946e</td>\n</tr>\n</tbody>\n</table>\n<h2>Kotlin 1.7.0-RC</h2>\n<h2>Changelog</h2>\n<h3>Compiler</h3>\n<ul>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-51640\"><code>KT-51640</code></a> FIR: remove warning about &quot;far from being production ready&quot;</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-52404\"><code>KT-52404</code></a> Prolong deprecation cycle for errors at contravariant usages of star projected argument from Java</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-51844\"><code>KT-51844</code></a> New errors in overload resolution involving vararg extension methods</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-50877\"><code>KT-50877</code></a> Inconsistent flexible type</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-51988\"><code>KT-51988</code></a> &quot;NPE: getContainingDeclaration\u2026lDeclarationType.REGULAR) must not be null&quot; when using <code>@BuilderInference</code> with multiple type arguments</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-51925\"><code>KT-51925</code></a> Native: &quot;IllegalStateException: Symbol for kotlinx.cinterop/CStructVar|null[0] is unbound&quot; caused by inline function</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-52035\"><code>KT-52035</code></a> FIR: add error in 1.7.0 branch if run on JS / Native configuration</li>\n<li><a href=\"https://youtrack.jetbrains.com/issue/KT-52037\"><code>KT-52037</code></a> FIR: add error in 1.7.0 branch if run with non-compatible plugins</li>\n</ul>\n<h3>JavaScript</h3>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/JetBrains/kotlin/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `kotlin-maven-plugin` from 1.6.21 to 1.7.0\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n</details>\n\nFixes #1332\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/google/auto/pull/1332 from google:dependabot/maven/value/kotlin.version-1.7.0 3586b949116848abecef54c386c4e5f3d2dcc736\nPiperOrigin-RevId: 453791205"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "factory/src/it/functional/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAJwaYc45gjAy2gAoMmE4N2ViZTBhODYwZGNmZmExODA4ZWE0ZDBiYWJjNjg5MWM2NDFiMw",
                "url": "https://github.com/google/auto/pull/1333/commits/2a87ebe0a860dcffa1808ea4d0babc6891c641b3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1331,
                "url": "https://github.com/google/auto/issues/1331",
                "title": "There is a vulnerability in Guava: Google Core Libraries for Java 29.0-jre,upgrade recommended",
                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/auto/blob/d080c8b164467a2bfdcde46d6f5327bab1055b57/factory/src/it/functional/pom.xml#L46-L49\">auto/factory/src/it/functional/pom.xml</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 46 to 49\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/auto/commit/d080c8b164467a2bfdcde46d6f5327bab1055b57\">d080c8b</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L46\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"46\"></td>\n          <td id=\"LC46\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   &lt;<span class=\"pl-ent\">groupId</span>&gt;com.google.guava&lt;/<span class=\"pl-ent\">groupId</span>&gt; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L47\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"47\"></td>\n          <td id=\"LC47\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   &lt;<span class=\"pl-ent\">artifactId</span>&gt;guava&lt;/<span class=\"pl-ent\">artifactId</span>&gt; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L48\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"48\"></td>\n          <td id=\"LC48\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">   &lt;<span class=\"pl-ent\">version</span>&gt;29.0-jre&lt;/<span class=\"pl-ent\">version</span>&gt; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L49\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"49\"></td>\n          <td id=\"LC49\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> &lt;/<span class=\"pl-ent\">dependency</span>&gt; </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\"><a title=\"CVE-2020-8908\" data-hovercard-type=\"advisory\" data-hovercard-url=\"/advisories/GHSA-5mg8-w23w-74h3/hovercard\" href=\"https://github.com/advisories/GHSA-5mg8-w23w-74h3\">CVE-2020-8908</a></p>\n<p dir=\"auto\">Recommended upgrade version\uff1a<br>\n30.1.1-android</p>",
                "resourcePath": "/google/auto/issues/1331",
                "createdAt": "2022-06-07T08:28:25Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: factory"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    },
                    {
                      "node": {
                        "name": "dependencies"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix an issue with builder getters.",
        "url": "https://github.com/google/auto/pull/1387",
        "resourcePath": "/google/auto/pull/1387",
        "createdAt": "2022-10-24T21:25:14Z",
        "number": 1387,
        "mergeCommit": {
          "oid": "3659a0e6436d3acfeda04e0bd1df3603f1e7ffac",
          "message": "Fix an issue with builder getters.\n\nIn a builder, if a property `bar` has its own builder `barBuilder()` and also a getter `bar()`, then either the property must be set or `barBuilder()` must be called.\nIf neither of those has happened, both the `bar` and `barBuilder$` fields will be null, and we should correctly report that with an empty `Optional` return from `bar()`.\nPreviously we incorrectly simplified this logic and ended up calling `Optional.of(bar)` even though `bar` is null.\n\nFixes https://github.com/google/auto/issues/1386. Thanks to @jmesny for the bug report and regression test.\n\nRELNOTES=Fixed an issue when a builder has a property `foo` with both a getter `foo()` and a builder `fooBuilder()`.\nPiperOrigin-RevId: 483736037",
          "commitUrl": "https://github.com/google/auto/commit/3659a0e6436d3acfeda04e0bd1df3603f1e7ffac",
          "parents": {
            "nodes": [
              {
                "oid": "aeffb9065d90af9e2cb67c0ecd6de10a926e0462",
                "message": "Bump mockito-core from 4.8.0 to 4.8.1 in /value\n\nBumps [mockito-core](https://github.com/mockito/mockito) from 4.8.0 to 4.8.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/mockito/mockito/releases\">mockito-core's releases</a>.</em></p>\n<blockquote>\n<h2>v4.8.1</h2>\n<p><!-- raw HTML omitted --><!-- raw HTML omitted --><em>Changelog generated by <a href=\"https://github.com/shipkit/shipkit-changelog\">Shipkit Changelog Gradle Plugin</a></em><!-- raw HTML omitted --><!-- raw HTML omitted --></p>\n<h4>4.8.1</h4>\n<ul>\n<li>2022-10-17 - <a href=\"https://github.com/mockito/mockito/compare/v4.8.0...v4.8.1\">6 commit(s)</a> by andrepaschoal, dependabot[bot]</li>\n<li>Possible fix <a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2765\">#2765</a>: Add task to download package-list file from java as element-list [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2766\">#2766</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/pull/2766\">mockito/mockito#2766</a>)</li>\n<li>JavaDoc warning is blocking all pull requests [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2765\">#2765</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2765\">mockito/mockito#2765</a>)</li>\n<li>Bump versions.junitJupiter from 5.9.0 to 5.9.1 [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2758\">#2758</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/pull/2758\">mockito/mockito#2758</a>)</li>\n<li>Bump groovy from 3.0.12 to 3.0.13 [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2756\">#2756</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/pull/2756\">mockito/mockito#2756</a>)</li>\n<li>Bump com.diffplug.spotless from 6.10.0 to 6.11.0 [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2753\">#2753</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/pull/2753\">mockito/mockito#2753</a>)</li>\n<li>Bump org.eclipse.osgi from 3.18.0 to 3.18.100 [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2751\">#2751</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/pull/2751\">mockito/mockito#2751</a>)</li>\n<li>Bump versions.bytebuddy from 1.12.14 to 1.12.16 [(<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2747\">#2747</a>)](<a href=\"https://github-redirect.dependabot.com/mockito/mockito/pull/2747\">mockito/mockito#2747</a>)</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/mockito/mockito/commit/4d14d975cea51bc90d9d93c94e01cefdbaefeb67\"><code>4d14d97</code></a> Bump versions.junitJupiter from 5.9.0 to 5.9.1 (<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2758\">#2758</a>)</li>\n<li><a href=\"https://github.com/mockito/mockito/commit/3507ce328f77b41a1792732e27747fb427240060\"><code>3507ce3</code></a> Use downloaded package-list file from Oracle for JavaDoc generation (<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2766\">#2766</a>)</li>\n<li><a href=\"https://github.com/mockito/mockito/commit/0a9aa2697860096427cab0fb2f74aa940dff600f\"><code>0a9aa26</code></a> Bump groovy from 3.0.12 to 3.0.13 (<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2756\">#2756</a>)</li>\n<li><a href=\"https://github.com/mockito/mockito/commit/ee3679bc032e83675a1dd56651ee13248cedeb54\"><code>ee3679b</code></a> Bump com.diffplug.spotless from 6.10.0 to 6.11.0 (<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2753\">#2753</a>)</li>\n<li><a href=\"https://github.com/mockito/mockito/commit/185ea11ae46d814f12988176819d7557f3a1f78e\"><code>185ea11</code></a> Bump org.eclipse.osgi from 3.18.0 to 3.18.100 (<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2751\">#2751</a>)</li>\n<li><a href=\"https://github.com/mockito/mockito/commit/488d4b13c9d8a49ac9c30ca17eb6c7e004300440\"><code>488d4b1</code></a> Bump versions.bytebuddy from 1.12.14 to 1.12.16 (<a href=\"https://github-redirect.dependabot.com/mockito/mockito/issues/2747\">#2747</a>)</li>\n<li>See full diff in <a href=\"https://github.com/mockito/mockito/compare/v4.8.0...v4.8.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=org.mockito:mockito-core&package-manager=maven&previous-version=4.8.0&new-version=4.8.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n</details>\n\nFixes #1385\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/google/auto/pull/1385 from google:dependabot/maven/value/org.mockito-mockito-core-4.8.1 9da7a75823ec28273237a1cfd24411107dc73cd3\nPiperOrigin-RevId: 483374916"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/src/test/java/com/google/auto/value/AutoValueJava8Test.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/builder.vm"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAJwaYc5Bcs5-2gAoMzY1OWEwZTY0MzZkM2FjZmVkYTA0ZTBiZDFkZjM2MDNmMWU3ZmZhYw",
                "url": "https://github.com/google/auto/pull/1387/commits/3659a0e6436d3acfeda04e0bd1df3603f1e7ffac"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1386,
                "url": "https://github.com/google/auto/issues/1386",
                "title": "[AutoValue] NPE since v1.10 when using builder getters and nested builders",
                "bodyHTML": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">Since version <a href=\"https://github.com/google/auto/releases/tag/auto-value-1.10\">1.10</a> it is no longer possible to use <a href=\"https://github.com/google/auto/blob/master/value/userguide/builders-howto.md#normalize\">builder getters</a> and <a href=\"https://github.com/google/auto/blob/master/value/userguide/builders-howto.md#nested_builders\">nested builders</a> at the same time.</p>\n<p dir=\"auto\">Here is an example describing the issue.</p>\n<p dir=\"auto\">When the nested builder from <code class=\"notranslate\">Bar</code> is exposed, the generated <code class=\"notranslate\">bar()</code> builder getter in <code class=\"notranslate\">Foo</code> does not work as expected.<br>\nThe reason is that the generated implementation does not handle the case where the <code class=\"notranslate\">bar</code> value would be missing, as stated by the <code class=\"notranslate\">Optional</code> return type.<br>\nCalling this <code class=\"notranslate\">bar()</code> method would lead to a <code class=\"notranslate\">NullPointerException</code> being thrown.</p>\n<p dir=\"auto\">The code below works with version <a href=\"https://github.com/google/auto/releases/tag/auto-value-1.9\">1.9</a>.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import com.google.auto.value.AutoValue;\n\nimport java.util.Optional;\n\npublic class Issue {\n\n    @AutoValue\n    public static abstract class Foo {\n        public abstract Bar bar();\n\n        public static Foo.Builder builder() {\n            return new AutoValue_Issue_Foo.Builder();\n        }\n\n        @AutoValue.Builder\n        public abstract static class Builder {\n            // https://github.com/google/auto/blob/master/value/userguide/builders-howto.md#normalize\n            abstract Optional&lt;Bar&gt; bar();\n\n            // Generated code for the above `bar()` method:\n\n            // v1.9\n            //    @Override\n            //    Optional&lt;Bar&gt; bar() {\n            //      if (bar == null) {\n            //        return Optional.empty();\n            //      } else {\n            //        return Optional.of(bar);\n            //      }\n            //    }\n\n            // v1.10\n            //    @Override\n            //    Optional&lt;Bar&gt; bar() {\n            //      return Optional.of(bar);\n            //    }\n\n            public abstract Builder bar(Bar bar);\n\n            // https://github.com/google/auto/blob/master/value/userguide/builders-howto.md#nested_builders\n            public abstract Bar.Builder barBuilder();\n\n            abstract Foo autoBuild();\n\n            public Foo build() {\n                if (bar().isEmpty()) {\n                    // ^ NullPointerException when calling `bar()` with v1.10\n                }\n                return autoBuild();\n            }\n        }\n    }\n\n    @AutoValue\n    public static abstract class Bar {\n        public abstract Bar.Builder toBuilder();\n\n        public static Bar.Builder builder() {\n            return new AutoValue_Issue_Bar.Builder();\n        }\n\n        @AutoValue.Builder\n        public abstract static class Builder {\n            public abstract Bar build();\n        }\n    }\n\n\n    public static void main(String[] args) {\n        Foo.builder()\n                .build();\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">com</span>.<span class=\"pl-s1\">google</span>.<span class=\"pl-s1\">auto</span>.<span class=\"pl-s1\">value</span>.<span class=\"pl-s1\">AutoValue</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">Optional</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Issue</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">AutoValue</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Foo</span> {\n        <span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-smi\">Bar</span> <span class=\"pl-en\">bar</span>();\n\n        <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">Foo</span>.<span class=\"pl-smi\">Builder</span> <span class=\"pl-en\">builder</span>() {\n            <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">AutoValue_Issue_Foo</span>.<span class=\"pl-smi\">Builder</span>();\n        }\n\n        <span class=\"pl-c1\">@</span><span class=\"pl-smi\">AutoValue</span>.<span class=\"pl-s1\">Builder</span>\n        <span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Builder</span> {\n            <span class=\"pl-c\">// https://github.com/google/auto/blob/master/value/userguide/builders-howto.md#normalize</span>\n            <span class=\"pl-k\">abstract</span> <span class=\"pl-smi\">Optional</span>&lt;<span class=\"pl-smi\">Bar</span>&gt; <span class=\"pl-en\">bar</span>();\n\n            <span class=\"pl-c\">// Generated code for the above `bar()` method:</span>\n\n            <span class=\"pl-c\">// v1.9</span>\n            <span class=\"pl-c\">//    @Override</span>\n            <span class=\"pl-c\">//    Optional&lt;Bar&gt; bar() {</span>\n            <span class=\"pl-c\">//      if (bar == null) {</span>\n            <span class=\"pl-c\">//        return Optional.empty();</span>\n            <span class=\"pl-c\">//      } else {</span>\n            <span class=\"pl-c\">//        return Optional.of(bar);</span>\n            <span class=\"pl-c\">//      }</span>\n            <span class=\"pl-c\">//    }</span>\n\n            <span class=\"pl-c\">// v1.10</span>\n            <span class=\"pl-c\">//    @Override</span>\n            <span class=\"pl-c\">//    Optional&lt;Bar&gt; bar() {</span>\n            <span class=\"pl-c\">//      return Optional.of(bar);</span>\n            <span class=\"pl-c\">//    }</span>\n\n            <span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-smi\">Builder</span> <span class=\"pl-en\">bar</span>(<span class=\"pl-smi\">Bar</span> <span class=\"pl-s1\">bar</span>);\n\n            <span class=\"pl-c\">// https://github.com/google/auto/blob/master/value/userguide/builders-howto.md#nested_builders</span>\n            <span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-smi\">Bar</span>.<span class=\"pl-smi\">Builder</span> <span class=\"pl-en\">barBuilder</span>();\n\n            <span class=\"pl-k\">abstract</span> <span class=\"pl-smi\">Foo</span> <span class=\"pl-en\">autoBuild</span>();\n\n            <span class=\"pl-k\">public</span> <span class=\"pl-smi\">Foo</span> <span class=\"pl-en\">build</span>() {\n                <span class=\"pl-k\">if</span> (<span class=\"pl-en\">bar</span>().<span class=\"pl-en\">isEmpty</span>()) {\n                    <span class=\"pl-c\">// ^ NullPointerException when calling `bar()` with v1.10</span>\n                }\n                <span class=\"pl-k\">return</span> <span class=\"pl-en\">autoBuild</span>();\n            }\n        }\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">AutoValue</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Bar</span> {\n        <span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-smi\">Bar</span>.<span class=\"pl-smi\">Builder</span> <span class=\"pl-en\">toBuilder</span>();\n\n        <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">Bar</span>.<span class=\"pl-smi\">Builder</span> <span class=\"pl-en\">builder</span>() {\n            <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">AutoValue_Issue_Bar</span>.<span class=\"pl-smi\">Builder</span>();\n        }\n\n        <span class=\"pl-c1\">@</span><span class=\"pl-smi\">AutoValue</span>.<span class=\"pl-s1\">Builder</span>\n        <span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Builder</span> {\n            <span class=\"pl-k\">public</span> <span class=\"pl-k\">abstract</span> <span class=\"pl-smi\">Bar</span> <span class=\"pl-en\">build</span>();\n        }\n    }\n\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) {\n        <span class=\"pl-smi\">Foo</span>.<span class=\"pl-en\">builder</span>()\n                .<span class=\"pl-en\">build</span>();\n    }\n}</pre></div>\n<p dir=\"auto\">Thank you!</p>",
                "resourcePath": "/google/auto/issues/1386",
                "createdAt": "2022-10-24T16:32:35Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "Status: accepted"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Ensure that `org.jetbrains.annotations` is shaded in the AutoValue jar.",
        "url": "https://github.com/google/auto/pull/1393",
        "resourcePath": "/google/auto/pull/1393",
        "createdAt": "2022-11-17T18:47:31Z",
        "number": 1393,
        "mergeCommit": {
          "oid": "6de325b0cc23e7feeb954388582931c2b2d154f2",
          "message": "Ensure that `org.jetbrains.annotations` is shaded in the AutoValue jar.\n\nAlso reorder the `<relocation>` configuration entries lexicographically.\n\nFixes https://github.com/google/auto/issues/1389.\n\nRELNOTES=Two annotations from `org.jetbrains.annotations` were accidentally included unshaded in the AutoValue jar. That has been fixed.\nPiperOrigin-RevId: 489282871",
          "commitUrl": "https://github.com/google/auto/commit/6de325b0cc23e7feeb954388582931c2b2d154f2",
          "parents": {
            "nodes": [
              {
                "oid": "61967ecd3ce2d0e35bf359082e418dce7d75bb0f",
                "message": "Fix the variable name in the example of \"When parameter names are unavailable\".\n\nRELNOTES=n/a\nPiperOrigin-RevId: 488806361"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1389,
                "url": "https://github.com/google/auto/issues/1389",
                "title": "auto-value 1.10 includes (very old) copies of org.jetbrains.annotations.(NotNull|Nullable)",
                "bodyHTML": "<p dir=\"auto\">The <code class=\"notranslate\">auto-value-1.10.jar</code> on Maven includes two non-shaded classes copied from jetbrains-annotations 13.0:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"     546  Defl:N      325  41% 2013-12-17 16:10 ed26fa9e  org/jetbrains/annotations/NotNull.class\n     548  Defl:N      326  41% 2013-12-17 16:10 d6e46bc1  org/jetbrains/annotations/Nullable.class\"><pre class=\"notranslate\"><code class=\"notranslate\">     546  Defl:N      325  41% 2013-12-17 16:10 ed26fa9e  org/jetbrains/annotations/NotNull.class\n     548  Defl:N      326  41% 2013-12-17 16:10 d6e46bc1  org/jetbrains/annotations/Nullable.class\n</code></pre></div>\n<p dir=\"auto\">The current version of jetbrains-annotations is 23.0, and the annotations are different in the new version. Specifically, the annotation target has been extended to include <code class=\"notranslate\">TYPE_USE</code> in newer versions. By including these old annotations, auto-value can shadow the new versions (depending on classpath order), resulting in compilation errors, especially if auto-value is being used somewhat naively (i.e. on the classpath instead of the processorpath).</p>\n<p dir=\"auto\">Ideally, the auto-value jar shouldn't include unshaded jetbrains annotations. If it must include them, it should pull them from the latest version rather than the oldest.</p>",
                "resourcePath": "/google/auto/issues/1389",
                "createdAt": "2022-11-04T16:37:47Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "Status: accepted"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use a narrowing cast with `|=` where appropriate.",
        "url": "https://github.com/google/auto/pull/1396",
        "resourcePath": "/google/auto/pull/1396",
        "createdAt": "2022-11-22T16:50:51Z",
        "number": 1396,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1384,
                "url": "https://github.com/google/auto/issues/1384",
                "title": "[AutoValue] NarrowingCompoundAssignment warning for primitives",
                "bodyHTML": "<p dir=\"auto\">The <code class=\"notranslate\">set$0</code> field is generated if a primitive setting is used, e.g. boolean or float. It results in an warning like below,</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"AutoValue_PolicyStats_Metric.java:137: warning: \n[NarrowingCompoundAssignment] Compound assignments from int to byte hide lossy casts\n      set$0 |= 1;\n            ^\n    (see https://errorprone.info/bugpattern/NarrowingCompoundAssignment)\n  Did you mean 'set$0 = (byte) (set$0 | 1);'?\"><pre class=\"notranslate\"><code class=\"notranslate\">AutoValue_PolicyStats_Metric.java:137: warning: \n[NarrowingCompoundAssignment] Compound assignments from int to byte hide lossy casts\n      set$0 |= 1;\n            ^\n    (see https://errorprone.info/bugpattern/NarrowingCompoundAssignment)\n  Did you mean 'set$0 = (byte) (set$0 | 1);'?\n</code></pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\" static final class Builder extends PolicyStats.Metric.Builder {\n   private boolean required;\n   private byte set$0;\n\n   public PolicyStats.Metric.Builder required(boolean required) {\n     this.required = required;\n     set$0 |= 1;\n     return this;\n   }\"><pre class=\"notranslate\"> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Builder</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">PolicyStats</span>.<span class=\"pl-smi\">Metric</span>.<span class=\"pl-smi\">Builder</span> {\n   <span class=\"pl-k\">private</span> <span class=\"pl-smi\">boolean</span> <span class=\"pl-s1\">required</span>;\n   <span class=\"pl-k\">private</span> <span class=\"pl-smi\">byte</span> <span class=\"pl-s1\">set$0</span>;\n\n   <span class=\"pl-k\">public</span> <span class=\"pl-smi\">PolicyStats</span>.<span class=\"pl-smi\">Metric</span>.<span class=\"pl-smi\">Builder</span> <span class=\"pl-en\">required</span>(<span class=\"pl-smi\">boolean</span> <span class=\"pl-s1\">required</span>) {\n     <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">required</span> = <span class=\"pl-s1\">required</span>;\n     <span class=\"pl-s1\">set$0</span> |= <span class=\"pl-c1\">1</span>;\n     <span class=\"pl-k\">return</span> <span class=\"pl-smi\">this</span>;\n   }</pre></div>\n<p dir=\"auto\">This can be suppressed using.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@AutoValue.Builder @CopyAnnotations\n@SuppressWarnings(&quot;NarrowingCompoundAssignment&quot;)\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-smi\">AutoValue</span>.<span class=\"pl-s1\">Builder</span> <span class=\"pl-c1\">@</span><span class=\"pl-c1\">CopyAnnotations</span>\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">SuppressWarnings</span>(<span class=\"pl-s\">\"NarrowingCompoundAssignment\"</span>)</pre></div>",
                "resourcePath": "/google/auto/issues/1384",
                "createdAt": "2022-10-16T21:04:48Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow a property to be null if its type is a type variable with a `@Nullable` bound.",
        "url": "https://github.com/google/auto/pull/1467",
        "resourcePath": "/google/auto/pull/1467",
        "createdAt": "2023-03-08T20:07:27Z",
        "number": 1467,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1320,
                "url": "https://github.com/google/auto/issues/1320",
                "title": "Generic-typed fields include erroneous non-null check",
                "bodyHTML": "<p dir=\"auto\">Discovered during <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1123573832\" data-permission-text=\"Title is private\" data-url=\"https://github.com/apache/beam/issues/16721\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/apache/beam/pull/16721/hovercard\" href=\"https://github.com/apache/beam/pull/16721\">apache/beam#16721</a> here is a summary example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@AutoValue\npublic abstract class ValueInSingleWindow&lt;T&gt; {\n  T getValue();\n  ... other fields ...\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@AutoValue\npublic abstract class ValueInSingleWindow&lt;T&gt; {\n  T getValue();\n  ... other fields ...\n}\n</code></pre></div>\n<p dir=\"auto\">It is valid to create <code class=\"notranslate\">ValueInSingleWindow&lt;@Nullable String&gt;</code> in the usual way via <code class=\"notranslate\">ValueInSingleWindow.&lt;@Nullable String&gt;of(null, ...)</code>.</p>\n<p dir=\"auto\">However, autovalue creates a check that the value is non-null, rejecting type-safe code.</p>",
                "resourcePath": "/google/auto/issues/1320",
                "createdAt": "2022-05-15T19:48:25Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Clarify which argument is meant in an exception message.",
        "url": "https://github.com/google/auto/pull/1497",
        "resourcePath": "/google/auto/pull/1497",
        "createdAt": "2023-05-03T13:03:04Z",
        "number": 1497,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1495,
                "url": "https://github.com/google/auto/issues/1495",
                "title": "AutoFactory checkNotNull index in error message is 1-indexed, despite java being 0-indexed",
                "bodyHTML": "<p dir=\"auto\">AutoFactory gives an error message</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@AutoFactory method argument is null but is not marked @Nullable. Argument index 1\"><pre class=\"notranslate\"><code class=\"notranslate\">@AutoFactory method argument is null but is not marked @Nullable. Argument index 1\n</code></pre></div>\n<p dir=\"auto\">I wasn't sure if this meant the first or second element, as java is 0-indexed. IndexOutOfBoundsException is 0-indexed. But in AutoFactory this turns out to be 1-indexed.</p>\n<p dir=\"auto\">It's a bit confusing.</p>\n<p dir=\"auto\">The problem starts here where we start the loop at 1:</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/auto/blob/75ef346ccd9a8b6b00f38b6e1d7cfaddb0ba896b/factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java#L162\">auto/factory/src/main/java/com/google/auto/factory/processor/FactoryWriter.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 162\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/auto/commit/75ef346ccd9a8b6b00f38b6e1d7cfaddb0ba896b\">75ef346</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L162\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"162\"></td>\n          <td id=\"LC162\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">int</span> <span class=\"pl-s1\">argumentIndex</span> = <span class=\"pl-c1\">1</span>; <span class=\"pl-s1\">parameters</span>.<span class=\"pl-en\">hasNext</span>(); <span class=\"pl-s1\">argumentIndex</span>++) { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n:<p></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"      for (int argumentIndex = 1; parameters.hasNext(); argumentIndex++) {\"><pre class=\"notranslate\"><code class=\"notranslate\">      for (int argumentIndex = 1; parameters.hasNext(); argumentIndex++) {\n</code></pre></div>\n<p dir=\"auto\">Options:</p>\n<ol dir=\"auto\">\n<li>Change to 0-indexed? Optionally, also make clear that it's 0-indexed.</li>\n<li>Make clear in the error message you mean it's 1-indexed?</li>\n<li>Put the argument name (text) in the error message? It's what AutoValue does, I think. Neatly sidesteps this issue and does not require users to count.</li>\n</ol>\n<p dir=\"auto\">Thoughts?</p>",
                "resourcePath": "/google/auto/issues/1495",
                "createdAt": "2023-04-28T04:49:58Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: factory"
                      }
                    },
                    {
                      "node": {
                        "name": "Status: accepted"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    },
                    {
                      "node": {
                        "name": "type=enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Handle both `javax.inject.*` and `jakarta.inject.*`.",
        "url": "https://github.com/google/auto/pull/1535",
        "resourcePath": "/google/auto/pull/1535",
        "createdAt": "2023-06-05T19:09:48Z",
        "number": 1535,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1184,
                "url": "https://github.com/google/auto/issues/1184",
                "title": "add option to generate jakarta @Inject in generated factory",
                "bodyHTML": "<p dir=\"auto\">Currently, the classes generated from <code class=\"notranslate\">@AutoFactory</code> will have a  <code class=\"notranslate\">javax.inject.Inject</code> annotation, which makes them incompatible with tools that use jakarta annotations. Please add some option, or alternative annotation, so users can choose to have a <code class=\"notranslate\">jakarta.inject.Inject</code> annotation in the generated code instead.</p>",
                "resourcePath": "/google/auto/issues/1184",
                "createdAt": "2021-10-17T20:21:04Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: factory"
                      }
                    },
                    {
                      "node": {
                        "name": "Status: needs more information"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    },
                    {
                      "node": {
                        "name": "type=enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Access the Kotlin metadata API through reflection.",
        "url": "https://github.com/google/auto/pull/1575",
        "resourcePath": "/google/auto/pull/1575",
        "createdAt": "2023-08-14T23:58:59Z",
        "number": 1575,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/processor/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/AutoBuilderProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "value/src/main/java/com/google/auto/value/processor/KotlinMetadata.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAJwaYc5X7tla2gAoZjhmMGRlY2RlNDUxZTY2ZTMxOTUxODY1NzIxYzNkZGRmMDA2NWMzYQ",
                "url": "https://github.com/google/auto/pull/1575/commits/f8f0decde451e66e31951865721c3dddf0065c3a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1574,
                "url": "https://github.com/google/auto/issues/1574",
                "title": "auto-value 1.10.2 breaks compatibility with Kotlin 1.6",
                "bodyHTML": "<p dir=\"auto\">Upgrading <code class=\"notranslate\">auto-value</code> from 1.10.1 to 1.10.2 in a Kotlin 1.6 project results in:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[ERROR] /path/to/.m2/repository/com/google/auto/value/auto-value/1.10.2/auto-value-1.10.2.jar!/META-INF/kotlin-stdlib-common.kotlin_module: (-1, -1) Module was compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.8.0, expected version is 1.6.0.\"><pre class=\"notranslate\"><code class=\"notranslate\">[ERROR] /path/to/.m2/repository/com/google/auto/value/auto-value/1.10.2/auto-value-1.10.2.jar!/META-INF/kotlin-stdlib-common.kotlin_module: (-1, -1) Module was compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.8.0, expected version is 1.6.0.\n</code></pre></div>\n<p dir=\"auto\">The <a href=\"https://github.com/google/auto/releases/tag/auto-value-1.10.2\">auto-value 1.10.2 release notes</a> don't mention any Kotlin compatibility changes, but compared to version 1.10.1 compatibility with Kotlin 1.6 and 1.7 was broken.</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">auto-value</code> 1.10.1 uses <code class=\"notranslate\">kotlinx-metadata-jvm</code> 0.5.0, which uses <code class=\"notranslate\">kotlin-stdlib</code> 1.7.0</li>\n<li><code class=\"notranslate\">auto-value</code> 1.10.2 uses <code class=\"notranslate\">kotlinx-metadata-jvm</code> 0.6.2, which uses <code class=\"notranslate\">kotlin-stdlib</code> 1.8.0</li>\n<li><code class=\"notranslate\">auto-value</code> HEAD-SNAPSHOT uses <code class=\"notranslate\">kotlinx-metadata-jvm</code> 0.7.0, which uses <code class=\"notranslate\">kotlin-stdlib</code> 1.9.0</li>\n</ul>\n<p dir=\"auto\">Was compatibility with older Kotlin versions broken intentionally or accidentally?</p>",
                "resourcePath": "/google/auto/issues/1574",
                "createdAt": "2023-08-14T11:12:33Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "Status: accepted"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove `META-INF/*.kotlin_module` entries from the AutoValue jar.",
        "url": "https://github.com/google/auto/pull/1576",
        "resourcePath": "/google/auto/pull/1576",
        "createdAt": "2023-08-15T17:47:34Z",
        "number": 1576,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/processor/pom.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAJwaYc5X_evZ2gAoMzMxN2Y3MTcwMGJmZDkxNzI4NTU5ZDVmNGQzMDkwOTgwZjgyZDg4YQ",
                "url": "https://github.com/google/auto/pull/1576/commits/3317f71700bfd91728559d5f4d3090980f82d88a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1574,
                "url": "https://github.com/google/auto/issues/1574",
                "title": "auto-value 1.10.2 breaks compatibility with Kotlin 1.6",
                "bodyHTML": "<p dir=\"auto\">Upgrading <code class=\"notranslate\">auto-value</code> from 1.10.1 to 1.10.2 in a Kotlin 1.6 project results in:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[ERROR] /path/to/.m2/repository/com/google/auto/value/auto-value/1.10.2/auto-value-1.10.2.jar!/META-INF/kotlin-stdlib-common.kotlin_module: (-1, -1) Module was compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.8.0, expected version is 1.6.0.\"><pre class=\"notranslate\"><code class=\"notranslate\">[ERROR] /path/to/.m2/repository/com/google/auto/value/auto-value/1.10.2/auto-value-1.10.2.jar!/META-INF/kotlin-stdlib-common.kotlin_module: (-1, -1) Module was compiled with an incompatible version of Kotlin. The binary version of its metadata is 1.8.0, expected version is 1.6.0.\n</code></pre></div>\n<p dir=\"auto\">The <a href=\"https://github.com/google/auto/releases/tag/auto-value-1.10.2\">auto-value 1.10.2 release notes</a> don't mention any Kotlin compatibility changes, but compared to version 1.10.1 compatibility with Kotlin 1.6 and 1.7 was broken.</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">auto-value</code> 1.10.1 uses <code class=\"notranslate\">kotlinx-metadata-jvm</code> 0.5.0, which uses <code class=\"notranslate\">kotlin-stdlib</code> 1.7.0</li>\n<li><code class=\"notranslate\">auto-value</code> 1.10.2 uses <code class=\"notranslate\">kotlinx-metadata-jvm</code> 0.6.2, which uses <code class=\"notranslate\">kotlin-stdlib</code> 1.8.0</li>\n<li><code class=\"notranslate\">auto-value</code> HEAD-SNAPSHOT uses <code class=\"notranslate\">kotlinx-metadata-jvm</code> 0.7.0, which uses <code class=\"notranslate\">kotlin-stdlib</code> 1.9.0</li>\n</ul>\n<p dir=\"auto\">Was compatibility with older Kotlin versions broken intentionally or accidentally?</p>",
                "resourcePath": "/google/auto/issues/1574",
                "createdAt": "2023-08-14T11:12:33Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "Status: accepted"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Apply a workaround for a JDK bug unconditionally.",
        "url": "https://github.com/google/auto/pull/1587",
        "resourcePath": "/google/auto/pull/1587",
        "createdAt": "2023-09-07T14:08:41Z",
        "number": 1587,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": []
        },
        "commits": {
          "edges": []
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1572,
                "url": "https://github.com/google/auto/issues/1572",
                "title": "Intermittent `Stream closed` exception after upgrading to 1.10.2",
                "bodyHTML": "<p dir=\"auto\">Hello!</p>\n<p dir=\"auto\">We recently started observing an intermittent error after upgrading from 1.8.2 to 1.10.2 (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1828300763\" data-permission-text=\"Title is private\" data-url=\"https://github.com/GoogleCloudPlatform/DataflowTemplates/issues/929\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/GoogleCloudPlatform/DataflowTemplates/pull/929/hovercard\" href=\"https://github.com/GoogleCloudPlatform/DataflowTemplates/pull/929\">GoogleCloudPlatform/DataflowTemplates#929</a>).</p>\n<p dir=\"auto\">I suspect it might be related to some racing/concurrency issues, as it happens sporadically and we are running Maven using multiple threads (<code class=\"notranslate\">mvn -T8 ...</code>). It is either very hard to get when running in a single thread (I tried a bunch of times and it didn't repro), or parallelism is actually the issue.</p>\n<p dir=\"auto\">Build <a href=\"https://github.com/GoogleCloudPlatform/DataflowTemplates/actions/runs/5734638367/job/15541176096?pr=934\">https://github.com/GoogleCloudPlatform/DataflowTemplates/actions/runs/5734638367/job/15541176096?pr=934</a></p>\n<p dir=\"auto\">Full stacktrace:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Error:  Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.6.2:compile (default-compile) on project pubsub-to-redis: Fatal error compiling: autovalue.shaded.com.google.escapevelocity.EvaluationException: In expression on line 192 of autovalue.vm: java.io.IOException: Stream closed -&gt; [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.6.2:compile (default-compile) on project pubsub-to-redis: Fatal error compiling\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:215)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:200)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:196)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)\n    at java.lang.Thread.run (Thread.java:829)\nCaused by: org.apache.maven.plugin.MojoExecutionException: Fatal error compiling\n    at org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute (AbstractCompilerMojo.java:963)\n    at org.apache.maven.plugin.compiler.CompilerMojo.execute (CompilerMojo.java:158)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:200)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:196)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)\n    at java.lang.Thread.run (Thread.java:829)\nCaused by: org.codehaus.plexus.compiler.CompilerException: autovalue.shaded.com.google.escapevelocity.EvaluationException: In expression on line 192 of autovalue.vm: java.io.IOException: Stream closed\n    at org.codehaus.plexus.compiler.javac.JavaxToolsCompiler.compileInProcess (JavaxToolsCompiler.java:173)\n    at org.codehaus.plexus.compiler.javac.JavacCompiler.performCompile (JavacCompiler.java:174)\n    at org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute (AbstractCompilerMojo.java:952)\n    at org.apache.maven.plugin.compiler.CompilerMojo.execute (CompilerMojo.java:158)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:200)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:196)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)\n    at java.lang.Thread.run (Thread.java:829)\nCaused by: java.lang.RuntimeException: autovalue.shaded.com.google.escapevelocity.EvaluationException: In expression on line 192 of autovalue.vm: java.io.IOException: Stream closed\n    at com.sun.tools.javac.api.JavacTaskImpl.handleExceptions (JavacTaskImpl.java:163)\n    at com.sun.tools.javac.api.JavacTaskImpl.doCall (JavacTaskImpl.java:100)\n    at com.sun.tools.javac.api.JavacTaskImpl.call (JavacTaskImpl.java:94)\n    at org.codehaus.plexus.compiler.javac.JavaxToolsCompiler.compileInProcess (JavaxToolsCompiler.java:126)\n    at org.codehaus.plexus.compiler.javac.JavacCompiler.performCompile (JavacCompiler.java:174)\n    at org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute (AbstractCompilerMojo.java:952)\n    at org.apache.maven.plugin.compiler.CompilerMojo.execute (CompilerMojo.java:158)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:200)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:196)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)\n    at java.lang.Thread.run (Thread.java:829)\nCaused by: autovalue.shaded.com.google.escapevelocity.EvaluationException: In expression on line 192 of autovalue.vm: java.io.IOException: Stream closed\n    at autovalue.shaded.com.google.escapevelocity.Node.evaluationException (Node.java:59)\n    at autovalue.shaded.com.google.escapevelocity.ParseNode.render (ParseNode.java:65)\n    at autovalue.shaded.com.google.escapevelocity.Node$Cons.render (Node.java:91)\n    at autovalue.shaded.com.google.escapevelocity.DirectiveNode$IfNode.render (DirectiveNode.java:103)\n    at autovalue.shaded.com.google.escapevelocity.Node$Cons.render (Node.java:91)\n    at autovalue.shaded.com.google.escapevelocity.Template.render (Template.java:189)\n    at autovalue.shaded.com.google.escapevelocity.Template.evaluate (Template.java:179)\n    at com.google.auto.value.processor.TemplateVars.toText (TemplateVars.java:99)\n    at com.google.auto.value.processor.AutoValueProcessor.processType (AutoValueProcessor.java:274)\n    at com.google.auto.value.processor.AutoValueishProcessor.process (AutoValueishProcessor.java:441)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.callProcessor (JavacProcessingEnvironment.java:985)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.discoverAndRunProcs (JavacProcessingEnvironment.java:901)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment$Round.run (JavacProcessingEnvironment.java:1227)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.doProcessing (JavacProcessingEnvironment.java:1340)\n    at com.sun.tools.javac.main.JavaCompiler.processAnnotations (JavaCompiler.java:1254)\n    at com.sun.tools.javac.main.JavaCompiler.compile (JavaCompiler.java:936)\n    at com.sun.tools.javac.api.JavacTaskImpl.lambda$doCall$0 (JavacTaskImpl.java:104)\n    at com.sun.tools.javac.api.JavacTaskImpl.handleExceptions (JavacTaskImpl.java:147)\n    at com.sun.tools.javac.api.JavacTaskImpl.doCall (JavacTaskImpl.java:100)\n    at com.sun.tools.javac.api.JavacTaskImpl.call (JavacTaskImpl.java:94)\n    at org.codehaus.plexus.compiler.javac.JavaxToolsCompiler.compileInProcess (JavaxToolsCompiler.java:126)\n    at org.codehaus.plexus.compiler.javac.JavacCompiler.performCompile (JavacCompiler.java:174)\n    at org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute (AbstractCompilerMojo.java:952)\n    at org.apache.maven.plugin.compiler.CompilerMojo.execute (CompilerMojo.java:158)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:200)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:196)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)\n    at java.lang.Thread.run (Thread.java:829)\nCaused by: java.io.IOException: Stream closed\n    at java.util.zip.InflaterInputStream.ensureOpen (InflaterInputStream.java:68)\n    at java.util.zip.InflaterInputStream.read (InflaterInputStream.java:143)\n    at java.io.FilterInputStream.read (FilterInputStream.java:133)\n    at sun.nio.cs.StreamDecoder.readBytes (StreamDecoder.java:284)\n    at sun.nio.cs.StreamDecoder.implRead (StreamDecoder.java:326)\n    at sun.nio.cs.StreamDecoder.read (StreamDecoder.java:178)\n    at java.io.InputStreamReader.read (InputStreamReader.java:181)\n    at java.io.BufferedReader.fill (BufferedReader.java:161)\n    at java.io.BufferedReader.read (BufferedReader.java:182)\n    at java.io.LineNumberReader.read (LineNumberReader.java:126)\n    at autovalue.shaded.com.google.escapevelocity.Parser.next (Parser.java:144)\n    at autovalue.shaded.com.google.escapevelocity.Parser.skipSpace (Parser.java:171)\n    at autovalue.shaded.com.google.escapevelocity.Parser.expect (Parser.java:189)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseIfOrElseIf (Parser.java:418)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseDirective (Parser.java:370)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseNode (Parser.java:271)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseToStop (Parser.java:223)\n    at autovalue.shaded.com.google.escapevelocity.Parser.skipNewlineAndParseToStop (Parser.java:251)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseForEach (Parser.java:476)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseDirective (Parser.java:378)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseNode (Parser.java:271)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseToStop (Parser.java:223)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parse (Parser.java:128)\n    at autovalue.shaded.com.google.escapevelocity.Template.parseFrom (Template.java:147)\n    at autovalue.shaded.com.google.escapevelocity.ParseNode.render (ParseNode.java:62)\n    at autovalue.shaded.com.google.escapevelocity.Node$Cons.render (Node.java:91)\n    at autovalue.shaded.com.google.escapevelocity.DirectiveNode$IfNode.render (DirectiveNode.java:103)\n    at autovalue.shaded.com.google.escapevelocity.Node$Cons.render (Node.java:91)\n    at autovalue.shaded.com.google.escapevelocity.Template.render (Template.java:189)\n    at autovalue.shaded.com.google.escapevelocity.Template.evaluate (Template.java:179)\n    at com.google.auto.value.processor.TemplateVars.toText (TemplateVars.java:99)\n    at com.google.auto.value.processor.AutoValueProcessor.processType (AutoValueProcessor.java:274)\n    at com.google.auto.value.processor.AutoValueishProcessor.process (AutoValueishProcessor.java:441)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.callProcessor (JavacProcessingEnvironment.java:985)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.discoverAndRunProcs (JavacProcessingEnvironment.java:901)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment$Round.run (JavacProcessingEnvironment.java:1227)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.doProcessing (JavacProcessingEnvironment.java:1340)\n    at com.sun.tools.javac.main.JavaCompiler.processAnnotations (JavaCompiler.java:1254)\n    at com.sun.tools.javac.main.JavaCompiler.compile (JavaCompiler.java:936)\n    at com.sun.tools.javac.api.JavacTaskImpl.lambda$doCall$0 (JavacTaskImpl.java:104)\n    at com.sun.tools.javac.api.JavacTaskImpl.handleExceptions (JavacTaskImpl.java:147)\n    at com.sun.tools.javac.api.JavacTaskImpl.doCall (JavacTaskImpl.java:100)\n    at com.sun.tools.javac.api.JavacTaskImpl.call (JavacTaskImpl.java:94)\n    at org.codehaus.plexus.compiler.javac.JavaxToolsCompiler.compileInProcess (JavaxToolsCompiler.java:126)\n    at org.codehaus.plexus.compiler.javac.JavacCompiler.performCompile (JavacCompiler.java:174)\n    at org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute (AbstractCompilerMojo.java:952)\n    at org.apache.maven.plugin.compiler.CompilerMojo.execute (CompilerMojo.java:158)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:200)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:196)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)\n    at java.lang.Thread.run (Thread.java:829)\nError:  \nError:  Re-run Maven using the -X switch to enable full debug logging.\nError:  \nError:  For more information about the errors and possible solutions, please read the following articles:\nError:  [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException\nError:  \nError:  After correcting the problems, you can resume the build with the command\nError:    mvn &lt;goals&gt; -rf :pubsub-to-redis\"><pre class=\"notranslate\"><code class=\"notranslate\">Error:  Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.6.2:compile (default-compile) on project pubsub-to-redis: Fatal error compiling: autovalue.shaded.com.google.escapevelocity.EvaluationException: In expression on line 192 of autovalue.vm: java.io.IOException: Stream closed -&gt; [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.6.2:compile (default-compile) on project pubsub-to-redis: Fatal error compiling\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:215)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:200)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:196)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)\n    at java.lang.Thread.run (Thread.java:829)\nCaused by: org.apache.maven.plugin.MojoExecutionException: Fatal error compiling\n    at org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute (AbstractCompilerMojo.java:963)\n    at org.apache.maven.plugin.compiler.CompilerMojo.execute (CompilerMojo.java:158)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:200)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:196)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)\n    at java.lang.Thread.run (Thread.java:829)\nCaused by: org.codehaus.plexus.compiler.CompilerException: autovalue.shaded.com.google.escapevelocity.EvaluationException: In expression on line 192 of autovalue.vm: java.io.IOException: Stream closed\n    at org.codehaus.plexus.compiler.javac.JavaxToolsCompiler.compileInProcess (JavaxToolsCompiler.java:173)\n    at org.codehaus.plexus.compiler.javac.JavacCompiler.performCompile (JavacCompiler.java:174)\n    at org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute (AbstractCompilerMojo.java:952)\n    at org.apache.maven.plugin.compiler.CompilerMojo.execute (CompilerMojo.java:158)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:200)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:196)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)\n    at java.lang.Thread.run (Thread.java:829)\nCaused by: java.lang.RuntimeException: autovalue.shaded.com.google.escapevelocity.EvaluationException: In expression on line 192 of autovalue.vm: java.io.IOException: Stream closed\n    at com.sun.tools.javac.api.JavacTaskImpl.handleExceptions (JavacTaskImpl.java:163)\n    at com.sun.tools.javac.api.JavacTaskImpl.doCall (JavacTaskImpl.java:100)\n    at com.sun.tools.javac.api.JavacTaskImpl.call (JavacTaskImpl.java:94)\n    at org.codehaus.plexus.compiler.javac.JavaxToolsCompiler.compileInProcess (JavaxToolsCompiler.java:126)\n    at org.codehaus.plexus.compiler.javac.JavacCompiler.performCompile (JavacCompiler.java:174)\n    at org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute (AbstractCompilerMojo.java:952)\n    at org.apache.maven.plugin.compiler.CompilerMojo.execute (CompilerMojo.java:158)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:200)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:196)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)\n    at java.lang.Thread.run (Thread.java:829)\nCaused by: autovalue.shaded.com.google.escapevelocity.EvaluationException: In expression on line 192 of autovalue.vm: java.io.IOException: Stream closed\n    at autovalue.shaded.com.google.escapevelocity.Node.evaluationException (Node.java:59)\n    at autovalue.shaded.com.google.escapevelocity.ParseNode.render (ParseNode.java:65)\n    at autovalue.shaded.com.google.escapevelocity.Node$Cons.render (Node.java:91)\n    at autovalue.shaded.com.google.escapevelocity.DirectiveNode$IfNode.render (DirectiveNode.java:103)\n    at autovalue.shaded.com.google.escapevelocity.Node$Cons.render (Node.java:91)\n    at autovalue.shaded.com.google.escapevelocity.Template.render (Template.java:189)\n    at autovalue.shaded.com.google.escapevelocity.Template.evaluate (Template.java:179)\n    at com.google.auto.value.processor.TemplateVars.toText (TemplateVars.java:99)\n    at com.google.auto.value.processor.AutoValueProcessor.processType (AutoValueProcessor.java:274)\n    at com.google.auto.value.processor.AutoValueishProcessor.process (AutoValueishProcessor.java:441)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.callProcessor (JavacProcessingEnvironment.java:985)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.discoverAndRunProcs (JavacProcessingEnvironment.java:901)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment$Round.run (JavacProcessingEnvironment.java:1227)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.doProcessing (JavacProcessingEnvironment.java:1340)\n    at com.sun.tools.javac.main.JavaCompiler.processAnnotations (JavaCompiler.java:1254)\n    at com.sun.tools.javac.main.JavaCompiler.compile (JavaCompiler.java:936)\n    at com.sun.tools.javac.api.JavacTaskImpl.lambda$doCall$0 (JavacTaskImpl.java:104)\n    at com.sun.tools.javac.api.JavacTaskImpl.handleExceptions (JavacTaskImpl.java:147)\n    at com.sun.tools.javac.api.JavacTaskImpl.doCall (JavacTaskImpl.java:100)\n    at com.sun.tools.javac.api.JavacTaskImpl.call (JavacTaskImpl.java:94)\n    at org.codehaus.plexus.compiler.javac.JavaxToolsCompiler.compileInProcess (JavaxToolsCompiler.java:126)\n    at org.codehaus.plexus.compiler.javac.JavacCompiler.performCompile (JavacCompiler.java:174)\n    at org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute (AbstractCompilerMojo.java:952)\n    at org.apache.maven.plugin.compiler.CompilerMojo.execute (CompilerMojo.java:158)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:200)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:196)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)\n    at java.lang.Thread.run (Thread.java:829)\nCaused by: java.io.IOException: Stream closed\n    at java.util.zip.InflaterInputStream.ensureOpen (InflaterInputStream.java:68)\n    at java.util.zip.InflaterInputStream.read (InflaterInputStream.java:143)\n    at java.io.FilterInputStream.read (FilterInputStream.java:133)\n    at sun.nio.cs.StreamDecoder.readBytes (StreamDecoder.java:284)\n    at sun.nio.cs.StreamDecoder.implRead (StreamDecoder.java:326)\n    at sun.nio.cs.StreamDecoder.read (StreamDecoder.java:178)\n    at java.io.InputStreamReader.read (InputStreamReader.java:181)\n    at java.io.BufferedReader.fill (BufferedReader.java:161)\n    at java.io.BufferedReader.read (BufferedReader.java:182)\n    at java.io.LineNumberReader.read (LineNumberReader.java:126)\n    at autovalue.shaded.com.google.escapevelocity.Parser.next (Parser.java:144)\n    at autovalue.shaded.com.google.escapevelocity.Parser.skipSpace (Parser.java:171)\n    at autovalue.shaded.com.google.escapevelocity.Parser.expect (Parser.java:189)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseIfOrElseIf (Parser.java:418)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseDirective (Parser.java:370)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseNode (Parser.java:271)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseToStop (Parser.java:223)\n    at autovalue.shaded.com.google.escapevelocity.Parser.skipNewlineAndParseToStop (Parser.java:251)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseForEach (Parser.java:476)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseDirective (Parser.java:378)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseNode (Parser.java:271)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parseToStop (Parser.java:223)\n    at autovalue.shaded.com.google.escapevelocity.Parser.parse (Parser.java:128)\n    at autovalue.shaded.com.google.escapevelocity.Template.parseFrom (Template.java:147)\n    at autovalue.shaded.com.google.escapevelocity.ParseNode.render (ParseNode.java:62)\n    at autovalue.shaded.com.google.escapevelocity.Node$Cons.render (Node.java:91)\n    at autovalue.shaded.com.google.escapevelocity.DirectiveNode$IfNode.render (DirectiveNode.java:103)\n    at autovalue.shaded.com.google.escapevelocity.Node$Cons.render (Node.java:91)\n    at autovalue.shaded.com.google.escapevelocity.Template.render (Template.java:189)\n    at autovalue.shaded.com.google.escapevelocity.Template.evaluate (Template.java:179)\n    at com.google.auto.value.processor.TemplateVars.toText (TemplateVars.java:99)\n    at com.google.auto.value.processor.AutoValueProcessor.processType (AutoValueProcessor.java:274)\n    at com.google.auto.value.processor.AutoValueishProcessor.process (AutoValueishProcessor.java:441)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.callProcessor (JavacProcessingEnvironment.java:985)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.discoverAndRunProcs (JavacProcessingEnvironment.java:901)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment$Round.run (JavacProcessingEnvironment.java:1227)\n    at com.sun.tools.javac.processing.JavacProcessingEnvironment.doProcessing (JavacProcessingEnvironment.java:1340)\n    at com.sun.tools.javac.main.JavaCompiler.processAnnotations (JavaCompiler.java:1254)\n    at com.sun.tools.javac.main.JavaCompiler.compile (JavaCompiler.java:936)\n    at com.sun.tools.javac.api.JavacTaskImpl.lambda$doCall$0 (JavacTaskImpl.java:104)\n    at com.sun.tools.javac.api.JavacTaskImpl.handleExceptions (JavacTaskImpl.java:147)\n    at com.sun.tools.javac.api.JavacTaskImpl.doCall (JavacTaskImpl.java:100)\n    at com.sun.tools.javac.api.JavacTaskImpl.call (JavacTaskImpl.java:94)\n    at org.codehaus.plexus.compiler.javac.JavaxToolsCompiler.compileInProcess (JavaxToolsCompiler.java:126)\n    at org.codehaus.plexus.compiler.javac.JavacCompiler.performCompile (JavacCompiler.java:174)\n    at org.apache.maven.plugin.compiler.AbstractCompilerMojo.execute (AbstractCompilerMojo.java:952)\n    at org.apache.maven.plugin.compiler.CompilerMojo.execute (CompilerMojo.java:158)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:137)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:210)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:156)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:148)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:200)\n    at org.apache.maven.lifecycle.internal.builder.multithreaded.MultiThreadedBuilder$1.call (MultiThreadedBuilder.java:196)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)\n    at java.lang.Thread.run (Thread.java:829)\nError:  \nError:  Re-run Maven using the -X switch to enable full debug logging.\nError:  \nError:  For more information about the errors and possible solutions, please read the following articles:\nError:  [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException\nError:  \nError:  After correcting the problems, you can resume the build with the command\nError:    mvn &lt;goals&gt; -rf :pubsub-to-redis\n</code></pre></div>",
                "resourcePath": "/google/auto/issues/1572",
                "createdAt": "2023-08-03T03:56:04Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=defect"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "Status: accepted"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove support from AutoValue for generating Java 7 code.",
        "url": "https://github.com/google/auto/pull/1691",
        "resourcePath": "/google/auto/pull/1691",
        "createdAt": "2024-01-12T21:42:47Z",
        "number": 1691,
        "mergeCommit": {
          "oid": "b9142b7cd872ccac3794470af17a9df594e9013f",
          "message": "Remove support from AutoValue for generating Java 7 code.\n\nWe now only support Java 8. 1.10.4 was the last AutoValue release that could generate Java 7 code.\n\nFixes #1683.\n\nRELNOTES=Support for generating Java 7 code has been removed from AutoValue, AutoAnnotation, and AutoBuilder. You must be on at least Java 8, or an Android version with desugaring that allows it to pass for Java 8. 1.10.4 is the last AutoValue version with support for Java 7.\nPiperOrigin-RevId: 597954833",
          "commitUrl": "https://github.com/google/auto/commit/b9142b7cd872ccac3794470af17a9df594e9013f",
          "parents": {
            "nodes": [
              {
                "oid": "446ad612f02d24fe07190478e6e370f6cf3d7fea",
                "message": "Bump actions/cache from 3.3.2 to 3.3.3\n\nBumps [actions/cache](https://github.com/actions/cache) from 3.3.2 to 3.3.3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/cache/releases\">actions/cache's releases</a>.</em></p>\n<blockquote>\n<h2>v3.3.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Cache v3.3.3 by <a href=\"https://github.com/robherley\"><code>@\u200brobherley</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1302\">actions/cache#1302</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/robherley\"><code>@\u200brobherley</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1302\">actions/cache#1302</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.3\">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/cache/blob/main/RELEASES.md\">actions/cache's changelog</a>.</em></p>\n<blockquote>\n<h1>Releases</h1>\n<h3>3.0.0</h3>\n<ul>\n<li>Updated minimum runner version support from node 12 -&gt; node 16</li>\n</ul>\n<h3>3.0.1</h3>\n<ul>\n<li>Added support for caching from GHES 3.5.</li>\n<li>Fixed download issue for files &gt; 2GB during restore.</li>\n</ul>\n<h3>3.0.2</h3>\n<ul>\n<li>Added support for dynamic cache size cap on GHES.</li>\n</ul>\n<h3>3.0.3</h3>\n<ul>\n<li>Fixed avoiding empty cache save when no files are available for caching. (<a href=\"https://redirect.github.com/actions/cache/issues/624\">issue</a>)</li>\n</ul>\n<h3>3.0.4</h3>\n<ul>\n<li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=\"https://redirect.github.com/actions/cache/issues/689\">issue</a>)</li>\n</ul>\n<h3>3.0.5</h3>\n<ul>\n<li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=\"https://redirect.github.com/actions/cache/pull/834\">PR</a>)</li>\n</ul>\n<h3>3.0.6</h3>\n<ul>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/809\">#809</a> - zstd -d: no such file or directory error</li>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/833\">#833</a> - cache doesn't work with github workspace directory</li>\n</ul>\n<h3>3.0.7</h3>\n<ul>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/810\">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>\n</ul>\n<h3>3.0.8</h3>\n<ul>\n<li>Fix zstd not working for windows on gnu tar in issues <a href=\"https://redirect.github.com/actions/cache/issues/888\">#888</a> and <a href=\"https://redirect.github.com/actions/cache/issues/891\">#891</a>.</li>\n<li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MINS</code>. Default is 60 minutes.</li>\n</ul>\n<h3>3.0.9</h3>\n<ul>\n<li>Enhanced the warning message for cache unavailablity in case of GHES.</li>\n</ul>\n<h3>3.0.10</h3>\n<ul>\n<li>Fix a bug with sorting inputs.</li>\n<li>Update definition for restore-keys in README.md</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/cache/commit/e12d46a63a90f2fae62d114769bbf2a179198b5c\"><code>e12d46a</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/cache/issues/1302\">#1302</a> from actions/robherley/v3.3.3</li>\n<li><a href=\"https://github.com/actions/cache/commit/1baebfc3bafe03311c1239b7d001ecdf5da64951\"><code>1baebfc</code></a> licensed</li>\n<li><a href=\"https://github.com/actions/cache/commit/eb94f1a6bf968b0555b89297bc603690b68beccd\"><code>eb94f1a</code></a> cache v3.3.3</li>\n<li>See full diff in <a href=\"https://github.com/actions/cache/compare/704facf57e6136b1bc63b828d79edcd491f0ee84...e12d46a63a90f2fae62d114769bbf2a179198b5c\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3.3.2&new-version=3.3.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n</details>\n\nFixes #1689\n\nCOPYBARA_INTEGRATE_REVIEW=https://github.com/google/auto/pull/1689 from google:dependabot/github_actions/actions/cache-3.3.3 ffe42a61c4b401df38ef3e505c8283d104e7bf2b\nPiperOrigin-RevId: 597827511"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/README.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/annotations/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/processor/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/pom.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/src/test/java/com/google/auto/value/AutoAnnotationTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/src/test/java/com/google/auto/value/AutoBuilderTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/it/functional/src/test/java/com/google/auto/value/CompileWithEclipseTest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/ForwardingClassGenerator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/index.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAJwaYc5j-aNF2gAoYjkxNDJiN2NkODcyY2NhYzM3OTQ0NzBhZjE3YTlkZjU5NGU5MDEzZg",
                "url": "https://github.com/google/auto/pull/1691/commits/b9142b7cd872ccac3794470af17a9df594e9013f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1683,
                "url": "https://github.com/google/auto/issues/1683",
                "title": "Drop support for running generated code under Java 7",
                "bodyHTML": "<p dir=\"auto\">I don't know whether it's worth doing this yet. I'm filing this issue because I'm looking at adding <code class=\"notranslate\">Truth.assertThat(Stream)</code> and <code class=\"notranslate\">Truth.assertThat(Optional)</code> and, when I do so, I see <code class=\"notranslate\">AutoValueTest</code> and <code class=\"notranslate\">AutoAnnotationTest</code> start to fail to compile under our (internal?) <code class=\"notranslate\">--release 7</code> tests. I see some existing commentary in the <code class=\"notranslate\">BUILD</code> file about avoiding deps that use Java 8 on pain of cryptic error, and I notice that the code already depends on our Android copy of com.google.common, which already has some Java 8 usages in it (albeit ones that don't trigger the <code class=\"notranslate\">Symbol$CompletionFailure</code> we were apparently seeing there before).</p>\n<p dir=\"auto\">I can plug on with migrating that test's assertions to use JUnit.</p>\n<p dir=\"auto\">Or I can see if that test might be able to get away with <code class=\"notranslate\">-source 7 -target 7</code> instead of <code class=\"notranslate\">--release 7</code>. I see that it used <code class=\"notranslate\">-source 7 -target 7</code> back when it used the Java 7 toolchain, and I'm not sure if the switch to <code class=\"notranslate\">--release</code> was necessary at that point or not. Hmm, it looks like the same CL that moved it off the Java 7 toolchain actually removed the test that the code <em>runs</em> under Java 7, leaving only the test that it <em>compiles</em> with <code class=\"notranslate\">--release 7</code>. I guess that <code class=\"notranslate\">--release</code> is better at that sort of test than <code class=\"notranslate\">-source 7 -target 7</code>, so it makes sense. (This was cl/231288987.)</p>\n<p dir=\"auto\">Or maybe we're at the point that we can drop Java 7 support?</p>",
                "resourcePath": "/google/auto/issues/1683",
                "createdAt": "2024-01-08T17:20:26Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Status: accepted"
                      }
                    },
                    {
                      "node": {
                        "name": "type=other"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: *"
                      }
                    },
                    {
                      "node": {
                        "name": "P2"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "System independent newline",
        "url": "https://github.com/google/auto/pull/1695",
        "resourcePath": "/google/auto/pull/1695",
        "createdAt": "2024-01-19T12:14:03Z",
        "number": 1695,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "service/processor/src/main/java/com/google/auto/service/processor/ServicesFiles.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAJwaYc5kioBO2gAoOTA3ZDVmYWNlMjdjZmU3YjM1NDE4ZDcwZTg4MDFhYTdhMjAyMDEwNQ",
                "url": "https://github.com/google/auto/pull/1695/commits/907d5face27cfe7b35418d70e8801aa7a2020105"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1656,
                "url": "https://github.com/google/auto/issues/1656",
                "title": "Annotation Processor output is not deterministic",
                "bodyHTML": "<p dir=\"auto\">Hi,</p>\n<p dir=\"auto\">the AutoService annotation processor uses a <code class=\"notranslate\">Writer</code> for creating the <code class=\"notranslate\">META-INF/service/</code> files. Here the <code class=\"notranslate\">writer.newLine()</code> method is used to create the newlines in the file (see </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/google/auto/blob/83b16dded09d864fbe2161d30c6b27f13a0883c3/service/processor/src/main/java/com/google/auto/service/processor/ServicesFiles.java#L87\">auto/service/processor/src/main/java/com/google/auto/service/processor/ServicesFiles.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 87\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/google/auto/commit/83b16dded09d864fbe2161d30c6b27f13a0883c3\">83b16dd</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L87\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"87\"></td>\n          <td id=\"LC87\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-s1\">writer</span>.<span class=\"pl-en\">newLine</span>(); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n).<p></p>\n<p dir=\"auto\">Sadly the method uses the os specific char for newline and therefore produces <strong>non-deterministic builds</strong>.<br>\nChanging that would be an easy fix and I would be happy to provide a PR if you are interested in that.</p>",
                "resourcePath": "/google/auto/issues/1656",
                "createdAt": "2023-12-12T15:23:41Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type=addition"
                      }
                    },
                    {
                      "node": {
                        "name": "Component: service"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Updated equals check in equals?",
        "url": "https://github.com/google/auto/pull/1751",
        "resourcePath": "/google/auto/pull/1751",
        "createdAt": "2024-04-09T02:46:05Z",
        "number": 1751,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/autoannotation.vm"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/src/main/java/com/google/auto/value/processor/autovalue.vm"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/generated-builder-example.md"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "value/userguide/generated-example.md"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOAJwaYc5sFMAP2gAoODI2NzYwNGM5MWIyMGQwNjY5ZDBhYmI1ODBjYmRkNzg3NWI0NzBjZg",
                "url": "https://github.com/google/auto/pull/1751/commits/8267604c91b20d0669d0abb580cbdd7875b470cf"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 1633,
                "url": "https://github.com/google/auto/issues/1633",
                "title": "Remove `o == this` check from generated `equals`?",
                "bodyHTML": "<p dir=\"auto\">It appears that most cases <code class=\"notranslate\">o == this</code> check actually degrades performance because of branch prediction algorithms. It might be worth considering to remove it from auto-value templates. Sorry for linking to YT, but there's no article anywhere - at least I couldn't find any.</p>\n<p dir=\"auto\">Please see <a href=\"https://www.youtube.com/watch?v=kuzjX_efuDs\" rel=\"nofollow\">https://www.youtube.com/watch?v=kuzjX_efuDs</a>.</p>",
                "resourcePath": "/google/auto/issues/1633",
                "createdAt": "2023-11-09T19:54:43Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "Component: value"
                      }
                    },
                    {
                      "node": {
                        "name": "P3"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  }
]