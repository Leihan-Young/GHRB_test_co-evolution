[
  {
    "repository": {
      "pullRequest": {
        "title": "Polish #29727: Mention Kotlin andExpectAll in reference manual",
        "url": "https://github.com/spring-projects/spring-framework/pull/29766",
        "resourcePath": "/spring-projects/spring-framework/pull/29766",
        "createdAt": "2023-01-04T14:19:55Z",
        "number": 29766,
        "mergeCommit": {
          "oid": "e2832ea596908322d35f2ed3aceb300368373d8a",
          "message": "Polish #29727: Mention Kotlin andExpectAll in reference manual (#29766)\n\nThis just adds a Kotlin snippet alongside the Java snippet in the\r\nreference manual.\r\n\r\nRelates to gh-29727\r\nCloses gh-27317",
          "commitUrl": "https://github.com/spring-projects/spring-framework/commit/e2832ea596908322d35f2ed3aceb300368373d8a",
          "parents": {
            "nodes": [
              {
                "oid": "74f58198fd689408973363d00a730b5c2bf4ed14",
                "message": "Add Kotlin DSL support for MockMVC andExpectAll (#29727)\n\nAs the DSL internally calls `ResultActions.andExpect`, this is done with\r\na trick where a synthetic `ResultActions` is provided at top level which\r\nstores each `ResultMatcher` in a mutable list.\r\n\r\nOnce the DSL usage is done, the top level DSL `andExpectAll` turns that\r\nlist into a `vararg` passed down to the actual `actions.andExpectAll`.\r\n\r\nCloses gh-27317"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/src/docs/asciidoc/testing/spring-mvc-test-framework.adoc"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5GoWjs2gAoMGI5YWVmMzA4NGFlMTQ5MTE1OTQ2MmE5YjUzZTRlOGVlOWNhODUyNw",
                "url": "https://github.com/spring-projects/spring-framework/pull/29766/commits/0b9aef3084ae1491159462a9b53e4e8ee9ca8527"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 27317,
                "url": "https://github.com/spring-projects/spring-framework/issues/27317",
                "title": "Introduce Kotlin DSL for `ResultActions.andExpectAll()`",
                "bodyHTML": "<h2 dir=\"auto\">Overview</h2>\n<p dir=\"auto\">Commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/spring-projects/spring-framework/commit/dd9b99e13d6b30462fb168799e6bbca1456123da/hovercard\" href=\"https://github.com/spring-projects/spring-framework/commit/dd9b99e13d6b30462fb168799e6bbca1456123da\"><tt>dd9b99e</tt></a> introduced <code class=\"notranslate\">ResultActions.andExpectAll()</code> to support <em>soft assertions</em> in <code class=\"notranslate\">MockMvc</code>.</p>\n<p dir=\"auto\"><code class=\"notranslate\">ResultActionsDsl.kt</code> already has support for <code class=\"notranslate\">andExpect()</code>.</p>\n<h2 dir=\"auto\">Related Issues</h2>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"977255457\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/27318\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/27318/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/27318\">#27318</a></li>\n</ul>\n<h2 dir=\"auto\">Deliverables</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Introduce Kotlin support for <code class=\"notranslate\">ResultActions.andExpectAll()</code> in <code class=\"notranslate\">ResultActionsDsl.kt</code>. =&gt; <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1506561441\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/29727\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/spring-projects/spring-framework/pull/29727/hovercard\" href=\"https://github.com/spring-projects/spring-framework/pull/29727\">#29727</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Add a Kotlin example using <code class=\"notranslate\">andExpectAll()</code> in the reference manual alongside the Java example introduced in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/spring-projects/spring-framework/commit/dd9b99e13d6b30462fb168799e6bbca1456123da/hovercard\" href=\"https://github.com/spring-projects/spring-framework/commit/dd9b99e13d6b30462fb168799e6bbca1456123da\"><tt>dd9b99e</tt></a>. =&gt; <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1519061706\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/29766\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/spring-projects/spring-framework/pull/29766/hovercard\" href=\"https://github.com/spring-projects/spring-framework/pull/29766\">#29766</a></li>\n</ul>",
                "resourcePath": "/spring-projects/spring-framework/issues/27317",
                "createdAt": "2021-08-23T14:08:07Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: test"
                      }
                    },
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    },
                    {
                      "node": {
                        "name": "theme: kotlin"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Log `CglibAopProxy` errors as `WARN` instead of `INFO`",
        "url": "https://github.com/spring-projects/spring-framework/pull/29773",
        "resourcePath": "/spring-projects/spring-framework/pull/29773",
        "createdAt": "2023-01-05T17:07:40Z",
        "number": 29773,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-aop/src/main/java/org/springframework/aop/framework/CglibAopProxy.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5GvTfp2gAoZDA0OTQzMGFhYzM5MzhjZDFkZWM0MTdlM2RkNDI1YjdkYzY3NTIzNw",
                "url": "https://github.com/spring-projects/spring-framework/pull/29773/commits/d049430aac3938cd1dec417e3dd425b7dc675237"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29453,
                "url": "https://github.com/spring-projects/spring-framework/issues/29453",
                "title": "CglibAopProxy errors should be logged as warning ",
                "bodyHTML": "<p dir=\"auto\">Good morning ,</p>\n<p dir=\"auto\">I'm not a usual committer, but if someone has 5 minutes...</p>\n<p dir=\"auto\">The following types of errors should be logged as <code class=\"notranslate\">WARNING</code> or <code class=\"notranslate\">ERROR</code> instead of <code class=\"notranslate\">INFO</code>.</p>\n<blockquote>\n<p dir=\"auto\">INFO 67074 --- [           main] o.s.aop.framework.CglibAopProxy          : Unable to proxy interface-implementing method [public final void org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices.loginFail(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)] because it is marked as final: Consider using interface-based JDK proxies instead!</p>\n</blockquote>\n<p dir=\"auto\">I've spent 2 days investigating the issue, and it was an <code class=\"notranslate\">@Transactional</code> annotation added to my (Kotlin ) custom implementation of the <code class=\"notranslate\">AbstractRememberMeServices</code> which together with final methods in the abstract class caused this very difficult to spot behavior.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/29453",
                "createdAt": "2022-11-09T10:08:43Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Improve generated default name for `@JmsListener` subscription",
        "url": "https://github.com/spring-projects/spring-framework/pull/29790",
        "resourcePath": "/spring-projects/spring-framework/pull/29790",
        "createdAt": "2023-01-10T07:28:12Z",
        "number": 29790,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-jms/src/main/java/org/springframework/jms/listener/adapter/MessagingMessageListenerAdapter.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5HC36w2gAoZThkZWY5ZGI0YmVmNTI3ZjY1MWZhNzgyNGNhZDkxNmNkMDAxYjA4ZA",
                "url": "https://github.com/spring-projects/spring-framework/pull/29790/commits/e8def9db4bef527f651fa7824cad916cd001b08d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29763,
                "url": "https://github.com/spring-projects/spring-framework/issues/29763",
                "title": "Wrong default name of the JMS subscription",
                "bodyHTML": "<p dir=\"auto\">I have a Spring application that uses annotation driven JMS listeners, i.e. I have some classes with methods annotated with <code class=\"notranslate\">@JmsListener</code>. In this annotation, I do not set the attribute <code class=\"notranslate\">subscription</code>.</p>\n<p dir=\"auto\">However, since I want to work with topics (rather than queues) and use durable subsribers, I have configured a <code class=\"notranslate\">JmsListenerContainerFactory</code> and set its property <code class=\"notranslate\">subscriptionDurable</code> to <code class=\"notranslate\">true</code>.</p>\n<p dir=\"auto\">Now I expect all the JmsListeners to be durable and have sensible subscription names.</p>\n<p dir=\"auto\">However, in the JMS admin tool, I see that all the subscriptions have the same name: <code class=\"notranslate\">org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter</code>.</p>\n<p dir=\"auto\">I'd expect the default subscription name to be something like <code class=\"notranslate\">&lt;className&gt;.&lt;methodName&gt;</code> (where \"className\" is the class that contains the method annotated with <code class=\"notranslate\">@JmsListener</code>), but not always the same. This can even lead to an error where several JmsListeners will overwrite each other's subscriptions.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/29763",
                "createdAt": "2023-01-04T09:13:56Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: messaging"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support decoding empty DataBuffers for Decoders that support it",
        "url": "https://github.com/spring-projects/spring-framework/pull/29903",
        "resourcePath": "/spring-projects/spring-framework/pull/29903",
        "createdAt": "2023-01-30T17:52:03Z",
        "number": 29903,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/core/codec/Decoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/core/codec/Netty5BufferDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/core/codec/NettyByteBufDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/core/codec/ResourceDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/core/codec/StringDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/testFixtures/java/org/springframework/core/testfixture/codec/AbstractDecoderTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/reactive/PayloadMethodArgumentResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-messaging/src/test/java/org/springframework/messaging/rsocket/RSocketClientToServerIntegrationTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/http/codec/protobuf/ProtobufDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/java/org/springframework/http/codec/protobuf/ProtobufDecoderTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5I1tUO2gAoMGQwM2UyY2M3MGQzNzAxNmE0NGU3MmNhOTQyOWY0ZWUxN2NjNTcxMQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/29903/commits/0d03e2cc70d37016a44e72ca9429f4ee17cc5711"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29898,
                "url": "https://github.com/spring-projects/spring-framework/issues/29898",
                "title": "Messaging: PayloadMethodArgumentResolver should call certain Decoders even if the message is empty",
                "bodyHTML": "<p dir=\"auto\">Affects: Spring-Messaging 6.0.3</p>\n<p dir=\"auto\">I am currently implementing an application, that uses Protobuf over RSocket for communication.<br>\nIn Protobuf, I can define a message sent to my application like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"message ProductsRequest {\n  optional string id = 1;\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">message ProductsRequest {\n  optional string id = 1;\n}\n</code></pre></div>\n<p dir=\"auto\">My MessageHandler is then defined like this:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@MessageMapping(&quot;products&quot;)\npublic Mono&lt;ProductsResponse&gt; handle(ProductsRequest request) {\n    // implementaion\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">MessageMapping</span>(<span class=\"pl-s\">\"products\"</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-smi\">Mono</span>&lt;<span class=\"pl-smi\">ProductsResponse</span>&gt; <span class=\"pl-s1\">handle</span>(<span class=\"pl-smi\">ProductsRequest</span> <span class=\"pl-s1\">request</span>) {\n    <span class=\"pl-c\">// implementaion</span>\n}</pre></div>\n<p dir=\"auto\">The request may contain an id, but it may be omitted.<br>\nIn case the id is omitted, the message is encoded as an empty buffer (as per Protobuf spec).</p>\n<p dir=\"auto\">However, in the class <code class=\"notranslate\">org.springframework.messaging.handler.annotation.reactive.PayloadMethodArgumentResolver</code>, empty buffers are never passed to the decoder, and instead immediately filtered out. (via <code class=\"notranslate\">.filter(this::nonEmptyDataBuffer)</code>, which then results in an error because the MessageHandler's argument cannot be resolved.</p>\n<p dir=\"auto\">I understand that this behavior is reasonable for a lot of decoders, however in the case of Protobuf is a nuisance.</p>\n<p dir=\"auto\">I think the best way to implement this is to add a property to the decoder (\"can decode empty\") and then filter or not, based on this property. I would gladly spend some time on this and come up with a pull request, but I wanted to have some guidance first, to not sent a crappy pull request.</p>\n<p dir=\"auto\">So, roughly, how should this be implemented?</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/29898",
                "createdAt": "2023-01-30T10:14:51Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: messaging"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix RFC-7807 content negotiation",
        "url": "https://github.com/spring-projects/spring-framework/pull/29918",
        "resourcePath": "/spring-projects/spring-framework/pull/29918",
        "createdAt": "2023-02-02T11:20:22Z",
        "number": 29918,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessorTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessorTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5JGXh82gAoNWE1YTU5YzM3OTAwZTM1NWEwODUzYWM3OWE0NTU0MjM1Y2RjY2RkYQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/29918/commits/5a5a59c37900e355a0853ac79a4554235cdccdda"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29588,
                "url": "https://github.com/spring-projects/spring-framework/issues/29588",
                "title": "Prefer problem detail media type independent of ordering in Accept header",
                "bodyHTML": "<p dir=\"auto\">While replacing a custom implementation of Problem Details by the new one that came with Spring 6 I was puzzled by how content negotiation is implemented. I'm currently using Spring Boot 3.0.0 with Spring 6.0.2.</p>\n<p dir=\"auto\">I'm getting a Content-Type <code class=\"notranslate\">application/problem+json</code> as expected when sending no accept header or <code class=\"notranslate\">Accept: */*</code> or <code class=\"notranslate\">Accept: application/problem+json, application/json</code>.</p>\n<p dir=\"auto\">I also expected to receive a Problem Details JSON with Content-Type <code class=\"notranslate\">application/problem+json</code> when sending <code class=\"notranslate\">Accept: application/json</code>. But that might be correct - it doesn't seem to be clearly defined by <a href=\"https://www.rfc-editor.org/rfc/rfc7807.html\" rel=\"nofollow\">RFC 7807</a>.</p>\n<p dir=\"auto\">Clearly a bug, seems that I'm still getting Content-Type <code class=\"notranslate\">application/json</code> when sending <code class=\"notranslate\">Accept: application/json, application/problem+json</code>. See also:</p>\n<blockquote>\n<p dir=\"auto\">Message converters and encoders indicate a preference for <code class=\"notranslate\">application/problem+json</code> when ProblemType is serialized. This ensures <code class=\"notranslate\">application/problem+json</code> is preferred when the client is flexible or has no preference.</p>\n</blockquote>\n<p dir=\"auto\">from: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1171393234\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/28189\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/28189/hovercard?comment_id=1121378986&amp;comment_type=issue_comment\" href=\"https://github.com/spring-projects/spring-framework/issues/28189#issuecomment-1121378986\">#28189 (comment)</a></p>",
                "resourcePath": "/spring-projects/spring-framework/issues/29588",
                "createdAt": "2022-11-27T07:32:29Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add an option to disable LazyConnectionDataSourceProxy eager checkDefaultConnectionProperties call",
        "url": "https://github.com/spring-projects/spring-framework/pull/29932",
        "resourcePath": "/spring-projects/spring-framework/pull/29932",
        "createdAt": "2023-02-05T17:28:39Z",
        "number": 29932,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-jdbc/src/main/java/org/springframework/jdbc/datasource/LazyConnectionDataSourceProxy.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5JSSun2gAoMjllNzI2NGMwYzE0Y2Q0NzZlZDg4MzhjMzg4ZDg5Y2MxMjVkYTBiYw",
                "url": "https://github.com/spring-projects/spring-framework/pull/29932/commits/29e7264c0c14cd476ed8838c388d89cc125da0bc"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29931,
                "url": "https://github.com/spring-projects/spring-framework/issues/29931",
                "title": "Avoid eager checkDefaultConnectionProperties call in LazyConnectionDataSourceProxy",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong> 6.0.2</p>\n<p dir=\"auto\">On <code class=\"notranslate\">afterPropertiesSet</code>, <code class=\"notranslate\">LazyConnectionDataSourceProxy</code> opens a connection to determine <code class=\"notranslate\">defaultAutoCommit</code> and <code class=\"notranslate\">defaultTransactionIsolation</code>. In case of exception, the latter is trapped, leading <code class=\"notranslate\">LazyConnectionDataSourceProxy</code> to determine those properties when the connection is effectively requested by a consumer.</p>\n<p dir=\"auto\">We use TestContainer to test our database interactions. The database startup takes a few seconds. To reduce test startup time, we start the database in a separate thread while the Spring context is initializing. <code class=\"notranslate\">LazyConnectionDataSourceProxy#checkDefaultConnectionProperties</code> is the first consumer that makes the Spring Context initialization wait on the database startup thread.</p>\n<p dir=\"auto\">It would be nice to have an option allowing to disable this <code class=\"notranslate\">eager check</code>.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/29931",
                "createdAt": "2023-02-05T17:12:54Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: data"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": " Update documentation according to Testcontainers example",
        "url": "https://github.com/spring-projects/spring-framework/pull/29937",
        "resourcePath": "/spring-projects/spring-framework/pull/29937",
        "createdAt": "2023-02-07T08:54:56Z",
        "number": 29937,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/main/java/org/springframework/test/context/DynamicPropertySource.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5JaSmR2gAoOTUwZWNmMWM1OGJmZWMzMTIwMGFmMmQ4MTc1MjQ3ODdjYTk4NDI1OA",
                "url": "https://github.com/spring-projects/spring-framework/pull/29937/commits/950ecf1c58bfec31200af2d817524787ca984258"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29936,
                "url": "https://github.com/spring-projects/spring-framework/issues/29936",
                "title": "Update documentation according to testcontainer example",
                "bodyHTML": "<p dir=\"auto\">According to the testcontainer example the container should be started first. Otherwise it could lead to container port mapping problems.<br>\nSee: <a href=\"https://github.com/testcontainers/testcontainers-java/blob/main/examples/spring-boot/src/test/java/com/example/AbstractIntegrationTest.java\">https://github.com/testcontainers/testcontainers-java/blob/main/examples/spring-boot/src/test/java/com/example/AbstractIntegrationTest.java</a></p>",
                "resourcePath": "/spring-projects/spring-framework/issues/29936",
                "createdAt": "2023-02-07T08:51:25Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: test"
                      }
                    },
                    {
                      "node": {
                        "name": "type: documentation"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow MockRest to match header/queryParam value list with one Matcher",
        "url": "https://github.com/spring-projects/spring-framework/pull/29953",
        "resourcePath": "/spring-projects/spring-framework/pull/29953",
        "createdAt": "2023-02-09T16:28:36Z",
        "number": 29953,
        "mergeCommit": {
          "oid": "189d4e3e4ceada4466796a19d823116512436551",
          "message": "Allow MockRest to match header/queryParam value list with one Matcher\n\nThis commit adds a `header` variant and a `queryParam` variant to the\r\n`MockRestRequestMatchers` API which take a single `Matcher` over the\r\nlist of values.\r\n\r\nContrary to the vararg variants, the whole list is evaluated and the\r\ncaller can choose the desired semantics using readily-available iterable\r\nmatchers like `everyItem`, `hasItems`, `hasSize`, `contains` or\r\n`containsInAnyOrder`...\r\n\r\nThe fact that the previous variants don't strictly check the size of the\r\nactual list == the number of provided matchers or expected values is\r\nnow documented in their respective javadocs.\r\n\r\nSee gh-28660\r\nCloses gh-29953",
          "commitUrl": "https://github.com/spring-projects/spring-framework/commit/189d4e3e4ceada4466796a19d823116512436551",
          "parents": {
            "nodes": [
              {
                "oid": "79a1fcb099fc01754b91a2baec5bddafea47eddc",
                "message": "Polishing DataBuffer::write(CharSequence, Charset)\n\nSee gh-29943"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/main/java/org/springframework/test/web/client/match/MockRestRequestMatchers.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/test/java/org/springframework/test/web/client/match/MockRestRequestMatchersTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5Joq932gAoYzY2MmIzMWVjMWU2MTVlOTFiMzBhMjViZGYwNjFjNjI1ZGVlZjI5Yw",
                "url": "https://github.com/spring-projects/spring-framework/pull/29953/commits/c662b31ec1e615e91b30a25bdf061c625deef29c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 28660,
                "url": "https://github.com/spring-projects/spring-framework/issues/28660",
                "title": "Add support in `MockRestServiceServer` to assert ALL `header` and `queryParam` values with a single `Matcher`",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong> 5.3.21</p>\n<hr>\n<p dir=\"auto\">The current API for <code class=\"notranslate\">MockRestServiceServer</code> and <code class=\"notranslate\">MockRestRequestMatchers</code> does not allow a test to validate that all values of a certain header key satisfy a matcher. Trying to do</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\".andExpect(header(&quot;Accept&quot;, endsWith(&quot;json&quot;)))\"><pre class=\"notranslate\">.<span class=\"pl-en\">andExpect</span>(<span class=\"pl-en\">header</span>(<span class=\"pl-s\">\"Accept\"</span>, <span class=\"pl-en\">endsWith</span>(<span class=\"pl-s\">\"json\"</span>)))</pre></div>\n<p dir=\"auto\">does not work because it passes if the first value for the header ends with <code class=\"notranslate\">\"json\"</code>. I would like to be able to do something like this:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\".andExpect(header(&quot;Accept&quot;, allMatch(endsWith(&quot;json&quot;))))\"><pre class=\"notranslate\">.<span class=\"pl-en\">andExpect</span>(<span class=\"pl-en\">header</span>(<span class=\"pl-s\">\"Accept\"</span>, <span class=\"pl-en\">allMatch</span>(<span class=\"pl-en\">endsWith</span>(<span class=\"pl-s\">\"json\"</span>))))</pre></div>\n<p dir=\"auto\">or something to that effect.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/28660",
                "createdAt": "2022-06-20T07:49:05Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: test"
                      }
                    },
                    {
                      "node": {
                        "name": "status: backported"
                      }
                    },
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Propagate WebClient attributes into underlying HTTP client request where possible",
        "url": "https://github.com/spring-projects/spring-framework/pull/29958",
        "resourcePath": "/spring-projects/spring-framework/pull/29958",
        "createdAt": "2023-02-11T14:20:40Z",
        "number": 29958,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/http/client/reactive/JettyClientHttpRequest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpConnector.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/http/client/reactive/ReactorClientHttpRequest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/http/client/reactive/ReactorNetty2ClientHttpConnector.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/http/client/reactive/ReactorNetty2ClientHttpRequest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/testFixtures/java/org/springframework/web/testfixture/http/client/reactive/MockClientHttpRequest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultClientRequestBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClientBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/WebClient.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/test/java/org/springframework/web/reactive/function/client/WebClientIntegrationTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5Jxjwx2gAoYmZlOTQ1YzJmMjllOTE0ODQ2ZDY4N2IzMzdmMmQ1YTljZWVhODc1Mg",
                "url": "https://github.com/spring-projects/spring-framework/pull/29958/commits/bfe945c2f29e914846d687b337f2d5a9ceea8752"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 26208,
                "url": "https://github.com/spring-projects/spring-framework/issues/26208",
                "title": "Passing attributes from `WebClient` to underlying HTTP library",
                "bodyHTML": "<p dir=\"auto\">Hello,</p>\n<p dir=\"auto\">We are trying to enable communication logging (low level HTTP logging) for requests and responses processed with <code class=\"notranslate\">WebClient</code>. There is a good tutorial on how to approach the simplest case which I've followed to get the initial results - <a href=\"https://www.baeldung.com/spring-log-webclient-calls#1-logging-with-jetty-httpclient\" rel=\"nofollow\">Link to Baeldung</a>.</p>\n<p dir=\"auto\">However, HTTP logging in our company is a bit more complex simply just calling SLF4J. In certain cases we need to provide extra context paired to request/response, so that other tooling can correctly process those logs (some internal IDs). We've identified the <code class=\"notranslate\">attributes</code> feature as potentially the cleanest way to pass additional context to the underlying library, seeing how they are present on <code class=\"notranslate\">WebClient</code> API as well as both Netty and Jetty libraries. However, it seems that the attributes are not copied from <code class=\"notranslate\">WebClient</code> model to the Netty/Jetty model.</p>\n<p dir=\"auto\">As a workaround, we are currently wrapping the Request/Response spec to add additional behavior on <code class=\"notranslate\">WebClient</code> side.</p>\n<p dir=\"auto\">So the question is - are attributes the right way of solving cases like this and how would one go about adding support for copying attributes from <code class=\"notranslate\">WebClient</code> request to underlying library request?</p>\n<p dir=\"auto\">I've found no relevant discussions and this seems to be a useful enhancement.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/26208",
                "createdAt": "2020-12-03T15:23:45Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "reactive ControllerMethodResolver - introduce InvocableHandlerMethod cache",
        "url": "https://github.com/spring-projects/spring-framework/pull/29980",
        "resourcePath": "/spring-projects/spring-framework/pull/29980",
        "createdAt": "2023-02-15T19:46:40Z",
        "number": 29980,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/ControllerMethodResolver.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5KEMgv2gAoODI5NjI0YTZmNThhOTdkMDM4NmEwNzgxN2Y3ODMxM2RjMzE5ODAxOQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/29980/commits/829624a6f58a97d0386a07817f78313dc3198019"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29951,
                "url": "https://github.com/spring-projects/spring-framework/issues/29951",
                "title": "Introduce global cache for reactive argument resolvers",
                "bodyHTML": "<p dir=\"auto\">Hi team.<br>\nIt seems that in the current flow of invoking a RequestMapping endpoint,<br>\n<code class=\"notranslate\">org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter#handle</code> is creating a new <code class=\"notranslate\">org.springframework.web.reactive.result.method.InvocableHandlerMethod</code> for each new request (might be worth caching?), which then creates a new <code class=\"notranslate\">org.springframework.web.reactive.result.method.HandlerMethodArgumentResolverComposite</code> that seems to cache the argument resolvers, but is only valid for this single invocation.</p>\n<p dir=\"auto\">My suggestion is to make the <code class=\"notranslate\">HandlerMethodArgumentResolver#argumentResolverCache</code> inside <code class=\"notranslate\">HandlerMethodArgumentResolverComposite</code> static to allow caching the resolvers between invocations, as the <code class=\"notranslate\">supportsParameter()</code> seems like a pure function, as well as most implementations are using reflections to get the methods/arguments annotations which is not cheap.</p>\n<p dir=\"auto\">Thanks</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/29951",
                "createdAt": "2023-02-09T11:12:30Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add test support to record async events, with JUnit Jupiter caveat",
        "url": "https://github.com/spring-projects/spring-framework/pull/30020",
        "resourcePath": "/spring-projects/spring-framework/pull/30020",
        "createdAt": "2023-02-23T16:41:43Z",
        "number": 30020,
        "mergeCommit": {
          "oid": "b39e93d0d149459f28d61b19f3409d4b64165233",
          "message": "Add test support to record async events, with Junit5 caveat\n\nThis commit modifies the way the `@RecordApplicationEvents` annotation\nworks in tests, allowing for capture of events from threads other than\nthe main test thread (async events) and for the assertion of captured\nevent from a separate thread (e.g. when using `Awaitility`).\n\nThis is done by switching the `ApplicationEventsHolder` to use an\n`InheritedThreadLocal`.\n\nThere is a mutual exclusion between support of asynchronous events vs\nsupport of JUnit5 parallel tests with the `@TestInstance(PER_CLASS)`\nmode. As a result, we favor the former and now `SpringExtension` will\ninvalidate a test class that is annotated (or meta-annotated, or\nenclosed-annotated) with `@RecordApplicationEvents` AND\n`@TestInstance(PER_CLASS)` AND `@Execution(CONCURRENT)`.\n\nSee gh-29827\nCloses gh-30020",
          "commitUrl": "https://github.com/spring-projects/spring-framework/commit/b39e93d0d149459f28d61b19f3409d4b64165233",
          "parents": {
            "nodes": [
              {
                "oid": "906c54faffc75721b98f9b9cf63d35edd81f7b4f",
                "message": "Add SpEL support for registered MethodHandles\n\nThis commit adds support for MethodHandles in SpEL, using the same\nsyntax as user-defined functions (which also covers reflective Methods).\n\nThe most benefit is expected with handles that capture a static method\nwith no arguments, or with fully bound handles (where all the arguments\nhave been bound, including a target instance as first bound argument\nif necessary). Partially bound MethodHandle should also be supported.\n\nA best effort approach is taken to detect varargs as there is no API\nsupport to determine if an argument is a vararg or an explicit array,\nunlike with Method. Argument conversions are also applied. Finally,\narray repacking is not always necessary with varargs so it is only\nperformed when the vararg is the sole argument to the invoked method.\n\nSee gh-27099\nCloses gh-30045"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/spring-test.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/main/java/org/springframework/test/context/event/ApplicationEventsHolder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/main/java/org/springframework/test/context/event/DefaultApplicationEvents.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/main/java/org/springframework/test/context/junit/jupiter/SpringExtension.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/test/java/org/springframework/test/context/junit/jupiter/event/JUnitJupiterApplicationEventsIntegrationTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/test/java/org/springframework/test/context/junit/jupiter/event/ParallelApplicationEventsIntegrationTests.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-test/src/test/java/org/springframework/test/context/junit4/event/JUnit4ApplicationEventsAsyncIntegrationTests.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-test/src/test/java/org/springframework/test/context/testng/event/TestNGApplicationEventsAsyncIntegrationTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5Kn7wW2gAoZjI2OWE4MGVmNzZkY2RkYjE1MjkzNDViMjIxZTlhMzVjZWQ2OGU5Mg",
                "url": "https://github.com/spring-projects/spring-framework/pull/30020/commits/f269a80ef76dcddb1529345b221e9a35ced68e92"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29827,
                "url": "https://github.com/spring-projects/spring-framework/issues/29827",
                "title": "`@RecordApplicationEvents` should record events from spawned threads, too",
                "bodyHTML": "<p dir=\"auto\">The infrastructure behind <code class=\"notranslate\">@RecordApplicationEvents</code> currently uses a <code class=\"notranslate\">ThreadLocal</code> to capture application events published by the current thread. Unfortunately, this rules out events published by asynchronous event listeners in turn. It would be nice if events would be captured that are published on threads spawned by the current execution thread.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/29827",
                "createdAt": "2023-01-16T14:37:28Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: test"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add SpEL support for registered MethodHandles",
        "url": "https://github.com/spring-projects/spring-framework/pull/30045",
        "resourcePath": "/spring-projects/spring-framework/pull/30045",
        "createdAt": "2023-02-27T19:05:37Z",
        "number": 30045,
        "mergeCommit": {
          "oid": "906c54faffc75721b98f9b9cf63d35edd81f7b4f",
          "message": "Add SpEL support for registered MethodHandles\n\nThis commit adds support for MethodHandles in SpEL, using the same\nsyntax as user-defined functions (which also covers reflective Methods).\n\nThe most benefit is expected with handles that capture a static method\nwith no arguments, or with fully bound handles (where all the arguments\nhave been bound, including a target instance as first bound argument\nif necessary). Partially bound MethodHandle should also be supported.\n\nA best effort approach is taken to detect varargs as there is no API\nsupport to determine if an argument is a vararg or an explicit array,\nunlike with Method. Argument conversions are also applied. Finally,\narray repacking is not always necessary with varargs so it is only\nperformed when the vararg is the sole argument to the invoked method.\n\nSee gh-27099\nCloses gh-30045",
          "commitUrl": "https://github.com/spring-projects/spring-framework/commit/906c54faffc75721b98f9b9cf63d35edd81f7b4f",
          "parents": {
            "nodes": [
              {
                "oid": "d3c3088c6ba27a5a6d7f458a76f5d91320aaf828",
                "message": "Clarify behavior of the Elvis SpEL operator in documentation (#30352)\n\nThis commit improves both the javadoc and the reference guide section on\r\nthe Elvis SpEL operator to clarify that in addition to `null` objects,\r\nempty Strings also lead the operator to evaluate to its second operand.\r\n\r\nThe reference guide's advanced snippet is modified to use such an empty\r\nString instead of `null` to make that behavior prominent with some code.\r\n\r\nSee gh-30318\r\nCloses gh-30352"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/modules/ROOT/pages/core/expressions.adoc"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/modules/ROOT/pages/core/expressions/language-ref.adoc"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/modules/ROOT/pages/core/expressions/language-ref/functions.adoc"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-expression/src/main/java/org/springframework/expression/spel/ast/FunctionReference.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-expression/src/main/java/org/springframework/expression/spel/support/ReflectionHelper.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-expression/src/main/java/org/springframework/expression/spel/support/StandardEvaluationContext.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-expression/src/test/java/org/springframework/expression/spel/ExpressionLanguageScenarioTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-expression/src/test/java/org/springframework/expression/spel/SpelDocumentationTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-expression/src/test/java/org/springframework/expression/spel/TestScenarioCreator.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5K3QKj2gAoODhhNTE2N2JmMGNkNjM4ODMxMGQ3MTZmNzk4M2RkYmJlOTExNTZjNQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30045/commits/88a5167bf0cd6388310d716f7983ddbbe91156c5"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 27099,
                "url": "https://github.com/spring-projects/spring-framework/issues/27099",
                "title": "SpEL FunctionReference could support MethodHandle",
                "bodyHTML": "<p dir=\"auto\">A SpEL <code class=\"notranslate\">FunctionReference</code> is currently limited to a <strong>static</strong> <code class=\"notranslate\">Method</code> object, limiting what it can do drastically.</p>\n<p dir=\"auto\">Oddly enough, the source code seems to imply that it could reference something else than a static Method, but if I'm not mistaken, there is only one code path, failing early with an exception if the method is not a static method:</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/spring-projects/spring-framework/blob/a2ef6badc4c76790128910851fdde0df55ec15f9/spring-expression/src/main/java/org/springframework/expression/spel/ast/FunctionReference.java#L73-L77\">spring-framework/spring-expression/src/main/java/org/springframework/expression/spel/ast/FunctionReference.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 73 to 77\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/spring-projects/spring-framework/commit/a2ef6badc4c76790128910851fdde0df55ec15f9\">a2ef6ba</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L73\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"73\"></td>\n          <td id=\"LC73\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (!(<span class=\"pl-s1\">value</span>.<span class=\"pl-en\">getValue</span>() <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">Method</span>)) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L74\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"74\"></td>\n          <td id=\"LC74\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-c\">// Possibly a static Java method registered as a function</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L75\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"75\"></td>\n          <td id=\"LC75\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SpelEvaluationException</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L76\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"76\"></td>\n          <td id=\"LC76\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t<span class=\"pl-smi\">SpelMessage</span>.<span class=\"pl-c1\">FUNCTION_REFERENCE_CANNOT_BE_INVOKED</span>, <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">name</span>, <span class=\"pl-s1\">value</span>.<span class=\"pl-en\">getClass</span>()); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L77\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"77\"></td>\n          <td id=\"LC77\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">then later:<br>\n</p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/spring-projects/spring-framework/blob/a2ef6badc4c76790128910851fdde0df55ec15f9/spring-expression/src/main/java/org/springframework/expression/spel/ast/FunctionReference.java#L105-L108\">spring-framework/spring-expression/src/main/java/org/springframework/expression/spel/ast/FunctionReference.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 105 to 108\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/spring-projects/spring-framework/commit/a2ef6badc4c76790128910851fdde0df55ec15f9\">a2ef6ba</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L105\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"105\"></td>\n          <td id=\"LC105\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (!<span class=\"pl-smi\">Modifier</span>.<span class=\"pl-en\">isStatic</span>(<span class=\"pl-s1\">method</span>.<span class=\"pl-en\">getModifiers</span>())) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L106\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"106\"></td>\n          <td id=\"LC106\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SpelEvaluationException</span>(<span class=\"pl-en\">getStartPosition</span>(), </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L107\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"107\"></td>\n          <td id=\"LC107\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t<span class=\"pl-smi\">SpelMessage</span>.<span class=\"pl-c1\">FUNCTION_MUST_BE_STATIC</span>, <span class=\"pl-smi\">ClassUtils</span>.<span class=\"pl-en\">getQualifiedMethodName</span>(<span class=\"pl-s1\">method</span>), <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">name</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L108\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"108\"></td>\n          <td id=\"LC108\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">Anyways, it would be nice if <code class=\"notranslate\">FunctionReference</code> could actually reference a <code class=\"notranslate\">MethodHandle</code>, thus capturing a receiver (or even more context) that wouldn't have to leak in the signature to the \"function\".</p>\n<p dir=\"auto\">Are there any show stoppers for this? AFAIU, compilation to bytecode is optional, so even that shouldn't be a problem (but maybe it is actually possible). Happy to work on a PR for this if deemed acceptable.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/27099",
                "createdAt": "2021-06-25T11:09:22Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Prefer request hostName and hostPort in ReactorServerHttpRequest",
        "url": "https://github.com/spring-projects/spring-framework/pull/30062",
        "resourcePath": "/spring-projects/spring-framework/pull/30062",
        "createdAt": "2023-03-02T09:05:51Z",
        "number": 30062,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-platform/framework-platform.gradle"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpRequest.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5LG2tR2gAoN2ZmZjBkMzMzYmE4YjhiYmYzNjIyNzdlNTZjMjIwZDVhZjJhYzU1MQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30062/commits/7fff0d333ba8b8bbf362277e56c220d5af2ac551"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30033,
                "url": "https://github.com/spring-projects/spring-framework/issues/30033",
                "title": "Server request URL with spring-webflux 6.0.5 is in resolved IP6 format",
                "bodyHTML": "<p dir=\"auto\">After upgrade to spring boot 3.0.3, <strong>Swagger authorization</strong> stopped working on <code class=\"notranslate\">http://localhost:8080</code>.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5756904/221354661-2474985f-fec3-46b6-9c49-5941e4acaf0f.png\"><img src=\"https://user-images.githubusercontent.com/5756904/221354661-2474985f-fec3-46b6-9c49-5941e4acaf0f.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">The issue is caused by changed method:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"private static URI resolveBaseUrl(HttpServerRequest request) throws URISyntaxException {\n\t\tString scheme = getScheme(request);\n\n\t\tInetSocketAddress hostAddress = request.hostAddress();\n\t\t...\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">URI</span> <span class=\"pl-s1\">resolveBaseUrl</span>(<span class=\"pl-smi\">HttpServerRequest</span> <span class=\"pl-s1\">request</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">URISyntaxException</span> {\n\t\t<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">scheme</span> = <span class=\"pl-en\">getScheme</span>(<span class=\"pl-s1\">request</span>);\n\n\t\t<span class=\"pl-smi\">InetSocketAddress</span> <span class=\"pl-s1\">hostAddress</span> = <span class=\"pl-s1\">request</span>.<span class=\"pl-en\">hostAddress</span>();\n\t\t...\n}</pre></div>\n<p dir=\"auto\">From:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"private static URI resolveBaseUrl(HttpServerRequest request) throws URISyntaxException {\n\t\tString scheme = getScheme(request);\n\t\tString header = request.requestHeaders().get(HttpHeaderNames.HOST);\n\t\t...\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">URI</span> <span class=\"pl-s1\">resolveBaseUrl</span>(<span class=\"pl-smi\">HttpServerRequest</span> <span class=\"pl-s1\">request</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">URISyntaxException</span> {\n\t\t<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">scheme</span> = <span class=\"pl-en\">getScheme</span>(<span class=\"pl-s1\">request</span>);\n\t\t<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">header</span> = <span class=\"pl-s1\">request</span>.<span class=\"pl-en\">requestHeaders</span>().<span class=\"pl-en\">get</span>(<span class=\"pl-smi\">HttpHeaderNames</span>.<span class=\"pl-c1\">HOST</span>);\n\t\t...\n}</pre></div>\n<p dir=\"auto\">The root cause of issue is that instead of resolving host to <code class=\"notranslate\">http://localhost</code>, it resolves <code class=\"notranslate\">http://[0:0:0:0:0:0:0:1]</code>.</p>\n<p dir=\"auto\">The main functionality of swagger works with this IP address, but <strong>authorization fails</strong> because it redirects to:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/5756904/221354738-6f282ff7-180f-4cfa-bf95-fc18c0f7a3dc.png\"><img src=\"https://user-images.githubusercontent.com/5756904/221354738-6f282ff7-180f-4cfa-bf95-fc18c0f7a3dc.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">To fix that issue I can set <code class=\"notranslate\">server.address</code>, but then it breaks accessing swagger by external IP.</p>\n<p dir=\"auto\">I found the issue after checking swagger, but rest of application works fine. Should openapi be fixed or <code class=\"notranslate\">resolveBaseUrl</code> method?</p>\n<p dir=\"auto\">Even enforcing IP4 by <code class=\"notranslate\">-Djava.net.preferIPv4Stack=true</code> does not solve issue.</p>\n<p dir=\"auto\">Downgrading to spring-web 6.0.4 solves the issue. Also using IP instead of DSN does not generate such issues.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30033",
                "createdAt": "2023-02-25T11:36:01Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: regression"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Ensure all packages declare `package-info.java` with null-safety annotations",
        "url": "https://github.com/spring-projects/spring-framework/pull/30069",
        "resourcePath": "/spring-projects/spring-framework/pull/30069",
        "createdAt": "2023-03-06T06:23:09Z",
        "number": 30069,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/checkstyle/checkstyle-suppressions.xml"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "src/checkstyle/checkstyle.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5LVWgM2gAoMDAzZTEyMjZmOGJlMjIzYmJiNWNhNzI5MzQ3MWJjN2M1NGI2NzJjOQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30069/commits/003e1226f8be223bbb5ca7293471bc7c54b672c9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30056,
                "url": "https://github.com/spring-projects/spring-framework/issues/30056",
                "title": "Ensure all packages declare `package-info.java` with null-safety annotations",
                "bodyHTML": "<h2 dir=\"auto\">Overview</h2>\n<p dir=\"auto\">Since Spring Framework 5.0 (see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"398209186\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/20099\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/20099/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/20099\">#20099</a>), we annotate packages in <code class=\"notranslate\">package-info.java</code> files with null-safety annotations such as <code class=\"notranslate\">@NonNullApi</code>; however, not all packages contain <code class=\"notranslate\">package-info.java</code> files which prevents us from enforcing non-null semantics by default for those packages.</p>\n<h2 dir=\"auto\">Scope</h2>\n<p dir=\"auto\">This applies to all packages within <code class=\"notranslate\">src/main</code>. Conversely, this does not apply to packages in <code class=\"notranslate\">src/test</code>.</p>\n<h2 dir=\"auto\">Deliverables</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Configure the <a href=\"https://checkstyle.sourceforge.io/config_javadoc.html#JavadocPackage\" rel=\"nofollow\"><code class=\"notranslate\">JavadocPackage</code></a> Checkstyle module to require <code class=\"notranslate\">package-info.java</code> files for all packages under <code class=\"notranslate\">src/main</code>.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Determine if it is possible to require that <code class=\"notranslate\">package-info.java</code> files include null-safety annotations \u2013 for example, via Checkstyle.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> If it's possible to require that <code class=\"notranslate\">package-info.java</code> files include null-safety annotations, configure the necessary infrastructure.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Introduce missing <code class=\"notranslate\">package-info.java</code> files with package-level Javadoc and null-safety annotations.</li>\n</ul>",
                "resourcePath": "/spring-projects/spring-framework/issues/30056",
                "createdAt": "2023-03-01T10:30:19Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: task"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "RequestContextFilter: for async filter chains, defer completing request attributes until async processing completes",
        "url": "https://github.com/spring-projects/spring-framework/pull/30074",
        "resourcePath": "/spring-projects/spring-framework/pull/30074",
        "createdAt": "2023-03-06T21:41:44Z",
        "number": 30074,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/filter/RequestContextFilter.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5LaZ002gAoM2FmNTM2Njg2NDE1ZDAwZWY4N2NkZjRkN2JlODY1ZWVkZDZjNDk5NQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30074/commits/3af536686415d00ef87cdf4d7be865eedd6c4995"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30073,
                "url": "https://github.com/spring-projects/spring-framework/issues/30073",
                "title": "RequestContextFilter is not compatible with async request filters",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">RequestContextFilter</code> sets some thread-locals in holders to bind the request scope to the current servlet request.<br>\nUpon returning from <code class=\"notranslate\">doFilterInternal</code>, it takes care to both clear the thread locals as well as mark the request attributes as completed.<br>\nAfter the request attributes are completed, no further access to the attributes is possible - it throws an exception.</p>\n<p dir=\"auto\">We upgraded one of our Servlet filters further down the chain from RequestContextFilter from a classic synchronous filter to a new asynchronous filter. This means that when our <code class=\"notranslate\">doFilter</code> returns, it returns all the way up through the <code class=\"notranslate\">RequestContextFilter</code> back to the container. However, the request is not yet completed - later on, our filter calls <code class=\"notranslate\">resume</code>. Our filter takes care to save and restore the <code class=\"notranslate\">RequestContextHolder</code> appropriately, to propagate the Spring request scope. From there our Servlet gets called, it tries to access the request scope, and encounters a fatal error, because it is marked as complete.</p>\n<p dir=\"auto\">It seems that in the case of async filters, the request context filter should not finish the request attributes immediately. Instead it should defer marking it as complete until the async processing finishes.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30073",
                "createdAt": "2023-03-06T21:33:31Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "CaffeineCacheManager:Modify the getCache method to reduce the probability of lock contention.",
        "url": "https://github.com/spring-projects/spring-framework/pull/30080",
        "resourcePath": "/spring-projects/spring-framework/pull/30080",
        "createdAt": "2023-03-08T06:35:05Z",
        "number": 30080,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context-support/src/main/java/org/springframework/cache/caffeine/CaffeineCacheManager.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5Liw2H2gAoM2Y5OGVkNDYyZDRiZmViMGZjMzYxODU2NTU3YjJlMWZlYzRkMmE3Yw",
                "url": "https://github.com/spring-projects/spring-framework/pull/30080/commits/3f98ed462d4bfeb0fc361856557b2e1fec4d2a7c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30066,
                "url": "https://github.com/spring-projects/spring-framework/issues/30066",
                "title": "CaffeineCacheManager getCache method cause thread block",
                "bodyHTML": "<ul dir=\"auto\">\n<li>spring-context-support 5.3.18</li>\n<li>jdk version\uff1a17.0.4</li>\n</ul>\n<p dir=\"auto\">here is my thread stack, <strong>block 193 threads</strong></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/17267069/222902161-b0f16295-f198-470b-be62-6e88a724e347.png\"><img src=\"https://user-images.githubusercontent.com/17267069/222902161-b0f16295-f198-470b-be62-6e88a724e347.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"CaffeineCacheManager.java\n\npublic Cache getCache(String name) {\nreturn this.cacheMap.computeIfAbsent(name, cacheName -&gt;\n\t\tthis.dynamic ? createCaffeineCache(cacheName) : null);\n}\"><pre class=\"notranslate\"><span class=\"pl-smi\">CaffeineCacheManager</span>.<span class=\"pl-smi\">java</span>\n\n<span class=\"pl-s1\">public</span> <span class=\"pl-smi\">Cache</span> <span class=\"pl-s1\">getCache</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">name</span>) {\n<span class=\"pl-k\">return</span> <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">cacheMap</span>.<span class=\"pl-en\">computeIfAbsent</span>(<span class=\"pl-s1\">name</span>, <span class=\"pl-s1\">cacheName</span> -&gt;\n\t\t<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">dynamic</span> ? <span class=\"pl-en\">createCaffeineCache</span>(<span class=\"pl-s1\">cacheName</span>) : <span class=\"pl-c1\">null</span>);\n}</pre></div>\n<p dir=\"auto\">here is my code:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@CacheConfig(cacheNames = &quot;branch&quot;)\npublic class BranchServiceImpl {\n    @Cacheable(key = &quot;#exp.id&quot;)\n    public List&lt;Branch&gt; findById(Experiment exp) {\n         // \u2026\u2026\n    }\n    \n    @CachePut(key = &quot;#exp.id&quot;)\n    public List&lt;Branch&gt; updateCacheByExpId(Experiment exp, List&lt;Branch&gt; branches) {\n         // \u2026\u2026\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">CacheConfig</span>(<span class=\"pl-s1\">cacheNames</span> = <span class=\"pl-s\">\"branch\"</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">BranchServiceImpl</span> {\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Cacheable</span>(<span class=\"pl-s1\">key</span> = <span class=\"pl-s\">\"#exp.id\"</span>)\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">Branch</span>&gt; <span class=\"pl-en\">findById</span>(<span class=\"pl-smi\">Experiment</span> <span class=\"pl-s1\">exp</span>) {\n         <span class=\"pl-c\">// \u2026\u2026</span>\n    }\n    \n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">CachePut</span>(<span class=\"pl-s1\">key</span> = <span class=\"pl-s\">\"#exp.id\"</span>)\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">Branch</span>&gt; <span class=\"pl-en\">updateCacheByExpId</span>(<span class=\"pl-smi\">Experiment</span> <span class=\"pl-s1\">exp</span>, <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">Branch</span>&gt; <span class=\"pl-s1\">branches</span>) {\n         <span class=\"pl-c\">// \u2026\u2026</span>\n    }\n}</pre></div>",
                "resourcePath": "/spring-projects/spring-framework/issues/30066",
                "createdAt": "2023-03-04T12:59:27Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status: backported"
                      }
                    },
                    {
                      "node": {
                        "name": "type: bug"
                      }
                    },
                    {
                      "node": {
                        "name": "in: core"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Documentation for Vavr's Try method to trigger transaction rollbacks",
        "url": "https://github.com/spring-projects/spring-framework/pull/30108",
        "resourcePath": "/spring-projects/spring-framework/pull/30108",
        "createdAt": "2023-03-12T19:20:07Z",
        "number": 30108,
        "mergeCommit": {
          "oid": "50d01ce405f88939f9dc9f1cdec073611d1c2ff8",
          "message": "feat: Add support for Vavr's Try monad to trigger transaction rollbacks\n\nUpdated the Spring Framework documentation to include an example of using Vavr's Try monad to trigger transaction rollbacks when a @Transactional-annotated method returns a Failure. The modified documentation demonstrates how to use Try in a transactional method and how to check if an exception has been wrapped inside a Try.Failure instance. Additionally, a link to the official Vavr documentation was added to provide more information on the Try method.",
          "commitUrl": "https://github.com/spring-projects/spring-framework/commit/50d01ce405f88939f9dc9f1cdec073611d1c2ff8",
          "parents": {
            "nodes": [
              {
                "oid": "0c0cda9815645f0864a87cd854158438e1e78117",
                "message": "Polish contribution\n\nSee gh-30189"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/src/docs/asciidoc/data-access.adoc"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5L13pO2gAoNzAyN2U0M2NjOWQyYjE5NTE1Nzg0OWE3ZTJhNWFmYzExM2IxM2IyNw",
                "url": "https://github.com/spring-projects/spring-framework/pull/30108/commits/7027e43cc9d2b195157849a7e2a5afc113b13b27"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29560,
                "url": "https://github.com/spring-projects/spring-framework/issues/29560",
                "title": "Document support of Vavr's `Try` to potentially roll back declarative transactions",
                "bodyHTML": "<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"398213276\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/20361\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/20361/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/20361\">#20361</a> introduced support for Vavr's <code class=\"notranslate\">Try</code> monad to trigger transaction rollbacks when an <code class=\"notranslate\">@Transactional</code>-annotated method returns a <code class=\"notranslate\">Failure</code>.</p>\n<p dir=\"auto\">I would appreciate it if that feature was described in the reference documentation, likely <a href=\"https://docs.spring.io/spring-framework/docs/current/reference/html/data-access.html#transaction-declarative-rolling-back\" rel=\"nofollow\">this section</a>.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/29560",
                "createdAt": "2022-11-23T14:06:26Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: data"
                      }
                    },
                    {
                      "node": {
                        "name": "type: documentation"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Handle all exceptions for stored proc output param retrieval in `SharedEntityManagerCreator`",
        "url": "https://github.com/spring-projects/spring-framework/pull/30161",
        "resourcePath": "/spring-projects/spring-framework/pull/30161",
        "createdAt": "2023-03-22T10:21:50Z",
        "number": 30161,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-orm/src/main/java/org/springframework/orm/jpa/SharedEntityManagerCreator.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5MoLpf2gAoODgxZDI1OThlZGE4ZWM5YTIyZTIwZWRiNmFmZjkzMWQ2YzlmMDM5OQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30161/commits/881d2598eda8ec9a22e20edb6aff931d6c9f0399"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30160,
                "url": "https://github.com/spring-projects/spring-framework/issues/30160",
                "title": "`SharedEntityManagerCreator` does not handle all exceptions for stored proc output param retrieval",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong> Spring Boot 6.0.4</p>\n<p dir=\"auto\">In the <code class=\"notranslate\">SharedEntityManagerCreator</code> class, the following code block invokes <code class=\"notranslate\">getOutputParameterValue</code> which can throw a <code class=\"notranslate\">HibernateException</code>.</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/spring-projects/spring-framework/blob/800b13492b627d02da5d3591ee9ae9c04833da81/spring-orm/src/main/java/org/springframework/orm/jpa/SharedEntityManagerCreator.java#L424-L435\">spring-framework/spring-orm/src/main/java/org/springframework/orm/jpa/SharedEntityManagerCreator.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 424 to 435\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/spring-projects/spring-framework/commit/800b13492b627d02da5d3591ee9ae9c04833da81\">800b134</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L424\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"424\"></td>\n          <td id=\"LC424\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">try</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L425\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"425\"></td>\n          <td id=\"LC425\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">key</span> = <span class=\"pl-s1\">entry</span>.<span class=\"pl-en\">getKey</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L426\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"426\"></td>\n          <td id=\"LC426\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-k\">if</span> (<span class=\"pl-s1\">key</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">Integer</span> <span class=\"pl-s1\">number</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L427\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"427\"></td>\n          <td id=\"LC427\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-s1\">entry</span>.<span class=\"pl-en\">setValue</span>(<span class=\"pl-s1\">storedProc</span>.<span class=\"pl-en\">getOutputParameterValue</span>(<span class=\"pl-s1\">number</span>)); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L428\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"428\"></td>\n          <td id=\"LC428\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t} </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L429\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"429\"></td>\n          <td id=\"LC429\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-k\">else</span> { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L430\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"430\"></td>\n          <td id=\"LC430\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-s1\">entry</span>.<span class=\"pl-en\">setValue</span>(<span class=\"pl-s1\">storedProc</span>.<span class=\"pl-en\">getOutputParameterValue</span>(<span class=\"pl-s1\">key</span>.<span class=\"pl-en\">toString</span>())); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L431\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"431\"></td>\n          <td id=\"LC431\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t} </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L432\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"432\"></td>\n          <td id=\"LC432\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L433\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"433\"></td>\n          <td id=\"LC433\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">IllegalArgumentException</span> <span class=\"pl-s1\">ex</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L434\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"434\"></td>\n          <td id=\"LC434\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-s1\">entry</span>.<span class=\"pl-en\">setValue</span>(<span class=\"pl-s1\">ex</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L435\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"435\"></td>\n          <td id=\"LC435\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">The problem is that the catch block only handles <code class=\"notranslate\">IllegalArgumentException</code>.</p>\n<p dir=\"auto\">This causes a connection leak in the HikariCP pool because the subsequent <code class=\"notranslate\">EntityManagerFactoryUtils.closeEntityManager(this.entityManager);</code> line will never be executed, and the entity manager will never be closed.</p>\n<p dir=\"auto\">A possible solution is to change the catch block to handle the more general <code class=\"notranslate\">Exception</code> or <code class=\"notranslate\">RuntimeException</code> instead of <code class=\"notranslate\">IllegalArgumentException</code>.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30160",
                "createdAt": "2023-03-22T10:08:57Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: data"
                      }
                    },
                    {
                      "node": {
                        "name": "type: bug"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support Named Parameters in Stored Procedures",
        "url": "https://github.com/spring-projects/spring-framework/pull/30207",
        "resourcePath": "/spring-projects/spring-framework/pull/30207",
        "createdAt": "2023-03-27T17:55:04Z",
        "number": 30207,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-jdbc/src/main/java/org/springframework/jdbc/core/CallableStatementCreatorFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-jdbc/src/main/java/org/springframework/jdbc/object/SqlCall.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-jdbc/src/main/java/org/springframework/jdbc/object/StoredProcedure.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-jdbc/src/test/java/org/springframework/jdbc/object/GenericStoredProcedureTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-jdbc/src/test/java/org/springframework/jdbc/object/StoredProcedureTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5M_sx32gAoNDhjMjgxYTM5NDczMGE4MjAwMjFjYzEyMTZhODhmNjI4NzFmNWZiNw",
                "url": "https://github.com/spring-projects/spring-framework/pull/30207/commits/48c281a394730a820021cc1216a88f62871f5fb7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 9084,
                "url": "https://github.com/spring-projects/spring-framework/issues/9084",
                "title": "Support named parameters in CallableStatementCreator implementation [SPR-4406]",
                "bodyHTML": "<p dir=\"auto\"><strong><a href=\"https://jira.spring.io/secure/ViewProfile.jspa?name=mcalmus\" rel=\"nofollow\">Mike Calmus</a></strong> opened <strong><a href=\"https://jira.spring.io/browse/SPR-4406?redirect=false\" rel=\"nofollow\">SPR-4406</a></strong> and commented</p>\n<p dir=\"auto\">Named parameters have been added for some operations, but the execution of a CallableStatement does not support named parameters.</p>\n<p dir=\"auto\">The following code block from CallableStatementFactory.CallableStatementCreatorImpl would be affected or need to be extended:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"int sqlColIndx = 1;\nfor (int i = 0; i &lt; declaredParameters.size(); i++) {\n\tSqlParameter declaredParameter = (SqlParameter) declaredParameters.get(i);\n\tif (!declaredParameter.isResultsParameter()) {\n\t\t// So, it's a call parameter - part of the call string.\n\t\t// Get the value - it may still be null.\n\t\tObject inValue = this.inParameters.get(declaredParameter.getName());\n\t\tif (declaredParameter instanceof ResultSetSupportingSqlParameter) {\n\t\t\t// It's an output parameter: SqlReturnResultSet parameters already excluded.\n\t\t\t// It need not (but may be) supplied by the caller.\n\t\t\tif (declaredParameter instanceof SqlOutParameter) {\n\t\t\t\tif (declaredParameter.getTypeName() != null) {\n\t\t\t\t\tcs.registerOutParameter(sqlColIndx, declaredParameter.getSqlType(), declaredParameter.getTypeName());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (declaredParameter.getScale() != null) {\n\t\t\t\t\t\tcs.registerOutParameter(sqlColIndx, declaredParameter.getSqlType(), declaredParameter.getScale().intValue());\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcs.registerOutParameter(sqlColIndx, declaredParameter.getSqlType());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((declaredParameter).isInputValueProvided() || inValue != null) {\n\t\t\t\t\tStatementCreatorUtils.setParameterValue(csToUse, sqlColIndx, declaredParameter, inValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// It's an input parameter- must be supplied by the caller.\n\t\t\tif (!this.inParameters.containsKey(declaredParameter.getName())) {\n\t\t\t\tthrow new InvalidDataAccessApiUsageException(\n\t\t\t\t\t\t&quot;Required input parameter '&quot; + declaredParameter.getName() + &quot;' is missing&quot;);\n\t\t\t}\n\t\t\tStatementCreatorUtils.setParameterValue(csToUse, sqlColIndx, declaredParameter, inValue);\n\t\t}\n\t\tsqlColIndx++;\n\t}\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">int sqlColIndx = 1;\nfor (int i = 0; i &lt; declaredParameters.size(); i++) {\n\tSqlParameter declaredParameter = (SqlParameter) declaredParameters.get(i);\n\tif (!declaredParameter.isResultsParameter()) {\n\t\t// So, it's a call parameter - part of the call string.\n\t\t// Get the value - it may still be null.\n\t\tObject inValue = this.inParameters.get(declaredParameter.getName());\n\t\tif (declaredParameter instanceof ResultSetSupportingSqlParameter) {\n\t\t\t// It's an output parameter: SqlReturnResultSet parameters already excluded.\n\t\t\t// It need not (but may be) supplied by the caller.\n\t\t\tif (declaredParameter instanceof SqlOutParameter) {\n\t\t\t\tif (declaredParameter.getTypeName() != null) {\n\t\t\t\t\tcs.registerOutParameter(sqlColIndx, declaredParameter.getSqlType(), declaredParameter.getTypeName());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (declaredParameter.getScale() != null) {\n\t\t\t\t\t\tcs.registerOutParameter(sqlColIndx, declaredParameter.getSqlType(), declaredParameter.getScale().intValue());\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcs.registerOutParameter(sqlColIndx, declaredParameter.getSqlType());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((declaredParameter).isInputValueProvided() || inValue != null) {\n\t\t\t\t\tStatementCreatorUtils.setParameterValue(csToUse, sqlColIndx, declaredParameter, inValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// It's an input parameter- must be supplied by the caller.\n\t\t\tif (!this.inParameters.containsKey(declaredParameter.getName())) {\n\t\t\t\tthrow new InvalidDataAccessApiUsageException(\n\t\t\t\t\t\t\"Required input parameter '\" + declaredParameter.getName() + \"' is missing\");\n\t\t\t}\n\t\t\tStatementCreatorUtils.setParameterValue(csToUse, sqlColIndx, declaredParameter, inValue);\n\t\t}\n\t\tsqlColIndx++;\n\t}\n}\n</code></pre></div>\n<hr>\n<p dir=\"auto\"><strong>Issue Links:</strong></p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"398177482\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/17398\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/17398/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/17398\">#17398</a> Support for named parameters in SimpleJdbcCall</li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"398078210\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/8193\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/8193/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/8193\">#8193</a> StoredProcedure enhancement to allow parameters to be optional</li>\n</ul>\n<p dir=\"auto\">10 votes, 8 watchers</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/9084",
                "createdAt": "2008-01-29T01:57:15Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: data"
                      }
                    },
                    {
                      "node": {
                        "name": "status: declined"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "has: votes-jira"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use log4j-slf4j2-impl ",
        "url": "https://github.com/spring-projects/spring-framework/pull/30216",
        "resourcePath": "/spring-projects/spring-framework/pull/30216",
        "createdAt": "2023-03-28T09:24:50Z",
        "number": 30216,
        "mergeCommit": {
          "oid": "cd0379a67f86f9171524911405c7dec486ebccd9",
          "message": "Modified to slf4j2-impl in build.gradle\ndue to slf4j-api versions 1.7 x or earlier issue",
          "commitUrl": "https://github.com/spring-projects/spring-framework/commit/cd0379a67f86f9171524911405c7dec486ebccd9",
          "parents": {
            "nodes": [
              {
                "oid": "e262e98bab1d1a7cfff98a0f703f4d3436a95985",
                "message": "ConstructorResolver error hints about mixing indexed and named args\n\nThis commit adds a note to an exception in `ConstructorResolver`'s\n`autowireConstructor` method hinting that attention should be paid to\ncases that mix indexed arguments and named arguments. This is especially\nwhen inheriting bean definitions in xml.\n\nCloses gh-29976\nClose gh-PR"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "build.gradle"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5NDDBj2gAoMzhhMzFmNmRkOGI1ZTJkZDE1MTg3ZWY2ZjJmNjNjODExNTAwNTU1ZQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30216/commits/38a31f6dd8b5e2dd15187ef6f2f63c811500555e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30213,
                "url": "https://github.com/spring-projects/spring-framework/issues/30213",
                "title": "\"SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\" issue",
                "bodyHTML": "<p dir=\"auto\">I'm not sure, so I'm raising an issue.<br>\nDuring the test, an issue of \"SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.\" occurred.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/97569663/228172774-096fa2f3-1343-47a9-a909-e5c0b5612230.png\"><img src=\"https://user-images.githubusercontent.com/97569663/228172774-096fa2f3-1343-47a9-a909-e5c0b5612230.png\" alt=\"\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba 2023-03-28 \u110b\u1169\u1112\u116e 5 06 45\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">As a result of referring to Stack Overflow, the error phrase simply disappeared.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/97569663/228174173-73f21b5c-b5cf-456a-ad0b-d6a1a569b2da.png\"><img src=\"https://user-images.githubusercontent.com/97569663/228174173-73f21b5c-b5cf-456a-ad0b-d6a1a569b2da.png\" alt=\"\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba 2023-03-28 \u110b\u1169\u1112\u116e 5 07 21\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/97569663/228174284-68c995ec-026e-48dc-9aae-cc93753e500b.png\"><img src=\"https://user-images.githubusercontent.com/97569663/228174284-68c995ec-026e-48dc-9aae-cc93753e500b.png\" alt=\"\u1109\u1173\u110f\u1173\u1105\u1175\u11ab\u1109\u1163\u11ba 2023-03-28 \u110b\u1169\u1112\u116e 5 07 41\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Sorry if it's not an issue.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30213",
                "createdAt": "2023-03-28T08:20:45Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Rename MockMVC matcher methods to prevent regression in user tests",
        "url": "https://github.com/spring-projects/spring-framework/pull/30238",
        "resourcePath": "/spring-projects/spring-framework/pull/30238",
        "createdAt": "2023-03-30T13:00:02Z",
        "number": 30238,
        "mergeCommit": {
          "oid": "95883b9eb7228dfeafc227de9d2ccfbd22e90ce8",
          "message": "Rename MockMVC matcher methods to prevent regression in user tests\n\nThis commit changes the name of two recently introduced methods in the\r\n`MockRestRequestMatchers` class for header and queryParam. These have\r\nbeen found to cause false negatives in user tests, due to the new\r\noverload taking precedence in some cases.\r\n\r\nNamely, using a `Matcher` factory method which can apply to both `List`\r\nand `String` will cause the compiler to select the newest list overload,\r\nby instantiating a `Matcher<Object>`.\r\n\r\nThis can cause false negatives in user tests, failing tests that used\r\nto pass because the Matcher previously applied to the first String in\r\nthe header or queryParam value list. For instance, `equalsTo(\"a\")`.\r\n\r\nThe new overloads are recent enough and this has enough potential to\r\ncause an arbitrary number of user tests to fail that we break the API\r\nto eliminate the ambiguity, by renaming the methods with a `*List`\r\nsuffix.\r\n\r\nCloses gh-30220\r\nCloses gh-30238\r\nSee gh-29953\r\nSee gh-28660",
          "commitUrl": "https://github.com/spring-projects/spring-framework/commit/95883b9eb7228dfeafc227de9d2ccfbd22e90ce8",
          "parents": {
            "nodes": [
              {
                "oid": "f0eb43a6af37df784cd2f0367022c5dba4273bf0",
                "message": "Merge pull request #30157 from srivatsa-cfp:main\n\n* gh-30157:\n  Add non-null assertions in DefaultServerResponseBuilder"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/main/java/org/springframework/test/web/client/match/MockRestRequestMatchers.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/test/java/org/springframework/test/web/client/match/MockRestRequestMatchersTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5NQnZk2gAoNTk2ZjM1NTllMDlhNjU2Zjc1ZGY0NjRiZWM0MTY2YmQ5MWJhODRkZg",
                "url": "https://github.com/spring-projects/spring-framework/pull/30238/commits/596f3559e09a656f75df464bec4166bd91ba84df"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30220,
                "url": "https://github.com/spring-projects/spring-framework/issues/30220",
                "title": "Wrong MockRestRequestMatchers.header() method in spring-test being invoked (JDK issue?)",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong> 2.7.10</p>\n<hr>\n<p dir=\"auto\">Hello everyone.</p>\n<p dir=\"auto\">I'm uncertain if this is an issue with spring-test or with Java compiler itself but, from Spring Boot 2.7.10 (which incorporates spring-test 5.3.26), we have been having an odd issue with tests calling the wrong <code class=\"notranslate\">MockRestRequestMatchers.header()</code> method.</p>\n<p dir=\"auto\">In spring-test 5.3.25 there were a couple of <code class=\"notranslate\">header()</code> methods, but the one that interest us is the one with this signature:</p>\n<p dir=\"auto\"><code class=\"notranslate\">public static RequestMatcher header(String name, Matcher&lt;? super String&gt;... matchers)</code></p>\n<p dir=\"auto\">this was used in testing like this:</p>\n<p dir=\"auto\"><code class=\"notranslate\">.andExpect(header(\"X-MY-HEADER\", equalTo(\"myValue\")))</code></p>\n<p dir=\"auto\">where <code class=\"notranslate\">equalTo()</code> is defined in Hamcrest as</p>\n<p dir=\"auto\"><code class=\"notranslate\">public static &lt;T&gt; Matcher&lt;T&gt; equalTo(T operand)</code></p>\n<p dir=\"auto\">this worked normally.</p>\n<p dir=\"auto\">From Spring Boot 2.7.10 (spring-test 5.3.26) a new <code class=\"notranslate\">header()</code> method has been added with this signature:</p>\n<p dir=\"auto\"><code class=\"notranslate\">public static RequestMatcher header(String name, Matcher&lt;? super List&lt;String&gt;&gt; matcher)</code></p>\n<p dir=\"auto\">and this is where things are breaking: the same call above is now entering this new method, as opposed to the previous. I find this surprising because the signature doesn't match, <code class=\"notranslate\">equalTo(\"myValue\")</code> returns <code class=\"notranslate\">Matcher&lt;String&gt;</code>, which doesn't align to <code class=\"notranslate\">Matcher&lt;? super List&lt;String&gt;&gt;</code>, and yet it's coming in. If I change the call to <code class=\"notranslate\">header()</code> to explicitly call out the type like this:</p>\n<p dir=\"auto\"><code class=\"notranslate\">.andExpect(header(\"X-MY-HEADER\", CoreMatchers.&lt;String&gt;equalTo(\"myValue\")))</code></p>\n<p dir=\"auto\">then things go back to normal and the call is again directed to the old <code class=\"notranslate\">header()</code> method.</p>\n<p dir=\"auto\">I'm guessing that, via type erasure, the signatures of the two <code class=\"notranslate\">header()</code> methods are being simplified to just <code class=\"notranslate\">header(String, Matcher)</code> and, there being two possible candidates that can match the call, Java is just picking the first one. I'm not sure what could be done from spring-framework's perspective, though.</p>\n<p dir=\"auto\">Thoughts?</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30220",
                "createdAt": "2023-03-28T13:58:57Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status: backported"
                      }
                    },
                    {
                      "node": {
                        "name": "type: regression"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix SameSite attribute in MockMvcHttpConnector",
        "url": "https://github.com/spring-projects/spring-framework/pull/30260",
        "resourcePath": "/spring-projects/spring-framework/pull/30260",
        "createdAt": "2023-03-31T23:08:15Z",
        "number": 30260,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/main/java/org/springframework/mock/web/MockCookie.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/main/java/org/springframework/test/web/servlet/client/MockMvcHttpConnector.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/test/java/org/springframework/mock/web/MockCookieTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/test/java/org/springframework/test/web/servlet/samples/client/standalone/resultmatches/CookieAssertionTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5NZMSM2gAoMjM1NjUzNDI3MjZjZmE5MmY1ODQ0ZTg1YjMxZjRhMjRjY2QwMjM2Yw",
                "url": "https://github.com/spring-projects/spring-framework/pull/30260/commits/23565342726cfa92f5844e85b31f4a24ccd0236c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30249,
                "url": "https://github.com/spring-projects/spring-framework/issues/30249",
                "title": "MockMvcHttpConnector not populating sameSite attribute in cookie",
                "bodyHTML": "<p dir=\"auto\">I'm trying to assert that the <code class=\"notranslate\">SameSite</code> attribute is being set correctly using the <code class=\"notranslate\">MockMvcWebTestClient</code> but I noticed that it wasn't being populated correctly.</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/spring-projects/spring-framework/blob/9b38e43c1754563465c275c253fb4b6fd1cf9345/spring-test/src/main/java/org/springframework/test/web/servlet/client/MockMvcHttpConnector.java#L192-L202\">spring-framework/spring-test/src/main/java/org/springframework/test/web/servlet/client/MockMvcHttpConnector.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 192 to 202\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/spring-projects/spring-framework/commit/9b38e43c1754563465c275c253fb4b6fd1cf9345\">9b38e43</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L192\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"192\"></td>\n          <td id=\"LC192\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">Cookie</span> <span class=\"pl-s1\">cookie</span> : <span class=\"pl-s1\">servletResponse</span>.<span class=\"pl-en\">getCookies</span>()) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L193\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"193\"></td>\n          <td id=\"LC193\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-smi\">ResponseCookie</span> <span class=\"pl-s1\">httpCookie</span> = </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L194\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"194\"></td>\n          <td id=\"LC194\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t<span class=\"pl-smi\">ResponseCookie</span>.<span class=\"pl-en\">fromClientResponse</span>(<span class=\"pl-s1\">cookie</span>.<span class=\"pl-en\">getName</span>(), <span class=\"pl-s1\">cookie</span>.<span class=\"pl-en\">getValue</span>()) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L195\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"195\"></td>\n          <td id=\"LC195\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t\t\t.<span class=\"pl-en\">maxAge</span>(<span class=\"pl-smi\">Duration</span>.<span class=\"pl-en\">ofSeconds</span>(<span class=\"pl-s1\">cookie</span>.<span class=\"pl-en\">getMaxAge</span>())) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L196\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"196\"></td>\n          <td id=\"LC196\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t\t\t.<span class=\"pl-en\">domain</span>(<span class=\"pl-s1\">cookie</span>.<span class=\"pl-en\">getDomain</span>()) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L197\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"197\"></td>\n          <td id=\"LC197\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t\t\t.<span class=\"pl-en\">path</span>(<span class=\"pl-s1\">cookie</span>.<span class=\"pl-en\">getPath</span>()) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L198\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"198\"></td>\n          <td id=\"LC198\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t\t\t.<span class=\"pl-en\">secure</span>(<span class=\"pl-s1\">cookie</span>.<span class=\"pl-en\">getSecure</span>()) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L199\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"199\"></td>\n          <td id=\"LC199\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t\t\t.<span class=\"pl-en\">httpOnly</span>(<span class=\"pl-s1\">cookie</span>.<span class=\"pl-en\">isHttpOnly</span>()) </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L200\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"200\"></td>\n          <td id=\"LC200\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t\t\t.<span class=\"pl-en\">build</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L201\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"201\"></td>\n          <td id=\"LC201\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-s1\">clientResponse</span>.<span class=\"pl-en\">getCookies</span>().<span class=\"pl-en\">add</span>(<span class=\"pl-s1\">httpCookie</span>.<span class=\"pl-en\">getName</span>(), <span class=\"pl-s1\">httpCookie</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L202\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"202\"></td>\n          <td id=\"LC202\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">The actual cookie in question is of type <code class=\"notranslate\">MockCookie</code></p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/spring-projects/spring-framework/blob/19cf5035343922111e7c03b60933bf178170f9d4/spring-test/src/main/java/org/springframework/mock/web/MockCookie.java#L80-L89\">spring-framework/spring-test/src/main/java/org/springframework/mock/web/MockCookie.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 80 to 89\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/spring-projects/spring-framework/commit/19cf5035343922111e7c03b60933bf178170f9d4\">19cf503</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L80\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"80\"></td>\n          <td id=\"LC80\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-c\">/**</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L81\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"81\"></td>\n          <td id=\"LC81\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">\t * Set the \"SameSite\" attribute for this cookie.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L82\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"82\"></td>\n          <td id=\"LC82\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">\t * &lt;p&gt;This limits the scope of the cookie such that it will only be attached</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L83\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"83\"></td>\n          <td id=\"LC83\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">\t * to same-site requests if the supplied value is {@code \"Strict\"} or cross-site</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L84\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"84\"></td>\n          <td id=\"LC84\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">\t * requests if the supplied value is {@code \"Lax\"}.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L85\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"85\"></td>\n          <td id=\"LC85\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">\t * @see &lt;a href=\"https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis#section-4.1.2.7\"&gt;RFC6265 bis&lt;/a&gt;</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L86\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"86\"></td>\n          <td id=\"LC86\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">\t */</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L87\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"87\"></td>\n          <td id=\"LC87\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">setSameSite</span>(<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Nullable</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">sameSite</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L88\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"88\"></td>\n          <td id=\"LC88\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">sameSite</span> = <span class=\"pl-s1\">sameSite</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L89\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"89\"></td>\n          <td id=\"LC89\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t} </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">I think that the <code class=\"notranslate\">MockMvcHttpConnector</code> should be updated to use the new Servlet 6 <code class=\"notranslate\">Cookie.getAttribute</code> to get the <code class=\"notranslate\">SameSite</code> attribute.</p>\n<p dir=\"auto\">At the same time I notice that the <code class=\"notranslate\">MockCookie</code> doesn't have the <code class=\"notranslate\">SameSite</code> attribute in the attribute map. I think the Cookie implementation on Servlet 6 generally delegate the setters to <code class=\"notranslate\">setAttributeInternal</code>. So I think that <code class=\"notranslate\">MockCookie</code> also needs a corresponding update to set the <code class=\"notranslate\">SameSite</code> as an attribute.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30249",
                "createdAt": "2023-03-31T02:52:01Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: test"
                      }
                    },
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Check ResponseStatusException reason as MessageSource code for ProblemDetail",
        "url": "https://github.com/spring-projects/spring-framework/pull/30300",
        "resourcePath": "/spring-projects/spring-framework/pull/30300",
        "createdAt": "2023-04-07T01:04:46Z",
        "number": 30300,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/ErrorResponse.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/ResponseEntityExceptionHandlerTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5Nzzjv2gAoM2NkODUzZjU2Y2EyNWNhMTc5OWNiNjVkYzI0Mzk3NjI3MDNmMTUxMw",
                "url": "https://github.com/spring-projects/spring-framework/pull/30300/commits/3cd853f56ca25ca1799cb65dc2439762703f1513"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30222,
                "url": "https://github.com/spring-projects/spring-framework/issues/30222",
                "title": "Consider using reason as detailMessageCode for ResponseStatusException",
                "bodyHTML": "<p dir=\"auto\">Please see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1643528016\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-boot/issues/34791\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-boot/issues/34791/hovercard\" href=\"https://github.com/spring-projects/spring-boot/issues/34791\">spring-projects/spring-boot#34791</a></p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30222",
                "createdAt": "2023-03-29T00:59:14Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "HTTP interface client should not have blockingTimeout set and leave it to the underlying client by default",
        "url": "https://github.com/spring-projects/spring-framework/pull/30403",
        "resourcePath": "/spring-projects/spring-framework/pull/30403",
        "createdAt": "2023-04-30T18:16:43Z",
        "number": 30403,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/src/docs/asciidoc/integration/rest-clients.adoc"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/src/docs/asciidoc/rsocket.adoc"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-messaging/src/main/java/org/springframework/messaging/rsocket/service/RSocketServiceMethod.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-messaging/src/main/java/org/springframework/messaging/rsocket/service/RSocketServiceProxyFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/HttpServiceMethod.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/HttpServiceProxyFactory.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5Pdd9P2gAoOWYxYjcxMWVhMDI2NmMwNTAwYmNhODJhMjZmMWE1OTY1MDNlYjcwMA",
                "url": "https://github.com/spring-projects/spring-framework/pull/30403/commits/9f1b711ea0266c0500bca82a26f1a596503eb700"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30248,
                "url": "https://github.com/spring-projects/spring-framework/issues/30248",
                "title": "HTTP interface client should not set a default blockingTimeout value and instead let the underlying HTTP client determine the behavior",
                "bodyHTML": "\n<p dir=\"auto\"><strong>Affects:</strong>  Spring Boot 3.0.5 / Spring Framework 6.0.7</p>\n<hr>\n\n<p dir=\"auto\">As mentioned in the title, it seems the webclient timeout value does not work when using the HTTP interface.<br>\nBut the same timeout value works when using the webclient directly as below.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @EventListener\n    public void onStartup(ApplicationStartedEvent event) {\n        // Non-blocking, working fine\n        event.getApplicationContext().getBean(WebClient.class)\n                .get()\n                .uri(&quot;http://localhost:8080/test&quot;)\n                .retrieve().bodyToMono(String.class)\n                .subscribe(System.out::println);\n\n        // Blocking, working fine\n        String result = event.getApplicationContext().getBean(WebClient.class)\n                .get()\n                .uri(&quot;http://localhost:8080/test&quot;)\n                .retrieve().bodyToMono(String.class)\n                .block();\n        System.out.println(result);\n\n        // Blocking but with HttpInterface, is failing\n        SampleApi sampleApi = event.getApplicationContext().getBean(SampleApi.class);\n        System.out.println(sampleApi.get().getStatusCode());\n    }\n\"><pre class=\"notranslate\"><code class=\"notranslate\">    @EventListener\n    public void onStartup(ApplicationStartedEvent event) {\n        // Non-blocking, working fine\n        event.getApplicationContext().getBean(WebClient.class)\n                .get()\n                .uri(\"http://localhost:8080/test\")\n                .retrieve().bodyToMono(String.class)\n                .subscribe(System.out::println);\n\n        // Blocking, working fine\n        String result = event.getApplicationContext().getBean(WebClient.class)\n                .get()\n                .uri(\"http://localhost:8080/test\")\n                .retrieve().bodyToMono(String.class)\n                .block();\n        System.out.println(result);\n\n        // Blocking but with HttpInterface, is failing\n        SampleApi sampleApi = event.getApplicationContext().getBean(SampleApi.class);\n        System.out.println(sampleApi.get().getStatusCode());\n    }\n\n</code></pre></div>\n<p dir=\"auto\">I have added a minimal sample application that demonstrates the above issue.<br>\n<a href=\"https://github.com/pmverma/demo-http-interface-webclient-timeout\">https://github.com/pmverma/demo-http-interface-webclient-timeout</a></p>\n<p dir=\"auto\">All codes are in a single file <a href=\"https://github.com/pmverma/demo-http-interface-webclient-timeout/blob/master/src/main/java/com/example/demohttpinterfacewebclienttimeout/DemoHttpInterfaceWebclientTimeoutApplication.java\">DemoHttpInterfaceWebclientTimeoutApplication.java</a></p>\n<p dir=\"auto\">Regards,<br>\nMohan</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30248",
                "createdAt": "2023-03-30T17:26:25Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support `@Bean` 'lite' mode when no `@Bean` methods are declared locally",
        "url": "https://github.com/spring-projects/spring-framework/pull/30462",
        "resourcePath": "/spring-projects/spring-framework/pull/30462",
        "createdAt": "2023-05-10T08:27:59Z",
        "number": 30462,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassParser.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassPostProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context/src/main/java/org/springframework/context/annotation/ConfigurationClassUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context/src/test/java/org/springframework/context/annotation/ConfigurationClassPostProcessorTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5QKhNE2gAoMDkyMThhMzQxZWJhNjZhNTY0YTMwYmQ1MzRhYmY2ZmQ5ZjNkZDU3NQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30462/commits/09218a341eba66a564a30bd534abf6fd9f3dd575"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30449,
                "url": "https://github.com/spring-projects/spring-framework/issues/30449",
                "title": "`@Bean` 'lite' mode not supported if `@Bean` methods are not declared locally",
                "bodyHTML": "<p dir=\"auto\">I'm not sure it's a bug or undocumented limitation.</p>\n<p dir=\"auto\">If no <code class=\"notranslate\">@Bean</code> defined in <code class=\"notranslate\">Config</code> then <code class=\"notranslate\">@Bean</code> defined in <code class=\"notranslate\">BaseConfig</code> will be ignored.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@ContextConfiguration(classes = Config.class)\n@ExtendWith(SpringExtension.class)\npublic class InjectionTests {\n\n\t@Autowired\n\tprivate String bean1;\n\n\t@Autowired\n\tprivate String bean2;\n\n\t@Test\n\tvoid test() {\n\t\tassertThat(bean1).isEqualTo(&quot;bean1&quot;);\n\t\tassertThat(bean2).isEqualTo(&quot;bean2&quot;);\n\t}\n\n}\n\nclass Config extends BaseConfig {\n\n}\n\nclass BaseConfig {\n\t@Bean\n\tString bean1() {\n\t\treturn &quot;bean1&quot;;\n\t}\n\t@Bean\n\tString bean2() {\n\t\treturn &quot;bean2&quot;;\n\t}\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">ContextConfiguration</span>(<span class=\"pl-s1\">classes</span> = <span class=\"pl-smi\">Config</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">ExtendWith</span>(<span class=\"pl-smi\">SpringExtension</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">InjectionTests</span> {\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Autowired</span>\n\t<span class=\"pl-k\">private</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">bean1</span>;\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Autowired</span>\n\t<span class=\"pl-k\">private</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">bean2</span>;\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n\t<span class=\"pl-smi\">void</span> <span class=\"pl-en\">test</span>() {\n\t\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">bean1</span>).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"bean1\"</span>);\n\t\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">bean2</span>).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"bean2\"</span>);\n\t}\n\n}\n\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">Config</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">BaseConfig</span> {\n\n}\n\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">BaseConfig</span> {\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Bean</span>\n\t<span class=\"pl-smi\">String</span> <span class=\"pl-en\">bean1</span>() {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-s\">\"bean1\"</span>;\n\t}\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Bean</span>\n\t<span class=\"pl-smi\">String</span> <span class=\"pl-en\">bean2</span>() {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-s\">\"bean2\"</span>;\n\t}\n}</pre></div>\n<p dir=\"auto\">there are many workarounds</p>\n<ol dir=\"auto\">\n<li>move any one of <code class=\"notranslate\">@Bean</code> to <code class=\"notranslate\">Config</code></li>\n</ol>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Config extends BaseConfig {\n\t@Bean\n\tString bean2() {\n\t\treturn &quot;bean2&quot;;\n\t}\n}\n\nclass BaseConfig {\n\t@Bean\n\tString bean1() {\n\t\treturn &quot;bean1&quot;;\n\t}\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-smi\">Config</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">BaseConfig</span> {\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Bean</span>\n\t<span class=\"pl-smi\">String</span> <span class=\"pl-en\">bean2</span>() {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-s\">\"bean2\"</span>;\n\t}\n}\n\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">BaseConfig</span> {\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Bean</span>\n\t<span class=\"pl-smi\">String</span> <span class=\"pl-en\">bean1</span>() {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-s\">\"bean1\"</span>;\n\t}\n}</pre></div>\n<ol start=\"2\" dir=\"auto\">\n<li>mark <code class=\"notranslate\">@Configuration</code> or <code class=\"notranslate\">@Component</code> on <code class=\"notranslate\">Config</code></li>\n</ol>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Configuration\n// @Component\nclass Config extends BaseConfig {\n\n}\n\nclass BaseConfig {\n\t@Bean\n\tString bean1() {\n\t\treturn &quot;bean1&quot;;\n\t}\n\t@Bean\n\tString bean2() {\n\t\treturn &quot;bean2&quot;;\n\t}\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Configuration</span>\n<span class=\"pl-c\">// @Component</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">Config</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">BaseConfig</span> {\n\n}\n\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">BaseConfig</span> {\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Bean</span>\n\t<span class=\"pl-smi\">String</span> <span class=\"pl-en\">bean1</span>() {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-s\">\"bean1\"</span>;\n\t}\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Bean</span>\n\t<span class=\"pl-smi\">String</span> <span class=\"pl-en\">bean2</span>() {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-s\">\"bean2\"</span>;\n\t}\n}</pre></div>\n<ol start=\"3\" dir=\"auto\">\n<li>use <code class=\"notranslate\">@Import</code> instead of <code class=\"notranslate\">ContextConfiguration</code></li>\n</ol>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Import(Config.class)\n@ExtendWith(SpringExtension.class)\npublic class InjectionTests {\n\n\t@Autowired\n\tprivate String bean1;\n\n\t@Autowired\n\tprivate String bean2;\n\n\t@Test\n\tvoid test() {\n\t\tassertThat(bean1).isEqualTo(&quot;bean1&quot;);\n\t\tassertThat(bean2).isEqualTo(&quot;bean2&quot;);\n\t}\n\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Import</span>(<span class=\"pl-smi\">Config</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">ExtendWith</span>(<span class=\"pl-smi\">SpringExtension</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">InjectionTests</span> {\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Autowired</span>\n\t<span class=\"pl-k\">private</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">bean1</span>;\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Autowired</span>\n\t<span class=\"pl-k\">private</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">bean2</span>;\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n\t<span class=\"pl-smi\">void</span> <span class=\"pl-en\">test</span>() {\n\t\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">bean1</span>).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"bean1\"</span>);\n\t\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">bean2</span>).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"bean2\"</span>);\n\t}\n\n}</pre></div>",
                "resourcePath": "/spring-projects/spring-framework/issues/30449",
                "createdAt": "2023-05-09T01:19:20Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Skip setting hibernate.dialect for hibernate 6 or above",
        "url": "https://github.com/spring-projects/spring-framework/pull/30490",
        "resourcePath": "/spring-projects/spring-framework/pull/30490",
        "createdAt": "2023-05-15T09:16:43Z",
        "number": 30490,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-orm/src/main/java/org/springframework/orm/jpa/vendor/HibernateJpaVendorAdapter.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5Qfbqy2gAoYTgxMjE0YTIzNmUwNmE1MDU4YjBlYjE2ZjFhYWEwNDdhYjU1NDRiNQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30490/commits/a81214a236e06a5058b0eb16f1aaa047ab5544b5"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30488,
                "url": "https://github.com/spring-projects/spring-framework/issues/30488",
                "title": "Error creating bean entityManagerFactory with spring boot 3.1.0-RC2. ClassNotFoundException: PostgreSQL95Dialect",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong> spring boot 3.1.0-RC2<br>\nI tried to update spring boot 3.0.5 -&gt; 3.1.0-RC2 and got the following error:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"2023-05-15T12:11:38.518+06:00  INFO 49951 --- [           main] .s.b.a.l.ConditionEvaluationReportLogger : \n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.\n2023-05-15T12:11:38.524+06:00 ERROR 49951 --- [           main] o.s.boot.SpringApplication               : Application run failed\n\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: org/hibernate/dialect/PostgreSQL95Dialect\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1132) ~[spring-context-6.0.8.jar:6.0.8]\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:907) ~[spring-context-6.0.8.jar:6.0.8]\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584) ~[spring-context-6.0.8.jar:6.0.8]\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:733) ~[spring-boot-3.1.0-RC2.jar:3.1.0-RC2]\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:435) ~[spring-boot-3.1.0-RC2.jar:3.1.0-RC2]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:311) ~[spring-boot-3.1.0-RC2.jar:3.1.0-RC2]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1305) ~[spring-boot-3.1.0-RC2.jar:3.1.0-RC2]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1294) ~[spring-boot-3.1.0-RC2.jar:3.1.0-RC2]\n\tat com.arvgord.bankdemoserver.AppKt.main(App.kt:12) ~[main/:na]\nCaused by: java.lang.NoClassDefFoundError: org/hibernate/dialect/PostgreSQL95Dialect\n\tat org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter.determineDatabaseDialectClass(HibernateJpaVendorAdapter.java:181) ~[spring-orm-6.0.8.jar:6.0.8]\n\tat org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter.buildJpaPropertyMap(HibernateJpaVendorAdapter.java:144) ~[spring-orm-6.0.8.jar:6.0.8]\n\tat org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter.getJpaPropertyMap(HibernateJpaVendorAdapter.java:128) ~[spring-orm-6.0.8.jar:6.0.8]\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:365) ~[spring-orm-6.0.8.jar:6.0.8]\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352) ~[spring-orm-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766) ~[spring-beans-6.0.8.jar:6.0.8]\n\t... 15 common frames omitted\nCaused by: java.lang.ClassNotFoundException: org.hibernate.dialect.PostgreSQL95Dialect\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641) ~[na:na]\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) ~[na:na]\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520) ~[na:na]\n\t... 22 common frames omitted\"><pre class=\"notranslate\"><code class=\"notranslate\">2023-05-15T12:11:38.518+06:00  INFO 49951 --- [           main] .s.b.a.l.ConditionEvaluationReportLogger : \n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.\n2023-05-15T12:11:38.524+06:00 ERROR 49951 --- [           main] o.s.boot.SpringApplication               : Application run failed\n\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: org/hibernate/dialect/PostgreSQL95Dialect\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1770) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:598) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:520) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1132) ~[spring-context-6.0.8.jar:6.0.8]\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:907) ~[spring-context-6.0.8.jar:6.0.8]\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584) ~[spring-context-6.0.8.jar:6.0.8]\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:733) ~[spring-boot-3.1.0-RC2.jar:3.1.0-RC2]\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:435) ~[spring-boot-3.1.0-RC2.jar:3.1.0-RC2]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:311) ~[spring-boot-3.1.0-RC2.jar:3.1.0-RC2]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1305) ~[spring-boot-3.1.0-RC2.jar:3.1.0-RC2]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1294) ~[spring-boot-3.1.0-RC2.jar:3.1.0-RC2]\n\tat com.arvgord.bankdemoserver.AppKt.main(App.kt:12) ~[main/:na]\nCaused by: java.lang.NoClassDefFoundError: org/hibernate/dialect/PostgreSQL95Dialect\n\tat org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter.determineDatabaseDialectClass(HibernateJpaVendorAdapter.java:181) ~[spring-orm-6.0.8.jar:6.0.8]\n\tat org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter.buildJpaPropertyMap(HibernateJpaVendorAdapter.java:144) ~[spring-orm-6.0.8.jar:6.0.8]\n\tat org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter.getJpaPropertyMap(HibernateJpaVendorAdapter.java:128) ~[spring-orm-6.0.8.jar:6.0.8]\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:365) ~[spring-orm-6.0.8.jar:6.0.8]\n\tat org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:352) ~[spring-orm-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1816) ~[spring-beans-6.0.8.jar:6.0.8]\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1766) ~[spring-beans-6.0.8.jar:6.0.8]\n\t... 15 common frames omitted\nCaused by: java.lang.ClassNotFoundException: org.hibernate.dialect.PostgreSQL95Dialect\n\tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641) ~[na:na]\n\tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) ~[na:na]\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520) ~[na:na]\n\t... 22 common frames omitted\n</code></pre></div>\n<p dir=\"auto\">I have the following application yaml:</p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"spring:\n  profiles:\n    active: 'prod'\n  jpa:\n    database: postgresql\n    hibernate:\n      ddl-auto: none\n    show-sql: true\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.PostgreSQLDialect\n  datasource:\n    driver-class-name: ${POSTGRES_DRIVER:org.postgresql.Driver}\"><pre class=\"notranslate\"><span class=\"pl-ent\">spring</span>:\n  <span class=\"pl-ent\">profiles</span>:\n    <span class=\"pl-ent\">active</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>prod<span class=\"pl-pds\">'</span></span>\n  <span class=\"pl-ent\">jpa</span>:\n    <span class=\"pl-ent\">database</span>: <span class=\"pl-s\">postgresql</span>\n    <span class=\"pl-ent\">hibernate</span>:\n      <span class=\"pl-ent\">ddl-auto</span>: <span class=\"pl-s\">none</span>\n    <span class=\"pl-ent\">show-sql</span>: <span class=\"pl-c1\">true</span>\n    <span class=\"pl-ent\">properties</span>:\n      <span class=\"pl-ent\">hibernate</span>:\n        <span class=\"pl-ent\">dialect</span>: <span class=\"pl-s\">org.hibernate.dialect.PostgreSQLDialect</span>\n  <span class=\"pl-ent\">datasource</span>:\n    <span class=\"pl-ent\">driver-class-name</span>: <span class=\"pl-s\">${POSTGRES_DRIVER:org.postgresql.Driver}</span></pre></div>\n<p dir=\"auto\">I see that the class PostgreSQL95Dialect no longer exists in Hibernate 6.2.2.Final but spring tries to load it <strong>even though I use PostgreSQLDialect</strong><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/39695947/238254417-de4149b0-d2d1-4680-a9a5-11c9273dd506.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDMwMTUsIm5iZiI6MTcxNDk0MjcxNSwicGF0aCI6Ii8zOTY5NTk0Ny8yMzgyNTQ0MTctZGU0MTQ5YjAtZDJkMS00NjgwLWE5YTUtMTFjOTI3M2RkNTA2LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIwNTgzNVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWYxYzMxYWM5NTY4M2M1MmIzMDE0ZGI2ZTViNWIxMGU2MTc0MzVhNzViMTVjNTBlOTVhZmJhZTAwODMwOTE5ZmYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.KY-PuPeH4jG9bmaDai_gf-PU71EduIRrHC28PuQW7RA\"><img src=\"https://private-user-images.githubusercontent.com/39695947/238254417-de4149b0-d2d1-4680-a9a5-11c9273dd506.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDMwMTUsIm5iZiI6MTcxNDk0MjcxNSwicGF0aCI6Ii8zOTY5NTk0Ny8yMzgyNTQ0MTctZGU0MTQ5YjAtZDJkMS00NjgwLWE5YTUtMTFjOTI3M2RkNTA2LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIwNTgzNVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWYxYzMxYWM5NTY4M2M1MmIzMDE0ZGI2ZTViNWIxMGU2MTc0MzVhNzViMTVjNTBlOTVhZmJhZTAwODMwOTE5ZmYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.KY-PuPeH4jG9bmaDai_gf-PU71EduIRrHC28PuQW7RA\" alt=\"\u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Issue moved from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1709388806\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-data-jpa/issues/2952\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-data-jpa/issues/2952/hovercard\" href=\"https://github.com/spring-projects/spring-data-jpa/issues/2952\">spring-projects/spring-data-jpa#2952</a></p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30488",
                "createdAt": "2023-05-15T07:43:07Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: data"
                      }
                    },
                    {
                      "node": {
                        "name": "status: duplicate"
                      }
                    },
                    {
                      "node": {
                        "name": "type: bug"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Always fall back to original method if annotation pointcut used",
        "url": "https://github.com/spring-projects/spring-framework/pull/30534",
        "resourcePath": "/spring-projects/spring-framework/pull/30534",
        "createdAt": "2023-05-24T01:44:04Z",
        "number": 30534,
        "mergeCommit": {
          "oid": "3a6d0c1d5be26b6319d27975330fd77c16918115",
          "message": "Always fall back to original method if annotation pointcut used\n\nPrior to this commit, AspectJExpressionPointcut doesn't fall back to original method if `!@annotation()` is used, it can cause false positive result.\n\nFix GH-27119",
          "commitUrl": "https://github.com/spring-projects/spring-framework/commit/3a6d0c1d5be26b6319d27975330fd77c16918115",
          "parents": {
            "nodes": [
              {
                "oid": "16c6376b3f97c221c8869e8f40732bf00decdd48",
                "message": "Merge pull request #31659 from Johannes-Rost\n\n* pr/31659:\n  Polish \"Polish RestClient Javadoc\"\n  Polish RestClient Javadoc\n\nCloses gh-31659"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-aop/src/main/java/org/springframework/aop/aspectj/AspectJExpressionPointcut.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-aop/src/test/java/org/springframework/aop/aspectj/AspectJExpressionPointcutTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5RMp4Z2gAoZWY3M2JhOTNjODdhODNlNDgxYTVjOTkxODQ0MGM1ZDE2MmM0Y2ZhOQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30534/commits/ef73ba93c87a83e481a5c9918440c5d162c4cfa9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 27119,
                "url": "https://github.com/spring-projects/spring-framework/issues/27119",
                "title": "Not annotation pointcut matches dynamic proxy methods incorrectly",
                "bodyHTML": "<p dir=\"auto\">\"target\" and \"not <a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/annotation/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/annotation\">@annotation</a>\" combination not works as expected, but \"target\" and \"<a class=\"user-mention notranslate\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/annotation/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/annotation\">@annotation</a>\" combination works fine.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\t// works as expected\n\t@Around(&quot;execution(public * *(..)) and target(repository) and @annotation(org.springframework.transaction.annotation.Transactional)&quot;)\n\tpublic Object interceptPositive(ProceedingJoinPoint pjp, Repository repository) throws Throwable {\n\t\tMethod method = ((MethodSignature) pjp.getSignature()).getMethod();\n\t\tif (!method.isAnnotationPresent(Transactional.class))\n\t\t\tthrow new RuntimeException(&quot;annotation should present here&quot;);\n\t\treturn pjp.proceed();\n\t}\n\n\t// not works as expected\n\t@Around(&quot;execution(public * *(..)) and target(repository) and not @annotation(org.springframework.transaction.annotation.Transactional)&quot;)\n\tpublic Object interceptNegative(ProceedingJoinPoint pjp, Repository repository) throws Throwable {\n\t\tMethod method = ((MethodSignature) pjp.getSignature()).getMethod();\n\t\tif (method.isAnnotationPresent(Transactional.class))\n\t\t\tthrow new RuntimeException(&quot;annotation should not present here&quot;);\n\t\treturn pjp.proceed();\n\t}\"><pre class=\"notranslate\">\t<span class=\"pl-c\">// works as expected</span>\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Around</span>(<span class=\"pl-s\">\"execution(public * *(..)) and target(repository) and @annotation(org.springframework.transaction.annotation.Transactional)\"</span>)\n\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">interceptPositive</span>(<span class=\"pl-smi\">ProceedingJoinPoint</span> <span class=\"pl-s1\">pjp</span>, <span class=\"pl-smi\">Repository</span> <span class=\"pl-s1\">repository</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">Throwable</span> {\n\t\t<span class=\"pl-smi\">Method</span> <span class=\"pl-s1\">method</span> = ((<span class=\"pl-smi\">MethodSignature</span>) <span class=\"pl-s1\">pjp</span>.<span class=\"pl-en\">getSignature</span>()).<span class=\"pl-en\">getMethod</span>();\n\t\t<span class=\"pl-k\">if</span> (!<span class=\"pl-s1\">method</span>.<span class=\"pl-en\">isAnnotationPresent</span>(<span class=\"pl-smi\">Transactional</span>.<span class=\"pl-k\">class</span>))\n\t\t\t<span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RuntimeException</span>(<span class=\"pl-s\">\"annotation should present here\"</span>);\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-s1\">pjp</span>.<span class=\"pl-en\">proceed</span>();\n\t}\n\n\t<span class=\"pl-c\">// not works as expected</span>\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Around</span>(<span class=\"pl-s\">\"execution(public * *(..)) and target(repository) and not @annotation(org.springframework.transaction.annotation.Transactional)\"</span>)\n\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">interceptNegative</span>(<span class=\"pl-smi\">ProceedingJoinPoint</span> <span class=\"pl-s1\">pjp</span>, <span class=\"pl-smi\">Repository</span> <span class=\"pl-s1\">repository</span>) <span class=\"pl-k\">throws</span> <span class=\"pl-s1\">Throwable</span> {\n\t\t<span class=\"pl-smi\">Method</span> <span class=\"pl-s1\">method</span> = ((<span class=\"pl-smi\">MethodSignature</span>) <span class=\"pl-s1\">pjp</span>.<span class=\"pl-en\">getSignature</span>()).<span class=\"pl-en\">getMethod</span>();\n\t\t<span class=\"pl-k\">if</span> (<span class=\"pl-s1\">method</span>.<span class=\"pl-en\">isAnnotationPresent</span>(<span class=\"pl-smi\">Transactional</span>.<span class=\"pl-k\">class</span>))\n\t\t\t<span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RuntimeException</span>(<span class=\"pl-s\">\"annotation should not present here\"</span>);\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-s1\">pjp</span>.<span class=\"pl-en\">proceed</span>();\n\t}</pre></div>\n<p dir=\"auto\"><a href=\"https://github.com/spring-projects/spring-framework/files/6751811/test-pointcut.zip\">test-pointcut.zip</a> is a test project</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/27119",
                "createdAt": "2021-07-02T03:09:58Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: bug"
                      }
                    },
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Resolve default value when argument converts to null",
        "url": "https://github.com/spring-projects/spring-framework/pull/30636",
        "resourcePath": "/spring-projects/spring-framework/pull/30636",
        "createdAt": "2023-06-11T16:23:48Z",
        "number": 30636,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/java/org/springframework/web/method/annotation/RequestParamMethodArgumentResolverTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5StRF22gAoMjkxOWMyMzRmZTE5ZDI4MDNlZjkyYzNhYzA0YzcyNDVmNWMzMDJlOQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30636/commits/2919c234fe19d2803ef92c3ac04c7245f5c302e9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29550,
                "url": "https://github.com/spring-projects/spring-framework/issues/29550",
                "title": "Space in integer request parameter neither triggers the default value nor generates a 400",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong> spring-web 5.3.22</p>\n<h3 dir=\"auto\">Expectation</h3>\n<p dir=\"auto\">Given an endpoint with an <code class=\"notranslate\">Integer</code> parameter named <code class=\"notranslate\">limit</code> with a default value of <code class=\"notranslate\">10</code>, when a user makes a request with <code class=\"notranslate\">limit=%20</code> then the system should either return a <code class=\"notranslate\">400 - Bad Request</code> or have the default value applied.</p>\n<h3 dir=\"auto\">Actual</h3>\n<p dir=\"auto\">Given an endpoint with an <code class=\"notranslate\">Integer</code> parameter named <code class=\"notranslate\">limit</code> with a default value of <code class=\"notranslate\">10</code>,  when a user makes a request with <code class=\"notranslate\">limit=%20</code> then the system accepts the request and the limit variable has a <code class=\"notranslate\">null</code> value.</p>\n<p dir=\"auto\">This happens because when checking for the default value, Spring will not trim the string, so <code class=\"notranslate\">\" \"</code> will be a value and will not trigger the default value.</p>\n<p dir=\"auto\">But when binding the value to the variable, <a href=\"https://github.com/spring-projects/spring-framework/blob/main/spring-beans/src/main/java/org/springframework/beans/propertyeditors/CustomNumberEditor.java#L105\">this line</a> will resolve to <code class=\"notranslate\">true</code> (because <code class=\"notranslate\">allowEmpty</code> is set to <code class=\"notranslate\">true</code> and <code class=\"notranslate\">!StringUtils.hasText(\" \")</code> resolves to <code class=\"notranslate\">true</code>), so <code class=\"notranslate\">null</code> will be set (instead of generating an exception).</p>\n<p dir=\"auto\">I have no idea how to fix it, because this does not seem to be a bug in the code, but a mismatch of expectations.</p>\n<h3 dir=\"auto\">Steps to reproduce</h3>\n<ol dir=\"auto\">\n<li>Clone the reproducer <a href=\"https://github.com/oscarfh/spring-reproducer\">https://github.com/oscarfh/spring-reproducer</a></li>\n<li>Start the application</li>\n<li>Call in your terminal: <code class=\"notranslate\">curl \"http://localhost:8080/endpoint?limit=</code>\n<ul dir=\"auto\">\n<li>\"50\" will be returned, this is the default value set for the limit endpoint, meaning that the default value was applied.</li>\n</ul>\n</li>\n<li>Call <code class=\"notranslate\">curl \"http://localhost:8080/endpoint?limit=a\"</code>\n<ul dir=\"auto\">\n<li>Note that a 400 is returned, meaning that limit does not support string values.</li>\n</ul>\n</li>\n<li>Call <code class=\"notranslate\">curl \"http://localhost:8080/endpoint?limit=%20\"</code>\n<ul dir=\"auto\">\n<li>Notice how \"null\" is returned, meaning that the <code class=\"notranslate\">limit</code> variable was assigned the <code class=\"notranslate\">null</code> value.</li>\n</ul>\n</li>\n</ol>\n<p dir=\"auto\">This is unexpected because, due to the fact that this variable is an integer with a default value. You either expect it to be the integer supplied by the user or the default value. You do not expect it to be null. This null will then very likely cause a null pointer exception in your code.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/29550",
                "createdAt": "2022-11-22T12:10:39Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add possibility to escape property placeholders",
        "url": "https://github.com/spring-projects/spring-framework/pull/30671",
        "resourcePath": "/spring-projects/spring-framework/pull/30671",
        "createdAt": "2023-06-14T20:27:28Z",
        "number": 30671,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/util/PropertyPlaceholderHelper.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/test/java/org/springframework/core/env/PropertySourcesPropertyResolverTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/test/java/org/springframework/util/PropertyPlaceholderHelperTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5TB_jl2gAoOTdhMzI0ZDkxODBkODlmNDJmNGYzZDVjMjFhZmMwMTE0MDU2YmM5YQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30671/commits/97a324d9180d89f42f4f3d5c21afc0114056bc9a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 9628,
                "url": "https://github.com/spring-projects/spring-framework/issues/9628",
                "title": "Support escaping prefix and separator in property placeholders [SPR-4953]",
                "bodyHTML": "<p dir=\"auto\"><strong><a href=\"https://jira.spring.io/secure/ViewProfile.jspa?name=chrislee\" rel=\"nofollow\">Chris Lee</a></strong> opened <strong><a href=\"https://jira.spring.io/browse/SPR-4953?redirect=false\" rel=\"nofollow\">SPR-4953</a></strong> and commented</p>\n<p dir=\"auto\">There is presently no way to inject a placeholder expression (<code class=\"notranslate\">${...}</code>) that won't be picked up by <code class=\"notranslate\">PropertyPlaceholderConfigurer</code>. Ideally we should be able to inject a string that contains <code class=\"notranslate\">${...}</code> for later use in its target bean without involvement from <code class=\"notranslate\">PropertyPlaceholderConfigurer</code>.</p>\n<p dir=\"auto\">Perhaps a simple escape mechanism using the conventional backslash, such as <code class=\"notranslate\">\"The current value is \\\\${...}\"</code> would suffice.</p>\n<hr>\n<p dir=\"auto\"><strong>Affects:</strong> 2.5.4, 2.5.5</p>\n<p dir=\"auto\">11 votes, 5 watchers</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/9628",
                "createdAt": "2008-06-25T09:07:48Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "has: votes-jira"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove redundant assertion in `ReactorServerHttpResponse` constructor",
        "url": "https://github.com/spring-projects/spring-framework/pull/30696",
        "resourcePath": "/spring-projects/spring-framework/pull/30696",
        "createdAt": "2023-06-20T04:56:21Z",
        "number": 30696,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpResponse.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/InvocableHandlerMethod.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5TZfTU2gAoMWNlMDdmMjViMTBiYWVjNWJiNzVkMDIxY2VkOTlhMjg4MjgyZGI4NA",
                "url": "https://github.com/spring-projects/spring-framework/pull/30696/commits/1ce07f25b10baec5bb75d021ced99a288282db84"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30686,
                "url": "https://github.com/spring-projects/spring-framework/issues/30686",
                "title": "Dead code found in `ReactorServerHttpResponse` constructor",
                "bodyHTML": "<p dir=\"auto\">Is the not null assertion necessary here? It seems like a dead code.<br>\nIn  <code class=\"notranslate\">org.springframework.http.server.reactive.ReactorServerHttpResponse</code>, line 59, if the response is null, JVM will throw NPE at line 58 and never go to line 59.  The assertion will not throw IllegalArgumentException with the specific message at any time.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\tpublic ReactorServerHttpResponse(HttpServerResponse response, DataBufferFactory bufferFactory) {\n\t\tsuper(bufferFactory, new HttpHeaders(new NettyHeadersAdapter(response.responseHeaders())));\n\t\tAssert.notNull(response, &quot;HttpServerResponse must not be null&quot;);\n\t\tthis.response = response;\n\t}\"><pre class=\"notranslate\">\t<span class=\"pl-k\">public</span> <span class=\"pl-s1\">ReactorServerHttpResponse</span>(<span class=\"pl-smi\">HttpServerResponse</span> <span class=\"pl-s1\">response</span>, <span class=\"pl-smi\">DataBufferFactory</span> <span class=\"pl-s1\">bufferFactory</span>) {\n\t\t<span class=\"pl-en\">super</span>(<span class=\"pl-en\">bufferFactory</span>, <span class=\"pl-s1\">new</span> <span class=\"pl-s1\">HttpHeaders</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">NettyHeadersAdapter</span>(<span class=\"pl-s1\">response</span>.<span class=\"pl-en\">responseHeaders</span>())));\n\t\t<span class=\"pl-smi\">Assert</span>.<span class=\"pl-en\">notNull</span>(<span class=\"pl-s1\">response</span>, <span class=\"pl-s\">\"HttpServerResponse must not be null\"</span>);\n\t\t<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">response</span> = <span class=\"pl-s1\">response</span>;\n\t}</pre></div>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/spring-projects/spring-framework/blob/842569c9e519ec7d11fc86691577cee067c7ef47/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpResponse.java#L59\">spring-framework/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorServerHttpResponse.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 59\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/spring-projects/spring-framework/commit/842569c9e519ec7d11fc86691577cee067c7ef47\">842569c</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L59\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"59\"></td>\n          <td id=\"LC59\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-smi\">Assert</span>.<span class=\"pl-en\">notNull</span>(<span class=\"pl-s1\">response</span>, <span class=\"pl-s\">\"HttpServerResponse must not be null\"</span>); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30686",
                "createdAt": "2023-06-18T11:51:22Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: task"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Http interface client supports request metadata customization",
        "url": "https://github.com/spring-projects/spring-framework/pull/30737",
        "resourcePath": "/spring-projects/spring-framework/pull/30737",
        "createdAt": "2023-06-24T04:28:29Z",
        "number": 30737,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/HttpExchangeRequestValuesResolver.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/HttpRequestValuesInitializer.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/HttpRequestValuesResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/HttpServiceMethod.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/HttpServiceProxyFactory.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-web/src/test/java/org/springframework/web/service/invoker/CustomHttpRequestValuesResolverTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5TzPGm2gAoYWJlOTA2OTMyMGQ3MzRmMmQ3MDQ2NjY1NmVmYmRlNTBhODAxYTRhMg",
                "url": "https://github.com/spring-projects/spring-framework/pull/30737/commits/abe9069320d734f2d70466656efbde50a801a4a2"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30733,
                "url": "https://github.com/spring-projects/spring-framework/issues/30733",
                "title": "The `HttpServiceProxyFactory` allows for the customization of request metadata generation",
                "bodyHTML": "<p dir=\"auto\">The current <code class=\"notranslate\">HttpServiceProxyFactory</code> only supports handling annotations based on <code class=\"notranslate\">@HttpExchange</code>. However, in certain scenarios, users may need to generate HTTP request based on custom annotations. For example, some <code class=\"notranslate\">Spring Cloud OpenFeign</code> users prefer or have already been accustomed to using annotations based on <code class=\"notranslate\">@RequestMapping</code>, or some may want to generate HTTP request based on <code class=\"notranslate\">jakarta.ws.rs-api</code> annotations.</p>\n<p dir=\"auto\">If the framework allows users to determine the logic for generating request metadata instead of being \"hardcoded\" within the framework, it would greatly enhance its extensibility.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30733",
                "createdAt": "2023-06-23T15:13:10Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Code generation not applying shortcut if the target method is ambiguous",
        "url": "https://github.com/spring-projects/spring-framework/pull/30749",
        "resourcePath": "/spring-projects/spring-framework/pull/30749",
        "createdAt": "2023-06-26T08:05:45Z",
        "number": 30749,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-beans/src/main/java/org/springframework/beans/factory/aot/InstanceSupplierCodeGenerator.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-beans/src/test/java/org/springframework/beans/factory/aot/BeanDefinitionMethodGeneratorTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5T44gd2gAoODFlM2QwODEyOWIyOTY3MzBhZGJhODcxNDNiZTNhOTZjYjQwZmM1Zg",
                "url": "https://github.com/spring-projects/spring-framework/pull/30749/commits/81e3d08129b296730adba87143be3a96cb40fc5f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29278,
                "url": "https://github.com/spring-projects/spring-framework/issues/29278",
                "title": "Code generation should only apply shortcut if the target method is not ambiguous",
                "bodyHTML": "<p dir=\"auto\">Consider the following bean definition:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"RootBeanDefinition beanDefinition = (RootBeanDefinition) BeanDefinitionBuilder\n\t\t.rootBeanDefinition(DocumentBuilderFactory.class).setFactoryMethod(&quot;newNSInstance&quot;).getBeanDefinition();\"><pre class=\"notranslate\"><span class=\"pl-smi\">RootBeanDefinition</span> <span class=\"pl-s1\">beanDefinition</span> = (<span class=\"pl-smi\">RootBeanDefinition</span>) <span class=\"pl-smi\">BeanDefinitionBuilder</span>\n\t\t.<span class=\"pl-en\">rootBeanDefinition</span>(<span class=\"pl-smi\">DocumentBuilderFactory</span>.<span class=\"pl-k\">class</span>).<span class=\"pl-en\">setFactoryMethod</span>(<span class=\"pl-s\">\"newNSInstance\"</span>).<span class=\"pl-en\">getBeanDefinition</span>();</pre></div>\n<p dir=\"auto\">Compilation of the generated code fails as follows:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"reference to withGenerator is ambiguous\n  both method withGenerator(org.springframework.util.function.ThrowingBiFunction&lt;org.springframework.beans.factory.support.RegisteredBean,org.springframework.beans.factory.aot.AutowiredArguments,T&gt;) in org.springframework.beans.factory.aot.BeanInstanceSupplier and method withGenerator(org.springframework.util.function.ThrowingSupplier&lt;T&gt;) in org.springframework.beans.factory.aot.BeanInstanceSupplier match /com/example/TestTarget__TestCode.java 21:148\nincompatible types: invalid method reference\n    incompatible types: org.springframework.beans.factory.support.RegisteredBean cannot be converted to java.lang.String /com/example/TestTarget__TestCode.java 21:163\"><pre class=\"notranslate\"><code class=\"notranslate\">reference to withGenerator is ambiguous\n  both method withGenerator(org.springframework.util.function.ThrowingBiFunction&lt;org.springframework.beans.factory.support.RegisteredBean,org.springframework.beans.factory.aot.AutowiredArguments,T&gt;) in org.springframework.beans.factory.aot.BeanInstanceSupplier and method withGenerator(org.springframework.util.function.ThrowingSupplier&lt;T&gt;) in org.springframework.beans.factory.aot.BeanInstanceSupplier match /com/example/TestTarget__TestCode.java 21:148\nincompatible types: invalid method reference\n    incompatible types: org.springframework.beans.factory.support.RegisteredBean cannot be converted to java.lang.String /com/example/TestTarget__TestCode.java 21:163\n</code></pre></div>\n<p dir=\"auto\">The reason is that <code class=\"notranslate\">DocumentBuilderFactory</code> has two static methods named <code class=\"notranslate\">newNSInstance</code>. A no-arg one and a two-args one. We have a similar arrangement for <code class=\"notranslate\">withGenerator</code> that can take a <code class=\"notranslate\">BiFunction</code> or a <code class=\"notranslate\">Supplier</code>.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/29278",
                "createdAt": "2022-10-07T14:42:47Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: bug"
                      }
                    },
                    {
                      "node": {
                        "name": "theme: aot"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make BeanNameViewResolver extensible and introduce JavaConfigViewResolver",
        "url": "https://github.com/spring-projects/spring-framework/pull/30772",
        "resourcePath": "/spring-projects/spring-framework/pull/30772",
        "createdAt": "2023-06-29T06:49:59Z",
        "number": 30772,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/main/java/org/springframework/web/servlet/view/BeanNameViewResolver.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-webmvc/src/main/java/org/springframework/web/servlet/view/JavaConfigViewResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/test/java/org/springframework/web/servlet/view/ViewResolverTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5UNe6a2gAoMGE4ZGE0MGNmNmViNGE0MDZmMGRiMTJlMTRjYjllNWVjM2I5NjU4MQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30772/commits/0a8da40cf6eb4a406f0db12e14cb9e5ec3b96581"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29383,
                "url": "https://github.com/spring-projects/spring-framework/issues/29383",
                "title": "Make BeanNameViewResolver use a supplied ApplicationContext",
                "bodyHTML": "<p dir=\"auto\">With the deprecation of the <code class=\"notranslate\">XmlViewResolver</code> and <code class=\"notranslate\">ResourceBundleViewResolver</code> it is harder to have multiple <code class=\"notranslate\">ViewResolver</code> instances to resolve a view with the same name but for a different content-types.</p>\n<p dir=\"auto\">I thought of using the <code class=\"notranslate\">BeanNameViewResolver</code> however as that is <code class=\"notranslate\">ApplicationContextAware</code> it gets the <code class=\"notranslate\">ApplicationContext</code> it runs in injected, resulting in an error.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'pdfViewResolver' defined in class path resource [com/apress/spring6recipes/court/config/ViewResolverConfiguration.class]: Cannot reinitialize with different application context: current one is [org.springframework.context.support.GenericApplicationContext@61b718e, started on Tue Oct 25 17:31:00 GMT 2022], passed-in one is [WebApplicationContext for namespace 'dispatcher-servlet', started on Tue Oct 25 17:31:00 GMT 2022]\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)\n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:931)\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:916)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)\n        at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:699)\n        at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:576)\n        at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)\n        at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)\n        at jakarta.servlet.GenericServlet.init(GenericServlet.java:158)\n        at jakarta.servlet.http.HttpServlet.init(HttpServlet.java:140)\n        at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:995)\n        at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:696)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:128)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\n        at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\n        at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)\n        at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\n        at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)\n        at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\n        at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\n        at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n        at java.base/java.lang.Thread.run(Thread.java:1589)\nCaused by: org.springframework.context.ApplicationContextException: Cannot reinitialize with different application context: current one is [org.springframework.context.support.GenericApplicationContext@61b718e, started on Tue Oct 25 17:31:00 GMT 2022], passed-in one is [WebApplicationContext for namespace 'dispatcher-servlet', started on Tue Oct 25 17:31:00 GMT 2022]\n        at org.springframework.context.support.ApplicationObjectSupport.setApplicationContext(ApplicationObjectSupport.java:83)\n        at org.springframework.context.support.ApplicationContextAwareProcessor.invokeAwareInterfaces(ApplicationContextAwareProcessor.java:109)\n        at org.springframework.context.support.ApplicationContextAwareProcessor.postProcessBeforeInitialization(ApplicationContextAwareProcessor.java:85)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:420)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)\"><pre class=\"notranslate\"><code class=\"notranslate\">org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'pdfViewResolver' defined in class path resource [com/apress/spring6recipes/court/config/ViewResolverConfiguration.class]: Cannot reinitialize with different application context: current one is [org.springframework.context.support.GenericApplicationContext@61b718e, started on Tue Oct 25 17:31:00 GMT 2022], passed-in one is [WebApplicationContext for namespace 'dispatcher-servlet', started on Tue Oct 25 17:31:00 GMT 2022]\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:606)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)\n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:931)\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:916)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:584)\n        at org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext(FrameworkServlet.java:699)\n        at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:576)\n        at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:530)\n        at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:169)\n        at jakarta.servlet.GenericServlet.init(GenericServlet.java:158)\n        at jakarta.servlet.http.HttpServlet.init(HttpServlet.java:140)\n        at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:995)\n        at org.apache.catalina.core.StandardWrapper.allocate(StandardWrapper.java:696)\n        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:128)\n        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)\n        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)\n        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:119)\n        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)\n        at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)\n        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)\n        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)\n        at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:400)\n        at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)\n        at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)\n        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1739)\n        at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\n        at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\n        at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\n        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n        at java.base/java.lang.Thread.run(Thread.java:1589)\nCaused by: org.springframework.context.ApplicationContextException: Cannot reinitialize with different application context: current one is [org.springframework.context.support.GenericApplicationContext@61b718e, started on Tue Oct 25 17:31:00 GMT 2022], passed-in one is [WebApplicationContext for namespace 'dispatcher-servlet', started on Tue Oct 25 17:31:00 GMT 2022]\n        at org.springframework.context.support.ApplicationObjectSupport.setApplicationContext(ApplicationObjectSupport.java:83)\n        at org.springframework.context.support.ApplicationContextAwareProcessor.invokeAwareInterfaces(ApplicationContextAwareProcessor.java:109)\n        at org.springframework.context.support.ApplicationContextAwareProcessor.postProcessBeforeInitialization(ApplicationContextAwareProcessor.java:85)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:420)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1745)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)\n</code></pre></div>\n<p dir=\"auto\">It would be nice if we could use the constructor to pass in an <code class=\"notranslate\">ApplicationContext</code> to be used with the <code class=\"notranslate\">BeanNameViewResolver</code> much like the <code class=\"notranslate\">DispatcherServlet</code> does. This way you can have a small <code class=\"notranslate\">ApplicationContext</code> with functional beans to resolve to views with the same name but for different content-types.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/29383",
                "createdAt": "2022-10-25T17:42:30Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: pending-design-work"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allows JdkClientHttpRequest.DISALLOWED_HEADERS to be customized.",
        "url": "https://github.com/spring-projects/spring-framework/pull/30788",
        "resourcePath": "/spring-projects/spring-framework/pull/30788",
        "createdAt": "2023-06-30T20:32:47Z",
        "number": 30788,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/http/client/JdkClientHttpRequest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/java/org/springframework/http/client/JdkClientHttpRequestFactoryTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5UXPTy2gAoNDNlYzU2Y2JhOTY2ZjI1N2NlZmI3NjI3MWE4YjA2YWE0YmZkMmIwOQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30788/commits/43ec56cba966f257cefb76271a8b06aa4bfd2b09"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30787,
                "url": "https://github.com/spring-projects/spring-framework/issues/30787",
                "title": "Allow JdkClientHttpRequest.DISALLOWED_HEADERS to be customized",
                "bodyHTML": "<p dir=\"auto\">Since <a href=\"https://bugs.openjdk.org/browse/JDK-8213696\" rel=\"nofollow\">https://bugs.openjdk.org/browse/JDK-8213696</a> the JDK <code class=\"notranslate\">HttpClient</code>'s list of disallowed headers can be customized by setting <code class=\"notranslate\">jdk.httpclient.allowRestrictedHeaders=host</code>. This is a feature many users desire in a proxy, including Spring Cloud Gateway. Maybe <code class=\"notranslate\">JdkClientHttpRequest</code> can read the same property since it silently skips the header where, I think, <code class=\"notranslate\">HttpClient</code> fails with an exception.</p>\n<p dir=\"auto\">/cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/poutsma/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/poutsma\">@poutsma</a></p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30787",
                "createdAt": "2023-06-30T20:07:23Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add HttpExchangeAdapter for RestClient",
        "url": "https://github.com/spring-projects/spring-framework/pull/30869",
        "resourcePath": "/spring-projects/spring-framework/pull/30869",
        "createdAt": "2023-07-11T16:09:01Z",
        "number": 30869,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/modules/ROOT/pages/integration/rest-clients.adoc"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-web/src/main/java/org/springframework/web/client/support/RestClientAdapter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/HttpServiceProxyFactory.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-web/src/test/java/org/springframework/web/client/support/RestClientAdapterTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5VOJQv2gAoMjZhZjkyNGRlY2ZlMzljMGZjODRiNzVkYjM2ZjU0OTNjOTZmMGRhZA",
                "url": "https://github.com/spring-projects/spring-framework/pull/30869/commits/26af924decfe39c0fc84b75db36f5493c96f0dad"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30859,
                "url": "https://github.com/spring-projects/spring-framework/issues/30859",
                "title": "HttpExchangeAdapter for RestClient",
                "bodyHTML": "<p dir=\"auto\">Following on <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1623187207\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/30117\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/30117/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/30117\">#30117</a> taking care of the necessary infrastructure changes, it should be straight forward to add a <code class=\"notranslate\">RestClient</code> adapter.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30859",
                "createdAt": "2023-07-11T07:47:42Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Eliminate redundant lookups of classes and annotations",
        "url": "https://github.com/spring-projects/spring-framework/pull/30891",
        "resourcePath": "/spring-projects/spring-framework/pull/30891",
        "createdAt": "2023-07-14T16:09:17Z",
        "number": 30891,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-beans/src/main/java/org/springframework/beans/factory/InjectionPoint.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/util/MethodInvoker.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5ViG0K2gAoN2ZiZTNlYzdmZjdiMzQyNjFkOTc0MTdmMTkyMjEyYzk5YzIwMWRkNw",
                "url": "https://github.com/spring-projects/spring-framework/pull/30891/commits/7fbe3ec7ff7b34261d97417f192212c99c201dd7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30883,
                "url": "https://github.com/spring-projects/spring-framework/issues/30883",
                "title": "Performance bottlenecks while creating scoped bean instances",
                "bodyHTML": "<h2 dir=\"auto\"><strong>Affects:</strong>  5.2+</h2>\n<p dir=\"auto\">My organization has multiple high-traffic, customer-facing applications that create many beans per request.  The individual creations are fast enough but in aggregate these beans contribute noticeably to the request's critical path latency, as well as the per-request cpu.  The key portion of the stack trace is:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments\norg.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod\norg.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance\"><pre class=\"notranslate\"><code class=\"notranslate\">org.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments\norg.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod\norg.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance\n</code></pre></div>\n<p dir=\"auto\">Eventual leaf nodes of the call graph are:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">java.lang.Class.forName0</code></li>\n<li><code class=\"notranslate\">java.lang.reflect.Constructor.getParameterAnnotations</code></li>\n<li><code class=\"notranslate\">java.lang.reflect.Method.getParameterAnnotations</code></li>\n<li><code class=\"notranslate\">org.springframework.core.annotation.AnnotationUtils.getValue</code></li>\n</ul>\n<p dir=\"auto\">Annotations and classes don't change during runtime, yet they are repeatedly processed.</p>\n<hr>\n<h3 dir=\"auto\">Solution</h3>\n<p dir=\"auto\">Some level of caching is appropriate, either multiple caches (one per leaf) or a single larger one around <code class=\"notranslate\">ConstructorResolver.resolvePreparedArguments</code>.  Multiple specific caches seems preferable because of lower contention and simpler keys.</p>\n<hr>\n<h3 dir=\"auto\">Supporting Data</h3>\n<p dir=\"auto\">Below are further, detailed stack traces that illustrate the path from ConstructorResolver.resolvePreparedArguments to the leaf nodes.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.springframework.core.annotation.AnnotationUtils.getValue\norg.springframework.core.annotation.AnnotationUtils.getValue\norg.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.checkQualifiers\norg.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.isAutowireCandidate\norg.springframework.beans.factory.support.DefaultListableBeanFactory.isAutowireCandidate\norg.springframework.beans.factory.support.DefaultListableBeanFactory.isAutowireCandidate\norg.springframework.beans.factory.support.DefaultListableBeanFactory.isAutowireCandidate\norg.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates\norg.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency\norg.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency\norg.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument\norg.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments\"><pre class=\"notranslate\"><code class=\"notranslate\">org.springframework.core.annotation.AnnotationUtils.getValue\norg.springframework.core.annotation.AnnotationUtils.getValue\norg.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.checkQualifiers\norg.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver.isAutowireCandidate\norg.springframework.beans.factory.support.DefaultListableBeanFactory.isAutowireCandidate\norg.springframework.beans.factory.support.DefaultListableBeanFactory.isAutowireCandidate\norg.springframework.beans.factory.support.DefaultListableBeanFactory.isAutowireCandidate\norg.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates\norg.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency\norg.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency\norg.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument\norg.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.reflect.Constructor.getParameterAnnotations\norg.springframework.core.MethodParameter.getParameterAnnotations\norg.springframework.beans.factory.InjectionPoint.getAnnotations\norg.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver.isLazy\norg.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver.getLazyResolutionProxyIfNecessary\norg.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency\norg.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument\norg.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.reflect.Constructor.getParameterAnnotations\norg.springframework.core.MethodParameter.getParameterAnnotations\norg.springframework.beans.factory.InjectionPoint.getAnnotations\norg.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver.isLazy\norg.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver.getLazyResolutionProxyIfNecessary\norg.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency\norg.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument\norg.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.reflect.Method.getParameterAnnotations\norg.springframework.core.MethodParameter.getParameterAnnotations\norg.springframework.beans.factory.InjectionPoint.getAnnotations\norg.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver.isLazy\norg.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver.getLazyResolutionProxyIfNecessary\norg.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency\norg.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument\norg.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.reflect.Method.getParameterAnnotations\norg.springframework.core.MethodParameter.getParameterAnnotations\norg.springframework.beans.factory.InjectionPoint.getAnnotations\norg.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver.isLazy\norg.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver.getLazyResolutionProxyIfNecessary\norg.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency\norg.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument\norg.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments\n</code></pre></div>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.Class.forName0\njava.lang.Class.forName\norg.springframework.util.ClassUtils.forName\norg.springframework.beans.factory.config.MethodInvokingBean.resolveClassName\norg.springframework.util.MethodInvoker.prepare\norg.springframework.beans.factory.config.MethodInvokingFactoryBean.afterPropertiesSet\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$invokeInitMethods$5\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$Lambda.run\njava.security.AccessController.doPrivileged\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean\n&lt;proprietary BeanFactory subclass&gt;.createBean\norg.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1\norg.springframework.beans.factory.support.AbstractBeanFactory$Lambda.getObject\n&lt;proprietary request scope subclass&gt;.createBean\n&lt;proprietary request scope subclass&gt;.get\norg.springframework.beans.factory.support.AbstractBeanFactory.getBean\norg.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference\norg.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary\norg.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.Class.forName0\njava.lang.Class.forName\norg.springframework.util.ClassUtils.forName\norg.springframework.beans.factory.config.MethodInvokingBean.resolveClassName\norg.springframework.util.MethodInvoker.prepare\norg.springframework.beans.factory.config.MethodInvokingFactoryBean.afterPropertiesSet\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.lambda$invokeInitMethods$5\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$Lambda.run\njava.security.AccessController.doPrivileged\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean\norg.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean\n&lt;proprietary BeanFactory subclass&gt;.createBean\norg.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1\norg.springframework.beans.factory.support.AbstractBeanFactory$Lambda.getObject\n&lt;proprietary request scope subclass&gt;.createBean\n&lt;proprietary request scope subclass&gt;.get\norg.springframework.beans.factory.support.AbstractBeanFactory.getBean\norg.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference\norg.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary\norg.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments\n</code></pre></div>",
                "resourcePath": "/spring-projects/spring-framework/issues/30883",
                "createdAt": "2023-07-13T14:56:01Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status: backported"
                      }
                    },
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add example of buffering with WebClient to the reference documentation",
        "url": "https://github.com/spring-projects/spring-framework/pull/30899",
        "resourcePath": "/spring-projects/spring-framework/pull/30899",
        "createdAt": "2023-07-16T09:29:00Z",
        "number": 30899,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/modules/ROOT/pages/web/webflux-webclient/client-filter.adoc"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5Vmuh92gAoNmY4NGU3MTM5MzM4OTY4ZjY2YjlmNjY2NjdmYzNhODM5ZDRiOGNiYQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30899/commits/6f84e7139338968f66b9f66667fc3a839d4b8cba"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 28758,
                "url": "https://github.com/spring-projects/spring-framework/issues/28758",
                "title": "Add example of buffering with WebClient to the reference documentation",
                "bodyHTML": "<p dir=\"auto\">The code samples in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"798452993\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/26489\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/26489/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/26489\">#26489</a> are very useful and I keep coming back to them. Recently I forgot the exact title and spent a while to remember how to find it. Perhaps it is a good candidate to add to the documentation, perhaps in <a href=\"https://docs.spring.io/spring-framework/docs/5.2.22.RELEASE/spring-framework-reference/web-reactive.html#webflux-client-filter\" rel=\"nofollow\">this section</a>? I would be willling to create that PR but I figured it probably makes sense to ask first.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/28758",
                "createdAt": "2022-07-05T11:37:28Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: documentation"
                      }
                    },
                    {
                      "node": {
                        "name": "in: web"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support `@RSocketExchange` for responding",
        "url": "https://github.com/spring-projects/spring-framework/pull/30936",
        "resourcePath": "/spring-projects/spring-framework/pull/30936",
        "createdAt": "2023-07-24T14:58:57Z",
        "number": 30936,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/modules/ROOT/pages/rsocket.adoc"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-messaging/src/main/java/org/springframework/messaging/rsocket/annotation/support/RSocketMessageHandler.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-messaging/src/test/java/org/springframework/messaging/rsocket/service/RSocketServiceIntegrationTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5WPdEC2gAoZTQyMTNjNWFhMmM4YmJjZmJjNDQzYTQxNzBjMzYyM2I2ZDM1MmQxMQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/30936/commits/e4213c5aa2c8bbcfbc443a4170c3623b6d352d11"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29240,
                "url": "https://github.com/spring-projects/spring-framework/issues/29240",
                "title": "Support `@RSocketExchange` for annotated responders",
                "bodyHTML": "<p dir=\"auto\">It's better to addopt unifed annotation contract for both server and client side. And I think the <a href=\"https://docs.spring.io/spring-framework/docs/6.0.0-M6/reference/html/web-reactive.html#rsocket-interface\" rel=\"nofollow\">RSocket Interface annotation </a>  is more powerful and meaningful</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/29240",
                "createdAt": "2022-10-01T11:01:56Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: messaging"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "`IllegalStateException` cannot be thrown in `SpringExtension`",
        "url": "https://github.com/spring-projects/spring-framework/pull/30963",
        "resourcePath": "/spring-projects/spring-framework/pull/30963",
        "createdAt": "2023-07-28T15:17:55Z",
        "number": 30963,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/main/java/org/springframework/test/context/junit/jupiter/SpringExtension.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5Wqkb42gAoNjU0YzljNjNkNzIzMTlhYThmNTk5Y2RjYWJlM2YzZGZjNWM5MWFmYg",
                "url": "https://github.com/spring-projects/spring-framework/pull/30963/commits/654c9c63d72319aa8f599cdcabe3f3dfc5c91afb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30962,
                "url": "https://github.com/spring-projects/spring-framework/issues/30962",
                "title": "`IllegalStateException` cannot be thrown in `SpringExtension`",
                "bodyHTML": "<p dir=\"auto\"><strong>Issue Overview:</strong></p>\n<p dir=\"auto\">In the current implementation of the validateAutowiredConfig method, there is an issue with the string comparison when checking for violations. This issue can lead to unexpected behavior and potential exceptions during runtime.</p>\n<p dir=\"auto\"><strong>Issue Description:</strong><br>\nThe <code class=\"notranslate\">validateAutowiredConfig</code> method is responsible for validating the presence of certain annotations on test methods and test lifecycle methods within a test class. It ensures that no methods are annotated with <code class=\"notranslate\">@Autowired</code> and instead suggests using annotations like <code class=\"notranslate\">@Qualifier</code> or <code class=\"notranslate\">@Value</code> on individual method parameters.</p>\n<p dir=\"auto\">In the original code, the validation of violations relies on comparing the errorMessage string with NO_VIOLATIONS_DETECTED. However, this comparison is done using the != operator, which might not work as intended for string comparison. This is because the != operator checks for reference equality (whether both variables point to the same memory location), not the content of the strings. Consequently, if the errorMessage and NO_VIOLATIONS_DETECTED strings have different memory locations (which is very likely in this case), the condition will not be satisfied even if the errorMessage string has the same content as NO_VIOLATIONS_DETECTED.</p>\n<p dir=\"auto\">Similarly, in the <code class=\"notranslate\">validateRecordApplicationEventsConfig</code> method, there is a similar issue with the string comparison of the <code class=\"notranslate\">errorMessage</code> variable. The original code used the != operator, and I have corrected it by using the equals method.</p>\n<p dir=\"auto\">These fixes ensure that the methods correctly handle the error message comparison and throw an IllegalStateException only when necessary.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (errorMessage != NO_VIOLATIONS_DETECTED) {\n    throw new IllegalStateException(errorMessage);\n}\n\"><pre class=\"notranslate\"><code class=\"notranslate\">if (errorMessage != NO_VIOLATIONS_DETECTED) {\n    throw new IllegalStateException(errorMessage);\n}\n\n</code></pre></div>\n<p dir=\"auto\"><strong>Affects:</strong> 6.0.x</p>\n<p dir=\"auto\"><strong>Fix:</strong><br>\nThe proposed fix involves changing the string comparison from != to .equals() to compare the content of the two strings properly.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"if (!errorMessage.equals(NO_VIOLATIONS_DETECTED)) {\n    throw new IllegalStateException(errorMessage);\n}\n\"><pre class=\"notranslate\"><code class=\"notranslate\">if (!errorMessage.equals(NO_VIOLATIONS_DETECTED)) {\n    throw new IllegalStateException(errorMessage);\n}\n\n</code></pre></div>",
                "resourcePath": "/spring-projects/spring-framework/issues/30962",
                "createdAt": "2023-07-28T15:11:31Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: test"
                      }
                    },
                    {
                      "node": {
                        "name": "status: duplicate"
                      }
                    },
                    {
                      "node": {
                        "name": "status: invalid"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Optimize collection usage in CGLIB fork",
        "url": "https://github.com/spring-projects/spring-framework/pull/30993",
        "resourcePath": "/spring-projects/spring-framework/pull/30993",
        "createdAt": "2023-08-03T21:23:52Z",
        "number": 30993,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/cglib/core/CollectionUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/cglib/core/internal/CustomizerRegistry.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5XJWFI2gAoYTU3NTM4ZGJhMTIxY2Q0OTQzZjU1MTJjNWE1N2Y1YjEwN2I3NTU2Mw",
                "url": "https://github.com/spring-projects/spring-framework/pull/30993/commits/a57538dba121cd4943f5512c5a57f5b107b75563"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30992,
                "url": "https://github.com/spring-projects/spring-framework/issues/30992",
                "title": "Enhanced Loop Optimization for filter Method",
                "bodyHTML": "<p dir=\"auto\"><strong>Overview:</strong></p>\n<p dir=\"auto\">The goal of this enhancement is to improve the efficiency and readability of the filter method by replacing the explicit loop with a more concise and optimized implementation using <code class=\"notranslate\">Collection.removeIf()</code>.</p>\n<p dir=\"auto\"><strong>Current Implementation:</strong><br>\nThe filter method currently employs an explicit while loop with an Iterator to iterate through the elements of the input collection (c) and remove elements that do not satisfy the provided predicate (p). Although the method correctly filters the collection based on the given predicate, the implementation could be further improved.</p>\n<p dir=\"auto\"><strong>Proposed Enhancement:</strong><br>\nThe proposed enhancement suggests refactoring the filter method to take advantage of the Collection.removeIf method, which was introduced in Java 8. This method allows us to efficiently remove elements from the collection that do not satisfy the given predicate in a single operation. The modified code will be more concise and potentially more performant, as it benefits from internal optimizations in the removeIf implementation.</p>\n<p dir=\"auto\"><strong>Proposed Implementation:</strong></p>\n<p dir=\"auto\">The enhanced filter method will be modified as follows:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public static Collection filter(Collection c, Predicate p) {\n    c.removeIf(o -&gt; !p.evaluate(o));\n    return c;\n}\n\"><pre class=\"notranslate\"><code class=\"notranslate\">public static Collection filter(Collection c, Predicate p) {\n    c.removeIf(o -&gt; !p.evaluate(o));\n    return c;\n}\n\n</code></pre></div>\n<p dir=\"auto\"><strong>Expected Benefits:</strong></p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Improved Readability: The proposed enhancement makes the code more concise and easier to understand by eliminating the explicit loop and iterator operations.</p>\n</li>\n<li>\n<p dir=\"auto\">Enhanced Performance: The Collection.removeIf method is optimized for removing elements from a collection based on a condition. This should lead to better performance compared to the traditional loop-based approach, especially for large collections.</p>\n</li>\n<li>\n<p dir=\"auto\">Consistency with Modern Practices: The updated implementation aligns with modern Java practices, leveraging the power of lambda expressions and functional programming features introduced in Java 8 and later versions.</p>\n</li>\n</ul>\n<p dir=\"auto\"><strong>Affects:</strong> 6.x</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30992",
                "createdAt": "2023-08-03T21:20:00Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: task"
                      }
                    },
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "`@DynamicPropertySource` in `@Nested` test class cannot override dynamic properties from enclosing class",
        "url": "https://github.com/spring-projects/spring-framework/pull/31083",
        "resourcePath": "/spring-projects/spring-framework/pull/31083",
        "createdAt": "2023-08-21T10:03:03Z",
        "number": 31083,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/main/java/org/springframework/test/context/support/DynamicPropertiesContextCustomizerFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/test/java/org/springframework/test/context/junit/jupiter/nested/DynamicPropertySourceNestedTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5YXk8C2gAoZDI4YmY4MjNiNDdhOTdhNWI0NjMwNDQwYTA4N2YwZDkyNWFiOWNmNA",
                "url": "https://github.com/spring-projects/spring-framework/pull/31083/commits/d28bf823b47a97a5b4630440a087f0d925ab9cf4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 37040,
                "url": "https://github.com/spring-projects/spring-boot/issues/37040",
                "title": "@Nested classes with nested @DynamicPropertySource get called in order, but don't get applied",
                "bodyHTML": "<p dir=\"auto\">It seems that <code class=\"notranslate\">@Nested</code>  and <code class=\"notranslate\">@DynamicPropertySource</code> do not play together when both outer and inner classes have a source defined. Neither <code class=\"notranslate\">@DirtiesContext</code> nor inheriting / overwritting seems to do the trick, (overwritting expects a full setup, while inheriting has the methods called in proper order but they don't seem to get applied).</p>\n<p dir=\"auto\">I've added a manual test to the existing <a href=\"https://github.com/spring-projects/spring-framework/blob/main/spring-test/src/test/java/org/springframework/test/context/junit/jupiter/nested/DynamicPropertySourceNestedTests.java\">test class</a> that should fail as I'd expect <code class=\"notranslate\">\"1\"</code> to be the host but it is not.</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"SpringJUnitConfig\nclass DynamicPropertySourceNestedTests {\n\n    private static final String TEST_CONTAINER_IP = &quot;DynamicPropertySourceNestedTests.test.container.ip&quot;;\n\n    private static final String TEST_CONTAINER_PORT = &quot;DynamicPropertySourceNestedTests.test.container.port&quot;;\n\n    static DemoContainer container = new DemoContainer();\n\n    @DynamicPropertySource\n    static void containerProperties(DynamicPropertyRegistry registry) {\n        registry.add(TEST_CONTAINER_IP, container::getIpAddress);\n        registry.add(TEST_CONTAINER_PORT, container::getPort);\n    }\n\n    private static void assertServiceHasInjectedValues(Service service) {\n        assertThat(service.getIp()).isEqualTo(&quot;127.0.0.1&quot;);\n        assertThat(service.getPort()).isEqualTo(4242);\n    }\n\n    @Test\n    @DisplayName(&quot;@Service has values injected from @DynamicPropertySource&quot;)\n    void serviceHasInjectedValues(@Autowired Service service) {\n        assertServiceHasInjectedValues(service);\n    }\n\n    @Nested\n    class Testing {\n        @DynamicPropertySource\n        static void containerProperties(DynamicPropertyRegistry registry) {\n            registry.add(TEST_CONTAINER_IP, () -&gt; &quot;1&quot;); // even though it is called after outer dynamic properties it does not get applied\n            registry.add(TEST_CONTAINER_PORT, container::getPort);\n        }\n\n        @Test\n        void serviceHasInjectedValues(@Autowired Service service) {\n            assertServiceHasInjectedValues(service);\n        }\n    }\n\n    @Configuration\n    @Import(Service.class)\n    static class Config {\n    }\n\n    static class Service {\n\n        private final String ip;\n\n        private final int port;\n\n\n        Service(@Value(&quot;${&quot; + TEST_CONTAINER_IP + &quot;:10.0.0.1}&quot;) String ip, @Value(&quot;${&quot; + TEST_CONTAINER_PORT + &quot;:-999}&quot;) int port) {\n            this.ip = ip;\n            this.port = port;\n        }\n\n        String getIp() {\n            return this.ip;\n        }\n\n        int getPort() {\n            return this.port;\n        }\n    }\n\n    static class DemoContainer {\n\n        String getIpAddress() {\n            return &quot;127.0.0.1&quot;;\n        }\n\n        int getPort() {\n            return 4242;\n        }\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-smi\">SpringJUnitConfig</span>\n<span class=\"pl-s1\">class</span> <span class=\"pl-s1\">DynamicPropertySourceNestedTests</span> {\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">TEST_CONTAINER_IP</span> = <span class=\"pl-s\">\"DynamicPropertySourceNestedTests.test.container.ip\"</span>;\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">TEST_CONTAINER_PORT</span> = <span class=\"pl-s\">\"DynamicPropertySourceNestedTests.test.container.port\"</span>;\n\n    <span class=\"pl-k\">static</span> <span class=\"pl-smi\">DemoContainer</span> <span class=\"pl-s1\">container</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DemoContainer</span>();\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">DynamicPropertySource</span>\n    <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">containerProperties</span>(<span class=\"pl-smi\">DynamicPropertyRegistry</span> <span class=\"pl-s1\">registry</span>) {\n        <span class=\"pl-s1\">registry</span>.<span class=\"pl-en\">add</span>(<span class=\"pl-c1\">TEST_CONTAINER_IP</span>, <span class=\"pl-s1\">container</span>::<span class=\"pl-s1\">getIpAddress</span>);\n        <span class=\"pl-s1\">registry</span>.<span class=\"pl-en\">add</span>(<span class=\"pl-c1\">TEST_CONTAINER_PORT</span>, <span class=\"pl-s1\">container</span>::<span class=\"pl-s1\">getPort</span>);\n    }\n\n    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">assertServiceHasInjectedValues</span>(<span class=\"pl-smi\">Service</span> <span class=\"pl-s1\">service</span>) {\n        <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">service</span>.<span class=\"pl-en\">getIp</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-s\">\"127.0.0.1\"</span>);\n        <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">service</span>.<span class=\"pl-en\">getPort</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-c1\">4242</span>);\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">DisplayName</span>(<span class=\"pl-s\">\"@Service has values injected from @DynamicPropertySource\"</span>)\n    <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">serviceHasInjectedValues</span>(<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Autowired</span> <span class=\"pl-smi\">Service</span> <span class=\"pl-s1\">service</span>) {\n        <span class=\"pl-en\">assertServiceHasInjectedValues</span>(<span class=\"pl-s1\">service</span>);\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Nested</span>\n    <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Testing</span> {\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">DynamicPropertySource</span>\n        <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">containerProperties</span>(<span class=\"pl-smi\">DynamicPropertyRegistry</span> <span class=\"pl-s1\">registry</span>) {\n            <span class=\"pl-s1\">registry</span>.<span class=\"pl-en\">add</span>(<span class=\"pl-c1\">TEST_CONTAINER_IP</span>, () -&gt; <span class=\"pl-s\">\"1\"</span>); <span class=\"pl-c\">// even though it is called after outer dynamic properties it does not get applied</span>\n            <span class=\"pl-s1\">registry</span>.<span class=\"pl-en\">add</span>(<span class=\"pl-c1\">TEST_CONTAINER_PORT</span>, <span class=\"pl-s1\">container</span>::<span class=\"pl-s1\">getPort</span>);\n        }\n\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n        <span class=\"pl-smi\">void</span> <span class=\"pl-en\">serviceHasInjectedValues</span>(<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Autowired</span> <span class=\"pl-smi\">Service</span> <span class=\"pl-s1\">service</span>) {\n            <span class=\"pl-en\">assertServiceHasInjectedValues</span>(<span class=\"pl-s1\">service</span>);\n        }\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Configuration</span>\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Import</span>(<span class=\"pl-smi\">Service</span>.<span class=\"pl-k\">class</span>)\n    <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Config</span> {\n    }\n\n    <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Service</span> {\n\n        <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">ip</span>;\n\n        <span class=\"pl-k\">private</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">port</span>;\n\n\n        <span class=\"pl-smi\">Service</span>(<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Value</span>(<span class=\"pl-s\">\"${\"</span> + <span class=\"pl-c1\">TEST_CONTAINER_IP</span> + <span class=\"pl-s\">\":10.0.0.1}\"</span>) <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">ip</span>, <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Value</span>(<span class=\"pl-s\">\"${\"</span> + <span class=\"pl-c1\">TEST_CONTAINER_PORT</span> + <span class=\"pl-s\">\":-999}\"</span>) <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">port</span>) {\n            <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">ip</span> = <span class=\"pl-s1\">ip</span>;\n            <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">port</span> = <span class=\"pl-s1\">port</span>;\n        }\n\n        <span class=\"pl-smi\">String</span> <span class=\"pl-en\">getIp</span>() {\n            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">ip</span>;\n        }\n\n        <span class=\"pl-smi\">int</span> <span class=\"pl-en\">getPort</span>() {\n            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">port</span>;\n        }\n    }\n\n    <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">DemoContainer</span> {\n\n        <span class=\"pl-smi\">String</span> <span class=\"pl-en\">getIpAddress</span>() {\n            <span class=\"pl-k\">return</span> <span class=\"pl-s\">\"127.0.0.1\"</span>;\n        }\n\n        <span class=\"pl-smi\">int</span> <span class=\"pl-en\">getPort</span>() {\n            <span class=\"pl-k\">return</span> <span class=\"pl-c1\">4242</span>;\n        }\n    }\n}</pre></div>",
                "resourcePath": "/spring-projects/spring-boot/issues/37040",
                "createdAt": "2023-08-21T06:51:03Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "for: external-project"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Introduce configuration to diable @Scheduled tasks",
        "url": "https://github.com/spring-projects/spring-framework/pull/31101",
        "resourcePath": "/spring-projects/spring-framework/pull/31101",
        "createdAt": "2023-08-23T16:00:27Z",
        "number": 31101,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context/src/main/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context/src/test/java/org/springframework/scheduling/annotation/ScheduledAnnotationBeanPostProcessorTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5YnPo-2gAoMWZiNDJiODIxNGMzOGQzYmI4NjliZjdlODkyZThiZjliZDhhMWY0Zg",
                "url": "https://github.com/spring-projects/spring-framework/pull/31101/commits/1fb42b8214c38d3bb869bf7e892e8bf9bd8a1f4f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 28073,
                "url": "https://github.com/spring-projects/spring-framework/issues/28073",
                "title": "Introduce NoOpTaskScheduler for disabling @Scheduled tasks in test setups",
                "bodyHTML": "<p dir=\"auto\">If an application defines a <code class=\"notranslate\">@Scheduled(fixedRateString = \"PT6H\")</code> tasks, then this task will be running on any <code class=\"notranslate\">@SpringBootTest</code> <code class=\"notranslate\">junit</code> test that does not explicit mock the bean containing the scheduled task.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Service\npublic class SchedulerService {\n    @Scheduled(fixedRateString = &quot;PT6H&quot;)\n    public void runOnStartup() {\n\n   }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@Service\npublic class SchedulerService {\n    @Scheduled(fixedRateString = \"PT6H\")\n    public void runOnStartup() {\n\n   }\n}\n</code></pre></div>\n<p dir=\"auto\">This gets tedious if there are many more <code class=\"notranslate\">@Scheduled</code> tasks in the application that launch on startup by usage of <code class=\"notranslate\">fixedRate</code> or <code class=\"notranslate\">fixedRateString</code>.</p>\n<p dir=\"auto\">It would be great if there could be a possibility to completely deactivate the execution of <code class=\"notranslate\">@Scheduled</code> tasks in junit.</p>\n<p dir=\"auto\">Just like it is possible to deactivate any <code class=\"notranslate\">@Cacheable</code> annotation by simply setting <code class=\"notranslate\">spring.cache.type=none</code> dring junit tests.</p>\n<p dir=\"auto\">Something like: <code class=\"notranslate\">spring.enable.scheduling=false</code> (default: true)</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/28073",
                "createdAt": "2022-02-17T10:45:00Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Attempt to reset Servlet response before calling ExceptionHandlers",
        "url": "https://github.com/spring-projects/spring-framework/pull/31104",
        "resourcePath": "/spring-projects/spring-framework/pull/31104",
        "createdAt": "2023-08-24T03:49:42Z",
        "number": 31104,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/test/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolverTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5YpuIp2gAoYjRmZDM2YjRiMGMwMjMyZTQ3NDJjMGViZTMxZDI3MjYwM2E1NmViYw",
                "url": "https://github.com/spring-projects/spring-framework/pull/31104/commits/b4fd36b4b0c0232e4742c0ebe31d272603a56ebc"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30702,
                "url": "https://github.com/spring-projects/spring-framework/issues/30702",
                "title": "Attempt to reset Servlet response before calling ExceptionHandlers",
                "bodyHTML": "<p dir=\"auto\">After the postgis package was introduced, an HttpMessageConversionException exception occurred in the business code. After being handled by the unified exception, the json format of the output parameter was incorrect</p>\n<p dir=\"auto\">pom.xml</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\" &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.7.13-SNAPSHOT&lt;/version&gt;\n        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;resultError&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;name&gt;resultError&lt;/name&gt;\n    &lt;description&gt;resultError&lt;/description&gt;\n    &lt;properties&gt;\n        &lt;java.version&gt;1.8&lt;/java.version&gt;\n    &lt;/properties&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;net.postgis&lt;/groupId&gt;\n            &lt;artifactId&gt;postgis-jdbc&lt;/artifactId&gt;\n            &lt;version&gt;2021.1.0&lt;/version&gt;\n            &lt;scope&gt;compile&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;\n            &lt;version&gt;1.2.83&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n            &lt;version&gt;1.18.28&lt;/version&gt;\n            &lt;scope&gt;compile&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n    &lt;repositories&gt;\n        &lt;repository&gt;\n            &lt;id&gt;spring-milestones&lt;/id&gt;\n            &lt;name&gt;Spring Milestones&lt;/name&gt;\n            &lt;url&gt;https://repo.spring.io/milestone&lt;/url&gt;\n            &lt;snapshots&gt;\n                &lt;enabled&gt;false&lt;/enabled&gt;\n            &lt;/snapshots&gt;\n        &lt;/repository&gt;\n        &lt;repository&gt;\n            &lt;id&gt;spring-snapshots&lt;/id&gt;\n            &lt;name&gt;Spring Snapshots&lt;/name&gt;\n            &lt;url&gt;https://repo.spring.io/snapshot&lt;/url&gt;\n            &lt;releases&gt;\n                &lt;enabled&gt;false&lt;/enabled&gt;\n            &lt;/releases&gt;\n        &lt;/repository&gt;\n    &lt;/repositories&gt;\n    &lt;pluginRepositories&gt;\n        &lt;pluginRepository&gt;\n            &lt;id&gt;spring-milestones&lt;/id&gt;\n            &lt;name&gt;Spring Milestones&lt;/name&gt;\n            &lt;url&gt;https://repo.spring.io/milestone&lt;/url&gt;\n            &lt;snapshots&gt;\n                &lt;enabled&gt;false&lt;/enabled&gt;\n            &lt;/snapshots&gt;\n        &lt;/pluginRepository&gt;\n        &lt;pluginRepository&gt;\n            &lt;id&gt;spring-snapshots&lt;/id&gt;\n            &lt;name&gt;Spring Snapshots&lt;/name&gt;\n            &lt;url&gt;https://repo.spring.io/snapshot&lt;/url&gt;\n            &lt;releases&gt;\n                &lt;enabled&gt;false&lt;/enabled&gt;\n            &lt;/releases&gt;\n        &lt;/pluginRepository&gt;\n    &lt;/pluginRepositories&gt;\n\n&lt;/project&gt;\n\"><pre class=\"notranslate\"><code class=\"notranslate\"> &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n    &lt;parent&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;\n        &lt;version&gt;2.7.13-SNAPSHOT&lt;/version&gt;\n        &lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;\n    &lt;/parent&gt;\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;resultError&lt;/artifactId&gt;\n    &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n    &lt;name&gt;resultError&lt;/name&gt;\n    &lt;description&gt;resultError&lt;/description&gt;\n    &lt;properties&gt;\n        &lt;java.version&gt;1.8&lt;/java.version&gt;\n    &lt;/properties&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;\n            &lt;scope&gt;test&lt;/scope&gt;\n        &lt;/dependency&gt;\n\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;net.postgis&lt;/groupId&gt;\n            &lt;artifactId&gt;postgis-jdbc&lt;/artifactId&gt;\n            &lt;version&gt;2021.1.0&lt;/version&gt;\n            &lt;scope&gt;compile&lt;/scope&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;\n            &lt;version&gt;1.2.83&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n            &lt;version&gt;1.18.28&lt;/version&gt;\n            &lt;scope&gt;compile&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n    &lt;repositories&gt;\n        &lt;repository&gt;\n            &lt;id&gt;spring-milestones&lt;/id&gt;\n            &lt;name&gt;Spring Milestones&lt;/name&gt;\n            &lt;url&gt;https://repo.spring.io/milestone&lt;/url&gt;\n            &lt;snapshots&gt;\n                &lt;enabled&gt;false&lt;/enabled&gt;\n            &lt;/snapshots&gt;\n        &lt;/repository&gt;\n        &lt;repository&gt;\n            &lt;id&gt;spring-snapshots&lt;/id&gt;\n            &lt;name&gt;Spring Snapshots&lt;/name&gt;\n            &lt;url&gt;https://repo.spring.io/snapshot&lt;/url&gt;\n            &lt;releases&gt;\n                &lt;enabled&gt;false&lt;/enabled&gt;\n            &lt;/releases&gt;\n        &lt;/repository&gt;\n    &lt;/repositories&gt;\n    &lt;pluginRepositories&gt;\n        &lt;pluginRepository&gt;\n            &lt;id&gt;spring-milestones&lt;/id&gt;\n            &lt;name&gt;Spring Milestones&lt;/name&gt;\n            &lt;url&gt;https://repo.spring.io/milestone&lt;/url&gt;\n            &lt;snapshots&gt;\n                &lt;enabled&gt;false&lt;/enabled&gt;\n            &lt;/snapshots&gt;\n        &lt;/pluginRepository&gt;\n        &lt;pluginRepository&gt;\n            &lt;id&gt;spring-snapshots&lt;/id&gt;\n            &lt;name&gt;Spring Snapshots&lt;/name&gt;\n            &lt;url&gt;https://repo.spring.io/snapshot&lt;/url&gt;\n            &lt;releases&gt;\n                &lt;enabled&gt;false&lt;/enabled&gt;\n            &lt;/releases&gt;\n        &lt;/pluginRepository&gt;\n    &lt;/pluginRepositories&gt;\n\n&lt;/project&gt;\n\n</code></pre></div>\n<p dir=\"auto\">TestController</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"package com.example.result.controller;\n\nimport com.alibaba.fastjson.JSON;\nimport com.example.result.test.Result;\nimport net.postgis.jdbc.PGgeometry;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\n/**\n * test\n *\n * @author Lin\n * @version 3.3.0\n * @since 2023-06-19  11:08:48\n */\n@RestController\n@RequestMapping(&quot;/test&quot;)\npublic class TestController {\n\n\n    @GetMapping(&quot;/1&quot;)\n    public Result&lt;PGgeometry&gt; test1() {\n        String geomJSON = &quot;{\\&quot;geoType\\&quot;:5,\\&quot;geometry\\&quot;:{\\&quot;dimension\\&quot;:2,\\&quot;empty\\&quot;:false,\\&quot;firstPoint\\&quot;:{\\&quot;dimension\\&quot;:2,\\&quot;firstPoint\\&quot;:{\\&quot;$ref\\&quot;:\\&quot;@\\&quot;},\\&quot;haveMeasure\\&quot;:false,\\&quot;lastPoint\\&quot;:{\\&quot;$ref\\&quot;:\\&quot;@\\&quot;},\\&quot;m\\&quot;:0.0,\\&quot;measured\\&quot;:false,\\&quot;srid\\&quot;:4545,\\&quot;type\\&quot;:1,\\&quot;typeString\\&quot;:\\&quot;POINT\\&quot;,\\&quot;value\\&quot;:\\&quot;(518545.4160000002 2500445.7579999994)\\&quot;,\\&quot;x\\&quot;:518545.4160000002,\\&quot;y\\&quot;:2500445.7579999994,\\&quot;z\\&quot;:0.0},\\&quot;haveMeasure\\&quot;:false,\\&quot;lastPoint\\&quot;:{\\&quot;dimension\\&quot;:2,\\&quot;firstPoint\\&quot;:{\\&quot;$ref\\&quot;:\\&quot;@\\&quot;},\\&quot;haveMeasure\\&quot;:false,\\&quot;lastPoint\\&quot;:{\\&quot;$ref\\&quot;:\\&quot;@\\&quot;},\\&quot;m\\&quot;:0.0,\\&quot;measured\\&quot;:false,\\&quot;srid\\&quot;:4545,\\&quot;type\\&quot;:1,\\&quot;typeString\\&quot;:\\&quot;POINT\\&quot;,\\&quot;value\\&quot;:\\&quot;(518629.8839999996 2500523.7479999997)\\&quot;,\\&quot;x\\&quot;:518629.8839999996,\\&quot;y\\&quot;:2500523.7479999997,\\&quot;z\\&quot;:0.0},\\&quot;lines\\&quot;:[{\\&quot;dimension\\&quot;:2,\\&quot;empty\\&quot;:false,\\&quot;firstPoint\\&quot;:{\\&quot;$ref\\&quot;:\\&quot;$.geometry.firstPoint\\&quot;},\\&quot;haveMeasure\\&quot;:false,\\&quot;lastPoint\\&quot;:{\\&quot;$ref\\&quot;:\\&quot;$.geometry.lastPoint\\&quot;},\\&quot;measured\\&quot;:false,\\&quot;points\\&quot;:[{\\&quot;$ref\\&quot;:\\&quot;$.geometry.firstPoint\\&quot;},{\\&quot;$ref\\&quot;:\\&quot;$.geometry.lastPoint\\&quot;}],\\&quot;srid\\&quot;:4545,\\&quot;type\\&quot;:2,\\&quot;typeString\\&quot;:\\&quot;LINESTRING\\&quot;,\\&quot;value\\&quot;:\\&quot;(518545.4160000002 2500445.7579999994,518629.8839999996 2500523.7479999997)\\&quot;}],\\&quot;measured\\&quot;:false,\\&quot;srid\\&quot;:4545,\\&quot;type\\&quot;:5,\\&quot;typeString\\&quot;:\\&quot;MULTILINESTRING\\&quot;,\\&quot;value\\&quot;:\\&quot;((518545.4160000002 2500445.7579999994,518629.8839999996 2500523.7479999997))\\&quot;},\\&quot;null\\&quot;:false,\\&quot;type\\&quot;:\\&quot;geometry\\&quot;,\\&quot;value\\&quot;:\\&quot;SRID=4545;MULTILINESTRING((518545.4160000002 2500445.7579999994,518629.8839999996 2500523.7479999997))\\&quot;}&quot;;\n        PGgeometry pGgeometry = JSON.parseObject(geomJSON, PGgeometry.class);\n        return Result.ok(pGgeometry);\n    }\n\n    @GetMapping(&quot;/2&quot;)\n    public Result&lt;PGgeometry&gt; test2() {\n        return Result.ok(new PGgeometry());\n    }\n\n    @GetMapping(&quot;/3&quot;)\n    public Result&lt;Map&lt;String, Object&gt;&gt; test3() {\n        String geomJSON = &quot;{\\&quot;geoType\\&quot;:5,\\&quot;geometry\\&quot;:{\\&quot;dimension\\&quot;:2,\\&quot;empty\\&quot;:false,\\&quot;firstPoint\\&quot;:{\\&quot;dimension\\&quot;:2,\\&quot;firstPoint\\&quot;:{\\&quot;$ref\\&quot;:\\&quot;@\\&quot;},\\&quot;haveMeasure\\&quot;:false,\\&quot;lastPoint\\&quot;:{\\&quot;$ref\\&quot;:\\&quot;@\\&quot;},\\&quot;m\\&quot;:0.0,\\&quot;measured\\&quot;:false,\\&quot;srid\\&quot;:4545,\\&quot;type\\&quot;:1,\\&quot;typeString\\&quot;:\\&quot;POINT\\&quot;,\\&quot;value\\&quot;:\\&quot;(518545.4160000002 2500445.7579999994)\\&quot;,\\&quot;x\\&quot;:518545.4160000002,\\&quot;y\\&quot;:2500445.7579999994,\\&quot;z\\&quot;:0.0},\\&quot;haveMeasure\\&quot;:false,\\&quot;lastPoint\\&quot;:{\\&quot;dimension\\&quot;:2,\\&quot;firstPoint\\&quot;:{\\&quot;$ref\\&quot;:\\&quot;@\\&quot;},\\&quot;haveMeasure\\&quot;:false,\\&quot;lastPoint\\&quot;:{\\&quot;$ref\\&quot;:\\&quot;@\\&quot;},\\&quot;m\\&quot;:0.0,\\&quot;measured\\&quot;:false,\\&quot;srid\\&quot;:4545,\\&quot;type\\&quot;:1,\\&quot;typeString\\&quot;:\\&quot;POINT\\&quot;,\\&quot;value\\&quot;:\\&quot;(518629.8839999996 2500523.7479999997)\\&quot;,\\&quot;x\\&quot;:518629.8839999996,\\&quot;y\\&quot;:2500523.7479999997,\\&quot;z\\&quot;:0.0},\\&quot;lines\\&quot;:[{\\&quot;dimension\\&quot;:2,\\&quot;empty\\&quot;:false,\\&quot;firstPoint\\&quot;:{\\&quot;$ref\\&quot;:\\&quot;$.geometry.firstPoint\\&quot;},\\&quot;haveMeasure\\&quot;:false,\\&quot;lastPoint\\&quot;:{\\&quot;$ref\\&quot;:\\&quot;$.geometry.lastPoint\\&quot;},\\&quot;measured\\&quot;:false,\\&quot;points\\&quot;:[{\\&quot;$ref\\&quot;:\\&quot;$.geometry.firstPoint\\&quot;},{\\&quot;$ref\\&quot;:\\&quot;$.geometry.lastPoint\\&quot;}],\\&quot;srid\\&quot;:4545,\\&quot;type\\&quot;:2,\\&quot;typeString\\&quot;:\\&quot;LINESTRING\\&quot;,\\&quot;value\\&quot;:\\&quot;(518545.4160000002 2500445.7579999994,518629.8839999996 2500523.7479999997)\\&quot;}],\\&quot;measured\\&quot;:false,\\&quot;srid\\&quot;:4545,\\&quot;type\\&quot;:5,\\&quot;typeString\\&quot;:\\&quot;MULTILINESTRING\\&quot;,\\&quot;value\\&quot;:\\&quot;((518545.4160000002 2500445.7579999994,518629.8839999996 2500523.7479999997))\\&quot;},\\&quot;null\\&quot;:false,\\&quot;type\\&quot;:\\&quot;geometry\\&quot;,\\&quot;value\\&quot;:\\&quot;SRID=4545;MULTILINESTRING((518545.4160000002 2500445.7579999994,518629.8839999996 2500523.7479999997))\\&quot;}&quot;;\n        PGgeometry pGgeometry = JSON.parseObject(geomJSON, PGgeometry.class);\n        Map&lt;String, Object&gt; pipelineMap = new HashMap&lt;&gt;();\n        pipelineMap.put(&quot;geom&quot;, pGgeometry);\n        return Result.ok(pipelineMap);\n    }\n}\n\"><pre class=\"notranslate\"><code class=\"notranslate\">package com.example.result.controller;\n\nimport com.alibaba.fastjson.JSON;\nimport com.example.result.test.Result;\nimport net.postgis.jdbc.PGgeometry;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\n/**\n * test\n *\n * @author Lin\n * @version 3.3.0\n * @since 2023-06-19  11:08:48\n */\n@RestController\n@RequestMapping(\"/test\")\npublic class TestController {\n\n\n    @GetMapping(\"/1\")\n    public Result&lt;PGgeometry&gt; test1() {\n        String geomJSON = \"{\\\"geoType\\\":5,\\\"geometry\\\":{\\\"dimension\\\":2,\\\"empty\\\":false,\\\"firstPoint\\\":{\\\"dimension\\\":2,\\\"firstPoint\\\":{\\\"$ref\\\":\\\"@\\\"},\\\"haveMeasure\\\":false,\\\"lastPoint\\\":{\\\"$ref\\\":\\\"@\\\"},\\\"m\\\":0.0,\\\"measured\\\":false,\\\"srid\\\":4545,\\\"type\\\":1,\\\"typeString\\\":\\\"POINT\\\",\\\"value\\\":\\\"(518545.4160000002 2500445.7579999994)\\\",\\\"x\\\":518545.4160000002,\\\"y\\\":2500445.7579999994,\\\"z\\\":0.0},\\\"haveMeasure\\\":false,\\\"lastPoint\\\":{\\\"dimension\\\":2,\\\"firstPoint\\\":{\\\"$ref\\\":\\\"@\\\"},\\\"haveMeasure\\\":false,\\\"lastPoint\\\":{\\\"$ref\\\":\\\"@\\\"},\\\"m\\\":0.0,\\\"measured\\\":false,\\\"srid\\\":4545,\\\"type\\\":1,\\\"typeString\\\":\\\"POINT\\\",\\\"value\\\":\\\"(518629.8839999996 2500523.7479999997)\\\",\\\"x\\\":518629.8839999996,\\\"y\\\":2500523.7479999997,\\\"z\\\":0.0},\\\"lines\\\":[{\\\"dimension\\\":2,\\\"empty\\\":false,\\\"firstPoint\\\":{\\\"$ref\\\":\\\"$.geometry.firstPoint\\\"},\\\"haveMeasure\\\":false,\\\"lastPoint\\\":{\\\"$ref\\\":\\\"$.geometry.lastPoint\\\"},\\\"measured\\\":false,\\\"points\\\":[{\\\"$ref\\\":\\\"$.geometry.firstPoint\\\"},{\\\"$ref\\\":\\\"$.geometry.lastPoint\\\"}],\\\"srid\\\":4545,\\\"type\\\":2,\\\"typeString\\\":\\\"LINESTRING\\\",\\\"value\\\":\\\"(518545.4160000002 2500445.7579999994,518629.8839999996 2500523.7479999997)\\\"}],\\\"measured\\\":false,\\\"srid\\\":4545,\\\"type\\\":5,\\\"typeString\\\":\\\"MULTILINESTRING\\\",\\\"value\\\":\\\"((518545.4160000002 2500445.7579999994,518629.8839999996 2500523.7479999997))\\\"},\\\"null\\\":false,\\\"type\\\":\\\"geometry\\\",\\\"value\\\":\\\"SRID=4545;MULTILINESTRING((518545.4160000002 2500445.7579999994,518629.8839999996 2500523.7479999997))\\\"}\";\n        PGgeometry pGgeometry = JSON.parseObject(geomJSON, PGgeometry.class);\n        return Result.ok(pGgeometry);\n    }\n\n    @GetMapping(\"/2\")\n    public Result&lt;PGgeometry&gt; test2() {\n        return Result.ok(new PGgeometry());\n    }\n\n    @GetMapping(\"/3\")\n    public Result&lt;Map&lt;String, Object&gt;&gt; test3() {\n        String geomJSON = \"{\\\"geoType\\\":5,\\\"geometry\\\":{\\\"dimension\\\":2,\\\"empty\\\":false,\\\"firstPoint\\\":{\\\"dimension\\\":2,\\\"firstPoint\\\":{\\\"$ref\\\":\\\"@\\\"},\\\"haveMeasure\\\":false,\\\"lastPoint\\\":{\\\"$ref\\\":\\\"@\\\"},\\\"m\\\":0.0,\\\"measured\\\":false,\\\"srid\\\":4545,\\\"type\\\":1,\\\"typeString\\\":\\\"POINT\\\",\\\"value\\\":\\\"(518545.4160000002 2500445.7579999994)\\\",\\\"x\\\":518545.4160000002,\\\"y\\\":2500445.7579999994,\\\"z\\\":0.0},\\\"haveMeasure\\\":false,\\\"lastPoint\\\":{\\\"dimension\\\":2,\\\"firstPoint\\\":{\\\"$ref\\\":\\\"@\\\"},\\\"haveMeasure\\\":false,\\\"lastPoint\\\":{\\\"$ref\\\":\\\"@\\\"},\\\"m\\\":0.0,\\\"measured\\\":false,\\\"srid\\\":4545,\\\"type\\\":1,\\\"typeString\\\":\\\"POINT\\\",\\\"value\\\":\\\"(518629.8839999996 2500523.7479999997)\\\",\\\"x\\\":518629.8839999996,\\\"y\\\":2500523.7479999997,\\\"z\\\":0.0},\\\"lines\\\":[{\\\"dimension\\\":2,\\\"empty\\\":false,\\\"firstPoint\\\":{\\\"$ref\\\":\\\"$.geometry.firstPoint\\\"},\\\"haveMeasure\\\":false,\\\"lastPoint\\\":{\\\"$ref\\\":\\\"$.geometry.lastPoint\\\"},\\\"measured\\\":false,\\\"points\\\":[{\\\"$ref\\\":\\\"$.geometry.firstPoint\\\"},{\\\"$ref\\\":\\\"$.geometry.lastPoint\\\"}],\\\"srid\\\":4545,\\\"type\\\":2,\\\"typeString\\\":\\\"LINESTRING\\\",\\\"value\\\":\\\"(518545.4160000002 2500445.7579999994,518629.8839999996 2500523.7479999997)\\\"}],\\\"measured\\\":false,\\\"srid\\\":4545,\\\"type\\\":5,\\\"typeString\\\":\\\"MULTILINESTRING\\\",\\\"value\\\":\\\"((518545.4160000002 2500445.7579999994,518629.8839999996 2500523.7479999997))\\\"},\\\"null\\\":false,\\\"type\\\":\\\"geometry\\\",\\\"value\\\":\\\"SRID=4545;MULTILINESTRING((518545.4160000002 2500445.7579999994,518629.8839999996 2500523.7479999997))\\\"}\";\n        PGgeometry pGgeometry = JSON.parseObject(geomJSON, PGgeometry.class);\n        Map&lt;String, Object&gt; pipelineMap = new HashMap&lt;&gt;();\n        pipelineMap.put(\"geom\", pGgeometry);\n        return Result.ok(pipelineMap);\n    }\n}\n\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/25889679/246725309-c772aef4-221f-431e-b2cb-2d11162610c7.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDM4MTQsIm5iZiI6MTcxNDk0MzUxNCwicGF0aCI6Ii8yNTg4OTY3OS8yNDY3MjUzMDktYzc3MmFlZjQtMjIxZi00MzFlLWIyY2ItMmQxMTE2MjYxMGM3LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIxMTE1NFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTk5OWVlOTMzODU0ZTAyY2EzNTMzNmZjYzkxMmQwMzBjZWEzMDFlZDNhOTIyYmNhYmU1N2YyMDM2ZTRkZjM5ZTQmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.DGb9_COlaDQ2Of-37HFdLzI0NRFrcUQYa9ghlueIOT8\"><img src=\"https://private-user-images.githubusercontent.com/25889679/246725309-c772aef4-221f-431e-b2cb-2d11162610c7.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDM4MTQsIm5iZiI6MTcxNDk0MzUxNCwicGF0aCI6Ii8yNTg4OTY3OS8yNDY3MjUzMDktYzc3MmFlZjQtMjIxZi00MzFlLWIyY2ItMmQxMTE2MjYxMGM3LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIxMTE1NFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTk5OWVlOTMzODU0ZTAyY2EzNTMzNmZjYzkxMmQwMzBjZWEzMDFlZDNhOTIyYmNhYmU1N2YyMDM2ZTRkZjM5ZTQmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.DGb9_COlaDQ2Of-37HFdLzI0NRFrcUQYa9ghlueIOT8\" alt=\"1\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/25889679/246725340-5bca85a0-58fd-4f7b-9d68-d3c35716201d.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDM4MTQsIm5iZiI6MTcxNDk0MzUxNCwicGF0aCI6Ii8yNTg4OTY3OS8yNDY3MjUzNDAtNWJjYTg1YTAtNThmZC00ZjdiLTlkNjgtZDNjMzU3MTYyMDFkLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIxMTE1NFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTZkMDIwZDY2ZmE5ZDUxZTMzYmE1ZmRmZTFiZGZhNmMxYWYyODFkYjhjZDU4ODFlNTZiOTJiYTFlYjk3ZTg1NGMmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.rDdamHz9wZeVbJ2oXfiLOztLclWKTwS1RGs5vQXZNrY\"><img src=\"https://private-user-images.githubusercontent.com/25889679/246725340-5bca85a0-58fd-4f7b-9d68-d3c35716201d.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDM4MTQsIm5iZiI6MTcxNDk0MzUxNCwicGF0aCI6Ii8yNTg4OTY3OS8yNDY3MjUzNDAtNWJjYTg1YTAtNThmZC00ZjdiLTlkNjgtZDNjMzU3MTYyMDFkLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIxMTE1NFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTZkMDIwZDY2ZmE5ZDUxZTMzYmE1ZmRmZTFiZGZhNmMxYWYyODFkYjhjZDU4ODFlNTZiOTJiYTFlYjk3ZTg1NGMmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.rDdamHz9wZeVbJ2oXfiLOztLclWKTwS1RGs5vQXZNrY\" alt=\"2\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/25889679/246725347-271f39cd-363f-4185-aaf7-32793c8aae2b.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDM4MTQsIm5iZiI6MTcxNDk0MzUxNCwicGF0aCI6Ii8yNTg4OTY3OS8yNDY3MjUzNDctMjcxZjM5Y2QtMzYzZi00MTg1LWFhZjctMzI3OTNjOGFhZTJiLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIxMTE1NFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTliNDlhOWU3YzA5ZmQzNjEzNTBmNzRjNjJhZTFkNTM3NDA3OGQxODNkMTVkYjRkZTNiODcxZjE0MWI2YjViN2YmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.q0TtSFAuFzRfbve7-VHssUvfQbmATvTtkain6lNwSjI\"><img src=\"https://private-user-images.githubusercontent.com/25889679/246725347-271f39cd-363f-4185-aaf7-32793c8aae2b.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDM4MTQsIm5iZiI6MTcxNDk0MzUxNCwicGF0aCI6Ii8yNTg4OTY3OS8yNDY3MjUzNDctMjcxZjM5Y2QtMzYzZi00MTg1LWFhZjctMzI3OTNjOGFhZTJiLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIxMTE1NFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTliNDlhOWU3YzA5ZmQzNjEzNTBmNzRjNjJhZTFkNTM3NDA3OGQxODNkMTVkYjRkZTNiODcxZjE0MWI2YjViN2YmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.q0TtSFAuFzRfbve7-VHssUvfQbmATvTtkain6lNwSjI\" alt=\"3\" style=\"max-width: 100%;\"></a></p>\n<blockquote>\n<p dir=\"auto\">demo file</p>\n</blockquote>\n<p dir=\"auto\"><a href=\"https://github.com/spring-projects/spring-boot/files/11785827/resultError.zip\">resultError.zip</a></p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30702",
                "createdAt": "2023-06-19T04:28:51Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "When context uses component scan, parent class conditions are ignored in favor of nested class conditions.",
        "url": "https://github.com/spring-projects/spring-framework/pull/31123",
        "resourcePath": "/spring-projects/spring-framework/pull/31123",
        "createdAt": "2023-08-28T09:06:04Z",
        "number": 31123,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context/src/main/java/org/springframework/context/annotation/ClassPathScanningCandidateComponentProvider.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-context/src/test/java/org/springframework/context/nested_config/ParentConditionsTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5Y6Y3O2gAoMWNhMmZlYWE3MGZiZjc2NWE1YmE0MjJkYmM2ZDQxZjc4MzRmNzJiZg",
                "url": "https://github.com/spring-projects/spring-framework/pull/31123/commits/1ca2feaa70fbf765a5ba422dbc6d41f7834f72bf"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29372,
                "url": "https://github.com/spring-projects/spring-framework/issues/29372",
                "title": "Parent Conditionals are ignored on component scanning",
                "bodyHTML": "<p dir=\"auto\">Imagine you have the following configuration and the associated properties:</p>\n<details>\n<summary>MyConfiguration.java</summary>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Configuration\n@EnableConfigurationProperties(MyProperties.class)\npublic class MyConfiguration {\n\n  @Configuration\n  @ConditionalOnProperty(value = &quot;my.enabled&quot;, havingValue = &quot;true&quot;)\n  static class MyEnabledConfiguration {\n\n    @Configuration\n    @ConditionalOnProperty(value = &quot;my.version&quot;, havingValue = &quot;v1&quot;)\n    static class MyEnabledFirstConfiguration {\n      @Bean\n      public MyClient firstClient() {\n        return new FirstClient();\n      }\n    }\n\n    @Configuration\n    @ConditionalOnProperty(value = &quot;my.version&quot;, havingValue = &quot;v2&quot;, matchIfMissing = true)\n    static class MyEnabledSecondConfiguration {\n      @Bean\n      public MyClient secondClient() {\n        return new SecondClient();\n      }\n\n    }\n  }\n\n  @Configuration\n  @ConditionalOnProperty(value = &quot;my.enabled&quot;, havingValue = &quot;false&quot;, matchIfMissing = true)\n  static class MyDisabledConfiguration {\n\n    @Bean\n    public MyClient thirdClient() {\n      return new ThirdClient();\n    }\n  }\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Configuration</span>\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">EnableConfigurationProperties</span>(<span class=\"pl-smi\">MyProperties</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MyConfiguration</span> {\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Configuration</span>\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">ConditionalOnProperty</span>(<span class=\"pl-s1\">value</span> = <span class=\"pl-s\">\"my.enabled\"</span>, <span class=\"pl-s1\">havingValue</span> = <span class=\"pl-s\">\"true\"</span>)\n  <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MyEnabledConfiguration</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Configuration</span>\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">ConditionalOnProperty</span>(<span class=\"pl-s1\">value</span> = <span class=\"pl-s\">\"my.version\"</span>, <span class=\"pl-s1\">havingValue</span> = <span class=\"pl-s\">\"v1\"</span>)\n    <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MyEnabledFirstConfiguration</span> {\n      <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Bean</span>\n      <span class=\"pl-k\">public</span> <span class=\"pl-smi\">MyClient</span> <span class=\"pl-en\">firstClient</span>() {\n        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">FirstClient</span>();\n      }\n    }\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Configuration</span>\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">ConditionalOnProperty</span>(<span class=\"pl-s1\">value</span> = <span class=\"pl-s\">\"my.version\"</span>, <span class=\"pl-s1\">havingValue</span> = <span class=\"pl-s\">\"v2\"</span>, <span class=\"pl-s1\">matchIfMissing</span> = <span class=\"pl-c1\">true</span>)\n    <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MyEnabledSecondConfiguration</span> {\n      <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Bean</span>\n      <span class=\"pl-k\">public</span> <span class=\"pl-smi\">MyClient</span> <span class=\"pl-en\">secondClient</span>() {\n        <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SecondClient</span>();\n      }\n\n    }\n  }\n\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Configuration</span>\n  <span class=\"pl-c1\">@</span><span class=\"pl-c1\">ConditionalOnProperty</span>(<span class=\"pl-s1\">value</span> = <span class=\"pl-s\">\"my.enabled\"</span>, <span class=\"pl-s1\">havingValue</span> = <span class=\"pl-s\">\"false\"</span>, <span class=\"pl-s1\">matchIfMissing</span> = <span class=\"pl-c1\">true</span>)\n  <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MyDisabledConfiguration</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Bean</span>\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">MyClient</span> <span class=\"pl-en\">thirdClient</span>() {\n      <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">ThirdClient</span>();\n    }\n  }</pre></div>\n</details>\n<details>\n<summary>MyProperties.java</summary>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Getter\n@Setter\n@Validated\n@ConfigurationProperties(prefix = &quot;my&quot;)\npublic class MyProperties {\n\n  private boolean enabled;\n\n  private Version version = Version.V1;\n\n  public enum Version {\n    V1,\n    V2\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">Getter</span>\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Setter</span>\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Validated</span>\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">ConfigurationProperties</span>(<span class=\"pl-s1\">prefix</span> = <span class=\"pl-s\">\"my\"</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MyProperties</span> {\n\n  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">boolean</span> <span class=\"pl-s1\">enabled</span>;\n\n  <span class=\"pl-k\">private</span> <span class=\"pl-smi\">Version</span> <span class=\"pl-s1\">version</span> = <span class=\"pl-smi\">Version</span>.<span class=\"pl-c1\">V1</span>;\n\n  <span class=\"pl-k\">public</span> <span class=\"pl-k\">enum</span> <span class=\"pl-smi\">Version</span> {\n    <span class=\"pl-c1\">V1</span>,\n    <span class=\"pl-c1\">V2</span>\n  }\n}</pre></div>\n</details>\n<p dir=\"auto\">In following case I expect the only single bean of type <code class=\"notranslate\">ThirdClient</code></p>\n<div class=\"highlight highlight-source-yaml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"my:\n  enabled: false\n  version: v1\"><pre class=\"notranslate\"><span class=\"pl-ent\">my</span>:\n  <span class=\"pl-ent\">enabled</span>: <span class=\"pl-c1\">false</span>\n  <span class=\"pl-ent\">version</span>: <span class=\"pl-c1\">v1</span></pre></div>\n<p dir=\"auto\">And it actually works fine, if you write your test as following:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@SpringBootTest(classes = MyConfiguration.class)\nclass MySpringBootTest {\n\n    @Autowired\n    private ApplicationContext context;\n\n    @Test\n    void contextLoads() {\n        assertThat(context.getBeansOfType(MyClient.class).size()).isEqualTo(1);\n        assertThat(context.getBean(MyClient.class)).isInstanceOf(ThirdClient.class);\n    }\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">SpringBootTest</span>(<span class=\"pl-s1\">classes</span> = <span class=\"pl-smi\">MyConfiguration</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">MySpringBootTest</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Autowired</span>\n    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">ApplicationContext</span> <span class=\"pl-s1\">context</span>;\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n    <span class=\"pl-smi\">void</span> <span class=\"pl-en\">contextLoads</span>() {\n        <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">context</span>.<span class=\"pl-en\">getBeansOfType</span>(<span class=\"pl-smi\">MyClient</span>.<span class=\"pl-k\">class</span>).<span class=\"pl-en\">size</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-c1\">1</span>);\n        <span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">context</span>.<span class=\"pl-en\">getBean</span>(<span class=\"pl-smi\">MyClient</span>.<span class=\"pl-k\">class</span>)).<span class=\"pl-en\">isInstanceOf</span>(<span class=\"pl-smi\">ThirdClient</span>.<span class=\"pl-k\">class</span>);\n    }\n}</pre></div>\n<p dir=\"auto\">However if you are using component scan, the parent conditional is ignored.</p>\n<div class=\"highlight highlight-source-diff notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"+ @SpringBootTest\n- @SpringBootTest(classes = MyConfiguration.class)\nclass MySpringBootTest {\n    ...\n}\"><pre class=\"notranslate\"><span class=\"pl-mi1\"><span class=\"pl-mi1\">+</span> @SpringBootTest</span>\n<span class=\"pl-md\"><span class=\"pl-md\">-</span> @SpringBootTest(classes = MyConfiguration.class)</span>\nclass MySpringBootTest {\n    ...\n}</pre></div>\n<p dir=\"auto\">In this case you get the following two beans instead of expected single one as in example above.</p>\n<ul dir=\"auto\">\n<li>FirstClient</li>\n<li>ThirdClient</li>\n</ul>",
                "resourcePath": "/spring-projects/spring-framework/issues/29372",
                "createdAt": "2022-10-13T21:02:42Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status: invalid"
                      }
                    },
                    {
                      "node": {
                        "name": "in: core"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Consolidate HTTP Interface client support for MultipartFile and `@RequestPart`",
        "url": "https://github.com/spring-projects/spring-framework/pull/31164",
        "resourcePath": "/spring-projects/spring-framework/pull/31164",
        "createdAt": "2023-09-03T21:45:28Z",
        "number": 31164,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/HttpServiceProxyFactory.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/MultipartFileArgumentResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/RequestPartArgumentResolver.java"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "spring-web/src/test/java/org/springframework/web/service/invoker/MultipartFileArgumentResolverTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/java/org/springframework/web/service/invoker/RequestPartArgumentResolverTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5Zbhlj2gAoYzhlZTc5OTI0ZGEwYjJmNDlhYjM0MDhmNDlmMGM1ODg2ODM4ZmM0Nw",
                "url": "https://github.com/spring-projects/spring-framework/pull/31164/commits/c8ee79924da0b2f49ab3408f49f0c5886838fc47"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 31139,
                "url": "https://github.com/spring-projects/spring-framework/issues/31139",
                "title": "HTTP Interface client should not fail if `@RequestPart` used with `MultipartFile`",
                "bodyHTML": "<p dir=\"auto\">In <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1669435301\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/30342\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/30342/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/30342\">#30342</a> we added support for <code class=\"notranslate\">MultipartFile</code> in a separate arguments resolver. The resolver is documented as not requiring <code class=\"notranslate\">@RequestPart</code> since it's recoginized by type and can be made optional with <code class=\"notranslate\">java.util.Optional</code>. However, it also shouldn't fail if that combination is used, and right now that's not the case as mentioned in as per <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1669435301\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/30342\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/30342/hovercard?comment_id=1691949955&amp;comment_type=issue_comment\" href=\"https://github.com/spring-projects/spring-framework/issues/30342#issuecomment-1691949955\">#30342 (comment)</a>, since the resolver for <code class=\"notranslate\">@RequestPart</code> is used first.</p>\n<p dir=\"auto\">I think we should reconsider a tighter integration between the two resolvers, and maybe even merge them into the <code class=\"notranslate\">RequestPartArgumentResolver</code> so it supports <code class=\"notranslate\">@RequestPart</code> with <code class=\"notranslate\">MultipartFile</code> but also just <code class=\"notranslate\">MultipartFile</code>.</p>\n<p dir=\"auto\">/cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/OlgaMaciaszek/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/OlgaMaciaszek\">@OlgaMaciaszek</a></p>",
                "resourcePath": "/spring-projects/spring-framework/issues/31139",
                "createdAt": "2023-08-30T15:10:12Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Introduce awaitReceive and awaitReceiveOrNull APIs",
        "url": "https://github.com/spring-projects/spring-framework/pull/31188",
        "resourcePath": "/spring-projects/spring-framework/pull/31188",
        "createdAt": "2023-09-07T18:20:46Z",
        "number": 31188,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/main/kotlin/org/springframework/web/reactive/function/server/ServerRequestExtensions.kt"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5ZzvRE2gAoNWY1MTQ0YWIxN2IyMjUzYzQ3YjJjY2Q3MjgzMzllNDVmMDdiNzZkMA",
                "url": "https://github.com/spring-projects/spring-framework/pull/31188/commits/5f5144ab17b2253c47b2ccd728339e45f07b76d0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30926,
                "url": "https://github.com/spring-projects/spring-framework/issues/30926",
                "title": "web.reactive.function.server.ServerRequest.awaitBody() exception handling",
                "bodyHTML": "\n<p dir=\"auto\"><strong>Affects:</strong> Spring v6.0.6</p>\n<h2 dir=\"auto\">What is the recommended approach on handling ServerRequest.awaitBody()</h2>\n<p dir=\"auto\">Right now, the API is using under the hood <code class=\"notranslate\">awaitSingle()</code> from <code class=\"notranslate\">kotlinx.coroutines.reactive</code>, which is intentional from<br>\nthe spring team. Now, the API is throwing either <code class=\"notranslate\">NoSuchElementException</code> or <code class=\"notranslate\">IllegalArgmuentException</code> depending on if<br>\nthe publisher emits zero or more than one values.</p>\n<p dir=\"auto\"><strong>Question:</strong> In general code, are we expected to catch them both? Although, the operator is being used on a <code class=\"notranslate\">Mono</code>,<br>\nwhich technically can never throw <code class=\"notranslate\">IllegalArgmuentException</code>?</p>\n<p dir=\"auto\">On the other hand, since we always extract the body (thus we are not directly affected by how a client writes in body)<br>\nin either a <code class=\"notranslate\">Flux</code> or <code class=\"notranslate\">Mono</code> if the client emits more than one values, but we use <code class=\"notranslate\">ServerRequest.awaitBody()</code> the body<br>\nis converted <strong>properly</strong>, and we are retrieving a collection. Though, this process breaks in serialization<br>\n(as expected).</p>\n<h3 dir=\"auto\">Usage in general code</h3>\n<p dir=\"auto\">The most \"blur\" part is about throwing <code class=\"notranslate\">IllegalArgmuentException</code>. That is because, when using <code class=\"notranslate\">kotlinx.serialization</code><br>\nfor general \"catch-all\" around deserialization it is recommended to catch <code class=\"notranslate\">IllegalArgmuentException</code>. In that case, we<br>\nhave to know beforehand if we need to also check if  <code class=\"notranslate\">IllegalArgmuentException</code> is type of <code class=\"notranslate\">SerializationException</code><br>\n(so we can distinguish between them).</p>\n<p dir=\"auto\">When I am writing code to handle <code class=\"notranslate\">ServerRequest.awaitBody()</code>, I find it a one-way path to use<br>\n<code class=\"notranslate\">ServerRequest.awaitBodyOrNull()</code> API to avoid all the above points.</p>\n<p dir=\"auto\">My exception handling looks like this:</p>\n<div class=\"highlight highlight-source-kotlin notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"suspend inline fun &lt;reified T : Any&gt; ServerRequest.awaitAndRequireBody(): T {\n    val body = try {\n        awaitBodyOrNull&lt;T&gt;()\n    } catch (e: IllegalArgumentException) { // serialization error\n        throw IllegalArgumentException(bodyTypeErrorMessage&lt;T&gt;())\n    }\n    requireNotNull(body) { bodyTypeErrorMessage&lt;T&gt;() }\n    return body\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">suspend</span> <span class=\"pl-k\">inline</span> <span class=\"pl-k\">fun</span> &lt;<span class=\"pl-en\">reified</span> <span class=\"pl-en\">T</span> : <span class=\"pl-en\">Any</span>&gt; ServerRequest.<span class=\"pl-en\">awaitAndRequireBody</span>(): <span class=\"pl-en\">T</span> {\n    <span class=\"pl-k\">val</span> body <span class=\"pl-k\">=</span> <span class=\"pl-k\">try</span> {\n        awaitBodyOrNull&lt;<span class=\"pl-en\">T</span>&gt;()\n    } <span class=\"pl-k\">catch</span> (e<span class=\"pl-k\">:</span> <span class=\"pl-en\">IllegalArgumentException</span>) { <span class=\"pl-c\"><span class=\"pl-c\">//</span> serialization error</span>\n        <span class=\"pl-k\">throw</span> <span class=\"pl-en\">IllegalArgumentException</span>(bodyTypeErrorMessage&lt;<span class=\"pl-en\">T</span>&gt;())\n    }\n    requireNotNull(body) { bodyTypeErrorMessage&lt;<span class=\"pl-en\">T</span>&gt;() }\n    <span class=\"pl-k\">return</span> body\n}</pre></div>\n<p dir=\"auto\">Which makes <code class=\"notranslate\">ServerRequest.awaitBody()</code> kind of \"obsolete\" API (at least imho).</p>\n<h2 dir=\"auto\">Proposal</h2>\n<p dir=\"auto\">I recommend to at least document about the fact that <code class=\"notranslate\">ServerRequest.awaitBody()</code> throws exceptions which are expected to be caught from the user.</p>\n<p dir=\"auto\">Also, happy to provide a pr with the changes.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30926",
                "createdAt": "2023-07-23T14:33:59Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "status: declined"
                      }
                    },
                    {
                      "node": {
                        "name": "theme: kotlin"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Treat string as ordinal of enum if it's numeric",
        "url": "https://github.com/spring-projects/spring-framework/pull/31292",
        "resourcePath": "/spring-projects/spring-framework/pull/31292",
        "createdAt": "2023-09-22T03:04:45Z",
        "number": 31292,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/core/convert/support/StringToEnumConverterFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/test/java/org/springframework/core/convert/support/GenericConversionServiceTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5a8vxB2gAoM2UwMmVjYTczNDZkM2I3ODgzOTBhY2Y3MjQxZjFjMDI5ZGRjOGI1OQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/31292/commits/3e02eca7346d3b788390acf7241f1c029ddc8b59"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 25543,
                "url": "https://github.com/spring-projects/spring-framework/issues/25543",
                "title": "IntegerToEnumConverterFactory is not applied to web request parameters",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong> 5.2.8.RELEASE</p>\n<hr>\n<p dir=\"auto\">I have a controller like this</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@RestController\n@RequestMapping(&quot;/dict&quot;)\npublic class EnumTestController {\n\n    @GetMapping(&quot;/convert&quot;)\n    public EnabledEnum convert(@RequestParam EnabledEnum enabledEnum) {\n        return enabledEnum;\n    }\n\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">RestController</span>\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">RequestMapping</span>(<span class=\"pl-s\">\"/dict\"</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">EnumTestController</span> {\n\n    <span class=\"pl-c1\">@</span><span class=\"pl-c1\">GetMapping</span>(<span class=\"pl-s\">\"/convert\"</span>)\n    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">EnabledEnum</span> <span class=\"pl-en\">convert</span>(<span class=\"pl-c1\">@</span><span class=\"pl-c1\">RequestParam</span> <span class=\"pl-smi\">EnabledEnum</span> <span class=\"pl-s1\">enabledEnum</span>) {\n        <span class=\"pl-k\">return</span> <span class=\"pl-s1\">enabledEnum</span>;\n    }\n\n}</pre></div>\n<p dir=\"auto\">and <code class=\"notranslate\">EnabledEnum</code> is</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public enum EnabledEnum {\n    DISABLE, ENABLE;\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">enum</span> <span class=\"pl-smi\">EnabledEnum</span> {\n    <span class=\"pl-c1\">DISABLE</span>, <span class=\"pl-c1\">ENABLE</span>;\n}</pre></div>\n<p dir=\"auto\">I use <a href=\"http://localhost:8080/dict/convert?enabledEnum=0\" rel=\"nofollow\">http://localhost:8080/dict/convert?enabledEnum=0</a> to request, but it throws exception with the stack trace:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam org.gywebframework.web.sample.constant.EnabledEnum] for value '0'; nested exception is java.lang.IllegalArgumentException: No enum constant org.gywebframework.web.sample.constant.EnabledEnum.0\n\tat org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:47) ~[spring-core-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:191) ~[spring-core-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:129) ~[spring-beans-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73) ~[spring-beans-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53) ~[spring-beans-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693) ~[spring-context-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\t... 92 common frames omitted\nCaused by: java.lang.IllegalArgumentException: No enum constant org.gywebframework.web.sample.constant.EnabledEnum.0\n\tat java.base/java.lang.Enum.valueOf(Enum.java:240) ~[na:na]\n\tat org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum.convert(StringToEnumConverterFactory.java:52) ~[spring-core-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum.convert(StringToEnumConverterFactory.java:38) ~[spring-core-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter.convert(GenericConversionService.java:436) ~[spring-core-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41) ~[spring-core-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\t... 98 common frames omitted\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [@org.springframework.web.bind.annotation.RequestParam org.gywebframework.web.sample.constant.EnabledEnum] for value '0'; nested exception is java.lang.IllegalArgumentException: No enum constant org.gywebframework.web.sample.constant.EnabledEnum.0\n\tat org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:47) ~[spring-core-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:191) ~[spring-core-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:129) ~[spring-beans-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:73) ~[spring-beans-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:53) ~[spring-beans-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:693) ~[spring-context-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:125) ~[spring-web-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\t... 92 common frames omitted\nCaused by: java.lang.IllegalArgumentException: No enum constant org.gywebframework.web.sample.constant.EnabledEnum.0\n\tat java.base/java.lang.Enum.valueOf(Enum.java:240) ~[na:na]\n\tat org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum.convert(StringToEnumConverterFactory.java:52) ~[spring-core-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.core.convert.support.StringToEnumConverterFactory$StringToEnum.convert(StringToEnumConverterFactory.java:38) ~[spring-core-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter.convert(GenericConversionService.java:436) ~[spring-core-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\tat org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41) ~[spring-core-5.2.8.RELEASE.jar:5.2.8.RELEASE]\n\t... 98 common frames omitted\n</code></pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">org.springframework.core.convert.support.GenericConversionService#convert(Object, TypeDescriptor, TypeDescriptor)</code> is using <code class=\"notranslate\">org.springframework.core.convert.support.StringToEnumConverterFactory</code>, not <code class=\"notranslate\">org.springframework.core.convert.support.IntegerToEnumConverterFactory</code>.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/25543",
                "createdAt": "2020-08-06T08:03:09Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "status: declined"
                      }
                    },
                    {
                      "node": {
                        "name": "in: core"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use schema-based config in sql-error-codes.xml",
        "url": "https://github.com/spring-projects/spring-framework/pull/31354",
        "resourcePath": "/spring-projects/spring-framework/pull/31354",
        "createdAt": "2023-10-03T17:39:52Z",
        "number": 31354,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-jdbc/src/main/resources/org/springframework/jdbc/support/sql-error-codes.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5b0QlW2gAoYzRkYWM0N2Q3MWY4Y2M4ZDI4ZDkyYzg2NDUwYjE0NWYyZTZkMWE5OQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/31354/commits/c4dac47d71f8cc8d28d92c86450b145f2e6d1a99"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 27332,
                "url": "https://github.com/spring-projects/spring-framework/issues/27332",
                "title": "Loading SQL error codes throws XmlBeanDefinitionStoreException on z/OS",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong> <code class=\"notranslate\">5.3.9</code> (and earlier versions)</p>\n<hr>\n<p dir=\"auto\"><strong>Operating system:</strong> <code class=\"notranslate\">z/OS 2.3</code><br>\n<strong>Java version:</strong><br>\n<code class=\"notranslate\">Java(TM) SE Runtime Environment (build 8.0.6.26 - pmz6480sr6fp26-20210226_01(SR6 FP26))</code><br>\n<code class=\"notranslate\">IBM J9 VM (build 2.9, JRE 1.8.0 z/OS s390x-64-Bit Compressed References 20210216_465732 (JIT enabled, AOT enabled)</code><br>\n<code class=\"notranslate\">OpenJ9   - e5f4f96</code><br>\n<code class=\"notranslate\">OMR      - 999051a</code><br>\n<code class=\"notranslate\">IBM      - 358762e)</code><br>\n<code class=\"notranslate\">JCL - 20210108_01 based on Oracle jdk8u281-b09</code></p>\n<hr>\n<p dir=\"auto\">When loading SQL error codes from sql-error-codes.xml on a z/OS system, the following exception is thrown:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 15 in XML document from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-elt.1: Cannot find the declaration of element 'beans'.\n        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:402) ~[spring-beans-5.3.9.jar!/:5.3.9]\n        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:338) ~[spring-beans-5.3.9.jar!/:5.3.9]\n        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:310) ~[spring-beans-5.3.9.jar!/:5.3.9]\n        at org.springframework.jdbc.support.SQLErrorCodesFactory.&lt;init&gt;(SQLErrorCodesFactory.java:114) [spring-jdbc-5.3.9.jar!/:5.3.9]\n        at org.springframework.jdbc.support.SQLErrorCodesFactory.&lt;clinit&gt;(SQLErrorCodesFactory.java:72) [spring-jdbc-5.3.9.jar!/:5.3.9]\n        at de.ralphriedel.Application.run(Application.java:17) [classes!/:na]\n        at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791) [spring-boot-2.5.3.jar!/:2.5.3]\n        at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775) [spring-boot-2.5.3.jar!/:2.5.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:345) [spring-boot-2.5.3.jar!/:2.5.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.3.jar!/:2.5.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.3.jar!/:2.5.3]\n        at de.ralphriedel.Application.main(Application.java:13) [classes!/:na]\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0]\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:90) ~[na:1.8.0]\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) ~[na:1.8.0]\n        at java.lang.reflect.Method.invoke(Method.java:508) ~[na:1.8.0]\n        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49) [spring-zos-dtd-issue-0.0.1-SNAPSHOT.jar:na]\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:108) [spring-zos-dtd-issue-0.0.1-SNAPSHOT.jar:na]\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:58) [spring-zos-dtd-issue-0.0.1-SNAPSHOT.jar:na]\n        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:88) [spring-zos-dtd-issue-0.0.1-SNAPSHOT.jar:na]\nCaused by: org.xml.sax.SAXParseException: cvc-elt.1: Cannot find the declaration of element 'beans'.\n        at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source) ~[na:na]\n        at org.apache.xerces.util.ErrorHandlerWrapper.error(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.xs.XMLSchemaValidator.handleStartElement(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.xs.XMLSchemaValidator.startElement(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.dtd.XMLDTDValidator.startElement(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher.scanRootElementHook(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source) ~[na:na]\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source) ~[na:na]\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source) ~[na:na]\n        at org.apache.xerces.parsers.XMLParser.parse(Unknown Source) ~[na:na]\n        at org.apache.xerces.parsers.DOMParser.parse(Unknown Source) ~[na:na]\n        at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source) ~[na:na]\n        at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:77) ~[spring-beans-5.3.9.jar!/:5.3.9]\n        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:432) ~[spring-beans-5.3.9.jar!/:5.3.9]\n        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390) ~[spring-beans-5.3.9.jar!/:5.3.9]\n        ... 19 common frames omitted\"><pre class=\"notranslate\"><code class=\"notranslate\">org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException: Line 15 in XML document from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] is invalid; nested exception is org.xml.sax.SAXParseException: cvc-elt.1: Cannot find the declaration of element 'beans'.\n        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:402) ~[spring-beans-5.3.9.jar!/:5.3.9]\n        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:338) ~[spring-beans-5.3.9.jar!/:5.3.9]\n        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:310) ~[spring-beans-5.3.9.jar!/:5.3.9]\n        at org.springframework.jdbc.support.SQLErrorCodesFactory.&lt;init&gt;(SQLErrorCodesFactory.java:114) [spring-jdbc-5.3.9.jar!/:5.3.9]\n        at org.springframework.jdbc.support.SQLErrorCodesFactory.&lt;clinit&gt;(SQLErrorCodesFactory.java:72) [spring-jdbc-5.3.9.jar!/:5.3.9]\n        at de.ralphriedel.Application.run(Application.java:17) [classes!/:na]\n        at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791) [spring-boot-2.5.3.jar!/:2.5.3]\n        at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775) [spring-boot-2.5.3.jar!/:2.5.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:345) [spring-boot-2.5.3.jar!/:2.5.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343) [spring-boot-2.5.3.jar!/:2.5.3]\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332) [spring-boot-2.5.3.jar!/:2.5.3]\n        at de.ralphriedel.Application.main(Application.java:13) [classes!/:na]\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0]\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:90) ~[na:1.8.0]\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55) ~[na:1.8.0]\n        at java.lang.reflect.Method.invoke(Method.java:508) ~[na:1.8.0]\n        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49) [spring-zos-dtd-issue-0.0.1-SNAPSHOT.jar:na]\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:108) [spring-zos-dtd-issue-0.0.1-SNAPSHOT.jar:na]\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:58) [spring-zos-dtd-issue-0.0.1-SNAPSHOT.jar:na]\n        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:88) [spring-zos-dtd-issue-0.0.1-SNAPSHOT.jar:na]\nCaused by: org.xml.sax.SAXParseException: cvc-elt.1: Cannot find the declaration of element 'beans'.\n        at org.apache.xerces.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source) ~[na:na]\n        at org.apache.xerces.util.ErrorHandlerWrapper.error(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.XMLErrorReporter.reportError(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.xs.XMLSchemaValidator.handleStartElement(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.xs.XMLSchemaValidator.startElement(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.dtd.XMLDTDValidator.startElement(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.XMLNSDocumentScannerImpl$NSContentDispatcher.scanRootElementHook(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(Unknown Source) ~[na:na]\n        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source) ~[na:na]\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source) ~[na:na]\n        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source) ~[na:na]\n        at org.apache.xerces.parsers.XMLParser.parse(Unknown Source) ~[na:na]\n        at org.apache.xerces.parsers.DOMParser.parse(Unknown Source) ~[na:na]\n        at org.apache.xerces.jaxp.DocumentBuilderImpl.parse(Unknown Source) ~[na:na]\n        at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:77) ~[spring-beans-5.3.9.jar!/:5.3.9]\n        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadDocument(XmlBeanDefinitionReader.java:432) ~[spring-beans-5.3.9.jar!/:5.3.9]\n        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:390) ~[spring-beans-5.3.9.jar!/:5.3.9]\n        ... 19 common frames omitted\n</code></pre></div>\n<p dir=\"auto\">This can be reproduced trivially by getting the error codes for any given database from an instance of <code class=\"notranslate\">SQLErrorCodesFactory</code>:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"SQLErrorCodesFactory.getInstance().getErrorCodes(&quot;DB2&quot;)\"><pre class=\"notranslate\"><code class=\"notranslate\">SQLErrorCodesFactory.getInstance().getErrorCodes(\"DB2\")\n</code></pre></div>\n<p dir=\"auto\">I have also created a small sample project that does just that in a <a href=\"https://github.com/ralph-riedel/spring-zos-dtd-issue\">personal repo</a>.</p>\n<p dir=\"auto\">The problem seems to occur only on z/OS, my tests on Windows or Linux have resulted in no such behavior. In addition to the admittedly rather exotic platform, the system encoding is an EBCDIC flavor (IBM-1047). Could this cause an issue when the DTD gets read from the classpath?</p>\n<p dir=\"auto\">In any case, since the issue seems with parsing the beans DTD, I replaced the DTD definition with the equivalent XML Schema definition and found that this way, it works fine. <strong>Given that XML Schema-based configuration has been the preferred way of doing things for a while, would the Spring team accept a PR that replaces the beans DTD with the appropriate XML Schema definition in <code class=\"notranslate\">sql-error-codes.xml</code>?</strong> If so, I would be happy to submit one to side-step this issue.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/27332",
                "createdAt": "2021-08-28T20:02:04Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: data"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix that the count in Segment is less than the number of references actually containing Entry",
        "url": "https://github.com/spring-projects/spring-framework/pull/31374",
        "resourcePath": "/spring-projects/spring-framework/pull/31374",
        "createdAt": "2023-10-07T02:47:56Z",
        "number": 31374,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/util/ConcurrentReferenceHashMap.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5cKS1V2gAoMjkxNTkyODY0ZDczMTE5ODI3MTc5YjlhNjYzZDkyYzRmNjI0NTgwMg",
                "url": "https://github.com/spring-projects/spring-framework/pull/31374/commits/291592864d73119827179b9a663d92c4f6245802"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 31373,
                "url": "https://github.com/spring-projects/spring-framework/issues/31373",
                "title": "Ensure consistent value count in ConcurrentReferenceHashMap#Segment",
                "bodyHTML": "\n<p dir=\"auto\"><strong>Affects:</strong> &lt;Spring Framework version&gt;</p>\n<hr>\n\n<p dir=\"auto\">affected versions\uff1aall</p>\n<h3 dir=\"auto\">Background</h3>\n<p dir=\"auto\">We have a application where the jvm meta space periodically fluctuates significantly, as shown in the following screenshot.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/3047058/273356202-b6f4ffe1-74a9-4c9e-9877-476dfc6658aa.jpg?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDQxNjcsIm5iZiI6MTcxNDk0Mzg2NywicGF0aCI6Ii8zMDQ3MDU4LzI3MzM1NjIwMi1iNmY0ZmZlMS03NGE5LTRjOWUtOTg3Ny00NzZkZmM2NjU4YWEuanBnP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMjExNzQ3WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZTk1ZTQ4NDZmMGU1YjY5OTI3ZmRmZGUxYzA2OTNkODJkYTNlMDc2ZmY2N2FhOWE4NzQ4N2VjZjU1ODI5OGE2ZSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.ztDI8_64HANA7SIM84GEyQWtPpOMlwAtgKaSwyvxdE4\"><img src=\"https://private-user-images.githubusercontent.com/3047058/273356202-b6f4ffe1-74a9-4c9e-9877-476dfc6658aa.jpg?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDQxNjcsIm5iZiI6MTcxNDk0Mzg2NywicGF0aCI6Ii8zMDQ3MDU4LzI3MzM1NjIwMi1iNmY0ZmZlMS03NGE5LTRjOWUtOTg3Ny00NzZkZmM2NjU4YWEuanBnP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMjExNzQ3WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZTk1ZTQ4NDZmMGU1YjY5OTI3ZmRmZGUxYzA2OTNkODJkYTNlMDc2ZmY2N2FhOWE4NzQ4N2VjZjU1ODI5OGE2ZSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.ztDI8_64HANA7SIM84GEyQWtPpOMlwAtgKaSwyvxdE4\" alt=\"20231006225447\" style=\"max-width: 100%;\"></a><br>\nAfter analyzing the heap space, we found a large number(200000+) of sun.reflect.DelegatingClassLoader and sun.reflect.GeneratedSerializationConstructorAccessor, which are mainly generated for org.springframework.data.redis.connection.jedis.JedisConnection$$EnhancerBySpringCGLIB$$xxxxx, because the application dynamically uses the ProxyFactory to generate proxy objects.<br>\nFurther analysis revealed that the segment of the ConcurrentReferenceMap associated with org.springframework.data.redis.connection.jedis.JedisConnection$$EnhancerBySpringCGLIB$$xxxxx has a count of 0, but actually contains 1 Entry, as shown below screenshot.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/3047058/273356326-48ffcc8f-2aa6-4e5a-916c-65db0d324f2e.jpeg?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDQxNjcsIm5iZiI6MTcxNDk0Mzg2NywicGF0aCI6Ii8zMDQ3MDU4LzI3MzM1NjMyNi00OGZmY2M4Zi0yYWE2LTRlNWEtOTE2Yy02NWRiMGQzMjRmMmUuanBlZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIxMTc0N1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTRkMjNiODNjYzM1OTRiZjQzN2Q4NmUwOTc0MjZlNTNiNzMwOTg0YjZjMzA0ZTlkMDczMWZkZDBiMDEyMWNiMzUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.MnrZu0EZWJK3T10fvubBccXsejus_kKfabcJaPBbwUo\"><img src=\"https://private-user-images.githubusercontent.com/3047058/273356326-48ffcc8f-2aa6-4e5a-916c-65db0d324f2e.jpeg?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDQxNjcsIm5iZiI6MTcxNDk0Mzg2NywicGF0aCI6Ii8zMDQ3MDU4LzI3MzM1NjMyNi00OGZmY2M4Zi0yYWE2LTRlNWEtOTE2Yy02NWRiMGQzMjRmMmUuanBlZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIxMTc0N1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTRkMjNiODNjYzM1OTRiZjQzN2Q4NmUwOTc0MjZlNTNiNzMwOTg0YjZjMzA0ZTlkMDczMWZkZDBiMDEyMWNiMzUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.MnrZu0EZWJK3T10fvubBccXsejus_kKfabcJaPBbwUo\" alt=\"1695799309403-36cc94e4-3844-4c0e-a63d-9bf21489897a\" style=\"max-width: 100%;\"></a><br>\nIn the org.springframework.util.ConcurrentReferenceHashMap.Segment#getReference method, if the count is 0, it returns null.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/3047058/273356347-2140a308-45ce-4828-83dc-9aa520e7a598.jpg?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDQxNjcsIm5iZiI6MTcxNDk0Mzg2NywicGF0aCI6Ii8zMDQ3MDU4LzI3MzM1NjM0Ny0yMTQwYTMwOC00NWNlLTQ4MjgtODNkYy05YWE1MjBlN2E1OTguanBnP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMjExNzQ3WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZmM4MDU1NWE0OWRjNzUwYTkyMDEwZTFjYmIwZTgzNGM0ZmYzYTQ1YWIxNjE2ZTA4MDVlNGY2NWViYWFmNzI1MyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.7MqeGLzKPobkrhhIv-wEwcz8oVgahN-QhjOtr06PVp8\"><img src=\"https://private-user-images.githubusercontent.com/3047058/273356347-2140a308-45ce-4828-83dc-9aa520e7a598.jpg?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDQxNjcsIm5iZiI6MTcxNDk0Mzg2NywicGF0aCI6Ii8zMDQ3MDU4LzI3MzM1NjM0Ny0yMTQwYTMwOC00NWNlLTQ4MjgtODNkYy05YWE1MjBlN2E1OTguanBnP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMjExNzQ3WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZmM4MDU1NWE0OWRjNzUwYTkyMDEwZTFjYmIwZTgzNGM0ZmYzYTQ1YWIxNjE2ZTA4MDVlNGY2NWViYWFmNzI1MyZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.7MqeGLzKPobkrhhIv-wEwcz8oVgahN-QhjOtr06PVp8\" alt=\"20231006230508\" style=\"max-width: 100%;\"></a><br>\nTherefore, the org.springframework.objenesis.SpringObjenesis#cache method for the key \"org.springframework.data.redis.connection.jedis.JedisConnection$$EnhancerBySpringCGLIB$$xxxxx\" is ineffective, leading to the creation of a large number of sun.reflect.GeneratedSerializationConstructorAccessor repeatedly.</p>\n<h3 dir=\"auto\">Why does the ConcurrentReferenceHashMap.Segment has this problem?</h3>\n<p dir=\"auto\">We have tried to reproduce the problem, as shown in the demo code<br>\n<a href=\"https://github.com/spring-projects/spring-framework/files/12836714/conrefmap-demo.tgz\">conrefmap-demo.tgz</a>,<br>\nand it seems that the remove operation caused the problem, but there is no remove operation in the phenomenon described earlier\uff0cthe org.springframework.objenesis.SpringObjenesis just invoke get and putIfAbsent.<br>\nWe cannot confirm the reason for the count being less than the actual number of entries, but we speculate on the following possibilities:</p>\n<ul dir=\"auto\">\n<li>First: in the restructure method, copy the reference, generate multiple references for same key, and some old references also have the opportunity to enter the ReferenceQueue\uff08for example getReference has the old Reference\uff0cso may cause old Reference have the opportunity to enter the ReferenceQueue\uff09.</li>\n<li>Second: when resizing, both arrays reference new and old reference, and the old references array are replaced only after the restructuring is completed. The  old reference may be added to the ReferenceQueue by the garbage collector, and later, new reference are also added to the ReferenceQueue.</li>\n<li>Third: mysterious multi-threading issues.</li>\n</ul>\n<p dir=\"auto\">Regardless of the reason, we only need to ensure that the count is equal to the actual number of entries containing references to fix the problem.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/31373",
                "createdAt": "2023-10-07T02:10:08Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: bug"
                      }
                    },
                    {
                      "node": {
                        "name": "in: core"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support Jackson's DatatypeFeature in Jackson2ObjectMapperBuilder",
        "url": "https://github.com/spring-projects/spring-framework/pull/31380",
        "resourcePath": "/spring-projects/spring-framework/pull/31380",
        "createdAt": "2023-10-08T17:27:44Z",
        "number": 31380,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/java/org/springframework/http/converter/json/Jackson2ObjectMapperBuilderTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5cMywO2gAoN2IyMDVhZWM2NGI3MGJlYzA4ZmVkNzk2NzMxM2E5MmVkMTM3ZjhiZg",
                "url": "https://github.com/spring-projects/spring-framework/pull/31380/commits/7b205aec64b70bec08fed7967313a92ed137f8bf"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 31379,
                "url": "https://github.com/spring-projects/spring-framework/issues/31379",
                "title": "Jackson2ObjectMapperBuilder does not support DatatypeFeature",
                "bodyHTML": "\n<p dir=\"auto\"><strong>Affects:</strong> Latest Spring Boot 3.1.4 with Jackson 2.15.2</p>\n<p dir=\"auto\"><code class=\"notranslate\">Jackson2ObjectMapperBuilder</code> currently does not support Jackson's <code class=\"notranslate\">DatatypeFeature</code>. This is caused by the following function not implementing this type:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\tprivate void configureFeature(ObjectMapper objectMapper, Object feature, boolean enabled) {\n\t\tif (feature instanceof JsonParser.Feature jsonParserFeature) {\n\t\t\tobjectMapper.configure(jsonParserFeature, enabled);\n\t\t}\n\t\telse if (feature instanceof JsonGenerator.Feature jsonGeneratorFeature) {\n\t\t\tobjectMapper.configure(jsonGeneratorFeature, enabled);\n\t\t}\n\t\telse if (feature instanceof SerializationFeature serializationFeature) {\n\t\t\tobjectMapper.configure(serializationFeature, enabled);\n\t\t}\n\t\telse if (feature instanceof DeserializationFeature deserializationFeature) {\n\t\t\tobjectMapper.configure(deserializationFeature, enabled);\n\t\t}\n\t\telse if (feature instanceof MapperFeature mapperFeature) {\n\t\t\tobjectMapper.configure(mapperFeature, enabled);\n\t\t}\n\t\telse {\n\t\t\tthrow new IllegalArgumentException(&quot;Unknown feature class: &quot; + feature.getClass().getName());\n\t\t}\n\t}\"><pre class=\"notranslate\">\t<span class=\"pl-k\">private</span> <span class=\"pl-smi\">void</span> <span class=\"pl-s1\">configureFeature</span>(<span class=\"pl-smi\">ObjectMapper</span> <span class=\"pl-s1\">objectMapper</span>, <span class=\"pl-smi\">Object</span> <span class=\"pl-s1\">feature</span>, <span class=\"pl-smi\">boolean</span> <span class=\"pl-s1\">enabled</span>) {\n\t\t<span class=\"pl-k\">if</span> (<span class=\"pl-s1\">feature</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">JsonParser</span>.<span class=\"pl-smi\">Feature</span> <span class=\"pl-s1\">jsonParserFeature</span>) {\n\t\t\t<span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">configure</span>(<span class=\"pl-s1\">jsonParserFeature</span>, <span class=\"pl-s1\">enabled</span>);\n\t\t}\n\t\t<span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">feature</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">JsonGenerator</span>.<span class=\"pl-smi\">Feature</span> <span class=\"pl-s1\">jsonGeneratorFeature</span>) {\n\t\t\t<span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">configure</span>(<span class=\"pl-s1\">jsonGeneratorFeature</span>, <span class=\"pl-s1\">enabled</span>);\n\t\t}\n\t\t<span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">feature</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">SerializationFeature</span> <span class=\"pl-s1\">serializationFeature</span>) {\n\t\t\t<span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">configure</span>(<span class=\"pl-s1\">serializationFeature</span>, <span class=\"pl-s1\">enabled</span>);\n\t\t}\n\t\t<span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">feature</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">DeserializationFeature</span> <span class=\"pl-s1\">deserializationFeature</span>) {\n\t\t\t<span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">configure</span>(<span class=\"pl-s1\">deserializationFeature</span>, <span class=\"pl-s1\">enabled</span>);\n\t\t}\n\t\t<span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (<span class=\"pl-s1\">feature</span> <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">MapperFeature</span> <span class=\"pl-s1\">mapperFeature</span>) {\n\t\t\t<span class=\"pl-s1\">objectMapper</span>.<span class=\"pl-en\">configure</span>(<span class=\"pl-s1\">mapperFeature</span>, <span class=\"pl-s1\">enabled</span>);\n\t\t}\n\t\t<span class=\"pl-k\">else</span> {\n\t\t\t<span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\">\"Unknown feature class: \"</span> + <span class=\"pl-s1\">feature</span>.<span class=\"pl-en\">getClass</span>().<span class=\"pl-en\">getName</span>());\n\t\t}\n\t}</pre></div>\n<p dir=\"auto\">Adding another branch for <code class=\"notranslate\">DatatypeFeature</code> would solve the issue.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/31379",
                "createdAt": "2023-10-08T17:26:35Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add UriBuilderFactoryArgumentResolver.",
        "url": "https://github.com/spring-projects/spring-framework/pull/31413",
        "resourcePath": "/spring-projects/spring-framework/pull/31413",
        "createdAt": "2023-10-11T15:00:36Z",
        "number": 31413,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/HttpServiceProxyFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/ReactiveHttpRequestValues.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/UriBuilderFactoryArgumentResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/java/org/springframework/web/client/support/RestClientAdapterTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/java/org/springframework/web/service/invoker/HttpRequestValuesTests.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-web/src/test/java/org/springframework/web/service/invoker/UriBuilderFactoryArgumentResolverTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/kotlin/org/springframework/web/client/support/KotlinRestTemplateHttpServiceProxyTests.kt"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/support/WebClientAdapter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/test/java/org/springframework/web/reactive/function/client/support/WebClientAdapterTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/test/kotlin/org/springframework/web/reactive/function/client/support/WebClientHttpServiceProxyKotlinTests.kt"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5ch0wR2gAoNzkzNzlkNTIxOTFlMTQ0ODlkMzliYzhlZjE4OGI2MzVlMTFkODQyMA",
                "url": "https://github.com/spring-projects/spring-framework/pull/31413/commits/79379d52191e14489d39bc8ef188b635e11d8420"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30935,
                "url": "https://github.com/spring-projects/spring-framework/issues/30935",
                "title": "Enable dynamically overriding the base URL in HTTP interface",
                "bodyHTML": "<p dir=\"auto\">I have a few use cases in my project, that require me to call the same endpoint on several different base URLs and I need to be able to pass the base URL as a parameter into the method of the client.</p>\n<p dir=\"auto\">Using Feign, this is possible to achieve by just adding a URI as a parameter. In a spring http interface, there is also the possibility to add a URI as a parameter, but the functionality is not the same because here it overwrites the whole path that is set in the HttpExchange annotation. What I want is to provide only the base URL as a parameter but that the path in the annotation gets added to the base URL.</p>\n<p dir=\"auto\">For example,</p>\n<p dir=\"auto\">If i do</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @GetExchange(value = &quot;/animals/cats/&quot;, accept = APPLICATION_JSON_VALUE)\n    List&lt;Cat&gt; getCats(URI baseUrl)\"><pre class=\"notranslate\"><code class=\"notranslate\">    @GetExchange(value = \"/animals/cats/\", accept = APPLICATION_JSON_VALUE)\n    List&lt;Cat&gt; getCats(URI baseUrl)\n</code></pre></div>\n<p dir=\"auto\">and provide <em>https://some.cats.url.com</em> as value for the baseUrl parameter</p>\n<p dir=\"auto\">it will send a request to the URL <em>https://some.url.com</em> but actually what I want to do is to call <em><a href=\"https://some.url.com/animals/cats\" rel=\"nofollow\">https://some.url.com/animals/cats</a></em>.</p>\n<p dir=\"auto\">Thanks!</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30935",
                "createdAt": "2023-07-24T13:45:12Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Document X-Forwarded-* Headers",
        "url": "https://github.com/spring-projects/spring-framework/pull/31491",
        "resourcePath": "/spring-projects/spring-framework/pull/31491",
        "createdAt": "2023-10-25T01:09:11Z",
        "number": 31491,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/modules/ROOT/pages/web/webflux/reactive-spring.adoc"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/modules/ROOT/pages/web/webmvc/filters.adoc"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "framework-docs/modules/ROOT/partials/web/forwarded-headers.adoc"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/filter/ForwardedHeaderFilter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/server/adapter/ForwardedHeaderTransformer.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5dslpA2gAoNTVkNmEzYWEzYjliNjljMzk4YzlmMGY5MmVmZmMzYWI5OGIxOWRhMQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/31491/commits/55d6a3aa3b9b69c398c9f0f92effc3ab98b19da1"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 31273,
                "url": "https://github.com/spring-projects/spring-framework/issues/31273",
                "title": "Improve Documentation Around X-Forwarded- Headers",
                "bodyHTML": "\n<p dir=\"auto\"><strong>Affects:</strong> 6.0.12</p>\n<hr>\n\n<p dir=\"auto\">Spring could improve the documentation (both reference and Javadoc) around <code class=\"notranslate\">X-Forwarded-*</code> headers. In particular, the <code class=\"notranslate\">X-Forwarded-Prefix</code> header could use some clarifications as demonstrated in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1898275361\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/31241\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/31241/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/31241\">#31241</a></p>\n<p dir=\"auto\">I've discussed this with <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rstoyanchev/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rstoyanchev\">@rstoyanchev</a> and I'm happy to send a PR with my <a href=\"https://github.com/spring-projects/spring-framework/issues/31241#issuecomment-1724299031\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/31241/hovercard\">comment</a> as a starting point for the updated documentation.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/31273",
                "createdAt": "2023-09-19T16:45:44Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: documentation"
                      }
                    },
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support \"--\" end of options in SimpleCommandLineArgsParser",
        "url": "https://github.com/spring-projects/spring-framework/pull/31513",
        "resourcePath": "/spring-projects/spring-framework/pull/31513",
        "createdAt": "2023-10-27T12:52:42Z",
        "number": 31513,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/core/env/SimpleCommandLineArgsParser.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/test/java/org/springframework/core/env/SimpleCommandLineArgsParserTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5d-FNK2gAoZDVkY2YwZWYwMDBjYmJjNDgwOGVlNTdhZjZhNDgzZjUxZDA3MzkwYw",
                "url": "https://github.com/spring-projects/spring-framework/pull/31513/commits/d5dcf0ef000cbbc4808ee57af6a483f51d07390c"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 21949,
                "url": "https://github.com/spring-projects/spring-framework/issues/21949",
                "title": "Support for bare double dash in argument parsing with SimpleCommandLineArgsParser [SPR-17416]",
                "bodyHTML": "<p dir=\"auto\"><strong><a href=\"https://jira.spring.io/secure/ViewProfile.jspa?name=pwebb\" rel=\"nofollow\">Phil Webb</a></strong> opened <strong><a href=\"https://jira.spring.io/browse/SPR-17416?redirect=false\" rel=\"nofollow\">SPR-17416</a></strong> and commented</p>\n<p dir=\"auto\">Originally raise <a href=\"https://github.com/spring-projects/spring-boot/issues/14909\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-boot/issues/14909/hovercard\">as a Spring Boot issue</a>:</p>\n<p dir=\"auto\">I would like Spring Boot application to support guideline 10 of POSIX.1-2017 - Utility argument convention section:</p>\n<blockquote>\n<p dir=\"auto\">The first -- argument that is not an option-argument should be accepted as a delimiter indicating the end of options. Any following arguments should be treated as operands, even if they begin with the '-' character.</p>\n</blockquote>\n<p dir=\"auto\">The desired behavior is to recognize the <code class=\"notranslate\">--</code> and leave all the arguments to the right of it alone.</p>\n<p dir=\"auto\">Just for context: in <code class=\"notranslate\">2.0.x</code> passing <code class=\"notranslate\">--</code> to a SpringBoot application results in an error (sample trace below). The double dash is treated as an invalid option (whose name is zero-length) and there seems to be no way to configure this behavior.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"java.lang.IllegalArgumentException: Invalid argument syntax: --\n\tat org.springframework.core.env.SimpleCommandLineArgsParser.parse(SimpleCommandLineArgsParser.java:75)\n\tat org.springframework.core.env.SimpleCommandLinePropertySource.&lt;init&gt;(SimpleCommandLinePropertySource.java:90)\n\tat org.springframework.boot.DefaultApplicationArguments$Source.&lt;init&gt;(DefaultApplicationArguments.java:76)\n\tat org.springframework.boot.DefaultApplicationArguments.&lt;init&gt;(DefaultApplicationArguments.java:42)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:321)\n\tat com.netflix.genie.GenieAgentApplication.run(GenieAgentApplication.java:63)\"><pre class=\"notranslate\"><code class=\"notranslate\">java.lang.IllegalArgumentException: Invalid argument syntax: --\n\tat org.springframework.core.env.SimpleCommandLineArgsParser.parse(SimpleCommandLineArgsParser.java:75)\n\tat org.springframework.core.env.SimpleCommandLinePropertySource.&lt;init&gt;(SimpleCommandLinePropertySource.java:90)\n\tat org.springframework.boot.DefaultApplicationArguments$Source.&lt;init&gt;(DefaultApplicationArguments.java:76)\n\tat org.springframework.boot.DefaultApplicationArguments.&lt;init&gt;(DefaultApplicationArguments.java:42)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:321)\n\tat com.netflix.genie.GenieAgentApplication.run(GenieAgentApplication.java:63)\n</code></pre></div>\n<hr>\n<p dir=\"auto\"><strong>Reference URL:</strong> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"372147876\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-boot/issues/14909\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-boot/issues/14909/hovercard\" href=\"https://github.com/spring-projects/spring-boot/issues/14909\">spring-projects/spring-boot#14909</a></p>",
                "resourcePath": "/spring-projects/spring-framework/issues/21949",
                "createdAt": "2018-10-20T00:26:40Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Restore support for recursive annotations in Kotlin",
        "url": "https://github.com/spring-projects/spring-framework/pull/31518",
        "resourcePath": "/spring-projects/spring-framework/pull/31518",
        "createdAt": "2023-10-29T11:50:36Z",
        "number": 31518,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/core/annotation/AnnotationTypeMapping.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/core/annotation/AnnotationTypeMappings.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/test/java/org/springframework/core/annotation/AnnotationTypeMappingsTests.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-core/src/test/kotlin/org/springframework/core/annotation/FilterWithAlias.kt"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-core/src/test/kotlin/org/springframework/core/annotation/FiltersWithoutAlias.kt"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/test/kotlin/org/springframework/core/annotation/KotlinMergedAnnotationsTests.kt"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5eC9_V2gAoODE1MmExZDg2ZjQ4MjExZTljYzFjNTk5NDU3N2VhODMxODYzMGU3Mw",
                "url": "https://github.com/spring-projects/spring-framework/pull/31518/commits/8152a1d86f48211e9cc1c5994577ea8318630e73"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 31400,
                "url": "https://github.com/spring-projects/spring-framework/issues/31400",
                "title": "AnnotationScanner scanning leads to StackOverflowError with recursive annotation",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong>  6.0.12</p>\n<p dir=\"auto\">I am trying to update from Spring boot 2.7.13 to 3.1.4.<br>\nWe are using this custom annotation to document configuration properties.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Target(AnnotationTarget.CLASS, AnnotationTarget.PROPERTY)\nannotation class DocProperty(\n  val name: String = &quot;&quot;,\n  val displayName: String = &quot;&quot;,\n  val description: String = &quot;&quot;,\n  val defaultValue: String = &quot;&quot;,\n  val defaultExplanation: String = &quot;&quot;,\n  val children: Array&lt;DocProperty&gt; = [],\n  val prefix: String = &quot;&quot;,\n  val removedIn: String = &quot;&quot;,\n  val removalReason: String = &quot;&quot;,\n  val hidden: Boolean = false\n)\"><pre class=\"notranslate\"><code class=\"notranslate\">@Target(AnnotationTarget.CLASS, AnnotationTarget.PROPERTY)\nannotation class DocProperty(\n  val name: String = \"\",\n  val displayName: String = \"\",\n  val description: String = \"\",\n  val defaultValue: String = \"\",\n  val defaultExplanation: String = \"\",\n  val children: Array&lt;DocProperty&gt; = [],\n  val prefix: String = \"\",\n  val removedIn: String = \"\",\n  val removalReason: String = \"\",\n  val hidden: Boolean = false\n)\n</code></pre></div>\n<p dir=\"auto\">When I run the app, it fails:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"2023-10-10T17:17:04.743+02:00 ERROR 22027 --- [  restartedMain] o.s.boot.SpringApplication               : Application run failed\n\norg.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: URL [jar:file:/Users/jenik/IdeaProjects/tolgee-server/public/backend/data/build/libs/data-local-plain.jar!/io/tolgee/configuration/tolgee/S3Settings.class]\n\tat org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:463) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:317) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:289) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:243) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:196) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:164) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:415) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:287) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:771) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:589) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.4.jar:3.1.4]\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737) ~[spring-boot-3.1.4.jar:3.1.4]\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.1.4.jar:3.1.4]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315) ~[spring-boot-3.1.4.jar:3.1.4]\n\tat io.tolgee.Application$Companion.main(Application.kt:26) ~[main/:na]\n\tat io.tolgee.Application.main(Application.kt) ~[main/:na]\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-3.1.4.jar:3.1.4]\nCaused by: java.lang.StackOverflowError: null\n\tat java.base/java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:117) ~[na:na]\nCaused by: java.lang.StackOverflowError: null\n\n\tat org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager.pollForPurge(ConcurrentReferenceHashMap.java:1006) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.util.ConcurrentReferenceHashMap$Segment.restructureIfNecessary(ConcurrentReferenceHashMap.java:574) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.util.ConcurrentReferenceHashMap$Segment.getReference(ConcurrentReferenceHashMap.java:495) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.util.ConcurrentReferenceHashMap.getReference(ConcurrentReferenceHashMap.java:265) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.util.ConcurrentReferenceHashMap.get(ConcurrentReferenceHashMap.java:235) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationsScanner.getDeclaredAnnotations(AnnotationsScanner.java:446) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationsScanner.getDeclaredAnnotation(AnnotationsScanner.java:435) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMapping.resolveAliasedForTargets(AnnotationTypeMapping.java:144) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMapping.&lt;init&gt;(AnnotationTypeMapping.java:122) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.addIfPossible(AnnotationTypeMappings.java:112) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.addAllMappings(AnnotationTypeMappings.java:75) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.&lt;init&gt;(AnnotationTypeMappings.java:68) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings$Cache.createMappings(AnnotationTypeMappings.java:245) ~[spring-core-6.0.12.jar:6.0.12]\n\tat java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330) ~[na:na]\n\tat org.springframework.core.annotation.AnnotationTypeMappings$Cache.get(AnnotationTypeMappings.java:241) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:199) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:182) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:169) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMapping.computeSynthesizableFlag(AnnotationTypeMapping.java:405) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMapping.&lt;init&gt;(AnnotationTypeMapping.java:126) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.addIfPossible(AnnotationTypeMappings.java:112) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.addAllMappings(AnnotationTypeMappings.java:75) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.&lt;init&gt;(AnnotationTypeMappings.java:68) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings$Cache.createMappings(AnnotationTypeMappings.java:245) ~[spring-core-6.0.12.jar:6.0.12]\n\tat java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330) ~[na:na]\n\tat org.springframework.core.annotation.AnnotationTypeMappings$Cache.get(AnnotationTypeMappings.java:241) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:199) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:182) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:169) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMapping.computeSynthesizableFlag(AnnotationTypeMapping.java:405) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMapping.&lt;init&gt;(AnnotationTypeMapping.java:126) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.addIfPossible(AnnotationTypeMappings.java:112) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.addAllMappings(AnnotationTypeMappings.java:75) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.&lt;init&gt;(AnnotationTypeMappings.java:68) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings$Cache.createMappings(AnnotationTypeMappings.java:245) ~[spring-core-6.0.12.jar:6.0.12]\n\tat java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330) ~[na:na]\n\tat org.springframework.core.annotation.AnnotationTypeMappings$Cache.get(AnnotationTypeMappings.java:241) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:199) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:182) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:169) ~[spring-core-6.0.12.jar:6.0.12]\n\tat \n...\"><pre class=\"notranslate\"><code class=\"notranslate\">2023-10-10T17:17:04.743+02:00 ERROR 22027 --- [  restartedMain] o.s.boot.SpringApplication               : Application run failed\n\norg.springframework.beans.factory.BeanDefinitionStoreException: Failed to read candidate component class: URL [jar:file:/Users/jenik/IdeaProjects/tolgee-server/public/backend/data/build/libs/data-local-plain.jar!/io/tolgee/configuration/tolgee/S3Settings.class]\n\tat org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.scanCandidateComponents(ClassPathScanningCandidateComponentProvider.java:463) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(ClassPathScanningCandidateComponentProvider.java:317) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:276) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:128) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:289) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:243) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:196) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:164) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:415) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:287) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:344) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:115) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:771) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:589) ~[spring-context-6.0.12.jar:6.0.12]\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.1.4.jar:3.1.4]\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:737) ~[spring-boot-3.1.4.jar:3.1.4]\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439) ~[spring-boot-3.1.4.jar:3.1.4]\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:315) ~[spring-boot-3.1.4.jar:3.1.4]\n\tat io.tolgee.Application$Companion.main(Application.kt:26) ~[main/:na]\n\tat io.tolgee.Application.main(Application.kt) ~[main/:na]\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:na]\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[na:na]\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:na]\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[na:na]\n\tat org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-3.1.4.jar:3.1.4]\nCaused by: java.lang.StackOverflowError: null\n\tat java.base/java.lang.ref.ReferenceQueue.poll(ReferenceQueue.java:117) ~[na:na]\nCaused by: java.lang.StackOverflowError: null\n\n\tat org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager.pollForPurge(ConcurrentReferenceHashMap.java:1006) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.util.ConcurrentReferenceHashMap$Segment.restructureIfNecessary(ConcurrentReferenceHashMap.java:574) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.util.ConcurrentReferenceHashMap$Segment.getReference(ConcurrentReferenceHashMap.java:495) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.util.ConcurrentReferenceHashMap.getReference(ConcurrentReferenceHashMap.java:265) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.util.ConcurrentReferenceHashMap.get(ConcurrentReferenceHashMap.java:235) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationsScanner.getDeclaredAnnotations(AnnotationsScanner.java:446) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationsScanner.getDeclaredAnnotation(AnnotationsScanner.java:435) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMapping.resolveAliasedForTargets(AnnotationTypeMapping.java:144) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMapping.&lt;init&gt;(AnnotationTypeMapping.java:122) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.addIfPossible(AnnotationTypeMappings.java:112) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.addAllMappings(AnnotationTypeMappings.java:75) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.&lt;init&gt;(AnnotationTypeMappings.java:68) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings$Cache.createMappings(AnnotationTypeMappings.java:245) ~[spring-core-6.0.12.jar:6.0.12]\n\tat java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330) ~[na:na]\n\tat org.springframework.core.annotation.AnnotationTypeMappings$Cache.get(AnnotationTypeMappings.java:241) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:199) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:182) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:169) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMapping.computeSynthesizableFlag(AnnotationTypeMapping.java:405) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMapping.&lt;init&gt;(AnnotationTypeMapping.java:126) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.addIfPossible(AnnotationTypeMappings.java:112) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.addAllMappings(AnnotationTypeMappings.java:75) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.&lt;init&gt;(AnnotationTypeMappings.java:68) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings$Cache.createMappings(AnnotationTypeMappings.java:245) ~[spring-core-6.0.12.jar:6.0.12]\n\tat java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330) ~[na:na]\n\tat org.springframework.core.annotation.AnnotationTypeMappings$Cache.get(AnnotationTypeMappings.java:241) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:199) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:182) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:169) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMapping.computeSynthesizableFlag(AnnotationTypeMapping.java:405) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMapping.&lt;init&gt;(AnnotationTypeMapping.java:126) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.addIfPossible(AnnotationTypeMappings.java:112) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.addAllMappings(AnnotationTypeMappings.java:75) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.&lt;init&gt;(AnnotationTypeMappings.java:68) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings$Cache.createMappings(AnnotationTypeMappings.java:245) ~[spring-core-6.0.12.jar:6.0.12]\n\tat java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330) ~[na:na]\n\tat org.springframework.core.annotation.AnnotationTypeMappings$Cache.get(AnnotationTypeMappings.java:241) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:199) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:182) ~[spring-core-6.0.12.jar:6.0.12]\n\tat org.springframework.core.annotation.AnnotationTypeMappings.forAnnotationType(AnnotationTypeMappings.java:169) ~[spring-core-6.0.12.jar:6.0.12]\n\tat \n...\n</code></pre></div>\n<p dir=\"auto\">I've epxlored what happens, and the issue is that method <code class=\"notranslate\">org.springframework.core.annotation.AnnotationTypeMapping#computeSynthesizableFlag</code> finds the <code class=\"notranslate\">children</code> property of our <code class=\"notranslate\">DocProperty</code> class annotation and calls the <code class=\"notranslate\">forAnnotationType</code>, with the <code class=\"notranslate\">children</code>'s type which is <code class=\"notranslate\">DocProperty</code> again. And that's infinite loop.</p>\n<p dir=\"auto\">It's reproducible here: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/tolgee/tolgee-platform/commit/259cd313e625b9e87af26e4f9c0e7a4b96583ada/hovercard\" href=\"https://github.com/tolgee/tolgee-platform/commit/259cd313e625b9e87af26e4f9c0e7a4b96583ada\">tolgee/tolgee-platform@<tt>259cd31</tt></a> (the specific commit)</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/31400",
                "createdAt": "2023-10-10T15:24:55Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: regression"
                      }
                    },
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "theme: kotlin"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Remove deprecated API",
        "url": "https://github.com/spring-projects/spring-framework/pull/31572",
        "resourcePath": "/spring-projects/spring-framework/pull/31572",
        "createdAt": "2023-11-08T00:27:56Z",
        "number": 31572,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "DELETED",
                "path": "spring-core/src/main/java/org/springframework/util/Base64Utils.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5e3gz32gAoMGYwNjE5MDVhMjg4YzBjYWRlOGM1YTRjY2JiNDUwYmExMTQ0Y2UwNw",
                "url": "https://github.com/spring-projects/spring-framework/pull/31572/commits/0f061905a288c0cade8c5a4ccbb450ba1144ce07"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30608,
                "url": "https://github.com/spring-projects/spring-framework/issues/30608",
                "title": "Remove APIs deprecated for removal in 6.2",
                "bodyHTML": "<p dir=\"auto\">Remove APIs that have been \"deprecated for removal in 6.2\".</p>\n<h2 dir=\"auto\">Candidates</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">org.springframework.util.Base64Utils</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">org.springframework.cache.jcache.interceptor.JCacheOperationSourcePointcut</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">org.springframework.http.client.AbstractClientHttpResponse</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">org.springframework.http.client.ClientHttpResponse.getRawStatusCode()</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">org.springframework.http.client.observation.ClientHttpObservationDocumentation.HighCardinalityKeyNames.CLIENT_NAME</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">org.springframework.web.reactive.function.client.ClientHttpObservationDocumentation.HighCardinalityKeyNames.CLIENT_NAME</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">org.springframework.web.filter.reactive.ServerWebExchangeContextFilter.get(Context)</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler.handleBindException(BindException, HttpHeaders, HttpStatusCode, WebRequest)</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleBindException(BindException, HttpServletRequest, HttpServletResponse, Object)</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">org.springframework.web.reactive.HandlerResult</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">org.springframework.web.reactive.socket.client.JettyWebSocketClient</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">org.springframework.web.socket.client.jetty.JettyWebSocketClient</code></li>\n</ul>",
                "resourcePath": "/spring-projects/spring-framework/issues/30608",
                "createdAt": "2023-06-07T09:56:54Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: task"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Extract recurring asciidoc links to attributes",
        "url": "https://github.com/spring-projects/spring-framework/pull/31619",
        "resourcePath": "/spring-projects/spring-framework/pull/31619",
        "createdAt": "2023-11-17T12:29:55Z",
        "number": 31619,
        "mergeCommit": {
          "oid": "856740296938612af9cd9564eee72c456fec3e10",
          "message": "Extract recurring asciidoc links to attributes, cleanup old doc files\n\nThis commit extract spring-related links and recurring external links\r\ninto asciidoctor attributes to be used by the Antora toolchain.\r\n\r\nIt notably homogenizes links to:\r\n - IETF RFCs\r\n - Java Community Process JSRs\r\n - the Java API Documentation (on the Java 17 version)\r\n - Kotlin documentations (on the Kotlinlang.org version)\r\n - the Spring Boot reference guide (on the `html` version)\r\n\r\nThis commit also reworks most link attributes to follow a\r\nProject-Category-Misc syntax. For example, `spring-boot-docs` rather\r\nthan `docs-spring-boot`.\r\n\r\nFinally, it makes an effort to clean up remainders from the previous\r\ndocumentation toolchain, namely the `docs/asciidoc` folder and \r\n`modules/ROOT/pages/attributes.adoc` file.\r\n\r\nCloses gh-26864\r\nCloses gh-31619",
          "commitUrl": "https://github.com/spring-projects/spring-framework/commit/856740296938612af9cd9564eee72c456fec3e10",
          "parents": {
            "nodes": [
              {
                "oid": "4cc43b4ddc859f89f6c064f327ce930d923cbbc0",
                "message": "Refine AppCDS documentation\n\nSee gh-31497"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "DELETED",
                "path": "framework-docs/src/docs/asciidoc/images/oxm-exceptions.graffle"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "framework-docs/src/docs/asciidoc/images/oxm-exceptions.png"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "framework-docs/src/docs/asciidoc/images/prototype.png"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "framework-docs/src/docs/asciidoc/images/singleton.png"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "framework-docs/src/docs/asciidoc/images/spring-mvc-and-webflux-venn.png"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "framework-docs/src/docs/asciidoc/images/tx.png"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "framework-docs/src/docs/asciidoc/images/tx_prop_required.png"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "framework-docs/src/docs/asciidoc/images/tx_prop_requires_new.png"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "framework-docs/src/docs/asciidoc/index-docinfo-header.html"
              }
            },
            {
              "node": {
                "changeType": "DELETED",
                "path": "framework-docs/src/docs/asciidoc/spring-framework.adocbook"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5fvsZy2gAoYTQ0MjViMmE2Y2IwYzZjMTQ5MDcyYzk0YzY0YjVjYjM4YWRiNmZkMw",
                "url": "https://github.com/spring-projects/spring-framework/pull/31619/commits/a4425b2a6cb0c6c149072c94c64b5cb38adb6fd3"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 26864,
                "url": "https://github.com/spring-projects/spring-framework/issues/26864",
                "title": "Use asciidoc attributes in reference documentation",
                "bodyHTML": "<p dir=\"auto\">There are a number of places where links could use an attribute to rationalize what we use and make sure they are consistent.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/26864",
                "createdAt": "2021-04-27T05:24:19Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: documentation"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Treat kotlin.Unit as void",
        "url": "https://github.com/spring-projects/spring-framework/pull/31647",
        "resourcePath": "/spring-projects/spring-framework/pull/31647",
        "createdAt": "2023-11-22T02:48:49Z",
        "number": 31647,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/core/KotlinDetector.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/kotlin/org/springframework/web/method/support/InvocableHandlerMethodKotlinTests.kt"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5gFYbs2gAoNTZiM2RhMjQ0ZDdlM2FhZDZhNWY3OWE3MDg5NTM3NDM5ZmJjYmZjOA",
                "url": "https://github.com/spring-projects/spring-framework/pull/31647/commits/56b3da244d7e3aad6a5f79a7089537439fbcbfc8"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 31648,
                "url": "https://github.com/spring-projects/spring-framework/issues/31648",
                "title": "Spring MVC: Unexpected bytes added to the HTTP response for kotlin.Unit return type in controller methods",
                "bodyHTML": "<p dir=\"auto\">Affects: Spring Boot 3.2.0-RC2, Spring Web 3.2.0-RC2, Kotlin 1.9.20</p>\n<h3 dir=\"auto\">Issue</h3>\n<p dir=\"auto\">Using a Controller, with return type <code class=\"notranslate\">kotlin.Unit</code>, which uses directly <code class=\"notranslate\">HttpServletResponse</code> to write the response, adds unexpected bytes to the response. The following is a controller example where a file is read and written to the output directly:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @GetMapping(path = [&quot;public/file.txt&quot;])\n    fun getFile(\n        httpServletResponse: HttpServletResponse\n    ) {\n        httpServletResponse.status = 200\n\n        httpServletResponse.outputStream.write(Files.readAllBytes(Path.of(&quot;src/main/resources/file.txt&quot;)))\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    @GetMapping(path = [\"public/file.txt\"])\n    fun getFile(\n        httpServletResponse: HttpServletResponse\n    ) {\n        httpServletResponse.status = 200\n\n        httpServletResponse.outputStream.write(Files.readAllBytes(Path.of(\"src/main/resources/file.txt\")))\n    }\n</code></pre></div>\n<p dir=\"auto\">The following shows the bytes expected vs current:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Current: [49, 50, 51, 52, 53, 54, 55, 56, 57, 123, 125]\nExpected: [49, 50, 51, 52, 53, 54, 55, 56, 57]\"><pre class=\"notranslate\"><code class=\"notranslate\">Current: [49, 50, 51, 52, 53, 54, 55, 56, 57, 123, 125]\nExpected: [49, 50, 51, 52, 53, 54, 55, 56, 57]\n</code></pre></div>\n<p dir=\"auto\">123 and 125 bytes are <code class=\"notranslate\">{</code> and <code class=\"notranslate\">}</code></p>\n<h3 dir=\"auto\">How to reproduce the issue</h3>\n<p dir=\"auto\">This is a <a href=\"https://github.com/spring-projects/spring-boot/files/13429547/issuebytes.zip\">Spring Boot project</a> with a test that reproduces the issue.</p>\n<h3 dir=\"auto\">Debugging</h3>\n<p dir=\"auto\">My guess would be: there is a new converter which is taking <code class=\"notranslate\">kotlin.Unit</code> and tries to serialize it, outputting <code class=\"notranslate\">{</code> and <code class=\"notranslate\">}</code>.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/31648",
                "createdAt": "2023-11-21T17:58:04Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: regression"
                      }
                    },
                    {
                      "node": {
                        "name": "theme: kotlin"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "add InitDestroyAnnotationBeanPostProcessor to BeanFactoryInitializationAotProcessor",
        "url": "https://github.com/spring-projects/spring-framework/pull/31686",
        "resourcePath": "/spring-projects/spring-framework/pull/31686",
        "createdAt": "2023-11-26T02:48:38Z",
        "number": 31686,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-beans/src/main/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-beans/src/test/java/org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessorTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context/src/test/java/org/springframework/context/annotation/InitDestroyMethodLifecycleTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5gXcrV2gAoNWZhNGU3NGQyNjhhZjcyODU3MDc4NGIzNTZlYjAyOGNlMWY5M2RlOQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/31686/commits/5fa4e74d268af728570784b356eb028ce1f93de9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30755,
                "url": "https://github.com/spring-projects/spring-framework/issues/30755",
                "title": "Invoke lifecycle methods in AOT mode in the same order as standard JVM mode",
                "bodyHTML": "<h2 dir=\"auto\">Overview</h2>\n<p dir=\"auto\">The difference in invocation order between standard JVM mode and AOT mode can be viewed in the following tests. See also: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1769548317\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/30724\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/spring-projects/spring-framework/pull/30724/hovercard?comment_id=1602534343&amp;comment_type=issue_comment\" href=\"https://github.com/spring-projects/spring-framework/pull/30724#issuecomment-1602534343\">#30724 (comment)</a>.</p>\n<h2 dir=\"auto\">Tests</h2>\n<p dir=\"auto\">JVM mode:</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/spring-projects/spring-framework/blob/2ccf4cab8b4b437915c297be979d2e569fc273ef/spring-context/src/test/java/org/springframework/context/annotation/InitDestroyMethodLifecycleTests.java#L123-L143\">spring-framework/spring-context/src/test/java/org/springframework/context/annotation/InitDestroyMethodLifecycleTests.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 123 to 143\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/spring-projects/spring-framework/commit/2ccf4cab8b4b437915c297be979d2e569fc273ef\">2ccf4ca</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L123\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"123\"></td>\n          <td id=\"LC123\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L124\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"124\"></td>\n          <td id=\"LC124\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">jakartaAnnotationsCustomPrivateInitDestroyMethodsWithTheSameMethodNames</span>() { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L125\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"125\"></td>\n          <td id=\"LC125\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-smi\">Class</span>&lt;?&gt; <span class=\"pl-s1\">beanClass</span> = <span class=\"pl-smi\">CustomAnnotatedPrivateSameNameInitDestroyBean</span>.<span class=\"pl-k\">class</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L126\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"126\"></td>\n          <td id=\"LC126\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-smi\">DefaultListableBeanFactory</span> <span class=\"pl-s1\">beanFactory</span> = <span class=\"pl-en\">createBeanFactoryAndRegisterBean</span>(<span class=\"pl-s1\">beanClass</span>, <span class=\"pl-s\">\"customInit\"</span>, <span class=\"pl-s\">\"customDestroy\"</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L127\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"127\"></td>\n          <td id=\"LC127\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-smi\">CustomAnnotatedPrivateSameNameInitDestroyBean</span> <span class=\"pl-s1\">bean</span> = <span class=\"pl-s1\">beanFactory</span>.<span class=\"pl-en\">getBean</span>(<span class=\"pl-smi\">CustomAnnotatedPrivateSameNameInitDestroyBean</span>.<span class=\"pl-k\">class</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L128\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"128\"></td>\n          <td id=\"LC128\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L129\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"129\"></td>\n          <td id=\"LC129\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">bean</span>.<span class=\"pl-s1\">initMethods</span>).<span class=\"pl-en\">as</span>(<span class=\"pl-s\">\"init-methods\"</span>).<span class=\"pl-en\">containsExactly</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L130\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"130\"></td>\n          <td id=\"LC130\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t<span class=\"pl-s\">\"@PostConstruct.privateCustomInit1\"</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L131\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"131\"></td>\n          <td id=\"LC131\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t<span class=\"pl-s\">\"@PostConstruct.sameNameCustomInit1\"</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L132\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"132\"></td>\n          <td id=\"LC132\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t<span class=\"pl-s\">\"afterPropertiesSet\"</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L133\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"133\"></td>\n          <td id=\"LC133\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t<span class=\"pl-s\">\"customInit\"</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L134\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"134\"></td>\n          <td id=\"LC134\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L135\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"135\"></td>\n          <td id=\"LC135\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L136\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"136\"></td>\n          <td id=\"LC136\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-s1\">beanFactory</span>.<span class=\"pl-en\">destroySingletons</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L137\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"137\"></td>\n          <td id=\"LC137\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">bean</span>.<span class=\"pl-s1\">destroyMethods</span>).<span class=\"pl-en\">as</span>(<span class=\"pl-s\">\"destroy-methods\"</span>).<span class=\"pl-en\">containsExactly</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L138\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"138\"></td>\n          <td id=\"LC138\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t<span class=\"pl-s\">\"@PreDestroy.sameNameCustomDestroy1\"</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L139\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"139\"></td>\n          <td id=\"LC139\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t<span class=\"pl-s\">\"@PreDestroy.privateCustomDestroy1\"</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L140\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"140\"></td>\n          <td id=\"LC140\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t<span class=\"pl-s\">\"destroy\"</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L141\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"141\"></td>\n          <td id=\"LC141\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t<span class=\"pl-s\">\"customDestroy\"</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L142\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"142\"></td>\n          <td id=\"LC142\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L143\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"143\"></td>\n          <td id=\"LC143\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">AOT mode:</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/spring-projects/spring-framework/blob/2ccf4cab8b4b437915c297be979d2e569fc273ef/spring-context/src/test/java/org/springframework/context/annotation/InitDestroyMethodLifecycleTests.java#L170-L203\">spring-framework/spring-context/src/test/java/org/springframework/context/annotation/InitDestroyMethodLifecycleTests.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 170 to 203\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/spring-projects/spring-framework/commit/2ccf4cab8b4b437915c297be979d2e569fc273ef\">2ccf4ca</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L170\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"170\"></td>\n          <td id=\"LC170\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L171\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"171\"></td>\n          <td id=\"LC171\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c1\">@</span><span class=\"pl-c1\">CompileWithForkedClassLoader</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L172\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"172\"></td>\n          <td id=\"LC172\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">jakartaAnnotationsWithCustomSameMethodNamesWithAotProcessingAndAotRuntime</span>() { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L173\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"173\"></td>\n          <td id=\"LC173\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-smi\">Class</span>&lt;<span class=\"pl-smi\">CustomAnnotatedPrivateSameNameInitDestroyBean</span>&gt; <span class=\"pl-s1\">beanClass</span> = <span class=\"pl-smi\">CustomAnnotatedPrivateSameNameInitDestroyBean</span>.<span class=\"pl-k\">class</span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L174\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"174\"></td>\n          <td id=\"LC174\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-smi\">GenericApplicationContext</span> <span class=\"pl-s1\">applicationContext</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">GenericApplicationContext</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L175\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"175\"></td>\n          <td id=\"LC175\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L176\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"176\"></td>\n          <td id=\"LC176\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-smi\">DefaultListableBeanFactory</span> <span class=\"pl-s1\">beanFactory</span> = <span class=\"pl-s1\">applicationContext</span>.<span class=\"pl-en\">getDefaultListableBeanFactory</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L177\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"177\"></td>\n          <td id=\"LC177\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-smi\">AnnotationConfigUtils</span>.<span class=\"pl-en\">registerAnnotationConfigProcessors</span>(<span class=\"pl-s1\">beanFactory</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L178\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"178\"></td>\n          <td id=\"LC178\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L179\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"179\"></td>\n          <td id=\"LC179\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-smi\">RootBeanDefinition</span> <span class=\"pl-s1\">beanDefinition</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RootBeanDefinition</span>(<span class=\"pl-s1\">beanClass</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L180\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"180\"></td>\n          <td id=\"LC180\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-s1\">beanDefinition</span>.<span class=\"pl-en\">setInitMethodName</span>(<span class=\"pl-s\">\"customInit\"</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L181\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"181\"></td>\n          <td id=\"LC181\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-s1\">beanDefinition</span>.<span class=\"pl-en\">setDestroyMethodName</span>(<span class=\"pl-s\">\"customDestroy\"</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L182\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"182\"></td>\n          <td id=\"LC182\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-s1\">beanFactory</span>.<span class=\"pl-en\">registerBeanDefinition</span>(<span class=\"pl-s\">\"lifecycleTestBean\"</span>, <span class=\"pl-s1\">beanDefinition</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L183\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"183\"></td>\n          <td id=\"LC183\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L184\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"184\"></td>\n          <td id=\"LC184\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-en\">testCompiledResult</span>(<span class=\"pl-s1\">applicationContext</span>, (<span class=\"pl-s1\">initializer</span>, <span class=\"pl-s1\">compiled</span>) -&gt; { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L185\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"185\"></td>\n          <td id=\"LC185\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-smi\">GenericApplicationContext</span> <span class=\"pl-s1\">aotApplicationContext</span> = <span class=\"pl-en\">createApplicationContext</span>(<span class=\"pl-s1\">initializer</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L186\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"186\"></td>\n          <td id=\"LC186\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-smi\">CustomAnnotatedPrivateSameNameInitDestroyBean</span> <span class=\"pl-s1\">bean</span> = <span class=\"pl-s1\">aotApplicationContext</span>.<span class=\"pl-en\">getBean</span>(<span class=\"pl-s\">\"lifecycleTestBean\"</span>, <span class=\"pl-s1\">beanClass</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L187\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"187\"></td>\n          <td id=\"LC187\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L188\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"188\"></td>\n          <td id=\"LC188\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">bean</span>.<span class=\"pl-s1\">initMethods</span>).<span class=\"pl-en\">as</span>(<span class=\"pl-s\">\"init-methods\"</span>).<span class=\"pl-en\">containsExactly</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L189\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"189\"></td>\n          <td id=\"LC189\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t\t<span class=\"pl-s\">\"afterPropertiesSet\"</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L190\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"190\"></td>\n          <td id=\"LC190\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t\t<span class=\"pl-s\">\"@PostConstruct.privateCustomInit1\"</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L191\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"191\"></td>\n          <td id=\"LC191\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t\t<span class=\"pl-s\">\"@PostConstruct.sameNameCustomInit1\"</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L192\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"192\"></td>\n          <td id=\"LC192\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t\t<span class=\"pl-s\">\"customInit\"</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L193\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"193\"></td>\n          <td id=\"LC193\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L194\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"194\"></td>\n          <td id=\"LC194\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L195\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"195\"></td>\n          <td id=\"LC195\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-s1\">aotApplicationContext</span>.<span class=\"pl-en\">close</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L196\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"196\"></td>\n          <td id=\"LC196\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">bean</span>.<span class=\"pl-s1\">destroyMethods</span>).<span class=\"pl-en\">as</span>(<span class=\"pl-s\">\"destroy-methods\"</span>).<span class=\"pl-en\">containsExactly</span>( </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L197\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"197\"></td>\n          <td id=\"LC197\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t\t<span class=\"pl-s\">\"destroy\"</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L198\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"198\"></td>\n          <td id=\"LC198\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t\t<span class=\"pl-s\">\"@PreDestroy.sameNameCustomDestroy1\"</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L199\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"199\"></td>\n          <td id=\"LC199\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t\t<span class=\"pl-s\">\"@PreDestroy.privateCustomDestroy1\"</span>, </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L200\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"200\"></td>\n          <td id=\"LC200\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t\t<span class=\"pl-s\">\"customDestroy\"</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L201\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"201\"></td>\n          <td id=\"LC201\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L202\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"202\"></td>\n          <td id=\"LC202\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t}); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L203\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"203\"></td>\n          <td id=\"LC203\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<h2 dir=\"auto\">Known Issues</h2>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">InitDestroyAnnotationBeanPostProcessor.processAheadOfTime(RegisteredBean)</code> gets invoked twice in the same AOT processing phase: once via <code class=\"notranslate\">CommonAnnotationBeanPostProcessor</code> and once via <code class=\"notranslate\">InitDestroyAnnotationBeanPostProcessor</code>.</li>\n<li><code class=\"notranslate\">InitializingBean</code> and <code class=\"notranslate\">DisposableBean</code> are treated specially even in AOT mode.</li>\n</ul>",
                "resourcePath": "/spring-projects/spring-framework/issues/30755",
                "createdAt": "2023-06-26T13:20:32Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "theme: aot"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Correct conversion from Resource[] with length 1 to Collection<Resource>",
        "url": "https://github.com/spring-projects/spring-framework/pull/31699",
        "resourcePath": "/spring-projects/spring-framework/pull/31699",
        "createdAt": "2023-11-28T01:40:01Z",
        "number": 31699,
        "mergeCommit": {
          "oid": "feef98b73ce4f86779075298debf6614f01b47c9",
          "message": "Correct conversion from Resource[] with length 1 to Collection<Resource>\n\nFix GH-31693",
          "commitUrl": "https://github.com/spring-projects/spring-framework/commit/feef98b73ce4f86779075298debf6614f01b47c9",
          "parents": {
            "nodes": [
              {
                "oid": "4a6c3e8f5dda538c07d41f424e6f15a51c410ada",
                "message": "Fix reactive retrieval of cached null value for empty Mono\n\nCloses gh-31722"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-beans/src/main/java/org/springframework/beans/TypeConverterDelegate.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context/src/test/java/org/springframework/context/support/ClassPathXmlApplicationContextTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context/src/test/resources/org/springframework/context/support/test/contextA.xml"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5ggDmA2gAoYWNlY2YzNzUzZmY5ZjBiODg1NmM1NmI0NjA1ZGRjNGQxYTk3NTE3Nw",
                "url": "https://github.com/spring-projects/spring-framework/pull/31699/commits/acecf3753ff9f0b8856c56b4605ddc4d1a975177"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 31693,
                "url": "https://github.com/spring-projects/spring-framework/issues/31693",
                "title": "Resource collection injection by @Value regression",
                "bodyHTML": "<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import static org.assertj.core.api.Assertions.assertThat;\n\nimport java.util.List;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.core.io.Resource;\nimport org.springframework.test.context.junit.jupiter.SpringJUnitConfig;\n\n@SpringJUnitConfig\npublic class ResourcesInjectionByFieldTests {\n\n\t@Value(&quot;classpath:application.yaml&quot;)\n\tprivate Resource[] resourcesArray;\n\n\t@Value(&quot;classpath:application.yaml&quot;)\n        // @Value(&quot;classpath*:application.yaml&quot;) will works with 6.1\n\tprivate List&lt;Resource&gt; resourcesList;\n\n\t@Test\n\tvoid test() {\n\t\tassertThat(resourcesArray).isNotEmpty();\n\t\tassertThat(resourcesList).isNotEmpty();\n\t}\n\n}\n\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">assertj</span>.<span class=\"pl-s1\">core</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">Assertions</span>.<span class=\"pl-s1\">assertThat</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">java</span>.<span class=\"pl-s1\">util</span>.<span class=\"pl-s1\">List</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">springframework</span>.<span class=\"pl-s1\">beans</span>.<span class=\"pl-s1\">factory</span>.<span class=\"pl-s1\">annotation</span>.<span class=\"pl-s1\">Value</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">springframework</span>.<span class=\"pl-s1\">core</span>.<span class=\"pl-s1\">io</span>.<span class=\"pl-s1\">Resource</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">springframework</span>.<span class=\"pl-s1\">test</span>.<span class=\"pl-s1\">context</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">SpringJUnitConfig</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">SpringJUnitConfig</span>\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">ResourcesInjectionByFieldTests</span> {\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Value</span>(<span class=\"pl-s\">\"classpath:application.yaml\"</span>)\n\t<span class=\"pl-k\">private</span> <span class=\"pl-smi\">Resource</span>[] <span class=\"pl-s1\">resourcesArray</span>;\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Value</span>(<span class=\"pl-s\">\"classpath:application.yaml\"</span>)\n        <span class=\"pl-c\">// @Value(\"classpath*:application.yaml\") will works with 6.1</span>\n\t<span class=\"pl-k\">private</span> <span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">Resource</span>&gt; <span class=\"pl-s1\">resourcesList</span>;\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n\t<span class=\"pl-smi\">void</span> <span class=\"pl-en\">test</span>() {\n\t\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">resourcesArray</span>).<span class=\"pl-en\">isNotEmpty</span>();\n\t\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">resourcesList</span>).<span class=\"pl-en\">isNotEmpty</span>();\n\t}\n\n}</pre></div>\n<p dir=\"auto\">This test case failed after upgrading spring framework from 6.0 to 6.1, I believe it introduced by <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/spring-projects/spring-framework/commit/84b3335e711bee38efdf6518e72d0ec441704fce/hovercard\" href=\"https://github.com/spring-projects/spring-framework/commit/84b3335e711bee38efdf6518e72d0ec441704fce\"><tt>84b3335</tt></a> which fixed <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"592445409\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/24845\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/24845/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/24845\">#24845</a>. It's possible that this will fix a <a href=\"https://github.com/spring-projects/spring-boot/issues/38556\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-boot/issues/38556/hovercard\">spring boot regression</a>.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"15:51:49.983 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.demo.ResourcesInjectionByFieldTests]: ResourcesInjectionByFieldTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.\n15:51:50.141 [main] ERROR org.springframework.test.context.TestContextManager -- Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.example.demo.ResourcesInjectionByFieldTests@737a135b]\norg.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.example.demo.ResourcesInjectionByFieldTests': Unsatisfied dependency expressed through field 'resourcesList': Failed to convert value of type 'java.lang.String' to required type 'java.util.List'; Cannot convert value of type 'java.lang.String' to required type 'java.util.List': PropertyEditor [org.springframework.core.io.support.ResourceArrayPropertyEditor] returned inappropriate value of type 'org.springframework.core.io.ClassPathResource'\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:772)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:752)\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:493)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireBeanProperties(AbstractAutowireCapableBeanFactory.java:397)\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)\n...\nCaused by: org.springframework.beans.TypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.util.List'; Cannot convert value of type 'java.lang.String' to required type 'java.util.List': PropertyEditor [org.springframework.core.io.support.ResourceArrayPropertyEditor] returned inappropriate value of type 'org.springframework.core.io.ClassPathResource'\n\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:87)\n\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:71)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1379)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:769)\n\t... 76 common frames omitted\nCaused by: java.lang.IllegalArgumentException: Cannot convert value of type 'java.lang.String' to required type 'java.util.List': PropertyEditor [org.springframework.core.io.support.ResourceArrayPropertyEditor] returned inappropriate value of type 'org.springframework.core.io.ClassPathResource'\n\tat org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:268)\n\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:80)\n\t... 80 common frames omitted\"><pre class=\"notranslate\"><code class=\"notranslate\">15:51:49.983 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.demo.ResourcesInjectionByFieldTests]: ResourcesInjectionByFieldTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.\n15:51:50.141 [main] ERROR org.springframework.test.context.TestContextManager -- Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.example.demo.ResourcesInjectionByFieldTests@737a135b]\norg.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'com.example.demo.ResourcesInjectionByFieldTests': Unsatisfied dependency expressed through field 'resourcesList': Failed to convert value of type 'java.lang.String' to required type 'java.util.List'; Cannot convert value of type 'java.lang.String' to required type 'java.util.List': PropertyEditor [org.springframework.core.io.support.ResourceArrayPropertyEditor] returned inappropriate value of type 'org.springframework.core.io.ClassPathResource'\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:772)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:752)\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:493)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1420)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireBeanProperties(AbstractAutowireCapableBeanFactory.java:397)\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)\n\tat org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:97)\n\tat org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:247)\n\tat org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)\n...\nCaused by: org.springframework.beans.TypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.util.List'; Cannot convert value of type 'java.lang.String' to required type 'java.util.List': PropertyEditor [org.springframework.core.io.support.ResourceArrayPropertyEditor] returned inappropriate value of type 'org.springframework.core.io.ClassPathResource'\n\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:87)\n\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:71)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1379)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1348)\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:769)\n\t... 76 common frames omitted\nCaused by: java.lang.IllegalArgumentException: Cannot convert value of type 'java.lang.String' to required type 'java.util.List': PropertyEditor [org.springframework.core.io.support.ResourceArrayPropertyEditor] returned inappropriate value of type 'org.springframework.core.io.ClassPathResource'\n\tat org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:268)\n\tat org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:80)\n\t... 80 common frames omitted\n</code></pre></div>",
                "resourcePath": "/spring-projects/spring-framework/issues/31693",
                "createdAt": "2023-11-27T08:00:15Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: regression"
                      }
                    },
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Make ResourceArrayPropertyEditor supports comma delimited location patterns",
        "url": "https://github.com/spring-projects/spring-framework/pull/31700",
        "resourcePath": "/spring-projects/spring-framework/pull/31700",
        "createdAt": "2023-11-28T02:28:02Z",
        "number": 31700,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/core/io/support/ResourceArrayPropertyEditor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/test/java/org/springframework/core/io/support/ResourceArrayPropertyEditorTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5ggL022gAoZTFmN2UxMjc0MzYyMTVjMTU0Y2QwNDRlOTI5ZWQ5NTZjZWU2OTliYg",
                "url": "https://github.com/spring-projects/spring-framework/pull/31700/commits/e1f7e127436215c154cd044e929ed956cee699bb"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 38556,
                "url": "https://github.com/spring-projects/spring-boot/issues/38556",
                "title": "Failed to bind properties to List<Resource>",
                "bodyHTML": "<p dir=\"auto\">Hello friends. While upgrading to spring-boot v3.2.0, I believe I found a regression in the binding of properties to a <code class=\"notranslate\">List&lt;org.springframework.core.io.Resource&gt;</code>. A small sample will demonstrate:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@SpringBootApplication\n@EnableConfigurationProperties(CoolConfigProperties.class)\npublic class SampleApp {\n\n    public static void main(String[] args) {\n        SpringApplication.run(SampleApp.class, args);\n    }\n}\n\n@ConfigurationProperties(prefix = &quot;cool&quot;)\nrecord CoolConfigProperties(List&lt;Resource&gt; resources) {}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">SpringBootApplication</span>\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">EnableConfigurationProperties</span>(<span class=\"pl-smi\">CoolConfigProperties</span>.<span class=\"pl-k\">class</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">SampleApp</span> {\n\n    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">String</span>[] <span class=\"pl-s1\">args</span>) {\n        <span class=\"pl-smi\">SpringApplication</span>.<span class=\"pl-en\">run</span>(<span class=\"pl-smi\">SampleApp</span>.<span class=\"pl-k\">class</span>, <span class=\"pl-s1\">args</span>);\n    }\n}\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">ConfigurationProperties</span>(<span class=\"pl-s1\">prefix</span> = <span class=\"pl-s\">\"cool\"</span>)\nrecord <span class=\"pl-s1\">CoolConfigProperties</span>(<span class=\"pl-smi\">List</span>&lt;<span class=\"pl-smi\">Resource</span>&gt; <span class=\"pl-s1\">resources</span>) {}</pre></div>\n<p dir=\"auto\">For this example, we will set an environment variable <code class=\"notranslate\">COOL_RESOURCES=classpath:foo.properties,file:./bar.properties</code>.</p>\n<p dir=\"auto\">Resources are bound to ConfigurationProperties as expected when running with spring-boot v3.1.6:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/11762851/285720314-ada4a66f-6daf-4872-b986-8ef160ce3a56.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDQ1OTMsIm5iZiI6MTcxNDk0NDI5MywicGF0aCI6Ii8xMTc2Mjg1MS8yODU3MjAzMTQtYWRhNGE2NmYtNmRhZi00ODcyLWI5ODYtOGVmMTYwY2UzYTU2LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIxMjQ1M1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTIzMzQ5NjJmMjgwZTgzZThmNzFjN2VjOTMwNGZiNjc1N2EzNTA1YmI0NzkxOWE4NjBiYmQ0YzFmM2I1OGQ1MWYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.oJLFXpmRUsee7I9CMwGq_8anCsLDlf2rW-HzMLvfBzc\"><img src=\"https://private-user-images.githubusercontent.com/11762851/285720314-ada4a66f-6daf-4872-b986-8ef160ce3a56.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDQ1OTMsIm5iZiI6MTcxNDk0NDI5MywicGF0aCI6Ii8xMTc2Mjg1MS8yODU3MjAzMTQtYWRhNGE2NmYtNmRhZi00ODcyLWI5ODYtOGVmMTYwY2UzYTU2LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIxMjQ1M1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTIzMzQ5NjJmMjgwZTgzZThmNzFjN2VjOTMwNGZiNjc1N2EzNTA1YmI0NzkxOWE4NjBiYmQ0YzFmM2I1OGQ1MWYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.oJLFXpmRUsee7I9CMwGq_8anCsLDlf2rW-HzMLvfBzc\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">However spring-boot v3.2.0 will fail to start:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v3.2.0)\n\n2023-11-26T23:17:14.625-05:00  INFO 32744 --- [           main] com.example.SampleApp                    : Starting SampleApp using Java 21.0.1 with PID 32744 (C:\\Users\\groat\\Desktop\\list-property-sample\\target\\classes started by groat in C:\\Users\\groat\\Desktop\\list-property-sample)\n2023-11-26T23:17:14.628-05:00  INFO 32744 --- [           main] com.example.SampleApp                    : No active profile set, falling back to 1 default profile: &quot;default&quot;\n2023-11-26T23:17:14.854-05:00  WARN 32744 --- [           main] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cool-com.example.CoolConfigProperties': Could not bind properties to 'CoolConfigProperties' : prefix=cool, ignoreInvalidFields=false, ignoreUnknownFields=true\n2023-11-26T23:17:14.857-05:00  INFO 32744 --- [           main] .s.b.a.l.ConditionEvaluationReportLogger : \n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.\n2023-11-26T23:17:14.866-05:00 ERROR 32744 --- [           main] o.s.b.d.LoggingFailureAnalysisReporter   : \n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nFailed to bind properties under 'cool.resources' to java.util.List&lt;org.springframework.core.io.Resource&gt;:\n\n    Property: cool.resources\n    Value: &quot;classpath:/foo.properties,file:./bar.properties&quot;\n    Origin: System Environment Property &quot;COOL_RESOURCES&quot;\n    Reason: failed to convert java.lang.String to java.util.List&lt;org.springframework.core.io.Resource&gt; (caused by java.lang.IllegalArgumentException: Cannot convert value of type 'java.lang.String' to required type 'java.util.List': PropertyEditor [org.springframework.core.io.support.ResourceArrayPropertyEditor] returned inappropriate value of type 'org.springframework.core.io.ClassPathResource')\n\nAction:\n\nUpdate your application's configuration\n\n\nProcess finished with exit code 1\"><pre class=\"notranslate\"><code class=\"notranslate\">  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v3.2.0)\n\n2023-11-26T23:17:14.625-05:00  INFO 32744 --- [           main] com.example.SampleApp                    : Starting SampleApp using Java 21.0.1 with PID 32744 (C:\\Users\\groat\\Desktop\\list-property-sample\\target\\classes started by groat in C:\\Users\\groat\\Desktop\\list-property-sample)\n2023-11-26T23:17:14.628-05:00  INFO 32744 --- [           main] com.example.SampleApp                    : No active profile set, falling back to 1 default profile: \"default\"\n2023-11-26T23:17:14.854-05:00  WARN 32744 --- [           main] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cool-com.example.CoolConfigProperties': Could not bind properties to 'CoolConfigProperties' : prefix=cool, ignoreInvalidFields=false, ignoreUnknownFields=true\n2023-11-26T23:17:14.857-05:00  INFO 32744 --- [           main] .s.b.a.l.ConditionEvaluationReportLogger : \n\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.\n2023-11-26T23:17:14.866-05:00 ERROR 32744 --- [           main] o.s.b.d.LoggingFailureAnalysisReporter   : \n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nFailed to bind properties under 'cool.resources' to java.util.List&lt;org.springframework.core.io.Resource&gt;:\n\n    Property: cool.resources\n    Value: \"classpath:/foo.properties,file:./bar.properties\"\n    Origin: System Environment Property \"COOL_RESOURCES\"\n    Reason: failed to convert java.lang.String to java.util.List&lt;org.springframework.core.io.Resource&gt; (caused by java.lang.IllegalArgumentException: Cannot convert value of type 'java.lang.String' to required type 'java.util.List': PropertyEditor [org.springframework.core.io.support.ResourceArrayPropertyEditor] returned inappropriate value of type 'org.springframework.core.io.ClassPathResource')\n\nAction:\n\nUpdate your application's configuration\n\n\nProcess finished with exit code 1\n</code></pre></div>",
                "resourcePath": "/spring-projects/spring-boot/issues/38556",
                "createdAt": "2023-11-27T04:18:11Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "for: external-project"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add `MySQLIdentityColumnMaxValueIncrementer`",
        "url": "https://github.com/spring-projects/spring-framework/pull/31784",
        "resourcePath": "/spring-projects/spring-framework/pull/31784",
        "createdAt": "2023-12-07T18:47:52Z",
        "number": 31784,
        "mergeCommit": {
          "oid": "b3a3b79b4481c5190e59ce6b4ab70323e8da4f18",
          "message": "Adds `MySQLIdentityColumnMaxValueIncrementer`\n\nThe new `DataFieldMaxValueIncrementer` can be used with identity columns in MySQL 8.0 or later.",
          "commitUrl": "https://github.com/spring-projects/spring-framework/commit/b3a3b79b4481c5190e59ce6b4ab70323e8da4f18",
          "parents": {
            "nodes": [
              {
                "oid": "91b9a7537138d7de478c3229069acfe946adcb3a",
                "message": "Box Kotlin value class parameters in web endpoint\n\nIn order to avoid \"java.lang.IllegalArgumentException:\nobject is not an instance of declaring class\" errors.\n\nCloses gh-31698"
              }
            ]
          }
        },
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-jdbc/src/main/java/org/springframework/jdbc/support/incrementer/MySQLIdentityColumnMaxValueIncrementer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-jdbc/src/test/java/org/springframework/jdbc/support/incrementer/DataFieldMaxValueIncrementerTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5hdDgb2gAoZGZhZGFjODIwN2JiNTNlOWQ0NGM5ZWZiNGFjNDRhMWFlNzQyNzlkNw",
                "url": "https://github.com/spring-projects/spring-framework/pull/31784/commits/dfadac8207bb53e9d44c9efb4ac44a1ae74279d7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 18989,
                "url": "https://github.com/spring-projects/spring-framework/issues/18989",
                "title": "MySQLMaxValueIncrementer is not multi-master replication-safe [SPR-14418]",
                "bodyHTML": "<p dir=\"auto\"><strong><a href=\"https://jira.spring.io/secure/ViewProfile.jspa?name=hexetic\" rel=\"nofollow\">Tim Gokcen</a></strong> opened <strong><a href=\"https://jira.spring.io/browse/SPR-14418?redirect=false\" rel=\"nofollow\">SPR-14418</a></strong> and commented</p>\n<p dir=\"auto\">The Spring <code class=\"notranslate\">org.springframework.jdbc.support.incrementer</code> subsystem is used by Spring Batch, among others, to generate increasing \"unique\" IDs.</p>\n<p dir=\"auto\">However, <code class=\"notranslate\">org.springframework.jdbc.support.incrementer.MySQLMaxValueIncrementer</code> is not safe to use in multi-master MySQL or MariaDB environments, e.g. master-master replication or MySQL/Galera cluster. This is because of the way in which it always kicks forward last_insert_id() by getCacheSize(), which will result in duplicate IDs across hosts and result in collisions if those IDs are used to, for example, insert rows into a table that has a unique key on the ID.</p>\n<p dir=\"auto\">The global MySQL variable <code class=\"notranslate\">auto_increment_increment</code> is available and used by clustering systems to ensure that AUTO_INCREMENT columns do not collide across the cluster (see the <a href=\"https://mariadb.org/auto-increments-in-galera/\" rel=\"nofollow\">Galera documentation</a>). The same value could also be used by MySQLMaxValueIncrementer to avoid collisions.</p>\n<p dir=\"auto\">In multi-master environments, the cacheSize would also have to always be equal to 1; there is no way to pre-allocate IDs without guaranteeing that they were not already selected by another host.</p>\n<p dir=\"auto\">Alternatively, the whole idea of using the backing RDBMS to generate increasing IDs could be abandoned in favour of generating non-linearly increasing \"probably-unique\" IDs, as for example in in <a href=\"https://github.com/twitter/snowflake/tree/snowflake-2010\">Twitter Snowflake</a>, which uses a combination of \"timestamp + host-ID + thread-ID + counter\" to produce a very-likely-to-be-unique 64-bit integer.</p>\n<hr>\n<p dir=\"auto\"><strong>Affects:</strong> 4.2.6</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/18989",
                "createdAt": "2016-06-29T12:44:55Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: data"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add interception of RFC-7807 responses",
        "url": "https://github.com/spring-projects/spring-framework/pull/31822",
        "resourcePath": "/spring-projects/spring-framework/pull/31822",
        "createdAt": "2023-12-12T12:19:44Z",
        "number": 31822,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfiguration.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurationSupport.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/main/java/org/springframework/web/servlet/config/annotation/WebMvcConfigurerComposite.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/AbstractMessageConverterMethodProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/ExceptionHandlerExceptionResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/HttpEntityMethodProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestResponseBodyMethodProcessor.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/test/java/org/springframework/web/servlet/config/annotation/DelegatingWebMvcConfigurationTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5hyWgQ2gAoNTViMzQ0NTZhY2QwMGM5Y2QzNDBjY2M1OTFlNjBiZjY5ODM0ODEwZQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/31822/commits/55b34456acd00c9cd340ccc591e60bf69834810e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30565,
                "url": "https://github.com/spring-projects/spring-framework/issues/30565",
                "title": "Support selective `ErrorResponse` logging",
                "bodyHTML": "<p dir=\"auto\">As a user I would like to be able to easily log any <code class=\"notranslate\">ErrorResponse</code> that is returned as response to a web request. This logging allows me to monitor which specific problems are returned and allows easier troubleshooting.</p>\n<p dir=\"auto\">It should not matter where the <code class=\"notranslate\">ErrorResponse</code> comes from, for instance thrown directly from a controller method, returned in an <code class=\"notranslate\">@ExceptionHandler</code> (as a <code class=\"notranslate\">ErrorResponse</code> or <code class=\"notranslate\">ProblemDetail</code>), created by the <code class=\"notranslate\">ResponseEntityExceptionHandler</code>, or any other way.</p>\n<p dir=\"auto\">I would like to be able to filter which types of problems are logged. For instance, certain input validation problems are probably not interesting to log. Therefor a facility should be provided that allows me to configure which problems should be logged, and which shouldn\u2019t. Preferably I should be able to use Spring environment properties to turn logging on for problems of a specific type (using the <code class=\"notranslate\">type</code> field?)</p>\n<p dir=\"auto\">I can imagine that not everybody wants to log <code class=\"notranslate\">ErrorResponse</code> instances in the same way, for instance some might want different information in the log message or would prefer a specific log marker to be used. Therefor I propose that the code that does the actual logging can easily be replaced by custom logging logic.</p>\n<p dir=\"auto\">Some default logging should be provided, and I suggest that the following <code class=\"notranslate\">ProblemDetail</code> fields are in the log message: <code class=\"notranslate\">type</code>, <code class=\"notranslate\">title</code>, <code class=\"notranslate\">detail</code> and <code class=\"notranslate\">status</code>.</p>\n<p dir=\"auto\"><em>Note: I have discussed this feature request with <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rstoyanchev/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rstoyanchev\">@rstoyanchev</a>  at Spring I/O 2023</em></p>",
                "resourcePath": "/spring-projects/spring-framework/issues/30565",
                "createdAt": "2023-05-31T08:49:55Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Use UTF-8 by default for JSON multipart content in `ContentRequestMatchers`",
        "url": "https://github.com/spring-projects/spring-framework/pull/31924",
        "resourcePath": "/spring-projects/spring-framework/pull/31924",
        "createdAt": "2023-12-29T18:29:12Z",
        "number": 31924,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/main/java/org/springframework/test/web/client/match/ContentRequestMatchers.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-test/src/test/java/org/springframework/test/web/client/match/ContentRequestMatchersTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5i8uAA2gAoYmZjZWVkZDJmM2NkMTI5ZTQxYTMzMTgzZTBlODFmNGJmMDQ4ODdiYQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/31924/commits/bfceedd2f3cd129e41a33183e0e81f4bf04887ba"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 31923,
                "url": "https://github.com/spring-projects/spring-framework/issues/31923",
                "title": "ContentRequestMatchers.MultipartHelper default charset",
                "bodyHTML": "\n<p dir=\"auto\"><strong>Affects:</strong> 6.1.2</p>\n<hr>\n\n<p dir=\"auto\">While using the <a href=\"https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/test/autoconfigure/web/client/RestClientTest.html\" rel=\"nofollow\">@RestClientTest</a> I had an issue where I sent a <a href=\"https://docs.spring.io/spring-framework/reference/integration/rest-clients.html#_multipart\" rel=\"nofollow\">Multipart</a> request and wanted to confirm in a test that it was correctly formed.</p>\n<p dir=\"auto\">But during testing I noticed that the request was handled by MultipartHelper and it didn't parse correctly my <code class=\"notranslate\">application/json</code> part in <code class=\"notranslate\">UTF-8</code>, resulting in some symbols being malformed. Although, it worked correctly while using the deprecated <code class=\"notranslate\">application/json; charset=utf-8</code>. </p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/spring-projects/spring-framework/blob/f5b4f7d9e89ba21e2fd842f71d8a9af1dcfa0535/spring-test/src/main/java/org/springframework/test/web/client/match/ContentRequestMatchers.java#L361\">spring-framework/spring-test/src/main/java/org/springframework/test/web/client/match/ContentRequestMatchers.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 361\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/spring-projects/spring-framework/commit/f5b4f7d9e89ba21e2fd842f71d8a9af1dcfa0535\">f5b4f7d</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L361\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"361\"></td>\n          <td id=\"LC361\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">MultipartHelper</span> { </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">After further investigation I noticed that <code class=\"notranslate\">DiskFileItemFactory</code> is used with default values, with the charset set to <code class=\"notranslate\">this.defaultCharset = \"ISO-8859-1\"</code>.</p>\n<p dir=\"auto\">Would it make sense for <code class=\"notranslate\">MultipartHelper</code> to default to UTF-8?</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"FileUpload fileUpload = new FileUpload();\nDiskFileItemFactory factory = new DiskFileItemFactory();\nfactory.setDefaultCharset(StandardCharsets.UTF_8.name());\nfileUpload.setFileItemFactory(factory);\"><pre class=\"notranslate\"><span class=\"pl-smi\">FileUpload</span> <span class=\"pl-s1\">fileUpload</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">FileUpload</span>();\n<span class=\"pl-smi\">DiskFileItemFactory</span> <span class=\"pl-s1\">factory</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">DiskFileItemFactory</span>();\n<span class=\"pl-s1\">factory</span>.<span class=\"pl-en\">setDefaultCharset</span>(<span class=\"pl-smi\">StandardCharsets</span>.<span class=\"pl-c1\">UTF_8</span>.<span class=\"pl-en\">name</span>());\n<span class=\"pl-s1\">fileUpload</span>.<span class=\"pl-en\">setFileItemFactory</span>(<span class=\"pl-s1\">factory</span>);</pre></div>",
                "resourcePath": "/spring-projects/spring-framework/issues/31923",
                "createdAt": "2023-12-29T17:37:33Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: test"
                      }
                    },
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add error handling function in R2DBC `DatabaseClient`",
        "url": "https://github.com/spring-projects/spring-framework/pull/31942",
        "resourcePath": "/spring-projects/spring-framework/pull/31942",
        "createdAt": "2024-01-03T16:36:05Z",
        "number": 31942,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-r2dbc/src/main/java/org/springframework/r2dbc/core/DatabaseClient.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-r2dbc/src/main/java/org/springframework/r2dbc/core/DefaultDatabaseClient.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-r2dbc/src/main/java/org/springframework/r2dbc/core/DefaultDatabaseClientBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-r2dbc/src/test/java/org/springframework/r2dbc/core/DefaultDatabaseClientTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5jJ3nD2gAoNjU1NGMxNjU1MTAyMmIzYTE3NTlmMjM0YTEyOTczYzg0YTk2ODQyMg",
                "url": "https://github.com/spring-projects/spring-framework/pull/31942/commits/6554c16551022b3a1759f234a12973c84a968422"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 31256,
                "url": "https://github.com/spring-projects/spring-framework/issues/31256",
                "title": "Add error handling strategy to R2DBC DatabaseClient",
                "bodyHTML": "<p dir=\"auto\">We currently have an issue where the database might throw unexpected exceptions. To handle that we would like to catch those exceptions and close the connection to the database. I.e we need to add this code:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    @Override\n    public &lt;T&gt; Mono&lt;T&gt; inConnection(Function&lt;Connection, Mono&lt;T&gt;&gt; action) throws DataAccessException {\n        return super.inConnection(con -&gt; action.apply(con)\n                .onErrorResume(e -&gt; {\n                    handleError(e, con);\n                    return Mono.error(e);\n                }));\n    }\n\n    @Override\n    public &lt;T&gt; Flux&lt;T&gt; inConnectionMany(Function&lt;Connection, Flux&lt;T&gt;&gt; action) throws DataAccessException {\n        return super.inConnectionMany(con -&gt; action.apply(con)\n                .onErrorResume(e -&gt; {\n                    handleError(e, con);\n                    return Mono.error(e);\n                }));\n    }\"><pre class=\"notranslate\"><code class=\"notranslate\">    @Override\n    public &lt;T&gt; Mono&lt;T&gt; inConnection(Function&lt;Connection, Mono&lt;T&gt;&gt; action) throws DataAccessException {\n        return super.inConnection(con -&gt; action.apply(con)\n                .onErrorResume(e -&gt; {\n                    handleError(e, con);\n                    return Mono.error(e);\n                }));\n    }\n\n    @Override\n    public &lt;T&gt; Flux&lt;T&gt; inConnectionMany(Function&lt;Connection, Flux&lt;T&gt;&gt; action) throws DataAccessException {\n        return super.inConnectionMany(con -&gt; action.apply(con)\n                .onErrorResume(e -&gt; {\n                    handleError(e, con);\n                    return Mono.error(e);\n                }));\n    }\n</code></pre></div>\n<p dir=\"auto\">However since DefaultDatabaseClient is package private it is not possible to extend it.</p>\n<p dir=\"auto\">The easiest solution would be to add a delegating client which just delegates all calls to the underlying client and adds that error handling on top. However the internal call structure of DefaultDatabaseClient makes that impossible. Calls to the \"sql\" method returns an instance of the internal class DefaultGenericExecuteSpec. Since that class is an internal class it has a reference to the DefaultDatabaseClient, that reference gets exposed externally and when a client calls the \"map\" method on the ExecuteSpec. That reference is used to create an FetchSpec and then the FetchSpec will use that reference to fetch the data, not the delegating client completely bypassing the custom error handling.</p>\n<p dir=\"auto\">I propose to expose DefaultGenericExecuteSpec externally and let the caller provide a client with which to do the requests. Then a delegating client could create a new instance with itself as client.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/31256",
                "createdAt": "2023-09-18T11:34:11Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: data"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix `AsyncContext` to be completed on `AsyncListener.onError()`",
        "url": "https://github.com/spring-projects/spring-framework/pull/31953",
        "resourcePath": "/spring-projects/spring-framework/pull/31953",
        "createdAt": "2024-01-05T12:13:04Z",
        "number": 31953,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/context/request/async/StandardServletAsyncWebRequest.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/java/org/springframework/web/context/request/async/StandardServletAsyncWebRequestTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5jTnWe2gAoYmRjY2Q5MDE1MGQ5NWY4MWQ0MGQzZGM3ODhlOWIzMGFkZWUyNDY1OQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/31953/commits/bdccd90150d95f81d40d3dc788e9b30adee24659"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 31541,
                "url": "https://github.com/spring-projects/spring-framework/issues/31541",
                "title": "Double error response handling on suspended methods",
                "bodyHTML": "<p dir=\"auto\">The combination of <code class=\"notranslate\">spring-boot-starter-web</code>, <code class=\"notranslate\">kotlinx-coroutines-reactor</code>, a suspended controller method and handling a 500 error response through <code class=\"notranslate\">ResponseEntityExceptionHandler</code> causes double exception handling and response bodies.</p>\n<p dir=\"auto\">The first response body is generated by the <code class=\"notranslate\">ProblemDetail</code> handled with <code class=\"notranslate\">ResponseEntityExceptionHandler.handleException(...)</code>, the second is generated by <code class=\"notranslate\">BasicErrorController</code></p>\n<p dir=\"auto\">Reproduction steps (tested on version 3.0.0 and 3.1.2):</p>\n<ul dir=\"auto\">\n<li>Create spring initializr project with Kotlin and spring-boot-starter-web</li>\n<li>Add org.jetbrains.kotlinx:kotlinx-coroutines-reactor dependency</li>\n<li>Run following code</li>\n</ul>\n<div class=\"highlight highlight-source-kotlin notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@SpringBootApplication\nclass DemoApplication\nfun main(args: Array&lt;String&gt;) {\n    runApplication&lt;DemoApplication&gt;(*args)\n}\n\n@RestController\nclass Controller {\n    @GetMapping(&quot;normal&quot;)\n    fun normalScenario() {\n        throw IllegalStateException(&quot;Returns problemdetail&quot;)\n    }\n    @GetMapping(&quot;suspend&quot;)\n    suspend fun errorScenario() {\n        throw IllegalStateException(&quot;Double exception handling&quot;)\n    }\n}\n\n@ControllerAdvice\nclass ExceptionHandler : ResponseEntityExceptionHandler() {\n    @ExceptionHandler(Exception::class)\n    fun handleUnexpectedTechnicalException(\n        ex: Exception,\n        request: WebRequest\n    ): ResponseEntity&lt;Any&gt;? {\n        return handleException(\n            ErrorResponseException(\n                HttpStatus.INTERNAL_SERVER_ERROR,\n                ProblemDetail.forStatus(500),\n                ex\n            ), request\n        )\n    }\n}\"><pre class=\"notranslate\">@SpringBootApplication\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">DemoApplication</span>\n<span class=\"pl-k\">fun</span> <span class=\"pl-en\">main</span>(<span class=\"pl-smi\">args</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">Array</span>&lt;<span class=\"pl-en\">String</span>&gt;) {\n    runApplication&lt;<span class=\"pl-en\">DemoApplication</span>&gt;(<span class=\"pl-k\">*</span>args)\n}\n\n@RestController\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">Controller</span> {\n    @GetMapping(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>normal<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-k\">fun</span> <span class=\"pl-en\">normalScenario</span>() {\n        <span class=\"pl-k\">throw</span> <span class=\"pl-en\">IllegalStateException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Returns problemdetail<span class=\"pl-pds\">\"</span></span>)\n    }\n    @GetMapping(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>suspend<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-k\">suspend</span> <span class=\"pl-k\">fun</span> <span class=\"pl-en\">errorScenario</span>() {\n        <span class=\"pl-k\">throw</span> <span class=\"pl-en\">IllegalStateException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Double exception handling<span class=\"pl-pds\">\"</span></span>)\n    }\n}\n\n@ControllerAdvice\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">ExceptionHandler</span> : <span class=\"pl-en\">ResponseEntityExceptionHandler</span>() {\n    @ExceptionHandler(<span class=\"pl-en\">Exception</span>::<span class=\"pl-c1\">class</span>)\n    <span class=\"pl-k\">fun</span> <span class=\"pl-en\">handleUnexpectedTechnicalException</span>(\n        <span class=\"pl-smi\">ex</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Exception</span>,\n        <span class=\"pl-smi\">request</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">WebRequest</span>\n    ): <span class=\"pl-en\">ResponseEntity</span>&lt;<span class=\"pl-en\">Any</span>&gt;<span class=\"pl-k\">?</span> {\n        <span class=\"pl-k\">return</span> handleException(\n            <span class=\"pl-en\">ErrorResponseException</span>(\n                <span class=\"pl-en\">HttpStatus</span>.<span class=\"pl-en\">INTERNAL_SERVER_ERROR</span>,\n                <span class=\"pl-en\">ProblemDetail</span>.forStatus(<span class=\"pl-c1\">500</span>),\n                ex\n            ), request\n        )\n    }\n}</pre></div>\n<p dir=\"auto\">Endpoint /normal returns the expected Problem Detail</p>\n<p dir=\"auto\">Endpoint /suspend with postman returns double body response (body size + ProblemDetail and then body size + BasicErrorController's response). Since this response is an invalid http response, a proxy like fiddler is needed to see this double response being returned.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"HTTP/1.1 500\nContent-Type: application/problem+json\nTransfer-Encoding: chunked\nDate: Tue, 08 Aug 2023 09:26:30 GMT\nConnection: close\n\n59\n{&quot;type&quot;:&quot;about:blank&quot;,&quot;title&quot;:&quot;Internal Server Error&quot;,&quot;status&quot;:500,&quot;instance&quot;:&quot;/suspend&quot;}\n6c\n{&quot;timestamp&quot;:&quot;2023-08-08T09:26:30.705+00:00&quot;,&quot;status&quot;:500,&quot;error&quot;:&quot;Internal Server Error&quot;,&quot;path&quot;:&quot;/suspend&quot;}\"><pre class=\"notranslate\"><code class=\"notranslate\">HTTP/1.1 500\nContent-Type: application/problem+json\nTransfer-Encoding: chunked\nDate: Tue, 08 Aug 2023 09:26:30 GMT\nConnection: close\n\n59\n{\"type\":\"about:blank\",\"title\":\"Internal Server Error\",\"status\":500,\"instance\":\"/suspend\"}\n6c\n{\"timestamp\":\"2023-08-08T09:26:30.705+00:00\",\"status\":500,\"error\":\"Internal Server Error\",\"path\":\"/suspend\"}\n</code></pre></div>\n<p dir=\"auto\">Endpoint /suspend with chrome triggers following error:<br>\n<code class=\"notranslate\">s.e.ErrorMvcAutoConfiguration$StaticView : Cannot render error page for request [/suspend] as the response has already been committed. As a result, the response may have the wrong status code.</code></p>",
                "resourcePath": "/spring-projects/spring-framework/issues/31541",
                "createdAt": "2023-08-08T09:24:53Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status: backported"
                      }
                    },
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: bug"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support sending large STOMP messages as fragmented frames on `WebSocketStompClient`",
        "url": "https://github.com/spring-projects/spring-framework/pull/31970",
        "resourcePath": "/spring-projects/spring-framework/pull/31970",
        "createdAt": "2024-01-07T16:22:39Z",
        "number": 31970,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/modules/ROOT/pages/web/websocket/stomp/client.adoc"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/SplittingStompEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-messaging/src/main/java/org/springframework/messaging/simp/stomp/StompDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-messaging/src/test/java/org/springframework/messaging/simp/stomp/SplittingStompEncoderTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-websocket/src/main/java/org/springframework/web/socket/messaging/WebSocketStompClient.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-websocket/src/test/java/org/springframework/web/socket/messaging/WebSocketStompClientTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5jaI9S2gAoMDVhOTkwZWYwMWIyMjc1ZjMyZTViYThmMmUzYTFmYmFhODBjM2U1ZA",
                "url": "https://github.com/spring-projects/spring-framework/pull/31970/commits/05a990ef01b2275f32e5ba8f2e3a1fbaa80c3e5d"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 29354,
                "url": "https://github.com/spring-projects/spring-framework/issues/29354",
                "title": "Support sending large STOMP messages as fragmented frames",
                "bodyHTML": "<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"398166284\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/16152\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/16152/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/16152\">#16152</a> added handling of fragmented STOMP frames. However, as of now there is no functionality to send such fragmented frames through <code class=\"notranslate\">WebSocketStompClient</code>.  This issue is a feature request to add complimentary functionality in <code class=\"notranslate\">WebSocketStompClient</code>.</p>\n<p dir=\"auto\">Node libraries such as <code class=\"notranslate\">stompjs</code> <a href=\"https://stomp-js.github.io/\" rel=\"nofollow\">https://stomp-js.github.io/</a> allow for configuring a max chunk size. When STOMP message is bigger than the chunk size, it is sent as multiple websocket frames.</p>\n<p dir=\"auto\">We would also need to expose the functionality to configure the max chunk size in <code class=\"notranslate\">WebSocketStompClient</code>.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/29354",
                "createdAt": "2022-10-19T14:38:19Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add `spring.context.expression.maxLength` property",
        "url": "https://github.com/spring-projects/spring-framework/pull/31986",
        "resourcePath": "/spring-projects/spring-framework/pull/31986",
        "createdAt": "2024-01-09T08:21:39Z",
        "number": 31986,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context/src/main/java/org/springframework/context/expression/StandardBeanExpressionResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-expression/src/main/java/org/springframework/expression/spel/SpelParserConfiguration.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5jjPx62gAoMmM5MGE5YWQ5NjQzZGFmNmFjMTI1ZmM1MGI0MzE4NGVlNGFmNTRiOQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/31986/commits/2c90a9ad9643daf6ac125fc50b43184ee4af54b9"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 31952,
                "url": "https://github.com/spring-projects/spring-framework/issues/31952",
                "title": "Make maximum length of SpEL expressions in an `ApplicationContext` configurable",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong> Spring Framework 5.2.24+</p>\n<h3 dir=\"auto\">Background</h3>\n<p dir=\"auto\">Since <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1665885860\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/30325\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/30325/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/30325\">#30325</a> (implemented in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/spring-projects/spring-framework/commit/b73f5fcac22555f844cf27a7eeb876cb9d7f7f7e/hovercard\" href=\"https://github.com/spring-projects/spring-framework/commit/b73f5fcac22555f844cf27a7eeb876cb9d7f7f7e\"><tt>b73f5fc</tt></a>) the length of SpEL expressions is limited by default to 10000. As I understand it this is a mitigation against potential ReDoS exploits. However, in some cases this limitation is too low and prevents upgrading to recent Spring Framework versions.</p>\n<p dir=\"auto\">While <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1684518592\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/30380\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/30380/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/30380\">#30380</a> (implemented in <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/spring-projects/spring-framework/commit/aefcb9d2d6ee385c14d83852bee50b0307b42ce4/hovercard\" href=\"https://github.com/spring-projects/spring-framework/commit/aefcb9d2d6ee385c14d83852bee50b0307b42ce4\"><tt>aefcb9d</tt></a>) adds support for a custom <code class=\"notranslate\">maximumExpressionLength</code> the feature is only accessible if one instantiates the <code class=\"notranslate\">SpelParserConfiguration</code> class themselves.</p>\n<p dir=\"auto\">In my case I would like to configure the <code class=\"notranslate\">SpelParserConfiguration</code> created in the class <code class=\"notranslate\">StandardBeanExpressionResolver</code> to accept my very long property by raising the <code class=\"notranslate\">maximumExpressionLength</code> to a higher value than its default (10000).</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/spring-projects/spring-framework/blob/07097976efe954d33d4d7104709e06a614e4fc3f/spring-context/src/main/java/org/springframework/context/expression/StandardBeanExpressionResolver.java#L91-L105\">spring-framework/spring-context/src/main/java/org/springframework/context/expression/StandardBeanExpressionResolver.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 91 to 105\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/spring-projects/spring-framework/commit/07097976efe954d33d4d7104709e06a614e4fc3f\">0709797</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L91\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"91\"></td>\n          <td id=\"LC91\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-c\">/**</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L92\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"92\"></td>\n          <td id=\"LC92\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">\t * Create a new {@code StandardBeanExpressionResolver} with default settings.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L93\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"93\"></td>\n          <td id=\"LC93\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">\t */</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L94\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"94\"></td>\n          <td id=\"LC94\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">StandardBeanExpressionResolver</span>() { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L95\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"95\"></td>\n          <td id=\"LC95\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">expressionParser</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SpelExpressionParser</span>(); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L96\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"96\"></td>\n          <td id=\"LC96\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t} </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L97\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"97\"></td>\n          <td id=\"LC97\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L98\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"98\"></td>\n          <td id=\"LC98\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-c\">/**</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L99\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"99\"></td>\n          <td id=\"LC99\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">\t * Create a new {@code StandardBeanExpressionResolver} with the given bean class loader,</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L100\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"100\"></td>\n          <td id=\"LC100\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">\t * using it as the basis for expression compilation.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L101\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"101\"></td>\n          <td id=\"LC101\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">\t * @param beanClassLoader the factory's bean class loader</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L102\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"102\"></td>\n          <td id=\"LC102\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\">\t */</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L103\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"103\"></td>\n          <td id=\"LC103\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">StandardBeanExpressionResolver</span>(<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Nullable</span> <span class=\"pl-smi\">ClassLoader</span> <span class=\"pl-s1\">beanClassLoader</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L104\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"104\"></td>\n          <td id=\"LC104\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">expressionParser</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SpelExpressionParser</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">SpelParserConfiguration</span>(<span class=\"pl-c1\">null</span>, <span class=\"pl-s1\">beanClassLoader</span>)); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L105\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"105\"></td>\n          <td id=\"LC105\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t} </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<h3 dir=\"auto\">Use case</h3>\n<p dir=\"auto\">I've got a huge map in my config:</p>\n<div class=\"highlight highlight-source-ini notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"myproperty={\\\n  a: {\\\n    x: { host: '10.1.1.1', port: 1234 },\\\n    y: { host: '10.1.1.1', port: 1234 },\\\n    z: { host: '10.1.1.1', port: 1234 }\\\n  },\\\n  b: {\\\n    x: { host: '10.1.1.1', port: 1234 },\\\n    y: { host: '10.1.1.1', port: 1234 },\\\n    z: { host: '10.1.1.1', port: 1234 }\\\n  },\\\n  c: {\\\n    x: { host: '10.1.1.1', port: 1234 },\\\n    y: { host: '10.1.1.1', port: 1234 },\\\n    z: { host: '10.1.1.1', port: 1234 }\\\n  },\\\n  # and so on, altogether 15000 characters\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">myproperty</span>={\\\n  a: {\\\n    x: { host: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>10.1.1.1<span class=\"pl-pds\">'</span></span>, port: 1234 },\\\n    y: { host: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>10.1.1.1<span class=\"pl-pds\">'</span></span>, port: 1234 },\\\n    z: { host: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>10.1.1.1<span class=\"pl-pds\">'</span></span>, port: 1234 }\\\n  },\\\n  b: {\\\n    x: { host: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>10.1.1.1<span class=\"pl-pds\">'</span></span>, port: 1234 },\\\n    y: { host: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>10.1.1.1<span class=\"pl-pds\">'</span></span>, port: 1234 },\\\n    z: { host: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>10.1.1.1<span class=\"pl-pds\">'</span></span>, port: 1234 }\\\n  },\\\n  c: {\\\n    x: { host: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>10.1.1.1<span class=\"pl-pds\">'</span></span>, port: 1234 },\\\n    y: { host: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>10.1.1.1<span class=\"pl-pds\">'</span></span>, port: 1234 },\\\n    z: { host: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>10.1.1.1<span class=\"pl-pds\">'</span></span>, port: 1234 }\\\n  },\\\n  <span class=\"pl-c\"><span class=\"pl-c\">#</span> and so on, altogether 15000 characters</span>\n}</pre></div>\n<p dir=\"auto\">It is used by a property:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Value(&quot;#{${myproperty}}&quot;)\nprivate Map&lt;String, Map&lt;String,Map&lt;String,String&gt;&gt;&gt; myproperty;\"><pre class=\"notranslate\"><code class=\"notranslate\">@Value(\"#{${myproperty}}\")\nprivate Map&lt;String, Map&lt;String,Map&lt;String,String&gt;&gt;&gt; myproperty;\n</code></pre></div>\n<p dir=\"auto\">If I try to start my application I get the following exception:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"org.springframework.expression.spel.SpelEvaluationException: EL1079E: SpEL expression is too long, exceeding the threshold of '10,000' characters&quot;}}\"><pre class=\"notranslate\"><code class=\"notranslate\">org.springframework.expression.spel.SpelEvaluationException: EL1079E: SpEL expression is too long, exceeding the threshold of '10,000' characters\"}}\n</code></pre></div>\n<h3 dir=\"auto\">Proposal</h3>\n<p dir=\"auto\">Make the parameter <code class=\"notranslate\">maximumExpressionLength</code> of <code class=\"notranslate\">SpelParserConfiguration</code> configurable when it is instantiated in <code class=\"notranslate\">StandardBeanExpressionResolver.java</code> (see the snippet above). Example (not sure what a conformant property name would be):</p>\n<div class=\"highlight highlight-source-ini notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"spring.standardBeanExpressionResolver.maximumExpressionLength=20000\"><pre class=\"notranslate\"><span class=\"pl-k\">spring.standardBeanExpressionResolver.maximumExpressionLength</span>=20000</pre></div>",
                "resourcePath": "/spring-projects/spring-framework/issues/31952",
                "createdAt": "2024-01-05T09:42:04Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Document exception handling for HTTP Interface client with `RestClient` and `RestTemplate`",
        "url": "https://github.com/spring-projects/spring-framework/pull/31991",
        "resourcePath": "/spring-projects/spring-framework/pull/31991",
        "createdAt": "2024-01-09T15:50:52Z",
        "number": 31991,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/modules/ROOT/pages/integration/rest-clients.adoc"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5jl9WC2gAoMDYwZjQ5ZTE0MzhkMzk3YWQxZDgwNzhhNzdhZWJhZDg4ZTMzZDAwOQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/31991/commits/060f49e1438d397ad1d8078a77aebad88e33d009"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 31782,
                "url": "https://github.com/spring-projects/spring-framework/issues/31782",
                "title": "Provide `RestClient` example in HTTP Interface Exception Handling section of reference docs",
                "bodyHTML": "\n<h2 dir=\"auto\"><strong>Affects:</strong>  6.1.1</h2>\n\n<p dir=\"auto\">In the <a href=\"https://docs.spring.io/spring-framework/reference/integration/rest-clients.html#rest-http-interface-exceptions\" rel=\"nofollow\">exception handling</a> section, I had expected to see an example using the newly added <code class=\"notranslate\">RestClient</code>:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"RestClient restClient = RestClient.builder()\n    .defaultStatusHandler(HttpStatusCode::isError, (req, res) -&gt; ...)\n    .build();\"><pre class=\"notranslate\"><span class=\"pl-smi\">RestClient</span> <span class=\"pl-s1\">restClient</span> = <span class=\"pl-smi\">RestClient</span>.<span class=\"pl-en\">builder</span>()\n    .<span class=\"pl-en\">defaultStatusHandler</span>(<span class=\"pl-smi\">HttpStatusCode</span>::<span class=\"pl-s1\">isError</span>, (<span class=\"pl-s1\">req</span>, <span class=\"pl-s1\">res</span>) -&gt; ...)\n    .<span class=\"pl-en\">build</span>();</pre></div>\n<p dir=\"auto\">Or maybe even a small callout that the same setup/arrangement exists for <code class=\"notranslate\">RestClient</code>.</p>\n<p dir=\"auto\">The introduction section before it gives example for each client as well:</p>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/6423628/288799142-55a241f8-c394-4855-a96e-d09777495a0b.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDQ5NzMsIm5iZiI6MTcxNDk0NDY3MywicGF0aCI6Ii82NDIzNjI4LzI4ODc5OTE0Mi01NWEyNDFmOC1jMzk0LTQ4NTUtYTk2ZS1kMDk3Nzc0OTVhMGIucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMjEzMTEzWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NzBhZTA1MGVlZmM4MzljYzJiNmJkZDkzYjBmZWFlMjhmYjBjODM4YjMzZGQ3MDhhNTg4N2RiZDM5NzVjZTRjMSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.-yL8DhnG0gomi6nN0NxiFYpZyuMlMnTGhJNqCmwROv8\"><img width=\"402\" alt=\"image\" src=\"https://private-user-images.githubusercontent.com/6423628/288799142-55a241f8-c394-4855-a96e-d09777495a0b.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDQ5NzMsIm5iZiI6MTcxNDk0NDY3MywicGF0aCI6Ii82NDIzNjI4LzI4ODc5OTE0Mi01NWEyNDFmOC1jMzk0LTQ4NTUtYTk2ZS1kMDk3Nzc0OTVhMGIucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDUwNSUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA1MDVUMjEzMTEzWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NzBhZTA1MGVlZmM4MzljYzJiNmJkZDkzYjBmZWFlMjhmYjBjODM4YjMzZGQ3MDhhNTg4N2RiZDM5NzVjZTRjMSZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.-yL8DhnG0gomi6nN0NxiFYpZyuMlMnTGhJNqCmwROv8\" style=\"max-width: 100%;\"></a>",
                "resourcePath": "/spring-projects/spring-framework/issues/31782",
                "createdAt": "2023-12-07T15:02:49Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: documentation"
                      }
                    },
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix `DefaultDataBuffer#getNativeBuffer()` to set correct limit",
        "url": "https://github.com/spring-projects/spring-framework/pull/32009",
        "resourcePath": "/spring-projects/spring-framework/pull/32009",
        "createdAt": "2024-01-10T17:24:14Z",
        "number": 32009,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/core/io/buffer/DefaultDataBuffer.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-core/src/test/java/org/springframework/core/io/buffer/DefaultDataBufferTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5jtbPD2gAoZDM1NzA4NTIzN2M5MWUxNTExZWQ0NGE2ZjE5NDA0YTA4NDU0ZDI0OQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/32009/commits/d357085237c91e1511ed44a6f19404a08454d249"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30967,
                "url": "https://github.com/spring-projects/spring-framework/issues/30967",
                "title": "The method getNativeBuffer() in DefaultDataBuffer returns misconfigured ByteBuffer",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong> 6.0.11</p>\n<hr>\n<p dir=\"auto\">The class <code class=\"notranslate\">DefaultDataBuffer</code> has method <code class=\"notranslate\">getNativeBuffer</code> with follow implementation:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\tpublic ByteBuffer getNativeBuffer() {\n\t\tthis.byteBuffer.position(this.readPosition);\n\t\tthis.byteBuffer.limit(readableByteCount());\n\t\treturn this.byteBuffer;\n\t}\n\n        @Override\n\tpublic int readableByteCount() {\n\t\treturn this.writePosition - this.readPosition;\n\t}\"><pre class=\"notranslate\">\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">ByteBuffer</span> <span class=\"pl-s1\">getNativeBuffer</span>() {\n\t\t<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">byteBuffer</span>.<span class=\"pl-en\">position</span>(<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">readPosition</span>);\n\t\t<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">byteBuffer</span>.<span class=\"pl-en\">limit</span>(<span class=\"pl-en\">readableByteCount</span>());\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">byteBuffer</span>;\n\t}\n\n        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">int</span> <span class=\"pl-s1\">readableByteCount</span>() {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">writePosition</span> - <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">readPosition</span>;\n\t}</pre></div>\n<p dir=\"auto\">The limit of the byte buffer to return should be set to the <code class=\"notranslate\">this.writePosition</code>, because if the condition <code class=\"notranslate\">(this.writePosition - this.readPosition) &lt;= this.readPosition</code> is satisfied, the limit of the returned byte buffer will be equal to its current position, so no single byte could be read from this buffer, even if the condition <code class=\"notranslate\">this.writePosition &gt; this.readPosition</code> is satisfied. So how it should be:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\tpublic ByteBuffer getNativeBuffer() {\n\t\treturn this.byteBuffer.limit(this.writePosition).position(this.readPosition);\n\t}\"><pre class=\"notranslate\">\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">ByteBuffer</span> <span class=\"pl-s1\">getNativeBuffer</span>() {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">byteBuffer</span>.<span class=\"pl-en\">limit</span>(<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">writePosition</span>).<span class=\"pl-en\">position</span>(<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">readPosition</span>);\n\t}</pre></div>",
                "resourcePath": "/spring-projects/spring-framework/issues/30967",
                "createdAt": "2023-07-31T11:37:01Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: bug"
                      }
                    },
                    {
                      "node": {
                        "name": "in: core"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add invokeDefaultMethod utils for JDK dynamic proxy created by Spring AOP",
        "url": "https://github.com/spring-projects/spring-framework/pull/32018",
        "resourcePath": "/spring-projects/spring-framework/pull/32018",
        "createdAt": "2024-01-12T14:54:56Z",
        "number": 32018,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-aop/src/main/java/org/springframework/aop/framework/ReflectiveMethodInvocationUtils.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-aop/src/test/java/org/springframework/aop/framework/ReflectiveMethodInvocationUtilsTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-messaging/src/main/java/org/springframework/messaging/rsocket/service/RSocketServiceProxyFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/service/invoker/HttpServiceProxyFactory.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5j71vw2gAoM2RiNzYyNzMzZDAwOTczNDk4MDMxNDIwOTM3MThhMjBmYjM4NmQzZg",
                "url": "https://github.com/spring-projects/spring-framework/pull/32018/commits/3db762733d0097349803142093718a20fb386d3f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 28495,
                "url": "https://github.com/spring-projects/spring-framework/issues/28495",
                "title": "Invoke default methods in dynamic proxies automatically",
                "bodyHTML": "<h2 dir=\"auto\">Overview</h2>\n<p dir=\"auto\">See <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1242511019\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/28491\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/28491/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/28491\">#28491</a> for background information.</p>\n<p dir=\"auto\">In JDK dynamic proxies created by Spring AOP, we could potentially introduce support for automatically invoking default methods (or make it easier via a utility).</p>\n<h2 dir=\"auto\">Available Java APIs</h2>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">java.lang.reflect.Method.isDefault()</code></li>\n<li><code class=\"notranslate\">java.lang.reflect.InvocationHandler.invokeDefault(Object, Method, Object...)</code></li>\n</ul>",
                "resourcePath": "/spring-projects/spring-framework/issues/28495",
                "createdAt": "2022-05-20T11:18:19Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix `RestClient` to use defaultRequest on `RestClient.Builder`",
        "url": "https://github.com/spring-projects/spring-framework/pull/32034",
        "resourcePath": "/spring-projects/spring-framework/pull/32034",
        "createdAt": "2024-01-15T16:57:52Z",
        "number": 32034,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/client/DefaultRestClient.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/client/DefaultRestClientBuilder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/java/org/springframework/web/client/RestClientIntegrationTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5kHGEd2gAoNzBkM2NjMzVlMzQ3NDczZTNkMDFmOGI3NWIwMWM3MDE4NDZjNDEwYg",
                "url": "https://github.com/spring-projects/spring-framework/pull/32034/commits/70d3cc35e347473e3d01f8b75b01c701846c410b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 32028,
                "url": "https://github.com/spring-projects/spring-framework/issues/32028",
                "title": "`DefaultRestClientBuilder.defaultRequest(...)` doesn't do anything",
                "bodyHTML": "<p dir=\"auto\"><code class=\"notranslate\">DefaultRestClientBuilder.defaultClient(Consumer&lt;RestClient.RequestHeadersSpec&lt;?&gt;&gt;)</code> can be used to set a property, but that property is never actually used when building the <code class=\"notranslate\">RestClient</code>.</p>\n<p dir=\"auto\">Is this related to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2000996245\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/31625\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/31625/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/31625\">#31625</a>?</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/32028",
                "createdAt": "2024-01-14T19:19:54Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: bug"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow for AbstractUrlHandlerMapping to add/remove handlers at runtime",
        "url": "https://github.com/spring-projects/spring-framework/pull/32064",
        "resourcePath": "/spring-projects/spring-framework/pull/32064",
        "createdAt": "2024-01-19T14:43:27Z",
        "number": 32064,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webmvc/src/main/java/org/springframework/web/servlet/handler/AbstractUrlHandlerMapping.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5kjkuB2gAoN2MxM2RiMGZiOGUyYTU2YzA1OTQwNWZkMGY1MzkyODViMDY4NTc1ZQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/32064/commits/7c13db0fb8e2a56c059405fd0f539285b068575e"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 26798,
                "url": "https://github.com/spring-projects/spring-framework/issues/26798",
                "title": "Allow for AbstractUrlHandlerMapping to add/remove handlers at runtime",
                "bodyHTML": "<p dir=\"auto\">The requirements is to be able to add and remove mappings for urls at runtime.</p>\n<p dir=\"auto\">It is possible right now with the <code class=\"notranslate\">AbstractHandlerMethodMapping</code> and its <code class=\"notranslate\">registerMapping(T mapping, Object handler, Method method)</code> and <code class=\"notranslate\">unregisterMapping(T mapping)</code> API.</p>\n<p dir=\"auto\">It would be great if <code class=\"notranslate\">AbstractUrlHandlerMapping</code> would make its <code class=\"notranslate\">protected void registerHandler(String urlPath, Object handler) throws BeansException, IllegalStateException {</code> as <code class=\"notranslate\">public</code> and also would introduce an <code class=\"notranslate\">unregisterHalder(String urlPath)</code>.</p>\n<p dir=\"auto\">Related Spring Integration issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"849233743\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-integration/issues/3533\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-integration/issues/3533/hovercard\" href=\"https://github.com/spring-projects/spring-integration/issues/3533\">spring-projects/spring-integration#3533</a>.</p>\n<p dir=\"auto\">Right I'm enforced to copy/paste a lot from Spring MVC to have a backward compatibility and implement a requested feature.</p>\n<p dir=\"auto\">Thanks</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/26798",
                "createdAt": "2021-04-13T14:18:17Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add support for JSON streams to Kotlin Serialization",
        "url": "https://github.com/spring-projects/spring-framework/pull/32074",
        "resourcePath": "/spring-projects/spring-framework/pull/32074",
        "createdAt": "2024-01-20T13:38:56Z",
        "number": 32074,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/http/codec/KotlinSerializationStringDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/http/codec/KotlinSerializationStringEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/http/codec/json/KotlinSerializationJsonDecoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/http/codec/json/KotlinSerializationJsonEncoder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/kotlin/org/springframework/http/codec/json/CustomKotlinSerializationJsonDecoderTests.kt"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/kotlin/org/springframework/http/codec/json/KotlinSerializationJsonDecoderTests.kt"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/kotlin/org/springframework/http/codec/json/KotlinSerializationJsonEncoderTests.kt"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5koDSB2gAoNDQ0YjYwNWE1ZWY1OWQxODVhNTI0MzY4NTAzZjlkZGVhMjFjYzdlMA",
                "url": "https://github.com/spring-projects/spring-framework/pull/32074/commits/444b605a5ef59d185a524368503f9ddea21cc7e0"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 30398,
                "url": "https://github.com/spring-projects/spring-framework/issues/30398",
                "title": "Add streaming support to Kotlin serialization codecs",
                "bodyHTML": "\n<p dir=\"auto\"><strong>Affects:</strong>  3.0.6</p>\n<hr>\n<p dir=\"auto\">I want to make a REST API using Spring and Kotlin.</p>\n<div class=\"highlight highlight-source-kotlin notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"plugins {\n    id(&quot;org.springframework.boot&quot;) version &quot;3.0.6&quot;\n    id(&quot;io.spring.dependency-management&quot;) version &quot;1.1.0&quot;\n    kotlin(&quot;jvm&quot;) version &quot;1.8.21&quot;\n    kotlin(&quot;plugin.serialization&quot;) version &quot;1.8.21&quot;\n    kotlin(&quot;plugin.spring&quot;) version &quot;1.8.21&quot;\n}\"><pre class=\"notranslate\">plugins {\n    id(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>org.springframework.boot<span class=\"pl-pds\">\"</span></span>) version <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>3.0.6<span class=\"pl-pds\">\"</span></span>\n    id(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>io.spring.dependency-management<span class=\"pl-pds\">\"</span></span>) version <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.1.0<span class=\"pl-pds\">\"</span></span>\n    kotlin(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>jvm<span class=\"pl-pds\">\"</span></span>) version <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.8.21<span class=\"pl-pds\">\"</span></span>\n    kotlin(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>plugin.serialization<span class=\"pl-pds\">\"</span></span>) version <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.8.21<span class=\"pl-pds\">\"</span></span>\n    kotlin(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>plugin.spring<span class=\"pl-pds\">\"</span></span>) version <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.8.21<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<p dir=\"auto\">I have this data class, I want to serialize it using <a href=\"https://github.com/Kotlin/kotlinx.serialization/blob/master/docs/json.md\">Kotlin serialization</a></p>\n<div class=\"highlight highlight-source-kotlin notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Serializable\ndata class Account(\n    var name: String,\n    var email: String,\n    var role: String,\n    @SerialName(&quot;is_active&quot;)\n    var active: Boolean,\n    var id: String,\n    @SerialName(&quot;created_at&quot;)\n    @Serializable(with = InstantSerializer::class)\n    var createdAt: Instant = Instant.EPOCH\n)\"><pre class=\"notranslate\">@Serializable\n<span class=\"pl-k\">data class</span> <span class=\"pl-en\">Account</span>(\n    <span class=\"pl-k\">var</span> <span class=\"pl-smi\">name</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">String</span>,\n    <span class=\"pl-k\">var</span> <span class=\"pl-smi\">email</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">String</span>,\n    <span class=\"pl-k\">var</span> <span class=\"pl-smi\">role</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">String</span>,\n    @SerialName(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>is_active<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-k\">var</span> <span class=\"pl-smi\">active</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">Boolean</span>,\n    <span class=\"pl-k\">var</span> <span class=\"pl-smi\">id</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">String</span>,\n    @SerialName(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>created_at<span class=\"pl-pds\">\"</span></span>)\n    @Serializable(with <span class=\"pl-k\">=</span> <span class=\"pl-en\">InstantSerializer</span>::<span class=\"pl-c1\">class</span>)\n    <span class=\"pl-k\">var</span> <span class=\"pl-smi\">createdAt</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Instant</span> = <span class=\"pl-en\">Instant</span>.<span class=\"pl-en\">EPOCH</span>\n)</pre></div>\n<p dir=\"auto\">This is  my controller that returns an <code class=\"notranslate\">application/json</code> content :</p>\n<div class=\"highlight highlight-source-kotlin notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@RestController\n@RequestMapping(&quot;/accountExamples&quot;)\nclass AccountExampleController {\n\n    @GetMapping\n    fun getAll(): Flow&lt;Account&gt; = List(2) {\n        Account(\n            name = &quot;name $it&quot;,\n            email = &quot;email $it&quot;,\n            role = &quot;role $it&quot;,\n            active = true,\n            id = &quot;$it&quot;,\n            createdAt = Instant.now()\n        )\n    }.asFlow()\n\n}\"><pre class=\"notranslate\">@RestController\n@RequestMapping(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/accountExamples<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">AccountExampleController</span> {\n\n    @GetMapping\n    <span class=\"pl-k\">fun</span> <span class=\"pl-en\">getAll</span>(): <span class=\"pl-en\">Flow</span>&lt;<span class=\"pl-en\">Account</span>&gt; <span class=\"pl-k\">=</span> <span class=\"pl-c1\">List</span>(<span class=\"pl-c1\">2</span>) {\n        <span class=\"pl-en\">Account</span>(\n            name <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name <span class=\"pl-e\">$it</span><span class=\"pl-pds\">\"</span></span>,\n            email <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>email <span class=\"pl-e\">$it</span><span class=\"pl-pds\">\"</span></span>,\n            role <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>role <span class=\"pl-e\">$it</span><span class=\"pl-pds\">\"</span></span>,\n            active <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>,\n            id <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-e\">$it</span><span class=\"pl-pds\">\"</span></span>,\n            createdAt <span class=\"pl-k\">=</span> <span class=\"pl-en\">Instant</span>.now()\n        )\n    }.asFlow()\n\n}</pre></div>\n<p dir=\"auto\">When I call it, everything is correct :</p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"[\n    {\n        &quot;name&quot;: &quot;name 0&quot;,\n        &quot;email&quot;: &quot;email 0&quot;,\n        &quot;role&quot;: &quot;role 0&quot;,\n        &quot;is_active&quot;: true,\n        &quot;id&quot;: &quot;0&quot;,\n        &quot;created_at&quot;: &quot;2023-04-29T09:34:03.103Z&quot;\n    },\n    {\n        &quot;name&quot;: &quot;name 1&quot;,\n        &quot;email&quot;: &quot;email 1&quot;,\n        &quot;role&quot;: &quot;role 1&quot;,\n        &quot;is_active&quot;: true,\n        &quot;id&quot;: &quot;1&quot;,\n        &quot;created_at&quot;: &quot;2023-04-29T09:34:03.103Z&quot;\n    }\n]\"><pre class=\"notranslate\">[\n    {\n        <span class=\"pl-ent\">\"name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name 0<span class=\"pl-pds\">\"</span></span>,\n        <span class=\"pl-ent\">\"email\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>email 0<span class=\"pl-pds\">\"</span></span>,\n        <span class=\"pl-ent\">\"role\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>role 0<span class=\"pl-pds\">\"</span></span>,\n        <span class=\"pl-ent\">\"is_active\"</span>: <span class=\"pl-c1\">true</span>,\n        <span class=\"pl-ent\">\"id\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0<span class=\"pl-pds\">\"</span></span>,\n        <span class=\"pl-ent\">\"created_at\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2023-04-29T09:34:03.103Z<span class=\"pl-pds\">\"</span></span>\n    },\n    {\n        <span class=\"pl-ent\">\"name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name 1<span class=\"pl-pds\">\"</span></span>,\n        <span class=\"pl-ent\">\"email\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>email 1<span class=\"pl-pds\">\"</span></span>,\n        <span class=\"pl-ent\">\"role\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>role 1<span class=\"pl-pds\">\"</span></span>,\n        <span class=\"pl-ent\">\"is_active\"</span>: <span class=\"pl-c1\">true</span>,\n        <span class=\"pl-ent\">\"id\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1<span class=\"pl-pds\">\"</span></span>,\n        <span class=\"pl-ent\">\"created_at\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2023-04-29T09:34:03.103Z<span class=\"pl-pds\">\"</span></span>\n    }\n]</pre></div>\n<p dir=\"auto\">However, when I want to produce an <code class=\"notranslate\">application/x-ndjson</code> result using  :</p>\n<div class=\"highlight highlight-source-kotlin notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@RestController\n@RequestMapping(&quot;/accountExamples&quot;)\nclass AccountExampleController {\n\n    @GetMapping(produces = [APPLICATION_NDJSON_VALUE])\n    fun getAll(): Flow&lt;Account&gt; = List(2) {\n        Account(\n            name = &quot;name $it&quot;,\n            email = &quot;email $it&quot;,\n            role = &quot;role $it&quot;,\n            active = true,\n            id = &quot;$it&quot;,\n            createdAt = Instant.now()\n        )\n    }.asFlow()\n\n}\"><pre class=\"notranslate\">@RestController\n@RequestMapping(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/accountExamples<span class=\"pl-pds\">\"</span></span>)\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">AccountExampleController</span> {\n\n    @GetMapping(produces <span class=\"pl-k\">=</span> [<span class=\"pl-en\">APPLICATION_NDJSON_VALUE</span>])\n    <span class=\"pl-k\">fun</span> <span class=\"pl-en\">getAll</span>(): <span class=\"pl-en\">Flow</span>&lt;<span class=\"pl-en\">Account</span>&gt; <span class=\"pl-k\">=</span> <span class=\"pl-c1\">List</span>(<span class=\"pl-c1\">2</span>) {\n        <span class=\"pl-en\">Account</span>(\n            name <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name <span class=\"pl-e\">$it</span><span class=\"pl-pds\">\"</span></span>,\n            email <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>email <span class=\"pl-e\">$it</span><span class=\"pl-pds\">\"</span></span>,\n            role <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>role <span class=\"pl-e\">$it</span><span class=\"pl-pds\">\"</span></span>,\n            active <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>,\n            id <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-e\">$it</span><span class=\"pl-pds\">\"</span></span>,\n            createdAt <span class=\"pl-k\">=</span> <span class=\"pl-en\">Instant</span>.now()\n        )\n    }.asFlow()\n\n}</pre></div>\n<p dir=\"auto\">This  is the json result :</p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n    &quot;name&quot;: &quot;name 0&quot;,\n    &quot;email&quot;: &quot;email 0&quot;,\n    &quot;role&quot;: &quot;role 0&quot;,\n    &quot;active&quot;: true,\n    &quot;id&quot;: &quot;0&quot;,\n    &quot;createdAt&quot;: &quot;2023-04-29T09:35:12.328055700Z&quot;\n}\n{\n    &quot;name&quot;: &quot;name 1&quot;,\n    &quot;email&quot;: &quot;email 1&quot;,\n    &quot;role&quot;: &quot;role 1&quot;,\n    &quot;active&quot;: true,\n    &quot;id&quot;: &quot;1&quot;,\n    &quot;createdAt&quot;: &quot;2023-04-29T09:35:12.328055700Z&quot;\n}\"><pre class=\"notranslate\">{\n    <span class=\"pl-ent\">\"name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name 0<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"email\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>email 0<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"role\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>role 0<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"active\"</span>: <span class=\"pl-c1\">true</span>,\n    <span class=\"pl-ent\">\"id\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"createdAt\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2023-04-29T09:35:12.328055700Z<span class=\"pl-pds\">\"</span></span>\n}\n{\n    <span class=\"pl-ent\">\"name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name 1<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"email\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>email 1<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"role\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>role 1<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"active\"</span>: <span class=\"pl-c1\">true</span>,\n    <span class=\"pl-ent\">\"id\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"createdAt\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2023-04-29T09:35:12.328055700Z<span class=\"pl-pds\">\"</span></span>\n}</pre></div>\n<p dir=\"auto\">As you can see, <a href=\"https://github.com/Kotlin/kotlinx.serialization/blob/master/docs/json.md\">Kotlin serialization</a> is not used to serialize objects when I want to produce <code class=\"notranslate\">application/x-ndjson</code>. Instead of it, Jackson is used.</p>\n<p dir=\"auto\">In this case, if we set the <code class=\"notranslate\">JsonProperty</code> annotation on a field, the final json will be modified</p>\n<div class=\"highlight highlight-source-kotlin notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@Serializable\ndata class Account(\n    var name: String,\n    var email: String,\n    var role: String,\n    @SerialName(&quot;is_active&quot;)\n    var active: Boolean,\n    var id: String,\n    @SerialName(&quot;created_at&quot;)\n    @JsonProperty(&quot;test&quot;) // Jackson annotation here\n    @Serializable(with = InstantSerializer::class)\n    var createdAt: Instant = Instant.EPOCH\n)\"><pre class=\"notranslate\">@Serializable\n<span class=\"pl-k\">data class</span> <span class=\"pl-en\">Account</span>(\n    <span class=\"pl-k\">var</span> <span class=\"pl-smi\">name</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">String</span>,\n    <span class=\"pl-k\">var</span> <span class=\"pl-smi\">email</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">String</span>,\n    <span class=\"pl-k\">var</span> <span class=\"pl-smi\">role</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">String</span>,\n    @SerialName(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>is_active<span class=\"pl-pds\">\"</span></span>)\n    <span class=\"pl-k\">var</span> <span class=\"pl-smi\">active</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">Boolean</span>,\n    <span class=\"pl-k\">var</span> <span class=\"pl-smi\">id</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">String</span>,\n    @SerialName(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>created_at<span class=\"pl-pds\">\"</span></span>)\n    @JsonProperty(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-c\"><span class=\"pl-c\">//</span> Jackson annotation here</span>\n    @Serializable(with <span class=\"pl-k\">=</span> <span class=\"pl-en\">InstantSerializer</span>::<span class=\"pl-c1\">class</span>)\n    <span class=\"pl-k\">var</span> <span class=\"pl-smi\">createdAt</span><span class=\"pl-k\">:</span> <span class=\"pl-en\">Instant</span> = <span class=\"pl-en\">Instant</span>.<span class=\"pl-en\">EPOCH</span>\n)</pre></div>\n<p dir=\"auto\">Result :</p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"{\n    &quot;test&quot;: &quot;2023-04-29T09:38:31.009048100Z&quot;,\n    &quot;name&quot;: &quot;name 0&quot;,\n    &quot;email&quot;: &quot;email 0&quot;,\n    &quot;role&quot;: &quot;role 0&quot;,\n    &quot;active&quot;: true,\n    &quot;id&quot;: &quot;0&quot;\n}\n{\n    &quot;test&quot;: &quot;2023-04-29T09:38:31.009048100Z&quot;,\n    &quot;name&quot;: &quot;name 1&quot;,\n    &quot;email&quot;: &quot;email 1&quot;,\n    &quot;role&quot;: &quot;role 1&quot;,\n    &quot;active&quot;: true,\n    &quot;id&quot;: &quot;1&quot;\n}\"><pre class=\"notranslate\">{\n    <span class=\"pl-ent\">\"test\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2023-04-29T09:38:31.009048100Z<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name 0<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"email\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>email 0<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"role\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>role 0<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"active\"</span>: <span class=\"pl-c1\">true</span>,\n    <span class=\"pl-ent\">\"id\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>0<span class=\"pl-pds\">\"</span></span>\n}\n{\n    <span class=\"pl-ent\">\"test\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>2023-04-29T09:38:31.009048100Z<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>name 1<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"email\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>email 1<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"role\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>role 1<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"active\"</span>: <span class=\"pl-c1\">true</span>,\n    <span class=\"pl-ent\">\"id\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1<span class=\"pl-pds\">\"</span></span>\n}</pre></div>",
                "resourcePath": "/spring-projects/spring-framework/issues/30398",
                "createdAt": "2023-04-29T09:43:09Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    },
                    {
                      "node": {
                        "name": "theme: kotlin"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Cache validationGroups for subsequent requests",
        "url": "https://github.com/spring-projects/spring-framework/pull/32078",
        "resourcePath": "/spring-projects/spring-framework/pull/32078",
        "createdAt": "2024-01-22T02:59:04Z",
        "number": 32078,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/InvocableHandlerMethod.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5kq-Zb2gAoMzE2MGZlN2JkNTY1MTM2MjAyYmI5ZGMyOTUwNTg2Mzg5Y2E4OTdiNg",
                "url": "https://github.com/spring-projects/spring-framework/pull/32078/commits/3160fe7bd565136202bb9dc2950586389ca897b6"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 32068,
                "url": "https://github.com/spring-projects/spring-framework/issues/32068",
                "title": "Avoid reflecting to obtain `validationGroups`  every time the call is made",
                "bodyHTML": "<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/spring-projects/spring-framework/blob/1a52c56bd42c1a9ba8cc8f8849d5f5cb742a97e5/spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java#L241-L245\">spring-framework/spring-web/src/main/java/org/springframework/web/method/support/InvocableHandlerMethod.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 241 to 245\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/spring-projects/spring-framework/commit/1a52c56bd42c1a9ba8cc8f8849d5f5cb742a97e5\">1a52c56</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L241\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"241\"></td>\n          <td id=\"LC241\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">private</span> <span class=\"pl-smi\">Class</span>&lt;?&gt;[] <span class=\"pl-en\">getValidationGroups</span>() { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L242\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"242\"></td>\n          <td id=\"LC242\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-k\">return</span> ((<span class=\"pl-en\">shouldValidateArguments</span>() || <span class=\"pl-en\">shouldValidateReturnValue</span>()) &amp;&amp; <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">methodValidator</span> != <span class=\"pl-c1\">null</span> ? </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L243\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"243\"></td>\n          <td id=\"LC243\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t\t<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">methodValidator</span>.<span class=\"pl-en\">determineValidationGroups</span>(<span class=\"pl-en\">getBean</span>(), <span class=\"pl-en\">getBridgedMethod</span>()) : <span class=\"pl-c1\">EMPTY_GROUPS</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L244\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"244\"></td>\n          <td id=\"LC244\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L245\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"245\"></td>\n          <td id=\"LC245\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">  </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">can call <code class=\"notranslate\">getValidationGroups()</code> in the <code class=\"notranslate\">InvocableHandlerMethod</code> construction method, and take <code class=\"notranslate\">validationGroups</code> returned by <code class=\"notranslate\">getValidationGroups()</code> method as a member variable. Avoid reflecting to obtain <code class=\"notranslate\">validationGroups</code>  every time the call is made</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/32068",
                "createdAt": "2024-01-20T10:38:00Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Fix getMostSpecificMethod to return original method if target class is not in hierarchy",
        "url": "https://github.com/spring-projects/spring-framework/pull/32089",
        "resourcePath": "/spring-projects/spring-framework/pull/32089",
        "createdAt": "2024-01-23T05:35:35Z",
        "number": 32089,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/core/BridgeMethodResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/main/java/org/springframework/util/ClassUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/test/java/org/springframework/core/BridgeMethodResolverTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-core/src/test/java/org/springframework/util/ClassUtilsTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5kyzxI2gAoMDY5YjZjYTU3ZGU5ZTM2YjAyN2YzYWMzZTkyYWI3MzQ4ZDU1MWVhNw",
                "url": "https://github.com/spring-projects/spring-framework/pull/32089/commits/069b6ca57de9e36b027f3ac3e92ab7348d551ea7"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 32087,
                "url": "https://github.com/spring-projects/spring-framework/issues/32087",
                "title": "Parameter based cache keys on repository methods can't resolve after 6.1.2->6.1.3",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong> 6.1.3</p>\n<p dir=\"auto\">A change was made in 6.1.3 to the AopUtils.getMostSpecificMethod and BridgeMethodResolver.getMostSpecificMethod that impacts how cache keys get resolved on Spring Data repositories.</p>\n<p dir=\"auto\">In my setup, I have a repository which redefines the save() method, so that I can put a @CachePut annotation on top. The key for this particular cache is defined using the method's parameter.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Repository\npublic interface ProfileRepository extends JpaRepository&lt;Profile, Integer&gt; {\n\t\n\t@CachePut(value=&quot;ProfileRepoByCode&quot;, key=&quot;#profile.getCode()&quot;)\n\tProfile save(Profile profile);\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@Repository\npublic interface ProfileRepository extends JpaRepository&lt;Profile, Integer&gt; {\n\t\n\t@CachePut(value=\"ProfileRepoByCode\", key=\"#profile.getCode()\")\n\tProfile save(Profile profile);\n}\n</code></pre></div>\n<p dir=\"auto\">In 6.1.2, when CacheOperationMetadata.targetMethod was set, the method reference would be to the custom repository's method. In 6.1.3, this now points to the SimpleJpaRepository.save method. SimpleJpaRepository.save and I use different parameter names for the object being saved, which results in MethodBasedEvaluationContext.lazyLoadArguments no longer being able to find a match when evaluating the SpEL expression.</p>\n<p dir=\"auto\">The attached code works when Spring Boot 3.2.1 (Framework 6.1.2) is used, but fails when upgraded to Spring Boot 3.2.2 (Framework 6.1.3).</p>\n<p dir=\"auto\"><a href=\"https://github.com/spring-projects/spring-framework/files/14017775/cacheBridgeMethod-1.zip\">cacheBridgeMethod-1.zip</a><br>\n<a href=\"https://github.com/spring-projects/spring-framework/files/14017850/Framework_6_1_2.txt\">Framework_6_1_2.txt</a><br>\n<a href=\"https://github.com/spring-projects/spring-framework/files/14017851/Framework_6_1_3.txt\">Framework_6_1_3.txt</a></p>",
                "resourcePath": "/spring-projects/spring-framework/issues/32087",
                "createdAt": "2024-01-23T03:14:53Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "type: regression"
                      }
                    },
                    {
                      "node": {
                        "name": "in: core"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Implement Eclipse Jetty core HTTP handler adapter",
        "url": "https://github.com/spring-projects/spring-framework/pull/32097",
        "resourcePath": "/spring-projects/spring-framework/pull/32097",
        "createdAt": "2024-01-24T06:08:57Z",
        "number": 32097,
        "mergeCommit": null,
        "potentialMergeCommit": {
          "oid": "ee616078cb541b828f5a97eb4cdc10049dce0097",
          "message": "Merge e9cb9a99d3900e83d7147a5eb73247f4634f211a into bdc4ecd599fd333d310ead2a1cd4bf98bd13963c",
          "commitUrl": "https://github.com/spring-projects/spring-framework/commit/ee616078cb541b828f5a97eb4cdc10049dce0097",
          "parents": {
            "nodes": [
              {
                "oid": "bdc4ecd599fd333d310ead2a1cd4bf98bd13963c",
                "message": "Merge branch '6.1.x'\n\n# Conflicts:\n#\tspring-expression/src/test/java/org/springframework/expression/spel/SpelCompilationCoverageTests.java"
              },
              {
                "oid": "e9cb9a99d3900e83d7147a5eb73247f4634f211a",
                "message": "Merge pull request #2 from webtide/JettyCoreHttpHandlerAdapter-WebSocket\n\nUpdate spring Jetty websocket usage"
              }
            ]
          }
        },
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-webflux/src/main/java/org/springframework/web/reactive/socket/server/upgrade/JettyCoreRequestUpgradeStrategy.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/main/java/org/springframework/web/reactive/socket/server/upgrade/JettyRequestUpgradeStrategy.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/test/java/org/springframework/web/reactive/function/MultipartRouterFunctionIntegrationTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/test/java/org/springframework/web/reactive/result/method/annotation/ContextPathIntegrationTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/test/java/org/springframework/web/reactive/result/method/annotation/MultipartWebClientIntegrationTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/test/java/org/springframework/web/reactive/result/method/annotation/SseIntegrationTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/test/java/org/springframework/web/reactive/result/view/ZeroDemandResponse.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/test/java/org/springframework/web/reactive/socket/AbstractReactiveWebSocketIntegrationTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-websocket/src/main/java/org/springframework/web/socket/adapter/jetty/JettyWebSocketHandlerAdapter.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-websocket/src/main/java/org/springframework/web/socket/server/jetty/JettyRequestUpgradeStrategy.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5k6UgO2gAoZTljYjlhOTlkMzkwMGU4M2Q3MTQ3YTVlYjczMjQ3ZjQ2MzRmMjExYQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/32097/commits/e9cb9a99d3900e83d7147a5eb73247f4634f211a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 32035,
                "url": "https://github.com/spring-projects/spring-framework/issues/32035",
                "title": "Add an Eclipse Jetty Core HttpHandlerAdaptor",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong>  &gt;= 6.1.4</p>\n<p dir=\"auto\">The current Jetty integration uses the Servlet abstraction, which is primarily blocking and has additional buffering layers.</p>\n<p dir=\"auto\">The jetty core server (added in jetty-12) has a reactive style asynchronous API very compatible with <code class=\"notranslate\">Flux&lt;DataBuffer&gt;</code> style programming.  A simpler and more efficient integration can thus be created by avoiding Servlets and going direct to jetty core.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/32035",
                "createdAt": "2024-01-16T06:01:38Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Skip overriding primary bean definition with non-primary one",
        "url": "https://github.com/spring-projects/spring-framework/pull/32126",
        "resourcePath": "/spring-projects/spring-framework/pull/32126",
        "createdAt": "2024-01-26T08:41:06Z",
        "number": 32126,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-beans/src/main/java/org/springframework/beans/factory/support/DefaultListableBeanFactory.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-beans/src/test/java/org/springframework/beans/factory/DefaultListableBeanFactoryTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5lI1Vh2gAoZjA3MDc4NjRiOGNlZDU4ODgxMmQ4ZjhjZjhhMTk3MGVkNjczZjdkNA",
                "url": "https://github.com/spring-projects/spring-framework/pull/32126/commits/f0707864b8ced588812d8f8cf8a1970ed673f7d4"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 32125,
                "url": "https://github.com/spring-projects/spring-framework/issues/32125",
                "title": "Skip overriding primary bean definition with non-primary one",
                "bodyHTML": "<p dir=\"auto\">Here is my case, I defined a default bean in xml configuration, sometimes I want override that bean with another implementation via <code class=\"notranslate\">@Component</code> and  <code class=\"notranslate\">@Primary</code>, it's fine if injection is autowired by type but not name, the ideal solution is pinning the primary bean definition make it cannot be overridden by non-primary one.</p>\n<p dir=\"auto\">Here is test case:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"package test;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.test.context.ContextConfiguration;\nimport org.springframework.test.context.junit.jupiter.SpringJUnitConfig;\n\n@SpringJUnitConfig\n@ContextConfiguration(locations = &quot;ctx.xml&quot;)\npublic class OverrideBeanTests {\n\n\t@Autowired\n\tprivate Service service;\n\n\t@Test\n\tvoid test() {\n\t\tassertThat(service).isInstanceOf(CustomService.class);\n\t}\n\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">package</span> <span class=\"pl-s1\">test</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-k\">static</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">assertj</span>.<span class=\"pl-s1\">core</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">Assertions</span>.<span class=\"pl-s1\">assertThat</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">api</span>.<span class=\"pl-s1\">Test</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">springframework</span>.<span class=\"pl-s1\">beans</span>.<span class=\"pl-s1\">factory</span>.<span class=\"pl-s1\">annotation</span>.<span class=\"pl-s1\">Autowired</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">springframework</span>.<span class=\"pl-s1\">test</span>.<span class=\"pl-s1\">context</span>.<span class=\"pl-s1\">ContextConfiguration</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">springframework</span>.<span class=\"pl-s1\">test</span>.<span class=\"pl-s1\">context</span>.<span class=\"pl-s1\">junit</span>.<span class=\"pl-s1\">jupiter</span>.<span class=\"pl-s1\">SpringJUnitConfig</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">SpringJUnitConfig</span>\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">ContextConfiguration</span>(<span class=\"pl-s1\">locations</span> = <span class=\"pl-s\">\"ctx.xml\"</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">OverrideBeanTests</span> {\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Autowired</span>\n\t<span class=\"pl-k\">private</span> <span class=\"pl-smi\">Service</span> <span class=\"pl-s1\">service</span>;\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n\t<span class=\"pl-smi\">void</span> <span class=\"pl-en\">test</span>() {\n\t\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">service</span>).<span class=\"pl-en\">isInstanceOf</span>(<span class=\"pl-smi\">CustomService</span>.<span class=\"pl-k\">class</span>);\n\t}\n\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"package test;\n\npublic class Service {\n\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">package</span> <span class=\"pl-s1\">test</span>;\n\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">Service</span> {\n\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"package test;\n\nimport org.springframework.context.annotation.Primary;\nimport org.springframework.stereotype.Component;\n\n@Primary\n@Component(&quot;service&quot;)\npublic class CustomService extends Service {\n\n}\n\"><pre class=\"notranslate\"><span class=\"pl-k\">package</span> <span class=\"pl-s1\">test</span>;\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">springframework</span>.<span class=\"pl-s1\">context</span>.<span class=\"pl-s1\">annotation</span>.<span class=\"pl-s1\">Primary</span>;\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">org</span>.<span class=\"pl-s1\">springframework</span>.<span class=\"pl-s1\">stereotype</span>.<span class=\"pl-s1\">Component</span>;\n\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Primary</span>\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Component</span>(<span class=\"pl-s\">\"service\"</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">CustomService</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">Service</span> {\n\n}</pre></div>\n<div class=\"highlight highlight-text-xml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;beans default-autowire=&quot;byName&quot;\n\txmlns=&quot;http://www.springframework.org/schema/beans&quot;\n\txmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n\txmlns:context=&quot;http://www.springframework.org/schema/context&quot;\n\txsi:schemaLocation=&quot;http://www.springframework.org/schema/beans\n\thttps://www.springframework.org/schema/beans/spring-beans.xsd\n\thttp://www.springframework.org/schema/context\n\thttps://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;\n\t&lt;context:component-scan base-package=&quot;test&quot;/&gt;\n\t&lt;bean id=&quot;service&quot; class=&quot;test.Service&quot;/&gt;\n&lt;/beans&gt;\"><pre class=\"notranslate\">&lt;?<span class=\"pl-ent\">xml</span><span class=\"pl-e\"> version</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.0<span class=\"pl-pds\">\"</span></span><span class=\"pl-e\"> encoding</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>UTF-8<span class=\"pl-pds\">\"</span></span>?&gt;\n&lt;<span class=\"pl-ent\">beans</span> <span class=\"pl-e\">default-autowire</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>byName<span class=\"pl-pds\">\"</span></span>\n\txmlns=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.springframework.org/schema/beans<span class=\"pl-pds\">\"</span></span>\n\txmlns:xsi=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.w3.org/2001/XMLSchema-instance<span class=\"pl-pds\">\"</span></span>\n\txmlns:context=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.springframework.org/schema/context<span class=\"pl-pds\">\"</span></span>\n\txsi:schemaLocation=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://www.springframework.org/schema/beans</span>\n<span class=\"pl-s\">\thttps://www.springframework.org/schema/beans/spring-beans.xsd</span>\n<span class=\"pl-s\">\thttp://www.springframework.org/schema/context</span>\n<span class=\"pl-s\">\thttps://www.springframework.org/schema/context/spring-context.xsd<span class=\"pl-pds\">\"</span></span>&gt;\n\t&lt;<span class=\"pl-ent\">context</span><span class=\"pl-ent\">:</span><span class=\"pl-ent\">component-scan</span> <span class=\"pl-e\">base-package</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test<span class=\"pl-pds\">\"</span></span>/&gt;\n\t&lt;<span class=\"pl-ent\">bean</span> <span class=\"pl-e\">id</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>service<span class=\"pl-pds\">\"</span></span> <span class=\"pl-e\">class</span>=<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>test.Service<span class=\"pl-pds\">\"</span></span>/&gt;\n&lt;/<span class=\"pl-ent\">beans</span>&gt;</pre></div>",
                "resourcePath": "/spring-projects/spring-framework/issues/32125",
                "createdAt": "2024-01-26T08:39:52Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "status: declined"
                      }
                    },
                    {
                      "node": {
                        "name": "in: core"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support multiple `@RequestMapping` annotations",
        "url": "https://github.com/spring-projects/spring-framework/pull/32134",
        "resourcePath": "/spring-projects/spring-framework/pull/32134",
        "createdAt": "2024-01-26T12:52:06Z",
        "number": 32134,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMapping.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-web/src/main/java/org/springframework/web/bind/annotation/RequestMappings.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/AbstractHandlerMethodMapping.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerMapping.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/test/java/org/springframework/web/reactive/result/method/HandlerMethodMappingTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/test/java/org/springframework/web/reactive/result/method/RequestMappingInfoHandlerMappingTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/test/java/org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerMappingTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5lKCNd2gAoZThiNzg0ZmE4NDA2ZWFlOGRkYWQ1Mjc1NjYxNWRhYmM5ZWMxZWRlMg",
                "url": "https://github.com/spring-projects/spring-framework/pull/32134/commits/e8b784fa8406eae8ddad52756615dabc9ec1ede2"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 32043,
                "url": "https://github.com/spring-projects/spring-framework/issues/32043",
                "title": "Support multiple @RequestMapping annotations (@GetMapping, etc) on a controller method",
                "bodyHTML": "<p dir=\"auto\">As a follow-up to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2068813509\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/31962\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/31962/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/31962\">#31962</a>, we would like to investigate the feasibility of supporting multiple <code class=\"notranslate\">@RequestMapping</code> annotations on a single handler method.</p>\n<p dir=\"auto\">One idea is to merge attributes from multiple <code class=\"notranslate\">@RequestMapping</code> annotations into a single <code class=\"notranslate\">RequestMappingInfo</code> instance if they only differ by <code class=\"notranslate\">RequestMethod</code>.</p>\n<p dir=\"auto\">Another idea is to create one <code class=\"notranslate\">RequestMappingInfo</code> per <code class=\"notranslate\">@RequestMapping</code> annotation on a handler method and figure out how to rework our infrastructure to support multiple <code class=\"notranslate\">RequestMappingInfo</code> instances for a single handler method.</p>\n<p dir=\"auto\">We should also keep in mind that we may potentially decide to support multiple composed <code class=\"notranslate\">@RequestMapping</code> annotations (e.g., <code class=\"notranslate\">@PostMapping</code> and <code class=\"notranslate\">@PutMapping</code>) on a single method <em>without</em> making <code class=\"notranslate\">@RequestMapping</code> itself a <code class=\"notranslate\">@Repeatable</code> annotation.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/32043",
                "createdAt": "2024-01-16T14:38:02Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: pending-design-work"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support InputStream/Reader as statement parameter",
        "url": "https://github.com/spring-projects/spring-framework/pull/32163",
        "resourcePath": "/spring-projects/spring-framework/pull/32163",
        "createdAt": "2024-01-31T02:33:34Z",
        "number": 32163,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-jdbc/src/main/java/org/springframework/jdbc/core/StatementCreatorUtils.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-jdbc/src/test/java/org/springframework/jdbc/core/StatementCreatorUtilsTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5lhXmu2gAoODI2MWM0ZmIxZTg2YjhiZDEyMmIwOWE0ZmY5ZjhlZTIyM2EwZDg3Zg",
                "url": "https://github.com/spring-projects/spring-framework/pull/32163/commits/8261c4fb1e86b8bd122b09a4ff9f8ee223a0d87f"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 32161,
                "url": "https://github.com/spring-projects/spring-framework/issues/32161",
                "title": "Support binary streams with `JdbcClient`",
                "bodyHTML": "<p dir=\"auto\">In Postgres database, there is a column type <code class=\"notranslate\">bytea</code>.  According to <a href=\"https://jdbc.postgresql.org/documentation/binary-data/\" rel=\"nofollow\">Storing Binary Data</a>, here is the code to write files to <code class=\"notranslate\">bytea</code> column with <code class=\"notranslate\">PreparedStatement</code>:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"File file = new File(&quot;myimage.gif&quot;);\ntry (FileInputStream fis = new FileInputStream(file);\n        PreparedStatement ps = conn.prepareStatement(&quot;INSERT INTO images VALUES (?, ?)&quot;); ) {\n    ps.setString(1, file.getName());\n    ps.setBinaryStream(2, fis, (int) file.length());  // &lt;-- setBinaryStream needed here\n    ps.executeUpdate();\n}\"><pre class=\"notranslate\"><span class=\"pl-smi\">File</span> <span class=\"pl-s1\">file</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">File</span>(<span class=\"pl-s\">\"myimage.gif\"</span>);\n<span class=\"pl-k\">try</span> (<span class=\"pl-smi\">FileInputStream</span> <span class=\"pl-s1\">fis</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">FileInputStream</span>(<span class=\"pl-s1\">file</span>);\n        <span class=\"pl-smi\">PreparedStatement</span> <span class=\"pl-s1\">ps</span> = <span class=\"pl-s1\">conn</span>.<span class=\"pl-en\">prepareStatement</span>(<span class=\"pl-s\">\"INSERT INTO images VALUES (?, ?)\"</span>); ) {\n    <span class=\"pl-s1\">ps</span>.<span class=\"pl-en\">setString</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-s1\">file</span>.<span class=\"pl-en\">getName</span>());\n    <span class=\"pl-s1\">ps</span>.<span class=\"pl-en\">setBinaryStream</span>(<span class=\"pl-c1\">2</span>, <span class=\"pl-s1\">fis</span>, (<span class=\"pl-smi\">int</span>) <span class=\"pl-s1\">file</span>.<span class=\"pl-en\">length</span>());  <span class=\"pl-c\">// &lt;-- setBinaryStream needed here</span>\n    <span class=\"pl-s1\">ps</span>.<span class=\"pl-en\">executeUpdate</span>();\n}</pre></div>\n<p dir=\"auto\">For the current version of <code class=\"notranslate\">JdbcClient</code> (6.1.1), <code class=\"notranslate\">StatementSpec.param()</code> does not support <code class=\"notranslate\">InputStream</code>. I have tried to open up underlying code and cannot find places where doing stream related code.</p>\n<p dir=\"auto\">Missing this feature, will prevent <code class=\"notranslate\">JdbcClient</code> to be used  when <code class=\"notranslate\">bytea</code> column exists.</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/32161",
                "createdAt": "2024-01-30T14:27:26Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: data"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: feedback-provided"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Add ThreadLocalAccessor for LocaleContext and RequestAttributes",
        "url": "https://github.com/spring-projects/spring-framework/pull/32243",
        "resourcePath": "/spring-projects/spring-framework/pull/32243",
        "createdAt": "2024-02-12T02:58:59Z",
        "number": 32243,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "framework-docs/modules/ROOT/pages/web/webmvc/mvc-ann-async.adoc"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context/spring-context.gradle"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-context/src/main/java/org/springframework/context/i18n/LocaleContextThreadLocalAccessor.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-context/src/test/java/org/springframework/context/i18n/LocaleContextThreadLocalAccessorTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/spring-web.gradle"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-web/src/main/java/org/springframework/web/context/request/RequestAttributesThreadLocalAccessor.java"
              }
            },
            {
              "node": {
                "changeType": "ADDED",
                "path": "spring-web/src/test/java/org/springframework/web/context/request/RequestAttributesThreadLocalAccessorTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5ml98T2gAoOTkxYjE2MTBjODA4ZTdkNjNhOWQzMzZlODc4OTI5NDJkNDgxNGU1Mg",
                "url": "https://github.com/spring-projects/spring-framework/pull/32243/commits/991b1610c808e7d63a9d336e87892942d4814e52"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 32112,
                "url": "https://github.com/spring-projects/spring-framework/issues/32112",
                "title": "ThreadLocalAccessor implementation for RequestAttributes and LocaleContext",
                "bodyHTML": "<p dir=\"auto\">In Spring MVC, objects like <code class=\"notranslate\">RequestAttributes</code> and <code class=\"notranslate\">LocaleContext</code> are stored in threadlocal(<code class=\"notranslate\">RequestContextHolder</code>, <code class=\"notranslate\">LocaleContextHolder</code>).</p>\n<p dir=\"auto\">To support propagation between threadlocal and reactor operation chain, e.g. using <code class=\"notranslate\">WebClient</code> in MVC, I have custom <code class=\"notranslate\">ThreadLocalAccessor</code>(from <a href=\"https://github.com/micrometer-metrics/context-propagation\">micrometer context-propagation</a>) implementations for them.<br>\nHowever, it would be more useful if Spring Framework provided them.</p>\n<p dir=\"auto\">Sample Implementations:</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class LocaleContextThreadLocalAccessor implements ThreadLocalAccessor&lt;LocaleContext&gt; {\n\n\tstatic final String KEY = &quot;my-locale-context&quot;;\n\n\t@Override\n\tpublic Object key() {\n\t\treturn KEY;\n\t}\n\n\t@Override\n\tpublic LocaleContext getValue() {\n\t\treturn LocaleContextHolder.getLocaleContext();\n\t}\n\n\t@Override\n\tpublic void setValue(LocaleContext value) {\n\t\tLocaleContextHolder.setLocaleContext(value);\n\t}\n\n\t@Override\n\tpublic void setValue() {\n\t\tLocaleContextHolder.resetLocaleContext();\n\t}\n\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">LocaleContextThreadLocalAccessor</span> <span class=\"pl-k\">implements</span> <span class=\"pl-smi\">ThreadLocalAccessor</span>&lt;<span class=\"pl-smi\">LocaleContext</span>&gt; {\n\n\t<span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">KEY</span> = <span class=\"pl-s\">\"my-locale-context\"</span>;\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">Object</span> <span class=\"pl-en\">key</span>() {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">KEY</span>;\n\t}\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">LocaleContext</span> <span class=\"pl-en\">getValue</span>() {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-smi\">LocaleContextHolder</span>.<span class=\"pl-en\">getLocaleContext</span>();\n\t}\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">setValue</span>(<span class=\"pl-smi\">LocaleContext</span> <span class=\"pl-s1\">value</span>) {\n\t\t<span class=\"pl-smi\">LocaleContextHolder</span>.<span class=\"pl-en\">setLocaleContext</span>(<span class=\"pl-s1\">value</span>);\n\t}\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">setValue</span>() {\n\t\t<span class=\"pl-smi\">LocaleContextHolder</span>.<span class=\"pl-en\">resetLocaleContext</span>();\n\t}\n\n}</pre></div>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"public class RequestAttributesThreadLocalAccessor implements ThreadLocalAccessor&lt;RequestAttributes&gt; {\n\n\tstatic final String KEY = &quot;my-request-attributes&quot;;\n\n\t@Override\n\tpublic Object key() {\n\t\treturn KEY;\n\t}\n\n\t@Override\n\tpublic RequestAttributes getValue() {\n\t\treturn RequestContextHolder.getRequestAttributes();\n\t}\n\n\t@Override\n\tpublic void setValue(RequestAttributes value) {\n\t\tRequestContextHolder.setRequestAttributes(value);\n\t}\n\n\t@Override\n\tpublic void setValue() {\n\t\tRequestContextHolder.resetRequestAttributes();\n\t}\n\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-smi\">RequestAttributesThreadLocalAccessor</span> <span class=\"pl-k\">implements</span> <span class=\"pl-smi\">ThreadLocalAccessor</span>&lt;<span class=\"pl-smi\">RequestAttributes</span>&gt; {\n\n\t<span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1\">KEY</span> = <span class=\"pl-s\">\"my-request-attributes\"</span>;\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">Object</span> <span class=\"pl-en\">key</span>() {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-c1\">KEY</span>;\n\t}\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">RequestAttributes</span> <span class=\"pl-en\">getValue</span>() {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-smi\">RequestContextHolder</span>.<span class=\"pl-en\">getRequestAttributes</span>();\n\t}\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">setValue</span>(<span class=\"pl-smi\">RequestAttributes</span> <span class=\"pl-s1\">value</span>) {\n\t\t<span class=\"pl-smi\">RequestContextHolder</span>.<span class=\"pl-en\">setRequestAttributes</span>(<span class=\"pl-s1\">value</span>);\n\t}\n\n\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">setValue</span>() {\n\t\t<span class=\"pl-smi\">RequestContextHolder</span>.<span class=\"pl-en\">resetRequestAttributes</span>();\n\t}\n\n}</pre></div>",
                "resourcePath": "/spring-projects/spring-framework/issues/32112",
                "createdAt": "2024-01-25T06:35:40Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Include default request options early on.",
        "url": "https://github.com/spring-projects/spring-framework/pull/32250",
        "resourcePath": "/spring-projects/spring-framework/pull/32250",
        "createdAt": "2024-02-12T20:39:04Z",
        "number": 32250,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/test/java/org/springframework/web/reactive/function/client/DefaultWebClientTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5mreLp2gAoZjhhOGU0YTI1Mjc1N2Q2ZGFmOTRlYzE4YWMwZTkzZGQ0MjFjZjU1OQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/32250/commits/f8a8e4a252757d6daf94ec18ac0e93dd421cf559"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 32053,
                "url": "https://github.com/spring-projects/spring-framework/issues/32053",
                "title": "WebClient and RestClient's defaultRequest(..) is not invoked early enough",
                "bodyHTML": "<h3 dir=\"auto\">Background</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"/**\n * Global option to specify a header to be added to every request,\n * if the request does not already contain such a header.\n */\nBuilder defaultHeader(String header, String... values);\"><pre class=\"notranslate\"><span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> * Global option to specify a header to be added to every request,</span>\n<span class=\"pl-c\"> * if the request does not already contain such a header.</span>\n<span class=\"pl-c\"> */</span>\n<span class=\"pl-smi\">Builder</span> <span class=\"pl-s1\">defaultHeader</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">header</span>, <span class=\"pl-smi\">String</span>... <span class=\"pl-s1\">values</span>);</pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">WebClient</code> and <code class=\"notranslate\">RestClient</code> have <code class=\"notranslate\">default[Header|Cookie|Request|..]</code> that useful to set <code class=\"notranslate\">default value</code> on request.</p>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/spring-projects/spring-framework/blob/899de4f3bfc373bdf1c0e67c7160331bd056825b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java#L502-L508\">spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 502 to 508\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/spring-projects/spring-framework/commit/899de4f3bfc373bdf1c0e67c7160331bd056825b\">899de4f</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L502\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"502\"></td>\n          <td id=\"LC502\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">private</span> <span class=\"pl-smi\">void</span> <span class=\"pl-en\">initHeaders</span>(<span class=\"pl-smi\">HttpHeaders</span> <span class=\"pl-s1\">out</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L503\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"503\"></td>\n          <td id=\"LC503\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-k\">if</span> (!<span class=\"pl-smi\">CollectionUtils</span>.<span class=\"pl-en\">isEmpty</span>(<span class=\"pl-s1\">defaultHeaders</span>)) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L504\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"504\"></td>\n          <td id=\"LC504\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">putAll</span>(<span class=\"pl-s1\">defaultHeaders</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L505\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"505\"></td>\n          <td id=\"LC505\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t} </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L506\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"506\"></td>\n          <td id=\"LC506\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-k\">if</span> (!<span class=\"pl-smi\">CollectionUtils</span>.<span class=\"pl-en\">isEmpty</span>(<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">headers</span>)) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L507\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"507\"></td>\n          <td id=\"LC507\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-s1\">out</span>.<span class=\"pl-en\">putAll</span>(<span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">headers</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L508\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"508\"></td>\n          <td id=\"LC508\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t} </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">As you can see above code, <code class=\"notranslate\">defaultHeader</code> value is set only when it's not contained in headers.</p>\n<h3 dir=\"auto\">Question</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"/**\n * Provide a consumer to customize every request being built.\n * @param defaultRequest the consumer to use for modifying requests\n */\nBuilder defaultRequest(Consumer&lt;RequestHeadersSpec&lt;?&gt;&gt; defaultRequest);\"><pre class=\"notranslate\"><span class=\"pl-c\">/**</span>\n<span class=\"pl-c\"> * Provide a consumer to customize every request being built.</span>\n<span class=\"pl-c\"> * @param defaultRequest the consumer to use for modifying requests</span>\n<span class=\"pl-c\"> */</span>\n<span class=\"pl-smi\">Builder</span> <span class=\"pl-s1\">defaultRequest</span>(<span class=\"pl-smi\">Consumer</span>&lt;<span class=\"pl-smi\">RequestHeadersSpec</span>&lt;?&gt;&gt; <span class=\"pl-s1\">defaultRequest</span>);</pre></div>\n<p dir=\"auto\"></p><div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/spring-projects/spring-framework/blob/899de4f3bfc373bdf1c0e67c7160331bd056825b/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java#L481-L484\">spring-framework/spring-webflux/src/main/java/org/springframework/web/reactive/function/client/DefaultWebClient.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 481 to 484\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha Link--inTextBlock\" href=\"/spring-projects/spring-framework/commit/899de4f3bfc373bdf1c0e67c7160331bd056825b\">899de4f</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L481\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"481\"></td>\n          <td id=\"LC481\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">private</span> <span class=\"pl-smi\">ClientRequest</span>.<span class=\"pl-smi\">Builder</span> <span class=\"pl-en\">initRequestBuilder</span>() { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L482\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"482\"></td>\n          <td id=\"LC482\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t<span class=\"pl-k\">if</span> (<span class=\"pl-s1\">defaultRequest</span> != <span class=\"pl-c1\">null</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L483\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"483\"></td>\n          <td id=\"LC483\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t\t<span class=\"pl-s1\">defaultRequest</span>.<span class=\"pl-en\">accept</span>(<span class=\"pl-smi\">this</span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L484\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"484\"></td>\n          <td id=\"LC484\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> \t} </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n<p></p>\n<p dir=\"auto\">But on <code class=\"notranslate\">defaultRequest(..)</code>, it can override request's values unlike <code class=\"notranslate\">defaultHeader</code> cause it's called on every request being built.</p>\n<h3 dir=\"auto\">Reproduce</h3>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// DefaultWebClientTests.java\n@Test\nvoid defaultRequest_override() {\n\tThreadLocal&lt;String&gt; context = new NamedThreadLocal&lt;&gt;(&quot;foo&quot;);\n\n\tWebClient client = this.builder\n\t\t\t.defaultRequest(spec -&gt; spec.accept(MediaType.APPLICATION_JSON)) // default\n\t\t\t.build();\n\n\tclient.get().uri(&quot;/path&quot;)\n\t\t\t.accept(MediaType.IMAGE_PNG) // set\n\t\t\t.retrieve().bodyToMono(Void.class).block(Duration.ofSeconds(10));\n\n\tClientRequest request = verifyAndGetRequest();\n\tassertThat(request.headers().getAccept()).isEqualTo(MediaType.IMAGE_PNG); // \u274cExpected: &lt;image/png&gt; but actual: &lt;application/json&gt;\n}\"><pre class=\"notranslate\"><span class=\"pl-c\">// DefaultWebClientTests.java</span>\n<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Test</span>\n<span class=\"pl-smi\">void</span> <span class=\"pl-s1\">defaultRequest_override</span>() {\n\t<span class=\"pl-smi\">ThreadLocal</span>&lt;<span class=\"pl-smi\">String</span>&gt; <span class=\"pl-s1\">context</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">NamedThreadLocal</span>&lt;&gt;(<span class=\"pl-s\">\"foo\"</span>);\n\n\t<span class=\"pl-smi\">WebClient</span> <span class=\"pl-s1\">client</span> = <span class=\"pl-smi\">this</span>.<span class=\"pl-s1\">builder</span>\n\t\t\t.<span class=\"pl-en\">defaultRequest</span>(<span class=\"pl-s1\">spec</span> -&gt; <span class=\"pl-s1\">spec</span>.<span class=\"pl-en\">accept</span>(<span class=\"pl-smi\">MediaType</span>.<span class=\"pl-c1\">APPLICATION_JSON</span>)) <span class=\"pl-c\">// default</span>\n\t\t\t.<span class=\"pl-en\">build</span>();\n\n\t<span class=\"pl-s1\">client</span>.<span class=\"pl-en\">get</span>().<span class=\"pl-en\">uri</span>(<span class=\"pl-s\">\"/path\"</span>)\n\t\t\t.<span class=\"pl-en\">accept</span>(<span class=\"pl-smi\">MediaType</span>.<span class=\"pl-c1\">IMAGE_PNG</span>) <span class=\"pl-c\">// set</span>\n\t\t\t.<span class=\"pl-en\">retrieve</span>().<span class=\"pl-en\">bodyToMono</span>(<span class=\"pl-smi\">Void</span>.<span class=\"pl-k\">class</span>).<span class=\"pl-en\">block</span>(<span class=\"pl-smi\">Duration</span>.<span class=\"pl-en\">ofSeconds</span>(<span class=\"pl-c1\">10</span>));\n\n\t<span class=\"pl-smi\">ClientRequest</span> <span class=\"pl-s1\">request</span> = <span class=\"pl-en\">verifyAndGetRequest</span>();\n\t<span class=\"pl-en\">assertThat</span>(<span class=\"pl-s1\">request</span>.<span class=\"pl-en\">headers</span>().<span class=\"pl-en\">getAccept</span>()).<span class=\"pl-en\">isEqualTo</span>(<span class=\"pl-smi\">MediaType</span>.<span class=\"pl-c1\">IMAGE_PNG</span>); <span class=\"pl-c\">// \u274cExpected: &lt;image/png&gt; but actual: &lt;application/json&gt;</span>\n}</pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/34854527/297810518-a2c71719-6699-41f3-a166-cbb49af9687f.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDUzMDksIm5iZiI6MTcxNDk0NTAwOSwicGF0aCI6Ii8zNDg1NDUyNy8yOTc4MTA1MTgtYTJjNzE3MTktNjY5OS00MWYzLWExNjYtY2JiNDlhZjk2ODdmLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIxMzY0OVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTAyOWRkNTI1MzIxOTQ3MTZjMjNiYWIyMDNhMjc3MDY3OWU1N2VjZWExNzQ1MDU5ZmQwOTQ5Mzk5MjMxNWJhZWImWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.IKG0EXgJSkuxdbQiA5mbPPkBEplJVSJHU3aMVeKPfrw\"><img src=\"https://private-user-images.githubusercontent.com/34854527/297810518-a2c71719-6699-41f3-a166-cbb49af9687f.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDUzMDksIm5iZiI6MTcxNDk0NTAwOSwicGF0aCI6Ii8zNDg1NDUyNy8yOTc4MTA1MTgtYTJjNzE3MTktNjY5OS00MWYzLWExNjYtY2JiNDlhZjk2ODdmLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIxMzY0OVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTAyOWRkNTI1MzIxOTQ3MTZjMjNiYWIyMDNhMjc3MDY3OWU1N2VjZWExNzQ1MDU5ZmQwOTQ5Mzk5MjMxNWJhZWImWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.IKG0EXgJSkuxdbQiA5mbPPkBEplJVSJHU3aMVeKPfrw\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">I think <code class=\"notranslate\">defaultRequest(spec -&gt; spec.accept(MEDIA_TYPE))</code> will override all media types that set by <code class=\"notranslate\">accept(..)</code> on this request.</p>\n<p dir=\"auto\">Q. is above behavior of <code class=\"notranslate\">defaultRequest(..)</code> is intended? thanks!</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/32053",
                "createdAt": "2024-01-18T16:27:52Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: bug"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Support binding indexed values for record class",
        "url": "https://github.com/spring-projects/spring-framework/pull/32386",
        "resourcePath": "/spring-projects/spring-framework/pull/32386",
        "createdAt": "2024-03-07T02:26:17Z",
        "number": 32386,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context/src/main/java/org/springframework/validation/DataBinder.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-context/src/test/java/org/springframework/validation/DataBinderConstructTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5o6OhA2gAoYWNmODY3ZjIwZjExNWFhMDA5NDI3MmVkMjEwOGYzMDZkODljNTg5YQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/32386/commits/acf867f20f115aa0094272ed2108f306d89c589a"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 32379,
                "url": "https://github.com/spring-projects/spring-framework/issues/32379",
                "title": "Nested record containing a query param of type List not being resolved correctly",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong> \\every version up to 3.3.0-SNAPSHOT (tested with both 3.2.3 and 3.3.0-SNAPSHOT)</p>\n<p dir=\"auto\">Hello!</p>\n<p dir=\"auto\">I came across an issue with nested records used as query parameters. Here is what my Controller looks like:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@RestController\n@RequestMapping(&quot;/api&quot;)\npublic class DemoController {\n\n    @GetMapping\n    public void test(RecordParamHolder paramHolder) {\n        System.out.println(&quot;Record: &quot; + paramHolder.recordParamName()); // not working when passing indexed param list\n        System.out.println(&quot;POJO: &quot; + paramHolder.pojoParamName()); // always working\n    }\n}\"><pre class=\"notranslate\"><code class=\"notranslate\">@RestController\n@RequestMapping(\"/api\")\npublic class DemoController {\n\n    @GetMapping\n    public void test(RecordParamHolder paramHolder) {\n        System.out.println(\"Record: \" + paramHolder.recordParamName()); // not working when passing indexed param list\n        System.out.println(\"POJO: \" + paramHolder.pojoParamName()); // always working\n    }\n}\n</code></pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">RecordParamHolder</code> looks like this (as the names state 1st one is a POJO and the 2nd one is a record):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"public record RecordParamHolder(\n        PojoListParam pojoParamName,\n        RecordListParam recordParamName\n) {}\"><pre class=\"notranslate\"><code class=\"notranslate\">public record RecordParamHolder(\n        PojoListParam pojoParamName,\n        RecordListParam recordParamName\n) {}\n</code></pre></div>\n<p dir=\"auto\">Both <code class=\"notranslate\">PojoListParam</code> and <code class=\"notranslate\">RecordListParam</code> contain one field of type <code class=\"notranslate\">List&lt;String&gt;</code>. And so when I try to pass a list of params like this: <code class=\"notranslate\">GET localhost:8080/api?recordParamName.in%5B0%5D=abc</code> (square brackets escaped) I see that the list is not being resolved and is <code class=\"notranslate\">NULL</code>. However, similar request works fine for nested POJO class \u2013 <code class=\"notranslate\">GET localhost:8080/api?pojoParamName.in%5B0%5D=abc</code>.</p>\n<p dir=\"auto\">I know that I can pass a list like this: <code class=\"notranslate\">paramName=value1,value2,etc.</code>, but this approach doesn't work when there is a comma in any of the values (see this issue for example <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1431906248\" data-permission-text=\"Title is private\" data-url=\"https://github.com/spring-projects/spring-framework/issues/29411\" data-hovercard-type=\"issue\" data-hovercard-url=\"/spring-projects/spring-framework/issues/29411/hovercard\" href=\"https://github.com/spring-projects/spring-framework/issues/29411\">#29411</a>). I know I can also pass it like this <code class=\"notranslate\">paramName=value1&amp;paramName=value2&amp;etc</code>, but I was told it's inconvenient to build such request from JavaScript because paramName is being overwritten and only the last one is passed.</p>\n<p dir=\"auto\">Anyway, I believe it should work properly for nested records just as it works for nested POJOs. Attaching a <a href=\"https://github.com/spring-projects/spring-framework/files/14500838/demo.zip\">Minimal Reproducible Example</a>.</p>\n<p dir=\"auto\">Thanks in advance!</p>",
                "resourcePath": "/spring-projects/spring-framework/issues/32379",
                "createdAt": "2024-03-05T20:31:16Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: core"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Allow UriTemplate to be built with an empty template",
        "url": "https://github.com/spring-projects/spring-framework/pull/32432",
        "resourcePath": "/spring-projects/spring-framework/pull/32432",
        "createdAt": "2024-03-13T09:25:48Z",
        "number": 32432,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/util/UriTemplate.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/java/org/springframework/web/util/UriTemplateTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5pepW-2gAoNWNmMzg0MjI4YjJlZTdmM2VjNmMzMTA1NDBiODM5ZjIxZjlkOWU5MQ",
                "url": "https://github.com/spring-projects/spring-framework/pull/32432/commits/5cf384228b2ee7f3ec6c310540b839f21f9d9e91"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 3201,
                "url": "https://github.com/spring-cloud/spring-cloud-gateway/issues/3201",
                "title": "Add support for empty path prefixes",
                "bodyHTML": "<p dir=\"auto\">If I set path prefixes dynamically using <code class=\"notranslate\">PrefixPathGatewayFilterFactory</code>, and one of them happens to be an empty string, I get an exception</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Caused by: java.lang.IllegalArgumentException: 'uriTemplate' must not be null\"><pre class=\"notranslate\"><code class=\"notranslate\">Caused by: java.lang.IllegalArgumentException: 'uriTemplate' must not be null\n</code></pre></div>\n<p dir=\"auto\">It's because its <code class=\"notranslate\">apply()</code> method calls the <code class=\"notranslate\">UriTemplate</code> constructor</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\t@Override\n\tpublic GatewayFilter apply(Config config) {\n\t\treturn new GatewayFilter() {\n\t\t\tfinal UriTemplate uriTemplate = new UriTemplate(config.prefix);\"><pre class=\"notranslate\">\t<span class=\"pl-c1\">@</span><span class=\"pl-c1\">Override</span>\n\t<span class=\"pl-k\">public</span> <span class=\"pl-smi\">GatewayFilter</span> <span class=\"pl-s1\">apply</span>(<span class=\"pl-smi\">Config</span> <span class=\"pl-s1\">config</span>) {\n\t\t<span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-s1\">GatewayFilter</span>() {\n\t\t\t<span class=\"pl-k\">final</span> <span class=\"pl-smi\">UriTemplate</span> <span class=\"pl-s1\">uriTemplate</span> = <span class=\"pl-k\">new</span> <span class=\"pl-smi\">UriTemplate</span>(<span class=\"pl-s1\">config</span>.<span class=\"pl-s1\">prefix</span>);</pre></div>\n<p dir=\"auto\">which in turn checks the prefix for emptiness (not just nullness, as the exception message suggests)</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\tpublic UriTemplate(String uriTemplate) {\n\t\tAssert.hasText(uriTemplate, &quot;'uriTemplate' must not be null&quot;);\"><pre class=\"notranslate\">\t<span class=\"pl-k\">public</span> <span class=\"pl-s1\">UriTemplate</span>(<span class=\"pl-smi\">String</span> <span class=\"pl-s1\">uriTemplate</span>) {\n\t\t<span class=\"pl-smi\">Assert</span>.<span class=\"pl-en\">hasText</span>(<span class=\"pl-s1\">uriTemplate</span>, <span class=\"pl-s\">\"'uriTemplate' must not be null\"</span>);</pre></div>\n<p dir=\"auto\">It's super-easy to fix: simply replace</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Assert.hasText(uriTemplate, &quot;'uriTemplate' must not be null&quot;);\"><pre class=\"notranslate\"><span class=\"pl-smi\">Assert</span>.<span class=\"pl-en\">hasText</span>(<span class=\"pl-s1\">uriTemplate</span>, <span class=\"pl-s\">\"'uriTemplate' must not be null\"</span>);</pre></div>\n<p dir=\"auto\">with</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Assert.notNull(uriTemplate, &quot;'uriTemplate' must not be null&quot;);\"><pre class=\"notranslate\"><span class=\"pl-smi\">Assert</span>.<span class=\"pl-en\">notNull</span>(<span class=\"pl-s1\">uriTemplate</span>, <span class=\"pl-s\">\"'uriTemplate' must not be null\"</span>);</pre></div>\n<p dir=\"auto\">I want to point out that <code class=\"notranslate\">RewritePathGatewayFilterFactory</code> <em>does</em> support empty replacements, for example</p>\n<p dir=\"auto\">My Spring Cloud version is 2023.0.0, Spring Boot is at 3.2.1</p>",
                "resourcePath": "/spring-cloud/spring-cloud-gateway/issues/3201",
                "createdAt": "2023-12-29T14:27:56Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "help wanted"
                      }
                    },
                    {
                      "node": {
                        "name": "good first issue"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  },
  {
    "repository": {
      "pullRequest": {
        "title": "Resolve property-dependent parameter names for exception messages",
        "url": "https://github.com/spring-projects/spring-framework/pull/32462",
        "resourcePath": "/spring-projects/spring-framework/pull/32462",
        "createdAt": "2024-03-16T11:39:04Z",
        "number": 32462,
        "mergeCommit": null,
        "potentialMergeCommit": null,
        "files": {
          "edges": [
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/reactive/AbstractNamedValueMethodArgumentResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-messaging/src/main/java/org/springframework/messaging/handler/annotation/support/AbstractNamedValueMethodArgumentResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-messaging/src/test/java/org/springframework/messaging/handler/annotation/reactive/HeaderMethodArgumentResolverTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-messaging/src/test/java/org/springframework/messaging/handler/annotation/support/HeaderMethodArgumentResolverTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/main/java/org/springframework/web/method/annotation/AbstractNamedValueMethodArgumentResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/java/org/springframework/web/method/annotation/RequestHeaderMethodArgumentResolverTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-web/src/test/java/org/springframework/web/method/annotation/RequestParamMethodArgumentResolverTests.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/main/java/org/springframework/web/reactive/result/method/annotation/AbstractNamedValueArgumentResolver.java"
              }
            },
            {
              "node": {
                "changeType": "MODIFIED",
                "path": "spring-webflux/src/test/java/org/springframework/web/reactive/result/method/annotation/RequestHeaderMethodArgumentResolverTests.java"
              }
            }
          ]
        },
        "commits": {
          "edges": [
            {
              "node": {
                "id": "PURC_lADOABGHUc5p0oiA2gAoOWZiMWMzNGY1YzMyOWY5MmU4ZGMwMmZkZDBlOWRjM2JjZWNhMTE5Yg",
                "url": "https://github.com/spring-projects/spring-framework/pull/32462/commits/9fb1c34f5c329f92e8dc02fdd0e9dc3bceca119b"
              }
            }
          ]
        },
        "closingIssuesReferences": {
          "edges": [
            {
              "node": {
                "number": 32323,
                "url": "https://github.com/spring-projects/spring-framework/issues/32323",
                "title": "Property dependent `@RequestParam` parameters are not resolved on bad request",
                "bodyHTML": "<p dir=\"auto\"><strong>Affects:</strong> \\3.2.2</p>\n<hr>\n<p dir=\"auto\">I came across this issue a while ago and since I can't find it anywhere nor create an easy workaround, I create this issue.</p>\n<p dir=\"auto\">A bit of context first :<br>\nI created my own fully customizable authentication service built over spring, and on the controller, I have the following method :</p>\n<div class=\"highlight highlight-source-java notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@PostMapping(&quot;${security.authentication.log-in.mapping}&quot;)\npublic ResponseEntity&lt;Void&gt; handleLogIn(@RequestParam(&quot;${security.authentication.identifier.parameter.name}&quot;) String identifier,\n                                        @RequestParam(&quot;${security.authentication.raw-password.parameter.name}&quot;) String rawPassword) {\n    //My authentication logic\n}\"><pre class=\"notranslate\"><span class=\"pl-c1\">@</span><span class=\"pl-c1\">PostMapping</span>(<span class=\"pl-s\">\"${security.authentication.log-in.mapping}\"</span>)\n<span class=\"pl-k\">public</span> <span class=\"pl-smi\">ResponseEntity</span>&lt;<span class=\"pl-smi\">Void</span>&gt; <span class=\"pl-s1\">handleLogIn</span>(<span class=\"pl-c1\">@</span><span class=\"pl-c1\">RequestParam</span>(<span class=\"pl-s\">\"${security.authentication.identifier.parameter.name}\"</span>) <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">identifier</span>,\n                                        <span class=\"pl-c1\">@</span><span class=\"pl-c1\">RequestParam</span>(<span class=\"pl-s\">\"${security.authentication.raw-password.parameter.name}\"</span>) <span class=\"pl-smi\">String</span> <span class=\"pl-s1\">rawPassword</span>) {\n    <span class=\"pl-c\">//My authentication logic</span>\n}</pre></div>\n<p dir=\"auto\">With the following properties :</p>\n<div class=\"highlight highlight-source-ini notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"security.authentication.log-in.mapping=logIn\nsecurity.authentication.identifier.parameter.name=username\nsecurity.authentication.raw-password.parameter.name=password\n\"><pre class=\"notranslate\"><span class=\"pl-k\">security.authentication.log-in.mapping</span>=logIn\n<span class=\"pl-k\">security.authentication.identifier.parameter.name</span>=username\n<span class=\"pl-k\">security.authentication.raw-password.parameter.name</span>=password\n</pre></div>\n<p dir=\"auto\">The references to the properties are resolved as expected during normal situations, thus allowing me to fully customize the authentication endpoint mapping and parameter names.</p>\n<p dir=\"auto\">However, if one of the property is misspelled or missing, The default error message of the BAD_REQUEST response does not resolve the property see the image below (mispelling <strong>usernam</strong> on purpose) :<br>\nAfter sending the following POST request <code class=\"notranslate\">http://localhost:443/authentication/logIn?usernam=user&amp;password=pwd</code><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/56626948/307360249-061d207f-88df-43d5-8a01-c4f5069622b1.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDU1ODYsIm5iZiI6MTcxNDk0NTI4NiwicGF0aCI6Ii81NjYyNjk0OC8zMDczNjAyNDktMDYxZDIwN2YtODhkZi00M2Q1LThhMDEtYzRmNTA2OTYyMmIxLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIxNDEyNlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTM4MzU2ZTJmNGUxMTNiNDIwOGI0ZTkxODY1MTg0YmVmZjkxYzYzY2ZhNmE5YWI3NjMwNzAyMzNlNWNjYTdhYzQmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.VK3t5c7mEDf2wS4Yzp1ZfVj_bwpolhUtRaOMo-e-f7g\"><img src=\"https://private-user-images.githubusercontent.com/56626948/307360249-061d207f-88df-43d5-8a01-c4f5069622b1.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ5NDU1ODYsIm5iZiI6MTcxNDk0NTI4NiwicGF0aCI6Ii81NjYyNjk0OC8zMDczNjAyNDktMDYxZDIwN2YtODhkZi00M2Q1LThhMDEtYzRmNTA2OTYyMmIxLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA1MDUlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNTA1VDIxNDEyNlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTM4MzU2ZTJmNGUxMTNiNDIwOGI0ZTkxODY1MTg0YmVmZjkxYzYzY2ZhNmE5YWI3NjMwNzAyMzNlNWNjYTdhYzQmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.VK3t5c7mEDf2wS4Yzp1ZfVj_bwpolhUtRaOMo-e-f7g\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">The expected message would be <code class=\"notranslate\">\"Required parameter 'username' is not present.\"</code></p>",
                "resourcePath": "/spring-projects/spring-framework/issues/32323",
                "createdAt": "2024-02-23T14:51:02Z",
                "labels": {
                  "edges": [
                    {
                      "node": {
                        "name": "in: messaging"
                      }
                    },
                    {
                      "node": {
                        "name": "in: web"
                      }
                    },
                    {
                      "node": {
                        "name": "type: enhancement"
                      }
                    },
                    {
                      "node": {
                        "name": "status: superseded"
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      }
    }
  }
]