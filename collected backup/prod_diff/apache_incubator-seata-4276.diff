diff --git a/saga/seata-saga-engine/src/main/java/io/seata/saga/engine/invoker/impl/SpringBeanServiceInvoker.java b/saga/seata-saga-engine/src/main/java/io/seata/saga/engine/invoker/impl/SpringBeanServiceInvoker.java
index 38754430e..9f4908a8b 100644
--- a/saga/seata-saga-engine/src/main/java/io/seata/saga/engine/invoker/impl/SpringBeanServiceInvoker.java
+++ b/saga/seata-saga-engine/src/main/java/io/seata/saga/engine/invoker/impl/SpringBeanServiceInvoker.java
@@ -286,27 +286,23 @@ public class SpringBeanServiceInvoker implements ServiceInvoker, ApplicationCont
         }
     }
 
-    protected Object toJavaObject(Object value, Class<?> paramType) {
+    protected Object toJavaObject(Object value, Class paramType) {
         if (value == null) {
             return value;
         }
 
-        if (value instanceof Map || value instanceof List) {
-            return jsonParseToJavaObject(value, paramType);
-        } else if (paramType.isAssignableFrom(value.getClass()) || isPrimitive(paramType)) {
+        if (paramType.isAssignableFrom(value.getClass())) {
+            return value;
+        } else if (isPrimitive(paramType)) {
             return value;
         } else {
-            return jsonParseToJavaObject(value, paramType);
-        }
-    }
-
-    protected Object jsonParseToJavaObject(Object value, Class<?> paramType) {
-        JsonParser jsonParser = JsonParserFactory.getJsonParser(getSagaJsonParser());
-        if (jsonParser == null) {
-            throw new RuntimeException("Cannot get JsonParser by name : " + getSagaJsonParser());
+            JsonParser jsonParser = JsonParserFactory.getJsonParser(getSagaJsonParser());
+            if (jsonParser == null) {
+                throw new RuntimeException("Cannot get JsonParser by name : " + getSagaJsonParser());
+            }
+            String jsonValue = jsonParser.toJsonString(value, true, false);
+            return jsonParser.parse(jsonValue, paramType, false);
         }
-        String jsonValue = jsonParser.toJsonString(value, true, false);
-        return jsonParser.parse(jsonValue, paramType, false);
     }
 
     protected boolean isPrimitive(Class<?> clazz) {
diff --git a/saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/parser/impl/FastjsonParser.java b/saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/parser/impl/FastjsonParser.java
index 59e8b998d..b7ccfb35a 100644
--- a/saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/parser/impl/FastjsonParser.java
+++ b/saga/seata-saga-statelang/src/main/java/io/seata/saga/statelang/parser/impl/FastjsonParser.java
@@ -80,7 +80,7 @@ public class FastjsonParser implements JsonParser {
     @Override
     public <T> T parse(String json, Class<T> type, boolean ignoreAutoType) {
         if (ignoreAutoType) {
-            return JSON.parseObject(json, type, Feature.DisableSpecialKeyDetect, Feature.OrderedField);
+            return JSON.parseObject(json, type, Feature.IgnoreAutoType, Feature.OrderedField);
         }
         else {
             return JSON.parseObject(json, type, Feature.SupportAutoType, Feature.OrderedField);
